

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 16 01:09:54 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=2
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=2
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=2
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=2
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=2
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=2
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=2
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=2
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1,inline
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1,inline
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=2
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=2
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1,group=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=4,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=4,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=4,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1,group=1
   226                           	psect	text202,global,reloc=4,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=4,class=CODE,delta=1
   230                           	psect	text206,global,reloc=4,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=4,class=CODE,delta=1
   235                           	psect	text211,global,reloc=4,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=4,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=4,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=4,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=2,class=CODE,delta=1
   244                           	psect	text220,global,reloc=4,class=CODE,delta=1
   245                           	psect	text221,global,reloc=4,class=CODE,delta=1
   246                           	psect	text222,global,reloc=4,class=CODE,delta=1
   247                           	psect	text223,global,reloc=4,class=CODE,delta=1
   248                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   249                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   250                           	psect	text224,global,reloc=4,class=CODE,delta=1
   251                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   252                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   253  0000                     
   254                           ; Version 2.10
   255                           ; Generated 31/07/2019 GMT
   256                           ; 
   257                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   258                           ; All rights reserved.
   259                           ; 
   260                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   261                           ; 
   262                           ; Redistribution and use in source and binary forms, with or without modification, are
   263                           ; permitted provided that the following conditions are met:
   264                           ; 
   265                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   266                           ;        conditions and the following disclaimer.
   267                           ; 
   268                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   269                           ;        of conditions and the following disclaimer in the documentation and/or other
   270                           ;        materials provided with the distribution.
   271                           ; 
   272                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   273                           ;        software without specific prior written permission.
   274                           ; 
   275                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   276                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   277                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   278                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   279                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   280                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   281                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   282                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   283                           ; 
   284                           ; 
   285                           ; Code-generator required, PIC18F57K42 Definitions
   286                           ; 
   287                           ; SFR Addresses
   288  0000                     
   289 ;;_main$4030	offset	0
   290 ;;_main$4026	offset	2
   291 ;;_esr_temp	offset	4
   292 ;;_i_esr	offset	8
   293 ;;_shape	offset	10
   294 ;;_inp_index	offset	11
   295 ;;_k	offset	12
   296 ;;_j	offset	13
   297 ;;_i	offset	14
   298 ;;_mode	offset	15
   299 ;;_i_ror	offset	16
   300 ;;_mode	offset=-1 (param)
   301 ;;_hist	offset=-3 (param)
   302 ;;_s	offset=-2 (param)
   303 ;;_voltage	offset=-4 (param)
   304 ;;_voltage	offset=-4 (param)
   305 ;;_voltage	offset=-4 (param)
   306 ;;_set	offset=-1 (param)
   307 ;;_x	offset	0
   308 ;;_r_cal_ptr	offset	2
   309 ;;_y	offset	4
   310 ;;_crcVal_save	offset	6
   311 ;;_bAdd	offset=-2 (param)
   312 ;;_data	offset=-1 (param)
   313 ;;_cmd	offset=-1 (param)
   314 ;;_cmd	offset=-1 (param)
   315 ;;_data	offset=-1 (param)
   316 ;;__this	offset=-2 (param)
   317 ;;_soc	offset	0
   318 ;;_slot	offset	2
   319 ;;_cvoltage	offset=-4 (param)
   320 ;;_h	offset=-2 (param)
   321 ;;_h	offset=-2 (param)
   322 ;;_fsm	offset=-1 (param)
   323 ;;_mode	offset=-1 (param)
   324 ;;_mode	offset=-1 (param)
   325 ;;_cmd	offset=-1 (param)
   326 ;;_clock	offset	0
   327 ;;_t	offset=-8 (param)
   328 ;;_t	offset=-2 (param)
   329 ;;_t	offset=-2 (param)
   330 ;;_tm	offset=-4 (param)
   331 ;;_y	offset	0
   332 ;;_t1	offset	8
   333 ;;_t0	offset	16
   334 ;;_t	offset=-8 (param)
   335 ;;_local	offset=-10 (param)
   336 ;;_isdst	offset=-12 (param)
   337 ;;_offset	offset=-14 (param)
   338 ;;_oppoff	offset=-16 (param)
   339 ;;_zonename	offset=-18 (param)
   340 ;;_t	offset=-8 (param)
   341 ;;_local	offset=-10 (param)
   342 ;;_alt	offset=-12 (param)
   343 ;;_z	offset=-2 (param)
   344 ;;_days	offset	0
   345 ;;_wday	offset	2
   346 ;;_t	offset	4
   347 ;;_is_leap	offset	12
   348 ;;_n	offset	14
   349 ;;_x	offset	16
   350 ;;_m	offset	18
   351 ;;_d	offset	20
   352 ;;_rule	offset=-6 (param)
   353 ;;_year	offset=-8 (param)
   354 ;;_m	offset=-2 (param)
   355 ;;_is_leap	offset=-4 (param)
   356 ;;_y	offset	0
   357 ;;_leaps	offset	2
   358 ;;_rem	offset	4
   359 ;;F5	offset	6
   360 ;;_centuries	offset	8
   361 ;;_leaps	offset	10
   362 ;;_cycles	offset	12
   363 ;;_year	offset=-8 (param)
   364 ;;_is_leap	offset=-10 (param)
   365 ;;_t	offset	0
   366 ;;_month	offset=-2 (param)
   367 ;;_is_leap	offset=-4 (param)
   368 ;;_s	offset	0
   369 ;;_r	offset	0
   370 ;;_p	offset=-2 (param)
   371 ;;_rule	offset=-4 (param)
   372 ;;_off	offset	0
   373 ;;_neg	offset	2
   374 ;;_p	offset=-2 (param)
   375 ;;_x	offset	0
   376 ;;_p	offset=-2 (param)
   377 ;;_i	offset	0
   378 ;;_d	offset=-2 (param)
   379 ;;_p	offset=-4 (param)
   380 ;;___secs_to_tm$7858	offset	0
   381 ;;_years	offset	1
   382 ;;_days	offset	9
   383 ;;_secs	offset	17
   384 ;;_remdays	offset	25
   385 ;;_q_cycles	offset	29
   386 ;;_c_cycles	offset	33
   387 ;;_remyears	offset	37
   388 ;;_remsecs	offset	41
   389 ;;_qc_cycles	offset	45
   390 ;;_months	offset	49
   391 ;;_leap	offset	51
   392 ;;_yday	offset	53
   393 ;;_wday	offset	55
   394 ;;_t	offset=-8 (param)
   395 ;;_tm	offset=-10 (param)
   396 ;;_product	offset	0
   397 ;;_multiplier	offset=-8 (param)
   398 ;;_multiplicand	offset=-16 (param)
   399 ;;_product	offset	0
   400 ;;_multiplier	offset=-4 (param)
   401 ;;_multiplicand	offset=-8 (param)
   402 ;;_sign	offset	0
   403 ;;_counter	offset	1
   404 ;;_dividend	offset=-4 (param)
   405 ;;_divisor	offset=-8 (param)
   406 ;;_quotient	offset	0
   407 ;;_sign	offset	4
   408 ;;_counter	offset	5
   409 ;;_dividend	offset=-4 (param)
   410 ;;_divisor	offset=-8 (param)
   411 ;;_cp	offset	0
   412 ;;_s	offset	2
   413 ;;_tim	offset=-2 (param)
   414 ;;_cp	offset=-2 (param)
   415 ;;_i	offset=-3 (param)
   416 ;;_cl	offset=-4 (param)
   417 ;;_ct	offset=-5 (param)
   418 ;;_rem	offset	0
   419 ;;_counter	offset	1
   420 ;;_dividend	offset=-1 (param)
   421 ;;_divisor	offset=-2 (param)
   422 ;;_cp	offset	0
   423 ;;_cb	offset	4
   424 ;;_x	offset	8
   425 ;;_x	offset	0
   426 ;;_r_cal_ptr	offset	2
   427 ;;_y	offset	4
   428 ;;_crcVal	offset	6
   429 ;;_GIEBitValue	offset	0
   430 ;;_bAdd	offset=-2 (param)
   431 ;;_bData	offset=-3 (param)
   432 ;;_result	offset	0
   433 ;;_mask	offset	2
   434 ;;_reverse	offset=-1 (param)
   435 ;;_xorValue	offset=-3 (param)
   436 ;;_mask	offset	0
   437 ;;_reverse	offset	2
   438 ;;_crc	offset=-2 (param)
   439 ;;_data	offset=-1 (param)
   440 ;;_channel	offset=-1 (param)
   441 ;;_c	offset	0
   442 ;;_shape	offset=-1 (param)
   443 ;;_reset	offset=-2 (param)
   444 ;;_i	offset=-1 (param)
   445 ;;_mode	offset=-1 (param)
   446 ;;_cb	offset=-3 (param)
   447 ;;_cp	offset=-5 (param)
   448 ;;_value	offset=-2 (param)
   449 ;;_window	offset=-4 (param)
   450 ;;_standard	offset=-6 (param)
   451 ;;_i	offset	0
   452 ;;_h	offset=-2 (param)
   453 ;;_flipper	offset=-1 (param)
   454 ;;_f	offset	0
   455 ;;_ap	offset	6
   456 ;;_s	offset=-3 (param)
   457 ;;_fmt	offset=-5 (param)
   458 ;;_line	offset=-1 (param)
   459 ;;_vterm	offset=-2 (param)
   460 ;;_numMilliseconds	offset=-2 (param)
   461 ;;_vterm	offset=-1 (param)
   462 ;;_row	offset	0
   463 ;;_r	offset=-1 (param)
   464 ;;_c	offset=-2 (param)
   465 ;;_strPtr	offset=-4 (param)
   466 ;;_strPtr	offset=-1 (param)
   467 ;;_delay	offset=-4 (param)
   468 ;;_strPtr	offset=-1 (param)
   469 ;;_strPtr	offset=-2 (param)
   470 ;;__this	offset=-2 (param)
   471 ;;_clearBuffer	offset=-3 (param)
   472 ;;_s	offset	0
   473 ;;_k	offset	2
   474 ;;_dest	offset=-2 (param)
   475 ;;_c	offset=-4 (param)
   476 ;;_n	offset=-6 (param)
   477 ;;_ap	offset	0
   478 ;;_fmt	offset=-3 (param)
   479 ;;_cfmt	offset	0
   480 ;;_fp	offset=-2 (param)
   481 ;;_fmt	offset=-4 (param)
   482 ;;_ap	offset=-6 (param)
   483 ;;_vfpfcnvrt$6899	offset	0
   484 ;;_vfpfcnvrt$6910	offset	2
   485 ;;_vfpfcnvrt$6898	offset	4
   486 ;;_llu	offset	6
   487 ;;_ll	offset	14
   488 ;;_f	offset	22
   489 ;;_ct	offset	26
   490 ;;_cp	offset	29
   491 ;;_c	offset	31
   492 ;;_fp	offset=-2 (param)
   493 ;;_fmt	offset=-4 (param)
   494 ;;_ap	offset=-6 (param)
   495 ;;_xtoa$6884	offset	0
   496 ;;_xtoa$6883	offset	2
   497 ;;_n	offset	4
   498 ;;_c	offset	12
   499 ;;_i	offset	14
   500 ;;_w	offset	16
   501 ;;_p	offset	18
   502 ;;_fp	offset=-2 (param)
   503 ;;_d	offset=-10 (param)
   504 ;;_x	offset=-11 (param)
   505 ;;_toupper$7825	offset	0
   506 ;;_c	offset=-2 (param)
   507 ;;_c	offset=-2 (param)
   508 ;;_c	offset=-2 (param)
   509 ;;_n	offset	0
   510 ;;_i	offset	8
   511 ;;_w	offset	10
   512 ;;_p	offset	12
   513 ;;_fp	offset=-2 (param)
   514 ;;_d	offset=-10 (param)
   515 ;;_counter	offset	0
   516 ;;_dividend	offset=-8 (param)
   517 ;;_divisor	offset=-16 (param)
   518 ;;_quotient	offset	0
   519 ;;_counter	offset	8
   520 ;;_dividend	offset=-8 (param)
   521 ;;_divisor	offset=-16 (param)
   522 ;;_r	offset	0
   523 ;;_l	offset	2
   524 ;;__l	offset=-2 (param)
   525 ;;__r	offset=-4 (param)
   526 ;;_n	offset=-6 (param)
   527 ;;_nuls	offset	0
   528 ;;_l	offset	7
   529 ;;_p	offset	9
   530 ;;_cp	offset	11
   531 ;;_w	offset	13
   532 ;;_i	offset	15
   533 ;;_fp	offset=-2 (param)
   534 ;;_s	offset=-4 (param)
   535 ;;_efgtoa$6856	offset	0
   536 ;;_efgtoa$6855	offset	2
   537 ;;_efgtoa$6854	offset	4
   538 ;;_efgtoa$6850	offset	6
   539 ;;_efgtoa$6846	offset	8
   540 ;;_efgtoa$6845	offset	10
   541 ;;_u	offset	12
   542 ;;_g	offset	16
   543 ;;_l	offset	20
   544 ;;_h	offset	24
   545 ;;_ou	offset	28
   546 ;;_n	offset	32
   547 ;;_e	offset	34
   548 ;;_i	offset	36
   549 ;;_w	offset	38
   550 ;;_p	offset	40
   551 ;;_sign	offset	42
   552 ;;_d	offset	44
   553 ;;_ne	offset	46
   554 ;;_m	offset	48
   555 ;;_pp	offset	50
   556 ;;_t	offset	52
   557 ;;_mode	offset	54
   558 ;;_nmode	offset	55
   559 ;;_fp	offset=-2 (param)
   560 ;;_f	offset=-6 (param)
   561 ;;_c	offset=-7 (param)
   562 ;;_tolower$7810	offset	0
   563 ;;_c	offset=-2 (param)
   564 ;;_c	offset=-2 (param)
   565 ;;_d	offset	0
   566 ;;_s	offset	2
   567 ;;_dest	offset=-2 (param)
   568 ;;_src	offset=-4 (param)
   569 ;;_u	offset	0
   570 ;;_m	offset	4
   571 ;;_e	offset	8
   572 ;;_x	offset=-4 (param)
   573 ;;_u	offset	0
   574 ;;_e	offset	4
   575 ;;_x	offset=-4 (param)
   576 ;;_exp1	offset	0
   577 ;;_sign1	offset	1
   578 ;;_f1	offset=-4 (param)
   579 ;;_f1	offset=-4 (param)
   580 ;;_ff1	offset=-4 (param)
   581 ;;_ff2	offset=-8 (param)
   582 ;;_sign	offset	0
   583 ;;_counter	offset	1
   584 ;;_dividend	offset=-2 (param)
   585 ;;_divisor	offset=-4 (param)
   586 ;;_quotient	offset	0
   587 ;;_sign	offset	2
   588 ;;_counter	offset	3
   589 ;;_dividend	offset=-2 (param)
   590 ;;_divisor	offset=-4 (param)
   591 ;;_dtoa$6822	offset	0
   592 ;;_n	offset	2
   593 ;;_i	offset	10
   594 ;;_s	offset	12
   595 ;;_w	offset	14
   596 ;;_p	offset	16
   597 ;;_fp	offset=-2 (param)
   598 ;;_d	offset=-10 (param)
   599 ;;_a	offset=-2 (param)
   600 ;;_sign	offset	0
   601 ;;_counter	offset	1
   602 ;;_dividend	offset=-8 (param)
   603 ;;_divisor	offset=-16 (param)
   604 ;;_quotient	offset	0
   605 ;;_sign	offset	8
   606 ;;_counter	offset	9
   607 ;;_dividend	offset=-8 (param)
   608 ;;_divisor	offset=-16 (param)
   609 ;;_w	offset	0
   610 ;;_fp	offset=-2 (param)
   611 ;;_c	offset=-3 (param)
   612 ;;_w	offset	0
   613 ;;_i	offset	2
   614 ;;_fp	offset=-2 (param)
   615 ;;_buf	offset=-4 (param)
   616 ;;_p	offset=-6 (param)
   617 ;;_a	offset	0
   618 ;;_s	offset=-2 (param)
   619 ;;_i	offset	0
   620 ;;_c	offset	2
   621 ;;_s	offset=-2 (param)
   622 ;;_fp	offset=-4 (param)
   623 ;;_c	offset=-2 (param)
   624 ;;_fp	offset=-4 (param)
   625 ;;_c	offset=-1 (param)
   626 ;;__this	offset=-2 (param)
   627 ;;_c	offset=-3 (param)
   628 ;;_atoi$7442	offset	0
   629 ;;_atoi$7440	offset	2
   630 ;;_atoi$7441	offset	4
   631 ;;_n	offset	5
   632 ;;_neg	offset	7
   633 ;;_s	offset=-2 (param)
   634 ;;_isspace$7491	offset	0
   635 ;;_c	offset=-2 (param)
   636 ;;_c	offset=-2 (param)
   637 ;;_vterm	offset=-1 (param)
   638 ;;_new_response_info	offset=-1 (param)
   639 ;;_new_response_info	offset=-1 (param)
   640 ;;_level	offset=-2 (param)
   641 ;;_dutyValue	offset=-2 (param)
   642 ;;_timer	offset=-1 (param)
   643 ;;_timer	offset=-1 (param)
   644 ;;_count	offset=-3 (param)
   645 ;;_h	offset=-2 (param)
   646 ;;_u	offset	0
   647 ;;_x	offset=-4 (param)
   648 ;;_chan	offset=-1 (param)
   649 ;;_to_what	offset=-2 (param)
   650 ;;_u	offset	0
   651 ;;_s	offset=-2 (param)
   652 ;;_index	offset=-1 (param)
   653 ;;_arg	offset	0
   654 ;;_exp	offset	4
   655 ;;_sign	offset=-1 (param)
   656 ;;_val	offset=-5 (param)
   657 ;;_grs	offset	0
   658 ;;_rem	offset	4
   659 ;;_new_exp	offset	8
   660 ;;_aexp	offset	10
   661 ;;_bexp	offset	11
   662 ;;_sign	offset	12
   663 ;;_b	offset=-4 (param)
   664 ;;_a	offset=-8 (param)
   665 ;;_ff1	offset=-4 (param)
   666 ;;_ff2	offset=-8 (param)
   667 ;;_lp_speed	offset	0
   668 ;;_new	offset=-4 (param)
   669 ;;_bn	offset=-5 (param)
   670 ;;_slow	offset=-6 (param)
   671 ;;_b	offset=-4 (param)
   672 ;;_a	offset=-8 (param)
   673 ;;_grs	offset	0
   674 ;;_bexp	offset	1
   675 ;;_aexp	offset	2
   676 ;;_signs	offset	3
   677 ;;_b	offset=-4 (param)
   678 ;;_a	offset=-8 (param)
   679 ;;_prod	offset	0
   680 ;;_grs	offset	4
   681 ;;_temp	offset	8
   682 ;;_bexp	offset	10
   683 ;;_aexp	offset	11
   684 ;;_sign	offset	12
   685 ;;_b	offset=-4 (param)
   686 ;;_a	offset=-8 (param)
   687 ;;_InterruptHandler	offset=-3 (param)
   688 ;;_InterruptHandler	offset=-3 (param)
   689 ;;_InterruptHandler	offset=-3 (param)
   690 ;;_InterruptHandler	offset=-3 (param)
   691 ;;_InterruptHandler	offset=-3 (param)
   692 ;;_InterruptHandler	offset=-3 (param)
   693 ;;_state	offset	0
   694 ;;_InterruptHandler	offset=-3 (param)
   695 ;;_InterruptHandler	offset=-3 (param)
   696 ;;_seed	offset	0
   697 ;;_poly	offset	2
   698 ;;_InterruptHandler	offset=-3 (param)
   699 ;;_InterruptHandler	offset=-3 (param)
   700 ;;_i	offset	0
   701 ;;_sw_value	offset	1
   702 ;;_timerVal	offset=-2 (param)
   703 ;;_light	offset	0
   704 ;;_mode	offset=-1 (param)
   705 ;;_chan	offset=-1 (param)
   706 ;;_to_what	offset=-2 (param)
   707 ;;_u	offset	0
   708 ;;_s	offset=-2 (param)
   709 ;;_index	offset=-1 (param)
   710 ;;_arg	offset	0
   711 ;;_exp	offset	4
   712 ;;_sign	offset=-1 (param)
   713 ;;_val	offset=-5 (param)
   714 ;;_b	offset=-4 (param)
   715 ;;_a	offset=-8 (param)
   716 ;;_grs	offset	0
   717 ;;_bexp	offset	1
   718 ;;_aexp	offset	2
   719 ;;_signs	offset	3
   720 ;;_b	offset=-4 (param)
   721 ;;_a	offset=-8 (param)
   722 ;;_prod	offset	0
   723 ;;_grs	offset	4
   724 ;;_temp	offset	8
   725 ;;_bexp	offset	10
   726 ;;_aexp	offset	11
   727 ;;_sign	offset	12
   728 ;;_b	offset=-4 (param)
   729 ;;_a	offset=-8 (param)
   730 ;;_grs	offset	0
   731 ;;_rem	offset	4
   732 ;;_new_exp	offset	8
   733 ;;_aexp	offset	10
   734 ;;_bexp	offset	11
   735 ;;_sign	offset	12
   736 ;;_b	offset=-4 (param)
   737 ;;_a	offset=-8 (param)
   738 ;;_ff1	offset=-4 (param)
   739 ;;_ff2	offset=-8 (param)
   740 ;;_timerVal	offset=-2 (param)
   741 ;;_adj	offset	0
   742 ;;_log_ptr	offset	4
   743 ;;_f	offset	0
   744 ;;_ap	offset	6
   745 ;;_s	offset=-3 (param)
   746 ;;_fmt	offset=-5 (param)
   747 ;;_cfmt	offset	0
   748 ;;_fp	offset=-2 (param)
   749 ;;_fmt	offset=-4 (param)
   750 ;;_ap	offset=-6 (param)
   751 ;;_vfpfcnvrt$6899	offset	0
   752 ;;_vfpfcnvrt$6910	offset	2
   753 ;;_vfpfcnvrt$6898	offset	4
   754 ;;_llu	offset	6
   755 ;;_ll	offset	14
   756 ;;_f	offset	22
   757 ;;_ct	offset	26
   758 ;;_cp	offset	29
   759 ;;_c	offset	31
   760 ;;_fp	offset=-2 (param)
   761 ;;_fmt	offset=-4 (param)
   762 ;;_ap	offset=-6 (param)
   763 ;;_xtoa$6884	offset	0
   764 ;;_xtoa$6883	offset	2
   765 ;;_n	offset	4
   766 ;;_c	offset	12
   767 ;;_i	offset	14
   768 ;;_w	offset	16
   769 ;;_p	offset	18
   770 ;;_fp	offset=-2 (param)
   771 ;;_d	offset=-10 (param)
   772 ;;_x	offset=-11 (param)
   773 ;;_toupper$7825	offset	0
   774 ;;_c	offset=-2 (param)
   775 ;;_c	offset=-2 (param)
   776 ;;_c	offset=-2 (param)
   777 ;;_n	offset	0
   778 ;;_i	offset	8
   779 ;;_w	offset	10
   780 ;;_p	offset	12
   781 ;;_fp	offset=-2 (param)
   782 ;;_d	offset=-10 (param)
   783 ;;_counter	offset	0
   784 ;;_dividend	offset=-8 (param)
   785 ;;_divisor	offset=-16 (param)
   786 ;;_quotient	offset	0
   787 ;;_counter	offset	8
   788 ;;_dividend	offset=-8 (param)
   789 ;;_divisor	offset=-16 (param)
   790 ;;_r	offset	0
   791 ;;_l	offset	2
   792 ;;__l	offset=-2 (param)
   793 ;;__r	offset=-4 (param)
   794 ;;_n	offset=-6 (param)
   795 ;;_nuls	offset	0
   796 ;;_l	offset	7
   797 ;;_p	offset	9
   798 ;;_cp	offset	11
   799 ;;_w	offset	13
   800 ;;_i	offset	15
   801 ;;_fp	offset=-2 (param)
   802 ;;_s	offset=-4 (param)
   803 ;;_efgtoa$6856	offset	0
   804 ;;_efgtoa$6855	offset	2
   805 ;;_efgtoa$6854	offset	4
   806 ;;_efgtoa$6850	offset	6
   807 ;;_efgtoa$6846	offset	8
   808 ;;_efgtoa$6845	offset	10
   809 ;;_u	offset	12
   810 ;;_g	offset	16
   811 ;;_l	offset	20
   812 ;;_h	offset	24
   813 ;;_ou	offset	28
   814 ;;_n	offset	32
   815 ;;_e	offset	34
   816 ;;_i	offset	36
   817 ;;_w	offset	38
   818 ;;_p	offset	40
   819 ;;_sign	offset	42
   820 ;;_d	offset	44
   821 ;;_ne	offset	46
   822 ;;_m	offset	48
   823 ;;_pp	offset	50
   824 ;;_t	offset	52
   825 ;;_mode	offset	54
   826 ;;_nmode	offset	55
   827 ;;_fp	offset=-2 (param)
   828 ;;_f	offset=-6 (param)
   829 ;;_c	offset=-7 (param)
   830 ;;_tolower$7810	offset	0
   831 ;;_c	offset=-2 (param)
   832 ;;_c	offset=-2 (param)
   833 ;;_d	offset	0
   834 ;;_s	offset	2
   835 ;;_dest	offset=-2 (param)
   836 ;;_src	offset=-4 (param)
   837 ;;_u	offset	0
   838 ;;_m	offset	4
   839 ;;_e	offset	8
   840 ;;_x	offset=-4 (param)
   841 ;;_u	offset	0
   842 ;;_e	offset	4
   843 ;;_x	offset=-4 (param)
   844 ;;_exp1	offset	0
   845 ;;_sign1	offset	1
   846 ;;_f1	offset=-4 (param)
   847 ;;_f1	offset=-4 (param)
   848 ;;_ff1	offset=-4 (param)
   849 ;;_ff2	offset=-8 (param)
   850 ;;_sign	offset	0
   851 ;;_counter	offset	1
   852 ;;_dividend	offset=-2 (param)
   853 ;;_divisor	offset=-4 (param)
   854 ;;_quotient	offset	0
   855 ;;_sign	offset	2
   856 ;;_counter	offset	3
   857 ;;_dividend	offset=-2 (param)
   858 ;;_divisor	offset=-4 (param)
   859 ;;_dtoa$6822	offset	0
   860 ;;_n	offset	2
   861 ;;_i	offset	10
   862 ;;_s	offset	12
   863 ;;_w	offset	14
   864 ;;_p	offset	16
   865 ;;_fp	offset=-2 (param)
   866 ;;_d	offset=-10 (param)
   867 ;;_a	offset=-2 (param)
   868 ;;_sign	offset	0
   869 ;;_counter	offset	1
   870 ;;_dividend	offset=-8 (param)
   871 ;;_divisor	offset=-16 (param)
   872 ;;_quotient	offset	0
   873 ;;_sign	offset	8
   874 ;;_counter	offset	9
   875 ;;_dividend	offset=-8 (param)
   876 ;;_divisor	offset=-16 (param)
   877 ;;_w	offset	0
   878 ;;_fp	offset=-2 (param)
   879 ;;_c	offset=-3 (param)
   880 ;;_w	offset	0
   881 ;;_i	offset	2
   882 ;;_fp	offset=-2 (param)
   883 ;;_buf	offset=-4 (param)
   884 ;;_p	offset=-6 (param)
   885 ;;_a	offset	0
   886 ;;_s	offset=-2 (param)
   887 ;;_i	offset	0
   888 ;;_c	offset	2
   889 ;;_s	offset=-2 (param)
   890 ;;_fp	offset=-4 (param)
   891 ;;_c	offset=-2 (param)
   892 ;;_fp	offset=-4 (param)
   893 ;;_c	offset=-1 (param)
   894 ;;__this	offset=-2 (param)
   895 ;;_c	offset=-3 (param)
   896 ;;_atoi$7442	offset	0
   897 ;;_atoi$7440	offset	2
   898 ;;_atoi$7441	offset	4
   899 ;;_n	offset	5
   900 ;;_neg	offset	7
   901 ;;_s	offset=-2 (param)
   902 ;;_isspace$7491	offset	0
   903 ;;_c	offset=-2 (param)
   904 ;;_c	offset=-2 (param)
   905 ;;_dsize	offset=-2 (param)
   906 ;;_u	offset	0
   907 ;;_x	offset=-4 (param)
   908 ;;_f1p	offset=-2 (param)
   909 ;;_f2	offset=-6 (param)
   910 ;;_timer	offset=-1 (param)
   911 ;;_count	offset=-3 (param)
   912 ;;_channel	offset=-1 (param)
   913 ;;_i	offset	0
   914                           
   915                           	psect	idataBIGRAM
   916  019D74                     __pidataBIGRAM:
   917                           	opt callstack 0
   918                           
   919                           ;initializer for _port_data
   920  019D74  FF                 	db	255
   921  019D75  00                 	db	0
   922  019D76  FF                 	db	255
   923  019D77  00                 	db	0
   924  019D78  FF                 	db	255
   925  019D79  00                 	db	0
   926  019D7A  FF                 	db	255
   927  019D7B  00                 	db	0
   928  019D7C  FF                 	db	255
   929  019D7D  00                 	db	0
   930  019D7E  FF                 	db	255
   931  019D7F  00                 	db	0
   932  019D80  FF                 	db	255
   933  019D81  00                 	db	0
   934  019D82  FF                 	db	255
   935  019D83  00                 	db	0
   936  019D84  00                 	db	0
   937  019D85  00                 	db	0
   938  019D86  00                 	db	0
   939  019D87  00                 	db	0
   940  019D88  00                 	db	0
   941  019D89  00                 	db	0
   942  019D8A  00                 	db	0
   943  019D8B  00                 	db	0
   944  019D8C  00                 	db	0
   945  019D8D  00                 	db	0
   946  019D8E  00                 	db	0
   947  019D8F  00                 	db	0
   948  019D90  00                 	db	0
   949  019D91  00                 	db	0
   950  019D92  00                 	db	0
   951  019D93  00                 	db	0
   952  019D94  00                 	db	0
   953  019D95  00                 	db	0
   954  019D96  00                 	db	0
   955  019D97  00                 	db	0
   956  019D98  00                 	db	0
   957  019D99  00                 	db	0
   958  019D9A  00                 	db	0
   959  019D9B  00                 	db	0
   960  019D9C  00                 	db	0
   961  019D9D  00                 	db	0
   962  019D9E  00                 	db	0
   963  019D9F  00                 	db	0
   964  019DA0  00                 	db	0
   965  019DA1  00                 	db	0
   966  019DA2  00                 	db	0
   967  019DA3  00                 	db	0
   968  019DA4  00                 	db	0
   969  019DA5  00                 	db	0
   970  019DA6  00                 	db	0
   971  019DA7  00                 	db	0
   972  019DA8  00                 	db	0
   973  019DA9  00                 	db	0
   974  019DAA  00                 	db	0
   975  019DAB  00                 	db	0
   976  019DAC  00                 	db	0
   977  019DAD  00                 	db	0
   978  019DAE  00                 	db	0
   979  019DAF  00                 	db	0
   980  019DB0  00                 	db	0
   981  019DB1  00                 	db	0
   982  019DB2  00                 	db	0
   983  019DB3  00                 	db	0
   984  019DB4  00                 	db	0
   985  019DB5  00                 	db	0
   986  019DB6  00                 	db	0
   987  019DB7  00                 	db	0
   988  019DB8  00                 	db	0
   989  019DB9  00                 	db	0
   990  019DBA  00                 	db	0
   991  019DBB  00                 	db	0
   992  019DBC  00                 	db	0
   993  019DBD  00                 	db	0
   994  019DBE  00                 	db	0
   995  019DBF  00                 	db	0
   996  019DC0  00                 	db	0
   997  019DC1  00                 	db	0
   998  019DC2  00                 	db	0
   999  019DC3  00                 	db	0
  1000  019DC4  00                 	db	0
  1001  019DC5  00                 	db	0
  1002  019DC6  00                 	db	0
  1003  019DC7  00                 	db	0
  1004  019DC8  00                 	db	0
  1005  019DC9  00                 	db	0
  1006  019DCA  00                 	db	0
  1007  019DCB  00                 	db	0
  1008  019DCC  00                 	db	0
  1009  019DCD  00                 	db	0
  1010  019DCE  00                 	db	0
  1011  019DCF  00                 	db	0
  1012  019DD0  00                 	db	0
  1013  019DD1  00                 	db	0
  1014  019DD2  00                 	db	0
  1015  019DD3  00                 	db	0
  1016  019DD4  00                 	db	0
  1017  019DD5  00                 	db	0
  1018  019DD6  00                 	db	0
  1019  019DD7  00                 	db	0
  1020  019DD8  00                 	db	0
  1021  019DD9  00                 	db	0
  1022  019DDA  00                 	db	0
  1023  019DDB  00                 	db	0
  1024  019DDC  00                 	db	0
  1025  019DDD  00                 	db	0
  1026  019DDE  00                 	db	0
  1027  019DDF  00                 	db	0
  1028  019DE0  00                 	db	0
  1029  019DE1  00                 	db	0
  1030  019DE2  00                 	db	0
  1031  019DE3  00                 	db	0
  1032  019DE4  00                 	db	0
  1033  019DE5  00                 	db	0
  1034  019DE6  00                 	db	0
  1035  019DE7  00                 	db	0
  1036  019DE8  00                 	db	0
  1037  019DE9  00                 	db	0
  1038  019DEA  00                 	db	0
  1039  019DEB  00                 	db	0
  1040  019DEC  00                 	db	0
  1041  019DED  00                 	db	0
  1042  019DEE  00                 	db	0
  1043  019DEF  00                 	db	0
  1044  019DF0  00                 	db	0
  1045  019DF1  00                 	db	0
  1046  019DF2  00                 	db	0
  1047  019DF3  00                 	db	0
  1048  019DF4  00                 	db	0
  1049  019DF5  00                 	db	0
  1050  019DF6  00                 	db	0
  1051  019DF7  00                 	db	0
  1052  019DF8  00                 	db	0
  1053  019DF9  00                 	db	0
  1054  019DFA  00                 	db	0
  1055  019DFB  00                 	db	0
  1056  019DFC  00                 	db	0
  1057  019DFD  00                 	db	0
  1058  019DFE  00                 	db	0
  1059  019DFF  00                 	db	0
  1060  019E00  00                 	db	0
  1061  019E01  00                 	db	0
  1062  019E02  00                 	db	0
  1063  019E03  00                 	db	0
  1064  019E04  00                 	db	0
  1065  019E05  00                 	db	0
  1066  019E06  00                 	db	0
  1067  019E07  00                 	db	0
  1068  019E08  00                 	db	0
  1069  019E09  00                 	db	0
  1070  019E0A  00                 	db	0
  1071  019E0B  00                 	db	0
  1072  019E0C  00                 	db	0
  1073  019E0D  00                 	db	0
  1074  019E0E  00                 	db	0
  1075  019E0F  00                 	db	0
  1076  019E10  00                 	db	0
  1077  019E11  00                 	db	0
  1078  019E12  00                 	db	0
  1079  019E13  00                 	db	0
  1080  019E14  00                 	db	0
  1081  019E15  00                 	db	0
  1082  019E16  00                 	db	0
  1083  019E17  00                 	db	0
  1084  019E18  00                 	db	0
  1085  019E19  00                 	db	0
  1086  019E1A  00                 	db	0
  1087  019E1B  00                 	db	0
  1088  019E1C  00                 	db	0
  1089  019E1D  00                 	db	0
  1090  019E1E  00                 	db	0
  1091  019E1F  00                 	db	0
  1092  019E20  00                 	db	0
  1093  019E21  00                 	db	0
  1094  019E22  00                 	db	0
  1095  019E23  00                 	db	0
  1096  019E24  00                 	db	0
  1097  019E25  00                 	db	0
  1098  019E26  00                 	db	0
  1099  019E27  00                 	db	0
  1100  019E28  00                 	db	0
  1101  019E29  00                 	db	0
  1102  019E2A  00                 	db	0
  1103  019E2B  00                 	db	0
  1104  019E2C  00                 	db	0
  1105  019E2D  00                 	db	0
  1106  019E2E  00                 	db	0
  1107  019E2F  00                 	db	0
  1108  019E30  00                 	db	0
  1109  019E31  00                 	db	0
  1110  019E32  00                 	db	0
  1111  019E33  00                 	db	0
  1112  019E34  00                 	db	0
  1113  019E35  00                 	db	0
  1114  019E36  00                 	db	0
  1115  019E37  00                 	db	0
  1116  019E38  00                 	db	0
  1117  019E39  00                 	db	0
  1118  019E3A  00                 	db	0
  1119  019E3B  00                 	db	0
  1120  019E3C  00                 	db	0
  1121  019E3D  00                 	db	0
  1122  019E3E  00                 	db	0
  1123  019E3F  00                 	db	0
  1124  019E40  00                 	db	0
  1125  019E41  00                 	db	0
  1126  019E42  00                 	db	0
  1127  019E43  00                 	db	0
  1128  019E44  00                 	db	0
  1129  019E45  00                 	db	0
  1130  019E46  00                 	db	0
  1131  019E47  00                 	db	0
  1132  019E48  00                 	db	0
  1133  019E49  00                 	db	0
  1134  019E4A  00                 	db	0
  1135  019E4B  00                 	db	0
  1136  019E4C  00                 	db	0
  1137  019E4D  00                 	db	0
  1138  019E4E  00                 	db	0
  1139  019E4F  00                 	db	0
  1140  019E50  00                 	db	0
  1141  019E51  00                 	db	0
  1142  019E52  00                 	db	0
  1143  019E53  00                 	db	0
  1144  019E54  00                 	db	0
  1145  019E55  00                 	db	0
  1146  019E56  00                 	db	0
  1147  019E57  00                 	db	0
  1148  019E58  00                 	db	0
  1149  019E59  00                 	db	0
  1150  019E5A  00                 	db	0
  1151  019E5B  00                 	db	0
  1152  019E5C  00                 	db	0
  1153  019E5D  00                 	db	0
  1154  019E5E  00                 	db	0
  1155  019E5F  00                 	db	0
  1156  019E60  00                 	db	0
  1157  019E61  00                 	db	0
  1158  019E62  00                 	db	0
  1159  019E63  00                 	db	0
  1160  019E64  00                 	db	0
  1161  019E65  00                 	db	0
  1162  019E66  00                 	db	0
  1163  019E67  00                 	db	0
  1164  019E68  00                 	db	0
  1165  019E69  00                 	db	0
  1166  019E6A  00                 	db	0
  1167  019E6B  00                 	db	0
  1168  019E6C  00                 	db	0
  1169  019E6D  00                 	db	0
  1170  019E6E  00                 	db	0
  1171  019E6F  00                 	db	0
  1172  019E70  00                 	db	0
  1173  019E71  00                 	db	0
  1174  019E72  00                 	db	0
  1175  019E73  00                 	db	0
  1176  019E74  00                 	db	0
  1177  019E75  00                 	db	0
  1178  019E76  00                 	db	0
  1179  019E77  00                 	db	0
  1180  019E78  00                 	db	0
  1181  019E79  00                 	db	0
  1182  019E7A  00                 	db	0
  1183  019E7B  00                 	db	0
  1184  019E7C  00                 	db	0
  1185  019E7D  00                 	db	0
  1186  019E7E  00                 	db	0
  1187  019E7F  00                 	db	0
  1188  019E80  00                 	db	0
  1189  019E81  00                 	db	0
  1190  019E82  00                 	db	0
  1191  019E83  00                 	db	0
  1192  019E84  00                 	db	0
  1193  019E85  00                 	db	0
  1194  019E86  00                 	db	0
  1195  019E87  00                 	db	0
  1196  019E88  00                 	db	0
  1197  019E89  00                 	db	0
  1198  019E8A  00                 	db	0
  1199  019E8B  00                 	db	0
  1200  019E8C  00                 	db	0
  1201  019E8D  00                 	db	0
  1202  019E8E  00                 	db	0
  1203  019E8F  00                 	db	0
  1204  019E90  00                 	db	0
  1205  019E91  00                 	db	0
  1206  019E92  00                 	db	0
  1207  019E93  00                 	db	0
  1208  019E94  00                 	db	0
  1209  019E95  00                 	db	0
  1210  019E96  00                 	db	0
  1211  019E97  00                 	db	0
  1212  019E98  00                 	db	0
  1213  019E99  00                 	db	0
  1214  019E9A  00                 	db	0
  1215  019E9B  00                 	db	0
  1216  019E9C  00                 	db	0
  1217  019E9D  00                 	db	0
  1218  019E9E  00                 	db	0
  1219  019E9F  00                 	db	0
  1220  019EA0  00                 	db	0
  1221  019EA1  00                 	db	0
  1222  019EA2  00                 	db	0
  1223  019EA3  00                 	db	0
  1224  019EA4  00                 	db	0
  1225  019EA5  00                 	db	0
  1226  019EA6  00                 	db	0
  1227  019EA7  00                 	db	0
  1228  019EA8  00                 	db	0
  1229  019EA9  00                 	db	0
  1230  019EAA  00                 	db	0
  1231  019EAB  00                 	db	0
  1232  019EAC  00                 	db	0
  1233  019EAD  00                 	db	0
  1234  019EAE  00                 	db	0
  1235  019EAF  00                 	db	0
  1236  019EB0  00                 	db	0
  1237  019EB1  00                 	db	0
  1238  019EB2  00                 	db	0
  1239  019EB3  00                 	db	0
  1240  019EB4  00                 	db	0
  1241  019EB5  00                 	db	0
  1242  019EB6  00                 	db	0
  1243  019EB7  00                 	db	0
  1244  019EB8  00                 	db	0
  1245  019EB9  00                 	db	0
  1246  019EBA  00                 	db	0
  1247  019EBB  00                 	db	0
  1248  019EBC  00                 	db	0
  1249  019EBD  00                 	db	0
  1250  019EBE  00                 	db	0
  1251  019EBF  00                 	db	0
  1252  019EC0  00                 	db	0
  1253  019EC1  00                 	db	0
  1254  019EC2  00                 	db	0
  1255  019EC3  00                 	db	0
  1256  019EC4  00                 	db	0
  1257  019EC5  00                 	db	0
  1258  019EC6  00                 	db	0
  1259  019EC7  00                 	db	0
  1260  019EC8  00                 	db	0
  1261  019EC9  00                 	db	0
  1262  019ECA  00                 	db	0
  1263  019ECB  00                 	db	0
  1264  019ECC  00                 	db	0
  1265  019ECD  00                 	db	0
  1266  019ECE  00                 	db	0
  1267  019ECF  00                 	db	0
  1268  019ED0  00                 	db	0
  1269  019ED1  00                 	db	0
  1270  019ED2  00                 	db	0
  1271  019ED3  00                 	db	0
  1272  019ED4  00                 	db	0
  1273  019ED5  00                 	db	0
  1274  019ED6  00                 	db	0
  1275  019ED7  00                 	db	0
  1276  019ED8  00                 	db	0
  1277  019ED9  00                 	db	0
  1278  019EDA  00                 	db	0
  1279  019EDB  00                 	db	0
  1280  019EDC  00                 	db	0
  1281  019EDD  00                 	db	0
  1282  019EDE  00                 	db	0
  1283  019EDF  00                 	db	0
  1284  019EE0  00                 	db	0
  1285  019EE1  00                 	db	0
  1286  019EE2  00                 	db	0
  1287  019EE3  00                 	db	0
  1288  019EE4  00                 	db	0
  1289  019EE5  00                 	db	0
  1290  019EE6  00                 	db	0
  1291  019EE7  00                 	db	0
  1292  019EE8  00                 	db	0
  1293  019EE9  00                 	db	0
  1294  019EEA  00                 	db	0
  1295  019EEB  00                 	db	0
  1296  019EEC  00                 	db	0
  1297  019EED  00                 	db	0
  1298  019EEE  00                 	db	0
  1299  019EEF  00                 	db	0
  1300  019EF0  00                 	db	0
  1301  019EF1  00                 	db	0
  1302  019EF2  00                 	db	0
  1303  019EF3  00                 	db	0
  1304  019EF4  00                 	db	0
  1305  019EF5  00                 	db	0
  1306  019EF6  00                 	db	0
  1307  019EF7  00                 	db	0
  1308  019EF8  00                 	db	0
  1309  019EF9  00                 	db	0
  1310  019EFA  00                 	db	0
  1311  019EFB  00                 	db	0
  1312  019EFC  00                 	db	0
  1313  019EFD  00                 	db	0
  1314  019EFE  00                 	db	0
  1315  019EFF  00                 	db	0
  1316  019F00  00                 	db	0
  1317  019F01  00                 	db	0
  1318  019F02  00                 	db	0
  1319  019F03  00                 	db	0
  1320  019F04  00                 	db	0
  1321  019F05  00                 	db	0
  1322  019F06  00                 	db	0
  1323  019F07  00                 	db	0
  1324  019F08  00                 	db	0
  1325  019F09  00                 	db	0
  1326  019F0A  00                 	db	0
  1327  019F0B  00                 	db	0
  1328  019F0C  00                 	db	0
  1329  019F0D  00                 	db	0
  1330  019F0E  00                 	db	0
  1331  019F0F  00                 	db	0
  1332  019F10  00                 	db	0
  1333  019F11  00                 	db	0
  1334  019F12  00                 	db	0
  1335  019F13  00                 	db	0
  1336  019F14  00                 	db	0
  1337  019F15  00                 	db	0
  1338  019F16  00                 	db	0
  1339  019F17  00                 	db	0
  1340  019F18  00                 	db	0
  1341  019F19  00                 	db	0
  1342  019F1A  00                 	db	0
  1343  019F1B  00                 	db	0
  1344  019F1C  00                 	db	0
  1345  019F1D  00                 	db	0
  1346  019F1E  00                 	db	0
  1347  019F1F  00                 	db	0
  1348  019F20  00                 	db	0
  1349  019F21  00                 	db	0
  1350  019F22  00                 	db	0
  1351  019F23  00                 	db	0
  1352  019F24  00                 	db	0
  1353  019F25  00                 	db	0
  1354  019F26  00                 	db	0
  1355  019F27  00                 	db	0
  1356  019F28  00                 	db	0
  1357  019F29  00                 	db	0
  1358  019F2A  00                 	db	0
  1359  019F2B  00                 	db	0
  1360  019F2C  00                 	db	0
  1361  019F2D  00                 	db	0
  1362  019F2E  00                 	db	0
  1363  019F2F  00                 	db	0
  1364  019F30  00                 	db	0
  1365  019F31  00                 	db	0
  1366  019F32  00                 	db	0
  1367  019F33  00                 	db	0
  1368  019F34  00                 	db	0
  1369  019F35  00                 	db	0
  1370  019F36  00                 	db	0
  1371  019F37  00                 	db	0
  1372  019F38  00                 	db	0
  1373  019F39  00                 	db	0
  1374  019F3A  00                 	db	0
  1375  019F3B  00                 	db	0
  1376  019F3C  00                 	db	0
  1377  019F3D  00                 	db	0
  1378  019F3E  00                 	db	0
  1379  019F3F  00                 	db	0
  1380  019F40  00                 	db	0
  1381  019F41  00                 	db	0
  1382  019F42  00                 	db	0
  1383  019F43  00                 	db	0
  1384  019F44  00                 	db	0
  1385  019F45  00                 	db	0
  1386  019F46  00                 	db	0
  1387  019F47  00                 	db	0
  1388  019F48  00                 	db	0
  1389  019F49  00                 	db	0
  1390  019F4A  00                 	db	0
  1391  019F4B  00                 	db	0
  1392  019F4C  00                 	db	0
  1393  019F4D  00                 	db	0
  1394  019F4E  00                 	db	0
  1395  019F4F  00                 	db	0
  1396  019F50  00                 	db	0
  1397  019F51  00                 	db	0
  1398  019F52  00                 	db	0
  1399  019F53  00                 	db	0
  1400  019F54  00                 	db	0
  1401  019F55  00                 	db	0
  1402  019F56  00                 	db	0
  1403  019F57  00                 	db	0
  1404  019F58  00                 	db	0
  1405  019F59  00                 	db	0
  1406  019F5A  00                 	db	0
  1407  019F5B  00                 	db	0
  1408  019F5C  00                 	db	0
  1409  019F5D  00                 	db	0
  1410  019F5E  00                 	db	0
  1411  019F5F  00                 	db	0
  1412  019F60  00                 	db	0
  1413  019F61  00                 	db	0
  1414  019F62  00                 	db	0
  1415  019F63  00                 	db	0
  1416  019F64  00                 	db	0
  1417  019F65  00                 	db	0
  1418  019F66  00                 	db	0
  1419  019F67  00                 	db	0
  1420  019F68  00                 	db	0
  1421  019F69  00                 	db	0
  1422  019F6A  00                 	db	0
  1423  019F6B  00                 	db	0
  1424  019F6C  00                 	db	0
  1425  019F6D  00                 	db	0
  1426  019F6E  00                 	db	0
  1427  019F6F  00                 	db	0
  1428  019F70  00                 	db	0
  1429  019F71  00                 	db	0
  1430  019F72  00                 	db	0
  1431  019F73  00                 	db	0
  1432                           
  1433                           ;initializer for _C
  1434  019F74  0000               	dw	0
  1435  019F76  0000               	dw	0
  1436  019F78  0000               	dw	0
  1437  019F7A  0000               	dw	0
  1438  019F7C  0000               	dw	0
  1439  019F7E  0000               	dw	0
  1440  019F80  0000               	dw	0
  1441  019F82  0000               	dw	0
  1442  019F84  0000               	dw	0
  1443  019F86  0000               	dw	0
  1444  019F88  0000               	dw	0
  1445  019F8A  0000               	dw	0
  1446  019F8C  0000               	dw	0
  1447  019F8E  0000               	dw	0
  1448  019F90  0000               	dw	0
  1449  019F92  0000               	dw	0
  1450  019F94  0000               	dw	0
  1451  019F96  0000               	dw	0
  1452  019F98  0000               	dw	0
  1453  019F9A  0000               	dw	0
  1454  019F9C  0000               	dw	0
  1455  019F9E  0000               	dw	0
  1456  019FA0  0000               	dw	0
  1457  019FA2  0000               	dw	0
  1458  019FA4  0000               	dw	0
  1459  019FA6  0000               	dw	0
  1460  019FA8  0000               	dw	0
  1461  019FAA  0000               	dw	0
  1462  019FAC  0000               	dw	0
  1463  019FAE  0000               	dw	0
  1464  019FB0  0000               	dw	0
  1465  019FB2  0000               	dw	0
  1466  019FB4  0000               	dw	0
  1467  019FB6  0000               	dw	0
  1468  019FB8  0000               	dw	0
  1469  019FBA  0000               	dw	0
  1470  019FBC  0000               	dw	0
  1471  019FBE  0000               	dw	0
  1472  019FC0  0000               	dw	0
  1473  019FC2  0000               	dw	0
  1474  019FC4  0000               	dw	0
  1475  019FC6  0000               	dw	0
  1476  019FC8  0000               	dw	0
  1477  019FCA  0000               	dw	0
  1478  019FCC  0000               	dw	0
  1479  019FCE  0000               	dw	0
  1480  019FD0  0000               	dw	0
  1481  019FD2  0000               	dw	0
  1482  019FD4  0000               	dw	0
  1483  019FD6  0000               	dw	0
  1484  019FD8  0000               	dw	0
  1485  019FDA  0000               	dw	0
  1486  019FDC  0000               	dw	0
  1487  019FDE  0000               	dw	0
  1488  019FE0  0000               	dw	0
  1489  019FE2  0000               	dw	0
  1490  019FE4  0000               	dw	0
  1491  019FE6  0000               	dw	0
  1492  019FE8  0000               	dw	0
  1493  019FEA  0000               	dw	0
  1494  019FEC  0000               	dw	0
  1495  019FEE  0000               	dw	0
  1496  019FF0  0000               	dw	0
  1497  019FF2  0000               	dw	0
  1498  019FF4  0000               	dw	0
  1499  019FF6  0000               	dw	0
  1500  019FF8  0000               	dw	0
  1501  019FFA  0000               	dw	0
  1502  019FFC  0000               	dw	0
  1503  019FFE  0000               	dw	0
  1504  01A000  0000               	dw	0
  1505  01A002  42FA               	dw	17146
  1506  01A004  0000               	dw	0
  1507  01A006  0000               	dw	0
  1508  01A008  0000               	dw	0
  1509  01A00A  0000               	dw	0
  1510  01A00C  0000               	dw	0
  1511  01A00E  0000               	dw	0
  1512  01A010  0000               	dw	0
  1513  01A012  0000               	dw	0
  1514  01A014  0000               	dw	0
  1515  01A016  0000               	dw	0
  1516  01A018  0000               	dw	0
  1517  01A01A  0000               	dw	0
  1518  01A01C  0000               	dw	0
  1519  01A01E  0000               	dw	0
  1520  01A020  0000               	dw	0
  1521  01A022  0000               	dw	0
  1522  01A024  0000               	dw	0
  1523  01A026  0000               	dw	0
  1524  01A028  0000               	dw	0
  1525  01A02A  0000               	dw	0
  1526  01A02C  00                 	db	0
  1527  01A02D  01                 	db	1
  1528  01A02E  0000               	dw	0
  1529  01A030  0000               	dw	0
  1530  01A032  0000               	dw	0
  1531  01A034  0000               	dw	0
  1532  01A036  0000               	dw	0
  1533  01A038  0000               	dw	0
  1534  01A03A  0000               	dw	0
  1535  01A03C  0000               	dw	0
  1536  01A03E  0000               	dw	0
  1537  01A040  0000               	dw	0
  1538  01A042  0000               	dw	0
  1539  01A044  00                 	db	0
  1540  01A045  00                 	db	0
  1541  01A046  0000               	dw	0
  1542  01A048  3F80               	dw	16256
  1543  01A04A  0000               	dw	0
  1544  01A04C  3F80               	dw	16256
  1545  01A04E  0000               	dw	0
  1546  01A050  0000               	dw	0
  1547  01A052  0000               	dw	0
  1548  01A054  0000               	dw	0
  1549  01A056  0000               	dw	0
  1550  01A058  0000               	dw	0
  1551  01A05A  0000               	dw	0
  1552  01A05C  0000               	dw	0
  1553  01A05E  0000               	dw	0
  1554  01A060  0000               	dw	0
  1555  01A062  00                 	db	0
  1556  01A063  00                 	db	0
  1557  01A064  00                 	db	0
  1558  01A065  00                 	db	0
  1559  01A066  00                 	db	0
  1560  01A067  00                 	db	0
  1561  01A068  00                 	db	0
  1562  01A069  00                 	db	0
  1563  01A06A  00                 	db	0
  1564  01A06B  00                 	db	0
  1565  01A06C  00                 	db	0
  1566  01A06D  00                 	db	0
  1567  01A06E  00                 	db	0
  1568  01A06F  00                 	db	0
  1569  01A070  00                 	db	0
  1570  01A071  00                 	db	0
  1571  01A072  00                 	db	0
  1572  01A073  00                 	db	0
  1573  01A074  00                 	db	0
  1574  01A075  00                 	db	0
  1575  01A076  00                 	db	0
  1576  01A077  00                 	db	0
  1577  01A078  00                 	db	0
  1578  01A079  00                 	db	0
  1579  01A07A  00                 	db	0
  1580  01A07B  00                 	db	0
  1581  01A07C  00                 	db	0
  1582  01A07D  00                 	db	0
  1583  01A07E  00                 	db	0
  1584  01A07F  00                 	db	0
  1585  01A080  00                 	db	0
  1586  01A081  00                 	db	0
  1587  01A082  00                 	db	0
  1588  01A083  00                 	db	0
  1589  01A084  00                 	db	0
  1590  01A085  00                 	db	0
  1591  01A086  00                 	db	0
  1592  01A087  00                 	db	0
  1593  01A088  00                 	db	0
  1594  01A089  00                 	db	0
  1595  01A08A  00                 	db	0
  1596  01A08B  00                 	db	0
  1597  01A08C  00                 	db	0
  1598  01A08D  00                 	db	0
  1599  01A08E  00                 	db	0
  1600  01A08F  00                 	db	0
  1601  01A090  00                 	db	0
  1602  01A091  00                 	db	0
  1603  01A092  00                 	db	0
  1604  01A093  00                 	db	0
  1605  01A094  00                 	db	0
  1606  01A095  00                 	db	0
  1607  01A096  00                 	db	0
  1608  01A097  00                 	db	0
  1609  01A098  00                 	db	0
  1610  01A099  00                 	db	0
  1611  01A09A  00                 	db	0
  1612  01A09B  00                 	db	0
  1613  01A09C  00                 	db	0
  1614  01A09D  00                 	db	0
  1615  01A09E  0000               	dw	0
  1616  01A0A0  0000               	dw	0
  1617  01A0A2  0000               	dw	0
  1618  01A0A4  0000               	dw	0
  1619  01A0A6  0000               	dw	0
  1620  01A0A8  0000               	dw	0
  1621  01A0AA  0000               	dw	0
  1622  01A0AC  0000               	dw	0
  1623  01A0AE  0000               	dw	0
  1624  01A0B0  0000               	dw	0
  1625  01A0B2  01                 	db	1
  1626  01A0B3  00                 	db	0
  1627  01A0B4  0000               	dw	0
  1628  01A0B6  0000               	dw	0
  1629  01A0B8  0000               	dw	0
  1630  01A0BA  0000               	dw	0
  1631  01A0BC  0000               	dw	0
  1632  01A0BE  0000               	dw	0
  1633  01A0C0  0000               	dw	0
  1634  01A0C2  0000               	dw	0
  1635                           
  1636                           	psect	idataBANK1
  1637  01F8E8                     __pidataBANK1:
  1638                           	opt callstack 0
  1639                           
  1640                           ;initializer for stoa@F1166
  1641  01F8E8  28                 	db	40
  1642  01F8E9  6E                 	db	110
  1643  01F8EA  75                 	db	117
  1644  01F8EB  6C                 	db	108
  1645  01F8EC  6C                 	db	108
  1646  01F8ED  29                 	db	41
  1647  01F8EE  00                 	db	0
  1648                           
  1649                           ;initializer for _V
  1650  01F8EF  00                 	db	0
  1651  01F8F0  00                 	db	0
  1652  01F8F1  00                 	db	0
  1653  01F8F2  00                 	db	0
  1654  01F8F3  00                 	db	0
  1655  01F8F4  00                 	db	0
  1656  01F8F5  00                 	db	0
  1657  01F8F6  00                 	db	0
  1658  01F8F7  00                 	db	0
  1659  01F8F8  00                 	db	0
  1660  01F8F9  00                 	db	0
  1661  01F8FA  00                 	db	0
  1662  01F8FB  00                 	db	0
  1663  01F8FC  00                 	db	0
  1664  01F8FD  00                 	db	0
  1665  01F8FE  00                 	db	0
  1666  01F8FF  00                 	db	0
  1667  01F900  00                 	db	0
  1668  01F901  00                 	db	0
  1669  01F902  00                 	db	0
  1670  01F903  00                 	db	0
  1671  01F904  00                 	db	0
  1672  01F905  00                 	db	0
  1673  01F906  00                 	db	0
  1674  01F907  00                 	db	0
  1675  01F908  00                 	db	0
  1676  01F909  00                 	db	0
  1677  01F90A  00                 	db	0
  1678  01F90B  00                 	db	0
  1679  01F90C  00                 	db	0
  1680  01F90D  00                 	db	0
  1681  01F90E  00                 	db	0
  1682  01F90F  00                 	db	0
  1683  01F910  00                 	db	0
  1684  01F911  00                 	db	0
  1685  01F912  00                 	db	0
  1686  01F913  00                 	db	0
  1687  01F914  00                 	db	0
  1688  01F915  00                 	db	0
  1689  01F916  00                 	db	0
  1690  01F917  00                 	db	0
  1691  01F918  00                 	db	0
  1692  01F919  00                 	db	0
  1693  01F91A  00                 	db	0
  1694  01F91B  00                 	db	0
  1695  01F91C  00                 	db	0
  1696  01F91D  00                 	db	0
  1697  01F91E  00                 	db	0
  1698  01F91F  00                 	db	0
  1699  01F920  00                 	db	0
  1700  01F921  00                 	db	0
  1701  01F922  00                 	db	0
  1702  01F923  00                 	db	0
  1703  01F924  00                 	db	0
  1704  01F925  00                 	db	0
  1705  01F926  00                 	db	0
  1706  01F927  00                 	db	0
  1707  01F928  00                 	db	0
  1708  01F929  00                 	db	0
  1709  01F92A  00                 	db	0
  1710  01F92B  00                 	db	0
  1711  01F92C  00                 	db	0
  1712  01F92D  00                 	db	0
  1713  01F92E  00                 	db	0
  1714  01F92F  00                 	db	0
  1715  01F930  00                 	db	0
  1716  01F931  00                 	db	0
  1717  01F932  00                 	db	0
  1718  01F933  00                 	db	0
  1719  01F934  00                 	db	0
  1720  01F935  00                 	db	0
  1721  01F936  00                 	db	0
  1722  01F937  00                 	db	0
  1723  01F938  00                 	db	0
  1724  01F939  00                 	db	0
  1725  01F93A  00                 	db	0
  1726  01F93B  00                 	db	0
  1727  01F93C  00                 	db	0
  1728  01F93D  00                 	db	0
  1729  01F93E  00                 	db	0
  1730  01F93F  00                 	db	0
  1731  01F940  00                 	db	0
  1732  01F941  00                 	db	0
  1733  01F942  00                 	db	0
  1734  01F943  00                 	db	0
  1735  01F944  00                 	db	0
  1736  01F945  00                 	db	0
  1737  01F946  00                 	db	0
  1738  01F947  00                 	db	0
  1739  01F948  00                 	db	0
  1740  01F949  00                 	db	0
  1741  01F94A  00                 	db	0
  1742  01F94B  00                 	db	0
  1743  01F94C  00                 	db	0
  1744  01F94D  00                 	db	0
  1745  01F94E  00                 	db	0
  1746  01F94F  00                 	db	0
  1747  01F950  00                 	db	0
  1748  01F951  00                 	db	0
  1749  01F952  00                 	db	0
  1750  01F953  00                 	db	0
  1751  01F954  00                 	db	0
  1752  01F955  00                 	db	0
  1753  01F956  00                 	db	0
  1754  01F957  00                 	db	0
  1755  01F958  00                 	db	0
  1756  01F959  00                 	db	0
  1757  01F95A  00                 	db	0
  1758  01F95B  00                 	db	0
  1759  01F95C  00                 	db	0
  1760  01F95D  00                 	db	0
  1761  01F95E  00                 	db	0
  1762  01F95F  00                 	db	0
  1763  01F960  00                 	db	0
  1764  01F961  00                 	db	0
  1765  01F962  00                 	db	0
  1766  01F963  00                 	db	0
  1767  01F964  00                 	db	0
  1768  01F965  00                 	db	0
  1769  01F966  00                 	db	0
  1770  01F967  00                 	db	0
  1771  01F968  00                 	db	0
  1772  01F969  00                 	db	0
  1773  01F96A  00                 	db	0
  1774  01F96B  00                 	db	0
  1775  01F96C  00                 	db	0
  1776  01F96D  00                 	db	0
  1777  01F96E  00                 	db	0
  1778  01F96F  00                 	db	0
  1779  01F970  019A               	dw	410
  1780  01F972  5E48               	dw	24136
  1781  01F974  0000               	dw	0
  1782  01F976  0000               	dw	0
  1783  01F978  00                 	db	0
  1784  01F979  00                 	db	0
  1785  01F97A  00                 	db	0
  1786  01F97B  00                 	db	0
  1787  01F97C  00                 	db	0
  1788  01F97D  00                 	db	0
  1789  01F97E  0000               	dw	0
  1790  01F980  0000               	dw	0
  1791  01F982  0000               	dw	0
  1792  01F984  0000               	dw	0
  1793  01F986  0000               	dw	0
  1794  01F988  0000               	dw	0
  1795  01F98A  00                 	db	0
  1796  01F98B  00                 	db	0
  1797  01F98C  00                 	db	0
  1798  01F98D  00                 	db	0
  1799  01F98E  00                 	db	0
  1800  01F98F  00                 	db	0
  1801  01F990  00                 	db	0
  1802  01F991  00                 	db	0
  1803  01F992  00                 	db	0
  1804  01F993  00                 	db	0
  1805  01F994  00                 	db	0
  1806  01F995  0000               	dw	0
  1807  01F997  0000               	dw	0
  1808  01F999  2D                 	db	45
  1809  01F99A  00                 	db	0
  1810  01F99B  00                 	db	0
  1811  01F99C  00                 	db	0
  1812  01F99D  00                 	db	0
  1813  01F99E  00                 	db	0
  1814  01F99F  0000               	dw	0
  1815  01F9A1  0000               	dw	0
  1816  01F9A3  0000               	dw	0
  1817  01F9A5  0000               	dw	0
  1818  01F9A7  0000               	dw	0
  1819  01F9A9  0000               	dw	0
  1820  01F9AB  0000               	dw	0
  1821  01F9AD  0000               	dw	0
  1822                           
  1823                           ;initializer for _H
  1824  01F9AF  00                 	db	0
  1825  01F9B0  00                 	db	0
  1826  01F9B1  01                 	db	1
  1827  01F9B2  00                 	db	0
  1828  01F9B3  01                 	db	1
  1829  01F9B4  00                 	db	0
  1830  01F9B5  01                 	db	1
  1831  01F9B6  00                 	db	0
  1832  01F9B7  00                 	db	0
  1833                           
  1834                           	psect	idataBANK2
  1835  01FECC                     __pidataBANK2:
  1836                           	opt callstack 0
  1837                           
  1838                           ;initializer for _R
  1839  01FECC  0000               	dw	0
  1840  01FECE  0000               	dw	0
  1841  01FED0  0000               	dw	0
  1842  01FED2  0000               	dw	0
  1843  01FED4  0000               	dw	0
  1844  01FED6  0000               	dw	0
  1845  01FED8  0000               	dw	0
  1846  01FEDA  0000               	dw	0
  1847  01FEDC  0000               	dw	0
  1848  01FEDE  0000               	dw	0
  1849  01FEE0  0000               	dw	0
  1850  01FEE2  0000               	dw	0
  1851  01FEE4  0000               	dw	0
  1852  01FEE6  0000               	dw	0
  1853  01FEE8  0000               	dw	0
  1854  01FEEA  0000               	dw	0
  1855  01FEEC  0000               	dw	0
  1856  01FEEE  0000               	dw	0
  1857  01FEF0  0000               	dw	0
  1858  01FEF2  0F62               	dw	3938
  1859  01FEF4  0FA4               	dw	4004
  1860  01FEF6  89A0               	dw	35232
  1861  01FEF8  3DB0               	dw	15792
  1862  01FEFA  DEA4               	dw	56996
  1863  01FEFC  3D13               	dw	15635
  1864  01FEFE  00                 	db	0
  1865  01FEFF  0000               	dw	0
  1866  01FF01  00                 	db	0
  1867  01FF02  00                 	db	0
  1868  01FF03  0000               	dw	0
  1869  01FF05  0000               	dw	0
  1870  01FF07  0000               	dw	0
  1871  01FF09  0000               	dw	0
  1872  01FF0B  0000               	dw	0
  1873  01FF0D  0000               	dw	0
  1874  01FF0F  0000               	dw	0
  1875  01FF11  0000               	dw	0
  1876  01FF13  0000               	dw	0
  1877  01FF15  0000               	dw	0
  1878  01FF17  0000               	dw	0
  1879  01FF19  00                 	db	0
  1880  01FF1A  00                 	db	0
  1881  01FF1B  0000               	dw	0
  1882  01FF1D  0000               	dw	0
  1883  01FF1F  0000               	dw	0
  1884  01FF21  0000               	dw	0
  1885  01FF23  0000               	dw	0
  1886  01FF25  0000               	dw	0
  1887  01FF27  0000               	dw	0
  1888  01FF29  0000               	dw	0
  1889  01FF2B  0000               	dw	0
  1890  01FF2D  0000               	dw	0
  1891  01FF2F  0000               	dw	0
  1892  01FF31  0000               	dw	0
  1893  01FF33  0000               	dw	0
  1894  01FF35  0000               	dw	0
  1895  01FF37  0000               	dw	0
  1896  01FF39  0000               	dw	0
  1897  01FF3B  0000               	dw	0
  1898  01FF3D  0000               	dw	0
  1899  01FF3F  0000               	dw	0
  1900  01FF41  0000               	dw	0
  1901  01FF43  0000               	dw	0
  1902  01FF45  0000               	dw	0
  1903  01FF47  0000               	dw	0
  1904  01FF49  0000               	dw	0
  1905  01FF4B  0000               	dw	0
  1906  01FF4D  0000               	dw	0
  1907  01FF4F  0000               	dw	0
  1908  01FF51  0000               	dw	0
  1909  01FF53  0000               	dw	0
  1910  01FF55  0000               	dw	0
  1911  01FF57  0000               	dw	0
  1912  01FF59  0000               	dw	0
  1913  01FF5B  0000               	dw	0
  1914  01FF5D  0000               	dw	0
  1915  01FF5F  0000               	dw	0
  1916  01FF61  0000               	dw	0
  1917  01FF63  0000               	dw	0
  1918  01FF65  0000               	dw	0
  1919  01FF67  0000               	dw	0
  1920  01FF69  0000               	dw	0
  1921  01FF6B  0000               	dw	0
  1922  01FF6D  0000               	dw	0
  1923  01FF6F  0000               	dw	0
  1924  01FF71  0000               	dw	0
  1925  01FF73  00                 	db	0
  1926  01FF74  1957               	dw	6487
  1927  01FF76  42                 	db	66
  1928                           
  1929                           	psect	mediumconst
  1930  00F812                     __pmediumconst:
  1931                           	opt callstack 0
  1932  00F812  00                 	db	0
  1933  00F813                     _BVSOC_TABLE:
  1934                           	opt callstack 0
  1935  00F813  59D8               	dw	23000
  1936  00F815  0000               	dw	0
  1937  00F817  0005               	dw	5
  1938  00F819  0000               	dw	0
  1939  00F81B  5B68               	dw	23400
  1940  00F81D  0000               	dw	0
  1941  00F81F  000A               	dw	10
  1942  00F821  0000               	dw	0
  1943  00F823  5C30               	dw	23600
  1944  00F825  0000               	dw	0
  1945  00F827  0014               	dw	20
  1946  00F829  0000               	dw	0
  1947  00F82B  5E38               	dw	24120
  1948  00F82D  0000               	dw	0
  1949  00F82F  0019               	dw	25
  1950  00F831  0000               	dw	0
  1951  00F833  5E88               	dw	24200
  1952  00F835  0000               	dw	0
  1953  00F837  001E               	dw	30
  1954  00F839  0000               	dw	0
  1955  00F83B  5F78               	dw	24440
  1956  00F83D  0000               	dw	0
  1957  00F83F  0028               	dw	40
  1958  00F841  0000               	dw	0
  1959  00F843  5FDC               	dw	24540
  1960  00F845  0000               	dw	0
  1961  00F847  002D               	dw	45
  1962  00F849  0000               	dw	0
  1963  00F84B  6018               	dw	24600
  1964  00F84D  0000               	dw	0
  1965  00F84F  0032               	dw	50
  1966  00F851  0000               	dw	0
  1967  00F853  6046               	dw	24646
  1968  00F855  0000               	dw	0
  1969  00F857  0035               	dw	53
  1970  00F859  0000               	dw	0
  1971  00F85B  607C               	dw	24700
  1972  00F85D  0000               	dw	0
  1973  00F85F  0037               	dw	55
  1974  00F861  0000               	dw	0
  1975  00F863  60AE               	dw	24750
  1976  00F865  0000               	dw	0
  1977  00F867  0039               	dw	57
  1978  00F869  0000               	dw	0
  1979  00F86B  60E0               	dw	24800
  1980  00F86D  0000               	dw	0
  1981  00F86F  003C               	dw	60
  1982  00F871  0000               	dw	0
  1983  00F873  6112               	dw	24850
  1984  00F875  0000               	dw	0
  1985  00F877  003F               	dw	63
  1986  00F879  0000               	dw	0
  1987  00F87B  615D               	dw	24925
  1988  00F87D  0000               	dw	0
  1989  00F87F  0043               	dw	67
  1990  00F881  0000               	dw	0
  1991  00F883  61A8               	dw	25000
  1992  00F885  0000               	dw	0
  1993  00F887  0046               	dw	70
  1994  00F889  0000               	dw	0
  1995  00F88B  61BC               	dw	25020
  1996  00F88D  0000               	dw	0
  1997  00F88F  0048               	dw	72
  1998  00F891  0000               	dw	0
  1999  00F893  61D0               	dw	25040
  2000  00F895  0000               	dw	0
  2001  00F897  004B               	dw	75
  2002  00F899  0000               	dw	0
  2003  00F89B  61DA               	dw	25050
  2004  00F89D  0000               	dw	0
  2005  00F89F  0050               	dw	80
  2006  00F8A1  0000               	dw	0
  2007  00F8A3  61E4               	dw	25060
  2008  00F8A5  0000               	dw	0
  2009  00F8A7  0055               	dw	85
  2010  00F8A9  0000               	dw	0
  2011  00F8AB  61F8               	dw	25080
  2012  00F8AD  0000               	dw	0
  2013  00F8AF  005A               	dw	90
  2014  00F8B1  0000               	dw	0
  2015  00F8B3  6208               	dw	25096
  2016  00F8B5  0000               	dw	0
  2017  00F8B7  005C               	dw	92
  2018  00F8B9  0000               	dw	0
  2019  00F8BB  6222               	dw	25122
  2020  00F8BD  0000               	dw	0
  2021  00F8BF  005D               	dw	93
  2022  00F8C1  0000               	dw	0
  2023  00F8C3  6234               	dw	25140
  2024  00F8C5  0000               	dw	0
  2025  00F8C7  005F               	dw	95
  2026  00F8C9  0000               	dw	0
  2027  00F8CB  6248               	dw	25160
  2028  00F8CD  0000               	dw	0
  2029  00F8CF  0061               	dw	97
  2030  00F8D1  0000               	dw	0
  2031  00F8D3  625C               	dw	25180
  2032  00F8D5  0000               	dw	0
  2033  00F8D7  0064               	dw	100
  2034  00F8D9  0000               	dw	0
  2035  00F8DB  6784               	dw	26500
  2036  00F8DD  0000               	dw	0
  2037  00F8DF  0062               	dw	98
  2038  00F8E1  0000               	dw	0
  2039  00F8E3                     __end_of_BVSOC_TABLE:
  2040                           	opt callstack 0
  2041  00F8E3                     ___month_to_secs@secs_through_month:
  2042                           	opt callstack 0
  2043  00F8E3  0000               	dw	0
  2044  00F8E5  0000               	dw	0
  2045  00F8E7  DE80               	dw	56960
  2046  00F8E9  0028               	dw	40
  2047  00F8EB  C880               	dw	51328
  2048  00F8ED  004D               	dw	77
  2049  00F8EF  A700               	dw	42752
  2050  00F8F1  0076               	dw	118
  2051  00F8F3  3400               	dw	13312
  2052  00F8F5  009E               	dw	158
  2053  00F8F7  1280               	dw	4736
  2054  00F8F9  00C7               	dw	199
  2055  00F8FB  9F80               	dw	40832
  2056  00F8FD  00EE               	dw	238
  2057  00F8FF  7E00               	dw	32256
  2058  00F901  0117               	dw	279
  2059  00F903  5C80               	dw	23680
  2060  00F905  0140               	dw	320
  2061  00F907  E980               	dw	59776
  2062  00F909  0167               	dw	359
  2063  00F90B  C800               	dw	51200
  2064  00F90D  0190               	dw	400
  2065  00F90F  5500               	dw	21760
  2066  00F911  01B8               	dw	440
  2067  00F913                     __end_of___month_to_secs@secs_through_month:
  2068                           	opt callstack 0
  2069  00F913                     ___secs_to_tm@days_in_month:
  2070                           	opt callstack 0
  2071  00F913  1F                 	db	31
  2072  00F914  1E                 	db	30
  2073  00F915  1F                 	db	31
  2074  00F916  1E                 	db	30
  2075  00F917  1F                 	db	31
  2076  00F918  1F                 	db	31
  2077  00F919  1E                 	db	30
  2078  00F91A  1F                 	db	31
  2079  00F91B  1E                 	db	30
  2080  00F91C  1F                 	db	31
  2081  00F91D  1F                 	db	31
  2082  00F91E  1D                 	db	29
  2083  00F91F                     __end_of___secs_to_tm@days_in_month:
  2084                           	opt callstack 0
  2085  00F91F                     _T:
  2086                           	opt callstack 0
  2087  00F91F  63                 	db	99
  2088  00F920  6F                 	db	111
  2089  00F921  6D                 	db	109
  2090  00F922  6D                 	db	109
  2091  00F923  61                 	db	97
  2092  00F924  6E                 	db	110
  2093  00F925  64                 	db	100
  2094  00F926  73                 	db	115
  2095  00F927  20                 	db	32
  2096  00F928  31                 	db	49
  2097  00F929  00                 	db	0
  2098  00F92A  00                 	db	0
  2099  00F92B  00                 	db	0
  2100  00F92C  00                 	db	0
  2101  00F92D  00                 	db	0
  2102  00F92E  00                 	db	0
  2103  00F92F  00                 	db	0
  2104  00F930  00                 	db	0
  2105  00F931  64                 	db	100
  2106  00F932  69                 	db	105
  2107  00F933  73                 	db	115
  2108  00F934  70                 	db	112
  2109  00F935  6C                 	db	108
  2110  00F936  61                 	db	97
  2111  00F937  79                 	db	121
  2112  00F938  73                 	db	115
  2113  00F939  20                 	db	32
  2114  00F93A  31                 	db	49
  2115  00F93B  00                 	db	0
  2116  00F93C  00                 	db	0
  2117  00F93D  00                 	db	0
  2118  00F93E  00                 	db	0
  2119  00F93F  00                 	db	0
  2120  00F940  00                 	db	0
  2121  00F941  00                 	db	0
  2122  00F942  00                 	db	0
  2123  00F943  63                 	db	99
  2124  00F944  6F                 	db	111
  2125  00F945  6D                 	db	109
  2126  00F946  6D                 	db	109
  2127  00F947  61                 	db	97
  2128  00F948  6E                 	db	110
  2129  00F949  64                 	db	100
  2130  00F94A  73                 	db	115
  2131  00F94B  20                 	db	32
  2132  00F94C  32                 	db	50
  2133  00F94D  00                 	db	0
  2134  00F94E  00                 	db	0
  2135  00F94F  00                 	db	0
  2136  00F950  00                 	db	0
  2137  00F951  00                 	db	0
  2138  00F952  00                 	db	0
  2139  00F953  00                 	db	0
  2140  00F954  00                 	db	0
  2141  00F955  64                 	db	100
  2142  00F956  69                 	db	105
  2143  00F957  73                 	db	115
  2144  00F958  70                 	db	112
  2145  00F959  6C                 	db	108
  2146  00F95A  61                 	db	97
  2147  00F95B  79                 	db	121
  2148  00F95C  73                 	db	115
  2149  00F95D  20                 	db	32
  2150  00F95E  32                 	db	50
  2151  00F95F  00                 	db	0
  2152  00F960  00                 	db	0
  2153  00F961  00                 	db	0
  2154  00F962  00                 	db	0
  2155  00F963  00                 	db	0
  2156  00F964  00                 	db	0
  2157  00F965  00                 	db	0
  2158  00F966  00                 	db	0
  2159  00F967  63                 	db	99
  2160  00F968  6F                 	db	111
  2161  00F969  6D                 	db	109
  2162  00F96A  6D                 	db	109
  2163  00F96B  61                 	db	97
  2164  00F96C  6E                 	db	110
  2165  00F96D  64                 	db	100
  2166  00F96E  73                 	db	115
  2167  00F96F  20                 	db	32
  2168  00F970  33                 	db	51
  2169  00F971  00                 	db	0
  2170  00F972  00                 	db	0
  2171  00F973  00                 	db	0
  2172  00F974  00                 	db	0
  2173  00F975  00                 	db	0
  2174  00F976  00                 	db	0
  2175  00F977  00                 	db	0
  2176  00F978  00                 	db	0
  2177  00F979  64                 	db	100
  2178  00F97A  69                 	db	105
  2179  00F97B  73                 	db	115
  2180  00F97C  70                 	db	112
  2181  00F97D  6C                 	db	108
  2182  00F97E  61                 	db	97
  2183  00F97F  79                 	db	121
  2184  00F980  73                 	db	115
  2185  00F981  20                 	db	32
  2186  00F982  33                 	db	51
  2187  00F983  00                 	db	0
  2188  00F984  00                 	db	0
  2189  00F985  00                 	db	0
  2190  00F986  00                 	db	0
  2191  00F987  00                 	db	0
  2192  00F988  00                 	db	0
  2193  00F989  00                 	db	0
  2194  00F98A  00                 	db	0
  2195  00F98B  63                 	db	99
  2196  00F98C  6F                 	db	111
  2197  00F98D  6D                 	db	109
  2198  00F98E  6D                 	db	109
  2199  00F98F  61                 	db	97
  2200  00F990  6E                 	db	110
  2201  00F991  64                 	db	100
  2202  00F992  73                 	db	115
  2203  00F993  20                 	db	32
  2204  00F994  34                 	db	52
  2205  00F995  00                 	db	0
  2206  00F996  00                 	db	0
  2207  00F997  00                 	db	0
  2208  00F998  00                 	db	0
  2209  00F999  00                 	db	0
  2210  00F99A  00                 	db	0
  2211  00F99B  00                 	db	0
  2212  00F99C  00                 	db	0
  2213  00F99D  64                 	db	100
  2214  00F99E  69                 	db	105
  2215  00F99F  73                 	db	115
  2216  00F9A0  70                 	db	112
  2217  00F9A1  6C                 	db	108
  2218  00F9A2  61                 	db	97
  2219  00F9A3  79                 	db	121
  2220  00F9A4  73                 	db	115
  2221  00F9A5  20                 	db	32
  2222  00F9A6  34                 	db	52
  2223  00F9A7  00                 	db	0
  2224  00F9A8  00                 	db	0
  2225  00F9A9  00                 	db	0
  2226  00F9AA  00                 	db	0
  2227  00F9AB  00                 	db	0
  2228  00F9AC  00                 	db	0
  2229  00F9AD  00                 	db	0
  2230  00F9AE  00                 	db	0
  2231  00F9AF                     __end_of_T:
  2232                           	opt callstack 0
  2233  00F9AF                     _spin:
  2234                           	opt callstack 0
  2235  00F9AF  7C                 	db	124
  2236  00F9B0  7C                 	db	124
  2237  00F9B1  2F                 	db	47
  2238  00F9B2  2F                 	db	47
  2239  00F9B3  2D                 	db	45
  2240  00F9B4  2D                 	db	45
  2241  00F9B5  00                 	db	0
  2242  00F9B6  00                 	db	0
  2243  00F9B7  00                 	db	0
  2244  00F9B8  00                 	db	0
  2245  00F9B9  00                 	db	0
  2246  00F9BA  00                 	db	0
  2247  00F9BB  00                 	db	0
  2248  00F9BC  00                 	db	0
  2249  00F9BD  00                 	db	0
  2250  00F9BE  00                 	db	0
  2251  00F9BF  00                 	db	0
  2252  00F9C0  00                 	db	0
  2253  00F9C1  00                 	db	0
  2254  00F9C2  00                 	db	0
  2255  00F9C3  7C                 	db	124
  2256  00F9C4  7C                 	db	124
  2257  00F9C5  2F                 	db	47
  2258  00F9C6  2F                 	db	47
  2259  00F9C7  2D                 	db	45
  2260  00F9C8  2D                 	db	45
  2261  00F9C9  5C                 	db	92
  2262  00F9CA  5C                 	db	92
  2263  00F9CB  00                 	db	0
  2264  00F9CC  00                 	db	0
  2265  00F9CD  00                 	db	0
  2266  00F9CE  00                 	db	0
  2267  00F9CF  00                 	db	0
  2268  00F9D0  00                 	db	0
  2269  00F9D1  00                 	db	0
  2270  00F9D2  00                 	db	0
  2271  00F9D3  00                 	db	0
  2272  00F9D4  00                 	db	0
  2273  00F9D5  00                 	db	0
  2274  00F9D6  00                 	db	0
  2275  00F9D7  4F                 	db	79
  2276  00F9D8  4F                 	db	79
  2277  00F9D9  4F                 	db	79
  2278  00F9DA  4F                 	db	79
  2279  00F9DB  4F                 	db	79
  2280  00F9DC  4F                 	db	79
  2281  00F9DD  2D                 	db	45
  2282  00F9DE  2D                 	db	45
  2283  00F9DF  5F                 	db	95
  2284  00F9E0  5F                 	db	95
  2285  00F9E1  2D                 	db	45
  2286  00F9E2  00                 	db	0
  2287  00F9E3  00                 	db	0
  2288  00F9E4  00                 	db	0
  2289  00F9E5  00                 	db	0
  2290  00F9E6  00                 	db	0
  2291  00F9E7  00                 	db	0
  2292  00F9E8  00                 	db	0
  2293  00F9E9  00                 	db	0
  2294  00F9EA  00                 	db	0
  2295  00F9EB  76                 	db	118
  2296  00F9EC  76                 	db	118
  2297  00F9ED  3C                 	db	60
  2298  00F9EE  3C                 	db	60
  2299  00F9EF  5E                 	db	94
  2300  00F9F0  5E                 	db	94
  2301  00F9F1  3E                 	db	62
  2302  00F9F2  3E                 	db	62
  2303  00F9F3  00                 	db	0
  2304  00F9F4  00                 	db	0
  2305  00F9F5  00                 	db	0
  2306  00F9F6  00                 	db	0
  2307  00F9F7  00                 	db	0
  2308  00F9F8  00                 	db	0
  2309  00F9F9  00                 	db	0
  2310  00F9FA  00                 	db	0
  2311  00F9FB  00                 	db	0
  2312  00F9FC  00                 	db	0
  2313  00F9FD  00                 	db	0
  2314  00F9FE  00                 	db	0
  2315  00F9FF  2E                 	db	46
  2316  00FA00  2E                 	db	46
  2317  00FA01  2A                 	db	42
  2318  00FA02  2A                 	db	42
  2319  00FA03  78                 	db	120
  2320  00FA04  23                 	db	35
  2321  00FA05  78                 	db	120
  2322  00FA06  23                 	db	35
  2323  00FA07  58                 	db	88
  2324  00FA08  58                 	db	88
  2325  00FA09  7C                 	db	124
  2326  00FA0A  7C                 	db	124
  2327  00FA0B  2D                 	db	45
  2328  00FA0C  2D                 	db	45
  2329  00FA0D  00                 	db	0
  2330  00FA0E  00                 	db	0
  2331  00FA0F  00                 	db	0
  2332  00FA10  00                 	db	0
  2333  00FA11  00                 	db	0
  2334  00FA12  00                 	db	0
  2335  00FA13  2E                 	db	46
  2336  00FA14  2E                 	db	46
  2337  00FA15  6F                 	db	111
  2338  00FA16  6F                 	db	111
  2339  00FA17  4F                 	db	79
  2340  00FA18  4F                 	db	79
  2341  00FA19  6F                 	db	111
  2342  00FA1A  6F                 	db	111
  2343  00FA1B  00                 	db	0
  2344  00FA1C  00                 	db	0
  2345  00FA1D  00                 	db	0
  2346  00FA1E  00                 	db	0
  2347  00FA1F  00                 	db	0
  2348  00FA20  00                 	db	0
  2349  00FA21  00                 	db	0
  2350  00FA22  00                 	db	0
  2351  00FA23  00                 	db	0
  2352  00FA24  00                 	db	0
  2353  00FA25  00                 	db	0
  2354  00FA26  00                 	db	0
  2355  00FA27                     __end_of_spin:
  2356                           	opt callstack 0
  2357  00FA27  0000               	dw	0
  2358  00FA29  3F80               	dw	16256
  2359  00FA2B  0000               	dw	0
  2360  00FA2D  3FC0               	dw	16320
  2361  00FA2F                     __end_of_bp:
  2362                           	opt callstack 0
  2363  00FA2F                     ___gmt:
  2364                           	opt callstack 0
  2365  00FA2F  47                 	db	71
  2366  00FA30  4D                 	db	77
  2367  00FA31  54                 	db	84
  2368  00FA32  00                 	db	0
  2369  00FA33                     __end_of___gmt:
  2370                           	opt callstack 0
  2371  00FA33  AA00               	dw	43520
  2372  00FA35  3FB8               	dw	16312
  2373  00FA37                     __end_of_ivln2_h:
  2374                           	opt callstack 0
  2375  00FA37  23C6               	dw	9158
  2376  00FA39  B8F6               	dw	47350
  2377  00FA3B                     __end_of_cp_l:
  2378                           	opt callstack 0
  2379  00FA3B  4000               	dw	16384
  2380  00FA3D  3F76               	dw	16246
  2381  00FA3F                     __end_of_cp_h:
  2382                           	opt callstack 0
  2383  0000                     _IVTADL	set	14493
  2384  0000                     _IVTADH	set	14494
  2385  0000                     _IVTADU	set	14495
  2386  0000                     _CRCDATH	set	14689
  2387  0000                     _CRCDATL	set	14688
  2388  0000                     _CRCCON0bits	set	14696
  2389  0000                     _CRCCON1bits	set	14697
  2390  0000                     _CRCXORL	set	14694
  2391  0000                     _CRCXORH	set	14695
  2392  0000                     _SCANTRIG	set	14717
  2393  0000                     _SCANHADRL	set	14713
  2394  0000                     _SCANHADRH	set	14714
  2395  0000                     _SCANHADRU	set	14715
  2396  0000                     _SCANLADRL	set	14710
  2397  0000                     _SCANLADRH	set	14711
  2398  0000                     _SCANLADRU	set	14712
  2399  0000                     _SCANCON0	set	14716
  2400  0000                     _CRCACCH	set	14691
  2401  0000                     _CRCACCL	set	14690
  2402  0000                     _CRCCON1	set	14697
  2403  0000                     _CRCCON0	set	14696
  2404  0000                     _PIR6bits	set	14758
  2405  0000                     _PIR4bits	set	14756
  2406  0000                     _PIE8bits	set	14744
  2407  0000                     _PIR8bits	set	14760
  2408  0000                     _PIR0bits	set	14752
  2409  0000                     _NVMCON2	set	14822
  2410  0000                     _NVMDAT	set	14819
  2411  0000                     _NVMADRL	set	14816
  2412  0000                     _NVMADRH	set	14817
  2413  0000                     _NVMCON1bits	set	14821
  2414  0000                     _SCANPR	set	14839
  2415  0000                     _DMA2PR	set	14836
  2416  0000                     _DMA1PR	set	14835
  2417  0000                     _MAINPR	set	14834
  2418  0000                     _ISRPR	set	14833
  2419  0000                     _PIE2bits	set	14738
  2420  0000                     _PIR2bits	set	14754
  2421  0000                     _PIE9bits	set	14745
  2422  0000                     _PIR9bits	set	14761
  2423  0000                     _PIE6bits	set	14742
  2424  0000                     _PIE3bits	set	14739
  2425  0000                     _PMD7	set	14791
  2426  0000                     _PMD6	set	14790
  2427  0000                     _PMD5	set	14789
  2428  0000                     _PMD4	set	14788
  2429  0000                     _PMD3	set	14787
  2430  0000                     _PMD2	set	14786
  2431  0000                     _PMD1	set	14785
  2432  0000                     _PMD0	set	14784
  2433  0000                     _OSCTUNE	set	14814
  2434  0000                     _OSCFRQ	set	14815
  2435  0000                     _OSCEN	set	14813
  2436  0000                     _OSCCON3	set	14811
  2437  0000                     _OSCCON1	set	14809
  2438  0000                     _IPR8bits	set	14728
  2439  0000                     _IPR9bits	set	14729
  2440  0000                     _IPR5bits	set	14725
  2441  0000                     _IPR1bits	set	14721
  2442  0000                     _IPR3bits	set	14723
  2443  0000                     _IPR6bits	set	14726
  2444  0000                     _IPR2bits	set	14722
  2445  0000                     _PIE5bits	set	14741
  2446  0000                     _PIE1bits	set	14737
  2447  0000                     _PIR5bits	set	14757
  2448  0000                     _PIR1bits	set	14753
  2449  0000                     _PLLR	set	118496
  2450  0000                     _SPI1SDIPPS	set	15071
  2451  0000                     _U1RXPPS	set	15077
  2452  0000                     _RC6PPS	set	14870
  2453  0000                     _RC5PPS	set	14869
  2454  0000                     _INT1PPS	set	15041
  2455  0000                     _RD1PPS	set	14873
  2456  0000                     _INT0PPS	set	15040
  2457  0000                     _RC3PPS	set	14867
  2458  0000                     _RB6PPS	set	14862
  2459  0000                     _SPI1SCKPPS	set	15070
  2460  0000                     _U2RXPPS	set	15080
  2461  0000                     _SLRCONF	set	14995
  2462  0000                     _SLRCONE	set	14979
  2463  0000                     _SLRCOND	set	14963
  2464  0000                     _SLRCONC	set	14947
  2465  0000                     _SLRCONB	set	14931
  2466  0000                     _SLRCONA	set	14915
  2467  0000                     _ODCOND	set	14962
  2468  0000                     _ODCONC	set	14946
  2469  0000                     _ODCONB	set	14930
  2470  0000                     _ODCONA	set	14914
  2471  0000                     _ODCONF	set	14994
  2472  0000                     _ODCONE	set	14978
  2473  0000                     _WPUC	set	14945
  2474  0000                     _WPUA	set	14913
  2475  0000                     _WPUB	set	14929
  2476  0000                     _WPUE	set	14977
  2477  0000                     _WPUF	set	14993
  2478  0000                     _WPUD	set	14961
  2479  0000                     _ANSELA	set	14912
  2480  0000                     _ANSELF	set	14992
  2481  0000                     _ANSELE	set	14976
  2482  0000                     _ANSELB	set	14928
  2483  0000                     _ANSELC	set	14944
  2484  0000                     _ANSELD	set	14960
  2485  0000                     _DMA2SSA	set	15321
  2486  0000                     _DMA1SSA	set	15353
  2487  0000                     _DMA2DSZ	set	15310
  2488  0000                     _DMA2SSZ	set	15319
  2489  0000                     _DMA2DSA	set	15312
  2490  0000                     _DMA1DSZ	set	15342
  2491  0000                     _DMA1SSZ	set	15351
  2492  0000                     _DMA1DSA	set	15344
  2493  0000                     _DMA2CON0bits	set	15324
  2494  0000                     _DMA2CON1bits	set	15325
  2495  0000                     _DMA1CON0bits	set	15356
  2496  0000                     _DMA1CON1bits	set	15357
  2497  0000                     _DMA2CON0	set	15324
  2498  0000                     _DMA2AIRQ	set	15326
  2499  0000                     _DMA2SIRQ	set	15327
  2500  0000                     _DMA2CON1	set	15325
  2501  0000                     _DMA1CON0	set	15356
  2502  0000                     _DMA1AIRQ	set	15358
  2503  0000                     _DMA1SIRQ	set	15359
  2504  0000                     _DMA1CON1	set	15357
  2505  0000                     _CLKRCON	set	15589
  2506  0000                     _CLKRCLK	set	15590
  2507  0000                     _SPI1CON1bits	set	15637
  2508  0000                     _SPI1STATUSbits	set	15639
  2509  0000                     _SPI1INTFbits	set	15642
  2510  0000                     _SPI1CON0bits	set	15636
  2511  0000                     _SPI1RXB	set	15632
  2512  0000                     _SPI1TXB	set	15633
  2513  0000                     _SPI1TCNTL	set	15634
  2514  0000                     _SPI1CON0	set	15636
  2515  0000                     _SPI1CLK	set	15644
  2516  0000                     _SPI1BAUD	set	15641
  2517  0000                     _SPI1CON2	set	15638
  2518  0000                     _SPI1CON1	set	15637
  2519  0000                     _U2RXB	set	15824
  2520  0000                     _U2TXB	set	15826
  2521  0000                     _U2ERRIE	set	15842
  2522  0000                     _U2ERRIR	set	15841
  2523  0000                     _U2UIR	set	15840
  2524  0000                     _U2FIFO	set	15839
  2525  0000                     _U2BRGH	set	15838
  2526  0000                     _U2BRGL	set	15837
  2527  0000                     _U2CON2	set	15836
  2528  0000                     _U2CON1	set	15835
  2529  0000                     _U2CON0	set	15834
  2530  0000                     _U2P3L	set	15832
  2531  0000                     _U2P2L	set	15830
  2532  0000                     _U2P1L	set	15828
  2533  0000                     _U1RXB	set	15848
  2534  0000                     _U1ERRIE	set	15866
  2535  0000                     _U1ERRIR	set	15865
  2536  0000                     _U1UIR	set	15864
  2537  0000                     _U1FIFO	set	15863
  2538  0000                     _U1BRGH	set	15862
  2539  0000                     _U1BRGL	set	15861
  2540  0000                     _U1CON2	set	15860
  2541  0000                     _U1CON1	set	15859
  2542  0000                     _U1CON0	set	15858
  2543  0000                     _U1P3H	set	15857
  2544  0000                     _U1P3L	set	15856
  2545  0000                     _U1P2H	set	15855
  2546  0000                     _U1P2L	set	15854
  2547  0000                     _U1P1H	set	15853
  2548  0000                     _U1P1L	set	15852
  2549  0000                     _FVRCON	set	16065
  2550  0000                     _ADFLTRL	set	16102
  2551  0000                     _ADFLTRH	set	16103
  2552  0000                     _ADCON0bits	set	16120
  2553  0000                     _ADCON0	set	16120
  2554  0000                     _ADCLK	set	16127
  2555  0000                     _ADACT	set	16126
  2556  0000                     _ADREF	set	16125
  2557  0000                     _ADSTAT	set	16124
  2558  0000                     _ADCON3	set	16123
  2559  0000                     _ADCON2	set	16122
  2560  0000                     _ADCON1	set	16121
  2561  0000                     _ADPREH	set	16119
  2562  0000                     _ADPREL	set	16118
  2563  0000                     _ADCAP	set	16117
  2564  0000                     _ADACQH	set	16116
  2565  0000                     _ADACQL	set	16115
  2566  0000                     _ADPCH	set	16113
  2567  0000                     _ADRPT	set	16108
  2568  0000                     _ADACCU	set	16106
  2569  0000                     _ADSTPTH	set	16101
  2570  0000                     _ADSTPTL	set	16100
  2571  0000                     _ADUTHH	set	16097
  2572  0000                     _ADUTHL	set	16096
  2573  0000                     _ADLTHH	set	16095
  2574  0000                     _ADLTHL	set	16094
  2575  0000                     _CCPTMRS1bits	set	16223
  2576  0000                     _PORTDbits	set	16333
  2577  0000                     _PORTFbits	set	16335
  2578  0000                     _LATFbits	set	16319
  2579  0000                     _LATCbits	set	16316
  2580  0000                     _LATDbits	set	16317
  2581  0000                     _PORTBbits	set	16331
  2582  0000                     _T3CONbits	set	16294
  2583  0000                     _T3CON	set	16294
  2584  0000                     _TMR3L	set	16292
  2585  0000                     _TMR3H	set	16293
  2586  0000                     _T3CLK	set	16297
  2587  0000                     _T3GATE	set	16296
  2588  0000                     _T3GCON	set	16295
  2589  0000                     _T2CON	set	16300
  2590  0000                     _T2TMR	set	16298
  2591  0000                     _T2PR	set	16299
  2592  0000                     _T2RST	set	16303
  2593  0000                     _T2HLT	set	16301
  2594  0000                     _T2CLKCON	set	16302
  2595  0000                     _PWM8DCL	set	16224
  2596  0000                     _PWM8DCH	set	16225
  2597  0000                     _PWM8CON	set	16226
  2598  0000                     _LATEbits	set	16318
  2599  0000                     _T5CONbits	set	16282
  2600  0000                     _T5CON	set	16282
  2601  0000                     _TMR5L	set	16280
  2602  0000                     _TMR5H	set	16281
  2603  0000                     _T5CLK	set	16285
  2604  0000                     _T5GATE	set	16284
  2605  0000                     _T5GCON	set	16283
  2606  0000                     _T6CON	set	16276
  2607  0000                     _T6TMR	set	16274
  2608  0000                     _T6PR	set	16275
  2609  0000                     _T6RST	set	16279
  2610  0000                     _T6HLT	set	16277
  2611  0000                     _T6CLKCON	set	16278
  2612  0000                     _TRISD	set	16325
  2613  0000                     _TRISC	set	16324
  2614  0000                     _TRISB	set	16323
  2615  0000                     _TRISA	set	16322
  2616  0000                     _TRISF	set	16327
  2617  0000                     _TRISE	set	16326
  2618  0000                     _LATC	set	16316
  2619  0000                     _LATB	set	16315
  2620  0000                     _LATF	set	16319
  2621  0000                     _LATA	set	16314
  2622  0000                     _LATD	set	16317
  2623  0000                     _LATE	set	16318
  2624  0000                     _IVTLOCKbits	set	16340
  2625  0000                     _IVTLOCK	set	16340
  2626  0000                     _INTCON0bits	set	16338
  2627  0000                     _GIE	set	130711
  2628  00FA3F                     STR_90:
  2629                           
  2630                           ; BSR set to: 57
  2631  00FA3F  20                 	db	32
  2632  00FA40  25                 	db	37
  2633  00FA41  63                 	db	99	;'c'
  2634  00FA42  20                 	db	32
  2635  00FA43  2C                 	db	44
  2636  00FA44  25                 	db	37
  2637  00FA45  6C                 	db	108	;'l'
  2638  00FA46  75                 	db	117	;'u'
  2639  00FA47  2C                 	db	44
  2640  00FA48  25                 	db	37
  2641  00FA49  34                 	db	52	;'4'
  2642  00FA4A  2E                 	db	46
  2643  00FA4B  34                 	db	52	;'4'
  2644  00FA4C  66                 	db	102	;'f'
  2645  00FA4D  2C                 	db	44
  2646  00FA4E  25                 	db	37
  2647  00FA4F  34                 	db	52	;'4'
  2648  00FA50  2E                 	db	46
  2649  00FA51  34                 	db	52	;'4'
  2650  00FA52  66                 	db	102	;'f'
  2651  00FA53  2C                 	db	44
  2652  00FA54  25                 	db	37
  2653  00FA55  34                 	db	52	;'4'
  2654  00FA56  2E                 	db	46
  2655  00FA57  34                 	db	52	;'4'
  2656  00FA58  66                 	db	102	;'f'
  2657  00FA59  2C                 	db	44
  2658  00FA5A  25                 	db	37
  2659  00FA5B  34                 	db	52	;'4'
  2660  00FA5C  2E                 	db	46
  2661  00FA5D  34                 	db	52	;'4'
  2662  00FA5E  66                 	db	102	;'f'
  2663  00FA5F  2C                 	db	44
  2664  00FA60  25                 	db	37
  2665  00FA61  34                 	db	52	;'4'
  2666  00FA62  2E                 	db	46
  2667  00FA63  34                 	db	52	;'4'
  2668  00FA64  66                 	db	102	;'f'
  2669  00FA65  2C                 	db	44
  2670  00FA66  25                 	db	37
  2671  00FA67  34                 	db	52	;'4'
  2672  00FA68  2E                 	db	46
  2673  00FA69  33                 	db	51	;'3'
  2674  00FA6A  66                 	db	102	;'f'
  2675  00FA6B  2C                 	db	44
  2676  00FA6C  25                 	db	37
  2677  00FA6D  34                 	db	52	;'4'
  2678  00FA6E  2E                 	db	46
  2679  00FA6F  33                 	db	51	;'3'
  2680  00FA70  66                 	db	102	;'f'
  2681  00FA71  2C                 	db	44
  2682  00FA72  25                 	db	37
  2683  00FA73  34                 	db	52	;'4'
  2684  00FA74  2E                 	db	46
  2685  00FA75  33                 	db	51	;'3'
  2686  00FA76  66                 	db	102	;'f'
  2687  00FA77  2C                 	db	44
  2688  00FA78  25                 	db	37
  2689  00FA79  34                 	db	52	;'4'
  2690  00FA7A  2E                 	db	46
  2691  00FA7B  33                 	db	51	;'3'
  2692  00FA7C  66                 	db	102	;'f'
  2693  00FA7D  2C                 	db	44
  2694  00FA7E  25                 	db	37
  2695  00FA7F  34                 	db	52	;'4'
  2696  00FA80  2E                 	db	46
  2697  00FA81  33                 	db	51	;'3'
  2698  00FA82  66                 	db	102	;'f'
  2699  00FA83  2C                 	db	44
  2700  00FA84  25                 	db	37
  2701  00FA85  34                 	db	52	;'4'
  2702  00FA86  2E                 	db	46
  2703  00FA87  33                 	db	51	;'3'
  2704  00FA88  66                 	db	102	;'f'
  2705  00FA89  2C                 	db	44
  2706  00FA8A  25                 	db	37
  2707  00FA8B  64                 	db	100	;'d'
  2708  00FA8C  2C                 	db	44
  2709  00FA8D  25                 	db	37
  2710  00FA8E  64                 	db	100	;'d'
  2711  00FA8F  2C                 	db	44
  2712  00FA90  25                 	db	37
  2713  00FA91  32                 	db	50	;'2'
  2714  00FA92  2E                 	db	46
  2715  00FA93  36                 	db	54	;'6'
  2716  00FA94  66                 	db	102	;'f'
  2717  00FA95  2C                 	db	44
  2718  00FA96  25                 	db	37
  2719  00FA97  34                 	db	52	;'4'
  2720  00FA98  2E                 	db	46
  2721  00FA99  33                 	db	51	;'3'
  2722  00FA9A  66                 	db	102	;'f'
  2723  00FA9B  2C                 	db	44
  2724  00FA9C  25                 	db	37
  2725  00FA9D  64                 	db	100	;'d'
  2726  00FA9E  2C                 	db	44
  2727  00FA9F  25                 	db	37
  2728  00FAA0  64                 	db	100	;'d'
  2729  00FAA1  2C                 	db	44
  2730  00FAA2  25                 	db	37
  2731  00FAA3  6C                 	db	108	;'l'
  2732  00FAA4  75                 	db	117	;'u'
  2733  00FAA5  2C                 	db	44
  2734  00FAA6  25                 	db	37
  2735  00FAA7  6C                 	db	108	;'l'
  2736  00FAA8  75                 	db	117	;'u'
  2737  00FAA9  2C                 	db	44
  2738  00FAAA  25                 	db	37
  2739  00FAAB  34                 	db	52	;'4'
  2740  00FAAC  2E                 	db	46
  2741  00FAAD  33                 	db	51	;'3'
  2742  00FAAE  66                 	db	102	;'f'
  2743  00FAAF  2C                 	db	44
  2744  00FAB0  25                 	db	37
  2745  00FAB1  34                 	db	52	;'4'
  2746  00FAB2  2E                 	db	46
  2747  00FAB3  33                 	db	51	;'3'
  2748  00FAB4  66                 	db	102	;'f'
  2749  00FAB5  2C                 	db	44
  2750  00FAB6  25                 	db	37
  2751  00FAB7  34                 	db	52	;'4'
  2752  00FAB8  2E                 	db	46
  2753  00FAB9  33                 	db	51	;'3'
  2754  00FABA  66                 	db	102	;'f'
  2755  00FABB  0D                 	db	13
  2756  00FABC  0A                 	db	10
  2757  00FABD  00                 	db	0
  2758  00FABE                     STR_128:
  2759                           
  2760                           ; BSR set to: 57
  2761  00FABE  4A                 	db	74	;'J'
  2762  00FABF  61                 	db	97	;'a'
  2763  00FAC0  6E                 	db	110	;'n'
  2764  00FAC1  46                 	db	70	;'F'
  2765  00FAC2  65                 	db	101	;'e'
  2766  00FAC3  62                 	db	98	;'b'
  2767  00FAC4  4D                 	db	77	;'M'
  2768  00FAC5  61                 	db	97	;'a'
  2769  00FAC6  72                 	db	114	;'r'
  2770  00FAC7  41                 	db	65	;'A'
  2771  00FAC8  70                 	db	112	;'p'
  2772  00FAC9  72                 	db	114	;'r'
  2773  00FACA  4D                 	db	77	;'M'
  2774  00FACB  61                 	db	97	;'a'
  2775  00FACC  79                 	db	121	;'y'
  2776  00FACD  4A                 	db	74	;'J'
  2777  00FACE  75                 	db	117	;'u'
  2778  00FACF  6E                 	db	110	;'n'
  2779  00FAD0  4A                 	db	74	;'J'
  2780  00FAD1  75                 	db	117	;'u'
  2781  00FAD2  6C                 	db	108	;'l'
  2782  00FAD3  41                 	db	65	;'A'
  2783  00FAD4  75                 	db	117	;'u'
  2784  00FAD5  67                 	db	103	;'g'
  2785  00FAD6  53                 	db	83	;'S'
  2786  00FAD7  65                 	db	101	;'e'
  2787  00FAD8  70                 	db	112	;'p'
  2788  00FAD9  4F                 	db	79	;'O'
  2789  00FADA  63                 	db	99	;'c'
  2790  00FADB  74                 	db	116	;'t'
  2791  00FADC  4E                 	db	78	;'N'
  2792  00FADD  6F                 	db	111	;'o'
  2793  00FADE  76                 	db	118	;'v'
  2794  00FADF  44                 	db	68	;'D'
  2795  00FAE0  65                 	db	101	;'e'
  2796  00FAE1  63                 	db	99	;'c'
  2797  00FAE2  00                 	db	0
  2798  00FAE3                     STR_44:
  2799                           
  2800                           ; BSR set to: 57
  2801  00FAE3  53                 	db	83	;'S'
  2802  00FAE4  25                 	db	37
  2803  00FAE5  63                 	db	99	;'c'
  2804  00FAE6  43                 	db	67	;'C'
  2805  00FAE7  20                 	db	32
  2806  00FAE8  25                 	db	37
  2807  00FAE9  64                 	db	100	;'d'
  2808  00FAEA  20                 	db	32
  2809  00FAEB  52                 	db	82	;'R'
  2810  00FAEC  55                 	db	85	;'U'
  2811  00FAED  4E                 	db	78	;'N'
  2812  00FAEE  20                 	db	32
  2813  00FAEF  25                 	db	37
  2814  00FAF0  64                 	db	100	;'d'
  2815  00FAF1  20                 	db	32
  2816  00FAF2  56                 	db	86	;'V'
  2817  00FAF3  25                 	db	37
  2818  00FAF4  32                 	db	50	;'2'
  2819  00FAF5  2E                 	db	46
  2820  00FAF6  32                 	db	50	;'2'
  2821  00FAF7  66                 	db	102	;'f'
  2822  00FAF8  20                 	db	32
  2823  00FAF9  20                 	db	32
  2824  00FAFA  20                 	db	32
  2825  00FAFB  20                 	db	32
  2826  00FAFC  20                 	db	32
  2827  00FAFD  20                 	db	32
  2828  00FAFE  20                 	db	32
  2829  00FAFF  00                 	db	0
  2830  00FB00                     STR_22:
  2831                           
  2832                           ; BSR set to: 57
  2833  00FB00  52                 	db	82	;'R'
  2834  00FB01  31                 	db	49	;'1'
  2835  00FB02  20                 	db	32
  2836  00FB03  25                 	db	37
  2837  00FB04  32                 	db	50	;'2'
  2838  00FB05  2E                 	db	46
  2839  00FB06  33                 	db	51	;'3'
  2840  00FB07  66                 	db	102	;'f'
  2841  00FB08  20                 	db	32
  2842  00FB09  25                 	db	37
  2843  00FB0A  33                 	db	51	;'3'
  2844  00FB0B  2E                 	db	46
  2845  00FB0C  34                 	db	52	;'4'
  2846  00FB0D  66                 	db	102	;'f'
  2847  00FB0E  20                 	db	32
  2848  00FB0F  20                 	db	32
  2849  00FB10  20                 	db	32
  2850  00FB11  20                 	db	32
  2851  00FB12  20                 	db	32
  2852  00FB13  20                 	db	32
  2853  00FB14  20                 	db	32
  2854  00FB15  20                 	db	32
  2855  00FB16  20                 	db	32
  2856  00FB17  20                 	db	32
  2857  00FB18  20                 	db	32
  2858  00FB19  00                 	db	0
  2859  00FB1A                     STR_23:
  2860                           
  2861                           ; BSR set to: 57
  2862  00FB1A  52                 	db	82	;'R'
  2863  00FB1B  32                 	db	50	;'2'
  2864  00FB1C  20                 	db	32
  2865  00FB1D  25                 	db	37
  2866  00FB1E  32                 	db	50	;'2'
  2867  00FB1F  2E                 	db	46
  2868  00FB20  33                 	db	51	;'3'
  2869  00FB21  66                 	db	102	;'f'
  2870  00FB22  20                 	db	32
  2871  00FB23  25                 	db	37
  2872  00FB24  33                 	db	51	;'3'
  2873  00FB25  2E                 	db	46
  2874  00FB26  34                 	db	52	;'4'
  2875  00FB27  66                 	db	102	;'f'
  2876  00FB28  20                 	db	32
  2877  00FB29  20                 	db	32
  2878  00FB2A  20                 	db	32
  2879  00FB2B  20                 	db	32
  2880  00FB2C  20                 	db	32
  2881  00FB2D  20                 	db	32
  2882  00FB2E  20                 	db	32
  2883  00FB2F  20                 	db	32
  2884  00FB30  20                 	db	32
  2885  00FB31  20                 	db	32
  2886  00FB32  20                 	db	32
  2887  00FB33  00                 	db	0
  2888  00FB34                     STR_13:
  2889                           
  2890                           ; BSR set to: 57
  2891  00FB34  53                 	db	83	;'S'
  2892  00FB35  20                 	db	32
  2893  00FB36  53                 	db	83	;'S'
  2894  00FB37  25                 	db	37
  2895  00FB38  63                 	db	99	;'c'
  2896  00FB39  43                 	db	67	;'C'
  2897  00FB3A  20                 	db	32
  2898  00FB3B  25                 	db	37
  2899  00FB3C  64                 	db	100	;'d'
  2900  00FB3D  20                 	db	32
  2901  00FB3E  25                 	db	37
  2902  00FB3F  32                 	db	50	;'2'
  2903  00FB40  2E                 	db	46
  2904  00FB41  34                 	db	52	;'4'
  2905  00FB42  66                 	db	102	;'f'
  2906  00FB43  20                 	db	32
  2907  00FB44  20                 	db	32
  2908  00FB45  20                 	db	32
  2909  00FB46  20                 	db	32
  2910  00FB47  20                 	db	32
  2911  00FB48  20                 	db	32
  2912  00FB49  20                 	db	32
  2913  00FB4A  20                 	db	32
  2914  00FB4B  20                 	db	32
  2915  00FB4C  20                 	db	32
  2916  00FB4D  00                 	db	0
  2917  00FB4E                     
  2918                           ; BSR set to: 57
  2919  00FB4E  20                 	db	32
  2920  00FB4F  4D                 	db	77	;'M'
  2921  00FB50  65                 	db	101	;'e'
  2922  00FB51  73                 	db	115	;'s'
  2923  00FB52  67                 	db	103	;'g'
  2924  00FB53  20                 	db	32
  2925  00FB54  25                 	db	37
  2926  00FB55  64                 	db	100	;'d'
  2927  00FB56  20                 	db	32
  2928  00FB57  53                 	db	83	;'S'
  2929  00FB58  74                 	db	116	;'t'
  2930  00FB59  61                 	db	97	;'a'
  2931  00FB5A  63                 	db	99	;'c'
  2932  00FB5B  6B                 	db	107	;'k'
  2933  00FB5C  20                 	db	32
  2934  00FB5D  25                 	db	37
  2935  00FB5E  64                 	db	100	;'d'
  2936  00FB5F  20                 	db	32
  2937  00FB60  20                 	db	32
  2938  00FB61  20                 	db	32
  2939  00FB62  20                 	db	32
  2940  00FB63  20                 	db	32
  2941  00FB64  20                 	db	32
  2942  00FB65  00                 	db	0
  2943  00FB66                     STR_45:
  2944                           
  2945                           ; BSR set to: 57
  2946  00FB66  45                 	db	69	;'E'
  2947  00FB67  53                 	db	83	;'S'
  2948  00FB68  52                 	db	82	;'R'
  2949  00FB69  20                 	db	32
  2950  00FB6A  20                 	db	32
  2951  00FB6B  25                 	db	37
  2952  00FB6C  32                 	db	50	;'2'
  2953  00FB6D  2E                 	db	46
  2954  00FB6E  36                 	db	54	;'6'
  2955  00FB6F  66                 	db	102	;'f'
  2956  00FB70  20                 	db	32
  2957  00FB71  20                 	db	32
  2958  00FB72  20                 	db	32
  2959  00FB73  20                 	db	32
  2960  00FB74  20                 	db	32
  2961  00FB75  20                 	db	32
  2962  00FB76  20                 	db	32
  2963  00FB77  20                 	db	32
  2964  00FB78  20                 	db	32
  2965  00FB79  20                 	db	32
  2966  00FB7A  20                 	db	32
  2967  00FB7B  20                 	db	32
  2968  00FB7C  00                 	db	0
  2969  00FB7D                     STR_42:
  2970                           
  2971                           ; BSR set to: 57
  2972  00FB7D  42                 	db	66	;'B'
  2973  00FB7E  41                 	db	65	;'A'
  2974  00FB7F  54                 	db	84	;'T'
  2975  00FB80  54                 	db	84	;'T'
  2976  00FB81  20                 	db	32
  2977  00FB82  50                 	db	80	;'P'
  2978  00FB83  57                 	db	87	;'W'
  2979  00FB84  52                 	db	82	;'R'
  2980  00FB85  20                 	db	32
  2981  00FB86  25                 	db	37
  2982  00FB87  33                 	db	51	;'3'
  2983  00FB88  2E                 	db	46
  2984  00FB89  32                 	db	50	;'2'
  2985  00FB8A  66                 	db	102	;'f'
  2986  00FB8B  20                 	db	32
  2987  00FB8C  20                 	db	32
  2988  00FB8D  20                 	db	32
  2989  00FB8E  20                 	db	32
  2990  00FB8F  20                 	db	32
  2991  00FB90  20                 	db	32
  2992  00FB91  20                 	db	32
  2993  00FB92  20                 	db	32
  2994  00FB93  00                 	db	0
  2995  00FB94                     STR_46:
  2996                           
  2997                           ; BSR set to: 57
  2998  00FB94  52                 	db	82	;'R'
  2999  00FB95  31                 	db	49	;'1'
  3000  00FB96  20                 	db	32
  3001  00FB97  25                 	db	37
  3002  00FB98  32                 	db	50	;'2'
  3003  00FB99  2E                 	db	46
  3004  00FB9A  33                 	db	51	;'3'
  3005  00FB9B  66                 	db	102	;'f'
  3006  00FB9C  20                 	db	32
  3007  00FB9D  25                 	db	37
  3008  00FB9E  33                 	db	51	;'3'
  3009  00FB9F  2E                 	db	46
  3010  00FBA0  34                 	db	52	;'4'
  3011  00FBA1  66                 	db	102	;'f'
  3012  00FBA2  20                 	db	32
  3013  00FBA3  20                 	db	32
  3014  00FBA4  20                 	db	32
  3015  00FBA5  20                 	db	32
  3016  00FBA6  20                 	db	32
  3017  00FBA7  20                 	db	32
  3018  00FBA8  20                 	db	32
  3019  00FBA9  20                 	db	32
  3020  00FBAA  00                 	db	0
  3021  00FBAB                     STR_47:
  3022                           
  3023                           ; BSR set to: 57
  3024  00FBAB  52                 	db	82	;'R'
  3025  00FBAC  32                 	db	50	;'2'
  3026  00FBAD  20                 	db	32
  3027  00FBAE  25                 	db	37
  3028  00FBAF  32                 	db	50	;'2'
  3029  00FBB0  2E                 	db	46
  3030  00FBB1  33                 	db	51	;'3'
  3031  00FBB2  66                 	db	102	;'f'
  3032  00FBB3  20                 	db	32
  3033  00FBB4  25                 	db	37
  3034  00FBB5  33                 	db	51	;'3'
  3035  00FBB6  2E                 	db	46
  3036  00FBB7  34                 	db	52	;'4'
  3037  00FBB8  66                 	db	102	;'f'
  3038  00FBB9  20                 	db	32
  3039  00FBBA  20                 	db	32
  3040  00FBBB  20                 	db	32
  3041  00FBBC  20                 	db	32
  3042  00FBBD  20                 	db	32
  3043  00FBBE  20                 	db	32
  3044  00FBBF  20                 	db	32
  3045  00FBC0  20                 	db	32
  3046  00FBC1  00                 	db	0
  3047  00FBC2                     STR_43:
  3048                           
  3049                           ; BSR set to: 57
  3050  00FBC2  42                 	db	66	;'B'
  3051  00FBC3  41                 	db	65	;'A'
  3052  00FBC4  48                 	db	72	;'H'
  3053  00FBC5  20                 	db	32
  3054  00FBC6  25                 	db	37
  3055  00FBC7  33                 	db	51	;'3'
  3056  00FBC8  2E                 	db	46
  3057  00FBC9  32                 	db	50	;'2'
  3058  00FBCA  66                 	db	102	;'f'
  3059  00FBCB  20                 	db	32
  3060  00FBCC  50                 	db	80	;'P'
  3061  00FBCD  25                 	db	37
  3062  00FBCE  33                 	db	51	;'3'
  3063  00FBCF  2E                 	db	46
  3064  00FBD0  32                 	db	50	;'2'
  3065  00FBD1  66                 	db	102	;'f'
  3066  00FBD2  20                 	db	32
  3067  00FBD3  20                 	db	32
  3068  00FBD4  20                 	db	32
  3069  00FBD5  20                 	db	32
  3070  00FBD6  20                 	db	32
  3071  00FBD7  20                 	db	32
  3072  00FBD8  00                 	db	0
  3073  00FBD9                     STR_127:
  3074                           
  3075                           ; BSR set to: 57
  3076  00FBD9  53                 	db	83	;'S'
  3077  00FBDA  75                 	db	117	;'u'
  3078  00FBDB  6E                 	db	110	;'n'
  3079  00FBDC  4D                 	db	77	;'M'
  3080  00FBDD  6F                 	db	111	;'o'
  3081  00FBDE  6E                 	db	110	;'n'
  3082  00FBDF  54                 	db	84	;'T'
  3083  00FBE0  75                 	db	117	;'u'
  3084  00FBE1  65                 	db	101	;'e'
  3085  00FBE2  57                 	db	87	;'W'
  3086  00FBE3  65                 	db	101	;'e'
  3087  00FBE4  64                 	db	100	;'d'
  3088  00FBE5  54                 	db	84	;'T'
  3089  00FBE6  68                 	db	104	;'h'
  3090  00FBE7  75                 	db	117	;'u'
  3091  00FBE8  46                 	db	70	;'F'
  3092  00FBE9  72                 	db	114	;'r'
  3093  00FBEA  69                 	db	105	;'i'
  3094  00FBEB  53                 	db	83	;'S'
  3095  00FBEC  61                 	db	97	;'a'
  3096  00FBED  74                 	db	116	;'t'
  3097  00FBEE  00                 	db	0
  3098  00FBEF                     STR_16:
  3099                           
  3100                           ; BSR set to: 57
  3101  00FBEF  20                 	db	32
  3102  00FBF0  20                 	db	32
  3103  00FBF1  20                 	db	32
  3104  00FBF2  20                 	db	32
  3105  00FBF3  20                 	db	32
  3106  00FBF4  20                 	db	32
  3107  00FBF5  20                 	db	32
  3108  00FBF6  20                 	db	32
  3109  00FBF7  20                 	db	32
  3110  00FBF8  20                 	db	32
  3111  00FBF9  20                 	db	32
  3112  00FBFA  20                 	db	32
  3113  00FBFB  20                 	db	32
  3114  00FBFC  20                 	db	32
  3115  00FBFD  20                 	db	32
  3116  00FBFE  20                 	db	32
  3117  00FBFF  20                 	db	32
  3118  00FC00  20                 	db	32
  3119  00FC01  20                 	db	32
  3120  00FC02  20                 	db	32
  3121  00FC03  20                 	db	32
  3122  00FC04  00                 	db	0
  3123  00FC05                     STR_21:
  3124                           
  3125                           ; BSR set to: 57
  3126  00FC05  45                 	db	69	;'E'
  3127  00FC06  53                 	db	83	;'S'
  3128  00FC07  52                 	db	82	;'R'
  3129  00FC08  20                 	db	32
  3130  00FC09  20                 	db	32
  3131  00FC0A  25                 	db	37
  3132  00FC0B  32                 	db	50	;'2'
  3133  00FC0C  2E                 	db	46
  3134  00FC0D  36                 	db	54	;'6'
  3135  00FC0E  66                 	db	102	;'f'
  3136  00FC0F  20                 	db	32
  3137  00FC10  20                 	db	32
  3138  00FC11  20                 	db	32
  3139  00FC12  20                 	db	32
  3140  00FC13  20                 	db	32
  3141  00FC14  20                 	db	32
  3142  00FC15  20                 	db	32
  3143  00FC16  20                 	db	32
  3144  00FC17  20                 	db	32
  3145  00FC18  20                 	db	32
  3146  00FC19  20                 	db	32
  3147  00FC1A  00                 	db	0
  3148  00FC1B                     STR_14:
  3149                           
  3150                           ; BSR set to: 57
  3151  00FC1B  53                 	db	83	;'S'
  3152  00FC1C  74                 	db	116	;'t'
  3153  00FC1D  61                 	db	97	;'a'
  3154  00FC1E  74                 	db	116	;'t'
  3155  00FC1F  69                 	db	105	;'i'
  3156  00FC20  63                 	db	99	;'c'
  3157  00FC21  20                 	db	32
  3158  00FC22  53                 	db	83	;'S'
  3159  00FC23  4F                 	db	79	;'O'
  3160  00FC24  43                 	db	67	;'C'
  3161  00FC25  20                 	db	32
  3162  00FC26  25                 	db	37
  3163  00FC27  64                 	db	100	;'d'
  3164  00FC28  20                 	db	32
  3165  00FC29  20                 	db	32
  3166  00FC2A  20                 	db	32
  3167  00FC2B  20                 	db	32
  3168  00FC2C  20                 	db	32
  3169  00FC2D  20                 	db	32
  3170  00FC2E  20                 	db	32
  3171  00FC2F  20                 	db	32
  3172  00FC30  00                 	db	0
  3173  00FC31                     STR_39:
  3174                           
  3175                           ; BSR set to: 57
  3176  00FC31  42                 	db	66	;'B'
  3177  00FC32  41                 	db	65	;'A'
  3178  00FC33  54                 	db	84	;'T'
  3179  00FC34  20                 	db	32
  3180  00FC35  49                 	db	73	;'I'
  3181  00FC36  57                 	db	87	;'W'
  3182  00FC37  48                 	db	72	;'H'
  3183  00FC38  20                 	db	32
  3184  00FC39  25                 	db	37
  3185  00FC3A  34                 	db	52	;'4'
  3186  00FC3B  2E                 	db	46
  3187  00FC3C  31                 	db	49	;'1'
  3188  00FC3D  66                 	db	102	;'f'
  3189  00FC3E  20                 	db	32
  3190  00FC3F  20                 	db	32
  3191  00FC40  20                 	db	32
  3192  00FC41  20                 	db	32
  3193  00FC42  20                 	db	32
  3194  00FC43  20                 	db	32
  3195  00FC44  20                 	db	32
  3196  00FC45  20                 	db	32
  3197  00FC46  00                 	db	0
  3198  00FC47                     STR_40:
  3199                           
  3200                           ; BSR set to: 57
  3201  00FC47  42                 	db	66	;'B'
  3202  00FC48  41                 	db	65	;'A'
  3203  00FC49  54                 	db	84	;'T'
  3204  00FC4A  20                 	db	32
  3205  00FC4B  4F                 	db	79	;'O'
  3206  00FC4C  57                 	db	87	;'W'
  3207  00FC4D  48                 	db	72	;'H'
  3208  00FC4E  20                 	db	32
  3209  00FC4F  25                 	db	37
  3210  00FC50  34                 	db	52	;'4'
  3211  00FC51  2E                 	db	46
  3212  00FC52  31                 	db	49	;'1'
  3213  00FC53  66                 	db	102	;'f'
  3214  00FC54  20                 	db	32
  3215  00FC55  20                 	db	32
  3216  00FC56  20                 	db	32
  3217  00FC57  20                 	db	32
  3218  00FC58  20                 	db	32
  3219  00FC59  20                 	db	32
  3220  00FC5A  20                 	db	32
  3221  00FC5B  20                 	db	32
  3222  00FC5C  00                 	db	0
  3223  00FC5D                     STR_41:
  3224                           
  3225                           ; BSR set to: 57
  3226  00FC5D  42                 	db	66	;'B'
  3227  00FC5E  41                 	db	65	;'A'
  3228  00FC5F  54                 	db	84	;'T'
  3229  00FC60  20                 	db	32
  3230  00FC61  54                 	db	84	;'T'
  3231  00FC62  57                 	db	87	;'W'
  3232  00FC63  48                 	db	72	;'H'
  3233  00FC64  20                 	db	32
  3234  00FC65  25                 	db	37
  3235  00FC66  34                 	db	52	;'4'
  3236  00FC67  2E                 	db	46
  3237  00FC68  31                 	db	49	;'1'
  3238  00FC69  66                 	db	102	;'f'
  3239  00FC6A  20                 	db	32
  3240  00FC6B  20                 	db	32
  3241  00FC6C  20                 	db	32
  3242  00FC6D  20                 	db	32
  3243  00FC6E  20                 	db	32
  3244  00FC6F  20                 	db	32
  3245  00FC70  20                 	db	32
  3246  00FC71  20                 	db	32
  3247  00FC72  00                 	db	0
  3248  00FC73                     STR_35:
  3249                           
  3250                           ; BSR set to: 57
  3251  00FC73  49                 	db	73	;'I'
  3252  00FC74  4E                 	db	78	;'N'
  3253  00FC75  56                 	db	86	;'V'
  3254  00FC76  20                 	db	32
  3255  00FC77  20                 	db	32
  3256  00FC78  57                 	db	87	;'W'
  3257  00FC79  48                 	db	72	;'H'
  3258  00FC7A  20                 	db	32
  3259  00FC7B  25                 	db	37
  3260  00FC7C  33                 	db	51	;'3'
  3261  00FC7D  2E                 	db	46
  3262  00FC7E  32                 	db	50	;'2'
  3263  00FC7F  66                 	db	102	;'f'
  3264  00FC80  20                 	db	32
  3265  00FC81  20                 	db	32
  3266  00FC82  20                 	db	32
  3267  00FC83  20                 	db	32
  3268  00FC84  20                 	db	32
  3269  00FC85  20                 	db	32
  3270  00FC86  20                 	db	32
  3271  00FC87  20                 	db	32
  3272  00FC88  00                 	db	0
  3273  00FC89                     STR_34:
  3274                           
  3275                           ; BSR set to: 57
  3276  00FC89  4C                 	db	76	;'L'
  3277  00FC8A  4F                 	db	79	;'O'
  3278  00FC8B  41                 	db	65	;'A'
  3279  00FC8C  44                 	db	68	;'D'
  3280  00FC8D  20                 	db	32
  3281  00FC8E  57                 	db	87	;'W'
  3282  00FC8F  48                 	db	72	;'H'
  3283  00FC90  20                 	db	32
  3284  00FC91  25                 	db	37
  3285  00FC92  33                 	db	51	;'3'
  3286  00FC93  2E                 	db	46
  3287  00FC94  32                 	db	50	;'2'
  3288  00FC95  66                 	db	102	;'f'
  3289  00FC96  20                 	db	32
  3290  00FC97  20                 	db	32
  3291  00FC98  20                 	db	32
  3292  00FC99  20                 	db	32
  3293  00FC9A  20                 	db	32
  3294  00FC9B  20                 	db	32
  3295  00FC9C  20                 	db	32
  3296  00FC9D  20                 	db	32
  3297  00FC9E  00                 	db	0
  3298  00FC9F                     STR_33:
  3299                           
  3300                           ; BSR set to: 57
  3301  00FC9F  50                 	db	80	;'P'
  3302  00FCA0  56                 	db	86	;'V'
  3303  00FCA1  20                 	db	32
  3304  00FCA2  25                 	db	37
  3305  00FCA3  63                 	db	99	;'c'
  3306  00FCA4  20                 	db	32
  3307  00FCA5  57                 	db	87	;'W'
  3308  00FCA6  48                 	db	72	;'H'
  3309  00FCA7  20                 	db	32
  3310  00FCA8  25                 	db	37
  3311  00FCA9  33                 	db	51	;'3'
  3312  00FCAA  2E                 	db	46
  3313  00FCAB  32                 	db	50	;'2'
  3314  00FCAC  66                 	db	102	;'f'
  3315  00FCAD  20                 	db	32
  3316  00FCAE  20                 	db	32
  3317  00FCAF  20                 	db	32
  3318  00FCB0  20                 	db	32
  3319  00FCB1  20                 	db	32
  3320  00FCB2  20                 	db	32
  3321  00FCB3  20                 	db	32
  3322  00FCB4  00                 	db	0
  3323  00FCB5                     STR_32:
  3324                           
  3325                           ; BSR set to: 57
  3326  00FCB5  49                 	db	73	;'I'
  3327  00FCB6  4E                 	db	78	;'N'
  3328  00FCB7  56                 	db	86	;'V'
  3329  00FCB8  20                 	db	32
  3330  00FCB9  20                 	db	32
  3331  00FCBA  50                 	db	80	;'P'
  3332  00FCBB  57                 	db	87	;'W'
  3333  00FCBC  52                 	db	82	;'R'
  3334  00FCBD  20                 	db	32
  3335  00FCBE  25                 	db	37
  3336  00FCBF  33                 	db	51	;'3'
  3337  00FCC0  2E                 	db	46
  3338  00FCC1  32                 	db	50	;'2'
  3339  00FCC2  66                 	db	102	;'f'
  3340  00FCC3  20                 	db	32
  3341  00FCC4  20                 	db	32
  3342  00FCC5  20                 	db	32
  3343  00FCC6  20                 	db	32
  3344  00FCC7  20                 	db	32
  3345  00FCC8  20                 	db	32
  3346  00FCC9  20                 	db	32
  3347  00FCCA  00                 	db	0
  3348  00FCCB                     STR_31:
  3349                           
  3350                           ; BSR set to: 57
  3351  00FCCB  4C                 	db	76	;'L'
  3352  00FCCC  4F                 	db	79	;'O'
  3353  00FCCD  41                 	db	65	;'A'
  3354  00FCCE  44                 	db	68	;'D'
  3355  00FCCF  20                 	db	32
  3356  00FCD0  50                 	db	80	;'P'
  3357  00FCD1  57                 	db	87	;'W'
  3358  00FCD2  52                 	db	82	;'R'
  3359  00FCD3  20                 	db	32
  3360  00FCD4  25                 	db	37
  3361  00FCD5  33                 	db	51	;'3'
  3362  00FCD6  2E                 	db	46
  3363  00FCD7  32                 	db	50	;'2'
  3364  00FCD8  66                 	db	102	;'f'
  3365  00FCD9  20                 	db	32
  3366  00FCDA  20                 	db	32
  3367  00FCDB  20                 	db	32
  3368  00FCDC  20                 	db	32
  3369  00FCDD  20                 	db	32
  3370  00FCDE  20                 	db	32
  3371  00FCDF  20                 	db	32
  3372  00FCE0  00                 	db	0
  3373  00FCE1                     STR_30:
  3374                           
  3375                           ; BSR set to: 57
  3376  00FCE1  50                 	db	80	;'P'
  3377  00FCE2  56                 	db	86	;'V'
  3378  00FCE3  20                 	db	32
  3379  00FCE4  25                 	db	37
  3380  00FCE5  63                 	db	99	;'c'
  3381  00FCE6  20                 	db	32
  3382  00FCE7  50                 	db	80	;'P'
  3383  00FCE8  57                 	db	87	;'W'
  3384  00FCE9  52                 	db	82	;'R'
  3385  00FCEA  20                 	db	32
  3386  00FCEB  25                 	db	37
  3387  00FCEC  33                 	db	51	;'3'
  3388  00FCED  2E                 	db	46
  3389  00FCEE  32                 	db	50	;'2'
  3390  00FCEF  66                 	db	102	;'f'
  3391  00FCF0  20                 	db	32
  3392  00FCF1  20                 	db	32
  3393  00FCF2  20                 	db	32
  3394  00FCF3  20                 	db	32
  3395  00FCF4  20                 	db	32
  3396  00FCF5  20                 	db	32
  3397  00FCF6  00                 	db	0
  3398  00FCF7                     STR_15:
  3399                           
  3400                           ; BSR set to: 57
  3401  00FCF7  42                 	db	66	;'B'
  3402  00FCF8  61                 	db	97	;'a'
  3403  00FCF9  74                 	db	116	;'t'
  3404  00FCFA  74                 	db	116	;'t'
  3405  00FCFB  65                 	db	101	;'e'
  3406  00FCFC  72                 	db	114	;'r'
  3407  00FCFD  79                 	db	121	;'y'
  3408  00FCFE  20                 	db	32
  3409  00FCFF  41                 	db	65	;'A'
  3410  00FD00  68                 	db	104	;'h'
  3411  00FD01  20                 	db	32
  3412  00FD02  25                 	db	37
  3413  00FD03  33                 	db	51	;'3'
  3414  00FD04  2E                 	db	46
  3415  00FD05  32                 	db	50	;'2'
  3416  00FD06  66                 	db	102	;'f'
  3417  00FD07  20                 	db	32
  3418  00FD08  20                 	db	32
  3419  00FD09  20                 	db	32
  3420  00FD0A  20                 	db	32
  3421  00FD0B  20                 	db	32
  3422  00FD0C  00                 	db	0
  3423  00FD0D                     STR_37:
  3424                           
  3425                           ; BSR set to: 57
  3426  00FD0D  42                 	db	66	;'B'
  3427  00FD0E  56                 	db	86	;'V'
  3428  00FD0F  20                 	db	32
  3429  00FD10  25                 	db	37
  3430  00FD11  32                 	db	50	;'2'
  3431  00FD12  2E                 	db	46
  3432  00FD13  32                 	db	50	;'2'
  3433  00FD14  66                 	db	102	;'f'
  3434  00FD15  20                 	db	32
  3435  00FD16  42                 	db	66	;'B'
  3436  00FD17  41                 	db	65	;'A'
  3437  00FD18  20                 	db	32
  3438  00FD19  25                 	db	37
  3439  00FD1A  32                 	db	50	;'2'
  3440  00FD1B  2E                 	db	46
  3441  00FD1C  32                 	db	50	;'2'
  3442  00FD1D  66                 	db	102	;'f'
  3443  00FD1E  20                 	db	32
  3444  00FD1F  20                 	db	32
  3445  00FD20  20                 	db	32
  3446  00FD21  20                 	db	32
  3447  00FD22  00                 	db	0
  3448  00FD23                     STR_38:
  3449                           
  3450                           ; BSR set to: 57
  3451  00FD23  43                 	db	67	;'C'
  3452  00FD24  56                 	db	86	;'V'
  3453  00FD25  20                 	db	32
  3454  00FD26  25                 	db	37
  3455  00FD27  32                 	db	50	;'2'
  3456  00FD28  2E                 	db	46
  3457  00FD29  32                 	db	50	;'2'
  3458  00FD2A  66                 	db	102	;'f'
  3459  00FD2B  20                 	db	32
  3460  00FD2C  4C                 	db	76	;'L'
  3461  00FD2D  41                 	db	65	;'A'
  3462  00FD2E  20                 	db	32
  3463  00FD2F  25                 	db	37
  3464  00FD30  32                 	db	50	;'2'
  3465  00FD31  2E                 	db	46
  3466  00FD32  32                 	db	50	;'2'
  3467  00FD33  66                 	db	102	;'f'
  3468  00FD34  20                 	db	32
  3469  00FD35  20                 	db	32
  3470  00FD36  20                 	db	32
  3471  00FD37  20                 	db	32
  3472  00FD38  00                 	db	0
  3473  00FD39                     STR_36:
  3474                           
  3475                           ; BSR set to: 57
  3476  00FD39  50                 	db	80	;'P'
  3477  00FD3A  56                 	db	86	;'V'
  3478  00FD3B  20                 	db	32
  3479  00FD3C  25                 	db	37
  3480  00FD3D  32                 	db	50	;'2'
  3481  00FD3E  2E                 	db	46
  3482  00FD3F  32                 	db	50	;'2'
  3483  00FD40  66                 	db	102	;'f'
  3484  00FD41  20                 	db	32
  3485  00FD42  50                 	db	80	;'P'
  3486  00FD43  41                 	db	65	;'A'
  3487  00FD44  20                 	db	32
  3488  00FD45  25                 	db	37
  3489  00FD46  32                 	db	50	;'2'
  3490  00FD47  2E                 	db	46
  3491  00FD48  32                 	db	50	;'2'
  3492  00FD49  66                 	db	102	;'f'
  3493  00FD4A  20                 	db	32
  3494  00FD4B  20                 	db	32
  3495  00FD4C  20                 	db	32
  3496  00FD4D  20                 	db	32
  3497  00FD4E  00                 	db	0
  3498  00FD4F                     STR_48:
  3499                           
  3500                           ; BSR set to: 57
  3501  00FD4F  25                 	db	37
  3502  00FD50  64                 	db	100	;'d'
  3503  00FD51  20                 	db	32
  3504  00FD52  25                 	db	37
  3505  00FD53  32                 	db	50	;'2'
  3506  00FD54  2E                 	db	46
  3507  00FD55  34                 	db	52	;'4'
  3508  00FD56  66                 	db	102	;'f'
  3509  00FD57  2C                 	db	44
  3510  00FD58  20                 	db	32
  3511  00FD59  25                 	db	37
  3512  00FD5A  64                 	db	100	;'d'
  3513  00FD5B  20                 	db	32
  3514  00FD5C  20                 	db	32
  3515  00FD5D  54                 	db	84	;'T'
  3516  00FD5E  52                 	db	82	;'R'
  3517  00FD5F  49                 	db	73	;'I'
  3518  00FD60  4D                 	db	77	;'M'
  3519  00FD61  20                 	db	32
  3520  00FD62  20                 	db	32
  3521  00FD63  20                 	db	32
  3522  00FD64  00                 	db	0
  3523  00FD65                     STR_56:
  3524                           
  3525                           ; BSR set to: 57
  3526  00FD65  20                 	db	32
  3527  00FD66  25                 	db	37
  3528  00FD67  64                 	db	100	;'d'
  3529  00FD68  20                 	db	32
  3530  00FD69  25                 	db	37
  3531  00FD6A  64                 	db	100	;'d'
  3532  00FD6B  20                 	db	32
  3533  00FD6C  20                 	db	32
  3534  00FD6D  20                 	db	32
  3535  00FD6E  20                 	db	32
  3536  00FD6F  20                 	db	32
  3537  00FD70  20                 	db	32
  3538  00FD71  20                 	db	32
  3539  00FD72  20                 	db	32
  3540  00FD73  20                 	db	32
  3541  00FD74  20                 	db	32
  3542  00FD75  20                 	db	32
  3543  00FD76  20                 	db	32
  3544  00FD77  20                 	db	32
  3545  00FD78  20                 	db	32
  3546  00FD79  00                 	db	0
  3547  00FD7A                     STR_59:
  3548                           
  3549                           ; BSR set to: 57
  3550  00FD7A  20                 	db	32
  3551  00FD7B  25                 	db	37
  3552  00FD7C  6C                 	db	108	;'l'
  3553  00FD7D  64                 	db	100	;'d'
  3554  00FD7E  20                 	db	32
  3555  00FD7F  25                 	db	37
  3556  00FD80  6C                 	db	108	;'l'
  3557  00FD81  64                 	db	100	;'d'
  3558  00FD82  20                 	db	32
  3559  00FD83  20                 	db	32
  3560  00FD84  20                 	db	32
  3561  00FD85  20                 	db	32
  3562  00FD86  20                 	db	32
  3563  00FD87  20                 	db	32
  3564  00FD88  20                 	db	32
  3565  00FD89  20                 	db	32
  3566  00FD8A  20                 	db	32
  3567  00FD8B  20                 	db	32
  3568  00FD8C  20                 	db	32
  3569  00FD8D  20                 	db	32
  3570  00FD8E  00                 	db	0
  3571  00FD8F                     STR_12:
  3572                           
  3573                           ; BSR set to: 57
  3574  00FD8F  42                 	db	66	;'B'
  3575  00FD90  56                 	db	86	;'V'
  3576  00FD91  20                 	db	32
  3577  00FD92  25                 	db	37
  3578  00FD93  32                 	db	50	;'2'
  3579  00FD94  2E                 	db	46
  3580  00FD95  34                 	db	52	;'4'
  3581  00FD96  66                 	db	102	;'f'
  3582  00FD97  20                 	db	32
  3583  00FD98  20                 	db	32
  3584  00FD99  20                 	db	32
  3585  00FD9A  20                 	db	32
  3586  00FD9B  20                 	db	32
  3587  00FD9C  20                 	db	32
  3588  00FD9D  20                 	db	32
  3589  00FD9E  20                 	db	32
  3590  00FD9F  20                 	db	32
  3591  00FDA0  20                 	db	32
  3592  00FDA1  20                 	db	32
  3593  00FDA2  20                 	db	32
  3594  00FDA3  00                 	db	0
  3595  00FDA4                     STR_64:
  3596                           
  3597                           ; BSR set to: 57
  3598  00FDA4  48                 	db	72	;'H'
  3599  00FDA5  69                 	db	105	;'i'
  3600  00FDA6  73                 	db	115	;'s'
  3601  00FDA7  74                 	db	116	;'t'
  3602  00FDA8  6F                 	db	111	;'o'
  3603  00FDA9  72                 	db	114	;'r'
  3604  00FDAA  79                 	db	121	;'y'
  3605  00FDAB  20                 	db	32
  3606  00FDAC  33                 	db	51	;'3'
  3607  00FDAD  20                 	db	32
  3608  00FDAE  20                 	db	32
  3609  00FDAF  20                 	db	32
  3610  00FDB0  20                 	db	32
  3611  00FDB1  20                 	db	32
  3612  00FDB2  20                 	db	32
  3613  00FDB3  20                 	db	32
  3614  00FDB4  20                 	db	32
  3615  00FDB5  20                 	db	32
  3616  00FDB6  20                 	db	32
  3617  00FDB7  20                 	db	32
  3618  00FDB8  00                 	db	0
  3619  00FDB9                     STR_4:
  3620                           
  3621                           ; BSR set to: 57
  3622  00FDB9  20                 	db	32
  3623  00FDBA  4E                 	db	78	;'N'
  3624  00FDBB  53                 	db	83	;'S'
  3625  00FDBC  41                 	db	65	;'A'
  3626  00FDBD  53                 	db	83	;'S'
  3627  00FDBE  50                 	db	80	;'P'
  3628  00FDBF  4F                 	db	79	;'O'
  3629  00FDC0  4F                 	db	79	;'O'
  3630  00FDC1  4B                 	db	75	;'K'
  3631  00FDC2  20                 	db	32
  3632  00FDC3  20                 	db	32
  3633  00FDC4  20                 	db	32
  3634  00FDC5  20                 	db	32
  3635  00FDC6  20                 	db	32
  3636  00FDC7  20                 	db	32
  3637  00FDC8  20                 	db	32
  3638  00FDC9  20                 	db	32
  3639  00FDCA  20                 	db	32
  3640  00FDCB  20                 	db	32
  3641  00FDCC  20                 	db	32
  3642  00FDCD  00                 	db	0
  3643  00FDCE                     STR_25:
  3644                           
  3645                           ; BSR set to: 57
  3646  00FDCE  54                 	db	84	;'T'
  3647  00FDCF  6F                 	db	111	;'o'
  3648  00FDD0  20                 	db	32
  3649  00FDD1  45                 	db	69	;'E'
  3650  00FDD2  45                 	db	69	;'E'
  3651  00FDD3  50                 	db	80	;'P'
  3652  00FDD4  52                 	db	82	;'R'
  3653  00FDD5  4F                 	db	79	;'O'
  3654  00FDD6  4D                 	db	77	;'M'
  3655  00FDD7  20                 	db	32
  3656  00FDD8  20                 	db	32
  3657  00FDD9  20                 	db	32
  3658  00FDDA  20                 	db	32
  3659  00FDDB  20                 	db	32
  3660  00FDDC  20                 	db	32
  3661  00FDDD  20                 	db	32
  3662  00FDDE  20                 	db	32
  3663  00FDDF  20                 	db	32
  3664  00FDE0  20                 	db	32
  3665  00FDE1  20                 	db	32
  3666  00FDE2  00                 	db	0
  3667  00FDE3                     STR_17:
  3668                           
  3669                           ; BSR set to: 57
  3670  00FDE3  42                 	db	66	;'B'
  3671  00FDE4  61                 	db	97	;'a'
  3672  00FDE5  74                 	db	116	;'t'
  3673  00FDE6  74                 	db	116	;'t'
  3674  00FDE7  65                 	db	101	;'e'
  3675  00FDE8  72                 	db	114	;'r'
  3676  00FDE9  79                 	db	121	;'y'
  3677  00FDEA  20                 	db	32
  3678  00FDEB  45                 	db	69	;'E'
  3679  00FDEC  53                 	db	83	;'S'
  3680  00FDED  52                 	db	82	;'R'
  3681  00FDEE  20                 	db	32
  3682  00FDEF  20                 	db	32
  3683  00FDF0  20                 	db	32
  3684  00FDF1  20                 	db	32
  3685  00FDF2  20                 	db	32
  3686  00FDF3  20                 	db	32
  3687  00FDF4  20                 	db	32
  3688  00FDF5  20                 	db	32
  3689  00FDF6  20                 	db	32
  3690  00FDF7  00                 	db	0
  3691  00FDF8                     STR_18:
  3692                           
  3693                           ; BSR set to: 57
  3694  00FDF8  43                 	db	67	;'C'
  3695  00FDF9  61                 	db	97	;'a'
  3696  00FDFA  6C                 	db	108	;'l'
  3697  00FDFB  63                 	db	99	;'c'
  3698  00FDFC  75                 	db	117	;'u'
  3699  00FDFD  6C                 	db	108	;'l'
  3700  00FDFE  61                 	db	97	;'a'
  3701  00FDFF  74                 	db	116	;'t'
  3702  00FE00  69                 	db	105	;'i'
  3703  00FE01  6F                 	db	111	;'o'
  3704  00FE02  6E                 	db	110	;'n'
  3705  00FE03  20                 	db	32
  3706  00FE04  20                 	db	32
  3707  00FE05  20                 	db	32
  3708  00FE06  20                 	db	32
  3709  00FE07  20                 	db	32
  3710  00FE08  20                 	db	32
  3711  00FE09  20                 	db	32
  3712  00FE0A  20                 	db	32
  3713  00FE0B  20                 	db	32
  3714  00FE0C  00                 	db	0
  3715  00FE0D                     STR_53:
  3716                           
  3717                           ; BSR set to: 57
  3718  00FE0D  43                 	db	67	;'C'
  3719  00FE0E  61                 	db	97	;'a'
  3720  00FE0F  6C                 	db	108	;'l'
  3721  00FE10  69                 	db	105	;'i'
  3722  00FE11  62                 	db	98	;'b'
  3723  00FE12  72                 	db	114	;'r'
  3724  00FE13  61                 	db	97	;'a'
  3725  00FE14  74                 	db	116	;'t'
  3726  00FE15  69                 	db	105	;'i'
  3727  00FE16  6F                 	db	111	;'o'
  3728  00FE17  6E                 	db	110	;'n'
  3729  00FE18  20                 	db	32
  3730  00FE19  20                 	db	32
  3731  00FE1A  20                 	db	32
  3732  00FE1B  20                 	db	32
  3733  00FE1C  20                 	db	32
  3734  00FE1D  20                 	db	32
  3735  00FE1E  20                 	db	32
  3736  00FE1F  20                 	db	32
  3737  00FE20  20                 	db	32
  3738  00FE21  00                 	db	0
  3739  00FE22                     STR_52:
  3740                           
  3741                           ; BSR set to: 57
  3742  00FE22  53                 	db	83	;'S'
  3743  00FE23  65                 	db	101	;'e'
  3744  00FE24  6E                 	db	110	;'n'
  3745  00FE25  73                 	db	115	;'s'
  3746  00FE26  6F                 	db	111	;'o'
  3747  00FE27  72                 	db	114	;'r'
  3748  00FE28  20                 	db	32
  3749  00FE29  5A                 	db	90	;'Z'
  3750  00FE2A  65                 	db	101	;'e'
  3751  00FE2B  72                 	db	114	;'r'
  3752  00FE2C  6F                 	db	111	;'o'
  3753  00FE2D  20                 	db	32
  3754  00FE2E  20                 	db	32
  3755  00FE2F  20                 	db	32
  3756  00FE30  20                 	db	32
  3757  00FE31  20                 	db	32
  3758  00FE32  20                 	db	32
  3759  00FE33  20                 	db	32
  3760  00FE34  20                 	db	32
  3761  00FE35  20                 	db	32
  3762  00FE36  00                 	db	0
  3763  00FE37                     STR_2:
  3764                           
  3765                           ; BSR set to: 57
  3766  00FE37  20                 	db	32
  3767  00FE38  56                 	db	86	;'V'
  3768  00FE39  65                 	db	101	;'e'
  3769  00FE3A  72                 	db	114	;'r'
  3770  00FE3B  73                 	db	115	;'s'
  3771  00FE3C  69                 	db	105	;'i'
  3772  00FE3D  6F                 	db	111	;'o'
  3773  00FE3E  6E                 	db	110	;'n'
  3774  00FE3F  20                 	db	32
  3775  00FE40  25                 	db	37
  3776  00FE41  73                 	db	115	;'s'
  3777  00FE42  20                 	db	32
  3778  00FE43  20                 	db	32
  3779  00FE44  20                 	db	32
  3780  00FE45  20                 	db	32
  3781  00FE46  20                 	db	32
  3782  00FE47  20                 	db	32
  3783  00FE48  20                 	db	32
  3784  00FE49  20                 	db	32
  3785  00FE4A  20                 	db	32
  3786  00FE4B  00                 	db	0
  3787  00FE4C                     STR_60:
  3788                           
  3789                           ; BSR set to: 57
  3790  00FE4C  5A                 	db	90	;'Z'
  3791  00FE4D  65                 	db	101	;'e'
  3792  00FE4E  72                 	db	114	;'r'
  3793  00FE4F  6F                 	db	111	;'o'
  3794  00FE50  20                 	db	32
  3795  00FE51  43                 	db	67	;'C'
  3796  00FE52  61                 	db	97	;'a'
  3797  00FE53  6C                 	db	108	;'l'
  3798  00FE54  20                 	db	32
  3799  00FE55  53                 	db	83	;'S'
  3800  00FE56  65                 	db	101	;'e'
  3801  00FE57  74                 	db	116	;'t'
  3802  00FE58  20                 	db	32
  3803  00FE59  20                 	db	32
  3804  00FE5A  20                 	db	32
  3805  00FE5B  20                 	db	32
  3806  00FE5C  20                 	db	32
  3807  00FE5D  20                 	db	32
  3808  00FE5E  20                 	db	32
  3809  00FE5F  20                 	db	32
  3810  00FE60  00                 	db	0
  3811  00FE61                     STR_1:
  3812                           
  3813                           ; BSR set to: 57
  3814  00FE61  20                 	db	32
  3815  00FE62  4D                 	db	77	;'M'
  3816  00FE63  42                 	db	66	;'B'
  3817  00FE64  4D                 	db	77	;'M'
  3818  00FE65  43                 	db	67	;'C'
  3819  00FE66  20                 	db	32
  3820  00FE67  53                 	db	83	;'S'
  3821  00FE68  4F                 	db	79	;'O'
  3822  00FE69  4C                 	db	76	;'L'
  3823  00FE6A  41                 	db	65	;'A'
  3824  00FE6B  52                 	db	82	;'R'
  3825  00FE6C  4D                 	db	77	;'M'
  3826  00FE6D  4F                 	db	79	;'O'
  3827  00FE6E  4E                 	db	78	;'N'
  3828  00FE6F  20                 	db	32
  3829  00FE70  20                 	db	32
  3830  00FE71  20                 	db	32
  3831  00FE72  20                 	db	32
  3832  00FE73  20                 	db	32
  3833  00FE74  20                 	db	32
  3834  00FE75  00                 	db	0
  3835  00FE76                     STR_51:
  3836                           
  3837                           ; BSR set to: 57
  3838  00FE76  42                 	db	66	;'B'
  3839  00FE77  61                 	db	97	;'a'
  3840  00FE78  74                 	db	116	;'t'
  3841  00FE79  74                 	db	116	;'t'
  3842  00FE7A  65                 	db	101	;'e'
  3843  00FE7B  72                 	db	114	;'r'
  3844  00FE7C  79                 	db	121	;'y'
  3845  00FE7D  20                 	db	32
  3846  00FE7E  61                 	db	97	;'a'
  3847  00FE7F  6E                 	db	110	;'n'
  3848  00FE80  64                 	db	100	;'d'
  3849  00FE81  20                 	db	32
  3850  00FE82  50                 	db	80	;'P'
  3851  00FE83  56                 	db	86	;'V'
  3852  00FE84  20                 	db	32
  3853  00FE85  20                 	db	32
  3854  00FE86  20                 	db	32
  3855  00FE87  20                 	db	32
  3856  00FE88  20                 	db	32
  3857  00FE89  20                 	db	32
  3858  00FE8A  00                 	db	0
  3859  00FE8B                     STR_20:
  3860                           
  3861                           ; BSR set to: 57
  3862  00FE8B  43                 	db	67	;'C'
  3863  00FE8C  68                 	db	104	;'h'
  3864  00FE8D  65                 	db	101	;'e'
  3865  00FE8E  63                 	db	99	;'c'
  3866  00FE8F  6B                 	db	107	;'k'
  3867  00FE90  69                 	db	105	;'i'
  3868  00FE91  6E                 	db	110	;'n'
  3869  00FE92  67                 	db	103	;'g'
  3870  00FE93  20                 	db	32
  3871  00FE94  25                 	db	37
  3872  00FE95  63                 	db	99	;'c'
  3873  00FE96  20                 	db	32
  3874  00FE97  25                 	db	37
  3875  00FE98  63                 	db	99	;'c'
  3876  00FE99  20                 	db	32
  3877  00FE9A  20                 	db	32
  3878  00FE9B  20                 	db	32
  3879  00FE9C  20                 	db	32
  3880  00FE9D  20                 	db	32
  3881  00FE9E  20                 	db	32
  3882  00FE9F  00                 	db	0
  3883  00FEA0                     STR_26:
  3884                           
  3885                           ; BSR set to: 57
  3886  00FEA0  20                 	db	32
  3887  00FEA1  54                 	db	84	;'T'
  3888  00FEA2  69                 	db	105	;'i'
  3889  00FEA3  6D                 	db	109	;'m'
  3890  00FEA4  65                 	db	101	;'e'
  3891  00FEA5  20                 	db	32
  3892  00FEA6  25                 	db	37
  3893  00FEA7  6C                 	db	108	;'l'
  3894  00FEA8  75                 	db	117	;'u'
  3895  00FEA9  2C                 	db	44
  3896  00FEAA  20                 	db	32
  3897  00FEAB  25                 	db	37
  3898  00FEAC  6C                 	db	108	;'l'
  3899  00FEAD  75                 	db	117	;'u'
  3900  00FEAE  20                 	db	32
  3901  00FEAF  20                 	db	32
  3902  00FEB0  20                 	db	32
  3903  00FEB1  20                 	db	32
  3904  00FEB2  20                 	db	32
  3905  00FEB3  20                 	db	32
  3906  00FEB4  00                 	db	0
  3907  00FEB5                     STR_55:
  3908                           
  3909                           ; BSR set to: 57
  3910  00FEB5  53                 	db	83	;'S'
  3911  00FEB6  65                 	db	101	;'e'
  3912  00FEB7  6E                 	db	110	;'n'
  3913  00FEB8  73                 	db	115	;'s'
  3914  00FEB9  6F                 	db	111	;'o'
  3915  00FEBA  72                 	db	114	;'r'
  3916  00FEBB  20                 	db	32
  3917  00FEBC  52                 	db	82	;'R'
  3918  00FEBD  65                 	db	101	;'e'
  3919  00FEBE  61                 	db	97	;'a'
  3920  00FEBF  64                 	db	100	;'d'
  3921  00FEC0  69                 	db	105	;'i'
  3922  00FEC1  6E                 	db	110	;'n'
  3923  00FEC2  67                 	db	103	;'g'
  3924  00FEC3  73                 	db	115	;'s'
  3925  00FEC4  20                 	db	32
  3926  00FEC5  20                 	db	32
  3927  00FEC6  20                 	db	32
  3928  00FEC7  20                 	db	32
  3929  00FEC8  20                 	db	32
  3930  00FEC9  00                 	db	0
  3931  00FECA                     STR_10:
  3932                           
  3933                           ; BSR set to: 57
  3934  00FECA  52                 	db	82	;'R'
  3935  00FECB  65                 	db	101	;'e'
  3936  00FECC  61                 	db	97	;'a'
  3937  00FECD  64                 	db	100	;'d'
  3938  00FECE  20                 	db	32
  3939  00FECF  45                 	db	69	;'E'
  3940  00FED0  45                 	db	69	;'E'
  3941  00FED1  50                 	db	80	;'P'
  3942  00FED2  52                 	db	82	;'R'
  3943  00FED3  4F                 	db	79	;'O'
  3944  00FED4  4D                 	db	77	;'M'
  3945  00FED5  20                 	db	32
  3946  00FED6  44                 	db	68	;'D'
  3947  00FED7  41                 	db	65	;'A'
  3948  00FED8  54                 	db	84	;'T'
  3949  00FED9  41                 	db	65	;'A'
  3950  00FEDA  20                 	db	32
  3951  00FEDB  20                 	db	32
  3952  00FEDC  20                 	db	32
  3953  00FEDD  20                 	db	32
  3954  00FEDE  00                 	db	0
  3955  00FEDF                     STR_19:
  3956                           
  3957                           ; BSR set to: 57
  3958  00FEDF  43                 	db	67	;'C'
  3959  00FEE0  68                 	db	104	;'h'
  3960  00FEE1  65                 	db	101	;'e'
  3961  00FEE2  63                 	db	99	;'c'
  3962  00FEE3  6B                 	db	107	;'k'
  3963  00FEE4  20                 	db	32
  3964  00FEE5  33                 	db	51	;'3'
  3965  00FEE6  30                 	db	48	;'0'
  3966  00FEE7  20                 	db	32
  3967  00FEE8  73                 	db	115	;'s'
  3968  00FEE9  65                 	db	101	;'e'
  3969  00FEEA  63                 	db	99	;'c'
  3970  00FEEB  6F                 	db	111	;'o'
  3971  00FEEC  6E                 	db	110	;'n'
  3972  00FEED  64                 	db	100	;'d'
  3973  00FEEE  73                 	db	115	;'s'
  3974  00FEEF  20                 	db	32
  3975  00FEF0  20                 	db	32
  3976  00FEF1  20                 	db	32
  3977  00FEF2  20                 	db	32
  3978  00FEF3  00                 	db	0
  3979  00FEF4                     STR_63:
  3980                           
  3981                           ; BSR set to: 57
  3982  00FEF4  5A                 	db	90	;'Z'
  3983  00FEF5  65                 	db	101	;'e'
  3984  00FEF6  72                 	db	114	;'r'
  3985  00FEF7  6F                 	db	111	;'o'
  3986  00FEF8  20                 	db	32
  3987  00FEF9  4F                 	db	79	;'O'
  3988  00FEFA  75                 	db	117	;'u'
  3989  00FEFB  74                 	db	116	;'t'
  3990  00FEFC  20                 	db	32
  3991  00FEFD  4F                 	db	79	;'O'
  3992  00FEFE  66                 	db	102	;'f'
  3993  00FEFF  20                 	db	32
  3994  00FF00  52                 	db	82	;'R'
  3995  00FF01  61                 	db	97	;'a'
  3996  00FF02  6E                 	db	110	;'n'
  3997  00FF03  67                 	db	103	;'g'
  3998  00FF04  65                 	db	101	;'e'
  3999  00FF05  20                 	db	32
  4000  00FF06  20                 	db	32
  4001  00FF07  20                 	db	32
  4002  00FF08  00                 	db	0
  4003  00FF09                     STR_57:
  4004                           
  4005                           ; BSR set to: 57
  4006  00FF09  53                 	db	83	;'S'
  4007  00FF0A  74                 	db	116	;'t'
  4008  00FF0B  61                 	db	97	;'a'
  4009  00FF0C  62                 	db	98	;'b'
  4010  00FF0D  69                 	db	105	;'i'
  4011  00FF0E  6C                 	db	108	;'l'
  4012  00FF0F  69                 	db	105	;'i'
  4013  00FF10  74                 	db	116	;'t'
  4014  00FF11  79                 	db	121	;'y'
  4015  00FF12  20                 	db	32
  4016  00FF13  63                 	db	99	;'c'
  4017  00FF14  6C                 	db	108	;'l'
  4018  00FF15  6F                 	db	111	;'o'
  4019  00FF16  63                 	db	99	;'c'
  4020  00FF17  6B                 	db	107	;'k'
  4021  00FF18  20                 	db	32
  4022  00FF19  25                 	db	37
  4023  00FF1A  64                 	db	100	;'d'
  4024  00FF1B  20                 	db	32
  4025  00FF1C  20                 	db	32
  4026  00FF1D  00                 	db	0
  4027  00FF1E                     STR_11:
  4028                           
  4029                           ; BSR set to: 57
  4030  00FF1E  49                 	db	73	;'I'
  4031  00FF1F  6E                 	db	110	;'n'
  4032  00FF20  76                 	db	118	;'v'
  4033  00FF21  61                 	db	97	;'a'
  4034  00FF22  6C                 	db	108	;'l'
  4035  00FF23  69                 	db	105	;'i'
  4036  00FF24  64                 	db	100	;'d'
  4037  00FF25  20                 	db	32
  4038  00FF26  45                 	db	69	;'E'
  4039  00FF27  45                 	db	69	;'E'
  4040  00FF28  50                 	db	80	;'P'
  4041  00FF29  52                 	db	82	;'R'
  4042  00FF2A  4F                 	db	79	;'O'
  4043  00FF2B  4D                 	db	77	;'M'
  4044  00FF2C  20                 	db	32
  4045  00FF2D  44                 	db	68	;'D'
  4046  00FF2E  41                 	db	65	;'A'
  4047  00FF2F  54                 	db	84	;'T'
  4048  00FF30  41                 	db	65	;'A'
  4049  00FF31  20                 	db	32
  4050  00FF32  00                 	db	0
  4051  00FF33                     STR_24:
  4052                           
  4053                           ; BSR set to: 57
  4054  00FF33  48                 	db	72	;'H'
  4055  00FF34  69                 	db	105	;'i'
  4056  00FF35  73                 	db	115	;'s'
  4057  00FF36  74                 	db	116	;'t'
  4058  00FF37  6F                 	db	111	;'o'
  4059  00FF38  72                 	db	114	;'r'
  4060  00FF39  79                 	db	121	;'y'
  4061  00FF3A  20                 	db	32
  4062  00FF3B  44                 	db	68	;'D'
  4063  00FF3C  61                 	db	97	;'a'
  4064  00FF3D  74                 	db	116	;'t'
  4065  00FF3E  61                 	db	97	;'a'
  4066  00FF3F  20                 	db	32
  4067  00FF40  20                 	db	32
  4068  00FF41  53                 	db	83	;'S'
  4069  00FF42  61                 	db	97	;'a'
  4070  00FF43  76                 	db	118	;'v'
  4071  00FF44  65                 	db	101	;'e'
  4072  00FF45  64                 	db	100	;'d'
  4073  00FF46  20                 	db	32
  4074  00FF47  00                 	db	0
  4075  00FF48                     STR_54:
  4076                           
  4077                           ; BSR set to: 57
  4078  00FF48  52                 	db	82	;'R'
  4079  00FF49  65                 	db	101	;'e'
  4080  00FF4A  6C                 	db	108	;'l'
  4081  00FF4B  65                 	db	101	;'e'
  4082  00FF4C  61                 	db	97	;'a'
  4083  00FF4D  73                 	db	115	;'s'
  4084  00FF4E  65                 	db	101	;'e'
  4085  00FF4F  20                 	db	32
  4086  00FF50  62                 	db	98	;'b'
  4087  00FF51  75                 	db	117	;'u'
  4088  00FF52  74                 	db	116	;'t'
  4089  00FF53  74                 	db	116	;'t'
  4090  00FF54  6F                 	db	111	;'o'
  4091  00FF55  6E                 	db	110	;'n'
  4092  00FF56  20                 	db	32
  4093  00FF57  25                 	db	37
  4094  00FF58  63                 	db	99	;'c'
  4095  00FF59  20                 	db	32
  4096  00FF5A  20                 	db	32
  4097  00FF5B  00                 	db	0
  4098  00FF5C                     STR_72:
  4099                           
  4100                           ; BSR set to: 57
  4101  00FF5C  48                 	db	72	;'H'
  4102  00FF5D  45                 	db	69	;'E'
  4103  00FF5E  4C                 	db	76	;'L'
  4104  00FF5F  50                 	db	80	;'P'
  4105  00FF60  20                 	db	32
  4106  00FF61  25                 	db	37
  4107  00FF62  73                 	db	115	;'s'
  4108  00FF63  20                 	db	32
  4109  00FF64  20                 	db	32
  4110  00FF65  20                 	db	32
  4111  00FF66  20                 	db	32
  4112  00FF67  20                 	db	32
  4113  00FF68  20                 	db	32
  4114  00FF69  20                 	db	32
  4115  00FF6A  20                 	db	32
  4116  00FF6B  20                 	db	32
  4117  00FF6C  20                 	db	32
  4118  00FF6D  20                 	db	32
  4119  00FF6E  00                 	db	0
  4120  00FF6F                     
  4121                           ; BSR set to: 57
  4122  00FF6F  44                 	db	68	;'D'
  4123  00FF70  49                 	db	73	;'I'
  4124  00FF71  53                 	db	83	;'S'
  4125  00FF72  50                 	db	80	;'P'
  4126  00FF73  4C                 	db	76	;'L'
  4127  00FF74  41                 	db	65	;'A'
  4128  00FF75  59                 	db	89	;'Y'
  4129  00FF76  20                 	db	32
  4130  00FF77  25                 	db	37
  4131  00FF78  73                 	db	115	;'s'
  4132  00FF79  20                 	db	32
  4133  00FF7A  20                 	db	32
  4134  00FF7B  20                 	db	32
  4135  00FF7C  20                 	db	32
  4136  00FF7D  20                 	db	32
  4137  00FF7E  20                 	db	32
  4138  00FF7F  20                 	db	32
  4139  00FF80  20                 	db	32
  4140  00FF81  00                 	db	0
  4141  00FF82                     
  4142                           ; BSR set to: 57
  4143  00FF82  25                 	db	37
  4144  00FF83  64                 	db	100	;'d'
  4145  00FF84  20                 	db	32
  4146  00FF85  25                 	db	37
  4147  00FF86  32                 	db	50	;'2'
  4148  00FF87  2E                 	db	46
  4149  00FF88  34                 	db	52	;'4'
  4150  00FF89  66                 	db	102	;'f'
  4151  00FF8A  2C                 	db	44
  4152  00FF8B  20                 	db	32
  4153  00FF8C  25                 	db	37
  4154  00FF8D  64                 	db	100	;'d'
  4155  00FF8E  20                 	db	32
  4156  00FF8F  20                 	db	32
  4157  00FF90  20                 	db	32
  4158  00FF91  23                 	db	35
  4159  00FF92  00                 	db	0
  4160  00FF93                     STR_27:
  4161                           
  4162                           ; BSR set to: 57
  4163  00FF93  25                 	db	37
  4164  00FF94  64                 	db	100	;'d'
  4165  00FF95  20                 	db	32
  4166  00FF96  25                 	db	37
  4167  00FF97  32                 	db	50	;'2'
  4168  00FF98  2E                 	db	46
  4169  00FF99  34                 	db	52	;'4'
  4170  00FF9A  66                 	db	102	;'f'
  4171  00FF9B  20                 	db	32
  4172  00FF9C  20                 	db	32
  4173  00FF9D  20                 	db	32
  4174  00FF9E  25                 	db	37
  4175  00FF9F  64                 	db	100	;'d'
  4176  00FFA0  20                 	db	32
  4177  00FFA1  20                 	db	32
  4178  00FFA2  00                 	db	0
  4179  00FFA3                     STR_76:
  4180                           
  4181                           ; BSR set to: 57
  4182  00FFA3  76                 	db	118	;'v'
  4183  00FFA4  74                 	db	116	;'t'
  4184  00FFA5  65                 	db	101	;'e'
  4185  00FFA6  72                 	db	114	;'r'
  4186  00FFA7  6D                 	db	109	;'m'
  4187  00FFA8  20                 	db	32
  4188  00FFA9  25                 	db	37
  4189  00FFAA  78                 	db	120	;'x'
  4190  00FFAB  3A                 	db	58	;':'
  4191  00FFAC  25                 	db	37
  4192  00FFAD  78                 	db	120	;'x'
  4193  00FFAE  20                 	db	32
  4194  00FFAF  20                 	db	32
  4195  00FFB0  20                 	db	32
  4196  00FFB1  00                 	db	0
  4197  00FFB2                     STR_70:
  4198                           
  4199                           ; BSR set to: 57
  4200  00FFB2  46                 	db	70	;'F'
  4201  00FFB3  65                 	db	101	;'e'
  4202  00FFB4  62                 	db	98	;'b'
  4203  00FFB5  20                 	db	32
  4204  00FFB6  31                 	db	49	;'1'
  4205  00FFB7  35                 	db	53	;'5'
  4206  00FFB8  20                 	db	32
  4207  00FFB9  32                 	db	50	;'2'
  4208  00FFBA  30                 	db	48	;'0'
  4209  00FFBB  32                 	db	50	;'2'
  4210  00FFBC  30                 	db	48	;'0'
  4211  00FFBD  00                 	db	0
  4212  00FFBE                     STR_74:
  4213                           
  4214                           ; BSR set to: 57
  4215  00FFBE  25                 	db	37
  4216  00FFBF  73                 	db	115	;'s'
  4217  00FFC0  20                 	db	32
  4218  00FFC1  20                 	db	32
  4219  00FFC2  20                 	db	32
  4220  00FFC3  20                 	db	32
  4221  00FFC4  20                 	db	32
  4222  00FFC5  20                 	db	32
  4223  00FFC6  20                 	db	32
  4224  00FFC7  00                 	db	0
  4225  00FFC8                     STR_71:
  4226                           
  4227                           ; BSR set to: 57
  4228  00FFC8  31                 	db	49	;'1'
  4229  00FFC9  37                 	db	55	;'7'
  4230  00FFCA  3A                 	db	58	;':'
  4231  00FFCB  30                 	db	48	;'0'
  4232  00FFCC  39                 	db	57	;'9'
  4233  00FFCD  3A                 	db	58	;':'
  4234  00FFCE  33                 	db	51	;'3'
  4235  00FFCF  35                 	db	53	;'5'
  4236  00FFD0  00                 	db	0
  4237  00FFD1                     STR_3:
  4238                           
  4239                           ; BSR set to: 57
  4240  00FFD1  31                 	db	49	;'1'
  4241  00FFD2  2E                 	db	46
  4242  00FFD3  32                 	db	50	;'2'
  4243  00FFD4  33                 	db	51	;'3'
  4244  00FFD5  00                 	db	0
  4245  00FFD6                     STR_91:
  4246                           
  4247                           ; BSR set to: 57
  4248  00FFD6  49                 	db	73	;'I'
  4249  00FFD7  4E                 	db	78	;'N'
  4250  00FFD8  46                 	db	70	;'F'
  4251  00FFD9  00                 	db	0
  4252  00FFDA                     STR_95:
  4253                           
  4254                           ; BSR set to: 57
  4255  00FFDA  4E                 	db	78	;'N'
  4256  00FFDB  41                 	db	65	;'A'
  4257  00FFDC  4E                 	db	78	;'N'
  4258  00FFDD  00                 	db	0
  4259  00FFDE                     STR_92:
  4260                           
  4261                           ; BSR set to: 57
  4262  00FFDE  69                 	db	105	;'i'
  4263  00FFDF  6E                 	db	110	;'n'
  4264  00FFE0  66                 	db	102	;'f'
  4265  00FFE1  00                 	db	0
  4266  00FFE2                     STR_96:
  4267                           
  4268                           ; BSR set to: 57
  4269  00FFE2  6E                 	db	110	;'n'
  4270  00FFE3  61                 	db	97	;'a'
  4271  00FFE4  6E                 	db	110	;'n'
  4272  00FFE5  00                 	db	0
  4273  00FFE6                     STR_122:
  4274                           
  4275                           ; BSR set to: 57
  4276  00FFE6  6C                 	db	108	;'l'
  4277  00FFE7  58                 	db	88	;'X'
  4278  00FFE8  00                 	db	0
  4279  00FFE9                     STR_99:
  4280                           
  4281                           ; BSR set to: 57
  4282  00FFE9  6C                 	db	108	;'l'
  4283  00FFEA  64                 	db	100	;'d'
  4284  00FFEB  00                 	db	0
  4285  00FFEC                     STR_108:
  4286                           
  4287                           ; BSR set to: 57
  4288  00FFEC  6C                 	db	108	;'l'
  4289  00FFED  66                 	db	102	;'f'
  4290  00FFEE  00                 	db	0
  4291  00FFEF                     STR_103:
  4292                           
  4293                           ; BSR set to: 57
  4294  00FFEF  6C                 	db	108	;'l'
  4295  00FFF0  69                 	db	105	;'i'
  4296  00FFF1  00                 	db	0
  4297  00FFF2                     STR_113:
  4298                           
  4299                           ; BSR set to: 57
  4300  00FFF2  6C                 	db	108	;'l'
  4301  00FFF3  75                 	db	117	;'u'
  4302  00FFF4  00                 	db	0
  4303  00FFF5                     STR_118:
  4304                           
  4305                           ; BSR set to: 57
  4306  00FFF5  6C                 	db	108	;'l'
  4307  00FFF6  78                 	db	120	;'x'
  4308  00FFF7  00                 	db	0
  4309  00FFF8                     STR_69:
  4310                           
  4311                           ; BSR set to: 57
  4312  00FFF8  25                 	db	37
  4313  00FFF9  63                 	db	99	;'c'
  4314  00FFFA  00                 	db	0
  4315  00FFFB                     STR_68:
  4316                           
  4317                           ; BSR set to: 57
  4318  00FFFB  25                 	db	37
  4319  00FFFC  73                 	db	115	;'s'
  4320  00FFFD  00                 	db	0
  4321  0000                     
  4322                           ; #config settings
  4323  00FFFE  00                 	db	0	; dummy byte at the end
  4324  0000                     
  4325                           	psect	cinit
  4326  01F0C0                     __pcinit:
  4327                           	opt callstack 0
  4328  01F0C0                     start_initialization:
  4329                           	opt callstack 0
  4330  01F0C0                     __initialization:
  4331                           	opt callstack 0
  4332                           
  4333                           ; Initialize objects allocated to BIGRAM (848 bytes)
  4334                           ; load TBLPTR registers with __pidataBIGRAM
  4335  01F0C0  0E74               	movlw	low __pidataBIGRAM
  4336  01F0C2  6EF6               	movwf	tblptrl,c
  4337  01F0C4  0E9D               	movlw	high __pidataBIGRAM
  4338  01F0C6  6EF7               	movwf	tblptrh,c
  4339  01F0C8  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  4340  01F0CA  6EF8               	movwf	tblptru,c
  4341  01F0CC  EE01  F2FF         	lfsr	0,__pdataBIGRAM
  4342  01F0D0  EE20 F350          	lfsr	2,848
  4343  01F0D4                     copy_data0:
  4344  01F0D4  0009               	tblrd		*+
  4345  01F0D6  006F FFD7 FFEE     	movff	tablat,postinc0
  4346  01F0DC  50DD               	movf	postdec2,w,c
  4347  01F0DE  50D9               	movf	fsr2l,w,c
  4348  01F0E0  E1F9               	bnz	copy_data0
  4349  01F0E2  50DA               	movf	fsr2h,w,c
  4350  01F0E4  E1F7               	bnz	copy_data0
  4351                           
  4352                           ; Initialize objects allocated to BANK2 (171 bytes)
  4353                           ; load TBLPTR registers with __pidataBANK2
  4354  01F0E6  0ECC               	movlw	low __pidataBANK2
  4355  01F0E8  6EF6               	movwf	tblptrl,c
  4356  01F0EA  0EFE               	movlw	high __pidataBANK2
  4357  01F0EC  6EF7               	movwf	tblptrh,c
  4358  01F0EE  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4359  01F0F0  6EF8               	movwf	tblptru,c
  4360  01F0F2  EE00  F200         	lfsr	0,__pdataBANK2
  4361  01F0F6  EE20 F0AB          	lfsr	2,171
  4362  01F0FA                     copy_data1:
  4363  01F0FA  0009               	tblrd		*+
  4364  01F0FC  006F FFD7 FFEE     	movff	tablat,postinc0
  4365  01F102  50DD               	movf	postdec2,w,c
  4366  01F104  50D9               	movf	fsr2l,w,c
  4367  01F106  E1F9               	bnz	copy_data1
  4368                           
  4369                           ; Initialize objects allocated to BANK1 (208 bytes)
  4370                           ; load TBLPTR registers with __pidataBANK1
  4371  01F108  0EE8               	movlw	low __pidataBANK1
  4372  01F10A  6EF6               	movwf	tblptrl,c
  4373  01F10C  0EF8               	movlw	high __pidataBANK1
  4374  01F10E  6EF7               	movwf	tblptrh,c
  4375  01F110  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  4376  01F112  6EF8               	movwf	tblptru,c
  4377  01F114  EE00  F100         	lfsr	0,__pdataBANK1
  4378  01F118  EE20 F0D0          	lfsr	2,208
  4379  01F11C                     copy_data2:
  4380  01F11C  0009               	tblrd		*+
  4381  01F11E  006F FFD7 FFEE     	movff	tablat,postinc0
  4382  01F124  50DD               	movf	postdec2,w,c
  4383  01F126  50D9               	movf	fsr2l,w,c
  4384  01F128  E1F9               	bnz	copy_data2
  4385                           
  4386                           ; Clear objects allocated to BIGRAM (642 bytes)
  4387  01F12A  EE02  F24F         	lfsr	0,__pbssBIGRAM
  4388  01F12E  EE20 F282          	lfsr	2,642
  4389  01F132                     clear_0:
  4390  01F132  6AEE               	clrf	postinc0,c
  4391  01F134  50DD               	movf	postdec2,w,c
  4392  01F136  50D9               	movf	fsr2l,w,c
  4393  01F138  E1FC               	bnz	clear_0
  4394  01F13A  50DA               	movf	fsr2h,w,c
  4395  01F13C  E1FA               	bnz	clear_0
  4396                           
  4397                           ; Clear objects allocated to BANK6 (255 bytes)
  4398  01F13E  EE01  F200         	lfsr	0,__pbssBANK6
  4399  01F142  EE20 F0FF          	lfsr	2,255
  4400  01F146                     clear_1:
  4401  01F146  6AEE               	clrf	postinc0,c
  4402  01F148  50DD               	movf	postdec2,w,c
  4403  01F14A  50D9               	movf	fsr2l,w,c
  4404  01F14C  E1FC               	bnz	clear_1
  4405  01F14E  50DA               	movf	fsr2h,w,c
  4406  01F150  E1FA               	bnz	clear_1
  4407                           
  4408                           ; Clear objects allocated to BANK5 (171 bytes)
  4409  01F152  EE01  F100         	lfsr	0,__pbssBANK5
  4410  01F156  0EAB               	movlw	171
  4411  01F158                     clear_2:
  4412  01F158  6AEE               	clrf	postinc0,c
  4413  01F15A  06E8               	decf	wreg,f,c
  4414  01F15C  E1FD               	bnz	clear_2
  4415                           
  4416                           ; Clear objects allocated to BANK4 (198 bytes)
  4417  01F15E  EE01  F000         	lfsr	0,__pbssBANK4
  4418  01F162  0EC6               	movlw	198
  4419  01F164                     clear_3:
  4420  01F164  6AEE               	clrf	postinc0,c
  4421  01F166  06E8               	decf	wreg,f,c
  4422  01F168  E1FD               	bnz	clear_3
  4423                           
  4424                           ; Clear objects allocated to BANK3 (247 bytes)
  4425  01F16A  EE00  F300         	lfsr	0,__pbssBANK3
  4426  01F16E  0EF7               	movlw	247
  4427  01F170                     clear_4:
  4428  01F170  6AEE               	clrf	postinc0,c
  4429  01F172  06E8               	decf	wreg,f,c
  4430  01F174  E1FD               	bnz	clear_4
  4431                           
  4432                           ; Clear objects allocated to BANK2 (75 bytes)
  4433  01F176  EE00  F2AB         	lfsr	0,__pbssBANK2
  4434  01F17A  0E4B               	movlw	75
  4435  01F17C                     clear_5:
  4436  01F17C  6AEE               	clrf	postinc0,c
  4437  01F17E  06E8               	decf	wreg,f,c
  4438  01F180  E1FD               	bnz	clear_5
  4439                           
  4440                           ; Clear objects allocated to BANK1 (46 bytes)
  4441  01F182  EE00  F1D0         	lfsr	0,__pbssBANK1
  4442  01F186  0E2E               	movlw	46
  4443  01F188                     clear_6:
  4444  01F188  6AEE               	clrf	postinc0,c
  4445  01F18A  06E8               	decf	wreg,f,c
  4446  01F18C  E1FD               	bnz	clear_6
  4447                           
  4448                           ; Clear objects allocated to BANK0 (135 bytes)
  4449  01F18E  EE00  F060         	lfsr	0,__pbssBANK0
  4450  01F192  0E87               	movlw	135
  4451  01F194                     clear_7:
  4452  01F194  6AEE               	clrf	postinc0,c
  4453  01F196  06E8               	decf	wreg,f,c
  4454  01F198  E1FD               	bnz	clear_7
  4455                           
  4456                           ; Clear objects allocated to COMRAM (14 bytes)
  4457  01F19A  EE00  F03A         	lfsr	0,__pbssCOMRAM
  4458  01F19E  0E0E               	movlw	14
  4459  01F1A0                     clear_8:
  4460  01F1A0  6AEE               	clrf	postinc0,c
  4461  01F1A2  06E8               	decf	wreg,f,c
  4462  01F1A4  E1FD               	bnz	clear_8
  4463                           
  4464                           ;
  4465                           ; Setup IVTBASE
  4466                           ;
  4467  01F1A6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4468  01F1A8  6ED5               	movwf	213,c
  4469  01F1AA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4470  01F1AC  6ED6               	movwf	214,c
  4471  01F1AE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4472  01F1B0  6ED7               	movwf	215,c
  4473  01F1B2                     end_of_initialization:
  4474                           	opt callstack 0
  4475  01F1B2                     __end_of__initialization:
  4476                           	opt callstack 0
  4477  01F1B2  0100               	movlb	0
  4478  01F1B4  EF00  F080         	goto	_main	;jump to C main() function
  4479                           
  4480                           	psect	bssCOMRAM
  4481  00003A                     __pbssCOMRAM:
  4482                           	opt callstack 0
  4483  00003A                     _width:
  4484                           	opt callstack 0
  4485  00003A                     	ds	2
  4486  00003C                     _prec:
  4487                           	opt callstack 0
  4488  00003C                     	ds	2
  4489  00003E                     _flags:
  4490                           	opt callstack 0
  4491  00003E                     	ds	2
  4492  000040                     calc_bsoc@log_update_wait:
  4493                           	opt callstack 0
  4494  000040                     	ds	1
  4495  000041                     check_day_time@day_delay:
  4496                           	opt callstack 0
  4497  000041                     	ds	1
  4498  000042                     dac_spi_control@init:
  4499                           	opt callstack 0
  4500  000042                     	ds	1
  4501  000043                     display_history@bwait:
  4502                           	opt callstack 0
  4503  000043                     	ds	1
  4504  000044                     _uart2RxHead:
  4505                           	opt callstack 0
  4506  000044                     	ds	1
  4507  000045                     _uart2TxBufferRemaining:
  4508                           	opt callstack 0
  4509  000045                     	ds	1
  4510  000046                     _uart2TxTail:
  4511                           	opt callstack 0
  4512  000046                     	ds	1
  4513  000047                     _uart1RxHead:
  4514                           	opt callstack 0
  4515  000047                     	ds	1
  4516                           
  4517                           	psect	bssBANK0
  4518  000060                     __pbssBANK0:
  4519                           	opt callstack 0
  4520  000060                     _spi_link:
  4521                           	opt callstack 0
  4522  000060                     	ds	12
  4523  00006C                     spinners@s:
  4524                           	opt callstack 0
  4525  00006C                     	ds	6
  4526  000072                     ___tzname:
  4527                           	opt callstack 0
  4528  000072                     	ds	4
  4529  000076                     ___timezone:
  4530                           	opt callstack 0
  4531  000076                     	ds	4
  4532  00007A                     floorf@F524:
  4533                           	opt callstack 0
  4534  00007A                     	ds	4
  4535  00007E                     fabsf@F463:
  4536                           	opt callstack 0
  4537  00007E                     	ds	4
  4538  000082                     ___fpclassifyf@F463:
  4539                           	opt callstack 0
  4540  000082                     	ds	4
  4541  000086                     calc_ror_data@bcror:
  4542                           	opt callstack 0
  4543  000086                     	ds	4
  4544  00008A                     calc_ror_data@bvror:
  4545                           	opt callstack 0
  4546  00008A                     	ds	4
  4547  00008E                     calc_model_data@bcror:
  4548                           	opt callstack 0
  4549  00008E                     	ds	4
  4550  000092                     calc_model_data@bvror:
  4551                           	opt callstack 0
  4552  000092                     	ds	4
  4553  000096                     _utctime:
  4554                           	opt callstack 0
  4555  000096                     	ds	4
  4556  00009A                     wdtdelay@dcount:
  4557                           	opt callstack 0
  4558  00009A                     	ds	4
  4559  00009E                     _P:
  4560                           	opt callstack 0
  4561  00009E                     	ds	4
  4562  0000A2                     _TMR3_InterruptHandler:
  4563                           	opt callstack 0
  4564  0000A2                     	ds	3
  4565  0000A5                     _TMR5_InterruptHandler:
  4566                           	opt callstack 0
  4567  0000A5                     	ds	3
  4568  0000A8                     _TMR6_InterruptHandler:
  4569                           	opt callstack 0
  4570  0000A8                     	ds	3
  4571  0000AB                     _ADCC_ADTI_InterruptHandler:
  4572                           	opt callstack 0
  4573  0000AB                     	ds	3
  4574  0000AE                     _ADCC_ADI_InterruptHandler:
  4575                           	opt callstack 0
  4576  0000AE                     	ds	3
  4577  0000B1                     _UART1_RxInterruptHandler:
  4578                           	opt callstack 0
  4579  0000B1                     	ds	3
  4580  0000B4                     _UART2_TxInterruptHandler:
  4581                           	opt callstack 0
  4582  0000B4                     	ds	3
  4583  0000B7                     _UART2_RxInterruptHandler:
  4584                           	opt callstack 0
  4585  0000B7                     	ds	3
  4586  0000BA                     _INT1_InterruptHandler:
  4587                           	opt callstack 0
  4588  0000BA                     	ds	3
  4589  0000BD                     _INT0_InterruptHandler:
  4590                           	opt callstack 0
  4591  0000BD                     	ds	3
  4592  0000C0                     _dst_off:
  4593                           	opt callstack 0
  4594  0000C0                     	ds	2
  4595  0000C2                     ___daylight:
  4596                           	opt callstack 0
  4597  0000C2                     	ds	2
  4598  0000C4                     _nout:
  4599                           	opt callstack 0
  4600  0000C4                     	ds	2
  4601  0000C6                     _t_mbmc:
  4602                           	opt callstack 0
  4603  0000C6                     	ds	2
  4604  0000C8                     TMR3_ISR@CountCallBack:
  4605                           	opt callstack 0
  4606  0000C8                     	ds	2
  4607  0000CA                     _timer3ReloadVal:
  4608                           	opt callstack 0
  4609  0000CA                     	ds	2
  4610  0000CC                     TMR5_ISR@CountCallBack:
  4611                           	opt callstack 0
  4612  0000CC                     	ds	2
  4613  0000CE                     _timer5ReloadVal:
  4614                           	opt callstack 0
  4615  0000CE                     	ds	2
  4616  0000D0                     esr_check@esr_state:
  4617                           	opt callstack 0
  4618  0000D0                     	ds	1
  4619  0000D1                     dac_spi_control@SB:
  4620                           	opt callstack 0
  4621  0000D1                     	ds	1
  4622  0000D2                     dac_spi_control@SC:
  4623                           	opt callstack 0
  4624  0000D2                     	ds	1
  4625  0000D3                     dac_spi_control@S2:
  4626                           	opt callstack 0
  4627  0000D3                     	ds	1
  4628  0000D4                     dac_spi_control@S1:
  4629                           	opt callstack 0
  4630  0000D4                     	ds	1
  4631  0000D5                     dac_spi_control@S0:
  4632                           	opt callstack 0
  4633  0000D5                     	ds	1
  4634  0000D6                     _mode_sw:
  4635                           	opt callstack 0
  4636  0000D6                     	ds	1
  4637  0000D7                     _uart2RxCount:
  4638                           	opt callstack 0
  4639  0000D7                     	ds	1
  4640  0000D8                     _uart2RxTail:
  4641                           	opt callstack 0
  4642  0000D8                     	ds	1
  4643  0000D9                     _uart2TxHead:
  4644                           	opt callstack 0
  4645  0000D9                     	ds	1
  4646  0000DA                     _uart1RxCount:
  4647                           	opt callstack 0
  4648  0000DA                     	ds	1
  4649  0000DB                     _uart1RxTail:
  4650                           	opt callstack 0
  4651  0000DB                     	ds	1
  4652  0000DC                     time@current_time:
  4653                           	opt callstack 0
  4654  0000DC                     	ds	8
  4655  0000E4                     _crcObj:
  4656                           	opt callstack 0
  4657  0000E4                     	ds	3
  4658                           
  4659                           	psect	bssBANK1
  4660  0001D0                     __pbssBANK1:
  4661                           	opt callstack 0
  4662  0001D0                     _uart1RxBuffer:
  4663                           	opt callstack 0
  4664  0001D0                     	ds	8
  4665  0001D8                     _lock:
  4666                           	opt callstack 0
  4667  0001D8                     	ds	4
  4668  0001DC                     _r1:
  4669                           	opt callstack 0
  4670  0001DC                     	ds	10
  4671  0001E6                     _r0:
  4672                           	opt callstack 0
  4673  0001E6                     	ds	10
  4674  0001F0                     _dst_name:
  4675                           	opt callstack 0
  4676  0001F0                     	ds	7
  4677  0001F7                     _std_name:
  4678                           	opt callstack 0
  4679  0001F7                     	ds	7
  4680                           
  4681                           	psect	dataBANK1
  4682  000100                     __pdataBANK1:
  4683                           	opt callstack 0
  4684  000100                     stoa@F1166:
  4685                           	opt callstack 0
  4686  000100                     	ds	7
  4687  000107                     _V:
  4688                           	opt callstack 0
  4689  000107                     	ds	192
  4690  0001C7                     _H:
  4691                           	opt callstack 0
  4692  0001C7                     	ds	9
  4693                           
  4694                           	psect	bssBANK2
  4695  0002AB                     __pbssBANK2:
  4696                           	opt callstack 0
  4697  0002AB                     _S:
  4698                           	opt callstack 0
  4699  0002AB                     	ds	41
  4700  0002D4                     _tickCount:
  4701                           	opt callstack 0
  4702  0002D4                     	ds	26
  4703  0002EE                     _seed:
  4704                           	opt callstack 0
  4705  0002EE                     	ds	8
  4706                           
  4707                           	psect	dataBANK2
  4708  000200                     __pdataBANK2:
  4709                           	opt callstack 0
  4710  000200                     _R:
  4711                           	opt callstack 0
  4712  000200                     	ds	171
  4713                           
  4714                           	psect	bssBANK3
  4715  000300                     __pbssBANK3:
  4716                           	opt callstack 0
  4717  000300                     lp_filter@smooth:
  4718                           	opt callstack 0
  4719  000300                     	ds	84
  4720  000354                     _dbuf:
  4721                           	opt callstack 0
  4722  000354                     	ds	80
  4723  0003A4                     	ds	32
  4724  0003C4                     asctime@buf:
  4725                           	opt callstack 0
  4726  0003C4                     	ds	27
  4727  0003DF                     localtime@tm:
  4728                           	opt callstack 0
  4729  0003DF                     	ds	24
  4730                           
  4731                           	psect	bssBANK4
  4732  000400                     __pbssBANK4:
  4733                           	opt callstack 0
  4734  000400                     _uart2TxBuffer:
  4735                           	opt callstack 0
  4736  000400                     	ds	64
  4737  000440                     _ring_buf2:
  4738                           	opt callstack 0
  4739  000440                     	ds	67
  4740  000483                     _ring_buf1:
  4741                           	opt callstack 0
  4742  000483                     	ds	67
  4743                           
  4744                           	psect	bssBANK5
  4745  000500                     __pbssBANK5:
  4746                           	opt callstack 0
  4747  000500                     _r_cal:
  4748                           	opt callstack 0
  4749  000500                     	ds	171
  4750                           
  4751                           	psect	bssBANK6
  4752  000600                     __pbssBANK6:
  4753                           	opt callstack 0
  4754  000600                     _uart2RxBuffer:
  4755                           	opt callstack 0
  4756  000600                     	ds	255
  4757                           
  4758                           	psect	bssBIGRAM
  4759  000A4F                     __pbssBIGRAM:
  4760                           	opt callstack 0
  4761  000A4F                     _D:
  4762                           	opt callstack 0
  4763  000A4F                     	ds	642
  4764                           
  4765                           	psect	dataBIGRAM
  4766  0006FF                     __pdataBIGRAM:
  4767                           	opt callstack 0
  4768  0006FF                     _port_data:
  4769                           	opt callstack 0
  4770  0006FF                     	ds	512
  4771  0008FF                     _C:
  4772                           	opt callstack 0
  4773  0008FF                     	ds	336
  4774                           
  4775                           	psect	cstackBANK0
  4776  0000E7                     __pcstackBANK0:
  4777                           	opt callstack 0
  4778  0000E7                     ??_TMR3_ISR:
  4779                           
  4780                           ; 1 bytes @ 0x0
  4781  0000E7                     	ds	25
  4782                           
  4783                           	psect	cstackCOMRAM
  4784  000021                     __pcstackCOMRAM:
  4785                           	opt callstack 0
  4786  000021                     ??_ADCC_ThresholdISR:
  4787  000021                     
  4788                           ; 1 bytes @ 0x0
  4789  000021                     	ds	5
  4790  000026                     ??_TMR6_ISR:
  4791                           
  4792                           ; 1 bytes @ 0x5
  4793  000026                     	ds	1
  4794  000027                     ??_INT1_ISR:
  4795  000027                     
  4796                           ; 1 bytes @ 0x6
  4797  000027                     	ds	4
  4798  00002B                     ??_TMR5_ISR:
  4799                           
  4800                           ; 1 bytes @ 0xA
  4801  00002B                     	ds	15
  4802                           
  4803 ;;
  4804 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4805 ;;
  4806 ;; *************** function _main *****************
  4807 ;; Defined at:
  4808 ;;		line 198 in file "main.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;		None
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;  esr_temp        4  [STACK] float 
  4813 ;;  i_esr           2  [STACK] unsigned short 
  4814 ;;  shape           1  [STACK] unsigned char 
  4815 ;;  inp_index       1  [STACK] unsigned char 
  4816 ;;  k               1  [STACK] unsigned char 
  4817 ;;  j               1  [STACK] unsigned char 
  4818 ;;  i               1  [STACK] unsigned char 
  4819 ;;  mode            1  [STACK] enum E17179
  4820 ;;  i_ror           1  [STACK] unsigned char 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1  [STACK] void 
  4823 ;; Registers used:
  4824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4834 ;;Total ram usage:        0 bytes
  4835 ;; Hardware stack levels required when called:   29
  4836 ;; This function calls:
  4837 ;;		_SYSTEM_Initialize
  4838 ;;		_StartTimer
  4839 ;;		_TimerDone
  4840 ;;		_WaitMs
  4841 ;;		___fladd
  4842 ;;		___flge
  4843 ;;		___fltol
  4844 ;;		_calc_model_data
  4845 ;;		_calc_ror_data
  4846 ;;		_check_adc_scan
  4847 ;;		_check_enter_button
  4848 ;;		_check_help
  4849 ;;		_clear_adc_scan
  4850 ;;		_clear_hid_pflags
  4851 ;;		_conv_raw_result
  4852 ;;		_convert_adc_data
  4853 ;;		_current_sensor_cal
  4854 ;;		_display_history
  4855 ;;		_eaDogM_WriteCommand
  4856 ;;		_esr_check
  4857 ;;		_fabsf
  4858 ;;		_get_raw_result
  4859 ;;		_get_switch
  4860 ;;		_get_vterm_ptr
  4861 ;;		_hid_display
  4862 ;;		_init_bsoc
  4863 ;;		_init_display
  4864 ;;		_init_port_dma
  4865 ;;		_load_hist_data
  4866 ;;		_lp_filter
  4867 ;;		_mode_lamp_dim
  4868 ;;		_read_cal_data
  4869 ;;		_set_dac
  4870 ;;		_set_dac_a
  4871 ;;		_set_dac_b
  4872 ;;		_set_display_info
  4873 ;;		_set_load_relay_one
  4874 ;;		_set_load_relay_two
  4875 ;;		_set_vterm
  4876 ;;		_spinners
  4877 ;;		_sprintf
  4878 ;;		_srand
  4879 ;;		_start_adc_scan
  4880 ;;		_start_switch_handler
  4881 ;;		_static_soc
  4882 ;;		_update_cal_data
  4883 ;;		_update_hist_data
  4884 ;;		_update_lcd
  4885 ;;		_wait_lcd_done
  4886 ;;		_write_cal_data
  4887 ;; This function is called by:
  4888 ;;		Startup code after reset
  4889 ;; This function uses a reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text0
  4893  010000                     __ptext0:
  4894                           	opt callstack 0
  4895  010000                     _main:
  4896                           	opt callstack 0
  4897                           
  4898                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4899  010000  0E11               	movlw	17
  4900  010002  26E1               	addwf	fsr1l,f,c
  4901  010004  0E00               	movlw	0
  4902  010006  22E2               	addwfc	fsr1h,f,c
  4903                           
  4904                           ;main.c: 200:  UI_STATES mode;;main.c: 201:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4905                           ;stkvar	_inp_index @ sp[(-17)+11]
  4906                           
  4907                           ;incstack = 0
  4908  010008  0EFA               	movlw	-6
  4909  01000A  6AE3               	clrf	plusw1,c
  4910                           
  4911                           ;stkvar	_i @ sp[(-17)+14]
  4912  01000C  0EFD               	movlw	-3
  4913  01000E  6AE3               	clrf	plusw1,c
  4914                           
  4915                           ;stkvar	_j @ sp[(-17)+13]
  4916  010010  0EFC               	movlw	-4
  4917  010012  6AE3               	clrf	plusw1,c
  4918  010014  2AE3               	incf	plusw1,f,c
  4919                           
  4920                           ;stkvar	_k @ sp[(-17)+12]
  4921  010016  0EFB               	movlw	-5
  4922  010018  6AE3               	clrf	plusw1,c
  4923  01001A  82E3               	bsf	plusw1,1,c
  4924                           
  4925                           ;main.c: 204:  SYSTEM_Initialize();
  4926  01001C  ECB6  F008         	call	_SYSTEM_Initialize	;wreg free
  4927                           
  4928                           ; BSR set to: 60
  4929                           ;main.c: 207:  (INTCON0bits.GIEH = 1);
  4930  010020  8ED2               	bsf	210,7,c	;volatile
  4931                           
  4932                           ; BSR set to: 60
  4933                           ;main.c: 210:  (INTCON0bits.GIEL = 1);
  4934  010022  8CD2               	bsf	210,6,c	;volatile
  4935                           
  4936                           ; BSR set to: 60
  4937                           ;main.c: 212:  V.ui_state = UI_STATE_INIT;
  4938  010024  0101               	movlb	1	; () banked
  4939  010026  6B07               	clrf	_V& (0+255),b	;volatile
  4940                           
  4941                           ; BSR set to: 1
  4942                           ;main.c: 217:  WaitMs(300);
  4943  010028  0E2C               	movlw	44
  4944  01002A  6EE6               	movwf	postinc1,c
  4945  01002C  0E01               	movlw	1
  4946  01002E  6EE6               	movwf	postinc1,c
  4947  010030  EC74  F00B         	call	_WaitMs	;wreg free
  4948                           
  4949                           ;main.c: 218:  if (PORTBbits.RB0) {
  4950  010034  A0CB               	btfss	203,0,c	;volatile
  4951  010036  D004               	goto	l17057
  4952                           
  4953                           ;main.c: 219:   mode = UI_STATE_HOST;
  4954                           ;stkvar	_mode @ sp[(-17)+15]
  4955  010038  0EFE               	movlw	-2
  4956  01003A  6AE3               	clrf	plusw1,c
  4957  01003C  2AE3               	incf	plusw1,f,c
  4958                           
  4959                           ;main.c: 220:  } else {
  4960  01003E  D004               	goto	l17059
  4961  010040                     l17057:
  4962                           
  4963                           ;main.c: 221:   mode = UI_STATE_LOG;
  4964                           ;stkvar	_mode @ sp[(-17)+15]
  4965  010040  0EFE               	movlw	-2
  4966  010042  6AE3               	clrf	plusw1,c
  4967  010044  80E3               	bsf	plusw1,0,c
  4968  010046  82E3               	bsf	plusw1,1,c	;indir
  4969  010048                     l17059:
  4970                           
  4971                           ;main.c: 224:  if (mode == UI_STATE_HOST) {
  4972                           ;stkvar	_mode @ sp[(-17)+15]
  4973  010048  0EFE               	movlw	-2
  4974  01004A  04E3               	decf	plusw1,w,c
  4975  01004C  A4D8               	btfss	status,2,c
  4976  01004E  D007               	goto	l1449
  4977                           
  4978                           ;main.c: 225:   do { LATDbits.LATD0 = 1; } while(0);
  4979  010050  80BD               	bsf	189,0,c	;volatile
  4980                           
  4981                           ;main.c: 226:   V.mode_pwm = 70;
  4982  010052  0E00               	movlw	0
  4983  010054  0101               	movlb	1	; () banked
  4984  010056  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4985  010058  0E46               	movlw	70
  4986  01005A  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4987                           
  4988                           ;main.c: 227:  } else {
  4989  01005C  D004               	goto	l17063
  4990  01005E                     l1449:
  4991  01005E  90BD               	bcf	189,0,c	;volatile
  4992                           
  4993                           ;main.c: 229:   V.mode_pwm = 0;
  4994  010060  0101               	movlb	1	; () banked
  4995  010062  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4996  010064  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4997  010066                     l17063:
  4998                           
  4999                           ; BSR set to: 1
  5000                           ;main.c: 231:  mode_lamp_dim(V.mode_pwm);
  5001  010066  0060  F673  FFE6   	movff	_V+149,postinc1
  5002  01006C  0060  F677  FFE6   	movff	_V+150,postinc1
  5003  010072  EC4F  F00F         	call	_mode_lamp_dim	;wreg free
  5004  010076  D3CC               	goto	l17217
  5005  010078                     l17065:
  5006                           
  5007                           ; BSR set to: 1
  5008                           ;main.c: 239:    init_port_dma();
  5009  010078  EC10  F00C         	call	_init_port_dma	;wreg free
  5010                           
  5011                           ; BSR set to: 59
  5012                           ;main.c: 241:    init_display();
  5013  01007C  EC46  F0FA         	call	_init_display	;wreg free
  5014                           
  5015                           ; BSR set to: 61
  5016                           ;main.c: 242:    eaDogM_WriteCommand(0b00001100);
  5017  010080  0E0C               	movlw	12
  5018  010082  6EE6               	movwf	postinc1,c
  5019  010084  ECCC  F00F         	call	_eaDogM_WriteCommand	;wreg free
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;main.c: 243:    set_dac();
  5023  010088  EC5E  F0FE         	call	_set_dac	;wreg free
  5024                           
  5025                           ;main.c: 247:    set_load_relay_one(1);
  5026  01008C  0E01               	movlw	1
  5027  01008E  6EE6               	movwf	postinc1,c
  5028  010090  ECAC  F00F         	call	_set_load_relay_one	;wreg free
  5029                           
  5030                           ;main.c: 248:    set_load_relay_two(1);
  5031  010094  0E01               	movlw	1
  5032  010096  6EE6               	movwf	postinc1,c
  5033  010098  ECA4  F00F         	call	_set_load_relay_two	;wreg free
  5034                           
  5035                           ;main.c: 250:    V.ui_state = mode;
  5036                           ;stkvar	_mode @ sp[(-17)+15]
  5037  01009C  0EFE               	movlw	-2
  5038  01009E  006F FF8C  F107    	movff	plusw1,_V	;volatile
  5039                           
  5040                           ;main.c: 251:    srand(1957);
  5041  0100A4  0EA5               	movlw	165
  5042  0100A6  6EE6               	movwf	postinc1,c
  5043  0100A8  0E07               	movlw	7
  5044  0100AA  6EE6               	movwf	postinc1,c
  5045  0100AC  EC8F  F00B         	call	_srand	;wreg free
  5046                           
  5047                           ; BSR set to: 2
  5048                           ;main.c: 252:    set_vterm(0);
  5049  0100B0  0E00               	movlw	0
  5050  0100B2  6EE6               	movwf	postinc1,c
  5051  0100B4  EC0A  F00F         	call	_set_vterm	;wreg free
  5052                           
  5053                           ;main.c: 253:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  5054  0100B8  0E61               	movlw	low STR_1
  5055  0100BA  6EE6               	movwf	postinc1,c
  5056  0100BC  0EFE               	movlw	high STR_1
  5057  0100BE  6EE6               	movwf	postinc1,c
  5058  0100C0  0E00               	movlw	0
  5059  0100C2  6EE6               	movwf	postinc1,c
  5060  0100C4  0E00               	movlw	0
  5061  0100C6  6EE6               	movwf	postinc1,c
  5062  0100C8  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5063  0100CC  0060  F007  FFE6   	movff	btemp,postinc1
  5064  0100D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5065  0100D8  0E04               	movlw	4
  5066  0100DA  6EE6               	movwf	postinc1,c
  5067  0100DC  ECDB  F0F7         	call	_sprintf	;wreg free
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;main.c: 254:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.23");
  5071  0100E0  0ED1               	movlw	low STR_3
  5072  0100E2  6EE6               	movwf	postinc1,c
  5073  0100E4  0EFF               	movlw	high STR_3
  5074  0100E6  6EE6               	movwf	postinc1,c
  5075  0100E8  0E37               	movlw	low STR_2
  5076  0100EA  6EE6               	movwf	postinc1,c
  5077  0100EC  0EFE               	movlw	high STR_2
  5078  0100EE  6EE6               	movwf	postinc1,c
  5079  0100F0  0E00               	movlw	0
  5080  0100F2  6EE6               	movwf	postinc1,c
  5081  0100F4  0E01               	movlw	1
  5082  0100F6  6EE6               	movwf	postinc1,c
  5083  0100F8  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5084  0100FC  0060  F007  FFE6   	movff	btemp,postinc1
  5085  010102  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5086  010108  0E06               	movlw	6
  5087  01010A  6EE6               	movwf	postinc1,c
  5088  01010C  ECDB  F0F7         	call	_sprintf	;wreg free
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;main.c: 255:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  5092  010110  0EB9               	movlw	low STR_4
  5093  010112  6EE6               	movwf	postinc1,c
  5094  010114  0EFD               	movlw	high STR_4
  5095  010116  6EE6               	movwf	postinc1,c
  5096  010118  0E00               	movlw	0
  5097  01011A  6EE6               	movwf	postinc1,c
  5098  01011C  0E02               	movlw	2
  5099  01011E  6EE6               	movwf	postinc1,c
  5100  010120  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5101  010124  0060  F007  FFE6   	movff	btemp,postinc1
  5102  01012A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5103  010130  0E04               	movlw	4
  5104  010132  6EE6               	movwf	postinc1,c
  5105  010134  ECDB  F0F7         	call	_sprintf	;wreg free
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;main.c: 256:    sprintf(get_vterm_ptr(3, 0), "                    ");
  5109  010138  0EF0               	movlw	low (STR_16+1)
  5110  01013A  6EE6               	movwf	postinc1,c
  5111  01013C  0EFB               	movlw	high (STR_16+1)
  5112  01013E  6EE6               	movwf	postinc1,c
  5113  010140  0E00               	movlw	0
  5114  010142  6EE6               	movwf	postinc1,c
  5115  010144  0E03               	movlw	3
  5116  010146  6EE6               	movwf	postinc1,c
  5117  010148  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5118  01014C  0060  F007  FFE6   	movff	btemp,postinc1
  5119  010152  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5120  010158  0E04               	movlw	4
  5121  01015A  6EE6               	movwf	postinc1,c
  5122  01015C  ECDB  F0F7         	call	_sprintf	;wreg free
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;main.c: 257:    sprintf(get_vterm_ptr(0, 2), "                    ");
  5126  010160  0EF0               	movlw	low (STR_16+1)
  5127  010162  6EE6               	movwf	postinc1,c
  5128  010164  0EFB               	movlw	high (STR_16+1)
  5129  010166  6EE6               	movwf	postinc1,c
  5130  010168  0E02               	movlw	2
  5131  01016A  6EE6               	movwf	postinc1,c
  5132  01016C  0E00               	movlw	0
  5133  01016E  6EE6               	movwf	postinc1,c
  5134  010170  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5135  010174  0060  F007  FFE6   	movff	btemp,postinc1
  5136  01017A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5137  010180  0E04               	movlw	4
  5138  010182  6EE6               	movwf	postinc1,c
  5139  010184  ECDB  F0F7         	call	_sprintf	;wreg free
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;main.c: 258:    sprintf(get_vterm_ptr(1, 2), "                    ");
  5143  010188  0EF0               	movlw	low (STR_16+1)
  5144  01018A  6EE6               	movwf	postinc1,c
  5145  01018C  0EFB               	movlw	high (STR_16+1)
  5146  01018E  6EE6               	movwf	postinc1,c
  5147  010190  0E02               	movlw	2
  5148  010192  6EE6               	movwf	postinc1,c
  5149  010194  0E01               	movlw	1
  5150  010196  6EE6               	movwf	postinc1,c
  5151  010198  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5152  01019C  0060  F007  FFE6   	movff	btemp,postinc1
  5153  0101A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5154  0101A8  0E04               	movlw	4
  5155  0101AA  6EE6               	movwf	postinc1,c
  5156  0101AC  ECDB  F0F7         	call	_sprintf	;wreg free
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;main.c: 259:    sprintf(get_vterm_ptr(2, 2), "                    ");
  5160  0101B0  0EF0               	movlw	low (STR_16+1)
  5161  0101B2  6EE6               	movwf	postinc1,c
  5162  0101B4  0EFB               	movlw	high (STR_16+1)
  5163  0101B6  6EE6               	movwf	postinc1,c
  5164  0101B8  0E02               	movlw	2
  5165  0101BA  6EE6               	movwf	postinc1,c
  5166  0101BC  0E02               	movlw	2
  5167  0101BE  6EE6               	movwf	postinc1,c
  5168  0101C0  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5169  0101C4  0060  F007  FFE6   	movff	btemp,postinc1
  5170  0101CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5171  0101D0  0E04               	movlw	4
  5172  0101D2  6EE6               	movwf	postinc1,c
  5173  0101D4  ECDB  F0F7         	call	_sprintf	;wreg free
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;main.c: 260:    sprintf(get_vterm_ptr(3, 2), "                    ");
  5177  0101D8  0EF0               	movlw	low (STR_16+1)
  5178  0101DA  6EE6               	movwf	postinc1,c
  5179  0101DC  0EFB               	movlw	high (STR_16+1)
  5180  0101DE  6EE6               	movwf	postinc1,c
  5181  0101E0  0E02               	movlw	2
  5182  0101E2  6EE6               	movwf	postinc1,c
  5183  0101E4  0E03               	movlw	3
  5184  0101E6  6EE6               	movwf	postinc1,c
  5185  0101E8  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5186  0101EC  0060  F007  FFE6   	movff	btemp,postinc1
  5187  0101F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5188  0101F8  0E04               	movlw	4
  5189  0101FA  6EE6               	movwf	postinc1,c
  5190  0101FC  ECDB  F0F7         	call	_sprintf	;wreg free
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;main.c: 261:    update_lcd(0);
  5194  010200  0E00               	movlw	0
  5195  010202  6EE6               	movwf	postinc1,c
  5196  010204  EC8D  F0F0         	call	_update_lcd	;wreg free
  5197                           
  5198                           ;main.c: 262:    WaitMs(1000);
  5199  010208  0EE8               	movlw	232
  5200  01020A  6EE6               	movwf	postinc1,c
  5201  01020C  0E03               	movlw	3
  5202  01020E  6EE6               	movwf	postinc1,c
  5203  010210  EC74  F00B         	call	_WaitMs	;wreg free
  5204                           
  5205                           ;main.c: 263:    StartTimer(TMR_DISPLAY, 250);
  5206  010214  0EFA               	movlw	250
  5207  010216  6EE6               	movwf	postinc1,c
  5208  010218  0E00               	movlw	0
  5209  01021A  6EE6               	movwf	postinc1,c
  5210  01021C  0E0A               	movlw	10
  5211  01021E  6EE6               	movwf	postinc1,c
  5212  010220  EC82  F00A         	call	_StartTimer	;wreg free
  5213                           
  5214                           ;main.c: 264:    StartTimer(TMR_ADC, 200);
  5215  010224  0EC8               	movlw	200
  5216  010226  6EE6               	movwf	postinc1,c
  5217  010228  0E00               	movlw	0
  5218  01022A  6EE6               	movwf	postinc1,c
  5219  01022C  0E01               	movlw	1
  5220  01022E  6EE6               	movwf	postinc1,c
  5221  010230  EC82  F00A         	call	_StartTimer	;wreg free
  5222                           
  5223                           ;main.c: 265:    StartTimer(TMR_INFO, 3000);
  5224  010234  0EB8               	movlw	184
  5225  010236  6EE6               	movwf	postinc1,c
  5226  010238  0E0B               	movlw	11
  5227  01023A  6EE6               	movwf	postinc1,c
  5228  01023C  0E07               	movlw	7
  5229  01023E  6EE6               	movwf	postinc1,c
  5230  010240  EC82  F00A         	call	_StartTimer	;wreg free
  5231                           
  5232                           ;main.c: 266:    StartTimer(TMR_FLIPPER, 1500);
  5233  010244  0EDC               	movlw	220
  5234  010246  6EE6               	movwf	postinc1,c
  5235  010248  0E05               	movlw	5
  5236  01024A  6EE6               	movwf	postinc1,c
  5237  01024C  0E0B               	movlw	11
  5238  01024E  6EE6               	movwf	postinc1,c
  5239  010250  EC82  F00A         	call	_StartTimer	;wreg free
  5240                           
  5241                           ;main.c: 267:    StartTimer(TMR_HELPDIS, 3000);
  5242  010254  0EB8               	movlw	184
  5243  010256  6EE6               	movwf	postinc1,c
  5244  010258  0E0B               	movlw	11
  5245  01025A  6EE6               	movwf	postinc1,c
  5246  01025C  0E09               	movlw	9
  5247  01025E  6EE6               	movwf	postinc1,c
  5248  010260  EC82  F00A         	call	_StartTimer	;wreg free
  5249                           
  5250                           ;main.c: 269:    start_adc_scan();
  5251  010264  ECBF  F006         	call	_start_adc_scan	;wreg free
  5252                           
  5253                           ;main.c: 270:    start_switch_handler();
  5254  010268  ECBC  F00E         	call	_start_switch_handler	;wreg free
  5255                           
  5256                           ; BSR set to: 57
  5257                           ;main.c: 271:    WaitMs(1000);
  5258  01026C  0EE8               	movlw	232
  5259  01026E  6EE6               	movwf	postinc1,c
  5260  010270  0E03               	movlw	3
  5261  010272  6EE6               	movwf	postinc1,c
  5262  010274  EC74  F00B         	call	_WaitMs	;wreg free
  5263                           
  5264                           ;main.c: 276:    if (read_cal_data()) {
  5265  010278  EC85  F0E6         	call	_read_cal_data	;wreg free
  5266  01027C  5001               	movf	btemp^0,w,c
  5267  01027E  B4D8               	btfsc	status,2,c
  5268  010280  D01F               	goto	l17127
  5269                           
  5270                           ;main.c: 277:     update_cal_data();
  5271  010282  EC39  F008         	call	_update_cal_data	;wreg free
  5272                           
  5273                           ; BSR set to: 2
  5274                           ;main.c: 278:     update_hist_data(1, &C.hist[0]);
  5275  010286  0EB8               	movlw	low (_C+185)
  5276  010288  6EE6               	movwf	postinc1,c
  5277  01028A  0E09               	movlw	high (_C+185)
  5278  01028C  6EE6               	movwf	postinc1,c
  5279  01028E  0E01               	movlw	1
  5280  010290  6EE6               	movwf	postinc1,c
  5281  010292  EC1C  F005         	call	_update_hist_data	;wreg free
  5282                           
  5283                           ;main.c: 279:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  5284  010296  0ECA               	movlw	low STR_10
  5285  010298  6EE6               	movwf	postinc1,c
  5286  01029A  0EFE               	movlw	high STR_10
  5287  01029C  6EE6               	movwf	postinc1,c
  5288  01029E  0E00               	movlw	0
  5289  0102A0  6EE6               	movwf	postinc1,c
  5290  0102A2  0E02               	movlw	2
  5291  0102A4  6EE6               	movwf	postinc1,c
  5292  0102A6  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5293  0102AA  0060  F007  FFE6   	movff	btemp,postinc1
  5294  0102B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5295  0102B6  0E04               	movlw	4
  5296  0102B8  6EE6               	movwf	postinc1,c
  5297  0102BA  ECDB  F0F7         	call	_sprintf	;wreg free
  5298                           
  5299                           ;main.c: 280:    } else {
  5300  0102BE  D014               	goto	l1455
  5301  0102C0                     l17127:
  5302                           
  5303                           ;main.c: 281:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  5304  0102C0  0E1E               	movlw	low STR_11
  5305  0102C2  6EE6               	movwf	postinc1,c
  5306  0102C4  0EFF               	movlw	high STR_11
  5307  0102C6  6EE6               	movwf	postinc1,c
  5308  0102C8  0E00               	movlw	0
  5309  0102CA  6EE6               	movwf	postinc1,c
  5310  0102CC  0E02               	movlw	2
  5311  0102CE  6EE6               	movwf	postinc1,c
  5312  0102D0  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5313  0102D4  0060  F007  FFE6   	movff	btemp,postinc1
  5314  0102DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5315  0102E0  0E04               	movlw	4
  5316  0102E2  6EE6               	movwf	postinc1,c
  5317  0102E4  ECDB  F0F7         	call	_sprintf	;wreg free
  5318  0102E8                     l1455:
  5319                           
  5320                           ; BSR set to: 0
  5321                           ;main.c: 283:    update_lcd(0);
  5322  0102E8  0E00               	movlw	0
  5323  0102EA  6EE6               	movwf	postinc1,c
  5324  0102EC  EC8D  F0F0         	call	_update_lcd	;wreg free
  5325                           
  5326                           ;main.c: 284:    WaitMs(2000);
  5327  0102F0  0ED0               	movlw	208
  5328  0102F2  6EE6               	movwf	postinc1,c
  5329  0102F4  0E07               	movlw	7
  5330  0102F6  6EE6               	movwf	postinc1,c
  5331  0102F8  EC74  F00B         	call	_WaitMs	;wreg free
  5332                           
  5333                           ;main.c: 286:    i_ror = 1;
  5334                           ;stkvar	_i_ror @ sp[(-17)+16]
  5335  0102FC  0EFF               	movlw	-1
  5336  0102FE  6AE3               	clrf	plusw1,c
  5337  010300  2AE3               	incf	plusw1,f,c
  5338  010302                     l17133:
  5339                           
  5340                           ;main.c: 288:     calc_ror_data();
  5341  010302  EC83  F0EB         	call	_calc_ror_data	;wreg free
  5342                           
  5343                           ;main.c: 289:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  5344  010306  0E00               	movlw	0
  5345  010308  6EE6               	movwf	postinc1,c
  5346  01030A  0E04               	movlw	4
  5347  01030C  6EE6               	movwf	postinc1,c
  5348  01030E  EC22  F0C2         	call	_conv_raw_result	;wreg free
  5349  010312  0060  F007  FFE6   	movff	btemp,postinc1
  5350  010318  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5351  01031E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5352  010324  0060  F013  FFE6   	movff	btemp+3,postinc1
  5353  01032A  0E8F               	movlw	low STR_12
  5354  01032C  6EE6               	movwf	postinc1,c
  5355  01032E  0EFD               	movlw	high STR_12
  5356  010330  6EE6               	movwf	postinc1,c
  5357  010332  0E00               	movlw	0
  5358  010334  6EE6               	movwf	postinc1,c
  5359  010336  0E01               	movlw	1
  5360  010338  6EE6               	movwf	postinc1,c
  5361  01033A  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5362  01033E  0060  F007  FFE6   	movff	btemp,postinc1
  5363  010344  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5364  01034A  0E08               	movlw	8
  5365  01034C  6EE6               	movwf	postinc1,c
  5366  01034E  ECDB  F0F7         	call	_sprintf	;wreg free
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;main.c: 290:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  5370  010352  EE22  F16B         	lfsr	2,_C+108	;volatile
  5371  010356  006F FF7B FFE6     	movff	postinc2,postinc1
  5372  01035C  006F FF7B FFE6     	movff	postinc2,postinc1
  5373  010362  006F FF7B FFE6     	movff	postinc2,postinc1
  5374  010368  006F FF7B FFE6     	movff	postinc2,postinc1
  5375                           
  5376                           ;stkvar	_i_ror @ sp[(-21)+16]
  5377  01036E  0EFB               	movlw	-5
  5378  010370  50E3               	movf	plusw1,w,c
  5379  010372  6EE6               	movwf	postinc1,c
  5380  010374  0E00               	movlw	0
  5381  010376  6EE6               	movwf	postinc1,c
  5382  010378  0E00               	movlw	0
  5383  01037A  6EE6               	movwf	postinc1,c
  5384  01037C  0E05               	movlw	5
  5385  01037E  6EE6               	movwf	postinc1,c
  5386  010380  ECBB  F0FA         	call	_spinners	;wreg free
  5387  010384  5001               	movf	btemp^0,w,c
  5388  010386  6EE6               	movwf	postinc1,c
  5389  010388  0E00               	movlw	0
  5390  01038A  6EE6               	movwf	postinc1,c
  5391  01038C  0E34               	movlw	low STR_13
  5392  01038E  6EE6               	movwf	postinc1,c
  5393  010390  0EFB               	movlw	high STR_13
  5394  010392  6EE6               	movwf	postinc1,c
  5395  010394  0E00               	movlw	0
  5396  010396  6EE6               	movwf	postinc1,c
  5397  010398  0E02               	movlw	2
  5398  01039A  6EE6               	movwf	postinc1,c
  5399  01039C  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5400  0103A0  0060  F007  FFE6   	movff	btemp,postinc1
  5401  0103A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5402  0103AC  0E0C               	movlw	12
  5403  0103AE  6EE6               	movwf	postinc1,c
  5404  0103B0  ECDB  F0F7         	call	_sprintf	;wreg free
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;main.c: 291:     update_lcd(0);
  5408  0103B4  0E00               	movlw	0
  5409  0103B6  6EE6               	movwf	postinc1,c
  5410  0103B8  EC8D  F0F0         	call	_update_lcd	;wreg free
  5411                           
  5412                           ;main.c: 292:     clear_adc_scan();
  5413  0103BC  EC24  F010         	call	_clear_adc_scan	;wreg free
  5414                           
  5415                           ; BSR set to: 2
  5416                           ;main.c: 293:     start_adc_scan();
  5417  0103C0  ECBF  F006         	call	_start_adc_scan	;wreg free
  5418                           
  5419                           ;main.c: 294:     WaitMs(2000);
  5420  0103C4  0ED0               	movlw	208
  5421  0103C6  6EE6               	movwf	postinc1,c
  5422  0103C8  0E07               	movlw	7
  5423  0103CA  6EE6               	movwf	postinc1,c
  5424  0103CC  EC74  F00B         	call	_WaitMs	;wreg free
  5425                           
  5426                           ;main.c: 297:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  5427                           ;stkvar	_i_ror @ sp[(-17)+16]
  5428  0103D0  0EFF               	movlw	-1
  5429  0103D2  006F FF8C  F00C    	movff	plusw1,btemp+11
  5430  0103D8  2A0C               	incf	(btemp+11)^0,f,c
  5431  0103DA  0060  F033  FFE3   	movff	btemp+11,plusw1
  5432  0103E0  060C               	decf	(btemp+11)^0,f,c
  5433  0103E2  0E1E               	movlw	30
  5434  0103E4  600C               	cpfslt	(btemp+11)^0,c
  5435  0103E6  D01A               	goto	u16730
  5436  0103E8  EE22  F16B         	lfsr	2,_C+108	;volatile
  5437  0103EC  006F FF7B FFE6     	movff	postinc2,postinc1
  5438  0103F2  006F FF7B FFE6     	movff	postinc2,postinc1
  5439  0103F8  006F FF7B FFE6     	movff	postinc2,postinc1
  5440  0103FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5441  010404  0E42               	movlw	66
  5442  010406  6EE6               	movwf	postinc1,c
  5443  010408  0E60               	movlw	96
  5444  01040A  6EE6               	movwf	postinc1,c
  5445  01040C  0E65               	movlw	101
  5446  01040E  6EE6               	movwf	postinc1,c
  5447  010410  0E3C               	movlw	60
  5448  010412  6EE6               	movwf	postinc1,c
  5449  010414  EC2B  F0EF         	call	___flge	;wreg free
  5450  010418  A001               	btfss	btemp& (0+255),0,c
  5451  01041A  D773               	goto	l17133
  5452  01041C                     u16730:
  5453                           
  5454                           ;main.c: 299:    static_soc();
  5455  01041C  ECB2  F007         	call	_static_soc	;wreg free
  5456                           
  5457                           ;main.c: 300:    init_bsoc();
  5458  010420  ECEE  F0DD         	call	_init_bsoc	;wreg free
  5459                           
  5460                           ;main.c: 301:    set_load_relay_one(0);
  5461  010424  0E00               	movlw	0
  5462  010426  6EE6               	movwf	postinc1,c
  5463  010428  ECAC  F00F         	call	_set_load_relay_one	;wreg free
  5464                           
  5465                           ;main.c: 302:    set_load_relay_two(0);
  5466  01042C  0E00               	movlw	0
  5467  01042E  6EE6               	movwf	postinc1,c
  5468  010430  ECA4  F00F         	call	_set_load_relay_two	;wreg free
  5469                           
  5470                           ;main.c: 303:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  5471  010434  EE22  F1B5         	lfsr	2,_C+182	;volatile
  5472  010438  006F FF78  F00B    	movff	postinc2,btemp+10
  5473  01043E  006F FF74  F00C    	movff	postdec2,btemp+11
  5474  010444  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5475  01044A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5476  010450  0E1B               	movlw	low STR_14
  5477  010452  6EE6               	movwf	postinc1,c
  5478  010454  0EFC               	movlw	high STR_14
  5479  010456  6EE6               	movwf	postinc1,c
  5480  010458  0E00               	movlw	0
  5481  01045A  6EE6               	movwf	postinc1,c
  5482  01045C  0E00               	movlw	0
  5483  01045E  6EE6               	movwf	postinc1,c
  5484  010460  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5485  010464  0060  F007  FFE6   	movff	btemp,postinc1
  5486  01046A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5487  010470  0E06               	movlw	6
  5488  010472  6EE6               	movwf	postinc1,c
  5489  010474  ECDB  F0F7         	call	_sprintf	;wreg free
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;main.c: 304:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  5493  010478  EE22  F18F         	lfsr	2,_C+144	;volatile
  5494  01047C  006F FF7B FFE6     	movff	postinc2,postinc1
  5495  010482  006F FF7B FFE6     	movff	postinc2,postinc1
  5496  010488  006F FF7B FFE6     	movff	postinc2,postinc1
  5497  01048E  006F FF7B FFE6     	movff	postinc2,postinc1
  5498  010494  0EF7               	movlw	low STR_15
  5499  010496  6EE6               	movwf	postinc1,c
  5500  010498  0EFC               	movlw	high STR_15
  5501  01049A  6EE6               	movwf	postinc1,c
  5502  01049C  0E00               	movlw	0
  5503  01049E  6EE6               	movwf	postinc1,c
  5504  0104A0  0E01               	movlw	1
  5505  0104A2  6EE6               	movwf	postinc1,c
  5506  0104A4  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5507  0104A8  0060  F007  FFE6   	movff	btemp,postinc1
  5508  0104AE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5509  0104B4  0E08               	movlw	8
  5510  0104B6  6EE6               	movwf	postinc1,c
  5511  0104B8  ECDB  F0F7         	call	_sprintf	;wreg free
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;main.c: 305:    sprintf(get_vterm_ptr(2, 0), "                     ");
  5515  0104BC  0EEF               	movlw	low STR_16
  5516  0104BE  6EE6               	movwf	postinc1,c
  5517  0104C0  0EFB               	movlw	high STR_16
  5518  0104C2  6EE6               	movwf	postinc1,c
  5519  0104C4  0E00               	movlw	0
  5520  0104C6  6EE6               	movwf	postinc1,c
  5521  0104C8  0E02               	movlw	2
  5522  0104CA  6EE6               	movwf	postinc1,c
  5523  0104CC  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5524  0104D0  0060  F007  FFE6   	movff	btemp,postinc1
  5525  0104D6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5526  0104DC  0E04               	movlw	4
  5527  0104DE  6EE6               	movwf	postinc1,c
  5528  0104E0  ECDB  F0F7         	call	_sprintf	;wreg free
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;main.c: 306:    update_lcd(0);
  5532  0104E4  0E00               	movlw	0
  5533  0104E6  6EE6               	movwf	postinc1,c
  5534  0104E8  EC8D  F0F0         	call	_update_lcd	;wreg free
  5535                           
  5536                           ;main.c: 307:    WaitMs(2000);
  5537  0104EC  0ED0               	movlw	208
  5538  0104EE  6EE6               	movwf	postinc1,c
  5539  0104F0  0E07               	movlw	7
  5540  0104F2  6EE6               	movwf	postinc1,c
  5541  0104F4  EC74  F00B         	call	_WaitMs	;wreg free
  5542                           
  5543                           ;main.c: 308:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  5544  0104F8  0EE3               	movlw	low STR_17
  5545  0104FA  6EE6               	movwf	postinc1,c
  5546  0104FC  0EFD               	movlw	high STR_17
  5547  0104FE  6EE6               	movwf	postinc1,c
  5548  010500  0E00               	movlw	0
  5549  010502  6EE6               	movwf	postinc1,c
  5550  010504  0E00               	movlw	0
  5551  010506  6EE6               	movwf	postinc1,c
  5552  010508  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5553  01050C  0060  F007  FFE6   	movff	btemp,postinc1
  5554  010512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5555  010518  0E04               	movlw	4
  5556  01051A  6EE6               	movwf	postinc1,c
  5557  01051C  ECDB  F0F7         	call	_sprintf	;wreg free
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;main.c: 309:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  5561  010520  0EF8               	movlw	low STR_18
  5562  010522  6EE6               	movwf	postinc1,c
  5563  010524  0EFD               	movlw	high STR_18
  5564  010526  6EE6               	movwf	postinc1,c
  5565  010528  0E00               	movlw	0
  5566  01052A  6EE6               	movwf	postinc1,c
  5567  01052C  0E01               	movlw	1
  5568  01052E  6EE6               	movwf	postinc1,c
  5569  010530  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5570  010534  0060  F007  FFE6   	movff	btemp,postinc1
  5571  01053A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5572  010540  0E04               	movlw	4
  5573  010542  6EE6               	movwf	postinc1,c
  5574  010544  ECDB  F0F7         	call	_sprintf	;wreg free
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;main.c: 310:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  5578  010548  0EDF               	movlw	low STR_19
  5579  01054A  6EE6               	movwf	postinc1,c
  5580  01054C  0EFE               	movlw	high STR_19
  5581  01054E  6EE6               	movwf	postinc1,c
  5582  010550  0E00               	movlw	0
  5583  010552  6EE6               	movwf	postinc1,c
  5584  010554  0E02               	movlw	2
  5585  010556  6EE6               	movwf	postinc1,c
  5586  010558  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5587  01055C  0060  F007  FFE6   	movff	btemp,postinc1
  5588  010562  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5589  010568  0E04               	movlw	4
  5590  01056A  6EE6               	movwf	postinc1,c
  5591  01056C  ECDB  F0F7         	call	_sprintf	;wreg free
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;main.c: 311:    update_lcd(0);
  5595  010570  0E00               	movlw	0
  5596  010572  6EE6               	movwf	postinc1,c
  5597  010574  EC8D  F0F0         	call	_update_lcd	;wreg free
  5598                           
  5599                           ;main.c: 312:    uint16_t i_esr = 1;
  5600  010578  0E01               	movlw	1
  5601  01057A  6E0B               	movwf	(btemp+10)^0,c
  5602  01057C  0E00               	movlw	0
  5603  01057E  6E0C               	movwf	(btemp+11)^0,c
  5604                           
  5605                           ;stkvar	_i_esr @ sp[(-17)+8]
  5606  010580  0EF7               	movlw	-9
  5607  010582  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5608  010588  0EF8               	movlw	-8
  5609  01058A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5610                           
  5611                           ;main.c: 314:    float esr_temp;;main.c: 315:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5612  010590  D06D               	goto	l17193
  5613  010592                     l17181:
  5614                           
  5615                           ;main.c: 316:     WaitMs(110);
  5616  010592  0E6E               	movlw	110
  5617  010594  6EE6               	movwf	postinc1,c
  5618  010596  0E00               	movlw	0
  5619  010598  6EE6               	movwf	postinc1,c
  5620  01059A  EC74  F00B         	call	_WaitMs	;wreg free
  5621                           
  5622                           ;main.c: 317:     shape = (uint8_t) fabsf(esr_temp);
  5623                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5624  01059E  0EF3               	movlw	-13
  5625  0105A0  006F FF8F FFE6     	movff	plusw1,postinc1
  5626  0105A6  006F FF8F FFE6     	movff	plusw1,postinc1
  5627  0105AC  006F FF8F FFE6     	movff	plusw1,postinc1
  5628  0105B2  006F FF8F FFE6     	movff	plusw1,postinc1
  5629  0105B8  ECB9  F0FE         	call	_fabsf	;wreg free
  5630  0105BC  0060  F007  FFE6   	movff	btemp,postinc1
  5631  0105C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5632  0105C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5633  0105CE  0060  F013  FFE6   	movff	btemp+3,postinc1
  5634  0105D4  ECBF  F0ED         	call	___fltol	;wreg free
  5635  0105D8  0060  F004  F00C   	movff	btemp,btemp+11
  5636                           
  5637                           ;stkvar	_shape @ sp[(-17)+10]
  5638  0105DE  0EF9               	movlw	-7
  5639  0105E0  0060  F033  FFE3   	movff	btemp+11,plusw1
  5640                           
  5641                           ;main.c: 318:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  5642  0105E6  0E00               	movlw	0
  5643  0105E8  6EE6               	movwf	postinc1,c
  5644                           
  5645                           ;stkvar	_shape @ sp[(-18)+10]
  5646  0105EA  0EF8               	movlw	-8
  5647  0105EC  50E3               	movf	plusw1,w,c
  5648  0105EE  6EE6               	movwf	postinc1,c
  5649  0105F0  ECBB  F0FA         	call	_spinners	;wreg free
  5650  0105F4  5001               	movf	btemp^0,w,c
  5651  0105F6  6EE6               	movwf	postinc1,c
  5652  0105F8  0E00               	movlw	0
  5653  0105FA  6EE6               	movwf	postinc1,c
  5654  0105FC  0E00               	movlw	0
  5655  0105FE  6EE6               	movwf	postinc1,c
  5656  010600  0E00               	movlw	0
  5657  010602  6EE6               	movwf	postinc1,c
  5658  010604  ECBB  F0FA         	call	_spinners	;wreg free
  5659  010608  5001               	movf	btemp^0,w,c
  5660  01060A  6EE6               	movwf	postinc1,c
  5661  01060C  0E00               	movlw	0
  5662  01060E  6EE6               	movwf	postinc1,c
  5663  010610  0E8B               	movlw	low STR_20
  5664  010612  6EE6               	movwf	postinc1,c
  5665  010614  0EFE               	movlw	high STR_20
  5666  010616  6EE6               	movwf	postinc1,c
  5667  010618  0E00               	movlw	0
  5668  01061A  6EE6               	movwf	postinc1,c
  5669  01061C  0E02               	movlw	2
  5670  01061E  6EE6               	movwf	postinc1,c
  5671  010620  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5672  010624  0060  F007  FFE6   	movff	btemp,postinc1
  5673  01062A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5674  010630  0E08               	movlw	8
  5675  010632  6EE6               	movwf	postinc1,c
  5676  010634  ECDB  F0F7         	call	_sprintf	;wreg free
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;main.c: 319:     update_lcd(0);
  5680  010638  0E00               	movlw	0
  5681  01063A  6EE6               	movwf	postinc1,c
  5682  01063C  EC8D  F0F0         	call	_update_lcd	;wreg free
  5683                           
  5684                           ;main.c: 321:     if (i_esr++ > 512)
  5685                           ;stkvar	_i_esr @ sp[(-17)+8]
  5686  010640  50E1               	movf	fsr1l,w,c
  5687  010642  0FF7               	addlw	-9
  5688  010644  6ED9               	movwf	fsr2l,c
  5689  010646  50E2               	movf	fsr1h,w,c
  5690  010648  6EDA               	movwf	fsr2h,c
  5691  01064A  0EFF               	movlw	255
  5692  01064C  22DA               	addwfc	fsr2h,f,c
  5693  01064E  006F FF7C  F00B    	movff	indf2,btemp+10
  5694  010654  0E01               	movlw	1
  5695  010656  26DE               	addwf	postinc2,f,c
  5696  010658  006F FF7C  F00C    	movff	indf2,btemp+11
  5697  01065E  0E00               	movlw	0
  5698  010660  22DD               	addwfc	postdec2,f,c
  5699  010662  040B               	decf	(btemp+10)^0,w,c
  5700  010664  0E02               	movlw	2
  5701  010666  580C               	subwfb	(btemp+11)^0,w,c
  5702  010668  B0D8               	btfsc	status,0,c
  5703  01066A  D017               	goto	u16750
  5704  01066C                     l17193:
  5705                           
  5706                           ;main.c: 315:    while ((esr_temp = esr_check(0)) < 0.0) {
  5707  01066C  0E00               	movlw	0
  5708  01066E  6EE6               	movwf	postinc1,c
  5709  010670  ECF6  F0D4         	call	_esr_check	;wreg free
  5710                           
  5711                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5712  010674  0EF3               	movlw	-13
  5713  010676  0060  F007  FFE3   	movff	btemp,plusw1
  5714  01067C  0EF4               	movlw	-12
  5715  01067E  0060  F00B  FFE3   	movff	btemp+1,plusw1
  5716  010684  0EF5               	movlw	-11
  5717  010686  0060  F00F  FFE3   	movff	btemp+2,plusw1
  5718  01068C  0EF6               	movlw	-10
  5719  01068E  0060  F013  FFE3   	movff	btemp+3,plusw1
  5720  010694  0EF6               	movlw	-10
  5721  010696  BEE3               	btfsc	plusw1,7,c
  5722  010698  D77C               	goto	l17181
  5723  01069A                     u16750:
  5724                           
  5725                           ;main.c: 324:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5726  01069A  EE22  F187         	lfsr	2,_C+136	;volatile
  5727  01069E  006F FF7B FFE6     	movff	postinc2,postinc1
  5728  0106A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5729  0106AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5730  0106B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5731  0106B6  0E05               	movlw	low STR_21
  5732  0106B8  6EE6               	movwf	postinc1,c
  5733  0106BA  0EFC               	movlw	high STR_21
  5734  0106BC  6EE6               	movwf	postinc1,c
  5735  0106BE  0E00               	movlw	0
  5736  0106C0  6EE6               	movwf	postinc1,c
  5737  0106C2  0E00               	movlw	0
  5738  0106C4  6EE6               	movwf	postinc1,c
  5739  0106C6  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5740  0106CA  0060  F007  FFE6   	movff	btemp,postinc1
  5741  0106D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5742  0106D6  0E08               	movlw	8
  5743  0106D8  6EE6               	movwf	postinc1,c
  5744  0106DA  ECDB  F0F7         	call	_sprintf	;wreg free
  5745                           
  5746                           ;main.c: 325:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5747  0106DE  EE22  F229         	lfsr	2,_C+298	;volatile
  5748  0106E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5749  0106E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5750  0106EE  006F FF7B FFE6     	movff	postinc2,postinc1
  5751  0106F4  006F FF7B FFE6     	movff	postinc2,postinc1
  5752  0106FA  EE22  F235         	lfsr	2,_C+310	;volatile
  5753  0106FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5754  010704  006F FF7B FFE6     	movff	postinc2,postinc1
  5755  01070A  006F FF7B FFE6     	movff	postinc2,postinc1
  5756  010710  006F FF7B FFE6     	movff	postinc2,postinc1
  5757  010716  0E00               	movlw	low STR_22
  5758  010718  6EE6               	movwf	postinc1,c
  5759  01071A  0EFB               	movlw	high STR_22
  5760  01071C  6EE6               	movwf	postinc1,c
  5761  01071E  0E00               	movlw	0
  5762  010720  6EE6               	movwf	postinc1,c
  5763  010722  0E01               	movlw	1
  5764  010724  6EE6               	movwf	postinc1,c
  5765  010726  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5766  01072A  0060  F007  FFE6   	movff	btemp,postinc1
  5767  010730  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5768  010736  0E0C               	movlw	12
  5769  010738  6EE6               	movwf	postinc1,c
  5770  01073A  ECDB  F0F7         	call	_sprintf	;wreg free
  5771                           
  5772                           ;main.c: 326:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5773  01073E  EE22  F22D         	lfsr	2,_C+302	;volatile
  5774  010742  006F FF7B FFE6     	movff	postinc2,postinc1
  5775  010748  006F FF7B FFE6     	movff	postinc2,postinc1
  5776  01074E  006F FF7B FFE6     	movff	postinc2,postinc1
  5777  010754  006F FF7B FFE6     	movff	postinc2,postinc1
  5778  01075A  EE22  F239         	lfsr	2,_C+314	;volatile
  5779  01075E  006F FF7B FFE6     	movff	postinc2,postinc1
  5780  010764  006F FF7B FFE6     	movff	postinc2,postinc1
  5781  01076A  006F FF7B FFE6     	movff	postinc2,postinc1
  5782  010770  006F FF7B FFE6     	movff	postinc2,postinc1
  5783  010776  0E1A               	movlw	low STR_23
  5784  010778  6EE6               	movwf	postinc1,c
  5785  01077A  0EFB               	movlw	high STR_23
  5786  01077C  6EE6               	movwf	postinc1,c
  5787  01077E  0E00               	movlw	0
  5788  010780  6EE6               	movwf	postinc1,c
  5789  010782  0E02               	movlw	2
  5790  010784  6EE6               	movwf	postinc1,c
  5791  010786  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  5792  01078A  0060  F007  FFE6   	movff	btemp,postinc1
  5793  010790  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5794  010796  0E0C               	movlw	12
  5795  010798  6EE6               	movwf	postinc1,c
  5796  01079A  ECDB  F0F7         	call	_sprintf	;wreg free
  5797                           
  5798                           ;main.c: 327:    update_lcd(0);
  5799  01079E  0E00               	movlw	0
  5800  0107A0  6EE6               	movwf	postinc1,c
  5801  0107A2  EC8D  F0F0         	call	_update_lcd	;wreg free
  5802                           
  5803                           ;main.c: 328:    WaitMs(4000);
  5804  0107A6  0EA0               	movlw	160
  5805  0107A8  6EE6               	movwf	postinc1,c
  5806  0107AA  0E0F               	movlw	15
  5807  0107AC  6EE6               	movwf	postinc1,c
  5808  0107AE  EC74  F00B         	call	_WaitMs	;wreg free
  5809                           
  5810                           ;main.c: 329:    V.sensor_set = get_switch(SCALIB);
  5811  0107B2  0E04               	movlw	4
  5812  0107B4  6EE6               	movwf	postinc1,c
  5813  0107B6  EC87  F00C         	call	_get_switch	;wreg free
  5814  0107BA  5001               	movf	btemp^0,w,c
  5815  0107BC  B4D8               	btfsc	status,2,c
  5816  0107BE  D002               	goto	u16760
  5817  0107C0  0E01               	movlw	1
  5818  0107C2  D001               	goto	u16770
  5819  0107C4                     u16760:
  5820  0107C4  0E00               	movlw	0
  5821  0107C6                     u16770:
  5822  0107C6  0101               	movlb	1	; () banked
  5823  0107C8  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  5824                           
  5825                           ; BSR set to: 1
  5826                           ;main.c: 330:    WaitMs(1000);
  5827  0107CA  0EE8               	movlw	232
  5828  0107CC  6EE6               	movwf	postinc1,c
  5829  0107CE  0E03               	movlw	3
  5830  0107D0  6EE6               	movwf	postinc1,c
  5831  0107D2  EC74  F00B         	call	_WaitMs	;wreg free
  5832                           
  5833                           ;main.c: 331:    if (V.sensor_set && get_switch(SCALIB)) {
  5834  0107D6  0101               	movlb	1	; () banked
  5835  0107D8  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
  5836  0107DA  B4D8               	btfsc	status,2,c
  5837  0107DC  D00F               	goto	l17211
  5838                           
  5839                           ; BSR set to: 1
  5840  0107DE  0E04               	movlw	4
  5841  0107E0  6EE6               	movwf	postinc1,c
  5842  0107E2  EC87  F00C         	call	_get_switch	;wreg free
  5843  0107E6  5001               	movf	btemp^0,w,c
  5844  0107E8  B4D8               	btfsc	status,2,c
  5845  0107EA  D008               	goto	l17211
  5846                           
  5847                           ;main.c: 332:     current_sensor_cal();
  5848  0107EC  ECC0  F0C6         	call	_current_sensor_cal	;wreg free
  5849                           
  5850                           ;main.c: 333:     WaitMs(4000);
  5851  0107F0  0EA0               	movlw	160
  5852  0107F2  6EE6               	movwf	postinc1,c
  5853  0107F4  0E0F               	movlw	15
  5854  0107F6  6EE6               	movwf	postinc1,c
  5855  0107F8  EC74  F00B         	call	_WaitMs	;wreg free
  5856  0107FC                     l17211:
  5857                           
  5858                           ;main.c: 335:    V.sensor_set = 0;
  5859  0107FC  0101               	movlb	1	; () banked
  5860  0107FE  6BB5               	clrf	(_V+174)& (0+255),b	;volatile
  5861                           
  5862                           ; BSR set to: 1
  5863                           ;main.c: 336:    V.system_stable = 1;
  5864  010800  0E01               	movlw	1
  5865  010802  6FB6               	movwf	(_V+175)& (0+255),b	;volatile
  5866                           
  5867                           ;main.c: 337:    break;
  5868  010804  D01C               	goto	l17219
  5869  010806                     l1468:
  5870                           
  5871                           ; BSR set to: 1
  5872                           ;main.c: 343:    P.SYSTEM_STABLE = 1;
  5873  010806  0100               	movlb	0	; () banked
  5874  010808  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  5875                           
  5876                           ;main.c: 344:    break;
  5877  01080A  D019               	goto	l17219
  5878  01080C                     l1470:
  5879                           
  5880                           ; BSR set to: 1
  5881                           ;main.c: 347:    V.ui_state = UI_STATE_INIT;
  5882  01080C  6B07               	clrf	_V& (0+255),b	;volatile
  5883                           
  5884                           ;main.c: 348:    break;
  5885  01080E  D017               	goto	l17219
  5886  010810                     l17217:
  5887  010810  0101               	movlb	1	; () banked
  5888  010812  5107               	movf	_V& (0+255),w,b	;volatile
  5889  010814  6E0B               	movwf	(btemp+10)^0,c
  5890  010816  6A0C               	clrf	(btemp+11)^0,c
  5891                           
  5892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5893                           ; Switch size 1, requested type "simple"
  5894                           ; Number of cases is 1, Range of values is 0 to 0
  5895                           ; switch strategies available:
  5896                           ; Name         Instructions Cycles
  5897                           ; simple_byte            4     3 (average)
  5898                           ;	Chosen strategy is simple_byte
  5899  010818  500C               	movf	(btemp+11)^0,w,c
  5900  01081A  0A00               	xorlw	0	; case 0
  5901  01081C  A4D8               	btfss	status,2,c
  5902  01081E  D7F6               	goto	l1470
  5903                           
  5904                           ; BSR set to: 1
  5905                           ; Switch size 1, requested type "simple"
  5906                           ; Number of cases is 5, Range of values is 0 to 5
  5907                           ; switch strategies available:
  5908                           ; Name         Instructions Cycles
  5909                           ; simple_byte           16     9 (average)
  5910                           ;	Chosen strategy is simple_byte
  5911  010820  500B               	movf	(btemp+10)^0,w,c
  5912  010822  0A00               	xorlw	0	; case 0
  5913  010824  B4D8               	btfsc	status,2,c
  5914  010826  D428               	goto	l17065
  5915  010828  0A01               	xorlw	1	; case 1
  5916  01082A  B4D8               	btfsc	status,2,c
  5917  01082C  D008               	goto	l17219
  5918  01082E  0A02               	xorlw	2	; case 3
  5919  010830  B4D8               	btfsc	status,2,c
  5920  010832  D005               	goto	l17219
  5921  010834  0A07               	xorlw	7	; case 4
  5922  010836  B4D8               	btfsc	status,2,c
  5923  010838  D7E6               	goto	l1468
  5924  01083A  0A01               	xorlw	1	; case 5
  5925  01083C  D7E7               	goto	l1470
  5926  01083E                     l17219:
  5927                           
  5928                           ;main.c: 351:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5929  01083E  0E01               	movlw	1
  5930  010840  6EE6               	movwf	postinc1,c
  5931  010842  ECF3  F00C         	call	_TimerDone	;wreg free
  5932  010846  5001               	movf	btemp^0,w,c
  5933  010848  B4D8               	btfsc	status,2,c
  5934  01084A  D013               	goto	l17231
  5935  01084C  EC0D  F010         	call	_check_adc_scan	;wreg free
  5936  010850  5001               	movf	btemp^0,w,c
  5937  010852  B4D8               	btfsc	status,2,c
  5938  010854  D00E               	goto	l17231
  5939                           
  5940                           ;main.c: 355:    convert_adc_data();
  5941  010856  EC02  F0FE         	call	_convert_adc_data	;wreg free
  5942                           
  5943                           ;main.c: 359:    clear_adc_scan();
  5944  01085A  EC24  F010         	call	_clear_adc_scan	;wreg free
  5945                           
  5946                           ; BSR set to: 2
  5947                           ;main.c: 360:    start_adc_scan();
  5948  01085E  ECBF  F006         	call	_start_adc_scan	;wreg free
  5949                           
  5950                           ;main.c: 361:    StartTimer(TMR_ADC, 200);
  5951  010862  0EC8               	movlw	200
  5952  010864  6EE6               	movwf	postinc1,c
  5953  010866  0E00               	movlw	0
  5954  010868  6EE6               	movwf	postinc1,c
  5955  01086A  0E01               	movlw	1
  5956  01086C  6EE6               	movwf	postinc1,c
  5957  01086E  EC82  F00A         	call	_StartTimer	;wreg free
  5958  010872                     l17231:
  5959                           
  5960                           ;main.c: 368:   if (TimerDone(TMR_DISPLAY)) {
  5961                           
  5962                           ;main.c: 364:   if (V.ticks) {
  5963  010872  0E0A               	movlw	10
  5964  010874  6EE6               	movwf	postinc1,c
  5965  010876  ECF3  F00C         	call	_TimerDone	;wreg free
  5966  01087A  5001               	movf	btemp^0,w,c
  5967  01087C  B4D8               	btfsc	status,2,c
  5968  01087E  EF5C  F089         	goto	l17337
  5969                           
  5970                           ;main.c: 369:    if (TimerDone(TMR_HELPDIS)) {
  5971  010882  0E09               	movlw	9
  5972  010884  6EE6               	movwf	postinc1,c
  5973  010886  ECF3  F00C         	call	_TimerDone	;wreg free
  5974  01088A  5001               	movf	btemp^0,w,c
  5975  01088C  B4D8               	btfsc	status,2,c
  5976  01088E  D004               	goto	l17239
  5977                           
  5978                           ;main.c: 370:     set_display_info(DIS_STR);
  5979  010890  0E00               	movlw	0
  5980  010892  6EE6               	movwf	postinc1,c
  5981  010894  EC19  F00F         	call	_set_display_info	;wreg free
  5982  010898                     l17239:
  5983                           
  5984                           ;main.c: 372:    calc_model_data();
  5985  010898  ECFA  F0C8         	call	_calc_model_data	;wreg free
  5986                           
  5987                           ; BSR set to: 57
  5988                           ;main.c: 373:    if (C.dupdate) {
  5989  01089C  EE22  F23E         	lfsr	2,_C+319	;volatile
  5990  0108A0  50DF               	movf	indf2,w,c
  5991  0108A2  B4D8               	btfsc	status,2,c
  5992  0108A4  D070               	goto	l17263
  5993                           
  5994                           ; BSR set to: 57
  5995                           ;main.c: 374:     C.dupdate = 0;
  5996  0108A6  0E00               	movlw	0
  5997  0108A8  006F FFA0  FA3E    	movff	wreg,_C+319	;volatile
  5998                           
  5999                           ; BSR set to: 57
  6000                           ;main.c: 375:     load_hist_data();
  6001  0108AE  EC43  F00F         	call	_load_hist_data	;wreg free
  6002                           
  6003                           ; BSR set to: 57
  6004                           ;main.c: 376:     update_hist_data(0, &C.hist[0]);
  6005  0108B2  0EB8               	movlw	low (_C+185)
  6006  0108B4  6EE6               	movwf	postinc1,c
  6007  0108B6  0E09               	movlw	high (_C+185)
  6008  0108B8  6EE6               	movwf	postinc1,c
  6009  0108BA  0E00               	movlw	0
  6010  0108BC  6EE6               	movwf	postinc1,c
  6011  0108BE  EC1C  F005         	call	_update_hist_data	;wreg free
  6012                           
  6013                           ;main.c: 377:     write_cal_data();
  6014  0108C2  ECEA  F0F1         	call	_write_cal_data	;wreg free
  6015                           
  6016                           ;main.c: 378:     sprintf(get_vterm_ptr(0, 0), "History Data  Saved ");
  6017  0108C6  0E33               	movlw	low STR_24
  6018  0108C8  6EE6               	movwf	postinc1,c
  6019  0108CA  0EFF               	movlw	high STR_24
  6020  0108CC  6EE6               	movwf	postinc1,c
  6021  0108CE  0E00               	movlw	0
  6022  0108D0  6EE6               	movwf	postinc1,c
  6023  0108D2  0E00               	movlw	0
  6024  0108D4  6EE6               	movwf	postinc1,c
  6025  0108D6  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6026  0108DA  0060  F007  FFE6   	movff	btemp,postinc1
  6027  0108E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6028  0108E6  0E04               	movlw	4
  6029  0108E8  6EE6               	movwf	postinc1,c
  6030  0108EA  ECDB  F0F7         	call	_sprintf	;wreg free
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;main.c: 379:     sprintf(get_vterm_ptr(1, 0), "To EEPROM           ");
  6034  0108EE  0ECE               	movlw	low STR_25
  6035  0108F0  6EE6               	movwf	postinc1,c
  6036  0108F2  0EFD               	movlw	high STR_25
  6037  0108F4  6EE6               	movwf	postinc1,c
  6038  0108F6  0E00               	movlw	0
  6039  0108F8  6EE6               	movwf	postinc1,c
  6040  0108FA  0E01               	movlw	1
  6041  0108FC  6EE6               	movwf	postinc1,c
  6042  0108FE  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6043  010902  0060  F007  FFE6   	movff	btemp,postinc1
  6044  010908  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6045  01090E  0E04               	movlw	4
  6046  010910  6EE6               	movwf	postinc1,c
  6047  010912  ECDB  F0F7         	call	_sprintf	;wreg free
  6048                           
  6049                           ; BSR set to: 0
  6050                           ;main.c: 380:     sprintf(get_vterm_ptr(2, 0), " Time %lu, %lu      ", V.ticks, C.hist[0
      +                          ].updates);
  6051  010916  EE22  F1E9         	lfsr	2,_C+234	;volatile
  6052  01091A  006F FF7B FFE6     	movff	postinc2,postinc1
  6053  010920  006F FF7B FFE6     	movff	postinc2,postinc1
  6054  010926  006F FF7B FFE6     	movff	postinc2,postinc1
  6055  01092C  006F FF7B FFE6     	movff	postinc2,postinc1
  6056  010932  0060  F623  FFE6   	movff	_V+129,postinc1
  6057  010938  0060  F627  FFE6   	movff	_V+130,postinc1
  6058  01093E  0060  F62B  FFE6   	movff	_V+131,postinc1
  6059  010944  0060  F62F  FFE6   	movff	_V+132,postinc1
  6060  01094A  0EA0               	movlw	low STR_26
  6061  01094C  6EE6               	movwf	postinc1,c
  6062  01094E  0EFE               	movlw	high STR_26
  6063  010950  6EE6               	movwf	postinc1,c
  6064  010952  0E00               	movlw	0
  6065  010954  6EE6               	movwf	postinc1,c
  6066  010956  0E02               	movlw	2
  6067  010958  6EE6               	movwf	postinc1,c
  6068  01095A  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6069  01095E  0060  F007  FFE6   	movff	btemp,postinc1
  6070  010964  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6071  01096A  0E0C               	movlw	12
  6072  01096C  6EE6               	movwf	postinc1,c
  6073  01096E  ECDB  F0F7         	call	_sprintf	;wreg free
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;main.c: 381:     update_lcd(0);
  6077  010972  0E00               	movlw	0
  6078  010974  6EE6               	movwf	postinc1,c
  6079  010976  EC8D  F0F0         	call	_update_lcd	;wreg free
  6080                           
  6081                           ;main.c: 382:     WaitMs(2000);
  6082  01097A  0ED0               	movlw	208
  6083  01097C  6EE6               	movwf	postinc1,c
  6084  01097E  0E07               	movlw	7
  6085  010980  6EE6               	movwf	postinc1,c
  6086  010982  EC74  F00B         	call	_WaitMs	;wreg free
  6087  010986                     l17263:
  6088                           
  6089                           ;main.c: 390:     hid_display(&H);
  6090  010986  0EC7               	movlw	low _H
  6091  010988  6EE6               	movwf	postinc1,c
  6092  01098A  0E01               	movlw	high _H
  6093  01098C  6EE6               	movwf	postinc1,c
  6094  01098E  EC6C  F0E3         	call	_hid_display	;wreg free
  6095                           
  6096                           ;main.c: 391:     switch (H.hid_display) {
  6097  010992  EFF0  F088         	goto	l17307
  6098  010996                     l1479:
  6099                           
  6100                           ; BSR set to: 1
  6101                           ;main.c: 393:      V.calib = 0;
  6102  010996  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6103                           
  6104                           ; BSR set to: 1
  6105                           ;main.c: 394:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  6106  010998  EE22  F23D         	lfsr	2,_C+318	;volatile
  6107  01099C  50DF               	movf	indf2,w,c
  6108  01099E  A4D8               	btfss	status,2,c
  6109  0109A0  D002               	goto	l17269
  6110                           
  6111                           ; BSR set to: 1
  6112  0109A2  0E20               	movlw	32
  6113  0109A4  D001               	goto	L1
  6114  0109A6                     l17269:
  6115                           
  6116                           ; BSR set to: 1
  6117  0109A6  0E44               	movlw	68
  6118  0109A8                     L1:
  6119  0109A8  6E0B               	movwf	(btemp+10)^0,c
  6120  0109AA  0E00               	movlw	0
  6121  0109AC  6E0C               	movwf	(btemp+11)^0,c
  6122                           
  6123                           ;stkvar	_main$4026 @ sp[(-17)+2]
  6124  0109AE  0EF1               	movlw	-15
  6125  0109B0  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6126  0109B6  0EF2               	movlw	-14
  6127  0109B8  0060  F033  FFE3   	movff	btemp+11,plusw1
  6128                           
  6129                           ; BSR set to: 1
  6130  0109BE  EE22  F17B         	lfsr	2,_C+124	;volatile
  6131  0109C2  006F FF7B FFE6     	movff	postinc2,postinc1
  6132  0109C8  006F FF7B FFE6     	movff	postinc2,postinc1
  6133  0109CE  006F FF7B FFE6     	movff	postinc2,postinc1
  6134  0109D4  006F FF7B FFE6     	movff	postinc2,postinc1
  6135                           
  6136                           ;stkvar	_main$4026 @ sp[(-21)+2]
  6137  0109DA  0EED               	movlw	-19
  6138  0109DC  006F FF8F FFE6     	movff	plusw1,postinc1
  6139  0109E2  006F FF8F FFE6     	movff	plusw1,postinc1
  6140  0109E8  0EE1               	movlw	low STR_30
  6141  0109EA  6EE6               	movwf	postinc1,c
  6142  0109EC  0EFC               	movlw	high STR_30
  6143  0109EE  6EE6               	movwf	postinc1,c
  6144  0109F0  0E00               	movlw	0
  6145  0109F2  6EE6               	movwf	postinc1,c
  6146  0109F4  0E00               	movlw	0
  6147  0109F6  6EE6               	movwf	postinc1,c
  6148  0109F8  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6149  0109FC  0060  F007  FFE6   	movff	btemp,postinc1
  6150  010A02  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6151  010A08  0E0A               	movlw	10
  6152  010A0A  6EE6               	movwf	postinc1,c
  6153  010A0C  ECDB  F0F7         	call	_sprintf	;wreg free
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;main.c: 395:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  6157  010A10  EE22  F173         	lfsr	2,_C+116	;volatile
  6158  010A14  006F FF7B FFE6     	movff	postinc2,postinc1
  6159  010A1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6160  010A20  006F FF7B FFE6     	movff	postinc2,postinc1
  6161  010A26  006F FF7B FFE6     	movff	postinc2,postinc1
  6162  010A2C  0ECB               	movlw	low STR_31
  6163  010A2E  6EE6               	movwf	postinc1,c
  6164  010A30  0EFC               	movlw	high STR_31
  6165  010A32  6EE6               	movwf	postinc1,c
  6166  010A34  0E00               	movlw	0
  6167  010A36  6EE6               	movwf	postinc1,c
  6168  010A38  0E01               	movlw	1
  6169  010A3A  6EE6               	movwf	postinc1,c
  6170  010A3C  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6171  010A40  0060  F007  FFE6   	movff	btemp,postinc1
  6172  010A46  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6173  010A4C  0E08               	movlw	8
  6174  010A4E  6EE6               	movwf	postinc1,c
  6175  010A50  ECDB  F0F7         	call	_sprintf	;wreg free
  6176                           
  6177                           ; BSR set to: 0
  6178                           ;main.c: 396:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  6179  010A54  EE22  F177         	lfsr	2,_C+120	;volatile
  6180  010A58  006F FF7B FFE6     	movff	postinc2,postinc1
  6181  010A5E  006F FF7B FFE6     	movff	postinc2,postinc1
  6182  010A64  006F FF7B FFE6     	movff	postinc2,postinc1
  6183  010A6A  006F FF7B FFE6     	movff	postinc2,postinc1
  6184  010A70  0EB5               	movlw	low STR_32
  6185  010A72  6EE6               	movwf	postinc1,c
  6186  010A74  0EFC               	movlw	high STR_32
  6187  010A76  6EE6               	movwf	postinc1,c
  6188  010A78  0E00               	movlw	0
  6189  010A7A  6EE6               	movwf	postinc1,c
  6190  010A7C  0E02               	movlw	2
  6191  010A7E  6EE6               	movwf	postinc1,c
  6192  010A80  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6193  010A84  0060  F007  FFE6   	movff	btemp,postinc1
  6194  010A8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6195  010A90  0E08               	movlw	8
  6196  010A92  6EE6               	movwf	postinc1,c
  6197  010A94  ECDB  F0F7         	call	_sprintf	;wreg free
  6198                           
  6199                           ; BSR set to: 0
  6200                           ;main.c: 398:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  6201  010A98  EE22  F23D         	lfsr	2,_C+318	;volatile
  6202  010A9C  50DF               	movf	indf2,w,c
  6203  010A9E  A4D8               	btfss	status,2,c
  6204  010AA0  D002               	goto	l17281
  6205                           
  6206                           ; BSR set to: 0
  6207  010AA2  0E20               	movlw	32
  6208  010AA4  D001               	goto	L2
  6209  010AA6                     l17281:
  6210                           
  6211                           ; BSR set to: 0
  6212  010AA6  0E44               	movlw	68
  6213  010AA8                     L2:
  6214  010AA8  6E0B               	movwf	(btemp+10)^0,c
  6215  010AAA  0E00               	movlw	0
  6216  010AAC  6E0C               	movwf	(btemp+11)^0,c
  6217                           
  6218                           ;stkvar	_main$4030 @ sp[(-17)+0]
  6219  010AAE  0EEF               	movlw	-17
  6220  010AB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6221  010AB6  0EF0               	movlw	-16
  6222  010AB8  0060  F033  FFE3   	movff	btemp+11,plusw1
  6223                           
  6224                           ; BSR set to: 0
  6225  010ABE  EE22  F1A7         	lfsr	2,_C+168	;volatile
  6226  010AC2  006F FF7B FFE6     	movff	postinc2,postinc1
  6227  010AC8  006F FF7B FFE6     	movff	postinc2,postinc1
  6228  010ACE  006F FF7B FFE6     	movff	postinc2,postinc1
  6229  010AD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6230                           
  6231                           ;stkvar	_main$4030 @ sp[(-21)+0]
  6232  010ADA  0EEB               	movlw	-21
  6233  010ADC  006F FF8F FFE6     	movff	plusw1,postinc1
  6234  010AE2  006F FF8F FFE6     	movff	plusw1,postinc1
  6235  010AE8  0E9F               	movlw	low STR_33
  6236  010AEA  6EE6               	movwf	postinc1,c
  6237  010AEC  0EFC               	movlw	high STR_33
  6238  010AEE  6EE6               	movwf	postinc1,c
  6239  010AF0  0E01               	movlw	1
  6240  010AF2  6EE6               	movwf	postinc1,c
  6241  010AF4  0E00               	movlw	0
  6242  010AF6  6EE6               	movwf	postinc1,c
  6243  010AF8  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6244  010AFC  0060  F007  FFE6   	movff	btemp,postinc1
  6245  010B02  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6246  010B08  0E0A               	movlw	10
  6247  010B0A  6EE6               	movwf	postinc1,c
  6248  010B0C  ECDB  F0F7         	call	_sprintf	;wreg free
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;main.c: 399:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  6252  010B10  EE22  F1AF         	lfsr	2,_C+176	;volatile
  6253  010B14  006F FF7B FFE6     	movff	postinc2,postinc1
  6254  010B1A  006F FF7B FFE6     	movff	postinc2,postinc1
  6255  010B20  006F FF7B FFE6     	movff	postinc2,postinc1
  6256  010B26  006F FF7B FFE6     	movff	postinc2,postinc1
  6257  010B2C  0E89               	movlw	low STR_34
  6258  010B2E  6EE6               	movwf	postinc1,c
  6259  010B30  0EFC               	movlw	high STR_34
  6260  010B32  6EE6               	movwf	postinc1,c
  6261  010B34  0E01               	movlw	1
  6262  010B36  6EE6               	movwf	postinc1,c
  6263  010B38  0E01               	movlw	1
  6264  010B3A  6EE6               	movwf	postinc1,c
  6265  010B3C  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6266  010B40  0060  F007  FFE6   	movff	btemp,postinc1
  6267  010B46  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6268  010B4C  0E08               	movlw	8
  6269  010B4E  6EE6               	movwf	postinc1,c
  6270  010B50  ECDB  F0F7         	call	_sprintf	;wreg free
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;main.c: 400:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  6274  010B54  EE22  F1AB         	lfsr	2,_C+172	;volatile
  6275  010B58  006F FF7B FFE6     	movff	postinc2,postinc1
  6276  010B5E  006F FF7B FFE6     	movff	postinc2,postinc1
  6277  010B64  006F FF7B FFE6     	movff	postinc2,postinc1
  6278  010B6A  006F FF7B FFE6     	movff	postinc2,postinc1
  6279  010B70  0E73               	movlw	low STR_35
  6280  010B72  6EE6               	movwf	postinc1,c
  6281  010B74  0EFC               	movlw	high STR_35
  6282  010B76  6EE6               	movwf	postinc1,c
  6283  010B78  0E01               	movlw	1
  6284  010B7A  6EE6               	movwf	postinc1,c
  6285  010B7C  0E02               	movlw	2
  6286  010B7E  6EE6               	movwf	postinc1,c
  6287  010B80  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6288  010B84  0060  F007  FFE6   	movff	btemp,postinc1
  6289  010B8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6290  010B90  0E08               	movlw	8
  6291  010B92  6EE6               	movwf	postinc1,c
  6292  010B94  ECDB  F0F7         	call	_sprintf	;wreg free
  6293                           
  6294                           ;main.c: 401:      break;
  6295  010B98  D339               	goto	l17309
  6296  010B9A                     l1489:
  6297                           
  6298                           ; BSR set to: 1
  6299                           ;main.c: 403:      V.calib = 0;
  6300  010B9A  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6301                           
  6302                           ; BSR set to: 1
  6303                           ;main.c: 404:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  6304  010B9C  EE22  F103         	lfsr	2,_C+4	;volatile
  6305  010BA0  006F FF7B FFE6     	movff	postinc2,postinc1
  6306  010BA6  006F FF7B FFE6     	movff	postinc2,postinc1
  6307  010BAC  006F FF7B FFE6     	movff	postinc2,postinc1
  6308  010BB2  006F FF7B FFE6     	movff	postinc2,postinc1
  6309  010BB8  EE22  F113         	lfsr	2,_C+20	;volatile
  6310  010BBC  006F FF7B FFE6     	movff	postinc2,postinc1
  6311  010BC2  006F FF7B FFE6     	movff	postinc2,postinc1
  6312  010BC8  006F FF7B FFE6     	movff	postinc2,postinc1
  6313  010BCE  006F FF7B FFE6     	movff	postinc2,postinc1
  6314  010BD4  0E39               	movlw	low STR_36
  6315  010BD6  6EE6               	movwf	postinc1,c
  6316  010BD8  0EFD               	movlw	high STR_36
  6317  010BDA  6EE6               	movwf	postinc1,c
  6318  010BDC  0E00               	movlw	0
  6319  010BDE  6EE6               	movwf	postinc1,c
  6320  010BE0  0E00               	movlw	0
  6321  010BE2  6EE6               	movwf	postinc1,c
  6322  010BE4  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6323  010BE8  0060  F007  FFE6   	movff	btemp,postinc1
  6324  010BEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6325  010BF4  0E0C               	movlw	12
  6326  010BF6  6EE6               	movwf	postinc1,c
  6327  010BF8  ECDB  F0F7         	call	_sprintf	;wreg free
  6328                           
  6329                           ;main.c: 405:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  6330  010BFC  EE22  F0FF         	lfsr	2,_C
  6331  010C00  006F FF7B FFE6     	movff	postinc2,postinc1
  6332  010C06  006F FF7B FFE6     	movff	postinc2,postinc1
  6333  010C0C  006F FF7B FFE6     	movff	postinc2,postinc1
  6334  010C12  006F FF7B FFE6     	movff	postinc2,postinc1
  6335  010C18  EE22  F10F         	lfsr	2,_C+16	;volatile
  6336  010C1C  006F FF7B FFE6     	movff	postinc2,postinc1
  6337  010C22  006F FF7B FFE6     	movff	postinc2,postinc1
  6338  010C28  006F FF7B FFE6     	movff	postinc2,postinc1
  6339  010C2E  006F FF7B FFE6     	movff	postinc2,postinc1
  6340  010C34  0E0D               	movlw	low STR_37
  6341  010C36  6EE6               	movwf	postinc1,c
  6342  010C38  0EFD               	movlw	high STR_37
  6343  010C3A  6EE6               	movwf	postinc1,c
  6344  010C3C  0E00               	movlw	0
  6345  010C3E  6EE6               	movwf	postinc1,c
  6346  010C40  0E01               	movlw	1
  6347  010C42  6EE6               	movwf	postinc1,c
  6348  010C44  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6349  010C48  0060  F007  FFE6   	movff	btemp,postinc1
  6350  010C4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6351  010C54  0E0C               	movlw	12
  6352  010C56  6EE6               	movwf	postinc1,c
  6353  010C58  ECDB  F0F7         	call	_sprintf	;wreg free
  6354                           
  6355                           ;main.c: 406:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  6356  010C5C  EE22  F13F         	lfsr	2,_C+64	;volatile
  6357  010C60  006F FF7B FFE6     	movff	postinc2,postinc1
  6358  010C66  006F FF7B FFE6     	movff	postinc2,postinc1
  6359  010C6C  006F FF7B FFE6     	movff	postinc2,postinc1
  6360  010C72  006F FF7B FFE6     	movff	postinc2,postinc1
  6361  010C78  EE22  F107         	lfsr	2,_C+8	;volatile
  6362  010C7C  006F FF7B FFE6     	movff	postinc2,postinc1
  6363  010C82  006F FF7B FFE6     	movff	postinc2,postinc1
  6364  010C88  006F FF7B FFE6     	movff	postinc2,postinc1
  6365  010C8E  006F FF7B FFE6     	movff	postinc2,postinc1
  6366  010C94  0E23               	movlw	low STR_38
  6367  010C96  6EE6               	movwf	postinc1,c
  6368  010C98  0EFD               	movlw	high STR_38
  6369  010C9A  6EE6               	movwf	postinc1,c
  6370  010C9C  0E00               	movlw	0
  6371  010C9E  6EE6               	movwf	postinc1,c
  6372  010CA0  0E02               	movlw	2
  6373  010CA2  6EE6               	movwf	postinc1,c
  6374  010CA4  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6375  010CA8  0060  F007  FFE6   	movff	btemp,postinc1
  6376  010CAE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6377  010CB4  0E0C               	movlw	12
  6378  010CB6  6EE6               	movwf	postinc1,c
  6379  010CB8  ECDB  F0F7         	call	_sprintf	;wreg free
  6380                           
  6381                           ;main.c: 408:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  6382  010CBC  EE22  F19F         	lfsr	2,_C+160	;volatile
  6383  010CC0  006F FF7B FFE6     	movff	postinc2,postinc1
  6384  010CC6  006F FF7B FFE6     	movff	postinc2,postinc1
  6385  010CCC  006F FF7B FFE6     	movff	postinc2,postinc1
  6386  010CD2  006F FF7B FFE6     	movff	postinc2,postinc1
  6387  010CD8  0E31               	movlw	low STR_39
  6388  010CDA  6EE6               	movwf	postinc1,c
  6389  010CDC  0EFC               	movlw	high STR_39
  6390  010CDE  6EE6               	movwf	postinc1,c
  6391  010CE0  0E01               	movlw	1
  6392  010CE2  6EE6               	movwf	postinc1,c
  6393  010CE4  0E00               	movlw	0
  6394  010CE6  6EE6               	movwf	postinc1,c
  6395  010CE8  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6396  010CEC  0060  F007  FFE6   	movff	btemp,postinc1
  6397  010CF2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6398  010CF8  0E08               	movlw	8
  6399  010CFA  6EE6               	movwf	postinc1,c
  6400  010CFC  ECDB  F0F7         	call	_sprintf	;wreg free
  6401                           
  6402                           ;main.c: 409:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  6403  010D00  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6404  010D04  006F FF7B FFE6     	movff	postinc2,postinc1
  6405  010D0A  006F FF7B FFE6     	movff	postinc2,postinc1
  6406  010D10  006F FF7B FFE6     	movff	postinc2,postinc1
  6407  010D16  006F FF7B FFE6     	movff	postinc2,postinc1
  6408  010D1C  0E47               	movlw	low STR_40
  6409  010D1E  6EE6               	movwf	postinc1,c
  6410  010D20  0EFC               	movlw	high STR_40
  6411  010D22  6EE6               	movwf	postinc1,c
  6412  010D24  0E01               	movlw	1
  6413  010D26  6EE6               	movwf	postinc1,c
  6414  010D28  0E01               	movlw	1
  6415  010D2A  6EE6               	movwf	postinc1,c
  6416  010D2C  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6417  010D30  0060  F007  FFE6   	movff	btemp,postinc1
  6418  010D36  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6419  010D3C  0E08               	movlw	8
  6420  010D3E  6EE6               	movwf	postinc1,c
  6421  010D40  ECDB  F0F7         	call	_sprintf	;wreg free
  6422                           
  6423                           ;main.c: 410:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  6424  010D44  EE22  F1A3         	lfsr	2,_C+164	;volatile
  6425  010D48  006F FF7B FFE6     	movff	postinc2,postinc1
  6426  010D4E  006F FF7B FFE6     	movff	postinc2,postinc1
  6427  010D54  006F FF7B FFE6     	movff	postinc2,postinc1
  6428  010D5A  006F FF7B FFE6     	movff	postinc2,postinc1
  6429  010D60  EE22  F19F         	lfsr	2,_C+160	;volatile
  6430  010D64  006F FF7B FFE6     	movff	postinc2,postinc1
  6431  010D6A  006F FF7B FFE6     	movff	postinc2,postinc1
  6432  010D70  006F FF7B FFE6     	movff	postinc2,postinc1
  6433  010D76  006F FF7B FFE6     	movff	postinc2,postinc1
  6434  010D7C  EC9E  F0B5         	call	___fladd	;wreg free
  6435  010D80  0060  F007  FFE6   	movff	btemp,postinc1
  6436  010D86  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6437  010D8C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  6438  010D92  0060  F013  FFE6   	movff	btemp+3,postinc1
  6439  010D98  0E5D               	movlw	low STR_41
  6440  010D9A  6EE6               	movwf	postinc1,c
  6441  010D9C  0EFC               	movlw	high STR_41
  6442  010D9E  6EE6               	movwf	postinc1,c
  6443  010DA0  0E01               	movlw	1
  6444  010DA2  6EE6               	movwf	postinc1,c
  6445  010DA4  0E02               	movlw	2
  6446  010DA6  6EE6               	movwf	postinc1,c
  6447  010DA8  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6448  010DAC  0060  F007  FFE6   	movff	btemp,postinc1
  6449  010DB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6450  010DB8  0E08               	movlw	8
  6451  010DBA  6EE6               	movwf	postinc1,c
  6452  010DBC  ECDB  F0F7         	call	_sprintf	;wreg free
  6453                           
  6454                           ;main.c: 411:      break;
  6455  010DC0  D225               	goto	l17309
  6456  010DC2                     l1490:
  6457                           
  6458                           ; BSR set to: 1
  6459                           ;main.c: 413:      V.calib = 0;
  6460  010DC2  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6461                           
  6462                           ; BSR set to: 1
  6463                           ;main.c: 414:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  6464  010DC4  EE22  F17F         	lfsr	2,_C+128	;volatile
  6465  010DC8  006F FF7B FFE6     	movff	postinc2,postinc1
  6466  010DCE  006F FF7B FFE6     	movff	postinc2,postinc1
  6467  010DD4  006F FF7B FFE6     	movff	postinc2,postinc1
  6468  010DDA  006F FF7B FFE6     	movff	postinc2,postinc1
  6469  010DE0  0E7D               	movlw	low STR_42
  6470  010DE2  6EE6               	movwf	postinc1,c
  6471  010DE4  0EFB               	movlw	high STR_42
  6472  010DE6  6EE6               	movwf	postinc1,c
  6473  010DE8  0E00               	movlw	0
  6474  010DEA  6EE6               	movwf	postinc1,c
  6475  010DEC  0E00               	movlw	0
  6476  010DEE  6EE6               	movwf	postinc1,c
  6477  010DF0  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6478  010DF4  0060  F007  FFE6   	movff	btemp,postinc1
  6479  010DFA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6480  010E00  0E08               	movlw	8
  6481  010E02  6EE6               	movwf	postinc1,c
  6482  010E04  ECDB  F0F7         	call	_sprintf	;wreg free
  6483                           
  6484                           ;main.c: 415:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  6485  010E08  EE22  F193         	lfsr	2,_C+148	;volatile
  6486  010E0C  006F FF7B FFE6     	movff	postinc2,postinc1
  6487  010E12  006F FF7B FFE6     	movff	postinc2,postinc1
  6488  010E18  006F FF7B FFE6     	movff	postinc2,postinc1
  6489  010E1E  006F FF7B FFE6     	movff	postinc2,postinc1
  6490  010E24  EE22  F18F         	lfsr	2,_C+144	;volatile
  6491  010E28  006F FF7B FFE6     	movff	postinc2,postinc1
  6492  010E2E  006F FF7B FFE6     	movff	postinc2,postinc1
  6493  010E34  006F FF7B FFE6     	movff	postinc2,postinc1
  6494  010E3A  006F FF7B FFE6     	movff	postinc2,postinc1
  6495  010E40  0EC2               	movlw	low STR_43
  6496  010E42  6EE6               	movwf	postinc1,c
  6497  010E44  0EFB               	movlw	high STR_43
  6498  010E46  6EE6               	movwf	postinc1,c
  6499  010E48  0E00               	movlw	0
  6500  010E4A  6EE6               	movwf	postinc1,c
  6501  010E4C  0E01               	movlw	1
  6502  010E4E  6EE6               	movwf	postinc1,c
  6503  010E50  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6504  010E54  0060  F007  FFE6   	movff	btemp,postinc1
  6505  010E5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6506  010E60  0E0C               	movlw	12
  6507  010E62  6EE6               	movwf	postinc1,c
  6508  010E64  ECDB  F0F7         	call	_sprintf	;wreg free
  6509                           
  6510                           ;main.c: 416:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  6511  010E68  EE22  F10F         	lfsr	2,_C+16	;volatile
  6512  010E6C  006F FF7B FFE6     	movff	postinc2,postinc1
  6513  010E72  006F FF7B FFE6     	movff	postinc2,postinc1
  6514  010E78  006F FF7B FFE6     	movff	postinc2,postinc1
  6515  010E7E  006F FF7B FFE6     	movff	postinc2,postinc1
  6516  010E84  EE22  F1B3         	lfsr	2,_C+180	;volatile
  6517  010E88  006F FF78  F00B    	movff	postinc2,btemp+10
  6518  010E8E  006F FF74  F00C    	movff	postdec2,btemp+11
  6519  010E94  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6520  010E9A  0060  F033  FFE6   	movff	btemp+11,postinc1
  6521  010EA0  EE22  F1B5         	lfsr	2,_C+182	;volatile
  6522  010EA4  006F FF78  F00B    	movff	postinc2,btemp+10
  6523  010EAA  006F FF74  F00C    	movff	postdec2,btemp+11
  6524  010EB0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6525  010EB6  0060  F033  FFE6   	movff	btemp+11,postinc1
  6526  010EBC  0E00               	movlw	0
  6527  010EBE  6EE6               	movwf	postinc1,c
  6528  010EC0  0E05               	movlw	5
  6529  010EC2  6EE6               	movwf	postinc1,c
  6530  010EC4  ECBB  F0FA         	call	_spinners	;wreg free
  6531  010EC8  5001               	movf	btemp^0,w,c
  6532  010ECA  6EE6               	movwf	postinc1,c
  6533  010ECC  0E00               	movlw	0
  6534  010ECE  6EE6               	movwf	postinc1,c
  6535  010ED0  0EE3               	movlw	low STR_44
  6536  010ED2  6EE6               	movwf	postinc1,c
  6537  010ED4  0EFA               	movlw	high STR_44
  6538  010ED6  6EE6               	movwf	postinc1,c
  6539  010ED8  0E00               	movlw	0
  6540  010EDA  6EE6               	movwf	postinc1,c
  6541  010EDC  0E02               	movlw	2
  6542  010EDE  6EE6               	movwf	postinc1,c
  6543  010EE0  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6544  010EE4  0060  F007  FFE6   	movff	btemp,postinc1
  6545  010EEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6546  010EF0  0E0E               	movlw	14
  6547  010EF2  6EE6               	movwf	postinc1,c
  6548  010EF4  ECDB  F0F7         	call	_sprintf	;wreg free
  6549                           
  6550                           ;main.c: 418:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  6551  010EF8  EE22  F187         	lfsr	2,_C+136	;volatile
  6552  010EFC  006F FF7B FFE6     	movff	postinc2,postinc1
  6553  010F02  006F FF7B FFE6     	movff	postinc2,postinc1
  6554  010F08  006F FF7B FFE6     	movff	postinc2,postinc1
  6555  010F0E  006F FF7B FFE6     	movff	postinc2,postinc1
  6556  010F14  0E66               	movlw	low STR_45
  6557  010F16  6EE6               	movwf	postinc1,c
  6558  010F18  0EFB               	movlw	high STR_45
  6559  010F1A  6EE6               	movwf	postinc1,c
  6560  010F1C  0E01               	movlw	1
  6561  010F1E  6EE6               	movwf	postinc1,c
  6562  010F20  0E00               	movlw	0
  6563  010F22  6EE6               	movwf	postinc1,c
  6564  010F24  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6565  010F28  0060  F007  FFE6   	movff	btemp,postinc1
  6566  010F2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6567  010F34  0E08               	movlw	8
  6568  010F36  6EE6               	movwf	postinc1,c
  6569  010F38  ECDB  F0F7         	call	_sprintf	;wreg free
  6570                           
  6571                           ;main.c: 419:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  6572  010F3C  EE22  F229         	lfsr	2,_C+298	;volatile
  6573  010F40  006F FF7B FFE6     	movff	postinc2,postinc1
  6574  010F46  006F FF7B FFE6     	movff	postinc2,postinc1
  6575  010F4C  006F FF7B FFE6     	movff	postinc2,postinc1
  6576  010F52  006F FF7B FFE6     	movff	postinc2,postinc1
  6577  010F58  EE22  F235         	lfsr	2,_C+310	;volatile
  6578  010F5C  006F FF7B FFE6     	movff	postinc2,postinc1
  6579  010F62  006F FF7B FFE6     	movff	postinc2,postinc1
  6580  010F68  006F FF7B FFE6     	movff	postinc2,postinc1
  6581  010F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  6582  010F74  0E94               	movlw	low STR_46
  6583  010F76  6EE6               	movwf	postinc1,c
  6584  010F78  0EFB               	movlw	high STR_46
  6585  010F7A  6EE6               	movwf	postinc1,c
  6586  010F7C  0E01               	movlw	1
  6587  010F7E  6EE6               	movwf	postinc1,c
  6588  010F80  0E01               	movlw	1
  6589  010F82  6EE6               	movwf	postinc1,c
  6590  010F84  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6591  010F88  0060  F007  FFE6   	movff	btemp,postinc1
  6592  010F8E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6593  010F94  0E0C               	movlw	12
  6594  010F96  6EE6               	movwf	postinc1,c
  6595  010F98  ECDB  F0F7         	call	_sprintf	;wreg free
  6596                           
  6597                           ;main.c: 420:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  6598  010F9C  EE22  F22D         	lfsr	2,_C+302	;volatile
  6599  010FA0  006F FF7B FFE6     	movff	postinc2,postinc1
  6600  010FA6  006F FF7B FFE6     	movff	postinc2,postinc1
  6601  010FAC  006F FF7B FFE6     	movff	postinc2,postinc1
  6602  010FB2  006F FF7B FFE6     	movff	postinc2,postinc1
  6603  010FB8  EE22  F239         	lfsr	2,_C+314	;volatile
  6604  010FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  6605  010FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  6606  010FC8  006F FF7B FFE6     	movff	postinc2,postinc1
  6607  010FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  6608  010FD4  0EAB               	movlw	low STR_47
  6609  010FD6  6EE6               	movwf	postinc1,c
  6610  010FD8  0EFB               	movlw	high STR_47
  6611  010FDA  6EE6               	movwf	postinc1,c
  6612  010FDC  0E01               	movlw	1
  6613  010FDE  6EE6               	movwf	postinc1,c
  6614  010FE0  0E02               	movlw	2
  6615  010FE2  6EE6               	movwf	postinc1,c
  6616  010FE4  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6617  010FE8  0060  F007  FFE6   	movff	btemp,postinc1
  6618  010FEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6619  010FF4  0E0C               	movlw	12
  6620  010FF6  6EE6               	movwf	postinc1,c
  6621  010FF8  ECDB  F0F7         	call	_sprintf	;wreg free
  6622                           
  6623                           ;main.c: 421:      break;
  6624  010FFC  D107               	goto	l17309
  6625  010FFE                     l17293:
  6626                           
  6627                           ; BSR set to: 1
  6628                           ;main.c: 423:      if (!V.calib) {
  6629  010FFE  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  6630  011000  A4D8               	btfss	status,2,c
  6631  011002  D02D               	goto	l17297
  6632                           
  6633                           ; BSR set to: 1
  6634                           ;main.c: 424:       lp_filter(0.0, i, -1);
  6635  011004  0EFF               	movlw	255
  6636  011006  6EE6               	movwf	postinc1,c
  6637                           
  6638                           ;stkvar	_i @ sp[(-18)+14]
  6639  011008  0EFC               	movlw	-4
  6640  01100A  50E3               	movf	plusw1,w,c
  6641  01100C  6EE6               	movwf	postinc1,c
  6642  01100E  0E00               	movlw	0
  6643  011010  6EE6               	movwf	postinc1,c
  6644  011012  0E00               	movlw	0
  6645  011014  6EE6               	movwf	postinc1,c
  6646  011016  0E00               	movlw	0
  6647  011018  6EE6               	movwf	postinc1,c
  6648  01101A  0E00               	movlw	0
  6649  01101C  6EE6               	movwf	postinc1,c
  6650  01101E  EC49  F0E8         	call	_lp_filter	;wreg free
  6651                           
  6652                           ;main.c: 425:       lp_filter(0.0, j, -1);
  6653  011022  0EFF               	movlw	255
  6654  011024  6EE6               	movwf	postinc1,c
  6655                           
  6656                           ;stkvar	_j @ sp[(-18)+13]
  6657  011026  0EFB               	movlw	-5
  6658  011028  50E3               	movf	plusw1,w,c
  6659  01102A  6EE6               	movwf	postinc1,c
  6660  01102C  0E00               	movlw	0
  6661  01102E  6EE6               	movwf	postinc1,c
  6662  011030  0E00               	movlw	0
  6663  011032  6EE6               	movwf	postinc1,c
  6664  011034  0E00               	movlw	0
  6665  011036  6EE6               	movwf	postinc1,c
  6666  011038  0E00               	movlw	0
  6667  01103A  6EE6               	movwf	postinc1,c
  6668  01103C  EC49  F0E8         	call	_lp_filter	;wreg free
  6669                           
  6670                           ;main.c: 426:       lp_filter(0.0, k, -1);
  6671  011040  0EFF               	movlw	255
  6672  011042  6EE6               	movwf	postinc1,c
  6673                           
  6674                           ;stkvar	_k @ sp[(-18)+12]
  6675  011044  0EFA               	movlw	-6
  6676  011046  50E3               	movf	plusw1,w,c
  6677  011048  6EE6               	movwf	postinc1,c
  6678  01104A  0E00               	movlw	0
  6679  01104C  6EE6               	movwf	postinc1,c
  6680  01104E  0E00               	movlw	0
  6681  011050  6EE6               	movwf	postinc1,c
  6682  011052  0E00               	movlw	0
  6683  011054  6EE6               	movwf	postinc1,c
  6684  011056  0E00               	movlw	0
  6685  011058  6EE6               	movwf	postinc1,c
  6686  01105A  EC49  F0E8         	call	_lp_filter	;wreg free
  6687  01105E                     l17297:
  6688                           
  6689                           ;main.c: 428:      V.calib = 1;
  6690  01105E  0E01               	movlw	1
  6691  011060  0101               	movlb	1	; () banked
  6692  011062  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6693                           
  6694                           ; BSR set to: 1
  6695                           ;main.c: 429:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6696                           ;stkvar	_inp_index @ sp[(-17)+11]
  6697  011064  0EFA               	movlw	-6
  6698  011066  50E3               	movf	plusw1,w,c
  6699  011068  6EE6               	movwf	postinc1,c
  6700  01106A  0E00               	movlw	0
  6701  01106C  6EE6               	movwf	postinc1,c
  6702                           
  6703                           ;stkvar	_i @ sp[(-19)+14]
  6704  01106E  0EFB               	movlw	-5
  6705  011070  50E3               	movf	plusw1,w,c
  6706  011072  0D04               	mullw	4
  6707  011074  0EFF               	movlw	low _C
  6708  011076  24F3               	addwf	243,w,c
  6709  011078  6ED9               	movwf	fsr2l,c
  6710  01107A  0E08               	movlw	high _C
  6711  01107C  20F4               	addwfc	prodh,w,c
  6712  01107E  6EDA               	movwf	fsr2h,c
  6713  011080  006F FF7B FFE6     	movff	postinc2,postinc1
  6714  011086  006F FF7B FFE6     	movff	postinc2,postinc1
  6715  01108C  006F FF7B FFE6     	movff	postinc2,postinc1
  6716  011092  006F FF7B FFE6     	movff	postinc2,postinc1
  6717                           
  6718                           ;stkvar	_i @ sp[(-23)+14]
  6719  011098  0EF7               	movlw	-9
  6720  01109A  50E3               	movf	plusw1,w,c
  6721  01109C  6EE6               	movwf	postinc1,c
  6722  01109E  EC89  F00E         	call	_get_raw_result	;wreg free
  6723  0110A2  0060  F007  FFE6   	movff	btemp,postinc1
  6724  0110A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6725  0110AE  0E4F               	movlw	low STR_48
  6726  0110B0  6EE6               	movwf	postinc1,c
  6727  0110B2  0EFD               	movlw	high STR_48
  6728  0110B4  6EE6               	movwf	postinc1,c
  6729  0110B6  0E00               	movlw	0
  6730  0110B8  6EE6               	movwf	postinc1,c
  6731  0110BA  0E00               	movlw	0
  6732  0110BC  6EE6               	movwf	postinc1,c
  6733  0110BE  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6734  0110C2  0060  F007  FFE6   	movff	btemp,postinc1
  6735  0110C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6736  0110CE  0E0C               	movlw	12
  6737  0110D0  6EE6               	movwf	postinc1,c
  6738  0110D2  ECDB  F0F7         	call	_sprintf	;wreg free
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;main.c: 430:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  6742                           ;stkvar	_inp_index @ sp[(-17)+11]
  6743  0110D6  0EFA               	movlw	-6
  6744  0110D8  50E3               	movf	plusw1,w,c
  6745  0110DA  6E0B               	movwf	(btemp+10)^0,c
  6746  0110DC  6A0C               	clrf	(btemp+11)^0,c
  6747  0110DE  0E01               	movlw	1
  6748  0110E0  260B               	addwf	(btemp+10)^0,f,c
  6749  0110E2  0E00               	movlw	0
  6750  0110E4  220C               	addwfc	(btemp+11)^0,f,c
  6751  0110E6  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6752  0110EC  0060  F033  FFE6   	movff	btemp+11,postinc1
  6753                           
  6754                           ;stkvar	_j @ sp[(-19)+13]
  6755  0110F2  0EFA               	movlw	-6
  6756  0110F4  50E3               	movf	plusw1,w,c
  6757  0110F6  0D04               	mullw	4
  6758  0110F8  0EFF               	movlw	low _C
  6759  0110FA  24F3               	addwf	243,w,c
  6760  0110FC  6ED9               	movwf	fsr2l,c
  6761  0110FE  0E08               	movlw	high _C
  6762  011100  20F4               	addwfc	prodh,w,c
  6763  011102  6EDA               	movwf	fsr2h,c
  6764  011104  006F FF7B FFE6     	movff	postinc2,postinc1
  6765  01110A  006F FF7B FFE6     	movff	postinc2,postinc1
  6766  011110  006F FF7B FFE6     	movff	postinc2,postinc1
  6767  011116  006F FF7B FFE6     	movff	postinc2,postinc1
  6768                           
  6769                           ;stkvar	_j @ sp[(-23)+13]
  6770  01111C  0EF6               	movlw	-10
  6771  01111E  50E3               	movf	plusw1,w,c
  6772  011120  6EE6               	movwf	postinc1,c
  6773  011122  EC89  F00E         	call	_get_raw_result	;wreg free
  6774  011126  0060  F007  FFE6   	movff	btemp,postinc1
  6775  01112C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6776  011132  0E4F               	movlw	low STR_48
  6777  011134  6EE6               	movwf	postinc1,c
  6778  011136  0EFD               	movlw	high STR_48
  6779  011138  6EE6               	movwf	postinc1,c
  6780  01113A  0E00               	movlw	0
  6781  01113C  6EE6               	movwf	postinc1,c
  6782  01113E  0E01               	movlw	1
  6783  011140  6EE6               	movwf	postinc1,c
  6784  011142  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6785  011146  0060  F007  FFE6   	movff	btemp,postinc1
  6786  01114C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6787  011152  0E0C               	movlw	12
  6788  011154  6EE6               	movwf	postinc1,c
  6789  011156  ECDB  F0F7         	call	_sprintf	;wreg free
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;main.c: 431:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  6793                           ;stkvar	_inp_index @ sp[(-17)+11]
  6794  01115A  0EFA               	movlw	-6
  6795  01115C  50E3               	movf	plusw1,w,c
  6796  01115E  6E0B               	movwf	(btemp+10)^0,c
  6797  011160  6A0C               	clrf	(btemp+11)^0,c
  6798  011162  0E02               	movlw	2
  6799  011164  260B               	addwf	(btemp+10)^0,f,c
  6800  011166  0E00               	movlw	0
  6801  011168  220C               	addwfc	(btemp+11)^0,f,c
  6802  01116A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6803  011170  0060  F033  FFE6   	movff	btemp+11,postinc1
  6804                           
  6805                           ;stkvar	_k @ sp[(-19)+12]
  6806  011176  0EF9               	movlw	-7
  6807  011178  50E3               	movf	plusw1,w,c
  6808  01117A  0D04               	mullw	4
  6809  01117C  0EFF               	movlw	low _C
  6810  01117E  24F3               	addwf	243,w,c
  6811  011180  6ED9               	movwf	fsr2l,c
  6812  011182  0E08               	movlw	high _C
  6813  011184  20F4               	addwfc	prodh,w,c
  6814  011186  6EDA               	movwf	fsr2h,c
  6815  011188  006F FF7B FFE6     	movff	postinc2,postinc1
  6816  01118E  006F FF7B FFE6     	movff	postinc2,postinc1
  6817  011194  006F FF7B FFE6     	movff	postinc2,postinc1
  6818  01119A  006F FF7B FFE6     	movff	postinc2,postinc1
  6819                           
  6820                           ;stkvar	_k @ sp[(-23)+12]
  6821  0111A0  0EF5               	movlw	-11
  6822  0111A2  50E3               	movf	plusw1,w,c
  6823  0111A4  6EE6               	movwf	postinc1,c
  6824  0111A6  EC89  F00E         	call	_get_raw_result	;wreg free
  6825  0111AA  0060  F007  FFE6   	movff	btemp,postinc1
  6826  0111B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6827  0111B6  0E4F               	movlw	low STR_48
  6828  0111B8  6EE6               	movwf	postinc1,c
  6829  0111BA  0EFD               	movlw	high STR_48
  6830  0111BC  6EE6               	movwf	postinc1,c
  6831  0111BE  0E00               	movlw	0
  6832  0111C0  6EE6               	movwf	postinc1,c
  6833  0111C2  0E02               	movlw	2
  6834  0111C4  6EE6               	movwf	postinc1,c
  6835  0111C6  EC70  F00C         	call	_get_vterm_ptr	;wreg free
  6836  0111CA  0060  F007  FFE6   	movff	btemp,postinc1
  6837  0111D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6838  0111D6  0E0C               	movlw	12
  6839  0111D8  6EE6               	movwf	postinc1,c
  6840  0111DA  ECDB  F0F7         	call	_sprintf	;wreg free
  6841                           
  6842                           ;main.c: 432:      break;
  6843  0111DE  D016               	goto	l17309
  6844  0111E0                     l17307:
  6845  0111E0  0101               	movlb	1	; () banked
  6846  0111E2  51C7               	movf	_H& (0+255),w,b
  6847  0111E4  6E0B               	movwf	(btemp+10)^0,c
  6848  0111E6  6A0C               	clrf	(btemp+11)^0,c
  6849                           
  6850                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6851                           ; Switch size 1, requested type "simple"
  6852                           ; Number of cases is 1, Range of values is 0 to 0
  6853                           ; switch strategies available:
  6854                           ; Name         Instructions Cycles
  6855                           ; simple_byte            4     3 (average)
  6856                           ;	Chosen strategy is simple_byte
  6857  0111E8  500C               	movf	(btemp+11)^0,w,c
  6858  0111EA  0A00               	xorlw	0	; case 0
  6859  0111EC  A4D8               	btfss	status,2,c
  6860  0111EE  D00E               	goto	l17309
  6861                           
  6862                           ; BSR set to: 1
  6863                           ; Switch size 1, requested type "simple"
  6864                           ; Number of cases is 4, Range of values is 0 to 3
  6865                           ; switch strategies available:
  6866                           ; Name         Instructions Cycles
  6867                           ; simple_byte           13     7 (average)
  6868                           ;	Chosen strategy is simple_byte
  6869  0111F0  500B               	movf	(btemp+10)^0,w,c
  6870  0111F2  0A00               	xorlw	0	; case 0
  6871  0111F4  B4D8               	btfsc	status,2,c
  6872  0111F6  D4D1               	goto	l1489
  6873  0111F8  0A01               	xorlw	1	; case 1
  6874  0111FA  B4D8               	btfsc	status,2,c
  6875  0111FC  EFCB  F084         	goto	l1479
  6876  011200  0A03               	xorlw	3	; case 2
  6877  011202  B4D8               	btfsc	status,2,c
  6878  011204  D5DE               	goto	l1490
  6879  011206  0A01               	xorlw	1	; case 3
  6880  011208  B4D8               	btfsc	status,2,c
  6881  01120A  D6F9               	goto	l17293
  6882  01120C                     l17309:
  6883                           
  6884                           ;main.c: 436:     clear_hid_pflags(&H);
  6885  01120C  0EC7               	movlw	low _H
  6886  01120E  6EE6               	movwf	postinc1,c
  6887  011210  0E01               	movlw	high _H
  6888  011212  6EE6               	movwf	postinc1,c
  6889  011214  EC27  F006         	call	_clear_hid_pflags	;wreg free
  6890                           
  6891                           ;main.c: 438:    StartTimer(TMR_DISPLAY, 250);
  6892  011218  0EFA               	movlw	250
  6893  01121A  6EE6               	movwf	postinc1,c
  6894  01121C  0E00               	movlw	0
  6895  01121E  6EE6               	movwf	postinc1,c
  6896  011220  0E0A               	movlw	10
  6897  011222  6EE6               	movwf	postinc1,c
  6898  011224  EC82  F00A         	call	_StartTimer	;wreg free
  6899                           
  6900                           ;main.c: 439:    V.enter = check_enter_button(&H);
  6901  011228  0EC7               	movlw	low _H
  6902  01122A  6EE6               	movwf	postinc1,c
  6903  01122C  0E01               	movlw	high _H
  6904  01122E  6EE6               	movwf	postinc1,c
  6905  011230  ECE3  F004         	call	_check_enter_button	;wreg free
  6906  011234  5001               	movf	btemp^0,w,c
  6907  011236  0101               	movlb	1	; () banked
  6908  011238  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  6909                           
  6910                           ; BSR set to: 1
  6911                           ;main.c: 440:    if (V.enter && (H.hid_display != HID_AUX)) {
  6912  01123A  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6913  01123C  B4D8               	btfsc	status,2,c
  6914  01123E  D011               	goto	l17323
  6915                           
  6916                           ; BSR set to: 1
  6917  011240  0E03               	movlw	3
  6918  011242  19C7               	xorwf	_H& (0+255),w,b
  6919  011244  B4D8               	btfsc	status,2,c
  6920  011246  D00D               	goto	l17323
  6921                           
  6922                           ; BSR set to: 1
  6923                           ;main.c: 441:     V.enter = 0;
  6924  011248  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6925                           
  6926                           ; BSR set to: 1
  6927                           ;main.c: 442:     V.screen = ~V.screen;
  6928  01124A  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6929  01124C  D002               	goto	u16900
  6930  01124E  0E01               	movlw	1
  6931  011250  D001               	goto	u16906
  6932  011252                     u16900:
  6933  011252  0E00               	movlw	0
  6934  011254                     u16906:
  6935  011254  0AFF               	xorlw	255
  6936  011256  6E0C               	movwf	(btemp+11)^0,c
  6937  011258  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  6938  01125A  180C               	xorwf	(btemp+11)^0,w,c
  6939  01125C  0BFE               	andlw	-2
  6940  01125E  180C               	xorwf	(btemp+11)^0,w,c
  6941  011260  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  6942  011262                     l17323:
  6943                           
  6944                           ; BSR set to: 1
  6945                           ;main.c: 444:    set_vterm(V.screen);
  6946  011262  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6947  011264  D002               	goto	u16910
  6948  011266  0E01               	movlw	1
  6949  011268  D001               	goto	u16916
  6950  01126A                     u16910:
  6951  01126A  0E00               	movlw	0
  6952  01126C                     u16916:
  6953  01126C  6EE6               	movwf	postinc1,c
  6954  01126E  EC0A  F00F         	call	_set_vterm	;wreg free
  6955                           
  6956                           ;main.c: 445:    update_lcd(V.screen);
  6957  011272  0101               	movlb	1	; () banked
  6958  011274  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6959  011276  D002               	goto	u16920
  6960  011278  0E01               	movlw	1
  6961  01127A  D001               	goto	u16926
  6962  01127C                     u16920:
  6963  01127C  0E00               	movlw	0
  6964  01127E                     u16926:
  6965  01127E  6EE6               	movwf	postinc1,c
  6966  011280  EC8D  F0F0         	call	_update_lcd	;wreg free
  6967                           
  6968                           ;main.c: 446:    display_history();
  6969  011284  EC6A  F0E7         	call	_display_history	;wreg free
  6970                           
  6971                           ;main.c: 448:    wait_lcd_done();
  6972  011288  EC78  F00E         	call	_wait_lcd_done	;wreg free
  6973                           
  6974                           ; BSR set to: 0
  6975                           ;main.c: 449:    set_dac_a(3.333);
  6976  01128C  0EDF               	movlw	223
  6977  01128E  6EE6               	movwf	postinc1,c
  6978  011290  0E4F               	movlw	79
  6979  011292  6EE6               	movwf	postinc1,c
  6980  011294  0E55               	movlw	85
  6981  011296  6EE6               	movwf	postinc1,c
  6982  011298  0E40               	movlw	64
  6983  01129A  6EE6               	movwf	postinc1,c
  6984  01129C  ECC3  F00B         	call	_set_dac_a	;wreg free
  6985                           
  6986                           ;main.c: 450:    set_dac_b(6.666);
  6987  0112A0  0EDF               	movlw	223
  6988  0112A2  6EE6               	movwf	postinc1,c
  6989  0112A4  0E4F               	movlw	79
  6990  0112A6  6EE6               	movwf	postinc1,c
  6991  0112A8  0ED5               	movlw	213
  6992  0112AA  6EE6               	movwf	postinc1,c
  6993  0112AC  0E40               	movlw	64
  6994  0112AE  6EE6               	movwf	postinc1,c
  6995  0112B0  ECA9  F00B         	call	_set_dac_b	;wreg free
  6996                           
  6997                           ;main.c: 451:    set_dac();
  6998  0112B4  EC5E  F0FE         	call	_set_dac	;wreg free
  6999  0112B8                     l17337:
  7000                           
  7001                           ;main.c: 457:   check_help(V.flipper);
  7002  0112B8  0101               	movlb	1	; () banked
  7003  0112BA  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  7004  0112BC  6EE6               	movwf	postinc1,c
  7005  0112BE  EC7A  F0E4         	call	_check_help	;wreg free
  7006                           
  7007                           ;main.c: 459:   if (V.enter) {
  7008  0112C2  0101               	movlb	1	; () banked
  7009  0112C4  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  7010  0112C6  B4D8               	btfsc	status,2,c
  7011  0112C8  D062               	goto	l1495
  7012                           
  7013                           ; BSR set to: 1
  7014                           ;main.c: 460:    V.enter = 0;
  7015  0112CA  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  7016                           
  7017                           ;main.c: 461:    V.calib = 0;
  7018  0112CC  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  7019                           
  7020                           ; BSR set to: 1
  7021                           ;main.c: 462:    inp_index += 3;
  7022                           ;stkvar	_inp_index @ sp[(-17)+11]
  7023  0112CE  0EFA               	movlw	-6
  7024  0112D0  006F FF8C  F001    	movff	plusw1,btemp
  7025  0112D6  0E03               	movlw	3
  7026  0112D8  2601               	addwf	btemp^0,f,c
  7027  0112DA  0EFA               	movlw	-6
  7028  0112DC  0060  F007  FFE3   	movff	btemp,plusw1
  7029                           
  7030                           ;main.c: 463:    if (inp_index > 9)
  7031                           ;stkvar	_inp_index @ sp[(-17)+11]
  7032  0112E2  0EFA               	movlw	-6
  7033  0112E4  006F FF8C  F001    	movff	plusw1,btemp
  7034  0112EA  0E09               	movlw	9
  7035  0112EC  6401               	cpfsgt	btemp^0,c
  7036  0112EE  D03A               	goto	l17365
  7037                           
  7038                           ; BSR set to: 1
  7039                           ;main.c: 464:     inp_index = 0;
  7040                           ;stkvar	_inp_index @ sp[(-17)+11]
  7041  0112F0  0EFA               	movlw	-6
  7042  0112F2  6AE3               	clrf	plusw1,c
  7043  0112F4  D037               	goto	l17365
  7044  0112F6                     l17347:
  7045                           
  7046                           ; BSR set to: 1
  7047                           ;main.c: 467:     i = C_BATT;
  7048                           ;stkvar	_i @ sp[(-17)+14]
  7049  0112F6  0EFD               	movlw	-3
  7050  0112F8  6AE3               	clrf	plusw1,c
  7051                           
  7052                           ; BSR set to: 1
  7053                           ;main.c: 468:     j = C_PV;
  7054                           ;stkvar	_j @ sp[(-17)+13]
  7055  0112FA  0EFC               	movlw	-4
  7056  0112FC  6AE3               	clrf	plusw1,c
  7057  0112FE  2AE3               	incf	plusw1,f,c
  7058                           
  7059                           ; BSR set to: 1
  7060                           ;main.c: 469:     k = V_CC;
  7061                           ;stkvar	_k @ sp[(-17)+12]
  7062  011300  0EFB               	movlw	-5
  7063  011302  6AE3               	clrf	plusw1,c
  7064  011304  82E3               	bsf	plusw1,1,c
  7065                           
  7066                           ;main.c: 470:     break;
  7067  011306  D043               	goto	l1495
  7068  011308                     l17353:
  7069                           
  7070                           ; BSR set to: 1
  7071                           ;main.c: 472:     i = V_BAT;
  7072                           ;stkvar	_i @ sp[(-17)+14]
  7073  011308  0EFD               	movlw	-3
  7074  01130A  6AE3               	clrf	plusw1,c
  7075  01130C  84E3               	bsf	plusw1,2,c
  7076                           
  7077                           ;main.c: 473:     j = V_PV;
  7078                           ;stkvar	_j @ sp[(-17)+13]
  7079  01130E  0EFC               	movlw	-4
  7080  011310  6AE3               	clrf	plusw1,c
  7081  011312  80E3               	bsf	plusw1,0,c
  7082  011314  84E3               	bsf	plusw1,2,c	;indir
  7083                           
  7084                           ;main.c: 474:     k = V_CBUS;
  7085                           ;stkvar	_k @ sp[(-17)+12]
  7086  011316  0EFB               	movlw	-5
  7087  011318  6AE3               	clrf	plusw1,c
  7088  01131A  82E3               	bsf	plusw1,1,c
  7089  01131C  84E3               	bsf	plusw1,2,c	;indir
  7090                           
  7091                           ;main.c: 475:     break;
  7092  01131E  D037               	goto	l1495
  7093  011320                     l17355:
  7094                           
  7095                           ; BSR set to: 1
  7096                           ;main.c: 477:     i = V_BBAT;
  7097                           ;stkvar	_i @ sp[(-17)+14]
  7098  011320  0EFD               	movlw	-3
  7099  011322  6AE3               	clrf	plusw1,c
  7100  011324  82E3               	bsf	plusw1,1,c
  7101  011326  86E3               	bsf	plusw1,3,c	;indir
  7102                           
  7103                           ; BSR set to: 1
  7104                           ;main.c: 478:     j = V_TEMP;
  7105  011328  0E0B               	movlw	11
  7106  01132A  6E0C               	movwf	(btemp+11)^0,c
  7107                           
  7108                           ;stkvar	_j @ sp[(-17)+13]
  7109  01132C  0EFC               	movlw	-4
  7110  01132E  0060  F033  FFE3   	movff	btemp+11,plusw1
  7111                           
  7112                           ; BSR set to: 1
  7113                           ;main.c: 479:     k = V_INVERTER;
  7114                           ;stkvar	_k @ sp[(-17)+12]
  7115  011334  0EFB               	movlw	-5
  7116  011336  6AE3               	clrf	plusw1,c
  7117  011338  84E3               	bsf	plusw1,2,c
  7118  01133A  86E3               	bsf	plusw1,3,c	;indir
  7119                           
  7120                           ;main.c: 480:     break;
  7121  01133C  D028               	goto	l1495
  7122  01133E                     l17361:
  7123                           
  7124                           ; BSR set to: 1
  7125                           ;main.c: 482:     i = V_LIGHT_SENSOR;
  7126  01133E  0E0D               	movlw	13
  7127  011340  6E0C               	movwf	(btemp+11)^0,c
  7128                           
  7129                           ;stkvar	_i @ sp[(-17)+14]
  7130  011342  0EFD               	movlw	-3
  7131  011344  0060  F033  FFE3   	movff	btemp+11,plusw1
  7132                           
  7133                           ;main.c: 483:     j = V_LIGHT_SENSOR;
  7134  01134A  0E0D               	movlw	13
  7135  01134C  6E0C               	movwf	(btemp+11)^0,c
  7136                           
  7137                           ;stkvar	_j @ sp[(-17)+13]
  7138  01134E  0EFC               	movlw	-4
  7139  011350  0060  F033  FFE3   	movff	btemp+11,plusw1
  7140                           
  7141                           ;main.c: 484:     k = V_LIGHT_SENSOR;
  7142  011356  0E0D               	movlw	13
  7143  011358  6E0C               	movwf	(btemp+11)^0,c
  7144                           
  7145                           ;stkvar	_k @ sp[(-17)+12]
  7146  01135A  0EFB               	movlw	-5
  7147  01135C  0060  F033  FFE3   	movff	btemp+11,plusw1
  7148                           
  7149                           ;main.c: 485:     break;
  7150  011362  D015               	goto	l1495
  7151  011364                     l17365:
  7152                           
  7153                           ; BSR set to: 1
  7154                           ;stkvar	_inp_index @ sp[(-17)+11]
  7155  011364  0EFA               	movlw	-6
  7156  011366  50E3               	movf	plusw1,w,c
  7157  011368  6E0B               	movwf	(btemp+10)^0,c
  7158  01136A  6A0C               	clrf	(btemp+11)^0,c
  7159                           
  7160                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7161                           ; Switch size 1, requested type "simple"
  7162                           ; Number of cases is 1, Range of values is 0 to 0
  7163                           ; switch strategies available:
  7164                           ; Name         Instructions Cycles
  7165                           ; simple_byte            4     3 (average)
  7166                           ;	Chosen strategy is simple_byte
  7167  01136C  500C               	movf	(btemp+11)^0,w,c
  7168  01136E  0A00               	xorlw	0	; case 0
  7169  011370  A4D8               	btfss	status,2,c
  7170  011372  D00D               	goto	l1495
  7171                           
  7172                           ; BSR set to: 1
  7173                           ; Switch size 1, requested type "simple"
  7174                           ; Number of cases is 4, Range of values is 0 to 9
  7175                           ; switch strategies available:
  7176                           ; Name         Instructions Cycles
  7177                           ; simple_byte           13     7 (average)
  7178                           ;	Chosen strategy is simple_byte
  7179  011374  500B               	movf	(btemp+10)^0,w,c
  7180  011376  0A00               	xorlw	0	; case 0
  7181  011378  B4D8               	btfsc	status,2,c
  7182  01137A  D7BD               	goto	l17347
  7183  01137C  0A03               	xorlw	3	; case 3
  7184  01137E  B4D8               	btfsc	status,2,c
  7185  011380  D7C3               	goto	l17353
  7186  011382  0A05               	xorlw	5	; case 6
  7187  011384  B4D8               	btfsc	status,2,c
  7188  011386  D7CC               	goto	l17355
  7189  011388  0A0F               	xorlw	15	; case 9
  7190  01138A  B4D8               	btfsc	status,2,c
  7191  01138C  D7D8               	goto	l17361
  7192  01138E                     l1495:
  7193                           
  7194                           ; BSR set to: 1
  7195                           ;main.c: 494:   if (V.set_sequ) {
  7196  01138E  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  7197  011390  EF08  F084         	goto	l17217
  7198                           
  7199                           ; BSR set to: 1
  7200                           ;main.c: 495:    if (TimerDone(TMR_INFO)) {
  7201  011394  0E07               	movlw	7
  7202  011396  6EE6               	movwf	postinc1,c
  7203  011398  ECF3  F00C         	call	_TimerDone	;wreg free
  7204  01139C  5001               	movf	btemp^0,w,c
  7205  01139E  B4D8               	btfsc	status,2,c
  7206  0113A0  D00C               	goto	l17375
  7207                           
  7208                           ;main.c: 496:     V.set_sequ = 0;
  7209  0113A2  0101               	movlb	1	; () banked
  7210  0113A4  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  7211                           
  7212                           ; BSR set to: 1
  7213                           ;main.c: 497:     set_vterm(0);
  7214  0113A6  0E00               	movlw	0
  7215  0113A8  6EE6               	movwf	postinc1,c
  7216  0113AA  EC0A  F00F         	call	_set_vterm	;wreg free
  7217                           
  7218                           ;main.c: 498:     update_lcd(0);
  7219  0113AE  0E00               	movlw	0
  7220  0113B0  6EE6               	movwf	postinc1,c
  7221  0113B2  EC8D  F0F0         	call	_update_lcd	;wreg free
  7222                           
  7223                           ;main.c: 499:    } else {
  7224  0113B6  EF08  F084         	goto	l17217
  7225  0113BA                     l17375:
  7226                           
  7227                           ;main.c: 500:     set_vterm(2);
  7228  0113BA  0E02               	movlw	2
  7229  0113BC  6EE6               	movwf	postinc1,c
  7230  0113BE  EC0A  F00F         	call	_set_vterm	;wreg free
  7231                           
  7232                           ;main.c: 501:     update_lcd(2);
  7233  0113C2  0E02               	movlw	2
  7234  0113C4  6EE6               	movwf	postinc1,c
  7235  0113C6  EC8D  F0F0         	call	_update_lcd	;wreg free
  7236  0113CA  EF08  F084         	goto	l17217
  7237  0113CE                     __end_of_main:
  7238                           	opt callstack 0
  7239                           
  7240 ;; *************** function _update_hist_data *****************
  7241 ;; Defined at:
  7242 ;;		line 454 in file "daq.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  mode            1  [STACK] const _Bool 
  7245 ;;  hist            2  [STACK] PTR volatile struct hist
  7246 ;;		 -> C.hist(113), C(336), 
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;		None
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  1  [STACK] void 
  7251 ;; Registers used:
  7252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
  7253 ;; Tracked objects:
  7254 ;;		On entry : 4/2
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7262 ;;Total ram usage:        0 bytes
  7263 ;; Hardware stack levels used:    1
  7264 ;; Hardware stack levels required when called:   15
  7265 ;; This function calls:
  7266 ;;		Nothing
  7267 ;; This function is called by:
  7268 ;;		_main
  7269 ;; This function uses a reentrant model
  7270 ;;
  7271                           
  7272                           	psect	text1
  7273  000A38                     __ptext1:
  7274                           	opt callstack 0
  7275  000A38                     _update_hist_data:
  7276                           	opt callstack 15
  7277                           
  7278                           ;daq.c: 454: void update_hist_data(const _Bool mode, volatile hist_type *hist);daq.c: 45
      +                          5: {;daq.c: 456:  if (hist == ((void*)0))
  7279                           ;stkvar	_hist @ sp[(0)+-3]
  7280                           
  7281                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7282                           ;incstack = 0
  7283  000A38  0EFD               	movlw	-3
  7284  000A3A  006F FF8C  F001    	movff	plusw1,btemp
  7285  000A40  0EFE               	movlw	-2
  7286  000A42  50E3               	movf	plusw1,w,c
  7287  000A44  1001               	iorwf	btemp^0,w,c
  7288  000A46  B4D8               	btfsc	status,2,c
  7289  000A48  D02A               	goto	l2090
  7290                           
  7291                           ;daq.c: 459:  if (mode) {
  7292                           ;stkvar	_mode @ sp[(0)+-1]
  7293  000A4A  0EFF               	movlw	-1
  7294  000A4C  50E3               	movf	plusw1,w,c
  7295  000A4E  B4D8               	btfsc	status,2,c
  7296  000A50  D014               	goto	l14105
  7297                           
  7298                           ;daq.c: 460:   if (R.hist_save)
  7299  000A52  0102               	movlb	2	; () banked
  7300  000A54  A1A7               	btfss	(_R+167)& (0+255),0,b	;volatile
  7301  000A56  D023               	goto	l2090
  7302                           
  7303                           ; BSR set to: 2
  7304                           ;daq.c: 461:    R.H = *hist;
  7305                           ;stkvar	_hist @ sp[(0)+-3]
  7306  000A58  0EFD               	movlw	-3
  7307  000A5A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7308  000A60  0EFE               	movlw	-2
  7309  000A62  006F FF8F FFDA     	movff	plusw1,fsr2h
  7310  000A68  EE00  F236         	lfsr	0,_R+54	;volatile
  7311  000A6C  0E70               	movlw	112
  7312  000A6E                     u13341:
  7313  000A6E  006F FF6F FFEB     	movff	plusw2,plusw0
  7314  000A74  06E8               	decf	wreg,f,c
  7315  000A76  E2FB               	bc	u13341
  7316  000A78  D012               	goto	l2090
  7317  000A7A                     l14105:
  7318                           
  7319                           ;daq.c: 463:   *hist = R.H;
  7320  000A7A  EE20  F236         	lfsr	2,_R+54	;volatile
  7321                           
  7322                           ;stkvar	_hist @ sp[(0)+-3]
  7323  000A7E  0EFD               	movlw	-3
  7324  000A80  006F FF8F FFE9     	movff	plusw1,fsr0l
  7325  000A86  0EFE               	movlw	-2
  7326  000A88  006F FF8F FFEA     	movff	plusw1,fsr0h
  7327  000A8E  0E70               	movlw	112
  7328  000A90                     u13351:
  7329  000A90  006F FF6F FFEB     	movff	plusw2,plusw0
  7330  000A96  06E8               	decf	wreg,f,c
  7331  000A98  E2FB               	bc	u13351
  7332                           
  7333                           ;daq.c: 464:   R.hist_save = 1;
  7334  000A9A  0102               	movlb	2	; () banked
  7335  000A9C  81A7               	bsf	(_R+167)& (0+255),0,b	;volatile
  7336  000A9E                     l2090:
  7337                           
  7338                           ; _update_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  7339  000A9E  52E5               	movf	postdec1,f,c
  7340  000AA0  52E5               	movf	postdec1,f,c
  7341  000AA2  52E5               	movf	postdec1,f,c
  7342  000AA4  0012               	return		;funcret
  7343  000AA6                     __end_of_update_hist_data:
  7344                           	opt callstack 0
  7345                           
  7346 ;; *************** function _update_cal_data *****************
  7347 ;; Defined at:
  7348 ;;		line 435 in file "daq.c"
  7349 ;; Parameters:    Size  Location     Type
  7350 ;;		None
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;		None
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  1  [STACK] void 
  7355 ;; Registers used:
  7356 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7357 ;; Tracked objects:
  7358 ;;		On entry : 0/39
  7359 ;;		On exit  : 3F/2
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7366 ;;Total ram usage:        0 bytes
  7367 ;; Hardware stack levels used:    1
  7368 ;; Hardware stack levels required when called:   15
  7369 ;; This function calls:
  7370 ;;		Nothing
  7371 ;; This function is called by:
  7372 ;;		_main
  7373 ;; This function uses a reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text2
  7377  001072                     __ptext2:
  7378                           	opt callstack 0
  7379  001072                     _update_cal_data:
  7380                           	opt callstack 15
  7381                           
  7382                           ;daq.c: 437:  R = r_cal;
  7383                           
  7384                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7385                           ;incstack = 0
  7386  001072  EE21  F100         	lfsr	2,_r_cal
  7387  001076  EE00  F200         	lfsr	0,_R	;volatile
  7388  00107A  0EAA               	movlw	170
  7389  00107C                     u13281:
  7390  00107C  006F FF7B FFEE     	movff	postinc2,postinc0
  7391  001082  06E8               	decf	wreg,f,c
  7392  001084  E2FB               	bc	u13281
  7393  001086  0EAB               	movlw	171
  7394  001088  5ED9               	subwf	fsr2l,f,c
  7395  00108A  5EE9               	subwf	fsr0l,f,c
  7396                           
  7397                           ;daq.c: 438:  if (!R.c_zero_cal) {
  7398  00108C  0102               	movlb	2	; () banked
  7399  00108E  B3A7               	btfsc	(_R+167)& (0+255),1,b	;volatile
  7400  001090  D008               	goto	l14091
  7401                           
  7402                           ; BSR set to: 2
  7403                           ;daq.c: 439:   R.n_offset[0] = 3938;
  7404  001092  0E0F               	movlw	15
  7405  001094  6F27               	movwf	(_R+39)& (0+255),b	;volatile
  7406  001096  0E62               	movlw	98
  7407  001098  6F26               	movwf	(_R+38)& (0+255),b	;volatile
  7408                           
  7409                           ;daq.c: 440:   R.n_offset[1] = 4004;
  7410  00109A  0E0F               	movlw	15
  7411  00109C  6F29               	movwf	(_R+41)& (0+255),b	;volatile
  7412  00109E  0EA4               	movlw	164
  7413  0010A0  6F28               	movwf	(_R+40)& (0+255),b	;volatile
  7414  0010A2                     l14091:
  7415                           
  7416                           ; BSR set to: 2
  7417                           ;daq.c: 444:  if (!R.c_scale_cal) {
  7418  0010A2  B5A7               	btfsc	(_R+167)& (0+255),2,b	;volatile
  7419  0010A4  0012               	return	
  7420                           
  7421                           ; BSR set to: 2
  7422                           ;daq.c: 445:   R.n_scalar[0] = 0.0862000;
  7423  0010A6  0EA0               	movlw	160
  7424  0010A8  6F2A               	movwf	(_R+42)& (0+255),b	;volatile
  7425  0010AA  0E89               	movlw	137
  7426  0010AC  6F2B               	movwf	(_R+43)& (0+255),b	;volatile
  7427  0010AE  0EB0               	movlw	176
  7428  0010B0  6F2C               	movwf	(_R+44)& (0+255),b	;volatile
  7429  0010B2  0E3D               	movlw	61
  7430  0010B4  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  7431                           
  7432                           ;daq.c: 446:   R.n_scalar[1] = 0.0361010;
  7433  0010B6  0EA4               	movlw	164
  7434  0010B8  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  7435  0010BA  0EDE               	movlw	222
  7436  0010BC  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
  7437  0010BE  0E13               	movlw	19
  7438  0010C0  6F30               	movwf	(_R+48)& (0+255),b	;volatile
  7439  0010C2  0E3D               	movlw	61
  7440  0010C4  6F31               	movwf	(_R+49)& (0+255),b	;volatile
  7441                           
  7442                           ; BSR set to: 2
  7443                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  7444  0010C6  0012               	return		;funcret
  7445  0010C8                     __end_of_update_cal_data:
  7446                           	opt callstack 0
  7447                           
  7448 ;; *************** function _static_soc *****************
  7449 ;; Defined at:
  7450 ;;		line 118 in file "mbmc.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;		None
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;		None
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  1  [STACK] void 
  7457 ;; Registers used:
  7458 ;;		wreg, fsr2l, fsr2h
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/2
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7468 ;;Total ram usage:        0 bytes
  7469 ;; Hardware stack levels used:    1
  7470 ;; Hardware stack levels required when called:   15
  7471 ;; This function calls:
  7472 ;;		Nothing
  7473 ;; This function is called by:
  7474 ;;		_main
  7475 ;; This function uses a reentrant model
  7476 ;;
  7477                           
  7478                           	psect	text3
  7479  000F64                     __ptext3:
  7480                           	opt callstack 0
  7481  000F64                     _static_soc:
  7482                           	opt callstack 15
  7483                           
  7484                           ;mbmc.c: 120:  C.runtime = 120;
  7485                           
  7486                           ; BSR set to: 2
  7487                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7488                           ;incstack = 0
  7489  000F64  0E78               	movlw	120
  7490  000F66  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
  7491  000F6C  0E00               	movlw	0
  7492  000F6E  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
  7493                           
  7494                           ;mbmc.c: 121:  C.soc = 100;
  7495  000F74  0E64               	movlw	100
  7496  000F76  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
  7497  000F7C  0E00               	movlw	0
  7498  000F7E  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
  7499                           
  7500                           ;mbmc.c: 122:  C.dynamic_ah = C.bank_ah;
  7501  000F84  EE22  F18B         	lfsr	2,_C+140	;volatile
  7502  000F88  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
  7503  000F8E  006F FF78  F990    	movff	postinc2,_C+145	;volatile
  7504  000F94  006F FF78  F991    	movff	postinc2,_C+146	;volatile
  7505  000F9A  006F FF74  F992    	movff	postdec2,_C+147	;volatile
  7506                           
  7507                           ;mbmc.c: 123:  C.dynamic_ah_adj = C.dynamic_ah;
  7508  000FA0  EE22  F18F         	lfsr	2,_C+144	;volatile
  7509  000FA4  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  7510  000FAA  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  7511  000FB0  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  7512  000FB6  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  7513                           
  7514                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7515  000FBC  0012               	return		;funcret
  7516  000FBE                     __end_of_static_soc:
  7517                           	opt callstack 0
  7518                           
  7519 ;; *************** function _start_switch_handler *****************
  7520 ;; Defined at:
  7521 ;;		line 125 in file "dio.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;		None
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;		None
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  1  [STACK] void 
  7528 ;; Registers used:
  7529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  7530 ;; Tracked objects:
  7531 ;;		On entry : 3/2
  7532 ;;		On exit  : 3F/39
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7539 ;;Total ram usage:        0 bytes
  7540 ;; Hardware stack levels used:    1
  7541 ;; Hardware stack levels required when called:   16
  7542 ;; This function calls:
  7543 ;;		_INT1_SetInterruptHandler
  7544 ;; This function is called by:
  7545 ;;		_main
  7546 ;; This function uses a reentrant model
  7547 ;;
  7548                           
  7549                           	psect	text4
  7550  001D78                     __ptext4:
  7551                           	opt callstack 0
  7552  001D78                     _start_switch_handler:
  7553                           	opt callstack 14
  7554                           
  7555                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  7556                           
  7557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7558                           ;incstack = 0
  7559  001D78  0139               	movlb	57	; () banked
  7560  001D7A  9195               	bcf	149,0,b	;volatile
  7561                           
  7562                           ; BSR set to: 57
  7563                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  7564  001D7C  0E7A               	movlw	low _switch_handler
  7565  001D7E  6EE6               	movwf	postinc1,c
  7566  001D80  0EE6               	movlw	high _switch_handler
  7567  001D82  6EE6               	movwf	postinc1,c
  7568  001D84  0E01               	movlw	low (_switch_handler shr (0+16))
  7569  001D86  6EE6               	movwf	postinc1,c
  7570  001D88  EC7F  F00D         	call	_INT1_SetInterruptHandler	;wreg free
  7571                           
  7572                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  7573  001D8C  0E02               	movlw	2
  7574  001D8E  0102               	movlb	2	; () banked
  7575  001D90  6FCE               	movwf	(_S+35)& (0+255),b	;volatile
  7576                           
  7577                           ; BSR set to: 2
  7578                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  7579  001D92  0139               	movlb	57	; () banked
  7580  001D94  8195               	bsf	149,0,b	;volatile
  7581                           
  7582                           ; BSR set to: 57
  7583                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  7584  001D96  0012               	return		;funcret
  7585  001D98                     __end_of_start_switch_handler:
  7586                           	opt callstack 0
  7587                           
  7588 ;; *************** function _srand *****************
  7589 ;; Defined at:
  7590 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  7591 ;; Parameters:    Size  Location     Type
  7592 ;;  s               2  [STACK] unsigned int 
  7593 ;; Auto vars:     Size  Location     Type
  7594 ;;		None
  7595 ;; Return value:  Size  Location     Type
  7596 ;;                  1  [STACK] void 
  7597 ;; Registers used:
  7598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  7599 ;; Tracked objects:
  7600 ;;		On entry : 0/0
  7601 ;;		On exit  : 3F/2
  7602 ;;		Unchanged: 0/0
  7603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7608 ;;Total ram usage:        0 bytes
  7609 ;; Hardware stack levels used:    1
  7610 ;; Hardware stack levels required when called:   15
  7611 ;; This function calls:
  7612 ;;		Nothing
  7613 ;; This function is called by:
  7614 ;;		_main
  7615 ;; This function uses a reentrant model
  7616 ;;
  7617                           
  7618                           	psect	text5
  7619  00171E                     __ptext5:
  7620                           	opt callstack 0
  7621  00171E                     _srand:
  7622                           	opt callstack 15
  7623                           
  7624                           ;stkvar	_s @ sp[(0)+-2]
  7625                           
  7626                           ; BSR set to: 57
  7627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7628                           ;incstack = 0
  7629  00171E  0EFE               	movlw	-2
  7630  001720  50E3               	movf	plusw1,w,c
  7631  001722  0FFF               	addlw	255
  7632  001724  6E0B               	movwf	(btemp+10)^0,c
  7633  001726  0EFF               	movlw	-1
  7634  001728  006F FF8C  F00C    	movff	plusw1,btemp+11
  7635  00172E  0EFF               	movlw	255
  7636  001730  220C               	addwfc	(btemp+11)^0,f,c
  7637  001732  0060  F02C  F2EE   	movff	btemp+10,_seed
  7638  001738  0060  F030  F2EF   	movff	btemp+11,_seed+1
  7639  00173E  0102               	movlb	2	; () banked
  7640  001740  6BF0               	clrf	(_seed+2)& (0+255),b
  7641  001742  6BF1               	clrf	(_seed+3)& (0+255),b
  7642  001744  6BF2               	clrf	(_seed+4)& (0+255),b
  7643  001746  6BF3               	clrf	(_seed+5)& (0+255),b
  7644  001748  6BF4               	clrf	(_seed+6)& (0+255),b
  7645  00174A  6BF5               	clrf	(_seed+7)& (0+255),b
  7646                           
  7647                           ; BSR set to: 2
  7648                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  7649  00174C  52E5               	movf	postdec1,f,c
  7650  00174E  52E5               	movf	postdec1,f,c
  7651  001750  0012               	return		;funcret
  7652  001752                     __end_of_srand:
  7653                           	opt callstack 0
  7654                           
  7655 ;; *************** function _set_dac_b *****************
  7656 ;; Defined at:
  7657 ;;		line 306 in file "daq.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;  voltage         4  [STACK] const float 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;		None
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  2  [STACK] unsigned short 
  7664 ;; Registers used:
  7665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7675 ;;Total ram usage:        0 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; Hardware stack levels required when called:   17
  7678 ;; This function calls:
  7679 ;;		_convert_dac_raw
  7680 ;; This function is called by:
  7681 ;;		_main
  7682 ;; This function uses a reentrant model
  7683 ;;
  7684                           
  7685                           	psect	text6
  7686  001752                     __ptext6:
  7687                           	opt callstack 0
  7688  001752                     _set_dac_b:
  7689                           	opt callstack 13
  7690                           
  7691                           ;daq.c: 306: uint16_t set_dac_b(const float voltage);daq.c: 307: {;daq.c: 308:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  7692                           ;stkvar	_voltage @ sp[(0)+-4]
  7693                           
  7694                           ; BSR set to: 2
  7695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7696                           ;incstack = 0
  7697  001752  0EFC               	movlw	-4
  7698  001754  006F FF8F FFE6     	movff	plusw1,postinc1
  7699  00175A  006F FF8F FFE6     	movff	plusw1,postinc1
  7700  001760  006F FF8F FFE6     	movff	plusw1,postinc1
  7701  001766  006F FF8F FFE6     	movff	plusw1,postinc1
  7702  00176C  EC39  F0F6         	call	_convert_dac_raw	;wreg free
  7703  001770  0060  F004  F222   	movff	btemp,_R+34	;volatile
  7704  001776  0060  F008  F223   	movff	btemp+1,_R+35	;volatile
  7705                           
  7706                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7707                           
  7708                           ;daq.c: 309:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  7709  00177C  52E5               	movf	postdec1,f,c
  7710  00177E  52E5               	movf	postdec1,f,c
  7711  001780  52E5               	movf	postdec1,f,c
  7712  001782  52E5               	movf	postdec1,f,c
  7713  001784  0012               	return		;funcret
  7714  001786                     __end_of_set_dac_b:
  7715                           	opt callstack 0
  7716                           
  7717 ;; *************** function _set_dac_a *****************
  7718 ;; Defined at:
  7719 ;;		line 297 in file "daq.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;  voltage         4  [STACK] const float 
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;		None
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  2  [STACK] unsigned short 
  7726 ;; Registers used:
  7727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7728 ;; Tracked objects:
  7729 ;;		On entry : 3F/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7737 ;;Total ram usage:        0 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:   17
  7740 ;; This function calls:
  7741 ;;		_convert_dac_raw
  7742 ;; This function is called by:
  7743 ;;		_main
  7744 ;; This function uses a reentrant model
  7745 ;;
  7746                           
  7747                           	psect	text7
  7748  001786                     __ptext7:
  7749                           	opt callstack 0
  7750  001786                     _set_dac_a:
  7751                           	opt callstack 13
  7752                           
  7753                           ;daq.c: 297: uint16_t set_dac_a(const float voltage);daq.c: 298: {;daq.c: 299:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  7754                           ;stkvar	_voltage @ sp[(0)+-4]
  7755                           
  7756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7757                           ;incstack = 0
  7758  001786  0EFC               	movlw	-4
  7759  001788  006F FF8F FFE6     	movff	plusw1,postinc1
  7760  00178E  006F FF8F FFE6     	movff	plusw1,postinc1
  7761  001794  006F FF8F FFE6     	movff	plusw1,postinc1
  7762  00179A  006F FF8F FFE6     	movff	plusw1,postinc1
  7763  0017A0  EC39  F0F6         	call	_convert_dac_raw	;wreg free
  7764  0017A4  0060  F004  F220   	movff	btemp,_R+32	;volatile
  7765  0017AA  0060  F008  F221   	movff	btemp+1,_R+33	;volatile
  7766                           
  7767                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  7768                           
  7769                           ;daq.c: 300:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  7770  0017B0  52E5               	movf	postdec1,f,c
  7771  0017B2  52E5               	movf	postdec1,f,c
  7772  0017B4  52E5               	movf	postdec1,f,c
  7773  0017B6  52E5               	movf	postdec1,f,c
  7774  0017B8  0012               	return		;funcret
  7775  0017BA                     __end_of_set_dac_a:
  7776                           	opt callstack 0
  7777                           
  7778 ;; *************** function _convert_dac_raw *****************
  7779 ;; Defined at:
  7780 ;;		line 279 in file "daq.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;  voltage         4  [STACK] float 
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;		None
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  2  [STACK] unsigned short 
  7787 ;; Registers used:
  7788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7798 ;;Total ram usage:        0 bytes
  7799 ;; Hardware stack levels used:    1
  7800 ;; Hardware stack levels required when called:   16
  7801 ;; This function calls:
  7802 ;;		___fldiv
  7803 ;;		___flge
  7804 ;;		___fltol
  7805 ;; This function is called by:
  7806 ;;		_set_dac_a
  7807 ;;		_set_dac_b
  7808 ;; This function uses a reentrant model
  7809 ;;
  7810                           
  7811                           	psect	text8
  7812  01EC72                     __ptext8:
  7813                           	opt callstack 0
  7814  01EC72                     _convert_dac_raw:
  7815                           	opt callstack 13
  7816                           
  7817                           ;daq.c: 279: static uint16_t convert_dac_raw(float voltage);daq.c: 280: {;daq.c: 284:  i
      +                          f (voltage < 0.001)
  7818                           
  7819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7820                           ;incstack = 0
  7821  01EC72  0E6F               	movlw	111
  7822  01EC74  6EE6               	movwf	postinc1,c
  7823  01EC76  0E12               	movlw	18
  7824  01EC78  6EE6               	movwf	postinc1,c
  7825  01EC7A  0E83               	movlw	131
  7826  01EC7C  6EE6               	movwf	postinc1,c
  7827  01EC7E  0E3A               	movlw	58
  7828  01EC80  6EE6               	movwf	postinc1,c
  7829                           
  7830                           ;stkvar	_voltage @ sp[(-4)+-4]
  7831  01EC82  0EF8               	movlw	-8
  7832  01EC84  006F FF8F FFE6     	movff	plusw1,postinc1
  7833  01EC8A  006F FF8F FFE6     	movff	plusw1,postinc1
  7834  01EC90  006F FF8F FFE6     	movff	plusw1,postinc1
  7835  01EC96  006F FF8F FFE6     	movff	plusw1,postinc1
  7836  01EC9C  EC2B  F0EF         	call	___flge	;wreg free
  7837  01ECA0  B001               	btfsc	btemp& (0+255),0,c
  7838  01ECA2  D018               	goto	l13625
  7839                           
  7840                           ;daq.c: 285:   voltage = 0.001;
  7841  01ECA4  0E6F               	movlw	111
  7842  01ECA6  6E09               	movwf	(btemp+8)^0,c
  7843  01ECA8  0E12               	movlw	18
  7844  01ECAA  6E0A               	movwf	(btemp+9)^0,c
  7845  01ECAC  0E83               	movlw	131
  7846  01ECAE  6E0B               	movwf	(btemp+10)^0,c
  7847  01ECB0  0E3A               	movlw	58
  7848  01ECB2  6E0C               	movwf	(btemp+11)^0,c
  7849                           
  7850                           ;stkvar	_voltage @ sp[(0)+-4]
  7851  01ECB4  0EFC               	movlw	-4
  7852  01ECB6  0060  F027  FFE3   	movff	btemp+8,plusw1
  7853  01ECBC  0EFD               	movlw	-3
  7854  01ECBE  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7855  01ECC4  0EFE               	movlw	-2
  7856  01ECC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7857  01ECCC  0EFF               	movlw	-1
  7858  01ECCE  0060  F033  FFE3   	movff	btemp+11,plusw1
  7859  01ECD4                     l13625:
  7860                           
  7861                           ;daq.c: 286:  if (voltage > 10.0)
  7862                           ;stkvar	_voltage @ sp[(0)+-4]
  7863  01ECD4  0EFC               	movlw	-4
  7864  01ECD6  006F FF8F FFE6     	movff	plusw1,postinc1
  7865  01ECDC  006F FF8F FFE6     	movff	plusw1,postinc1
  7866  01ECE2  006F FF8F FFE6     	movff	plusw1,postinc1
  7867  01ECE8  006F FF8F FFE6     	movff	plusw1,postinc1
  7868  01ECEE  0E00               	movlw	0
  7869  01ECF0  6EE6               	movwf	postinc1,c
  7870  01ECF2  0E00               	movlw	0
  7871  01ECF4  6EE6               	movwf	postinc1,c
  7872  01ECF6  0E20               	movlw	32
  7873  01ECF8  6EE6               	movwf	postinc1,c
  7874  01ECFA  0E41               	movlw	65
  7875  01ECFC  6EE6               	movwf	postinc1,c
  7876  01ECFE  EC2B  F0EF         	call	___flge	;wreg free
  7877  01ED02  B001               	btfsc	btemp& (0+255),0,c
  7878  01ED04  D018               	goto	l13629
  7879                           
  7880                           ;daq.c: 287:   voltage = 10.0;
  7881  01ED06  0E00               	movlw	0
  7882  01ED08  6E09               	movwf	(btemp+8)^0,c
  7883  01ED0A  0E00               	movlw	0
  7884  01ED0C  6E0A               	movwf	(btemp+9)^0,c
  7885  01ED0E  0E20               	movlw	32
  7886  01ED10  6E0B               	movwf	(btemp+10)^0,c
  7887  01ED12  0E41               	movlw	65
  7888  01ED14  6E0C               	movwf	(btemp+11)^0,c
  7889                           
  7890                           ;stkvar	_voltage @ sp[(0)+-4]
  7891  01ED16  0EFC               	movlw	-4
  7892  01ED18  0060  F027  FFE3   	movff	btemp+8,plusw1
  7893  01ED1E  0EFD               	movlw	-3
  7894  01ED20  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7895  01ED26  0EFE               	movlw	-2
  7896  01ED28  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7897  01ED2E  0EFF               	movlw	-1
  7898  01ED30  0060  F033  FFE3   	movff	btemp+11,plusw1
  7899  01ED36                     l13629:
  7900                           
  7901                           ;daq.c: 291:  return(uint16_t) (voltage / 0.002442);
  7902  01ED36  0EF6               	movlw	246
  7903  01ED38  6EE6               	movwf	postinc1,c
  7904  01ED3A  0E09               	movlw	9
  7905  01ED3C  6EE6               	movwf	postinc1,c
  7906  01ED3E  0E20               	movlw	32
  7907  01ED40  6EE6               	movwf	postinc1,c
  7908  01ED42  0E3B               	movlw	59
  7909  01ED44  6EE6               	movwf	postinc1,c
  7910                           
  7911                           ;stkvar	_voltage @ sp[(-4)+-4]
  7912  01ED46  0EF8               	movlw	-8
  7913  01ED48  006F FF8F FFE6     	movff	plusw1,postinc1
  7914  01ED4E  006F FF8F FFE6     	movff	plusw1,postinc1
  7915  01ED54  006F FF8F FFE6     	movff	plusw1,postinc1
  7916  01ED5A  006F FF8F FFE6     	movff	plusw1,postinc1
  7917  01ED60  ECDA  F0BC         	call	___fldiv	;wreg free
  7918  01ED64  0060  F007  FFE6   	movff	btemp,postinc1
  7919  01ED6A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7920  01ED70  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7921  01ED76  0060  F013  FFE6   	movff	btemp+3,postinc1
  7922  01ED7C  ECBF  F0ED         	call	___fltol	;wreg free
  7923                           
  7924                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  7925  01ED80  52E5               	movf	postdec1,f,c
  7926  01ED82  52E5               	movf	postdec1,f,c
  7927  01ED84  52E5               	movf	postdec1,f,c
  7928  01ED86  52E5               	movf	postdec1,f,c
  7929  01ED88  0012               	return		;funcret
  7930  01ED8A                     __end_of_convert_dac_raw:
  7931                           	opt callstack 0
  7932                           
  7933 ;; *************** function _set_dac *****************
  7934 ;; Defined at:
  7935 ;;		line 255 in file "daq.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;		None
  7938 ;; Auto vars:     Size  Location     Type
  7939 ;;		None
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  1  [STACK] void 
  7942 ;; Registers used:
  7943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7953 ;;Total ram usage:        0 bytes
  7954 ;; Hardware stack levels used:    1
  7955 ;; Hardware stack levels required when called:   16
  7956 ;; This function calls:
  7957 ;;		_SPI1_Exchange8bit
  7958 ;;		_dac_spi_control
  7959 ;; This function is called by:
  7960 ;;		_main
  7961 ;; This function uses a reentrant model
  7962 ;;
  7963                           
  7964                           	psect	text9
  7965  01FCBC                     __ptext9:
  7966                           	opt callstack 0
  7967  01FCBC                     _set_dac:
  7968                           	opt callstack 14
  7969                           
  7970                           ;daq.c: 257:  while (!SPI1STATUSbits.TXBE);
  7971                           
  7972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7973                           ;incstack = 0
  7974  01FCBC  013D               	movlb	61	; () banked
  7975  01FCBE  AB17               	btfss	23,5,b	;volatile
  7976  01FCC0  D7FD               	goto	_set_dac
  7977                           
  7978                           ; BSR set to: 61
  7979                           
  7980                           ;daq.c: 258:  do { LATCbits.LATC2 = 1; } while(0);
  7981  01FCC2  84BC               	bsf	188,2,c	;volatile
  7982                           
  7983                           ; BSR set to: 61
  7984                           
  7985                           ;daq.c: 259:  do { LATCbits.LATC0 = 1; } while(0);
  7986  01FCC4  80BC               	bsf	188,0,c	;volatile
  7987                           
  7988                           ; BSR set to: 61
  7989                           ;daq.c: 260:  dac_spi_control(1);
  7990  01FCC6  0E01               	movlw	1
  7991  01FCC8  6EE6               	movwf	postinc1,c
  7992  01FCCA  EC6A  F004         	call	_dac_spi_control	;wreg free
  7993                           
  7994                           ;daq.c: 261:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  7995  01FCCE  C220  F224         	movff	_R+32,_R+36	;volatile
  7996                           
  7997                           ;daq.c: 262:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  7998  01FCD2  EE20  F220         	lfsr	2,_R+32	;volatile
  7999  01FCD6  006F FF78  F00B    	movff	postinc2,btemp+10
  8000  01FCDC  006F FF74  F00C    	movff	postdec2,btemp+11
  8001  01FCE2  0060  F030  F00B   	movff	btemp+11,btemp+10
  8002  01FCE8  6A0C               	clrf	(btemp+11)^0,c
  8003  01FCEA  0E0F               	movlw	15
  8004  01FCEC  160B               	andwf	(btemp+10)^0,f,c
  8005  01FCEE  0102               	movlb	2	; () banked
  8006  01FCF0  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8007  01FCF2  180B               	xorwf	(btemp+10)^0,w,c
  8008  01FCF4  0BF0               	andlw	-16
  8009  01FCF6  180B               	xorwf	(btemp+10)^0,w,c
  8010  01FCF8  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8011                           
  8012                           ; BSR set to: 2
  8013                           ;daq.c: 263:  R.max5322_cmd.map.cont = 0b0100;
  8014  01FCFA  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8015  01FCFC  0B0F               	andlw	-241
  8016  01FCFE  0940               	iorlw	64
  8017  01FD00  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8018                           
  8019                           ; BSR set to: 2
  8020  01FD02  90BF               	bcf	191,0,c	;volatile
  8021                           
  8022                           ; BSR set to: 2
  8023                           ;daq.c: 265:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8024  01FD04  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8025  01FD06  6EE6               	movwf	postinc1,c
  8026  01FD08  ECEC  F00E         	call	_SPI1_Exchange8bit	;wreg free
  8027                           
  8028                           ; BSR set to: 57
  8029                           ;daq.c: 266:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8030  01FD0C  0102               	movlb	2	; () banked
  8031  01FD0E  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8032  01FD10  6EE6               	movwf	postinc1,c
  8033  01FD12  ECEC  F00E         	call	_SPI1_Exchange8bit	;wreg free
  8034                           
  8035                           ; BSR set to: 57
  8036  01FD16  80BF               	bsf	191,0,c	;volatile
  8037                           
  8038                           ; BSR set to: 57
  8039                           ;daq.c: 268:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  8040  01FD18  C222  F224         	movff	_R+34,_R+36	;volatile
  8041                           
  8042                           ; BSR set to: 57
  8043                           ;daq.c: 269:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  8044  01FD1C  EE20  F222         	lfsr	2,_R+34	;volatile
  8045  01FD20  006F FF78  F00B    	movff	postinc2,btemp+10
  8046  01FD26  006F FF74  F00C    	movff	postdec2,btemp+11
  8047  01FD2C  0060  F030  F00B   	movff	btemp+11,btemp+10
  8048  01FD32  6A0C               	clrf	(btemp+11)^0,c
  8049  01FD34  0E0F               	movlw	15
  8050  01FD36  160B               	andwf	(btemp+10)^0,f,c
  8051  01FD38  0102               	movlb	2	; () banked
  8052  01FD3A  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8053  01FD3C  180B               	xorwf	(btemp+10)^0,w,c
  8054  01FD3E  0BF0               	andlw	-16
  8055  01FD40  180B               	xorwf	(btemp+10)^0,w,c
  8056  01FD42  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8057                           
  8058                           ; BSR set to: 2
  8059                           ;daq.c: 270:  R.max5322_cmd.map.cont = 0b0101;
  8060  01FD44  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8061  01FD46  0B0F               	andlw	-241
  8062  01FD48  0950               	iorlw	80
  8063  01FD4A  6F25               	movwf	(_R+37)& (0+255),b	;volatile
  8064                           
  8065                           ; BSR set to: 2
  8066  01FD4C  90BF               	bcf	191,0,c	;volatile
  8067                           
  8068                           ; BSR set to: 2
  8069                           ;daq.c: 272:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  8070  01FD4E  5125               	movf	(_R+37)& (0+255),w,b	;volatile
  8071  01FD50  6EE6               	movwf	postinc1,c
  8072  01FD52  ECEC  F00E         	call	_SPI1_Exchange8bit	;wreg free
  8073                           
  8074                           ; BSR set to: 57
  8075                           ;daq.c: 273:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  8076  01FD56  0102               	movlb	2	; () banked
  8077  01FD58  5124               	movf	(_R+36)& (0+255),w,b	;volatile
  8078  01FD5A  6EE6               	movwf	postinc1,c
  8079  01FD5C  ECEC  F00E         	call	_SPI1_Exchange8bit	;wreg free
  8080  01FD60                     l2027:
  8081  01FD60  013D               	movlb	61	; () banked
  8082  01FD62  AB17               	btfss	23,5,b	;volatile
  8083  01FD64  D7FD               	goto	l2027
  8084                           
  8085                           ; BSR set to: 61
  8086                           
  8087                           ;daq.c: 275:  do { LATFbits.LATF0 = 1; } while(0);
  8088  01FD66  80BF               	bsf	191,0,c	;volatile
  8089                           
  8090                           ; BSR set to: 61
  8091                           ;daq.c: 276:  dac_spi_control(0);
  8092  01FD68  0E00               	movlw	0
  8093  01FD6A  6EE6               	movwf	postinc1,c
  8094  01FD6C  EC6A  F004         	call	_dac_spi_control	;wreg free
  8095                           
  8096                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  8097  01FD70  0012               	return		;funcret
  8098  01FD72                     __end_of_set_dac:
  8099                           	opt callstack 0
  8100                           
  8101 ;; *************** function _dac_spi_control *****************
  8102 ;; Defined at:
  8103 ;;		line 207 in file "daq.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;  set             1  [STACK] _Bool 
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;		None
  8108 ;; Return value:  Size  Location     Type
  8109 ;;                  1  [STACK] void 
  8110 ;; Registers used:
  8111 ;;		wreg, fsr1l, fsr1h, status,2
  8112 ;; Tracked objects:
  8113 ;;		On entry : 3F/3D
  8114 ;;		On exit  : 0/0
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8121 ;;Total ram usage:        0 bytes
  8122 ;; Hardware stack levels used:    1
  8123 ;; Hardware stack levels required when called:   15
  8124 ;; This function calls:
  8125 ;;		Nothing
  8126 ;; This function is called by:
  8127 ;;		_set_dac
  8128 ;; This function uses a reentrant model
  8129 ;;
  8130                           
  8131                           	psect	text10
  8132  0008D4                     __ptext10:
  8133                           	opt callstack 0
  8134  0008D4                     _dac_spi_control:
  8135                           	opt callstack 14
  8136                           
  8137                           ;daq.c: 207: void dac_spi_control(_Bool set);daq.c: 208: {;daq.c: 209:  static _Bool ini
      +                          t = 0;;daq.c: 210:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 212:  if (set) {
  8138                           ;stkvar	_set @ sp[(0)+-1]
  8139                           
  8140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8141                           ;incstack = 0
  8142  0008D4  0EFF               	movlw	-1
  8143  0008D6  50E3               	movf	plusw1,w,c
  8144  0008D8  B4D8               	btfsc	status,2,c
  8145  0008DA  D022               	goto	l13617
  8146                           
  8147                           ;daq.c: 213:   SPI1CON0bits.EN = 0;
  8148  0008DC  013D               	movlb	61	; () banked
  8149  0008DE  9F14               	bcf	20,7,b	;volatile
  8150                           
  8151                           ; BSR set to: 61
  8152                           ;daq.c: 214:   if (!init) {
  8153  0008E0  5042               	movf	dac_spi_control@init^0,w,c
  8154  0008E2  A4D8               	btfss	status,2,c
  8155  0008E4  D011               	goto	l13605
  8156                           
  8157                           ; BSR set to: 61
  8158                           ;daq.c: 215:    init = 1;
  8159  0008E6  0E01               	movlw	1
  8160  0008E8  6E42               	movwf	dac_spi_control@init^0,c
  8161                           
  8162                           ; BSR set to: 61
  8163                           ;daq.c: 216:    S0 = SPI1CON0;
  8164  0008EA  006F F450  F0D5    	movff	15636,dac_spi_control@S0	;volatile
  8165                           
  8166                           ; BSR set to: 61
  8167                           ;daq.c: 217:    S1 = SPI1CON1;
  8168  0008F0  006F F454  F0D4    	movff	15637,dac_spi_control@S1	;volatile
  8169                           
  8170                           ; BSR set to: 61
  8171                           ;daq.c: 218:    S2 = SPI1CON2;
  8172  0008F6  006F F458  F0D3    	movff	15638,dac_spi_control@S2	;volatile
  8173                           
  8174                           ; BSR set to: 61
  8175                           ;daq.c: 219:    SC = SPI1CLK;
  8176  0008FC  006F F470  F0D2    	movff	15644,dac_spi_control@SC	;volatile
  8177                           
  8178                           ; BSR set to: 61
  8179                           ;daq.c: 220:    SB = SPI1BAUD;
  8180  000902  006F F464  F0D1    	movff	15641,dac_spi_control@SB	;volatile
  8181  000908                     l13605:
  8182                           
  8183                           ; BSR set to: 61
  8184                           ;daq.c: 226:   SPI1CON1 = 0x00;
  8185  000908  6B15               	clrf	21,b	;volatile
  8186                           
  8187                           ; BSR set to: 61
  8188                           ;daq.c: 227:   SPI1CON1bits.CKE = 1;
  8189  00090A  8D15               	bsf	21,6,b	;volatile
  8190                           
  8191                           ; BSR set to: 61
  8192                           ;daq.c: 228:   SPI1CON1bits.CKP = 0;
  8193  00090C  9B15               	bcf	21,5,b	;volatile
  8194                           
  8195                           ; BSR set to: 61
  8196                           ;daq.c: 229:   SPI1CON1bits.SMP = 0;
  8197  00090E  9F15               	bcf	21,7,b	;volatile
  8198                           
  8199                           ;daq.c: 231:   SPI1CON2 = 0x03;
  8200  000910  0E03               	movlw	3
  8201  000912  6F16               	movwf	22,b	;volatile
  8202                           
  8203                           ;daq.c: 233:   SPI1BAUD = 0x0f;
  8204  000914  0E0F               	movlw	15
  8205  000916  6F19               	movwf	25,b	;volatile
  8206                           
  8207                           ; BSR set to: 61
  8208                           ;daq.c: 235:   SPI1CLK = 0x00;
  8209  000918  6B1C               	clrf	28,b	;volatile
  8210                           
  8211                           ;daq.c: 237:   SPI1CON0 = 0x83;
  8212  00091A  0E83               	movlw	131
  8213  00091C  6F14               	movwf	20,b	;volatile
  8214  00091E  D014               	goto	L3
  8215  000920                     l13617:
  8216                           
  8217                           ;daq.c: 240:   if (init) {
  8218  000920  5042               	movf	dac_spi_control@init^0,w,c
  8219  000922  B4D8               	btfsc	status,2,c
  8220  000924  D012               	goto	l2011
  8221                           
  8222                           ;daq.c: 244:    SPI1CON0bits.EN = 0;
  8223  000926  013D               	movlb	61	; () banked
  8224  000928  9F14               	bcf	20,7,b	;volatile
  8225                           
  8226                           ;daq.c: 245:    SPI1CON1 = S1;
  8227  00092A  0060  F353  FD15   	movff	dac_spi_control@S1,15637	;volatile
  8228                           
  8229                           ;daq.c: 246:    SPI1CON2 = S2;
  8230  000930  0060  F34F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  8231                           
  8232                           ;daq.c: 247:    SPI1CLK = SC;
  8233  000936  0060  F34B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  8234                           
  8235                           ;daq.c: 248:    SPI1BAUD = SB;
  8236  00093C  0060  F347  FD19   	movff	dac_spi_control@SB,15641	;volatile
  8237                           
  8238                           ;daq.c: 249:    SPI1CON0 = S0;
  8239  000942  0060  F357  FD14   	movff	dac_spi_control@S0,15636	;volatile
  8240  000948                     L3:
  8241                           
  8242                           ;daq.c: 250:    SPI1CON0bits.EN = 1;
  8243  000948  8F14               	bsf	20,7,b	;volatile
  8244  00094A                     l2011:
  8245                           
  8246                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  8247  00094A  52E5               	movf	postdec1,f,c
  8248  00094C  0012               	return		;funcret
  8249  00094E                     __end_of_dac_spi_control:
  8250                           	opt callstack 0
  8251                           
  8252 ;; *************** function _read_cal_data *****************
  8253 ;; Defined at:
  8254 ;;		line 368 in file "daq.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;		None
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;  x               2  [STACK] unsigned short 
  8259 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  8260 ;;		 -> r_cal(171), 
  8261 ;;  y               2  [STACK] unsigned short 
  8262 ;;  crcVal_save     1  [STACK] unsigned char 
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  1  [STACK] _Bool 
  8265 ;; Registers used:
  8266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/39
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8276 ;;Total ram usage:        0 bytes
  8277 ;; Hardware stack levels used:    1
  8278 ;; Hardware stack levels required when called:   17
  8279 ;; This function calls:
  8280 ;;		_CRC_8BitDataWrite
  8281 ;;		_CRC_CalculatedResultGet
  8282 ;;		_CRC_Initialize
  8283 ;;		_CRC_IsBusy
  8284 ;;		_CRC_Start
  8285 ;;		_DATAEE_ReadByte
  8286 ;; This function is called by:
  8287 ;;		_main
  8288 ;; This function uses a reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text11
  8292  01CD0A                     __ptext11:
  8293                           	opt callstack 0
  8294  01CD0A                     _read_cal_data:
  8295                           	opt callstack 0
  8296                           
  8297                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8298  01CD0A  0E07               	movlw	7
  8299  01CD0C  26E1               	addwf	fsr1l,f,c
  8300  01CD0E  0E00               	movlw	0
  8301  01CD10  22E2               	addwfc	fsr1h,f,c
  8302                           
  8303                           ;daq.c: 370:  uint16_t x = 0, y;
  8304                           ;stkvar	_x @ sp[(-7)+0]
  8305                           
  8306                           ;incstack = 0
  8307  01CD12  0EF9               	movlw	-7
  8308  01CD14  6AE3               	clrf	plusw1,c
  8309  01CD16  0EFA               	movlw	-6
  8310  01CD18  6AE3               	clrf	plusw1,c
  8311                           
  8312                           ;daq.c: 371:  uint8_t *r_cal_ptr, crcVal_save;;daq.c: 373:  y = sizeof(r_cal);
  8313  01CD1A  0EAB               	movlw	171
  8314  01CD1C  6E0B               	movwf	(btemp+10)^0,c
  8315  01CD1E  0E00               	movlw	0
  8316  01CD20  6E0C               	movwf	(btemp+11)^0,c
  8317                           
  8318                           ;stkvar	_y @ sp[(-7)+4]
  8319  01CD22  0EFD               	movlw	-3
  8320  01CD24  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8321  01CD2A  0EFE               	movlw	-2
  8322  01CD2C  0060  F033  FFE3   	movff	btemp+11,plusw1
  8323                           
  8324                           ;daq.c: 374:  r_cal_ptr = (uint8_t*) & r_cal;
  8325                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8326  01CD32  0E05               	movlw	high _r_cal
  8327  01CD34  6E01               	movwf	btemp^0,c
  8328  01CD36  0EFC               	movlw	-4
  8329  01CD38  0060  F007  FFE3   	movff	btemp,plusw1
  8330  01CD3E  0E00               	movlw	low _r_cal
  8331  01CD40  6E01               	movwf	btemp^0,c
  8332  01CD42  0EFB               	movlw	-5
  8333  01CD44  0060  F007  FFE3   	movff	btemp,plusw1
  8334                           
  8335                           ;daq.c: 376:  CRC_Initialize();
  8336  01CD4A  EC1C  F003         	call	_CRC_Initialize	;wreg free
  8337                           
  8338                           ; BSR set to: 0
  8339                           ;daq.c: 379:  CRC_Start();
  8340  01CD4E  EC21  F010         	call	_CRC_Start	;wreg free
  8341  01CD52                     l14051:
  8342                           
  8343                           ;daq.c: 382:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  8344                           ;stkvar	_x @ sp[(-7)+0]
  8345  01CD52  0EF9               	movlw	-7
  8346  01CD54  006F FF8F FFE6     	movff	plusw1,postinc1
  8347  01CD5A  006F FF8F FFE6     	movff	plusw1,postinc1
  8348  01CD60  ECF7  F00B         	call	_DATAEE_ReadByte	;wreg free
  8349                           
  8350                           ;stkvar	_x @ sp[(-7)+0]
  8351  01CD64  0EF9               	movlw	-7
  8352  01CD66  006F FF8C  F00B    	movff	plusw1,btemp+10
  8353  01CD6C  0EFA               	movlw	-6
  8354  01CD6E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8355                           
  8356                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8357  01CD74  0EFB               	movlw	-5
  8358  01CD76  006F FF8C  F009    	movff	plusw1,btemp+8
  8359  01CD7C  0EFC               	movlw	-4
  8360  01CD7E  006F FF8C  F00A    	movff	plusw1,btemp+9
  8361  01CD84  500B               	movf	(btemp+10)^0,w,c
  8362  01CD86  2409               	addwf	(btemp+8)^0,w,c
  8363  01CD88  6ED9               	movwf	fsr2l,c
  8364  01CD8A  500C               	movf	(btemp+11)^0,w,c
  8365  01CD8C  200A               	addwfc	(btemp+9)^0,w,c
  8366  01CD8E  6EDA               	movwf	fsr2h,c
  8367  01CD90  0060  F007  FFDF   	movff	btemp,indf2
  8368                           
  8369                           ;daq.c: 383:  } while (++x < y);
  8370                           ;stkvar	_y @ sp[(-7)+4]
  8371  01CD96  0EFD               	movlw	-3
  8372  01CD98  006F FF8C  F00B    	movff	plusw1,btemp+10
  8373  01CD9E  0EFE               	movlw	-2
  8374  01CDA0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8375                           
  8376                           ;stkvar	_x @ sp[(-7)+0]
  8377  01CDA6  0EF9               	movlw	-7
  8378  01CDA8  50E3               	movf	plusw1,w,c
  8379  01CDAA  0F01               	addlw	1
  8380  01CDAC  6E01               	movwf	btemp^0,c
  8381  01CDAE  0EF9               	movlw	-7
  8382  01CDB0  0060  F007  FFE3   	movff	btemp,plusw1
  8383  01CDB6  6A01               	clrf	btemp^0,c
  8384  01CDB8  0EFA               	movlw	-6
  8385  01CDBA  50E3               	movf	plusw1,w,c
  8386  01CDBC  2001               	addwfc	btemp^0,w,c
  8387  01CDBE  6E01               	movwf	btemp^0,c
  8388  01CDC0  0EFA               	movlw	-6
  8389  01CDC2  0060  F007  FFE3   	movff	btemp,plusw1
  8390  01CDC8  0EF9               	movlw	-7
  8391  01CDCA  006F FF8C  F009    	movff	plusw1,btemp+8
  8392  01CDD0  0EFA               	movlw	-6
  8393  01CDD2  006F FF8C  F00A    	movff	plusw1,btemp+9
  8394  01CDD8  500B               	movf	(btemp+10)^0,w,c
  8395  01CDDA  5C09               	subwf	(btemp+8)^0,w,c
  8396  01CDDC  500C               	movf	(btemp+11)^0,w,c
  8397  01CDDE  580A               	subwfb	(btemp+9)^0,w,c
  8398  01CDE0  A0D8               	btfss	status,0,c
  8399  01CDE2  D7B7               	goto	l14051
  8400                           
  8401                           ;daq.c: 384:  crcVal_save = r_cal.crc;
  8402                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8403  01CDE4  0EFF               	movlw	-1
  8404  01CDE6  0061  F6AB  FFE3   	movff	_r_cal+170,plusw1
  8405                           
  8406                           ;daq.c: 386:  if (r_cal.checkmark == 0x1957) {
  8407  01CDEC  0E57               	movlw	87
  8408  01CDEE  0105               	movlb	5	; () banked
  8409  01CDF0  19A8               	xorwf	(_r_cal+168)& (0+255),w,b
  8410  01CDF2  E163               	bnz	l14071
  8411  01CDF4  0E19               	movlw	25
  8412  01CDF6  19A9               	xorwf	(_r_cal+169)& (0+255),w,b
  8413  01CDF8  A4D8               	btfss	status,2,c
  8414  01CDFA  D05F               	goto	u13270
  8415                           
  8416                           ; BSR set to: 5
  8417                           ;daq.c: 387:   r_cal.crc = 0x42;
  8418  01CDFC  0E42               	movlw	66
  8419  01CDFE  6FAA               	movwf	(_r_cal+170)& (0+255),b
  8420                           
  8421                           ; BSR set to: 5
  8422                           ;daq.c: 388:   x = 0;
  8423                           ;stkvar	_x @ sp[(-7)+0]
  8424  01CE00  0EF9               	movlw	-7
  8425  01CE02  6AE3               	clrf	plusw1,c
  8426  01CE04  0EFA               	movlw	-6
  8427  01CE06  6AE3               	clrf	plusw1,c
  8428  01CE08                     l14063:
  8429                           
  8430                           ;daq.c: 391:    CRC_8BitDataWrite(r_cal_ptr[x]);
  8431                           ;stkvar	_x @ sp[(-7)+0]
  8432  01CE08  0EF9               	movlw	-7
  8433  01CE0A  006F FF8C  F00B    	movff	plusw1,btemp+10
  8434  01CE10  0EFA               	movlw	-6
  8435  01CE12  006F FF8C  F00C    	movff	plusw1,btemp+11
  8436                           
  8437                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
  8438  01CE18  0EFB               	movlw	-5
  8439  01CE1A  006F FF8C  F009    	movff	plusw1,btemp+8
  8440  01CE20  0EFC               	movlw	-4
  8441  01CE22  006F FF8C  F00A    	movff	plusw1,btemp+9
  8442  01CE28  500B               	movf	(btemp+10)^0,w,c
  8443  01CE2A  2409               	addwf	(btemp+8)^0,w,c
  8444  01CE2C  6ED9               	movwf	fsr2l,c
  8445  01CE2E  500C               	movf	(btemp+11)^0,w,c
  8446  01CE30  200A               	addwfc	(btemp+9)^0,w,c
  8447  01CE32  6EDA               	movwf	fsr2h,c
  8448  01CE34  50DF               	movf	indf2,w,c
  8449  01CE36  6EE6               	movwf	postinc1,c
  8450  01CE38  EC92  F00F         	call	_CRC_8BitDataWrite	;wreg free
  8451  01CE3C                     l14065:
  8452  01CE3C  ECB4  F00F         	call	_CRC_IsBusy	;wreg free
  8453  01CE40  5001               	movf	btemp^0,w,c
  8454  01CE42  A4D8               	btfss	status,2,c
  8455  01CE44  D7FB               	goto	l14065
  8456                           
  8457                           ;daq.c: 393:   } while (++x < y);
  8458                           ;stkvar	_y @ sp[(-7)+4]
  8459  01CE46  0EFD               	movlw	-3
  8460  01CE48  006F FF8C  F00B    	movff	plusw1,btemp+10
  8461  01CE4E  0EFE               	movlw	-2
  8462  01CE50  006F FF8C  F00C    	movff	plusw1,btemp+11
  8463                           
  8464                           ;stkvar	_x @ sp[(-7)+0]
  8465  01CE56  0EF9               	movlw	-7
  8466  01CE58  50E3               	movf	plusw1,w,c
  8467  01CE5A  0F01               	addlw	1
  8468  01CE5C  6E01               	movwf	btemp^0,c
  8469  01CE5E  0EF9               	movlw	-7
  8470  01CE60  0060  F007  FFE3   	movff	btemp,plusw1
  8471  01CE66  6A01               	clrf	btemp^0,c
  8472  01CE68  0EFA               	movlw	-6
  8473  01CE6A  50E3               	movf	plusw1,w,c
  8474  01CE6C  2001               	addwfc	btemp^0,w,c
  8475  01CE6E  6E01               	movwf	btemp^0,c
  8476  01CE70  0EFA               	movlw	-6
  8477  01CE72  0060  F007  FFE3   	movff	btemp,plusw1
  8478  01CE78  0EF9               	movlw	-7
  8479  01CE7A  006F FF8C  F009    	movff	plusw1,btemp+8
  8480  01CE80  0EFA               	movlw	-6
  8481  01CE82  006F FF8C  F00A    	movff	plusw1,btemp+9
  8482  01CE88  500B               	movf	(btemp+10)^0,w,c
  8483  01CE8A  5C09               	subwf	(btemp+8)^0,w,c
  8484  01CE8C  500C               	movf	(btemp+11)^0,w,c
  8485  01CE8E  580A               	subwfb	(btemp+9)^0,w,c
  8486  01CE90  A0D8               	btfss	status,0,c
  8487  01CE92  D7BA               	goto	l14063
  8488                           
  8489                           ;daq.c: 394:   if (CRC_CalculatedResultGet(0, 0x00) != crcVal_save)
  8490  01CE94  0E00               	movlw	0
  8491  01CE96  6EE6               	movwf	postinc1,c
  8492  01CE98  0E00               	movlw	0
  8493  01CE9A  6EE6               	movwf	postinc1,c
  8494  01CE9C  0E00               	movlw	0
  8495  01CE9E  6EE6               	movwf	postinc1,c
  8496  01CEA0  EC06  F0ED         	call	_CRC_CalculatedResultGet	;wreg free
  8497                           
  8498                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8499  01CEA4  0EFF               	movlw	-1
  8500  01CEA6  50E3               	movf	plusw1,w,c
  8501  01CEA8  6E0B               	movwf	(btemp+10)^0,c
  8502  01CEAA  6A0C               	clrf	(btemp+11)^0,c
  8503  01CEAC  500B               	movf	(btemp+10)^0,w,c
  8504  01CEAE  1801               	xorwf	btemp^0,w,c
  8505  01CEB0  E104               	bnz	u13270
  8506  01CEB2  500C               	movf	(btemp+11)^0,w,c
  8507  01CEB4  1802               	xorwf	(btemp+1)^0,w,c
  8508  01CEB6  B4D8               	btfsc	status,2,c
  8509  01CEB8  D002               	goto	l14079
  8510  01CEBA                     u13270:
  8511  01CEBA                     l14071:
  8512                           
  8513                           ;daq.c: 395:    return 0;
  8514  01CEBA  0E00               	movlw	0
  8515  01CEBC  D005               	goto	L4
  8516  01CEBE                     l14079:
  8517                           
  8518                           ;daq.c: 399:  r_cal.crc = crcVal_save;
  8519                           ;stkvar	_crcVal_save @ sp[(-7)+6]
  8520  01CEBE  0EFF               	movlw	-1
  8521  01CEC0  006F FF8C  F5AA    	movff	plusw1,_r_cal+170
  8522                           
  8523                           ;daq.c: 400:  return 1;
  8524  01CEC6  0E01               	movlw	1
  8525  01CEC8                     L4:
  8526  01CEC8  6E01               	movwf	btemp^0,c
  8527                           
  8528                           ; _read_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8529  01CECA  0EF9               	movlw	249
  8530  01CECC  26E1               	addwf	fsr1l,f,c
  8531  01CECE  0EFF               	movlw	255
  8532  01CED0  22E2               	addwfc	fsr1h,f,c
  8533  01CED2  0012               	return		;funcret
  8534  01CED4                     __end_of_read_cal_data:
  8535                           	opt callstack 0
  8536                           
  8537 ;; *************** function _DATAEE_ReadByte *****************
  8538 ;; Defined at:
  8539 ;;		line 194 in file "mcc_generated_files/memory.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;  bAdd            2  [STACK] unsigned short 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;		None
  8544 ;; Return value:  Size  Location     Type
  8545 ;;                  1  [STACK] unsigned char 
  8546 ;; Registers used:
  8547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8548 ;; Tracked objects:
  8549 ;;		On entry : 0/39
  8550 ;;		On exit  : 0/0
  8551 ;;		Unchanged: 0/0
  8552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8557 ;;Total ram usage:        0 bytes
  8558 ;; Hardware stack levels used:    1
  8559 ;; Hardware stack levels required when called:   15
  8560 ;; This function calls:
  8561 ;;		Nothing
  8562 ;; This function is called by:
  8563 ;;		_read_cal_data
  8564 ;; This function uses a reentrant model
  8565 ;;
  8566                           
  8567                           	psect	text12
  8568  0017EE                     __ptext12:
  8569                           	opt callstack 0
  8570  0017EE                     _DATAEE_ReadByte:
  8571                           	opt callstack 14
  8572                           
  8573                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  8574                           ;stkvar	_bAdd @ sp[(0)+-2]
  8575                           
  8576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8577                           ;incstack = 0
  8578  0017EE  0EFF               	movlw	255
  8579  0017F0  24E1               	addwf	fsr1l,w,c
  8580  0017F2  6ED9               	movwf	fsr2l,c
  8581  0017F4  0EFF               	movlw	255
  8582  0017F6  20E2               	addwfc	fsr1h,w,c
  8583  0017F8  6EDA               	movwf	fsr2h,c
  8584  0017FA  50DF               	movf	indf2,w,c
  8585  0017FC  0B03               	andlw	3
  8586  0017FE  0139               	movlb	57	; () banked
  8587  001800  6FE1               	movwf	225,b	;volatile
  8588                           
  8589                           ; BSR set to: 57
  8590                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  8591                           ;stkvar	_bAdd @ sp[(0)+-2]
  8592  001802  0EFE               	movlw	-2
  8593  001804  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  8594                           
  8595                           ; BSR set to: 57
  8596                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  8597  00180A  0E3F               	movlw	-193
  8598  00180C  17E5               	andwf	229,f,b	;volsfr
  8599                           
  8600                           ; BSR set to: 57
  8601                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  8602  00180E  81E5               	bsf	229,0,b	;volsfr
  8603                           
  8604                           ; BSR set to: 57
  8605                           ;mcc_generated_files/memory.c: 200:     __nop();
  8606  001810  F000               	nop	
  8607                           
  8608                           ;mcc_generated_files/memory.c: 201:     __nop();
  8609  001812  F000               	nop	
  8610                           
  8611                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  8612  001814  006E F78C  F001    	movff	14819,btemp	;volatile
  8613                           
  8614                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  8615  00181A  52E5               	movf	postdec1,f,c
  8616  00181C  52E5               	movf	postdec1,f,c
  8617  00181E  0012               	return		;funcret
  8618  001820                     __end_of_DATAEE_ReadByte:
  8619                           	opt callstack 0
  8620                           
  8621 ;; *************** function _load_hist_data *****************
  8622 ;; Defined at:
  8623 ;;		line 224 in file "mbmc.c"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;		None
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;		None
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  1  [STACK] void 
  8630 ;; Registers used:
  8631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, btemp+11
  8632 ;; Tracked objects:
  8633 ;;		On entry : 3F/39
  8634 ;;		On exit  : 3F/39
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8641 ;;Total ram usage:        0 bytes
  8642 ;; Hardware stack levels used:    1
  8643 ;; Hardware stack levels required when called:   16
  8644 ;; This function calls:
  8645 ;;		_start_bsoc
  8646 ;;		_stop_bsoc
  8647 ;; This function is called by:
  8648 ;;		_main
  8649 ;; This function uses a reentrant model
  8650 ;;
  8651                           
  8652                           	psect	text13
  8653  001E86                     __ptext13:
  8654                           	opt callstack 0
  8655  001E86                     _load_hist_data:
  8656                           	opt callstack 14
  8657                           
  8658                           ;mbmc.c: 226:  stop_bsoc();
  8659                           
  8660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8661                           ;incstack = 0
  8662  001E86  EC2D  F010         	call	_stop_bsoc	;wreg free
  8663                           
  8664                           ; BSR set to: 57
  8665                           ;mbmc.c: 227:  C.hist[0].updates++;
  8666  001E8A  EE22  F1E9         	lfsr	2,_C+234	;volatile
  8667  001E8E  2ADE               	incf	postinc2,f,c
  8668  001E90  0E00               	movlw	0
  8669  001E92  22DE               	addwfc	postinc2,f,c
  8670  001E94  22DE               	addwfc	postinc2,f,c
  8671  001E96  22DE               	addwfc	postinc2,f,c
  8672                           
  8673                           ; BSR set to: 57
  8674                           ;mbmc.c: 228:  start_bsoc();
  8675  001E98  EC9A  F00E         	call	_start_bsoc	;wreg free
  8676                           
  8677                           ; BSR set to: 57
  8678                           ; _load_hist_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8679  001E9C  0012               	return		;funcret
  8680  001E9E                     __end_of_load_hist_data:
  8681                           	opt callstack 0
  8682                           
  8683 ;; *************** function _init_port_dma *****************
  8684 ;; Defined at:
  8685 ;;		line 104 in file "eadog.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;		None
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;		None
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1  [STACK] void 
  8692 ;; Registers used:
  8693 ;;		wreg, status,2
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/1
  8696 ;;		On exit  : 3F/3B
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8703 ;;Total ram usage:        0 bytes
  8704 ;; Hardware stack levels used:    1
  8705 ;; Hardware stack levels required when called:   15
  8706 ;; This function calls:
  8707 ;;		Nothing
  8708 ;; This function is called by:
  8709 ;;		_main
  8710 ;; This function uses a reentrant model
  8711 ;;
  8712                           
  8713                           	psect	text14
  8714  001820                     __ptext14:
  8715                           	opt callstack 0
  8716  001820                     _init_port_dma:
  8717                           	opt callstack 15
  8718                           
  8719                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  8720                           
  8721                           ; BSR set to: 57
  8722                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8723                           ;incstack = 0
  8724  001820  0E3F               	movlw	-193
  8725  001822  013B               	movlb	59	; () banked
  8726  001824  17DD               	andwf	221,f,b	;volatile
  8727                           
  8728                           ; BSR set to: 59
  8729                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  8730  001826  9BDD               	bcf	221,5,b	;volatile
  8731                           
  8732                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  8733  001828  51DD               	movf	221,w,b	;volatile
  8734  00182A  0BF9               	andlw	-7
  8735  00182C  0902               	iorlw	2
  8736  00182E  6FDD               	movwf	221,b	;volatile
  8737                           
  8738                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  8739  001830  0EE7               	movlw	-25
  8740  001832  17DD               	andwf	221,f,b	;volatile
  8741                           
  8742                           ; BSR set to: 59
  8743                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  8744  001834  81DD               	bsf	221,0,b	;volatile
  8745                           
  8746                           ; BSR set to: 59
  8747                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  8748  001836  9DDC               	bcf	220,6,b	;volatile
  8749                           
  8750                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  8751  001838  0E3D               	movlw	61
  8752  00183A  6FD1               	movwf	209,b	;volatile
  8753  00183C  0EEA               	movlw	234
  8754  00183E  6FD0               	movwf	208,b	;volatile
  8755                           
  8756                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  8757  001840  0EFF               	movlw	low _port_data
  8758  001842  6FD9               	movwf	217,b	;volatile
  8759  001844  0E06               	movlw	high _port_data
  8760  001846  6FDA               	movwf	218,b	;volatile
  8761  001848  0E00               	movlw	low (_port_data shr (0+16))
  8762  00184A  6FDB               	movwf	219,b	;volatile
  8763                           
  8764                           ; BSR set to: 59
  8765                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  8766  00184C  9BDC               	bcf	220,5,b	;volatile
  8767                           
  8768                           ; BSR set to: 59
  8769                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8770  00184E  0012               	return		;funcret
  8771  001850                     __end_of_init_port_dma:
  8772                           	opt callstack 0
  8773                           
  8774 ;; *************** function _init_display *****************
  8775 ;; Defined at:
  8776 ;;		line 38 in file "eadog.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;		None
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;		None
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1  [STACK] void 
  8783 ;; Registers used:
  8784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8785 ;; Tracked objects:
  8786 ;;		On entry : 3F/3B
  8787 ;;		On exit  : 3F/3D
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8794 ;;Total ram usage:        0 bytes
  8795 ;; Hardware stack levels used:    1
  8796 ;; Hardware stack levels required when called:   17
  8797 ;; This function calls:
  8798 ;;		_ringBufS_init
  8799 ;;		_send_lcd_cmd
  8800 ;;		_send_lcd_cmd_long
  8801 ;;		_send_lcd_data
  8802 ;;		_wdtdelay
  8803 ;; This function is called by:
  8804 ;;		_main
  8805 ;; This function uses a reentrant model
  8806 ;;
  8807                           
  8808                           	psect	text15
  8809  01F48C                     __ptext15:
  8810                           	opt callstack 0
  8811  01F48C                     _init_display:
  8812                           	opt callstack 13
  8813                           
  8814                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  8815                           
  8816                           ; BSR set to: 59
  8817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8818                           ;incstack = 0
  8819  01F48C  0E83               	movlw	low _ring_buf1
  8820  01F48E  0100               	movlb	0	; () banked
  8821  01F490  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  8822  01F492  0E04               	movlw	high _ring_buf1
  8823  01F494  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  8824                           
  8825                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  8826  01F496  0E40               	movlw	low _ring_buf2
  8827  01F498  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  8828  01F49A  0E04               	movlw	high _ring_buf2
  8829  01F49C  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  8833  01F49E  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  8834  01F4A4  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  8835  01F4AA  ECDF  F00C         	call	_ringBufS_init	;wreg free
  8836                           
  8837                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  8838  01F4AE  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  8839  01F4B4  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  8840  01F4BA  ECDF  F00C         	call	_ringBufS_init	;wreg free
  8841                           
  8842                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  8843  01F4BE  84BE               	bsf	190,2,c	;volatile
  8844                           
  8845                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  8846  01F4C0  013D               	movlb	61	; () banked
  8847  01F4C2  9F14               	bcf	20,7,b	;volatile
  8848                           
  8849                           ; BSR set to: 61
  8850                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  8851  01F4C4  0E20               	movlw	32
  8852  01F4C6  6F15               	movwf	21,b	;volatile
  8853                           
  8854                           ; BSR set to: 61
  8855                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  8856  01F4C8  0E03               	movlw	3
  8857  01F4CA  6F16               	movwf	22,b	;volatile
  8858                           
  8859                           ; BSR set to: 61
  8860                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  8861  01F4CC  0E04               	movlw	4
  8862  01F4CE  6F19               	movwf	25,b	;volatile
  8863                           
  8864                           ; BSR set to: 61
  8865                           ;eadog.c: 55:  SPI1CLK = 0x02;
  8866  01F4D0  0E02               	movlw	2
  8867  01F4D2  6F1C               	movwf	28,b	;volatile
  8868                           
  8869                           ; BSR set to: 61
  8870                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  8871  01F4D4  0E83               	movlw	131
  8872  01F4D6  6F14               	movwf	20,b	;volatile
  8873                           
  8874                           ; BSR set to: 61
  8875                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  8876  01F4D8  8F14               	bsf	20,7,b	;volatile
  8877                           
  8878                           ; BSR set to: 61
  8879                           ;eadog.c: 60:  wdtdelay(350000);
  8880  01F4DA  0E30               	movlw	48
  8881  01F4DC  6EE6               	movwf	postinc1,c
  8882  01F4DE  0E57               	movlw	87
  8883  01F4E0  6EE6               	movwf	postinc1,c
  8884  01F4E2  0E05               	movlw	5
  8885  01F4E4  6EE6               	movwf	postinc1,c
  8886  01F4E6  0E00               	movlw	0
  8887  01F4E8  6EE6               	movwf	postinc1,c
  8888  01F4EA  ECDF  F007         	call	_wdtdelay	;wreg free
  8889                           
  8890                           ; BSR set to: 0
  8891                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  8892  01F4EE  0E46               	movlw	70
  8893  01F4F0  6EE6               	movwf	postinc1,c
  8894  01F4F2  EC42  F00A         	call	_send_lcd_cmd_long	;wreg free
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  8898  01F4F6  0E41               	movlw	65
  8899  01F4F8  6EE6               	movwf	postinc1,c
  8900  01F4FA  EC62  F00A         	call	_send_lcd_cmd	;wreg free
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;eadog.c: 63:  wdtdelay(80);
  8904  01F4FE  0E50               	movlw	80
  8905  01F500  6EE6               	movwf	postinc1,c
  8906  01F502  0E00               	movlw	0
  8907  01F504  6EE6               	movwf	postinc1,c
  8908  01F506  0E00               	movlw	0
  8909  01F508  6EE6               	movwf	postinc1,c
  8910  01F50A  0E00               	movlw	0
  8911  01F50C  6EE6               	movwf	postinc1,c
  8912  01F50E  ECDF  F007         	call	_wdtdelay	;wreg free
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  8916  01F512  0E53               	movlw	83
  8917  01F514  6EE6               	movwf	postinc1,c
  8918  01F516  EC62  F00A         	call	_send_lcd_cmd	;wreg free
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;eadog.c: 65:  send_lcd_data(2);
  8922  01F51A  0E02               	movlw	2
  8923  01F51C  6EE6               	movwf	postinc1,c
  8924  01F51E  EC0C  F00E         	call	_send_lcd_data	;wreg free
  8925                           
  8926                           ; BSR set to: 0
  8927                           ;eadog.c: 66:  wdtdelay(80);
  8928  01F522  0E50               	movlw	80
  8929  01F524  6EE6               	movwf	postinc1,c
  8930  01F526  0E00               	movlw	0
  8931  01F528  6EE6               	movwf	postinc1,c
  8932  01F52A  0E00               	movlw	0
  8933  01F52C  6EE6               	movwf	postinc1,c
  8934  01F52E  0E00               	movlw	0
  8935  01F530  6EE6               	movwf	postinc1,c
  8936  01F532  ECDF  F007         	call	_wdtdelay	;wreg free
  8937                           
  8938                           ; BSR set to: 0
  8939                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  8940  01F536  0E51               	movlw	81
  8941  01F538  6EE6               	movwf	postinc1,c
  8942  01F53A  EC42  F00A         	call	_send_lcd_cmd_long	;wreg free
  8943                           
  8944                           ; BSR set to: 0
  8945                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  8946  01F53E  013D               	movlb	61	; () banked
  8947  01F540  9F14               	bcf	20,7,b	;volatile
  8948                           
  8949                           ; BSR set to: 61
  8950                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  8951  01F542  0E02               	movlw	2
  8952  01F544  6F16               	movwf	22,b	;volatile
  8953                           
  8954                           ; BSR set to: 61
  8955                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  8956  01F546  8F14               	bsf	20,7,b	;volatile
  8957                           
  8958                           ; BSR set to: 61
  8959                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  8960  01F548  931A               	bcf	26,1,b	;volatile
  8961                           
  8962                           ; BSR set to: 61
  8963                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  8964  01F54A  0E3F               	movlw	-193
  8965  01F54C  013B               	movlb	59	; () banked
  8966  01F54E  17FD               	andwf	253,f,b	;volatile
  8967                           
  8968                           ; BSR set to: 59
  8969                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  8970  01F550  9BFD               	bcf	253,5,b	;volatile
  8971                           
  8972                           ; BSR set to: 59
  8973                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  8974  01F552  51FD               	movf	253,w,b	;volatile
  8975  01F554  0BF9               	andlw	-7
  8976  01F556  0902               	iorlw	2
  8977  01F558  6FFD               	movwf	253,b	;volatile
  8978                           
  8979                           ; BSR set to: 59
  8980                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  8981  01F55A  0EE7               	movlw	-25
  8982  01F55C  17FD               	andwf	253,f,b	;volatile
  8983                           
  8984                           ; BSR set to: 59
  8985                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  8986  01F55E  81FD               	bsf	253,0,b	;volatile
  8987                           
  8988                           ; BSR set to: 59
  8989                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  8990  01F560  0E83               	movlw	low _ring_buf1
  8991  01F562  6FF9               	movwf	249,b	;volatile
  8992  01F564  0E04               	movlw	high _ring_buf1
  8993  01F566  6FFA               	movwf	250,b	;volatile
  8994  01F568  0E00               	movlw	low (_ring_buf1 shr (0+16))
  8995  01F56A  6FFB               	movwf	251,b	;volatile
  8996                           
  8997                           ; BSR set to: 59
  8998                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  8999  01F56C  9BFC               	bcf	252,5,b	;volatile
  9000                           
  9001                           ; BSR set to: 59
  9002                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  9003  01F56E  013D               	movlb	61	; () banked
  9004  01F570  831A               	bsf	26,1,b	;volatile
  9005                           
  9006                           ; BSR set to: 61
  9007                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  9008  01F572  94BE               	bcf	190,2,c	;volatile
  9009                           
  9010                           ; BSR set to: 61
  9011                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9012  01F574  0012               	return		;funcret
  9013  01F576                     __end_of_init_display:
  9014                           	opt callstack 0
  9015                           
  9016 ;; *************** function _send_lcd_data *****************
  9017 ;; Defined at:
  9018 ;;		line 123 in file "eadog.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;  data            1  [STACK] const unsigned char 
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;		None
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  1  [STACK] void 
  9025 ;; Registers used:
  9026 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9027 ;; Tracked objects:
  9028 ;;		On entry : 3F/0
  9029 ;;		On exit  : 3F/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9036 ;;Total ram usage:        0 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; Hardware stack levels required when called:   16
  9039 ;; This function calls:
  9040 ;;		_SPI1_Exchange8bit
  9041 ;;		_wdtdelay
  9042 ;; This function is called by:
  9043 ;;		_init_display
  9044 ;; This function uses a reentrant model
  9045 ;;
  9046                           
  9047                           	psect	text16
  9048  001C18                     __ptext16:
  9049                           	opt callstack 0
  9050  001C18                     _send_lcd_data:
  9051                           	opt callstack 13
  9052                           
  9053                           ; BSR set to: 61
  9054                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9055                           ;incstack = 0
  9056                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  9057  001C18  94BC               	bcf	188,2,c	;volatile
  9058                           
  9059                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  9060                           ;stkvar	_data @ sp[(0)+-1]
  9061  001C1A  0EFF               	movlw	-1
  9062  001C1C  50E3               	movf	plusw1,w,c
  9063  001C1E  6EE6               	movwf	postinc1,c
  9064  001C20  ECEC  F00E         	call	_SPI1_Exchange8bit	;wreg free
  9065                           
  9066                           ; BSR set to: 57
  9067                           ;eadog.c: 127:  wdtdelay(8);
  9068  001C24  0E08               	movlw	8
  9069  001C26  6EE6               	movwf	postinc1,c
  9070  001C28  0E00               	movlw	0
  9071  001C2A  6EE6               	movwf	postinc1,c
  9072  001C2C  0E00               	movlw	0
  9073  001C2E  6EE6               	movwf	postinc1,c
  9074  001C30  0E00               	movlw	0
  9075  001C32  6EE6               	movwf	postinc1,c
  9076  001C34  ECDF  F007         	call	_wdtdelay	;wreg free
  9077                           
  9078                           ; BSR set to: 0
  9079                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  9080  001C38  52E5               	movf	postdec1,f,c
  9081  001C3A  0012               	return		;funcret
  9082  001C3C                     __end_of_send_lcd_data:
  9083                           	opt callstack 0
  9084                           
  9085 ;; *************** function _send_lcd_cmd_long *****************
  9086 ;; Defined at:
  9087 ;;		line 139 in file "eadog.c"
  9088 ;; Parameters:    Size  Location     Type
  9089 ;;  cmd             1  [STACK] const unsigned char 
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;		None
  9092 ;; Return value:  Size  Location     Type
  9093 ;;                  1  [STACK] void 
  9094 ;; Registers used:
  9095 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9096 ;; Tracked objects:
  9097 ;;		On entry : 3F/0
  9098 ;;		On exit  : 3F/0
  9099 ;;		Unchanged: 0/0
  9100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9105 ;;Total ram usage:        0 bytes
  9106 ;; Hardware stack levels used:    1
  9107 ;; Hardware stack levels required when called:   16
  9108 ;; This function calls:
  9109 ;;		_SPI1_Exchange8bit
  9110 ;;		_wdtdelay
  9111 ;; This function is called by:
  9112 ;;		_init_display
  9113 ;; This function uses a reentrant model
  9114 ;;
  9115                           
  9116                           	psect	text17
  9117  001484                     __ptext17:
  9118                           	opt callstack 0
  9119  001484                     _send_lcd_cmd_long:
  9120                           	opt callstack 13
  9121                           
  9122                           ; BSR set to: 0
  9123                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9124                           ;incstack = 0
  9125                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  9126  001484  94BC               	bcf	188,2,c	;volatile
  9127                           
  9128                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  9129  001486  0EFE               	movlw	254
  9130  001488  6EE6               	movwf	postinc1,c
  9131  00148A  ECEC  F00E         	call	_SPI1_Exchange8bit	;wreg free
  9132                           
  9133                           ; BSR set to: 57
  9134                           ;eadog.c: 143:  wdtdelay(8);
  9135  00148E  0E08               	movlw	8
  9136  001490  6EE6               	movwf	postinc1,c
  9137  001492  0E00               	movlw	0
  9138  001494  6EE6               	movwf	postinc1,c
  9139  001496  0E00               	movlw	0
  9140  001498  6EE6               	movwf	postinc1,c
  9141  00149A  0E00               	movlw	0
  9142  00149C  6EE6               	movwf	postinc1,c
  9143  00149E  ECDF  F007         	call	_wdtdelay	;wreg free
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  9147                           ;stkvar	_cmd @ sp[(0)+-1]
  9148  0014A2  0EFF               	movlw	-1
  9149  0014A4  50E3               	movf	plusw1,w,c
  9150  0014A6  6EE6               	movwf	postinc1,c
  9151  0014A8  ECEC  F00E         	call	_SPI1_Exchange8bit	;wreg free
  9152                           
  9153                           ;eadog.c: 145:  wdtdelay(800);
  9154  0014AC  0E20               	movlw	32
  9155  0014AE  6EE6               	movwf	postinc1,c
  9156  0014B0  0E03               	movlw	3
  9157  0014B2  6EE6               	movwf	postinc1,c
  9158  0014B4  0E00               	movlw	0
  9159  0014B6  6EE6               	movwf	postinc1,c
  9160  0014B8  0E00               	movlw	0
  9161  0014BA  6EE6               	movwf	postinc1,c
  9162  0014BC  ECDF  F007         	call	_wdtdelay	;wreg free
  9163                           
  9164                           ; BSR set to: 0
  9165                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9166  0014C0  52E5               	movf	postdec1,f,c
  9167  0014C2  0012               	return		;funcret
  9168  0014C4                     __end_of_send_lcd_cmd_long:
  9169                           	opt callstack 0
  9170                           
  9171 ;; *************** function _send_lcd_cmd *****************
  9172 ;; Defined at:
  9173 ;;		line 130 in file "eadog.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;  cmd             1  [STACK] const unsigned char 
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;		None
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  1  [STACK] void 
  9180 ;; Registers used:
  9181 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9182 ;; Tracked objects:
  9183 ;;		On entry : 3F/0
  9184 ;;		On exit  : 3F/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9191 ;;Total ram usage:        0 bytes
  9192 ;; Hardware stack levels used:    1
  9193 ;; Hardware stack levels required when called:   16
  9194 ;; This function calls:
  9195 ;;		_SPI1_Exchange8bit
  9196 ;;		_wdtdelay
  9197 ;; This function is called by:
  9198 ;;		_init_display
  9199 ;; This function uses a reentrant model
  9200 ;;
  9201                           
  9202                           	psect	text18
  9203  0014C4                     __ptext18:
  9204                           	opt callstack 0
  9205  0014C4                     _send_lcd_cmd:
  9206                           	opt callstack 13
  9207                           
  9208                           ; BSR set to: 0
  9209                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9210                           ;incstack = 0
  9211                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  9212  0014C4  94BC               	bcf	188,2,c	;volatile
  9213                           
  9214                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  9215  0014C6  0EFE               	movlw	254
  9216  0014C8  6EE6               	movwf	postinc1,c
  9217  0014CA  ECEC  F00E         	call	_SPI1_Exchange8bit	;wreg free
  9218                           
  9219                           ; BSR set to: 57
  9220                           ;eadog.c: 134:  wdtdelay(8);
  9221  0014CE  0E08               	movlw	8
  9222  0014D0  6EE6               	movwf	postinc1,c
  9223  0014D2  0E00               	movlw	0
  9224  0014D4  6EE6               	movwf	postinc1,c
  9225  0014D6  0E00               	movlw	0
  9226  0014D8  6EE6               	movwf	postinc1,c
  9227  0014DA  0E00               	movlw	0
  9228  0014DC  6EE6               	movwf	postinc1,c
  9229  0014DE  ECDF  F007         	call	_wdtdelay	;wreg free
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  9233                           ;stkvar	_cmd @ sp[(0)+-1]
  9234  0014E2  0EFF               	movlw	-1
  9235  0014E4  50E3               	movf	plusw1,w,c
  9236  0014E6  6EE6               	movwf	postinc1,c
  9237  0014E8  ECEC  F00E         	call	_SPI1_Exchange8bit	;wreg free
  9238                           
  9239                           ;eadog.c: 136:  wdtdelay(8);
  9240  0014EC  0E08               	movlw	8
  9241  0014EE  6EE6               	movwf	postinc1,c
  9242  0014F0  0E00               	movlw	0
  9243  0014F2  6EE6               	movwf	postinc1,c
  9244  0014F4  0E00               	movlw	0
  9245  0014F6  6EE6               	movwf	postinc1,c
  9246  0014F8  0E00               	movlw	0
  9247  0014FA  6EE6               	movwf	postinc1,c
  9248  0014FC  ECDF  F007         	call	_wdtdelay	;wreg free
  9249                           
  9250                           ; BSR set to: 0
  9251                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  9252  001500  52E5               	movf	postdec1,f,c
  9253  001502  0012               	return		;funcret
  9254  001504                     __end_of_send_lcd_cmd:
  9255                           	opt callstack 0
  9256                           
  9257 ;; *************** function _SPI1_Exchange8bit *****************
  9258 ;; Defined at:
  9259 ;;		line 79 in file "mcc_generated_files/spi1.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;  data            1  [STACK] unsigned char 
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;		None
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  1  [STACK] unsigned char 
  9266 ;; Registers used:
  9267 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/2
  9270 ;;		On exit  : 3F/39
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9277 ;;Total ram usage:        0 bytes
  9278 ;; Hardware stack levels used:    1
  9279 ;; Hardware stack levels required when called:   15
  9280 ;; This function calls:
  9281 ;;		Nothing
  9282 ;; This function is called by:
  9283 ;;		_send_lcd_data
  9284 ;;		_send_lcd_cmd
  9285 ;;		_send_lcd_cmd_long
  9286 ;;		_set_dac
  9287 ;; This function uses a reentrant model
  9288 ;;
  9289                           
  9290                           	psect	text19
  9291  001DD8                     __ptext19:
  9292                           	opt callstack 0
  9293  001DD8                     _SPI1_Exchange8bit:
  9294                           	opt callstack 14
  9295                           
  9296                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  9297                           
  9298                           ; BSR set to: 0
  9299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9300                           ;incstack = 0
  9301  001DD8  0E01               	movlw	1
  9302  001DDA  013D               	movlb	61	; () banked
  9303  001DDC  6F12               	movwf	18,b	;volatile
  9304                           
  9305                           ; BSR set to: 61
  9306                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  9307                           ;stkvar	_data @ sp[(0)+-1]
  9308  001DDE  0EFF               	movlw	-1
  9309  001DE0  006F FF8F FD11     	movff	plusw1,15633	;volatile
  9310  001DE6                     l809:
  9311                           
  9312                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  9313  001DE6  0139               	movlb	57	; () banked
  9314  001DE8  A9A2               	btfss	162,4,b	;volatile
  9315  001DEA  D7FD               	goto	l809
  9316                           
  9317                           ; BSR set to: 57
  9318                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  9319  001DEC  006F F440  F001    	movff	15632,btemp	;volatile
  9320                           
  9321                           ; BSR set to: 57
  9322                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9323  001DF2  52E5               	movf	postdec1,f,c
  9324  001DF4  0012               	return		;funcret
  9325  001DF6                     __end_of_SPI1_Exchange8bit:
  9326                           	opt callstack 0
  9327                           
  9328 ;; *************** function _ringBufS_init *****************
  9329 ;; Defined at:
  9330 ;;		line 22 in file "ringbufs.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;  _this           2  [STACK] PTR volatile struct ring
  9333 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;		None
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  1  [STACK] void 
  9338 ;; Registers used:
  9339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9349 ;;Total ram usage:        0 bytes
  9350 ;; Hardware stack levels used:    1
  9351 ;; Hardware stack levels required when called:   16
  9352 ;; This function calls:
  9353 ;;		_memset
  9354 ;; This function is called by:
  9355 ;;		_init_display
  9356 ;; This function uses a reentrant model
  9357 ;;
  9358                           
  9359                           	psect	text20
  9360  0019BE                     __ptext20:
  9361                           	opt callstack 0
  9362  0019BE                     _ringBufS_init:
  9363                           	opt callstack 13
  9364                           
  9365                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  9366                           
  9367                           ; BSR set to: 57
  9368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9369                           ;incstack = 0
  9370  0019BE  0E43               	movlw	67
  9371  0019C0  6EE6               	movwf	postinc1,c
  9372  0019C2  0E00               	movlw	0
  9373  0019C4  6EE6               	movwf	postinc1,c
  9374  0019C6  0E00               	movlw	0
  9375  0019C8  6EE6               	movwf	postinc1,c
  9376  0019CA  0E00               	movlw	0
  9377  0019CC  6EE6               	movwf	postinc1,c
  9378                           
  9379                           ;stkvar	__this @ sp[(-4)+-2]
  9380  0019CE  0EFA               	movlw	-6
  9381  0019D0  006F FF8F FFE6     	movff	plusw1,postinc1
  9382  0019D6  006F FF8F FFE6     	movff	plusw1,postinc1
  9383  0019DC  EC80  F0D3         	call	_memset	;wreg free
  9384                           
  9385                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9386  0019E0  52E5               	movf	postdec1,f,c
  9387  0019E2  52E5               	movf	postdec1,f,c
  9388  0019E4  0012               	return		;funcret
  9389  0019E6                     __end_of_ringBufS_init:
  9390                           	opt callstack 0
  9391                           
  9392 ;; *************** function _init_bsoc *****************
  9393 ;; Defined at:
  9394 ;;		line 110 in file "bsoc.c"
  9395 ;; Parameters:    Size  Location     Type
  9396 ;;		None
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;		None
  9399 ;; Return value:  Size  Location     Type
  9400 ;;                  1  [STACK] void 
  9401 ;; Registers used:
  9402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/2
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9412 ;;Total ram usage:        0 bytes
  9413 ;; Hardware stack levels used:    1
  9414 ;; Hardware stack levels required when called:   18
  9415 ;; This function calls:
  9416 ;;		_TMR3_SetInterruptHandler
  9417 ;;		_Volts_to_SOC
  9418 ;;		___fldiv
  9419 ;;		___flmul
  9420 ;;		___fltol
  9421 ;;		___xxtofl
  9422 ;;		_conv_raw_result
  9423 ;; This function is called by:
  9424 ;;		_main
  9425 ;; This function uses a reentrant model
  9426 ;;
  9427                           
  9428                           	psect	text21
  9429  01BBDC                     __ptext21:
  9430                           	opt callstack 0
  9431  01BBDC                     _init_bsoc:
  9432                           	opt callstack 12
  9433                           
  9434                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  9435                           
  9436                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9437                           ;incstack = 0
  9438  01BBDC  0E00               	movlw	0
  9439  01BBDE  6EE6               	movwf	postinc1,c
  9440  01BBE0  0E00               	movlw	0
  9441  01BBE2  6EE6               	movwf	postinc1,c
  9442  01BBE4  0E7A               	movlw	122
  9443  01BBE6  6EE6               	movwf	postinc1,c
  9444  01BBE8  0E44               	movlw	68
  9445  01BBEA  6EE6               	movwf	postinc1,c
  9446  01BBEC  0E00               	movlw	0
  9447  01BBEE  6EE6               	movwf	postinc1,c
  9448  01BBF0  0E04               	movlw	4
  9449  01BBF2  6EE6               	movwf	postinc1,c
  9450  01BBF4  EC22  F0C2         	call	_conv_raw_result	;wreg free
  9451  01BBF8  0060  F007  FFE6   	movff	btemp,postinc1
  9452  01BBFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9453  01BC04  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9454  01BC0A  0060  F013  FFE6   	movff	btemp+3,postinc1
  9455  01BC10  ECBF  F0ED         	call	___fltol	;wreg free
  9456  01BC14  0060  F007  FFE6   	movff	btemp,postinc1
  9457  01BC1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9458  01BC20  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9459  01BC26  0060  F013  FFE6   	movff	btemp+3,postinc1
  9460  01BC2C  0E00               	movlw	0
  9461  01BC2E  6EE6               	movwf	postinc1,c
  9462  01BC30  EC83  F0E5         	call	___xxtofl	;wreg free
  9463  01BC34  0060  F007  FFE6   	movff	btemp,postinc1
  9464  01BC3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9465  01BC40  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9466  01BC46  0060  F013  FFE6   	movff	btemp+3,postinc1
  9467  01BC4C  EC89  F0B1         	call	___flmul	;wreg free
  9468  01BC50  0060  F007  FFE6   	movff	btemp,postinc1
  9469  01BC56  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9470  01BC5C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9471  01BC62  0060  F013  FFE6   	movff	btemp+3,postinc1
  9472  01BC68  ECBF  F0ED         	call	___fltol	;wreg free
  9473  01BC6C  0060  F007  FFE6   	movff	btemp,postinc1
  9474  01BC72  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9475  01BC78  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9476  01BC7E  0060  F013  FFE6   	movff	btemp+3,postinc1
  9477  01BC84  ECA5  F0FD         	call	_Volts_to_SOC	;wreg free
  9478  01BC88  0060  F004  F9B5   	movff	btemp,_C+182	;volatile
  9479  01BC8E  0060  F008  F9B6   	movff	btemp+1,_C+183	;volatile
  9480                           
  9481                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  9482  01BC94  EE22  F18B         	lfsr	2,_C+140	;volatile
  9483  01BC98  006F FF7B FFE6     	movff	postinc2,postinc1
  9484  01BC9E  006F FF7B FFE6     	movff	postinc2,postinc1
  9485  01BCA4  006F FF7B FFE6     	movff	postinc2,postinc1
  9486  01BCAA  006F FF7B FFE6     	movff	postinc2,postinc1
  9487  01BCB0  0E00               	movlw	0
  9488  01BCB2  6EE6               	movwf	postinc1,c
  9489  01BCB4  0E00               	movlw	0
  9490  01BCB6  6EE6               	movwf	postinc1,c
  9491  01BCB8  0EC8               	movlw	200
  9492  01BCBA  6EE6               	movwf	postinc1,c
  9493  01BCBC  0E42               	movlw	66
  9494  01BCBE  6EE6               	movwf	postinc1,c
  9495  01BCC0  0E00               	movlw	0
  9496  01BCC2  6EE6               	movwf	postinc1,c
  9497  01BCC4  0E00               	movlw	0
  9498  01BCC6  6EE6               	movwf	postinc1,c
  9499  01BCC8  0E7A               	movlw	122
  9500  01BCCA  6EE6               	movwf	postinc1,c
  9501  01BCCC  0E44               	movlw	68
  9502  01BCCE  6EE6               	movwf	postinc1,c
  9503  01BCD0  0E00               	movlw	0
  9504  01BCD2  6EE6               	movwf	postinc1,c
  9505  01BCD4  0E04               	movlw	4
  9506  01BCD6  6EE6               	movwf	postinc1,c
  9507  01BCD8  EC22  F0C2         	call	_conv_raw_result	;wreg free
  9508  01BCDC  0060  F007  FFE6   	movff	btemp,postinc1
  9509  01BCE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9510  01BCE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9511  01BCEE  0060  F013  FFE6   	movff	btemp+3,postinc1
  9512  01BCF4  ECBF  F0ED         	call	___fltol	;wreg free
  9513  01BCF8  0060  F007  FFE6   	movff	btemp,postinc1
  9514  01BCFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9515  01BD04  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9516  01BD0A  0060  F013  FFE6   	movff	btemp+3,postinc1
  9517  01BD10  0E00               	movlw	0
  9518  01BD12  6EE6               	movwf	postinc1,c
  9519  01BD14  EC83  F0E5         	call	___xxtofl	;wreg free
  9520  01BD18  0060  F007  FFE6   	movff	btemp,postinc1
  9521  01BD1E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9522  01BD24  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9523  01BD2A  0060  F013  FFE6   	movff	btemp+3,postinc1
  9524  01BD30  EC89  F0B1         	call	___flmul	;wreg free
  9525  01BD34  0060  F007  FFE6   	movff	btemp,postinc1
  9526  01BD3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9527  01BD40  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9528  01BD46  0060  F013  FFE6   	movff	btemp+3,postinc1
  9529  01BD4C  ECBF  F0ED         	call	___fltol	;wreg free
  9530  01BD50  0060  F007  FFE6   	movff	btemp,postinc1
  9531  01BD56  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9532  01BD5C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9533  01BD62  0060  F013  FFE6   	movff	btemp+3,postinc1
  9534  01BD68  ECA5  F0FD         	call	_Volts_to_SOC	;wreg free
  9535  01BD6C  0060  F004  F00B   	movff	btemp,btemp+10
  9536  01BD72  0060  F008  F00C   	movff	btemp+1,btemp+11
  9537  01BD78  500B               	movf	(btemp+10)^0,w,c
  9538  01BD7A  6E05               	movwf	(btemp+4)^0,c
  9539  01BD7C  500C               	movf	(btemp+11)^0,w,c
  9540  01BD7E  6E06               	movwf	(btemp+5)^0,c
  9541  01BD80  6A07               	clrf	(btemp+6)^0,c
  9542  01BD82  6A08               	clrf	(btemp+7)^0,c
  9543  01BD84  0060  F017  FFE6   	movff	btemp+4,postinc1
  9544  01BD8A  0060  F01B  FFE6   	movff	btemp+5,postinc1
  9545  01BD90  0060  F01F  FFE6   	movff	btemp+6,postinc1
  9546  01BD96  0060  F023  FFE6   	movff	btemp+7,postinc1
  9547  01BD9C  0E00               	movlw	0
  9548  01BD9E  6EE6               	movwf	postinc1,c
  9549  01BDA0  EC83  F0E5         	call	___xxtofl	;wreg free
  9550  01BDA4  0060  F007  FFE6   	movff	btemp,postinc1
  9551  01BDAA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9552  01BDB0  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9553  01BDB6  0060  F013  FFE6   	movff	btemp+3,postinc1
  9554  01BDBC  ECDA  F0BC         	call	___fldiv	;wreg free
  9555  01BDC0  0060  F007  FFE6   	movff	btemp,postinc1
  9556  01BDC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9557  01BDCC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9558  01BDD2  0060  F013  FFE6   	movff	btemp+3,postinc1
  9559  01BDD8  EC89  F0B1         	call	___flmul	;wreg free
  9560  01BDDC  0060  F004  F98F   	movff	btemp,_C+144	;volatile
  9561  01BDE2  0060  F008  F990   	movff	btemp+1,_C+145	;volatile
  9562  01BDE8  0060  F00C  F991   	movff	btemp+2,_C+146	;volatile
  9563  01BDEE  0060  F010  F992   	movff	btemp+3,_C+147	;volatile
  9564                           
  9565                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  9566  01BDF4  EE22  F18F         	lfsr	2,_C+144	;volatile
  9567  01BDF8  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
  9568  01BDFE  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
  9569  01BE04  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
  9570  01BE0A  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
  9571                           
  9572                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  9573  01BE10  0E90               	movlw	low _calc_bsoc
  9574  01BE12  6EE6               	movwf	postinc1,c
  9575  01BE14  0E46               	movlw	high _calc_bsoc
  9576  01BE16  6EE6               	movwf	postinc1,c
  9577  01BE18  0E01               	movlw	low (_calc_bsoc shr (0+16))
  9578  01BE1A  6EE6               	movwf	postinc1,c
  9579  01BE1C  EC6B  F00D         	call	_TMR3_SetInterruptHandler	;wreg free
  9580                           
  9581                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9582  01BE20  0012               	return		;funcret
  9583  01BE22                     __end_of_init_bsoc:
  9584                           	opt callstack 0
  9585                           
  9586 ;; *************** function _Volts_to_SOC *****************
  9587 ;; Defined at:
  9588 ;;		line 175 in file "bsoc.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;  cvoltage        4  [STACK] const unsigned long 
  9591 ;; Auto vars:     Size  Location     Type
  9592 ;;  soc             2  [STACK] unsigned short 
  9593 ;;  slot            1  [STACK] unsigned char 
  9594 ;; Return value:  Size  Location     Type
  9595 ;;                  2  [STACK] unsigned short 
  9596 ;; Registers used:
  9597 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  9598 ;; Tracked objects:
  9599 ;;		On entry : 0/2
  9600 ;;		On exit  : 0/0
  9601 ;;		Unchanged: 0/0
  9602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9607 ;;Total ram usage:        0 bytes
  9608 ;; Hardware stack levels used:    1
  9609 ;; Hardware stack levels required when called:   15
  9610 ;; This function calls:
  9611 ;;		Nothing
  9612 ;; This function is called by:
  9613 ;;		_init_bsoc
  9614 ;; This function uses a reentrant model
  9615 ;;
  9616                           
  9617                           	psect	text22
  9618  01FB4A                     __ptext22:
  9619                           	opt callstack 0
  9620  01FB4A                     _Volts_to_SOC:
  9621                           	opt callstack 0
  9622                           
  9623                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9624  01FB4A  52E6               	movf	postinc1,f,c
  9625  01FB4C  52E6               	movf	postinc1,f,c
  9626  01FB4E  52E6               	movf	postinc1,f,c
  9627                           
  9628                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  9629                           ;stkvar	_soc @ sp[(-3)+0]
  9630                           
  9631                           ;incstack = 0
  9632  01FB50  0EFD               	movlw	-3
  9633  01FB52  6AE3               	clrf	plusw1,c
  9634  01FB54  0EFE               	movlw	-2
  9635  01FB56  6AE3               	clrf	plusw1,c
  9636                           
  9637                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  9638                           ;stkvar	_slot @ sp[(-3)+2]
  9639  01FB58  0EFF               	movlw	-1
  9640  01FB5A  6AE3               	clrf	plusw1,c
  9641  01FB5C                     l13793:
  9642                           
  9643                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  9644                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  9645                           ;stkvar	_slot @ sp[(-3)+2]
  9646  01FB5C  0EFF               	movlw	-1
  9647  01FB5E  50E3               	movf	plusw1,w,c
  9648  01FB60  0D08               	mullw	8
  9649  01FB62  0E13               	movlw	low _BVSOC_TABLE
  9650  01FB64  24F3               	addwf	243,w,c
  9651  01FB66  6EF6               	movwf	tblptrl,c
  9652  01FB68  0EF8               	movlw	high _BVSOC_TABLE
  9653  01FB6A  20F4               	addwfc	244,w,c
  9654  01FB6C  6EF7               	movwf	tblptrh,c
  9655  01FB6E                     	if	1	;There are 3 active tblptr bytes
  9656  01FB6E  6AF8               	clrf	tblptru,c
  9657  01FB70  0E00               	movlw	low (__mediumconst shr (0+16))
  9658  01FB72  22F8               	addwfc	tblptru,f,c
  9659  01FB74                     	endif
  9660  01FB74  0EF9               	movlw	-7
  9661  01FB76  50E3               	movf	plusw1,w,c
  9662  01FB78  0009               	tblrd		*+
  9663  01FB7A  5CF5               	subwf	tablat,w,c
  9664  01FB7C  0EFA               	movlw	-6
  9665  01FB7E  50E3               	movf	plusw1,w,c
  9666  01FB80  0009               	tblrd		*+
  9667  01FB82  58F5               	subwfb	tablat,w,c
  9668  01FB84  0EFB               	movlw	-5
  9669  01FB86  50E3               	movf	plusw1,w,c
  9670  01FB88  0009               	tblrd		*+
  9671  01FB8A  58F5               	subwfb	tablat,w,c
  9672  01FB8C  0EFC               	movlw	-4
  9673  01FB8E  50E3               	movf	plusw1,w,c
  9674  01FB90  0009               	tblrd		*+
  9675  01FB92  58F5               	subwfb	tablat,w,c
  9676  01FB94  B0D8               	btfsc	status,0,c
  9677  01FB96  D020               	goto	l13797
  9678                           
  9679                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  9680                           ;stkvar	_slot @ sp[(-3)+2]
  9681  01FB98  0EFF               	movlw	-1
  9682  01FB9A  50E3               	movf	plusw1,w,c
  9683  01FB9C  0D08               	mullw	8
  9684  01FB9E  0E04               	movlw	4
  9685  01FBA0  26F3               	addwf	243,f,c
  9686  01FBA2  0E00               	movlw	0
  9687  01FBA4  22F4               	addwfc	244,f,c
  9688  01FBA6  0E13               	movlw	low _BVSOC_TABLE
  9689  01FBA8  24F3               	addwf	243,w,c
  9690  01FBAA  6EF6               	movwf	tblptrl,c
  9691  01FBAC  0EF8               	movlw	high _BVSOC_TABLE
  9692  01FBAE  20F4               	addwfc	244,w,c
  9693  01FBB0  6EF7               	movwf	tblptrh,c
  9694  01FBB2                     	if	1	;There are 3 active tblptr bytes
  9695  01FBB2  6AF8               	clrf	tblptru,c
  9696  01FBB4  0E00               	movlw	low (__mediumconst shr (0+16))
  9697  01FBB6  22F8               	addwfc	tblptru,f,c
  9698  01FBB8                     	endif
  9699  01FBB8  0009               	tblrd		*+
  9700  01FBBA  006F FFD4  F00B    	movff	tablat,btemp+10
  9701  01FBC0  0009               	tblrd		*+
  9702  01FBC2  006F FFD4  F00C    	movff	tablat,btemp+11
  9703                           
  9704                           ;stkvar	_soc @ sp[(-3)+0]
  9705  01FBC8  0EFD               	movlw	-3
  9706  01FBCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9707  01FBD0  0EFE               	movlw	-2
  9708  01FBD2  0060  F033  FFE3   	movff	btemp+11,plusw1
  9709  01FBD8                     l13797:
  9710                           
  9711                           ;bsoc.c: 187:  }
  9712                           ;stkvar	_slot @ sp[(-3)+2]
  9713  01FBD8  0EFF               	movlw	-1
  9714  01FBDA  2AE3               	incf	plusw1,f,c
  9715                           
  9716                           ;stkvar	_slot @ sp[(-3)+2]
  9717  01FBDC  0EFF               	movlw	-1
  9718  01FBDE  006F FF8C  F001    	movff	plusw1,btemp
  9719  01FBE4  0E19               	movlw	25
  9720  01FBE6  6401               	cpfsgt	btemp^0,c
  9721  01FBE8  D7B9               	goto	l13793
  9722                           
  9723                           ;bsoc.c: 188:  return soc;
  9724                           ;stkvar	_soc @ sp[(-3)+0]
  9725  01FBEA  0EFD               	movlw	-3
  9726  01FBEC  006F FF8C  F001    	movff	plusw1,btemp
  9727  01FBF2  0EFE               	movlw	-2
  9728  01FBF4  006F FF8C  F002    	movff	plusw1,btemp+1
  9729                           
  9730                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  9731  01FBFA  0EF9               	movlw	249
  9732  01FBFC  26E1               	addwf	fsr1l,f,c
  9733  01FBFE  0EFF               	movlw	255
  9734  01FC00  22E2               	addwfc	fsr1h,f,c
  9735  01FC02  0012               	return		;funcret
  9736  01FC04                     __end_of_Volts_to_SOC:
  9737                           	opt callstack 0
  9738                           
  9739 ;; *************** function _hid_display *****************
  9740 ;; Defined at:
  9741 ;;		line 22 in file "hid.c"
  9742 ;; Parameters:    Size  Location     Type
  9743 ;;  h               2  [STACK] PTR struct H_data
  9744 ;;		 -> H(9), 
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;		None
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  2  [STACK] PTR struct H_data
  9749 ;; Registers used:
  9750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/39
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9760 ;;Total ram usage:        0 bytes
  9761 ;; Hardware stack levels used:    1
  9762 ;; Hardware stack levels required when called:   17
  9763 ;; This function calls:
  9764 ;;		_hid_input
  9765 ;; This function is called by:
  9766 ;;		_main
  9767 ;; This function uses a reentrant model
  9768 ;;
  9769                           
  9770                           	psect	text23
  9771  01C6D8                     __ptext23:
  9772                           	opt callstack 0
  9773  01C6D8                     _hid_display:
  9774                           	opt callstack 13
  9775                           
  9776                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  9777                           ;stkvar	_h @ sp[(0)+-2]
  9778                           
  9779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9780                           ;incstack = 0
  9781  01C6D8  0EFE               	movlw	-2
  9782  01C6DA  006F FF8F FFE6     	movff	plusw1,postinc1
  9783  01C6E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9784  01C6E6  EC7E  F0F4         	call	_hid_input	;wreg free
  9785                           
  9786                           ;hid.c: 26:  switch (h->h_state) {
  9787  01C6EA  D0E6               	goto	l16921
  9788  01C6EC                     l16895:
  9789                           
  9790                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  9791                           ;stkvar	_h @ sp[(0)+-2]
  9792  01C6EC  0EFE               	movlw	-2
  9793  01C6EE  006F FF8C  F00B    	movff	plusw1,btemp+10
  9794  01C6F4  0EFF               	movlw	-1
  9795  01C6F6  006F FF8C  F00C    	movff	plusw1,btemp+11
  9796  01C6FC  0E01               	movlw	1
  9797  01C6FE  240B               	addwf	(btemp+10)^0,w,c
  9798  01C700  6ED9               	movwf	fsr2l,c
  9799  01C702  0E00               	movlw	0
  9800  01C704  200C               	addwfc	(btemp+11)^0,w,c
  9801  01C706  6EDA               	movwf	fsr2h,c
  9802  01C708  0E01               	movlw	1
  9803  01C70A  6EDF               	movwf	indf2,c
  9804                           
  9805                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  9806                           ;stkvar	_h @ sp[(0)+-2]
  9807  01C70C  0EFE               	movlw	-2
  9808  01C70E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9809  01C714  0EFF               	movlw	-1
  9810  01C716  006F FF8F FFDA     	movff	plusw1,fsr2h
  9811  01C71C  0E00               	movlw	0
  9812  01C71E  6EDF               	movwf	indf2,c
  9813                           
  9814                           ;hid.c: 30:   h->wait_enter = 1;
  9815                           ;stkvar	_h @ sp[(0)+-2]
  9816  01C720  0EFE               	movlw	-2
  9817  01C722  006F FF8C  F00B    	movff	plusw1,btemp+10
  9818  01C728  0EFF               	movlw	-1
  9819  01C72A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9820  01C730  0E04               	movlw	4
  9821  01C732  240B               	addwf	(btemp+10)^0,w,c
  9822  01C734  6ED9               	movwf	fsr2l,c
  9823  01C736  0E00               	movlw	0
  9824  01C738  200C               	addwfc	(btemp+11)^0,w,c
  9825  01C73A  6EDA               	movwf	fsr2h,c
  9826  01C73C  0E01               	movlw	1
  9827  01C73E  6EDF               	movwf	indf2,c
  9828                           
  9829                           ;hid.c: 31:   h->wait_select = 1;
  9830                           ;stkvar	_h @ sp[(0)+-2]
  9831  01C740  0EFE               	movlw	-2
  9832  01C742  006F FF8C  F00B    	movff	plusw1,btemp+10
  9833  01C748  0EFF               	movlw	-1
  9834  01C74A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9835  01C750  0E02               	movlw	2
  9836  01C752  240B               	addwf	(btemp+10)^0,w,c
  9837  01C754  6ED9               	movwf	fsr2l,c
  9838  01C756  0E00               	movlw	0
  9839  01C758  200C               	addwfc	(btemp+11)^0,w,c
  9840  01C75A  6EDA               	movwf	fsr2h,c
  9841  01C75C  0E01               	movlw	1
  9842  01C75E  6EDF               	movwf	indf2,c
  9843                           
  9844                           ;hid.c: 32:   h->wait_calib = 1;
  9845                           ;stkvar	_h @ sp[(0)+-2]
  9846  01C760  0EFE               	movlw	-2
  9847  01C762  006F FF8C  F00B    	movff	plusw1,btemp+10
  9848  01C768  0EFF               	movlw	-1
  9849  01C76A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9850  01C770  0E06               	movlw	6
  9851  01C772  240B               	addwf	(btemp+10)^0,w,c
  9852  01C774  6ED9               	movwf	fsr2l,c
  9853  01C776  0E00               	movlw	0
  9854  01C778  200C               	addwfc	(btemp+11)^0,w,c
  9855  01C77A  6EDA               	movwf	fsr2h,c
  9856  01C77C  0E01               	movlw	1
  9857  01C77E  6EDF               	movwf	indf2,c
  9858                           
  9859                           ;hid.c: 33:   h->select_p = SW_OFF;
  9860                           ;stkvar	_h @ sp[(0)+-2]
  9861  01C780  0EFE               	movlw	-2
  9862  01C782  006F FF8C  F00B    	movff	plusw1,btemp+10
  9863  01C788  0EFF               	movlw	-1
  9864  01C78A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9865  01C790  0E03               	movlw	3
  9866  01C792  240B               	addwf	(btemp+10)^0,w,c
  9867  01C794  6ED9               	movwf	fsr2l,c
  9868  01C796  0E00               	movlw	0
  9869  01C798  200C               	addwfc	(btemp+11)^0,w,c
  9870  01C79A  6EDA               	movwf	fsr2h,c
  9871  01C79C  0E00               	movlw	0
  9872  01C79E  6EDF               	movwf	indf2,c
  9873                           
  9874                           ;hid.c: 34:   h->enter_p = SW_OFF;
  9875                           ;stkvar	_h @ sp[(0)+-2]
  9876  01C7A0  0EFE               	movlw	-2
  9877  01C7A2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9878  01C7A8  0EFF               	movlw	-1
  9879  01C7AA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9880  01C7B0  0E05               	movlw	5
  9881  01C7B2  240B               	addwf	(btemp+10)^0,w,c
  9882  01C7B4  6ED9               	movwf	fsr2l,c
  9883  01C7B6  0E00               	movlw	0
  9884  01C7B8  200C               	addwfc	(btemp+11)^0,w,c
  9885  01C7BA  6EDA               	movwf	fsr2h,c
  9886  01C7BC  0E00               	movlw	0
  9887  01C7BE  6EDF               	movwf	indf2,c
  9888                           
  9889                           ;hid.c: 35:   h->calib_p = SW_OFF;
  9890                           ;stkvar	_h @ sp[(0)+-2]
  9891  01C7C0  0EFE               	movlw	-2
  9892  01C7C2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9893  01C7C8  0EFF               	movlw	-1
  9894  01C7CA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9895  01C7D0  0E07               	movlw	7
  9896  01C7D2  240B               	addwf	(btemp+10)^0,w,c
  9897  01C7D4  6ED9               	movwf	fsr2l,c
  9898  01C7D6  0E00               	movlw	0
  9899  01C7D8  200C               	addwfc	(btemp+11)^0,w,c
  9900  01C7DA  6EDA               	movwf	fsr2h,c
  9901  01C7DC  0E00               	movlw	0
  9902  01C7DE  D06A               	goto	L5
  9903  01C7E0                     l16911:
  9904                           
  9905                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  9906                           ;stkvar	_h @ sp[(0)+-2]
  9907  01C7E0  0EFE               	movlw	-2
  9908  01C7E2  006F FF8C  F00B    	movff	plusw1,btemp+10
  9909  01C7E8  0EFF               	movlw	-1
  9910  01C7EA  006F FF8C  F00C    	movff	plusw1,btemp+11
  9911  01C7F0  0E02               	movlw	2
  9912  01C7F2  240B               	addwf	(btemp+10)^0,w,c
  9913  01C7F4  6ED9               	movwf	fsr2l,c
  9914  01C7F6  0E00               	movlw	0
  9915  01C7F8  200C               	addwfc	(btemp+11)^0,w,c
  9916  01C7FA  6EDA               	movwf	fsr2h,c
  9917  01C7FC  50DF               	movf	indf2,w,c
  9918  01C7FE  A4D8               	btfss	status,2,c
  9919  01C800  D076               	goto	l2275
  9920                           
  9921                           ;stkvar	_h @ sp[(0)+-2]
  9922  01C802  0EFE               	movlw	-2
  9923  01C804  006F FF8C  F00B    	movff	plusw1,btemp+10
  9924  01C80A  0EFF               	movlw	-1
  9925  01C80C  006F FF8C  F00C    	movff	plusw1,btemp+11
  9926  01C812  0E03               	movlw	3
  9927  01C814  240B               	addwf	(btemp+10)^0,w,c
  9928  01C816  6ED9               	movwf	fsr2l,c
  9929  01C818  0E00               	movlw	0
  9930  01C81A  200C               	addwfc	(btemp+11)^0,w,c
  9931  01C81C  6EDA               	movwf	fsr2h,c
  9932  01C81E  50DF               	movf	indf2,w,c
  9933  01C820  A4D8               	btfss	status,2,c
  9934  01C822  D065               	goto	l2275
  9935                           
  9936                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  9937                           ;stkvar	_h @ sp[(0)+-2]
  9938  01C824  0EFE               	movlw	-2
  9939  01C826  006F FF8C  F00B    	movff	plusw1,btemp+10
  9940  01C82C  0EFF               	movlw	-1
  9941  01C82E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9942  01C834  0E08               	movlw	8
  9943  01C836  240B               	addwf	(btemp+10)^0,w,c
  9944  01C838  6ED9               	movwf	fsr2l,c
  9945  01C83A  0E00               	movlw	0
  9946  01C83C  200C               	addwfc	(btemp+11)^0,w,c
  9947  01C83E  6EDA               	movwf	fsr2h,c
  9948                           
  9949                           ;stkvar	_h @ sp[(0)+-2]
  9950  01C840  0EFE               	movlw	-2
  9951  01C842  006F FF8C  F00B    	movff	plusw1,btemp+10
  9952  01C848  0EFF               	movlw	-1
  9953  01C84A  006F FF8C  F00C    	movff	plusw1,btemp+11
  9954  01C850  0E08               	movlw	8
  9955  01C852  240B               	addwf	(btemp+10)^0,w,c
  9956  01C854  6EE9               	movwf	fsr0l,c
  9957  01C856  0E00               	movlw	0
  9958  01C858  200C               	addwfc	(btemp+11)^0,w,c
  9959  01C85A  6EEA               	movwf	fsr0h,c
  9960  01C85C  2AEF               	incf	indf0,f,c
  9961  01C85E  50EF               	movf	indf0,w,c
  9962  01C860  0B03               	andlw	3
  9963  01C862  6EDF               	movwf	indf2,c
  9964                           
  9965                           ;hid.c: 41:    h->hid_display = h->sequence;
  9966                           ;stkvar	_h @ sp[(0)+-2]
  9967  01C864  0EFE               	movlw	-2
  9968  01C866  006F FF8C  F00B    	movff	plusw1,btemp+10
  9969  01C86C  0EFF               	movlw	-1
  9970  01C86E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9971  01C874  0E08               	movlw	8
  9972  01C876  240B               	addwf	(btemp+10)^0,w,c
  9973  01C878  6ED9               	movwf	fsr2l,c
  9974  01C87A  0E00               	movlw	0
  9975  01C87C  200C               	addwfc	(btemp+11)^0,w,c
  9976  01C87E  6EDA               	movwf	fsr2h,c
  9977                           
  9978                           ;stkvar	_h @ sp[(0)+-2]
  9979  01C880  0EFE               	movlw	-2
  9980  01C882  006F FF8F FFE9     	movff	plusw1,fsr0l
  9981  01C888  0EFF               	movlw	-1
  9982  01C88A  006F FF8F FFEA     	movff	plusw1,fsr0h
  9983  01C890  006F FF7F FFEF     	movff	indf2,indf0
  9984                           
  9985                           ;hid.c: 42:    h->wait_select = 1;
  9986                           ;stkvar	_h @ sp[(0)+-2]
  9987  01C896  0EFE               	movlw	-2
  9988  01C898  006F FF8C  F00B    	movff	plusw1,btemp+10
  9989  01C89E  0EFF               	movlw	-1
  9990  01C8A0  006F FF8C  F00C    	movff	plusw1,btemp+11
  9991  01C8A6  0E02               	movlw	2
  9992  01C8A8  240B               	addwf	(btemp+10)^0,w,c
  9993  01C8AA  6ED9               	movwf	fsr2l,c
  9994  01C8AC  0E00               	movlw	0
  9995  01C8AE  200C               	addwfc	(btemp+11)^0,w,c
  9996  01C8B0  6EDA               	movwf	fsr2h,c
  9997  01C8B2  0E01               	movlw	1
  9998  01C8B4                     L5:
  9999  01C8B4  6EDF               	movwf	indf2,c
 10000  01C8B6  D01B               	goto	l2275
 10001  01C8B8                     l16921:
 10002                           
 10003                           ;stkvar	_h @ sp[(0)+-2]
 10004  01C8B8  0EFE               	movlw	-2
 10005  01C8BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 10006  01C8C0  0EFF               	movlw	-1
 10007  01C8C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 10008  01C8C8  0E01               	movlw	1
 10009  01C8CA  240B               	addwf	(btemp+10)^0,w,c
 10010  01C8CC  6ED9               	movwf	fsr2l,c
 10011  01C8CE  0E00               	movlw	0
 10012  01C8D0  200C               	addwfc	(btemp+11)^0,w,c
 10013  01C8D2  6EDA               	movwf	fsr2h,c
 10014  01C8D4  50DF               	movf	indf2,w,c
 10015  01C8D6  6E0B               	movwf	(btemp+10)^0,c
 10016  01C8D8  6A0C               	clrf	(btemp+11)^0,c
 10017                           
 10018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10019                           ; Switch size 1, requested type "simple"
 10020                           ; Number of cases is 1, Range of values is 0 to 0
 10021                           ; switch strategies available:
 10022                           ; Name         Instructions Cycles
 10023                           ; simple_byte            4     3 (average)
 10024                           ;	Chosen strategy is simple_byte
 10025  01C8DA  500C               	movf	(btemp+11)^0,w,c
 10026  01C8DC  0A00               	xorlw	0	; case 0
 10027  01C8DE  A4D8               	btfss	status,2,c
 10028  01C8E0  D77F               	goto	l16911
 10029                           
 10030                           ; Switch size 1, requested type "simple"
 10031                           ; Number of cases is 2, Range of values is 0 to 1
 10032                           ; switch strategies available:
 10033                           ; Name         Instructions Cycles
 10034                           ; simple_byte            7     4 (average)
 10035                           ;	Chosen strategy is simple_byte
 10036  01C8E2  500B               	movf	(btemp+10)^0,w,c
 10037  01C8E4  0A00               	xorlw	0	; case 0
 10038  01C8E6  B4D8               	btfsc	status,2,c
 10039  01C8E8  D701               	goto	l16895
 10040  01C8EA  0A01               	xorlw	1	; case 1
 10041  01C8EC  D779               	goto	l16911
 10042  01C8EE                     l2275:
 10043                           
 10044                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
 10045  01C8EE  52E5               	movf	postdec1,f,c
 10046  01C8F0  52E5               	movf	postdec1,f,c
 10047  01C8F2  0012               	return		;funcret
 10048  01C8F4                     __end_of_hid_display:
 10049                           	opt callstack 0
 10050                           
 10051 ;; *************** function _hid_input *****************
 10052 ;; Defined at:
 10053 ;;		line 3 in file "hid.c"
 10054 ;; Parameters:    Size  Location     Type
 10055 ;;  h               2  [STACK] PTR struct H_data
 10056 ;;		 -> H(9), 
 10057 ;; Auto vars:     Size  Location     Type
 10058 ;;		None
 10059 ;; Return value:  Size  Location     Type
 10060 ;;                  2  [STACK] PTR struct H_data
 10061 ;; Registers used:
 10062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10063 ;; Tracked objects:
 10064 ;;		On entry : 0/39
 10065 ;;		On exit  : 0/0
 10066 ;;		Unchanged: 0/0
 10067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10072 ;;Total ram usage:        0 bytes
 10073 ;; Hardware stack levels used:    1
 10074 ;; Hardware stack levels required when called:   16
 10075 ;; This function calls:
 10076 ;;		_get_switch
 10077 ;; This function is called by:
 10078 ;;		_hid_display
 10079 ;; This function uses a reentrant model
 10080 ;;
 10081                           
 10082                           	psect	text24
 10083  01E8FC                     __ptext24:
 10084                           	opt callstack 0
 10085  01E8FC                     _hid_input:
 10086                           	opt callstack 13
 10087                           
 10088                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
 10089                           
 10090                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10091                           ;incstack = 0
 10092  01E8FC  0E02               	movlw	2
 10093  01E8FE  6EE6               	movwf	postinc1,c
 10094  01E900  EC87  F00C         	call	_get_switch	;wreg free
 10095  01E904  5001               	movf	btemp^0,w,c
 10096  01E906  B4D8               	btfsc	status,2,c
 10097  01E908  D02C               	goto	l16657
 10098                           
 10099                           ;hid.c: 6:   h->wait_select = 0;
 10100                           ;stkvar	_h @ sp[(0)+-2]
 10101  01E90A  0EFE               	movlw	-2
 10102  01E90C  006F FF8C  F00B    	movff	plusw1,btemp+10
 10103  01E912  0EFF               	movlw	-1
 10104  01E914  006F FF8C  F00C    	movff	plusw1,btemp+11
 10105  01E91A  0E02               	movlw	2
 10106  01E91C  240B               	addwf	(btemp+10)^0,w,c
 10107  01E91E  6ED9               	movwf	fsr2l,c
 10108  01E920  0E00               	movlw	0
 10109  01E922  200C               	addwfc	(btemp+11)^0,w,c
 10110  01E924  6EDA               	movwf	fsr2h,c
 10111  01E926  0E00               	movlw	0
 10112  01E928  6EDF               	movwf	indf2,c
 10113                           
 10114                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
 10115  01E92A  0E02               	movlw	2
 10116  01E92C  6EE6               	movwf	postinc1,c
 10117  01E92E  EC87  F00C         	call	_get_switch	;wreg free
 10118  01E932  5001               	movf	btemp^0,w,c
 10119  01E934  B4D8               	btfsc	status,2,c
 10120  01E936  D003               	goto	u16230
 10121  01E938  6A0C               	clrf	(btemp+11)^0,c
 10122  01E93A  2A0C               	incf	(btemp+11)^0,f,c
 10123  01E93C  D001               	goto	u16248
 10124  01E93E                     u16230:
 10125  01E93E  6A0C               	clrf	(btemp+11)^0,c
 10126  01E940                     u16248:
 10127                           
 10128                           ;stkvar	_h @ sp[(0)+-2]
 10129  01E940  0EFE               	movlw	-2
 10130  01E942  006F FF8C  F009    	movff	plusw1,btemp+8
 10131  01E948  0EFF               	movlw	-1
 10132  01E94A  006F FF8C  F00A    	movff	plusw1,btemp+9
 10133  01E950  0E03               	movlw	3
 10134  01E952  2409               	addwf	(btemp+8)^0,w,c
 10135  01E954  6ED9               	movwf	fsr2l,c
 10136  01E956  0E00               	movlw	0
 10137  01E958  200A               	addwfc	(btemp+9)^0,w,c
 10138  01E95A  6EDA               	movwf	fsr2h,c
 10139  01E95C  0060  F033  FFDF   	movff	btemp+11,indf2
 10140  01E962                     l16657:
 10141                           
 10142                           ;hid.c: 10:  if (get_switch(SENTER)) {
 10143  01E962  0E03               	movlw	3
 10144  01E964  6EE6               	movwf	postinc1,c
 10145  01E966  EC87  F00C         	call	_get_switch	;wreg free
 10146  01E96A  5001               	movf	btemp^0,w,c
 10147  01E96C  B4D8               	btfsc	status,2,c
 10148  01E96E  D02C               	goto	l16663
 10149                           
 10150                           ;hid.c: 11:   h->wait_enter = 0;
 10151                           ;stkvar	_h @ sp[(0)+-2]
 10152  01E970  0EFE               	movlw	-2
 10153  01E972  006F FF8C  F00B    	movff	plusw1,btemp+10
 10154  01E978  0EFF               	movlw	-1
 10155  01E97A  006F FF8C  F00C    	movff	plusw1,btemp+11
 10156  01E980  0E04               	movlw	4
 10157  01E982  240B               	addwf	(btemp+10)^0,w,c
 10158  01E984  6ED9               	movwf	fsr2l,c
 10159  01E986  0E00               	movlw	0
 10160  01E988  200C               	addwfc	(btemp+11)^0,w,c
 10161  01E98A  6EDA               	movwf	fsr2h,c
 10162  01E98C  0E00               	movlw	0
 10163  01E98E  6EDF               	movwf	indf2,c
 10164                           
 10165                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
 10166  01E990  0E03               	movlw	3
 10167  01E992  6EE6               	movwf	postinc1,c
 10168  01E994  EC87  F00C         	call	_get_switch	;wreg free
 10169  01E998  5001               	movf	btemp^0,w,c
 10170  01E99A  B4D8               	btfsc	status,2,c
 10171  01E99C  D003               	goto	u16260
 10172  01E99E  6A0C               	clrf	(btemp+11)^0,c
 10173  01E9A0  2A0C               	incf	(btemp+11)^0,f,c
 10174  01E9A2  D001               	goto	u16278
 10175  01E9A4                     u16260:
 10176  01E9A4  6A0C               	clrf	(btemp+11)^0,c
 10177  01E9A6                     u16278:
 10178                           
 10179                           ;stkvar	_h @ sp[(0)+-2]
 10180  01E9A6  0EFE               	movlw	-2
 10181  01E9A8  006F FF8C  F009    	movff	plusw1,btemp+8
 10182  01E9AE  0EFF               	movlw	-1
 10183  01E9B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 10184  01E9B6  0E05               	movlw	5
 10185  01E9B8  2409               	addwf	(btemp+8)^0,w,c
 10186  01E9BA  6ED9               	movwf	fsr2l,c
 10187  01E9BC  0E00               	movlw	0
 10188  01E9BE  200A               	addwfc	(btemp+9)^0,w,c
 10189  01E9C0  6EDA               	movwf	fsr2h,c
 10190  01E9C2  0060  F033  FFDF   	movff	btemp+11,indf2
 10191  01E9C8                     l16663:
 10192                           
 10193                           ;hid.c: 15:  if (get_switch(SCALIB)) {
 10194  01E9C8  0E04               	movlw	4
 10195  01E9CA  6EE6               	movwf	postinc1,c
 10196  01E9CC  EC87  F00C         	call	_get_switch	;wreg free
 10197  01E9D0  5001               	movf	btemp^0,w,c
 10198  01E9D2  B4D8               	btfsc	status,2,c
 10199  01E9D4  D02C               	goto	l2266
 10200                           
 10201                           ;hid.c: 16:   h->wait_calib = 0;
 10202                           ;stkvar	_h @ sp[(0)+-2]
 10203  01E9D6  0EFE               	movlw	-2
 10204  01E9D8  006F FF8C  F00B    	movff	plusw1,btemp+10
 10205  01E9DE  0EFF               	movlw	-1
 10206  01E9E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 10207  01E9E6  0E06               	movlw	6
 10208  01E9E8  240B               	addwf	(btemp+10)^0,w,c
 10209  01E9EA  6ED9               	movwf	fsr2l,c
 10210  01E9EC  0E00               	movlw	0
 10211  01E9EE  200C               	addwfc	(btemp+11)^0,w,c
 10212  01E9F0  6EDA               	movwf	fsr2h,c
 10213  01E9F2  0E00               	movlw	0
 10214  01E9F4  6EDF               	movwf	indf2,c
 10215                           
 10216                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
 10217  01E9F6  0E04               	movlw	4
 10218  01E9F8  6EE6               	movwf	postinc1,c
 10219  01E9FA  EC87  F00C         	call	_get_switch	;wreg free
 10220  01E9FE  5001               	movf	btemp^0,w,c
 10221  01EA00  B4D8               	btfsc	status,2,c
 10222  01EA02  D003               	goto	u16290
 10223  01EA04  6A0C               	clrf	(btemp+11)^0,c
 10224  01EA06  2A0C               	incf	(btemp+11)^0,f,c
 10225  01EA08  D001               	goto	u16308
 10226  01EA0A                     u16290:
 10227  01EA0A  6A0C               	clrf	(btemp+11)^0,c
 10228  01EA0C                     u16308:
 10229                           
 10230                           ;stkvar	_h @ sp[(0)+-2]
 10231  01EA0C  0EFE               	movlw	-2
 10232  01EA0E  006F FF8C  F009    	movff	plusw1,btemp+8
 10233  01EA14  0EFF               	movlw	-1
 10234  01EA16  006F FF8C  F00A    	movff	plusw1,btemp+9
 10235  01EA1C  0E07               	movlw	7
 10236  01EA1E  2409               	addwf	(btemp+8)^0,w,c
 10237  01EA20  6ED9               	movwf	fsr2l,c
 10238  01EA22  0E00               	movlw	0
 10239  01EA24  200A               	addwfc	(btemp+9)^0,w,c
 10240  01EA26  6EDA               	movwf	fsr2h,c
 10241  01EA28  0060  F033  FFDF   	movff	btemp+11,indf2
 10242  01EA2E                     l2266:
 10243                           
 10244                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 10245  01EA2E  52E5               	movf	postdec1,f,c
 10246  01EA30  52E5               	movf	postdec1,f,c
 10247  01EA32  0012               	return		;funcret
 10248  01EA34                     __end_of_hid_input:
 10249                           	opt callstack 0
 10250                           
 10251 ;; *************** function _esr_check *****************
 10252 ;; Defined at:
 10253 ;;		line 197 in file "bsoc.c"
 10254 ;; Parameters:    Size  Location     Type
 10255 ;;  fsm             1  [STACK] const unsigned char 
 10256 ;; Auto vars:     Size  Location     Type
 10257 ;;		None
 10258 ;; Return value:  Size  Location     Type
 10259 ;;                  4  [STACK] float 
 10260 ;; Registers used:
 10261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 10262 ;; Tracked objects:
 10263 ;;		On entry : 0/0
 10264 ;;		On exit  : 0/0
 10265 ;;		Unchanged: 0/0
 10266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10271 ;;Total ram usage:        0 bytes
 10272 ;; Hardware stack levels used:    1
 10273 ;; Hardware stack levels required when called:   18
 10274 ;; This function calls:
 10275 ;;		_StartTimer
 10276 ;;		_TimerDone
 10277 ;;		___fldiv
 10278 ;;		___flsub
 10279 ;;		_conv_raw_result
 10280 ;;		_fabsf
 10281 ;;		_set_load_relay_one
 10282 ;;		_set_load_relay_two
 10283 ;;		_update_adc_result
 10284 ;; This function is called by:
 10285 ;;		_main
 10286 ;; This function uses a reentrant model
 10287 ;;
 10288                           
 10289                           	psect	text25
 10290  01A9EC                     __ptext25:
 10291                           	opt callstack 0
 10292  01A9EC                     _esr_check:
 10293                           	opt callstack 12
 10294                           
 10295                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
 10296                           ;stkvar	_fsm @ sp[(0)+-1]
 10297                           
 10298                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10299                           ;incstack = 0
 10300  01A9EC  0EFF               	movlw	-1
 10301  01A9EE  50E3               	movf	plusw1,w,c
 10302  01A9F0  B4D8               	btfsc	status,2,c
 10303  01A9F2  D149               	goto	l14203
 10304                           
 10305                           ;bsoc.c: 202:   esr_state = 0;
 10306  01A9F4  0100               	movlb	0	; () banked
 10307  01A9F6  6BD0               	clrf	esr_check@esr_state& (0+255),b
 10308                           
 10309                           ; BSR set to: 0
 10310                           ;bsoc.c: 203:   return -10.0;
 10311  01A9F8  0E00               	movlw	0
 10312  01A9FA  6E01               	movwf	btemp^0,c
 10313  01A9FC  0E00               	movlw	0
 10314  01A9FE  6E02               	movwf	(btemp+1)^0,c
 10315  01AA00  0E20               	movlw	32
 10316  01AA02  6E03               	movwf	(btemp+2)^0,c
 10317  01AA04  0EC1               	movlw	193
 10318  01AA06  D15B               	goto	L6
 10319  01AA08                     l14135:
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
 10323  01AA08  0E10               	movlw	16
 10324  01AA0A  6EE6               	movwf	postinc1,c
 10325  01AA0C  0E27               	movlw	39
 10326  01AA0E  6EE6               	movwf	postinc1,c
 10327  01AA10  0E0C               	movlw	12
 10328  01AA12  6EE6               	movwf	postinc1,c
 10329  01AA14  EC82  F00A         	call	_StartTimer	;wreg free
 10330  01AA18                     l14137:
 10331                           
 10332                           ;bsoc.c: 209:   esr_state++;
 10333  01AA18  0100               	movlb	0	; () banked
 10334  01AA1A  2BD0               	incf	esr_check@esr_state& (0+255),f,b
 10335                           
 10336                           ;bsoc.c: 210:   break;
 10337  01AA1C  D149               	goto	l14205
 10338  01AA1E                     l14139:
 10339                           
 10340                           ; BSR set to: 0
 10341                           ;bsoc.c: 215:   set_load_relay_one(0);
 10342  01AA1E  0E00               	movlw	0
 10343  01AA20  6EE6               	movwf	postinc1,c
 10344  01AA22  ECAC  F00F         	call	_set_load_relay_one	;wreg free
 10345                           
 10346                           ;bsoc.c: 216:   set_load_relay_two(0);
 10347  01AA26  0E00               	movlw	0
 10348  01AA28  6EE6               	movwf	postinc1,c
 10349  01AA2A  ECA4  F00F         	call	_set_load_relay_two	;wreg free
 10350                           
 10351                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
 10352  01AA2E  0E0C               	movlw	12
 10353  01AA30  6EE6               	movwf	postinc1,c
 10354  01AA32  ECF3  F00C         	call	_TimerDone	;wreg free
 10355  01AA36  5001               	movf	btemp^0,w,c
 10356  01AA38  B4D8               	btfsc	status,2,c
 10357  01AA3A  D009               	goto	l14145
 10358                           
 10359                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
 10360  01AA3C  0E10               	movlw	16
 10361  01AA3E  6EE6               	movwf	postinc1,c
 10362  01AA40  0E27               	movlw	39
 10363  01AA42  6EE6               	movwf	postinc1,c
 10364  01AA44  0E0C               	movlw	12
 10365  01AA46  6EE6               	movwf	postinc1,c
 10366  01AA48  EC82  F00A         	call	_StartTimer	;wreg free
 10367                           
 10368                           ;bsoc.c: 219:   } else {
 10369  01AA4C  D006               	goto	l14149
 10370  01AA4E                     l14145:
 10371                           
 10372                           ;bsoc.c: 220:    return -2.0;
 10373  01AA4E  0E00               	movlw	0
 10374  01AA50  6E01               	movwf	btemp^0,c
 10375  01AA52  0E00               	movlw	0
 10376  01AA54  6E02               	movwf	(btemp+1)^0,c
 10377  01AA56  0E00               	movlw	0
 10378  01AA58  D066               	goto	L8
 10379  01AA5A                     l14149:
 10380                           
 10381                           ;bsoc.c: 225:   update_adc_result();
 10382  01AA5A  EC1F  F00B         	call	_update_adc_result	;wreg free
 10383                           
 10384                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
 10385  01AA5E  0E00               	movlw	0
 10386  01AA60  6EE6               	movwf	postinc1,c
 10387  01AA62  0E04               	movlw	4
 10388  01AA64  6EE6               	movwf	postinc1,c
 10389  01AA66  EC22  F0C2         	call	_conv_raw_result	;wreg free
 10390  01AA6A  0060  F004  FA31   	movff	btemp,_C+306	;volatile
 10391  01AA70  0060  F008  FA32   	movff	btemp+1,_C+307	;volatile
 10392  01AA76  0060  F00C  FA33   	movff	btemp+2,_C+308	;volatile
 10393  01AA7C  0060  F010  FA34   	movff	btemp+3,_C+309	;volatile
 10394  01AA82  D7CA               	goto	l14137
 10395  01AA84                     l14155:
 10396                           
 10397                           ; BSR set to: 0
 10398                           ;bsoc.c: 230:   set_load_relay_one(1);
 10399  01AA84  0E01               	movlw	1
 10400  01AA86  6EE6               	movwf	postinc1,c
 10401  01AA88  ECAC  F00F         	call	_set_load_relay_one	;wreg free
 10402                           
 10403                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
 10404  01AA8C  0E0C               	movlw	12
 10405  01AA8E  6EE6               	movwf	postinc1,c
 10406  01AA90  ECF3  F00C         	call	_TimerDone	;wreg free
 10407  01AA94  5001               	movf	btemp^0,w,c
 10408  01AA96  B4D8               	btfsc	status,2,c
 10409  01AA98  D009               	goto	l14161
 10410                           
 10411                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
 10412  01AA9A  0E10               	movlw	16
 10413  01AA9C  6EE6               	movwf	postinc1,c
 10414  01AA9E  0E27               	movlw	39
 10415  01AAA0  6EE6               	movwf	postinc1,c
 10416  01AAA2  0E0C               	movlw	12
 10417  01AAA4  6EE6               	movwf	postinc1,c
 10418  01AAA6  EC82  F00A         	call	_StartTimer	;wreg free
 10419                           
 10420                           ;bsoc.c: 233:   } else {
 10421  01AAAA  D006               	goto	l14165
 10422  01AAAC                     l14161:
 10423                           
 10424                           ;bsoc.c: 234:    return -3.0;
 10425  01AAAC  0E00               	movlw	0
 10426  01AAAE  6E01               	movwf	btemp^0,c
 10427  01AAB0  0E00               	movlw	0
 10428  01AAB2  6E02               	movwf	(btemp+1)^0,c
 10429  01AAB4  0E40               	movlw	64
 10430  01AAB6  D037               	goto	L8
 10431  01AAB8                     l14165:
 10432                           
 10433                           ;bsoc.c: 237:   update_adc_result();
 10434  01AAB8  EC1F  F00B         	call	_update_adc_result	;wreg free
 10435                           
 10436                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
 10437  01AABC  0E00               	movlw	0
 10438  01AABE  6EE6               	movwf	postinc1,c
 10439  01AAC0  0E04               	movlw	4
 10440  01AAC2  6EE6               	movwf	postinc1,c
 10441  01AAC4  EC22  F0C2         	call	_conv_raw_result	;wreg free
 10442  01AAC8  0060  F004  FA35   	movff	btemp,_C+310	;volatile
 10443  01AACE  0060  F008  FA36   	movff	btemp+1,_C+311	;volatile
 10444  01AAD4  0060  F00C  FA37   	movff	btemp+2,_C+312	;volatile
 10445  01AADA  0060  F010  FA38   	movff	btemp+3,_C+313	;volatile
 10446                           
 10447                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
 10448  01AAE0  0E00               	movlw	0
 10449  01AAE2  6EE6               	movwf	postinc1,c
 10450  01AAE4  0E00               	movlw	0
 10451  01AAE6  6EE6               	movwf	postinc1,c
 10452  01AAE8  EC22  F0C2         	call	_conv_raw_result	;wreg free
 10453  01AAEC  0060  F004  FA29   	movff	btemp,_C+298	;volatile
 10454  01AAF2  0060  F008  FA2A   	movff	btemp+1,_C+299	;volatile
 10455  01AAF8  0060  F00C  FA2B   	movff	btemp+2,_C+300	;volatile
 10456  01AAFE  0060  F010  FA2C   	movff	btemp+3,_C+301	;volatile
 10457  01AB04  D789               	goto	l14137
 10458  01AB06                     l14173:
 10459                           
 10460                           ; BSR set to: 0
 10461                           ;bsoc.c: 243:   set_load_relay_two(1);
 10462  01AB06  0E01               	movlw	1
 10463  01AB08  6EE6               	movwf	postinc1,c
 10464  01AB0A  ECA4  F00F         	call	_set_load_relay_two	;wreg free
 10465                           
 10466                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
 10467  01AB0E  0E0C               	movlw	12
 10468  01AB10  6EE6               	movwf	postinc1,c
 10469  01AB12  ECF3  F00C         	call	_TimerDone	;wreg free
 10470  01AB16  5001               	movf	btemp^0,w,c
 10471  01AB18  A4D8               	btfss	status,2,c
 10472  01AB1A  D008               	goto	l14181
 10473                           
 10474                           ;bsoc.c: 245:    return -4.0;
 10475  01AB1C  0E00               	movlw	0
 10476  01AB1E  6E01               	movwf	btemp^0,c
 10477  01AB20  0E00               	movlw	0
 10478  01AB22  6E02               	movwf	(btemp+1)^0,c
 10479  01AB24  0E80               	movlw	128
 10480  01AB26                     L8:
 10481  01AB26  6E03               	movwf	(btemp+2)^0,c
 10482  01AB28  0EC0               	movlw	192
 10483  01AB2A  D0C9               	goto	L6
 10484  01AB2C                     l14181:
 10485                           
 10486                           ;bsoc.c: 247:   update_adc_result();
 10487  01AB2C  EC1F  F00B         	call	_update_adc_result	;wreg free
 10488                           
 10489                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
 10490  01AB30  0E00               	movlw	0
 10491  01AB32  6EE6               	movwf	postinc1,c
 10492  01AB34  0E04               	movlw	4
 10493  01AB36  6EE6               	movwf	postinc1,c
 10494  01AB38  EC22  F0C2         	call	_conv_raw_result	;wreg free
 10495  01AB3C  0060  F004  FA39   	movff	btemp,_C+314	;volatile
 10496  01AB42  0060  F008  FA3A   	movff	btemp+1,_C+315	;volatile
 10497  01AB48  0060  F00C  FA3B   	movff	btemp+2,_C+316	;volatile
 10498  01AB4E  0060  F010  FA3C   	movff	btemp+3,_C+317	;volatile
 10499                           
 10500                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
 10501  01AB54  0E00               	movlw	0
 10502  01AB56  6EE6               	movwf	postinc1,c
 10503  01AB58  0E00               	movlw	0
 10504  01AB5A  6EE6               	movwf	postinc1,c
 10505  01AB5C  EC22  F0C2         	call	_conv_raw_result	;wreg free
 10506  01AB60  0060  F004  FA2D   	movff	btemp,_C+302	;volatile
 10507  01AB66  0060  F008  FA2E   	movff	btemp+1,_C+303	;volatile
 10508  01AB6C  0060  F00C  FA2F   	movff	btemp+2,_C+304	;volatile
 10509  01AB72  0060  F010  FA30   	movff	btemp+3,_C+305	;volatile
 10510                           
 10511                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
 10512  01AB78  EE22  F22D         	lfsr	2,_C+302	;volatile
 10513  01AB7C  006F FF7B FFE6     	movff	postinc2,postinc1
 10514  01AB82  006F FF7B FFE6     	movff	postinc2,postinc1
 10515  01AB88  006F FF7B FFE6     	movff	postinc2,postinc1
 10516  01AB8E  006F FF7B FFE6     	movff	postinc2,postinc1
 10517  01AB94  EE22  F229         	lfsr	2,_C+298	;volatile
 10518  01AB98  006F FF7B FFE6     	movff	postinc2,postinc1
 10519  01AB9E  006F FF7B FFE6     	movff	postinc2,postinc1
 10520  01ABA4  006F FF7B FFE6     	movff	postinc2,postinc1
 10521  01ABAA  006F FF7B FFE6     	movff	postinc2,postinc1
 10522  01ABB0  ECDC  F009         	call	___flsub	;wreg free
 10523  01ABB4  0060  F007  FFE6   	movff	btemp,postinc1
 10524  01ABBA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10525  01ABC0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10526  01ABC6  0060  F013  FFE6   	movff	btemp+3,postinc1
 10527  01ABCC  EE22  F239         	lfsr	2,_C+314	;volatile
 10528  01ABD0  006F FF7B FFE6     	movff	postinc2,postinc1
 10529  01ABD6  006F FF7B FFE6     	movff	postinc2,postinc1
 10530  01ABDC  006F FF7B FFE6     	movff	postinc2,postinc1
 10531  01ABE2  006F FF7B FFE6     	movff	postinc2,postinc1
 10532  01ABE8  EE22  F235         	lfsr	2,_C+310	;volatile
 10533  01ABEC  006F FF7B FFE6     	movff	postinc2,postinc1
 10534  01ABF2  006F FF7B FFE6     	movff	postinc2,postinc1
 10535  01ABF8  006F FF7B FFE6     	movff	postinc2,postinc1
 10536  01ABFE  006F FF7B FFE6     	movff	postinc2,postinc1
 10537  01AC04  ECDC  F009         	call	___flsub	;wreg free
 10538  01AC08  0060  F007  FFE6   	movff	btemp,postinc1
 10539  01AC0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10540  01AC14  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10541  01AC1A  0060  F013  FFE6   	movff	btemp+3,postinc1
 10542  01AC20  ECDA  F0BC         	call	___fldiv	;wreg free
 10543  01AC24  0060  F007  FFE6   	movff	btemp,postinc1
 10544  01AC2A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10545  01AC30  0060  F00F  FFE6   	movff	btemp+2,postinc1
 10546  01AC36  0060  F013  FFE6   	movff	btemp+3,postinc1
 10547  01AC3C  ECB9  F0FE         	call	_fabsf	;wreg free
 10548  01AC40  0060  F004  F987   	movff	btemp,_C+136	;volatile
 10549  01AC46  0060  F008  F988   	movff	btemp+1,_C+137	;volatile
 10550  01AC4C  0060  F00C  F989   	movff	btemp+2,_C+138	;volatile
 10551  01AC52  0060  F010  F98A   	movff	btemp+3,_C+139	;volatile
 10552                           
 10553                           ;bsoc.c: 252:   set_load_relay_one(0);
 10554  01AC58  0E00               	movlw	0
 10555  01AC5A  6EE6               	movwf	postinc1,c
 10556  01AC5C  ECAC  F00F         	call	_set_load_relay_one	;wreg free
 10557                           
 10558                           ;bsoc.c: 253:   set_load_relay_two(0);
 10559  01AC60  0E00               	movlw	0
 10560  01AC62  6EE6               	movwf	postinc1,c
 10561  01AC64  ECA4  F00F         	call	_set_load_relay_two	;wreg free
 10562                           
 10563                           ;bsoc.c: 254:   esr_state = 0;
 10564  01AC68  0100               	movlb	0	; () banked
 10565  01AC6A  6BD0               	clrf	esr_check@esr_state& (0+255),b
 10566                           
 10567                           ; BSR set to: 0
 10568                           ;bsoc.c: 255:   return C.esr;
 10569  01AC6C  0062  F61C  F001   	movff	_C+136,btemp	;volatile
 10570  01AC72  0062  F620  F002   	movff	_C+137,btemp+1	;volatile
 10571  01AC78  0062  F624  F003   	movff	_C+138,btemp+2	;volatile
 10572  01AC7E  0062  F628  F004   	movff	_C+139,btemp+3	;volatile
 10573  01AC84  D01D               	goto	l2391
 10574  01AC86                     l14203:
 10575  01AC86  0100               	movlb	0	; () banked
 10576  01AC88  51D0               	movf	esr_check@esr_state& (0+255),w,b
 10577  01AC8A  6E0B               	movwf	(btemp+10)^0,c
 10578  01AC8C  6A0C               	clrf	(btemp+11)^0,c
 10579                           
 10580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10581                           ; Switch size 1, requested type "simple"
 10582                           ; Number of cases is 1, Range of values is 0 to 0
 10583                           ; switch strategies available:
 10584                           ; Name         Instructions Cycles
 10585                           ; simple_byte            4     3 (average)
 10586                           ;	Chosen strategy is simple_byte
 10587  01AC8E  500C               	movf	(btemp+11)^0,w,c
 10588  01AC90  0A00               	xorlw	0	; case 0
 10589  01AC92  A4D8               	btfss	status,2,c
 10590  01AC94  D00D               	goto	l14205
 10591                           
 10592                           ; BSR set to: 0
 10593                           ; Switch size 1, requested type "simple"
 10594                           ; Number of cases is 4, Range of values is 0 to 3
 10595                           ; switch strategies available:
 10596                           ; Name         Instructions Cycles
 10597                           ; simple_byte           13     7 (average)
 10598                           ;	Chosen strategy is simple_byte
 10599  01AC96  500B               	movf	(btemp+10)^0,w,c
 10600  01AC98  0A00               	xorlw	0	; case 0
 10601  01AC9A  B4D8               	btfsc	status,2,c
 10602  01AC9C  D6B5               	goto	l14135
 10603  01AC9E  0A01               	xorlw	1	; case 1
 10604  01ACA0  B4D8               	btfsc	status,2,c
 10605  01ACA2  D6BD               	goto	l14139
 10606  01ACA4  0A03               	xorlw	3	; case 2
 10607  01ACA6  B4D8               	btfsc	status,2,c
 10608  01ACA8  D6ED               	goto	l14155
 10609  01ACAA  0A01               	xorlw	1	; case 3
 10610  01ACAC  B4D8               	btfsc	status,2,c
 10611  01ACAE  D72B               	goto	l14173
 10612  01ACB0                     l14205:
 10613                           
 10614                           ; BSR set to: 0
 10615                           ;bsoc.c: 260:  return -1.0;
 10616  01ACB0  0E00               	movlw	0
 10617  01ACB2  6E01               	movwf	btemp^0,c
 10618  01ACB4  0E00               	movlw	0
 10619  01ACB6  6E02               	movwf	(btemp+1)^0,c
 10620  01ACB8  0E80               	movlw	128
 10621  01ACBA  6E03               	movwf	(btemp+2)^0,c
 10622  01ACBC  0EBF               	movlw	191
 10623  01ACBE                     L6:
 10624  01ACBE  6E04               	movwf	(btemp+3)^0,c
 10625  01ACC0                     l2391:
 10626                           
 10627                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 10628  01ACC0  52E5               	movf	postdec1,f,c
 10629  01ACC2  0012               	return		;funcret
 10630  01ACC4                     __end_of_esr_check:
 10631                           	opt callstack 0
 10632                           
 10633 ;; *************** function _update_adc_result *****************
 10634 ;; Defined at:
 10635 ;;		line 109 in file "daq.c"
 10636 ;; Parameters:    Size  Location     Type
 10637 ;;		None
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;		None
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  1  [STACK] _Bool 
 10642 ;; Registers used:
 10643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10653 ;;Total ram usage:        0 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; Hardware stack levels required when called:   17
 10656 ;; This function calls:
 10657 ;;		_StartTimer
 10658 ;;		_TimerDone
 10659 ;;		_check_adc_scan
 10660 ;;		_clear_adc_scan
 10661 ;;		_start_adc_scan
 10662 ;; This function is called by:
 10663 ;;		_esr_check
 10664 ;; This function uses a reentrant model
 10665 ;;
 10666                           
 10667                           	psect	text26
 10668  00163E                     __ptext26:
 10669                           	opt callstack 0
 10670  00163E                     _update_adc_result:
 10671                           	opt callstack 12
 10672                           
 10673                           ;daq.c: 111:  if (R.done) {
 10674                           
 10675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10676                           ;incstack = 0
 10677  00163E  0102               	movlb	2	; () banked
 10678  001640  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 10679  001642  B4D8               	btfsc	status,2,c
 10680  001644  0012               	return	
 10681                           
 10682                           ; BSR set to: 2
 10683                           ;daq.c: 112:   clear_adc_scan();
 10684  001646  EC24  F010         	call	_clear_adc_scan	;wreg free
 10685                           
 10686                           ; BSR set to: 2
 10687                           ;daq.c: 113:   start_adc_scan();
 10688  00164A  ECBF  F006         	call	_start_adc_scan	;wreg free
 10689                           
 10690                           ;daq.c: 114:   StartTimer(TMR_ADC, 200);
 10691  00164E  0EC8               	movlw	200
 10692  001650  6EE6               	movwf	postinc1,c
 10693  001652  0E00               	movlw	0
 10694  001654  6EE6               	movwf	postinc1,c
 10695  001656  0E01               	movlw	1
 10696  001658  6EE6               	movwf	postinc1,c
 10697  00165A  EC82  F00A         	call	_StartTimer	;wreg free
 10698  00165E                     l13581:
 10699  00165E  0E01               	movlw	1
 10700  001660  6EE6               	movwf	postinc1,c
 10701  001662  ECF3  F00C         	call	_TimerDone	;wreg free
 10702  001666  5001               	movf	btemp^0,w,c
 10703  001668  A4D8               	btfss	status,2,c
 10704  00166A  0012               	return	
 10705  00166C  EC0D  F010         	call	_check_adc_scan	;wreg free
 10706  001670  5001               	movf	btemp^0,w,c
 10707  001672  A4D8               	btfss	status,2,c
 10708  001674  0012               	return	
 10709  001676  D7F3               	goto	l13581
 10710  001678                     __end_of_update_adc_result:
 10711                           	opt callstack 0
 10712                           
 10713 ;; *************** function _check_adc_scan *****************
 10714 ;; Defined at:
 10715 ;;		line 93 in file "daq.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;		None
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;		None
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  1  [STACK] _Bool 
 10722 ;; Registers used:
 10723 ;;		btemp
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/1
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10733 ;;Total ram usage:        0 bytes
 10734 ;; Hardware stack levels used:    1
 10735 ;; Hardware stack levels required when called:   15
 10736 ;; This function calls:
 10737 ;;		Nothing
 10738 ;; This function is called by:
 10739 ;;		_main
 10740 ;;		_update_adc_result
 10741 ;; This function uses a reentrant model
 10742 ;;
 10743                           
 10744                           	psect	text27
 10745  00201A                     __ptext27:
 10746                           	opt callstack 0
 10747  00201A                     _check_adc_scan:
 10748                           	opt callstack 13
 10749                           
 10750                           ;daq.c: 95:  return R.done;
 10751                           
 10752                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10753                           ;incstack = 0
 10754  00201A  0060  F8D4  F001   	movff	_R+53,btemp	;volatile
 10755                           
 10756                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10757  002020  0012               	return		;funcret
 10758  002022                     __end_of_check_adc_scan:
 10759                           	opt callstack 0
 10760                           
 10761 ;; *************** function _set_load_relay_two *****************
 10762 ;; Defined at:
 10763 ;;		line 131 in file "mbmc.c"
 10764 ;; Parameters:    Size  Location     Type
 10765 ;;  mode            1  [STACK] const _Bool 
 10766 ;; Auto vars:     Size  Location     Type
 10767 ;;		None
 10768 ;; Return value:  Size  Location     Type
 10769 ;;                  1  [STACK] void 
 10770 ;; Registers used:
 10771 ;;		wreg, fsr1l, fsr1h
 10772 ;; Tracked objects:
 10773 ;;		On entry : 0/0
 10774 ;;		On exit  : 0/0
 10775 ;;		Unchanged: 0/0
 10776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10781 ;;Total ram usage:        0 bytes
 10782 ;; Hardware stack levels used:    1
 10783 ;; Hardware stack levels required when called:   15
 10784 ;; This function calls:
 10785 ;;		Nothing
 10786 ;; This function is called by:
 10787 ;;		_main
 10788 ;;		_esr_check
 10789 ;; This function uses a reentrant model
 10790 ;;
 10791                           
 10792                           	psect	text28
 10793  001F48                     __ptext28:
 10794                           	opt callstack 0
 10795  001F48                     _set_load_relay_two:
 10796                           	opt callstack 15
 10797                           
 10798                           ;mbmc.c: 131: void set_load_relay_two(const _Bool mode);mbmc.c: 132: {;mbmc.c: 133:  LAT
      +                          Dbits.LATD5 = mode;
 10799                           ;stkvar	_mode @ sp[(0)+-1]
 10800                           
 10801                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10802                           ;incstack = 0
 10803  001F48  0EFF               	movlw	-1
 10804  001F4A  B0E3               	btfsc	plusw1,0,c
 10805  001F4C  D002               	bra	u12435
 10806  001F4E  9ABD               	bcf	189,5,c	;volatile
 10807  001F50  D001               	bra	u12436
 10808  001F52                     u12435:
 10809  001F52  8ABD               	bsf	189,5,c	;volatile
 10810  001F54                     u12436:
 10811                           
 10812                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10813  001F54  52E5               	movf	postdec1,f,c
 10814  001F56  0012               	return		;funcret
 10815  001F58                     __end_of_set_load_relay_two:
 10816                           	opt callstack 0
 10817                           
 10818 ;; *************** function _set_load_relay_one *****************
 10819 ;; Defined at:
 10820 ;;		line 126 in file "mbmc.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;  mode            1  [STACK] const _Bool 
 10823 ;; Auto vars:     Size  Location     Type
 10824 ;;		None
 10825 ;; Return value:  Size  Location     Type
 10826 ;;                  1  [STACK] void 
 10827 ;; Registers used:
 10828 ;;		wreg, fsr1l, fsr1h
 10829 ;; Tracked objects:
 10830 ;;		On entry : 0/0
 10831 ;;		On exit  : 0/0
 10832 ;;		Unchanged: 0/0
 10833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10838 ;;Total ram usage:        0 bytes
 10839 ;; Hardware stack levels used:    1
 10840 ;; Hardware stack levels required when called:   15
 10841 ;; This function calls:
 10842 ;;		Nothing
 10843 ;; This function is called by:
 10844 ;;		_main
 10845 ;;		_esr_check
 10846 ;; This function uses a reentrant model
 10847 ;;
 10848                           
 10849                           	psect	text29
 10850  001F58                     __ptext29:
 10851                           	opt callstack 0
 10852  001F58                     _set_load_relay_one:
 10853                           	opt callstack 15
 10854                           
 10855                           ;mbmc.c: 126: void set_load_relay_one(const _Bool mode);mbmc.c: 127: {;mbmc.c: 128:  LAT
      +                          Dbits.LATD4 = mode;
 10856                           ;stkvar	_mode @ sp[(0)+-1]
 10857                           
 10858                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10859                           ;incstack = 0
 10860  001F58  0EFF               	movlw	-1
 10861  001F5A  B0E3               	btfsc	plusw1,0,c
 10862  001F5C  D002               	bra	u12425
 10863  001F5E  98BD               	bcf	189,4,c	;volatile
 10864  001F60  D001               	bra	u12426
 10865  001F62                     u12425:
 10866  001F62  88BD               	bsf	189,4,c	;volatile
 10867  001F64                     u12426:
 10868                           
 10869                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 10870  001F64  52E5               	movf	postdec1,f,c
 10871  001F66  0012               	return		;funcret
 10872  001F68                     __end_of_set_load_relay_one:
 10873                           	opt callstack 0
 10874                           
 10875 ;; *************** function _eaDogM_WriteCommand *****************
 10876 ;; Defined at:
 10877 ;;		line 385 in file "eadog.c"
 10878 ;; Parameters:    Size  Location     Type
 10879 ;;  cmd             1  [STACK] const unsigned char 
 10880 ;; Auto vars:     Size  Location     Type
 10881 ;;		None
 10882 ;; Return value:  Size  Location     Type
 10883 ;;                  1  [STACK] void 
 10884 ;; Registers used:
 10885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10886 ;; Tracked objects:
 10887 ;;		On entry : 3F/3D
 10888 ;;		On exit  : 3F/0
 10889 ;;		Unchanged: 0/0
 10890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10895 ;;Total ram usage:        0 bytes
 10896 ;; Hardware stack levels used:    1
 10897 ;; Hardware stack levels required when called:   26
 10898 ;; This function calls:
 10899 ;;		_send_lcd_cmd_dma
 10900 ;; This function is called by:
 10901 ;;		_main
 10902 ;; This function uses a reentrant model
 10903 ;;
 10904                           
 10905                           	psect	text30
 10906  001F98                     __ptext30:
 10907                           	opt callstack 0
 10908  001F98                     _eaDogM_WriteCommand:
 10909                           	opt callstack 4
 10910                           
 10911                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
 10912                           ;stkvar	_cmd @ sp[(0)+-1]
 10913                           
 10914                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10915                           ;incstack = 0
 10916  001F98  0EFF               	movlw	-1
 10917  001F9A  50E3               	movf	plusw1,w,c
 10918  001F9C  6EE6               	movwf	postinc1,c
 10919  001F9E  ECFB  F00E         	call	_send_lcd_cmd_dma	;wreg free
 10920                           
 10921                           ; BSR set to: 0
 10922                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
 10923  001FA2  52E5               	movf	postdec1,f,c
 10924  001FA4  0012               	return		;funcret
 10925  001FA6                     __end_of_eaDogM_WriteCommand:
 10926                           	opt callstack 0
 10927                           
 10928 ;; *************** function _display_history *****************
 10929 ;; Defined at:
 10930 ;;		line 615 in file "main.c"
 10931 ;; Parameters:    Size  Location     Type
 10932 ;;		None
 10933 ;; Auto vars:     Size  Location     Type
 10934 ;;  clock           8  [STACK] long long 
 10935 ;; Return value:  Size  Location     Type
 10936 ;;                  1  [STACK] _Bool 
 10937 ;; Registers used:
 10938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 10939 ;; Tracked objects:
 10940 ;;		On entry : 0/1
 10941 ;;		On exit  : 0/0
 10942 ;;		Unchanged: 0/0
 10943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10948 ;;Total ram usage:        0 bytes
 10949 ;; Hardware stack levels used:    1
 10950 ;; Hardware stack levels required when called:   28
 10951 ;; This function calls:
 10952 ;;		_WaitMs
 10953 ;;		_asctime
 10954 ;;		_get_switch
 10955 ;;		_get_vterm_ptr
 10956 ;;		_localtime
 10957 ;;		_sprintf
 10958 ;;		_time
 10959 ;;		_update_lcd
 10960 ;; This function is called by:
 10961 ;;		_main
 10962 ;; This function uses a reentrant model
 10963 ;;
 10964                           
 10965                           	psect	text31
 10966  01CED4                     __ptext31:
 10967                           	opt callstack 0
 10968  01CED4                     _display_history:
 10969                           	opt callstack 0
 10970                           
 10971                           ; BSR set to: 0
 10972                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10973  01CED4  0E08               	movlw	8
 10974  01CED6  26E1               	addwf	fsr1l,f,c
 10975  01CED8  0E00               	movlw	0
 10976  01CEDA  22E2               	addwfc	fsr1h,f,c
 10977                           
 10978                           ;main.c: 617:  static uint8_t bwait = 0;;main.c: 618:  time_t clock = time(((void*)0));
 10979                           
 10980                           ;incstack = 0
 10981  01CEDC  0E00               	movlw	0
 10982  01CEDE  6EE6               	movwf	postinc1,c
 10983  01CEE0  0E00               	movlw	0
 10984  01CEE2  6EE6               	movwf	postinc1,c
 10985  01CEE4  EC83  F007         	call	_time	;wreg free
 10986  01CEE8  52E5               	movf	postdec1,f,c
 10987  01CEEA  006F FF9C  F018    	movff	indf1,btemp+23
 10988  01CEF0  52E5               	movf	postdec1,f,c
 10989  01CEF2  006F FF9C  F017    	movff	indf1,btemp+22
 10990  01CEF8  52E5               	movf	postdec1,f,c
 10991  01CEFA  006F FF9C  F016    	movff	indf1,btemp+21
 10992  01CF00  52E5               	movf	postdec1,f,c
 10993  01CF02  006F FF9C  F015    	movff	indf1,btemp+20
 10994  01CF08  52E5               	movf	postdec1,f,c
 10995  01CF0A  006F FF9C  F014    	movff	indf1,btemp+19
 10996  01CF10  52E5               	movf	postdec1,f,c
 10997  01CF12  006F FF9C  F013    	movff	indf1,btemp+18
 10998  01CF18  52E5               	movf	postdec1,f,c
 10999  01CF1A  006F FF9C  F012    	movff	indf1,btemp+17
 11000  01CF20  52E5               	movf	postdec1,f,c
 11001  01CF22  006F FF9C  F011    	movff	indf1,btemp+16
 11002                           
 11003                           ;stkvar	_clock @ sp[(-8)+0]
 11004  01CF28  0EF8               	movlw	-8
 11005  01CF2A  0060  F047  FFE3   	movff	btemp+16,plusw1
 11006  01CF30  0EF9               	movlw	-7
 11007  01CF32  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11008  01CF38  0EFA               	movlw	-6
 11009  01CF3A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 11010  01CF40  0EFB               	movlw	-5
 11011  01CF42  0060  F053  FFE3   	movff	btemp+19,plusw1
 11012  01CF48  0EFC               	movlw	-4
 11013  01CF4A  0060  F057  FFE3   	movff	btemp+20,plusw1
 11014  01CF50  0EFD               	movlw	-3
 11015  01CF52  0060  F05B  FFE3   	movff	btemp+21,plusw1
 11016  01CF58  0EFE               	movlw	-2
 11017  01CF5A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 11018  01CF60  0EFF               	movlw	-1
 11019  01CF62  0060  F063  FFE3   	movff	btemp+23,plusw1
 11020                           
 11021                           ; BSR set to: 57
 11022                           ;main.c: 620:  if (get_switch(SCALIB) && (++bwait > 5)) {
 11023  01CF68  0E04               	movlw	4
 11024  01CF6A  6EE6               	movwf	postinc1,c
 11025  01CF6C  EC87  F00C         	call	_get_switch	;wreg free
 11026  01CF70  5001               	movf	btemp^0,w,c
 11027  01CF72  B4D8               	btfsc	status,2,c
 11028  01CF74  D082               	goto	l16969
 11029  01CF76  2A43               	incf	display_history@bwait^0,f,c
 11030  01CF78  0E05               	movlw	5
 11031  01CF7A  6443               	cpfsgt	display_history@bwait^0,c
 11032  01CF7C  D07E               	goto	l16969
 11033                           
 11034                           ;main.c: 621:   t_mbmc = localtime(&clock);
 11035                           ;stkvar	_clock @ sp[(-8)+0]
 11036  01CF7E  0EF8               	movlw	248
 11037  01CF80  24E1               	addwf	fsr1l,w,c
 11038  01CF82  6E01               	movwf	btemp^0,c
 11039  01CF84  0EFF               	movlw	255
 11040  01CF86  20E2               	addwfc	fsr1h,w,c
 11041  01CF88  6E02               	movwf	(btemp+1)^0,c
 11042  01CF8A  0060  F007  FFE6   	movff	btemp,postinc1
 11043  01CF90  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11044  01CF96  ECCC  F00E         	call	_localtime	;wreg free
 11045  01CF9A  0060  F004  F0C6   	movff	btemp,_t_mbmc
 11046  01CFA0  0060  F008  F0C7   	movff	btemp+1,_t_mbmc+1
 11047                           
 11048                           ;main.c: 622:   sprintf(get_vterm_ptr(0, 0), "History 3           ");
 11049  01CFA6  0EA4               	movlw	low STR_64
 11050  01CFA8  6EE6               	movwf	postinc1,c
 11051  01CFAA  0EFD               	movlw	high STR_64
 11052  01CFAC  6EE6               	movwf	postinc1,c
 11053  01CFAE  0E00               	movlw	0
 11054  01CFB0  6EE6               	movwf	postinc1,c
 11055  01CFB2  0E00               	movlw	0
 11056  01CFB4  6EE6               	movwf	postinc1,c
 11057  01CFB6  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 11058  01CFBA  0060  F007  FFE6   	movff	btemp,postinc1
 11059  01CFC0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11060  01CFC6  0E04               	movlw	4
 11061  01CFC8  6EE6               	movwf	postinc1,c
 11062  01CFCA  ECDB  F0F7         	call	_sprintf	;wreg free
 11063                           
 11064                           ; BSR set to: 0
 11065                           ;main.c: 623:   sprintf(get_vterm_ptr(1, 0), "History 3           ");
 11066  01CFCE  0EA4               	movlw	low STR_64
 11067  01CFD0  6EE6               	movwf	postinc1,c
 11068  01CFD2  0EFD               	movlw	high STR_64
 11069  01CFD4  6EE6               	movwf	postinc1,c
 11070  01CFD6  0E00               	movlw	0
 11071  01CFD8  6EE6               	movwf	postinc1,c
 11072  01CFDA  0E01               	movlw	1
 11073  01CFDC  6EE6               	movwf	postinc1,c
 11074  01CFDE  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 11075  01CFE2  0060  F007  FFE6   	movff	btemp,postinc1
 11076  01CFE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11077  01CFEE  0E04               	movlw	4
 11078  01CFF0  6EE6               	movwf	postinc1,c
 11079  01CFF2  ECDB  F0F7         	call	_sprintf	;wreg free
 11080                           
 11081                           ; BSR set to: 0
 11082                           ;main.c: 624:   sprintf(get_vterm_ptr(2, 0), "History 3           ");
 11083  01CFF6  0EA4               	movlw	low STR_64
 11084  01CFF8  6EE6               	movwf	postinc1,c
 11085  01CFFA  0EFD               	movlw	high STR_64
 11086  01CFFC  6EE6               	movwf	postinc1,c
 11087  01CFFE  0E00               	movlw	0
 11088  01D000  6EE6               	movwf	postinc1,c
 11089  01D002  0E02               	movlw	2
 11090  01D004  6EE6               	movwf	postinc1,c
 11091  01D006  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 11092  01D00A  0060  F007  FFE6   	movff	btemp,postinc1
 11093  01D010  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11094  01D016  0E04               	movlw	4
 11095  01D018  6EE6               	movwf	postinc1,c
 11096  01D01A  ECDB  F0F7         	call	_sprintf	;wreg free
 11097                           
 11098                           ; BSR set to: 0
 11099                           ;main.c: 625:   sprintf(get_vterm_ptr(3, 0), "%s           ", asctime(t_mbmc));
 11100  01D01E  0060  F31B  FFE6   	movff	_t_mbmc,postinc1
 11101  01D024  0060  F31F  FFE6   	movff	_t_mbmc+1,postinc1
 11102  01D02A  EC97  F0BF         	call	_asctime	;wreg free
 11103  01D02E  0060  F007  FFE6   	movff	btemp,postinc1
 11104  01D034  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11105  01D03A  0E61               	movlw	low (STR_72+5)
 11106  01D03C  6EE6               	movwf	postinc1,c
 11107  01D03E  0EFF               	movlw	high (STR_72+5)
 11108  01D040  6EE6               	movwf	postinc1,c
 11109  01D042  0E00               	movlw	0
 11110  01D044  6EE6               	movwf	postinc1,c
 11111  01D046  0E03               	movlw	3
 11112  01D048  6EE6               	movwf	postinc1,c
 11113  01D04A  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 11114  01D04E  0060  F007  FFE6   	movff	btemp,postinc1
 11115  01D054  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11116  01D05A  0E06               	movlw	6
 11117  01D05C  6EE6               	movwf	postinc1,c
 11118  01D05E  ECDB  F0F7         	call	_sprintf	;wreg free
 11119                           
 11120                           ; BSR set to: 0
 11121                           ;main.c: 626:   update_lcd(0);
 11122  01D062  0E00               	movlw	0
 11123  01D064  6EE6               	movwf	postinc1,c
 11124  01D066  EC8D  F0F0         	call	_update_lcd	;wreg free
 11125                           
 11126                           ;main.c: 627:   WaitMs(2000);
 11127  01D06A  0ED0               	movlw	208
 11128  01D06C  6EE6               	movwf	postinc1,c
 11129  01D06E  0E07               	movlw	7
 11130  01D070  6EE6               	movwf	postinc1,c
 11131  01D072  EC74  F00B         	call	_WaitMs	;wreg free
 11132  01D076                     l16963:
 11133                           
 11134                           ;main.c: 628:   bwait = 0;
 11135  01D076  6A43               	clrf	display_history@bwait^0,c
 11136  01D078  D007               	goto	l1525
 11137  01D07A                     l16969:
 11138                           
 11139                           ;main.c: 631:   if (!get_switch(SCALIB))
 11140  01D07A  0E04               	movlw	4
 11141  01D07C  6EE6               	movwf	postinc1,c
 11142  01D07E  EC87  F00C         	call	_get_switch	;wreg free
 11143  01D082  5001               	movf	btemp^0,w,c
 11144  01D084  B4D8               	btfsc	status,2,c
 11145  01D086  D7F7               	goto	l16963
 11146  01D088                     l1525:
 11147                           
 11148                           ; _display_history: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11149  01D088  0EF8               	movlw	248
 11150  01D08A  26E1               	addwf	fsr1l,f,c
 11151  01D08C  0EFF               	movlw	255
 11152  01D08E  22E2               	addwfc	fsr1h,f,c
 11153  01D090  0012               	return		;funcret
 11154  01D092                     __end_of_display_history:
 11155                           	opt callstack 0
 11156                           
 11157 ;; *************** function _time *****************
 11158 ;; Defined at:
 11159 ;;		line 231 in file "mbmc.c"
 11160 ;; Parameters:    Size  Location     Type
 11161 ;;  t               2  [STACK] PTR long long 
 11162 ;;		 -> time@current_time(8), NULL(0), 
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;		None
 11165 ;; Return value:  Size  Location     Type
 11166 ;;                  8  [STACK] long long 
 11167 ;; Registers used:
 11168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl
 11169 ;; Tracked objects:
 11170 ;;		On entry : 0/1
 11171 ;;		On exit  : 3F/39
 11172 ;;		Unchanged: 0/0
 11173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11178 ;;Total ram usage:        0 bytes
 11179 ;; Hardware stack levels used:    1
 11180 ;; Hardware stack levels required when called:   15
 11181 ;; This function calls:
 11182 ;;		Nothing
 11183 ;; This function is called by:
 11184 ;;		_display_history
 11185 ;; This function uses a reentrant model
 11186 ;;
 11187                           
 11188                           	psect	text32
 11189  000F06                     __ptext32:
 11190                           	opt callstack 0
 11191  000F06                     _time:
 11192                           	opt callstack 0
 11193                           
 11194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 8 argfudge = 6
 11195  000F06  0E06               	movlw	6
 11196  000F08  26E1               	addwf	fsr1l,f,c
 11197  000F0A  0E00               	movlw	0
 11198  000F0C  22E2               	addwfc	fsr1h,f,c
 11199                           
 11200                           ;mbmc.c: 231: time_t time(time_t * t);mbmc.c: 232: {;mbmc.c: 233:  static time_t current
      +                          _time;;mbmc.c: 234:  PIE8bits.TMR5IE = 0;
 11201                           
 11202                           ;incstack = 0
 11203  000F0E  0139               	movlb	57	; () banked
 11204  000F10  9D98               	bcf	152,6,b	;volatile
 11205                           
 11206                           ; BSR set to: 57
 11207                           ;mbmc.c: 235:  current_time = V.ticks;
 11208  000F12  0101               	movlb	1	; () banked
 11209  000F14  5188               	movf	(_V+129)& (0+255),w,b	;volatile
 11210  000F16  0100               	movlb	0	; () banked
 11211  000F18  6FDC               	movwf	time@current_time& (0+255),b
 11212  000F1A  0101               	movlb	1	; () banked
 11213  000F1C  5189               	movf	(_V+130)& (0+255),w,b	;volatile
 11214  000F1E  0100               	movlb	0	; () banked
 11215  000F20  6FDD               	movwf	(time@current_time+1)& (0+255),b
 11216  000F22  0101               	movlb	1	; () banked
 11217  000F24  518A               	movf	(_V+131)& (0+255),w,b	;volatile
 11218  000F26  0100               	movlb	0	; () banked
 11219  000F28  6FDE               	movwf	(time@current_time+2)& (0+255),b
 11220  000F2A  0101               	movlb	1	; () banked
 11221  000F2C  518B               	movf	(_V+132)& (0+255),w,b	;volatile
 11222  000F2E  0100               	movlb	0	; () banked
 11223  000F30  6FDF               	movwf	(time@current_time+3)& (0+255),b
 11224  000F32  6BE0               	clrf	(time@current_time+4)& (0+255),b
 11225  000F34  6BE1               	clrf	(time@current_time+5)& (0+255),b
 11226  000F36  6BE2               	clrf	(time@current_time+6)& (0+255),b
 11227  000F38  6BE3               	clrf	(time@current_time+7)& (0+255),b
 11228                           
 11229                           ; BSR set to: 0
 11230                           ;mbmc.c: 236:  PIE8bits.TMR5IE = 1;
 11231  000F3A  0139               	movlb	57	; () banked
 11232  000F3C  8D98               	bsf	152,6,b	;volatile
 11233                           
 11234                           ; BSR set to: 57
 11235                           ;mbmc.c: 237:  if (t) {
 11236                           ;stkvar	_t @ sp[(0)+-8]
 11237  000F3E  0EF8               	movlw	-8
 11238  000F40  006F FF8C  F001    	movff	plusw1,btemp
 11239  000F46  0EF9               	movlw	-7
 11240  000F48  50E3               	movf	plusw1,w,c
 11241  000F4A  1001               	iorwf	btemp^0,w,c
 11242                           
 11243                           ; BSR set to: 57
 11244                           ;mbmc.c: 240:  return current_time;
 11245                           
 11246                           ; BSR set to: 57
 11247  000F4C  EE20  F0DC         	lfsr	2,time@current_time
 11248                           
 11249                           ;stkvar	?_time @ sp[(0)+-8]
 11250  000F50  0E08               	movlw	8
 11251  000F52  6E01               	movwf	btemp^0,c
 11252  000F54  0EF8               	movlw	-8
 11253  000F56                     us1259999:
 11254  000F56  006F FF7B FFE3     	movff	postinc2,plusw1
 11255  000F5C  28E8               	incf	wreg,w,c
 11256  000F5E  2E01               	decfsz	btemp^0,f,c
 11257  000F60  D7FA               	bra	us1259999
 11258                           
 11259                           ; BSR set to: 57
 11260                           ; _time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize 
      +                          = 8, vargsize = 0
 11261  000F62  0012               	return		;funcret
 11262  000F64                     __end_of_time:
 11263                           	opt callstack 0
 11264                           
 11265 ;; *************** function _localtime *****************
 11266 ;; Defined at:
 11267 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime.c"
 11268 ;; Parameters:    Size  Location     Type
 11269 ;;  t               2  [STACK] PTR const long long 
 11270 ;;		 -> clock(8), 
 11271 ;; Auto vars:     Size  Location     Type
 11272 ;;		None
 11273 ;; Return value:  Size  Location     Type
 11274 ;;                  2  [STACK] PTR struct tm
 11275 ;; Registers used:
 11276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11277 ;; Tracked objects:
 11278 ;;		On entry : 0/39
 11279 ;;		On exit  : 0/0
 11280 ;;		Unchanged: 0/0
 11281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11286 ;;Total ram usage:        0 bytes
 11287 ;; Hardware stack levels used:    1
 11288 ;; Hardware stack levels required when called:   21
 11289 ;; This function calls:
 11290 ;;		___localtime_r
 11291 ;; This function is called by:
 11292 ;;		_display_history
 11293 ;; This function uses a reentrant model
 11294 ;;
 11295                           
 11296                           	psect	text33
 11297  001D98                     __ptext33:
 11298                           	opt callstack 0
 11299  001D98                     _localtime:
 11300                           	opt callstack 8
 11301                           
 11302                           ; BSR set to: 57
 11303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11304                           ;incstack = 0
 11305  001D98  0EDF               	movlw	low localtime@tm
 11306  001D9A  6EE6               	movwf	postinc1,c
 11307  001D9C  0E03               	movlw	high localtime@tm
 11308  001D9E  6EE6               	movwf	postinc1,c
 11309                           
 11310                           ;stkvar	_t @ sp[(-2)+-2]
 11311  001DA0  0EFC               	movlw	-4
 11312  001DA2  006F FF8F FFE6     	movff	plusw1,postinc1
 11313  001DA8  006F FF8F FFE6     	movff	plusw1,postinc1
 11314  001DAE  ECBB  F0DC         	call	___localtime_r	;wreg free
 11315                           
 11316                           ; _localtime: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 11317  001DB2  52E5               	movf	postdec1,f,c
 11318  001DB4  52E5               	movf	postdec1,f,c
 11319  001DB6  0012               	return		;funcret
 11320  001DB8                     __end_of_localtime:
 11321                           	opt callstack 0
 11322                           
 11323 ;; *************** function ___localtime_r *****************
 11324 ;; Defined at:
 11325 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/localtime_r.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;  t               2  [STACK] PTR const long long 
 11328 ;;		 -> clock(8), 
 11329 ;;  tm              2  [STACK] PTR struct tm
 11330 ;;		 -> localtime@tm(24), 
 11331 ;; Auto vars:     Size  Location     Type
 11332 ;;		None
 11333 ;; Return value:  Size  Location     Type
 11334 ;;                  2  [STACK] PTR struct tm
 11335 ;; Registers used:
 11336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11337 ;; Tracked objects:
 11338 ;;		On entry : 0/39
 11339 ;;		On exit  : 0/0
 11340 ;;		Unchanged: 0/0
 11341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11346 ;;Total ram usage:        0 bytes
 11347 ;; Hardware stack levels used:    1
 11348 ;; Hardware stack levels required when called:   20
 11349 ;; This function calls:
 11350 ;;		___secs_to_tm
 11351 ;;		___secs_to_zone
 11352 ;; This function is called by:
 11353 ;;		_localtime
 11354 ;; This function uses a reentrant model
 11355 ;;
 11356                           
 11357                           	psect	text34
 11358  01B976                     __ptext34:
 11359                           	opt callstack 0
 11360  01B976                     ___localtime_r:
 11361                           	opt callstack 8
 11362                           
 11363                           ;stkvar	_t @ sp[(0)+-2]
 11364                           
 11365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11366                           ;incstack = 0
 11367  01B976  0EFE               	movlw	-2
 11368  01B978  006F FF8F FFD9     	movff	plusw1,fsr2l
 11369  01B97E  0EFF               	movlw	-1
 11370  01B980  006F FF8F FFDA     	movff	plusw1,fsr2h
 11371  01B986  0E07               	movlw	7
 11372  01B988  AEDB               	btfss	plusw2,7,c
 11373  01B98A  D010               	goto	u16170
 11374  01B98C  52DE               	movf	postinc2,f,c
 11375  01B98E  52DE               	movf	postinc2,f,c
 11376  01B990  0E80               	movlw	128
 11377  01B992  5CDE               	subwf	postinc2,w,c
 11378  01B994  0EBD               	movlw	189
 11379  01B996  58DE               	subwfb	postinc2,w,c
 11380  01B998  0E0E               	movlw	14
 11381  01B99A  58DE               	subwfb	postinc2,w,c
 11382  01B99C  0EFF               	movlw	255
 11383  01B99E  58DE               	subwfb	postinc2,w,c
 11384  01B9A0  0EFF               	movlw	255
 11385  01B9A2  58DE               	subwfb	postinc2,w,c
 11386  01B9A4  0EFF               	movlw	255
 11387  01B9A6  58DE               	subwfb	postinc2,w,c
 11388  01B9A8  A0D8               	btfss	status,0,c
 11389  01B9AA  D01F               	goto	u16180
 11390  01B9AC                     u16170:
 11391                           
 11392                           ;stkvar	_t @ sp[(0)+-2]
 11393  01B9AC  0EFE               	movlw	-2
 11394  01B9AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11395  01B9B4  0EFF               	movlw	-1
 11396  01B9B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11397  01B9BC  0E07               	movlw	7
 11398  01B9BE  BEDB               	btfsc	plusw2,7,c
 11399  01B9C0  D019               	goto	l16527
 11400  01B9C2  0E07               	movlw	7
 11401  01B9C4  50DB               	movf	plusw2,w,c
 11402  01B9C6  E111               	bnz	u16180
 11403  01B9C8  0E06               	movlw	6
 11404  01B9CA  50DB               	movf	plusw2,w,c
 11405  01B9CC  E10E               	bnz	u16180
 11406  01B9CE  0E05               	movlw	5
 11407  01B9D0  50DB               	movf	plusw2,w,c
 11408  01B9D2  E10B               	bnz	u16180
 11409  01B9D4  04DE               	decf	postinc2,w,c
 11410  01B9D6  0E7B               	movlw	123
 11411  01B9D8  58DE               	subwfb	postinc2,w,c
 11412  01B9DA  0E9D               	movlw	157
 11413  01B9DC  58DE               	subwfb	postinc2,w,c
 11414  01B9DE  0E40               	movlw	64
 11415  01B9E0  58DE               	subwfb	postinc2,w,c
 11416  01B9E2  0EF1               	movlw	241
 11417  01B9E4  58DE               	subwfb	postinc2,w,c
 11418  01B9E6  A0D8               	btfss	status,0,c
 11419  01B9E8  D005               	goto	l16527
 11420  01B9EA                     u16180:
 11421  01B9EA  0E00               	movlw	0
 11422  01B9EC  6E01               	movwf	btemp^0,c
 11423  01B9EE  0E00               	movlw	0
 11424  01B9F0  6E02               	movwf	(btemp+1)^0,c
 11425  01B9F2  D0EF               	goto	l3500
 11426  01B9F4                     l16527:
 11427                           
 11428                           ;stkvar	_tm @ sp[(0)+-4]
 11429  01B9F4  0EFC               	movlw	-4
 11430  01B9F6  50E3               	movf	plusw1,w,c
 11431  01B9F8  0F16               	addlw	22
 11432  01B9FA  6E0B               	movwf	(btemp+10)^0,c
 11433  01B9FC  0EFD               	movlw	-3
 11434  01B9FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11435  01BA04  0E00               	movlw	0
 11436  01BA06  220C               	addwfc	(btemp+11)^0,f,c
 11437  01BA08  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11438  01BA0E  0060  F033  FFE6   	movff	btemp+11,postinc1
 11439  01BA14  0E00               	movlw	0
 11440  01BA16  6EE6               	movwf	postinc1,c
 11441  01BA18  0E00               	movlw	0
 11442  01BA1A  6EE6               	movwf	postinc1,c
 11443                           
 11444                           ;stkvar	_tm @ sp[(-4)+-4]
 11445  01BA1C  0EF8               	movlw	-8
 11446  01BA1E  50E3               	movf	plusw1,w,c
 11447  01BA20  0F12               	addlw	18
 11448  01BA22  6E0B               	movwf	(btemp+10)^0,c
 11449  01BA24  0EF9               	movlw	-7
 11450  01BA26  006F FF8C  F00C    	movff	plusw1,btemp+11
 11451  01BA2C  0E00               	movlw	0
 11452  01BA2E  220C               	addwfc	(btemp+11)^0,f,c
 11453  01BA30  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11454  01BA36  0060  F033  FFE6   	movff	btemp+11,postinc1
 11455                           
 11456                           ;stkvar	_tm @ sp[(-6)+-4]
 11457  01BA3C  0EF6               	movlw	-10
 11458  01BA3E  50E3               	movf	plusw1,w,c
 11459  01BA40  0F10               	addlw	16
 11460  01BA42  6E0B               	movwf	(btemp+10)^0,c
 11461  01BA44  0EF7               	movlw	-9
 11462  01BA46  006F FF8C  F00C    	movff	plusw1,btemp+11
 11463  01BA4C  0E00               	movlw	0
 11464  01BA4E  220C               	addwfc	(btemp+11)^0,f,c
 11465  01BA50  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11466  01BA56  0060  F033  FFE6   	movff	btemp+11,postinc1
 11467  01BA5C  0E00               	movlw	0
 11468  01BA5E  6EE6               	movwf	postinc1,c
 11469  01BA60  0E00               	movlw	0
 11470  01BA62  6EE6               	movwf	postinc1,c
 11471                           
 11472                           ;stkvar	_t @ sp[(-10)+-2]
 11473  01BA64  0EF4               	movlw	-12
 11474  01BA66  006F FF8F FFD9     	movff	plusw1,fsr2l
 11475  01BA6C  0EF5               	movlw	-11
 11476  01BA6E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11477  01BA74  006F FF7B FFE6     	movff	postinc2,postinc1
 11478  01BA7A  006F FF7B FFE6     	movff	postinc2,postinc1
 11479  01BA80  006F FF7B FFE6     	movff	postinc2,postinc1
 11480  01BA86  006F FF7B FFE6     	movff	postinc2,postinc1
 11481  01BA8C  006F FF7B FFE6     	movff	postinc2,postinc1
 11482  01BA92  006F FF7B FFE6     	movff	postinc2,postinc1
 11483  01BA98  006F FF7B FFE6     	movff	postinc2,postinc1
 11484  01BA9E  006F FF7B FFE6     	movff	postinc2,postinc1
 11485  01BAA4  EC38  F0AD         	call	___secs_to_zone	;wreg free
 11486                           
 11487                           ;stkvar	_tm @ sp[(0)+-4]
 11488  01BAA8  0EFC               	movlw	-4
 11489  01BAAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11490  01BAB0  006F FF8F FFE6     	movff	plusw1,postinc1
 11491                           
 11492                           ;stkvar	_t @ sp[(-2)+-2]
 11493  01BAB6  0EFC               	movlw	-4
 11494  01BAB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11495  01BABE  0EFD               	movlw	-3
 11496  01BAC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11497  01BAC6  006F FF78  F011    	movff	postinc2,btemp+16
 11498  01BACC  006F FF78  F012    	movff	postinc2,btemp+17
 11499  01BAD2  006F FF78  F013    	movff	postinc2,btemp+18
 11500  01BAD8  006F FF78  F014    	movff	postinc2,btemp+19
 11501  01BADE  006F FF78  F015    	movff	postinc2,btemp+20
 11502  01BAE4  006F FF78  F016    	movff	postinc2,btemp+21
 11503  01BAEA  006F FF78  F017    	movff	postinc2,btemp+22
 11504  01BAF0  006F FF78  F018    	movff	postinc2,btemp+23
 11505                           
 11506                           ;stkvar	_tm @ sp[(-2)+-4]
 11507  01BAF6  0EFA               	movlw	-6
 11508  01BAF8  006F FF8C  F00B    	movff	plusw1,btemp+10
 11509  01BAFE  0EFB               	movlw	-5
 11510  01BB00  006F FF8C  F00C    	movff	plusw1,btemp+11
 11511  01BB06  0E12               	movlw	18
 11512  01BB08  240B               	addwf	(btemp+10)^0,w,c
 11513  01BB0A  6ED9               	movwf	fsr2l,c
 11514  01BB0C  0E00               	movlw	0
 11515  01BB0E  200C               	addwfc	(btemp+11)^0,w,c
 11516  01BB10  6EDA               	movwf	fsr2h,c
 11517  01BB12  006F FF78  F009    	movff	postinc2,btemp+8
 11518  01BB18  006F FF78  F00A    	movff	postinc2,btemp+9
 11519  01BB1E  006F FF78  F00B    	movff	postinc2,btemp+10
 11520  01BB24  006F FF78  F00C    	movff	postinc2,btemp+11
 11521  01BB2A  0060  F024  F019   	movff	btemp+8,btemp+24
 11522  01BB30  0060  F028  F01A   	movff	btemp+9,btemp+25
 11523  01BB36  0060  F02C  F01B   	movff	btemp+10,btemp+26
 11524  01BB3C  0060  F030  F01C   	movff	btemp+11,btemp+27
 11525  01BB42  6A1D               	clrf	(btemp+28)^0,c
 11526  01BB44  BE1C               	btfsc	(btemp+27)^0,7,c
 11527  01BB46  681D               	setf	(btemp+28)^0,c
 11528  01BB48  0060  F074  F01E   	movff	btemp+28,btemp+29
 11529  01BB4E  0060  F074  F01F   	movff	btemp+28,btemp+30
 11530  01BB54  0060  F074  F020   	movff	btemp+28,btemp+31
 11531  01BB5A  5011               	movf	(btemp+16)^0,w,c
 11532  01BB5C  2419               	addwf	(btemp+24)^0,w,c
 11533  01BB5E  6E09               	movwf	(btemp+8)^0,c
 11534  01BB60  5012               	movf	(btemp+17)^0,w,c
 11535  01BB62  201A               	addwfc	(btemp+25)^0,w,c
 11536  01BB64  6E0A               	movwf	(btemp+9)^0,c
 11537  01BB66  5013               	movf	(btemp+18)^0,w,c
 11538  01BB68  201B               	addwfc	(btemp+26)^0,w,c
 11539  01BB6A  6E0B               	movwf	(btemp+10)^0,c
 11540  01BB6C  5014               	movf	(btemp+19)^0,w,c
 11541  01BB6E  201C               	addwfc	(btemp+27)^0,w,c
 11542  01BB70  6E0C               	movwf	(btemp+11)^0,c
 11543  01BB72  5015               	movf	(btemp+20)^0,w,c
 11544  01BB74  201D               	addwfc	(btemp+28)^0,w,c
 11545  01BB76  6E0D               	movwf	(btemp+12)^0,c
 11546  01BB78  5016               	movf	(btemp+21)^0,w,c
 11547  01BB7A  201E               	addwfc	(btemp+29)^0,w,c
 11548  01BB7C  6E0E               	movwf	(btemp+13)^0,c
 11549  01BB7E  5017               	movf	(btemp+22)^0,w,c
 11550  01BB80  201F               	addwfc	(btemp+30)^0,w,c
 11551  01BB82  6E0F               	movwf	(btemp+14)^0,c
 11552  01BB84  5018               	movf	(btemp+23)^0,w,c
 11553  01BB86  2020               	addwfc	(btemp+31)^0,w,c
 11554  01BB88  6E10               	movwf	(btemp+15)^0,c
 11555  01BB8A  0060  F027  FFE6   	movff	btemp+8,postinc1
 11556  01BB90  0060  F02B  FFE6   	movff	btemp+9,postinc1
 11557  01BB96  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11558  01BB9C  0060  F033  FFE6   	movff	btemp+11,postinc1
 11559  01BBA2  0060  F037  FFE6   	movff	btemp+12,postinc1
 11560  01BBA8  0060  F03B  FFE6   	movff	btemp+13,postinc1
 11561  01BBAE  0060  F03F  FFE6   	movff	btemp+14,postinc1
 11562  01BBB4  0060  F043  FFE6   	movff	btemp+15,postinc1
 11563  01BBBA  EC09  F093         	call	___secs_to_tm	;wreg free
 11564  01BBBE  BE04               	btfsc	(btemp+3)^0,7,c
 11565  01BBC0  D714               	goto	u16180
 11566                           
 11567                           ;stkvar	_tm @ sp[(0)+-4]
 11568  01BBC2  0EFC               	movlw	-4
 11569  01BBC4  006F FF8C  F001    	movff	plusw1,btemp
 11570  01BBCA  0EFD               	movlw	-3
 11571  01BBCC  006F FF8C  F002    	movff	plusw1,btemp+1
 11572  01BBD2                     l3500:
 11573                           
 11574                           ; ___localtime_r: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 11575  01BBD2  52E5               	movf	postdec1,f,c
 11576  01BBD4  52E5               	movf	postdec1,f,c
 11577  01BBD6  52E5               	movf	postdec1,f,c
 11578  01BBD8  52E5               	movf	postdec1,f,c
 11579  01BBDA  0012               	return		;funcret
 11580  01BBDC                     __end_of___localtime_r:
 11581                           	opt callstack 0
 11582                           
 11583 ;; *************** function ___secs_to_zone *****************
 11584 ;; Defined at:
 11585 ;;		line 249 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 11586 ;; Parameters:    Size  Location     Type
 11587 ;;  t               8  [STACK] long long 
 11588 ;;  local           2  [STACK] int 
 11589 ;;  isdst           2  [STACK] PTR int 
 11590 ;;		 -> localtime@tm(24), 
 11591 ;;  offset          2  [STACK] PTR long 
 11592 ;;		 -> localtime@tm(24), 
 11593 ;;  oppoff          2  [STACK] PTR long 
 11594 ;;		 -> NULL(0), 
 11595 ;;  zonename        2  [STACK] PTR PTR const unsigned c
 11596 ;;		 -> localtime@tm(24), 
 11597 ;; Auto vars:     Size  Location     Type
 11598 ;;  alt             2  [STACK] unsigned int 
 11599 ;;  i               2    0        unsigned int 
 11600 ;;  y               8  [STACK] long long 
 11601 ;;  t1              8  [STACK] long long 
 11602 ;;  t0              8  [STACK] long long 
 11603 ;; Return value:  Size  Location     Type
 11604 ;;                  1  [STACK] void 
 11605 ;; Registers used:
 11606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 11607 ;; Tracked objects:
 11608 ;;		On entry : 0/39
 11609 ;;		On exit  : 0/0
 11610 ;;		Unchanged: 0/0
 11611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11616 ;;Total ram usage:        0 bytes
 11617 ;; Hardware stack levels used:    1
 11618 ;; Hardware stack levels required when called:   19
 11619 ;; This function calls:
 11620 ;;		___aodiv
 11621 ;;		___year_to_secs
 11622 ;;		_do_tzset
 11623 ;;		_rule_to_secs
 11624 ;;		_scan_trans
 11625 ;;		_zi_read32
 11626 ;; This function is called by:
 11627 ;;		___localtime_r
 11628 ;; This function uses a reentrant model
 11629 ;;
 11630                           
 11631                           	psect	text35
 11632  015A70                     __ptext35:
 11633                           	opt callstack 0
 11634  015A70                     ___secs_to_zone:
 11635                           	opt callstack 0
 11636                           
 11637                           ; autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 18, argsize = 18 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 11638  015A70  0E18               	movlw	24
 11639  015A72  26E1               	addwf	fsr1l,f,c
 11640  015A74  0E00               	movlw	0
 11641  015A76  22E2               	addwfc	fsr1h,f,c
 11642                           
 11643                           ;incstack = 0
 11644  015A78  ECC1  F0D7         	call	_do_tzset	;wreg free
 11645  015A7C  0100               	movlb	0	; () banked
 11646  015A7E  51C2               	movf	___daylight& (0+255),w,b
 11647  015A80  11C3               	iorwf	(___daylight+1)& (0+255),w,b
 11648  015A82  B4D8               	btfsc	status,2,c
 11649  015A84  D356               	goto	u15960
 11650                           
 11651                           ; BSR set to: 0
 11652  015A86  0E58               	movlw	88
 11653  015A88  6EE6               	movwf	postinc1,c
 11654  015A8A  0E85               	movlw	133
 11655  015A8C  6EE6               	movwf	postinc1,c
 11656  015A8E  0EE1               	movlw	225
 11657  015A90  6EE6               	movwf	postinc1,c
 11658  015A92  0E01               	movlw	1
 11659  015A94  6EE6               	movwf	postinc1,c
 11660  015A96  0E00               	movlw	0
 11661  015A98  6EE6               	movwf	postinc1,c
 11662  015A9A  0E00               	movlw	0
 11663  015A9C  6EE6               	movwf	postinc1,c
 11664  015A9E  0E00               	movlw	0
 11665  015AA0  6EE6               	movwf	postinc1,c
 11666  015AA2  0E00               	movlw	0
 11667  015AA4  6EE6               	movwf	postinc1,c
 11668                           
 11669                           ;stkvar	_t @ sp[(-32)+-8]
 11670  015AA6  50E1               	movf	fsr1l,w,c
 11671  015AA8  0FD8               	addlw	-40
 11672  015AAA  6ED9               	movwf	fsr2l,c
 11673  015AAC  50E2               	movf	fsr1h,w,c
 11674  015AAE  6EDA               	movwf	fsr2h,c
 11675  015AB0  0EFF               	movlw	255
 11676  015AB2  22DA               	addwfc	fsr2h,f,c
 11677  015AB4  006F FF7B FFE6     	movff	postinc2,postinc1
 11678  015ABA  006F FF7B FFE6     	movff	postinc2,postinc1
 11679  015AC0  006F FF7B FFE6     	movff	postinc2,postinc1
 11680  015AC6  006F FF7B FFE6     	movff	postinc2,postinc1
 11681  015ACC  006F FF7B FFE6     	movff	postinc2,postinc1
 11682  015AD2  006F FF7B FFE6     	movff	postinc2,postinc1
 11683  015AD8  006F FF7B FFE6     	movff	postinc2,postinc1
 11684  015ADE  006F FF7B FFE6     	movff	postinc2,postinc1
 11685  015AE4  EC41  F0DA         	call	___aodiv	;wreg free
 11686  015AE8  52E5               	movf	postdec1,f,c
 11687  015AEA  006F FF9C  F018    	movff	indf1,btemp+23
 11688  015AF0  52E5               	movf	postdec1,f,c
 11689  015AF2  006F FF9C  F017    	movff	indf1,btemp+22
 11690  015AF8  52E5               	movf	postdec1,f,c
 11691  015AFA  006F FF9C  F016    	movff	indf1,btemp+21
 11692  015B00  52E5               	movf	postdec1,f,c
 11693  015B02  006F FF9C  F015    	movff	indf1,btemp+20
 11694  015B08  52E5               	movf	postdec1,f,c
 11695  015B0A  006F FF9C  F014    	movff	indf1,btemp+19
 11696  015B10  52E5               	movf	postdec1,f,c
 11697  015B12  006F FF9C  F013    	movff	indf1,btemp+18
 11698  015B18  52E5               	movf	postdec1,f,c
 11699  015B1A  006F FF9C  F012    	movff	indf1,btemp+17
 11700  015B20  52E5               	movf	postdec1,f,c
 11701  015B22  006F FF9C  F011    	movff	indf1,btemp+16
 11702  015B28  0EF8               	movlw	248
 11703  015B2A  26E1               	addwf	fsr1l,f,c
 11704  015B2C  0EFF               	movlw	255
 11705  015B2E  22E2               	addwfc	fsr1h,f,c
 11706  015B30  0E46               	movlw	70
 11707  015B32  2411               	addwf	(btemp+16)^0,w,c
 11708  015B34  6E19               	movwf	(btemp+24)^0,c
 11709  015B36  0E00               	movlw	0
 11710  015B38  2012               	addwfc	(btemp+17)^0,w,c
 11711  015B3A  6E1A               	movwf	(btemp+25)^0,c
 11712  015B3C  0E00               	movlw	0
 11713  015B3E  2013               	addwfc	(btemp+18)^0,w,c
 11714  015B40  6E1B               	movwf	(btemp+26)^0,c
 11715  015B42  0E00               	movlw	0
 11716  015B44  2014               	addwfc	(btemp+19)^0,w,c
 11717  015B46  6E1C               	movwf	(btemp+27)^0,c
 11718  015B48  0E00               	movlw	0
 11719  015B4A  2015               	addwfc	(btemp+20)^0,w,c
 11720  015B4C  6E1D               	movwf	(btemp+28)^0,c
 11721  015B4E  0E00               	movlw	0
 11722  015B50  2016               	addwfc	(btemp+21)^0,w,c
 11723  015B52  6E1E               	movwf	(btemp+29)^0,c
 11724  015B54  0E00               	movlw	0
 11725  015B56  2017               	addwfc	(btemp+22)^0,w,c
 11726  015B58  6E1F               	movwf	(btemp+30)^0,c
 11727  015B5A  0E00               	movlw	0
 11728  015B5C  2018               	addwfc	(btemp+23)^0,w,c
 11729  015B5E  6E20               	movwf	(btemp+31)^0,c
 11730                           
 11731                           ;stkvar	_y @ sp[(-24)+0]
 11732  015B60  0EE8               	movlw	-24
 11733  015B62  0060  F067  FFE3   	movff	btemp+24,plusw1
 11734  015B68  0EE9               	movlw	-23
 11735  015B6A  0060  F06B  FFE3   	movff	btemp+25,plusw1
 11736  015B70  0EEA               	movlw	-22
 11737  015B72  0060  F06F  FFE3   	movff	btemp+26,plusw1
 11738  015B78  0EEB               	movlw	-21
 11739  015B7A  0060  F073  FFE3   	movff	btemp+27,plusw1
 11740  015B80  0EEC               	movlw	-20
 11741  015B82  0060  F077  FFE3   	movff	btemp+28,plusw1
 11742  015B88  0EED               	movlw	-19
 11743  015B8A  0060  F07B  FFE3   	movff	btemp+29,plusw1
 11744  015B90  0EEE               	movlw	-18
 11745  015B92  0060  F07F  FFE3   	movff	btemp+30,plusw1
 11746  015B98  0EEF               	movlw	-17
 11747  015B9A  0060  F083  FFE3   	movff	btemp+31,plusw1
 11748  015BA0  D010               	goto	l16297
 11749  015BA2                     l16295:
 11750                           
 11751                           ;stkvar	_y @ sp[(-24)+0]
 11752  015BA2  50E1               	movf	fsr1l,w,c
 11753  015BA4  0FE8               	addlw	-24
 11754  015BA6  6ED9               	movwf	fsr2l,c
 11755  015BA8  50E2               	movf	fsr1h,w,c
 11756  015BAA  6EDA               	movwf	fsr2h,c
 11757  015BAC  0EFF               	movlw	255
 11758  015BAE  22DA               	addwfc	fsr2h,f,c
 11759  015BB0  06DE               	decf	postinc2,f,c
 11760  015BB2  0E00               	movlw	0
 11761  015BB4  5ADE               	subwfb	postinc2,f,c
 11762  015BB6  5ADE               	subwfb	postinc2,f,c
 11763  015BB8  5ADE               	subwfb	postinc2,f,c
 11764  015BBA  5ADE               	subwfb	postinc2,f,c
 11765  015BBC  5ADE               	subwfb	postinc2,f,c
 11766  015BBE  5ADE               	subwfb	postinc2,f,c
 11767  015BC0  5ADE               	subwfb	postinc2,f,c
 11768  015BC2                     l16297:
 11769  015BC2  0E00               	movlw	0
 11770  015BC4  6EE6               	movwf	postinc1,c
 11771  015BC6  0E00               	movlw	0
 11772  015BC8  6EE6               	movwf	postinc1,c
 11773                           
 11774                           ;stkvar	_y @ sp[(-26)+0]
 11775  015BCA  50E1               	movf	fsr1l,w,c
 11776  015BCC  0FE6               	addlw	-26
 11777  015BCE  6ED9               	movwf	fsr2l,c
 11778  015BD0  50E2               	movf	fsr1h,w,c
 11779  015BD2  6EDA               	movwf	fsr2h,c
 11780  015BD4  0EFF               	movlw	255
 11781  015BD6  22DA               	addwfc	fsr2h,f,c
 11782  015BD8  006F FF7B FFE6     	movff	postinc2,postinc1
 11783  015BDE  006F FF7B FFE6     	movff	postinc2,postinc1
 11784  015BE4  006F FF7B FFE6     	movff	postinc2,postinc1
 11785  015BEA  006F FF7B FFE6     	movff	postinc2,postinc1
 11786  015BF0  006F FF7B FFE6     	movff	postinc2,postinc1
 11787  015BF6  006F FF7B FFE6     	movff	postinc2,postinc1
 11788  015BFC  006F FF7B FFE6     	movff	postinc2,postinc1
 11789  015C02  006F FF7B FFE6     	movff	postinc2,postinc1
 11790  015C08  EC7F  F0A8         	call	___year_to_secs	;wreg free
 11791  015C0C  52E5               	movf	postdec1,f,c
 11792  015C0E  006F FF9C  F018    	movff	indf1,btemp+23
 11793  015C14  52E5               	movf	postdec1,f,c
 11794  015C16  006F FF9C  F017    	movff	indf1,btemp+22
 11795  015C1C  52E5               	movf	postdec1,f,c
 11796  015C1E  006F FF9C  F016    	movff	indf1,btemp+21
 11797  015C24  52E5               	movf	postdec1,f,c
 11798  015C26  006F FF9C  F015    	movff	indf1,btemp+20
 11799  015C2C  52E5               	movf	postdec1,f,c
 11800  015C2E  006F FF9C  F014    	movff	indf1,btemp+19
 11801  015C34  52E5               	movf	postdec1,f,c
 11802  015C36  006F FF9C  F013    	movff	indf1,btemp+18
 11803  015C3C  52E5               	movf	postdec1,f,c
 11804  015C3E  006F FF9C  F012    	movff	indf1,btemp+17
 11805  015C44  52E5               	movf	postdec1,f,c
 11806  015C46  006F FF9C  F011    	movff	indf1,btemp+16
 11807  015C4C  52E5               	movf	postdec1,f,c
 11808  015C4E  52E5               	movf	postdec1,f,c
 11809                           
 11810                           ;stkvar	_t @ sp[(-24)+-8]
 11811  015C50  0EE0               	movlw	-32
 11812  015C52  006F FF8C  F001    	movff	plusw1,btemp
 11813  015C58  5011               	movf	(btemp+16)^0,w,c
 11814  015C5A  5C01               	subwf	btemp^0,w,c
 11815  015C5C  0EE1               	movlw	-31
 11816  015C5E  006F FF8C  F001    	movff	plusw1,btemp
 11817  015C64  5012               	movf	(btemp+17)^0,w,c
 11818  015C66  5801               	subwfb	btemp^0,w,c
 11819  015C68  0EE2               	movlw	-30
 11820  015C6A  006F FF8C  F001    	movff	plusw1,btemp
 11821  015C70  5013               	movf	(btemp+18)^0,w,c
 11822  015C72  5801               	subwfb	btemp^0,w,c
 11823  015C74  0EE3               	movlw	-29
 11824  015C76  006F FF8C  F001    	movff	plusw1,btemp
 11825  015C7C  5014               	movf	(btemp+19)^0,w,c
 11826  015C7E  5801               	subwfb	btemp^0,w,c
 11827  015C80  0EE4               	movlw	-28
 11828  015C82  006F FF8C  F001    	movff	plusw1,btemp
 11829  015C88  5015               	movf	(btemp+20)^0,w,c
 11830  015C8A  5801               	subwfb	btemp^0,w,c
 11831  015C8C  0EE5               	movlw	-27
 11832  015C8E  006F FF8C  F001    	movff	plusw1,btemp
 11833  015C94  5016               	movf	(btemp+21)^0,w,c
 11834  015C96  5801               	subwfb	btemp^0,w,c
 11835  015C98  0EE6               	movlw	-26
 11836  015C9A  006F FF8C  F001    	movff	plusw1,btemp
 11837  015CA0  5017               	movf	(btemp+22)^0,w,c
 11838  015CA2  5801               	subwfb	btemp^0,w,c
 11839  015CA4  0EE7               	movlw	-25
 11840  015CA6  50E3               	movf	plusw1,w,c
 11841  015CA8  0A80               	xorlw	128
 11842  015CAA  6E01               	movwf	btemp^0,c
 11843  015CAC  5018               	movf	(btemp+23)^0,w,c
 11844  015CAE  0A80               	xorlw	128
 11845  015CB0  5801               	subwfb	btemp^0,w,c
 11846  015CB2  B0D8               	btfsc	status,0,c
 11847  015CB4  D011               	goto	l16301
 11848  015CB6  D775               	goto	l16295
 11849  015CB8                     l16299:
 11850                           
 11851                           ;stkvar	_y @ sp[(-24)+0]
 11852  015CB8  50E1               	movf	fsr1l,w,c
 11853  015CBA  0FE8               	addlw	-24
 11854  015CBC  6ED9               	movwf	fsr2l,c
 11855  015CBE  50E2               	movf	fsr1h,w,c
 11856  015CC0  6EDA               	movwf	fsr2h,c
 11857  015CC2  0EFF               	movlw	255
 11858  015CC4  22DA               	addwfc	fsr2h,f,c
 11859  015CC6  2ADE               	incf	postinc2,f,c
 11860  015CC8  0E00               	movlw	0
 11861  015CCA  22DE               	addwfc	postinc2,f,c
 11862  015CCC  22DE               	addwfc	postinc2,f,c
 11863  015CCE  22DE               	addwfc	postinc2,f,c
 11864  015CD0  22DE               	addwfc	postinc2,f,c
 11865  015CD2  22DE               	addwfc	postinc2,f,c
 11866  015CD4  22DE               	addwfc	postinc2,f,c
 11867  015CD6  22DE               	addwfc	postinc2,f,c
 11868  015CD8                     l16301:
 11869                           
 11870                           ;stkvar	_t @ sp[(-24)+-8]
 11871  015CD8  0E00               	movlw	0
 11872  015CDA  6EE6               	movwf	postinc1,c
 11873  015CDC  0E00               	movlw	0
 11874  015CDE  6EE6               	movwf	postinc1,c
 11875                           
 11876                           ;stkvar	_y @ sp[(-26)+0]
 11877  015CE0  0EE6               	movlw	-26
 11878  015CE2  50E3               	movf	plusw1,w,c
 11879  015CE4  0F01               	addlw	1
 11880  015CE6  6E11               	movwf	(btemp+16)^0,c
 11881  015CE8  0EE7               	movlw	-25
 11882  015CEA  006F FF8C  F012    	movff	plusw1,btemp+17
 11883  015CF0  0E00               	movlw	0
 11884  015CF2  2212               	addwfc	(btemp+17)^0,f,c
 11885  015CF4  0EE8               	movlw	-24
 11886  015CF6  006F FF8C  F013    	movff	plusw1,btemp+18
 11887  015CFC  0E00               	movlw	0
 11888  015CFE  2213               	addwfc	(btemp+18)^0,f,c
 11889  015D00  0EE9               	movlw	-23
 11890  015D02  006F FF8C  F014    	movff	plusw1,btemp+19
 11891  015D08  0E00               	movlw	0
 11892  015D0A  2214               	addwfc	(btemp+19)^0,f,c
 11893  015D0C  0EEA               	movlw	-22
 11894  015D0E  006F FF8C  F015    	movff	plusw1,btemp+20
 11895  015D14  0E00               	movlw	0
 11896  015D16  2215               	addwfc	(btemp+20)^0,f,c
 11897  015D18  0EEB               	movlw	-21
 11898  015D1A  006F FF8C  F016    	movff	plusw1,btemp+21
 11899  015D20  0E00               	movlw	0
 11900  015D22  2216               	addwfc	(btemp+21)^0,f,c
 11901  015D24  0EEC               	movlw	-20
 11902  015D26  006F FF8C  F017    	movff	plusw1,btemp+22
 11903  015D2C  0E00               	movlw	0
 11904  015D2E  2217               	addwfc	(btemp+22)^0,f,c
 11905  015D30  0EED               	movlw	-19
 11906  015D32  006F FF8C  F018    	movff	plusw1,btemp+23
 11907  015D38  0E00               	movlw	0
 11908  015D3A  2218               	addwfc	(btemp+23)^0,f,c
 11909  015D3C  0060  F047  FFE6   	movff	btemp+16,postinc1
 11910  015D42  0060  F04B  FFE6   	movff	btemp+17,postinc1
 11911  015D48  0060  F04F  FFE6   	movff	btemp+18,postinc1
 11912  015D4E  0060  F053  FFE6   	movff	btemp+19,postinc1
 11913  015D54  0060  F057  FFE6   	movff	btemp+20,postinc1
 11914  015D5A  0060  F05B  FFE6   	movff	btemp+21,postinc1
 11915  015D60  0060  F05F  FFE6   	movff	btemp+22,postinc1
 11916  015D66  0060  F063  FFE6   	movff	btemp+23,postinc1
 11917  015D6C  EC7F  F0A8         	call	___year_to_secs	;wreg free
 11918  015D70  52E5               	movf	postdec1,f,c
 11919  015D72  006F FF9C  F018    	movff	indf1,btemp+23
 11920  015D78  52E5               	movf	postdec1,f,c
 11921  015D7A  006F FF9C  F017    	movff	indf1,btemp+22
 11922  015D80  52E5               	movf	postdec1,f,c
 11923  015D82  006F FF9C  F016    	movff	indf1,btemp+21
 11924  015D88  52E5               	movf	postdec1,f,c
 11925  015D8A  006F FF9C  F015    	movff	indf1,btemp+20
 11926  015D90  52E5               	movf	postdec1,f,c
 11927  015D92  006F FF9C  F014    	movff	indf1,btemp+19
 11928  015D98  52E5               	movf	postdec1,f,c
 11929  015D9A  006F FF9C  F013    	movff	indf1,btemp+18
 11930  015DA0  52E5               	movf	postdec1,f,c
 11931  015DA2  006F FF9C  F012    	movff	indf1,btemp+17
 11932  015DA8  52E5               	movf	postdec1,f,c
 11933  015DAA  006F FF9C  F011    	movff	indf1,btemp+16
 11934  015DB0  52E5               	movf	postdec1,f,c
 11935  015DB2  52E5               	movf	postdec1,f,c
 11936  015DB4  0EE0               	movlw	-32
 11937  015DB6  50E3               	movf	plusw1,w,c
 11938  015DB8  5C11               	subwf	(btemp+16)^0,w,c
 11939  015DBA  0EE1               	movlw	-31
 11940  015DBC  50E3               	movf	plusw1,w,c
 11941  015DBE  5812               	subwfb	(btemp+17)^0,w,c
 11942  015DC0  0EE2               	movlw	-30
 11943  015DC2  50E3               	movf	plusw1,w,c
 11944  015DC4  5813               	subwfb	(btemp+18)^0,w,c
 11945  015DC6  0EE3               	movlw	-29
 11946  015DC8  50E3               	movf	plusw1,w,c
 11947  015DCA  5814               	subwfb	(btemp+19)^0,w,c
 11948  015DCC  0EE4               	movlw	-28
 11949  015DCE  50E3               	movf	plusw1,w,c
 11950  015DD0  5815               	subwfb	(btemp+20)^0,w,c
 11951  015DD2  0EE5               	movlw	-27
 11952  015DD4  50E3               	movf	plusw1,w,c
 11953  015DD6  5816               	subwfb	(btemp+21)^0,w,c
 11954  015DD8  0EE6               	movlw	-26
 11955  015DDA  50E3               	movf	plusw1,w,c
 11956  015DDC  5817               	subwfb	(btemp+22)^0,w,c
 11957  015DDE  5018               	movf	(btemp+23)^0,w,c
 11958  015DE0  0A80               	xorlw	128
 11959  015DE2  6E01               	movwf	btemp^0,c
 11960  015DE4  0EE7               	movlw	-25
 11961  015DE6  50E3               	movf	plusw1,w,c
 11962  015DE8  0A80               	xorlw	128
 11963  015DEA  5801               	subwfb	btemp^0,w,c
 11964  015DEC  A0D8               	btfss	status,0,c
 11965  015DEE  D764               	goto	l16299
 11966                           
 11967                           ;stkvar	_y @ sp[(-24)+0]
 11968  015DF0  0EE8               	movlw	-24
 11969  015DF2  006F FF8F FFE6     	movff	plusw1,postinc1
 11970  015DF8  006F FF8F FFE6     	movff	plusw1,postinc1
 11971  015DFE  0EE6               	movlw	low _r0
 11972  015E00  6EE6               	movwf	postinc1,c
 11973  015E02  0E01               	movlw	high _r0
 11974  015E04  6EE6               	movwf	postinc1,c
 11975  015E06  EC7C  F0B9         	call	_rule_to_secs	;wreg free
 11976  015E0A  52E5               	movf	postdec1,f,c
 11977  015E0C  006F FF9C  F018    	movff	indf1,btemp+23
 11978  015E12  52E5               	movf	postdec1,f,c
 11979  015E14  006F FF9C  F017    	movff	indf1,btemp+22
 11980  015E1A  52E5               	movf	postdec1,f,c
 11981  015E1C  006F FF9C  F016    	movff	indf1,btemp+21
 11982  015E22  52E5               	movf	postdec1,f,c
 11983  015E24  006F FF9C  F015    	movff	indf1,btemp+20
 11984  015E2A  52E5               	movf	postdec1,f,c
 11985  015E2C  006F FF9C  F014    	movff	indf1,btemp+19
 11986  015E32  52E5               	movf	postdec1,f,c
 11987  015E34  006F FF9C  F013    	movff	indf1,btemp+18
 11988  015E3A  52E5               	movf	postdec1,f,c
 11989  015E3C  006F FF9C  F012    	movff	indf1,btemp+17
 11990  015E42  52E5               	movf	postdec1,f,c
 11991  015E44  006F FF9C  F011    	movff	indf1,btemp+16
 11992                           
 11993                           ;stkvar	_t0 @ sp[(-24)+16]
 11994  015E4A  0EF8               	movlw	-8
 11995  015E4C  0060  F047  FFE3   	movff	btemp+16,plusw1
 11996  015E52  0EF9               	movlw	-7
 11997  015E54  0060  F04B  FFE3   	movff	btemp+17,plusw1
 11998  015E5A  0EFA               	movlw	-6
 11999  015E5C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12000  015E62  0EFB               	movlw	-5
 12001  015E64  0060  F053  FFE3   	movff	btemp+19,plusw1
 12002  015E6A  0EFC               	movlw	-4
 12003  015E6C  0060  F057  FFE3   	movff	btemp+20,plusw1
 12004  015E72  0EFD               	movlw	-3
 12005  015E74  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12006  015E7A  0EFE               	movlw	-2
 12007  015E7C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12008  015E82  0EFF               	movlw	-1
 12009  015E84  0060  F063  FFE3   	movff	btemp+23,plusw1
 12010                           
 12011                           ;stkvar	_y @ sp[(-24)+0]
 12012  015E8A  0EE8               	movlw	-24
 12013  015E8C  006F FF8F FFE6     	movff	plusw1,postinc1
 12014  015E92  006F FF8F FFE6     	movff	plusw1,postinc1
 12015  015E98  0EDC               	movlw	low _r1
 12016  015E9A  6EE6               	movwf	postinc1,c
 12017  015E9C  0E01               	movlw	high _r1
 12018  015E9E  6EE6               	movwf	postinc1,c
 12019  015EA0  EC7C  F0B9         	call	_rule_to_secs	;wreg free
 12020  015EA4  52E5               	movf	postdec1,f,c
 12021  015EA6  006F FF9C  F018    	movff	indf1,btemp+23
 12022  015EAC  52E5               	movf	postdec1,f,c
 12023  015EAE  006F FF9C  F017    	movff	indf1,btemp+22
 12024  015EB4  52E5               	movf	postdec1,f,c
 12025  015EB6  006F FF9C  F016    	movff	indf1,btemp+21
 12026  015EBC  52E5               	movf	postdec1,f,c
 12027  015EBE  006F FF9C  F015    	movff	indf1,btemp+20
 12028  015EC4  52E5               	movf	postdec1,f,c
 12029  015EC6  006F FF9C  F014    	movff	indf1,btemp+19
 12030  015ECC  52E5               	movf	postdec1,f,c
 12031  015ECE  006F FF9C  F013    	movff	indf1,btemp+18
 12032  015ED4  52E5               	movf	postdec1,f,c
 12033  015ED6  006F FF9C  F012    	movff	indf1,btemp+17
 12034  015EDC  52E5               	movf	postdec1,f,c
 12035  015EDE  006F FF9C  F011    	movff	indf1,btemp+16
 12036                           
 12037                           ;stkvar	_t1 @ sp[(-24)+8]
 12038  015EE4  0EF0               	movlw	-16
 12039  015EE6  0060  F047  FFE3   	movff	btemp+16,plusw1
 12040  015EEC  0EF1               	movlw	-15
 12041  015EEE  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12042  015EF4  0EF2               	movlw	-14
 12043  015EF6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12044  015EFC  0EF3               	movlw	-13
 12045  015EFE  0060  F053  FFE3   	movff	btemp+19,plusw1
 12046  015F04  0EF4               	movlw	-12
 12047  015F06  0060  F057  FFE3   	movff	btemp+20,plusw1
 12048  015F0C  0EF5               	movlw	-11
 12049  015F0E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12050  015F14  0EF6               	movlw	-10
 12051  015F16  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12052  015F1C  0EF7               	movlw	-9
 12053  015F1E  0060  F063  FFE3   	movff	btemp+23,plusw1
 12054                           
 12055                           ;stkvar	_local @ sp[(-24)+-10]
 12056  015F24  0EDE               	movlw	-34
 12057  015F26  006F FF8C  F001    	movff	plusw1,btemp
 12058  015F2C  0EDF               	movlw	-33
 12059  015F2E  50E3               	movf	plusw1,w,c
 12060  015F30  1001               	iorwf	btemp^0,w,c
 12061  015F32  A4D8               	btfss	status,2,c
 12062  015F34  D044               	goto	l16311
 12063  015F36  0060  F1D8  F011   	movff	___timezone,btemp+16
 12064  015F3C  0060  F1DC  F012   	movff	___timezone+1,btemp+17
 12065  015F42  0060  F1E0  F013   	movff	___timezone+2,btemp+18
 12066  015F48  0060  F1E4  F014   	movff	___timezone+3,btemp+19
 12067  015F4E  6A15               	clrf	(btemp+20)^0,c
 12068  015F50  BE14               	btfsc	(btemp+19)^0,7,c
 12069  015F52  6815               	setf	(btemp+20)^0,c
 12070  015F54  0060  F054  F016   	movff	btemp+20,btemp+21
 12071  015F5A  0060  F054  F017   	movff	btemp+20,btemp+22
 12072  015F60  0060  F054  F018   	movff	btemp+20,btemp+23
 12073                           
 12074                           ;stkvar	_t0 @ sp[(-24)+16]
 12075  015F66  50E1               	movf	fsr1l,w,c
 12076  015F68  0FF8               	addlw	-8
 12077  015F6A  6ED9               	movwf	fsr2l,c
 12078  015F6C  50E2               	movf	fsr1h,w,c
 12079  015F6E  6EDA               	movwf	fsr2h,c
 12080  015F70  0EFF               	movlw	255
 12081  015F72  22DA               	addwfc	fsr2h,f,c
 12082  015F74  5011               	movf	(btemp+16)^0,w,c
 12083  015F76  26DE               	addwf	postinc2,f,c
 12084  015F78  5012               	movf	(btemp+17)^0,w,c
 12085  015F7A  22DE               	addwfc	postinc2,f,c
 12086  015F7C  5013               	movf	(btemp+18)^0,w,c
 12087  015F7E  22DE               	addwfc	postinc2,f,c
 12088  015F80  5014               	movf	(btemp+19)^0,w,c
 12089  015F82  22DE               	addwfc	postinc2,f,c
 12090  015F84  5015               	movf	(btemp+20)^0,w,c
 12091  015F86  22DE               	addwfc	postinc2,f,c
 12092  015F88  5016               	movf	(btemp+21)^0,w,c
 12093  015F8A  22DE               	addwfc	postinc2,f,c
 12094  015F8C  5017               	movf	(btemp+22)^0,w,c
 12095  015F8E  22DE               	addwfc	postinc2,f,c
 12096  015F90  5018               	movf	(btemp+23)^0,w,c
 12097  015F92  22DE               	addwfc	postinc2,f,c
 12098                           
 12099                           ;stkvar	_t1 @ sp[(-24)+8]
 12100  015F94  50E1               	movf	fsr1l,w,c
 12101  015F96  0FF0               	addlw	-16
 12102  015F98  6ED9               	movwf	fsr2l,c
 12103  015F9A  50E2               	movf	fsr1h,w,c
 12104  015F9C  6EDA               	movwf	fsr2h,c
 12105  015F9E  0EFF               	movlw	255
 12106  015FA0  22DA               	addwfc	fsr2h,f,c
 12107  015FA2  0100               	movlb	0	; () banked
 12108  015FA4  51C0               	movf	_dst_off& (0+255),w,b
 12109  015FA6  26DE               	addwf	postinc2,f,c
 12110  015FA8  51C1               	movf	(_dst_off+1)& (0+255),w,b
 12111  015FAA  22DE               	addwfc	postinc2,f,c
 12112  015FAC  0E00               	movlw	0
 12113  015FAE  BFC1               	btfsc	(_dst_off+1)& (0+255),7,b
 12114  015FB0  0EFF               	movlw	255
 12115  015FB2  22DE               	addwfc	postinc2,f,c
 12116  015FB4  22DE               	addwfc	postinc2,f,c
 12117  015FB6  22DE               	addwfc	postinc2,f,c
 12118  015FB8  22DE               	addwfc	postinc2,f,c
 12119  015FBA  22DE               	addwfc	postinc2,f,c
 12120  015FBC  22DE               	addwfc	postinc2,f,c
 12121  015FBE                     l16311:
 12122                           
 12123                           ;stkvar	_t1 @ sp[(-24)+8]
 12124                           ;stkvar	_t0 @ sp[(-24)+16]
 12125  015FBE  50E1               	movf	fsr1l,w,c
 12126  015FC0  0FF8               	addlw	-8
 12127  015FC2  6ED9               	movwf	fsr2l,c
 12128  015FC4  50E2               	movf	fsr1h,w,c
 12129  015FC6  6EDA               	movwf	fsr2h,c
 12130  015FC8  0EFF               	movlw	255
 12131  015FCA  22DA               	addwfc	fsr2h,f,c
 12132  015FCC  0EF0               	movlw	-16
 12133  015FCE  50E3               	movf	plusw1,w,c
 12134  015FD0  5CDE               	subwf	postinc2,w,c
 12135  015FD2  0EF1               	movlw	-15
 12136  015FD4  50E3               	movf	plusw1,w,c
 12137  015FD6  58DE               	subwfb	postinc2,w,c
 12138  015FD8  0EF2               	movlw	-14
 12139  015FDA  50E3               	movf	plusw1,w,c
 12140  015FDC  58DE               	subwfb	postinc2,w,c
 12141  015FDE  0EF3               	movlw	-13
 12142  015FE0  50E3               	movf	plusw1,w,c
 12143  015FE2  58DE               	subwfb	postinc2,w,c
 12144  015FE4  0EF4               	movlw	-12
 12145  015FE6  50E3               	movf	plusw1,w,c
 12146  015FE8  58DE               	subwfb	postinc2,w,c
 12147  015FEA  0EF5               	movlw	-11
 12148  015FEC  50E3               	movf	plusw1,w,c
 12149  015FEE  58DE               	subwfb	postinc2,w,c
 12150  015FF0  0EF6               	movlw	-10
 12151  015FF2  50E3               	movf	plusw1,w,c
 12152  015FF4  58DE               	subwfb	postinc2,w,c
 12153  015FF6  50DE               	movf	postinc2,w,c
 12154  015FF8  0A80               	xorlw	128
 12155  015FFA  6E01               	movwf	btemp^0,c
 12156  015FFC  0EF7               	movlw	-9
 12157  015FFE  50E3               	movf	plusw1,w,c
 12158  016000  0A80               	xorlw	128
 12159  016002  5801               	subwfb	btemp^0,w,c
 12160  016004  B0D8               	btfsc	status,0,c
 12161  016006  D04B               	goto	l16321
 12162                           
 12163                           ;stkvar	_t0 @ sp[(-24)+16]
 12164                           ;stkvar	_t @ sp[(-24)+-8]
 12165  016008  50E1               	movf	fsr1l,w,c
 12166  01600A  0FE0               	addlw	-32
 12167  01600C  6ED9               	movwf	fsr2l,c
 12168  01600E  50E2               	movf	fsr1h,w,c
 12169  016010  6EDA               	movwf	fsr2h,c
 12170  016012  0EFF               	movlw	255
 12171  016014  22DA               	addwfc	fsr2h,f,c
 12172  016016  0EF8               	movlw	-8
 12173  016018  50E3               	movf	plusw1,w,c
 12174  01601A  5CDE               	subwf	postinc2,w,c
 12175  01601C  0EF9               	movlw	-7
 12176  01601E  50E3               	movf	plusw1,w,c
 12177  016020  58DE               	subwfb	postinc2,w,c
 12178  016022  0EFA               	movlw	-6
 12179  016024  50E3               	movf	plusw1,w,c
 12180  016026  58DE               	subwfb	postinc2,w,c
 12181  016028  0EFB               	movlw	-5
 12182  01602A  50E3               	movf	plusw1,w,c
 12183  01602C  58DE               	subwfb	postinc2,w,c
 12184  01602E  0EFC               	movlw	-4
 12185  016030  50E3               	movf	plusw1,w,c
 12186  016032  58DE               	subwfb	postinc2,w,c
 12187  016034  0EFD               	movlw	-3
 12188  016036  50E3               	movf	plusw1,w,c
 12189  016038  58DE               	subwfb	postinc2,w,c
 12190  01603A  0EFE               	movlw	-2
 12191  01603C  50E3               	movf	plusw1,w,c
 12192  01603E  58DE               	subwfb	postinc2,w,c
 12193  016040  50DE               	movf	postinc2,w,c
 12194  016042  0A80               	xorlw	128
 12195  016044  6E01               	movwf	btemp^0,c
 12196  016046  0EFF               	movlw	-1
 12197  016048  50E3               	movf	plusw1,w,c
 12198  01604A  0A80               	xorlw	128
 12199  01604C  5801               	subwfb	btemp^0,w,c
 12200  01604E  A0D8               	btfss	status,0,c
 12201  016050  D070               	goto	u15960
 12202                           
 12203                           ;stkvar	_t1 @ sp[(-24)+8]
 12204                           ;stkvar	_t @ sp[(-24)+-8]
 12205  016052  50E1               	movf	fsr1l,w,c
 12206  016054  0FE0               	addlw	-32
 12207  016056  6ED9               	movwf	fsr2l,c
 12208  016058  50E2               	movf	fsr1h,w,c
 12209  01605A  6EDA               	movwf	fsr2h,c
 12210  01605C  0EFF               	movlw	255
 12211  01605E  22DA               	addwfc	fsr2h,f,c
 12212  016060  0EF0               	movlw	-16
 12213  016062  50E3               	movf	plusw1,w,c
 12214  016064  5CDE               	subwf	postinc2,w,c
 12215  016066  0EF1               	movlw	-15
 12216  016068  50E3               	movf	plusw1,w,c
 12217  01606A  58DE               	subwfb	postinc2,w,c
 12218  01606C  0EF2               	movlw	-14
 12219  01606E  50E3               	movf	plusw1,w,c
 12220  016070  58DE               	subwfb	postinc2,w,c
 12221  016072  0EF3               	movlw	-13
 12222  016074  50E3               	movf	plusw1,w,c
 12223  016076  58DE               	subwfb	postinc2,w,c
 12224  016078  0EF4               	movlw	-12
 12225  01607A  50E3               	movf	plusw1,w,c
 12226  01607C  58DE               	subwfb	postinc2,w,c
 12227  01607E  0EF5               	movlw	-11
 12228  016080  50E3               	movf	plusw1,w,c
 12229  016082  58DE               	subwfb	postinc2,w,c
 12230  016084  0EF6               	movlw	-10
 12231  016086  50E3               	movf	plusw1,w,c
 12232  016088  58DE               	subwfb	postinc2,w,c
 12233  01608A  50DE               	movf	postinc2,w,c
 12234  01608C  0A80               	xorlw	128
 12235  01608E  6E01               	movwf	btemp^0,c
 12236  016090  0EF7               	movlw	-9
 12237  016092  50E3               	movf	plusw1,w,c
 12238  016094  0A80               	xorlw	128
 12239  016096  5801               	subwfb	btemp^0,w,c
 12240  016098  A0D8               	btfss	status,0,c
 12241  01609A  D0C1               	goto	l16339
 12242  01609C  D04A               	goto	u15960
 12243  01609E                     l16321:
 12244                           
 12245                           ;stkvar	_t1 @ sp[(-24)+8]
 12246                           ;stkvar	_t @ sp[(-24)+-8]
 12247  01609E  50E1               	movf	fsr1l,w,c
 12248  0160A0  0FE0               	addlw	-32
 12249  0160A2  6ED9               	movwf	fsr2l,c
 12250  0160A4  50E2               	movf	fsr1h,w,c
 12251  0160A6  6EDA               	movwf	fsr2h,c
 12252  0160A8  0EFF               	movlw	255
 12253  0160AA  22DA               	addwfc	fsr2h,f,c
 12254  0160AC  0EF0               	movlw	-16
 12255  0160AE  50E3               	movf	plusw1,w,c
 12256  0160B0  5CDE               	subwf	postinc2,w,c
 12257  0160B2  0EF1               	movlw	-15
 12258  0160B4  50E3               	movf	plusw1,w,c
 12259  0160B6  58DE               	subwfb	postinc2,w,c
 12260  0160B8  0EF2               	movlw	-14
 12261  0160BA  50E3               	movf	plusw1,w,c
 12262  0160BC  58DE               	subwfb	postinc2,w,c
 12263  0160BE  0EF3               	movlw	-13
 12264  0160C0  50E3               	movf	plusw1,w,c
 12265  0160C2  58DE               	subwfb	postinc2,w,c
 12266  0160C4  0EF4               	movlw	-12
 12267  0160C6  50E3               	movf	plusw1,w,c
 12268  0160C8  58DE               	subwfb	postinc2,w,c
 12269  0160CA  0EF5               	movlw	-11
 12270  0160CC  50E3               	movf	plusw1,w,c
 12271  0160CE  58DE               	subwfb	postinc2,w,c
 12272  0160D0  0EF6               	movlw	-10
 12273  0160D2  50E3               	movf	plusw1,w,c
 12274  0160D4  58DE               	subwfb	postinc2,w,c
 12275  0160D6  50DE               	movf	postinc2,w,c
 12276  0160D8  0A80               	xorlw	128
 12277  0160DA  6E01               	movwf	btemp^0,c
 12278  0160DC  0EF7               	movlw	-9
 12279  0160DE  50E3               	movf	plusw1,w,c
 12280  0160E0  0A80               	xorlw	128
 12281  0160E2  5801               	subwfb	btemp^0,w,c
 12282  0160E4  A0D8               	btfss	status,0,c
 12283  0160E6  D09B               	goto	l16339
 12284                           
 12285                           ;stkvar	_t0 @ sp[(-24)+16]
 12286                           ;stkvar	_t @ sp[(-24)+-8]
 12287  0160E8  50E1               	movf	fsr1l,w,c
 12288  0160EA  0FE0               	addlw	-32
 12289  0160EC  6ED9               	movwf	fsr2l,c
 12290  0160EE  50E2               	movf	fsr1h,w,c
 12291  0160F0  6EDA               	movwf	fsr2h,c
 12292  0160F2  0EFF               	movlw	255
 12293  0160F4  22DA               	addwfc	fsr2h,f,c
 12294  0160F6  0EF8               	movlw	-8
 12295  0160F8  50E3               	movf	plusw1,w,c
 12296  0160FA  5CDE               	subwf	postinc2,w,c
 12297  0160FC  0EF9               	movlw	-7
 12298  0160FE  50E3               	movf	plusw1,w,c
 12299  016100  58DE               	subwfb	postinc2,w,c
 12300  016102  0EFA               	movlw	-6
 12301  016104  50E3               	movf	plusw1,w,c
 12302  016106  58DE               	subwfb	postinc2,w,c
 12303  016108  0EFB               	movlw	-5
 12304  01610A  50E3               	movf	plusw1,w,c
 12305  01610C  58DE               	subwfb	postinc2,w,c
 12306  01610E  0EFC               	movlw	-4
 12307  016110  50E3               	movf	plusw1,w,c
 12308  016112  58DE               	subwfb	postinc2,w,c
 12309  016114  0EFD               	movlw	-3
 12310  016116  50E3               	movf	plusw1,w,c
 12311  016118  58DE               	subwfb	postinc2,w,c
 12312  01611A  0EFE               	movlw	-2
 12313  01611C  50E3               	movf	plusw1,w,c
 12314  01611E  58DE               	subwfb	postinc2,w,c
 12315  016120  50DE               	movf	postinc2,w,c
 12316  016122  0A80               	xorlw	128
 12317  016124  6E01               	movwf	btemp^0,c
 12318  016126  0EFF               	movlw	-1
 12319  016128  50E3               	movf	plusw1,w,c
 12320  01612A  0A80               	xorlw	128
 12321  01612C  5801               	subwfb	btemp^0,w,c
 12322  01612E  B0D8               	btfsc	status,0,c
 12323  016130  D076               	goto	l16339
 12324  016132                     u15960:
 12325                           
 12326                           ;stkvar	_isdst @ sp[(-24)+-12]
 12327  016132  0EDC               	movlw	-36
 12328  016134  006F FF8F FFD9     	movff	plusw1,fsr2l
 12329  01613A  0EDD               	movlw	-35
 12330  01613C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12331  016142  0E00               	movlw	0
 12332  016144  6EDE               	movwf	postinc2,c
 12333  016146  0E00               	movlw	0
 12334  016148  6EDD               	movwf	postdec2,c
 12335  01614A  0060  F1D8  F009   	movff	___timezone,btemp+8
 12336  016150  0060  F1DC  F00A   	movff	___timezone+1,btemp+9
 12337  016156  0060  F1E0  F00B   	movff	___timezone+2,btemp+10
 12338  01615C  0060  F1E4  F00C   	movff	___timezone+3,btemp+11
 12339  016162  1E09               	comf	(btemp+8)^0,f,c
 12340  016164  1E0A               	comf	(btemp+9)^0,f,c
 12341  016166  1E0B               	comf	(btemp+10)^0,f,c
 12342  016168  1E0C               	comf	(btemp+11)^0,f,c
 12343  01616A  2A09               	incf	(btemp+8)^0,f,c
 12344  01616C  0E00               	movlw	0
 12345  01616E  220A               	addwfc	(btemp+9)^0,f,c
 12346  016170  220B               	addwfc	(btemp+10)^0,f,c
 12347  016172  220C               	addwfc	(btemp+11)^0,f,c
 12348                           
 12349                           ;stkvar	_offset @ sp[(-24)+-14]
 12350  016174  0EDA               	movlw	-38
 12351  016176  006F FF8F FFD9     	movff	plusw1,fsr2l
 12352  01617C  0EDB               	movlw	-37
 12353  01617E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12354  016184  0060  F027  FFDE   	movff	btemp+8,postinc2
 12355  01618A  0060  F02B  FFDE   	movff	btemp+9,postinc2
 12356  016190  0060  F02F  FFDE   	movff	btemp+10,postinc2
 12357  016196  0060  F033  FFDE   	movff	btemp+11,postinc2
 12358                           
 12359                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12360  01619C  0ED8               	movlw	-40
 12361  01619E  006F FF8C  F001    	movff	plusw1,btemp
 12362  0161A4  0ED9               	movlw	-39
 12363  0161A6  50E3               	movf	plusw1,w,c
 12364  0161A8  1001               	iorwf	btemp^0,w,c
 12365  0161AA  B4D8               	btfsc	status,2,c
 12366  0161AC  D029               	goto	l16335
 12367  0161AE  0060  F300  F00B   	movff	_dst_off,btemp+10
 12368  0161B4  0060  F304  F00C   	movff	_dst_off+1,btemp+11
 12369  0161BA  1E0B               	comf	(btemp+10)^0,f,c
 12370  0161BC  1E0C               	comf	(btemp+11)^0,f,c
 12371  0161BE  4A0B               	infsnz	(btemp+10)^0,f,c
 12372  0161C0  2A0C               	incf	(btemp+11)^0,f,c
 12373  0161C2  0060  F02C  F005   	movff	btemp+10,btemp+4
 12374  0161C8  0060  F030  F006   	movff	btemp+11,btemp+5
 12375  0161CE  0E00               	movlw	0
 12376  0161D0  BE06               	btfsc	(btemp+5)^0,7,c
 12377  0161D2  0EFF               	movlw	255
 12378  0161D4  6E07               	movwf	(btemp+6)^0,c
 12379  0161D6  6E08               	movwf	(btemp+7)^0,c
 12380                           
 12381                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12382  0161D8  0ED8               	movlw	-40
 12383  0161DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12384  0161E0  0ED9               	movlw	-39
 12385  0161E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12386  0161E8  0060  F017  FFDE   	movff	btemp+4,postinc2
 12387  0161EE  0060  F01B  FFDE   	movff	btemp+5,postinc2
 12388  0161F4  0060  F01F  FFDE   	movff	btemp+6,postinc2
 12389  0161FA  0060  F023  FFDE   	movff	btemp+7,postinc2
 12390  016200                     l16335:
 12391                           
 12392                           ;stkvar	_zonename @ sp[(-24)+-18]
 12393  016200  0ED6               	movlw	-42
 12394  016202  006F FF8F FFD9     	movff	plusw1,fsr2l
 12395  016208  0ED7               	movlw	-41
 12396  01620A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12397  016210  0060  F1CB  FFDE   	movff	___tzname,postinc2
 12398  016216  0060  F1CF  FFDD   	movff	___tzname+1,postdec2
 12399  01621C  D075               	goto	l4012
 12400  01621E                     l16339:
 12401                           
 12402                           ;stkvar	_isdst @ sp[(-24)+-12]
 12403  01621E  0EDC               	movlw	-36
 12404  016220  006F FF8F FFD9     	movff	plusw1,fsr2l
 12405  016226  0EDD               	movlw	-35
 12406  016228  006F FF8F FFDA     	movff	plusw1,fsr2h
 12407  01622E  0E01               	movlw	1
 12408  016230  6EDE               	movwf	postinc2,c
 12409  016232  0E00               	movlw	0
 12410  016234  6EDD               	movwf	postdec2,c
 12411  016236  0060  F300  F00B   	movff	_dst_off,btemp+10
 12412  01623C  0060  F304  F00C   	movff	_dst_off+1,btemp+11
 12413  016242  1E0B               	comf	(btemp+10)^0,f,c
 12414  016244  1E0C               	comf	(btemp+11)^0,f,c
 12415  016246  4A0B               	infsnz	(btemp+10)^0,f,c
 12416  016248  2A0C               	incf	(btemp+11)^0,f,c
 12417  01624A  0060  F02C  F005   	movff	btemp+10,btemp+4
 12418  016250  0060  F030  F006   	movff	btemp+11,btemp+5
 12419  016256  0E00               	movlw	0
 12420  016258  BE06               	btfsc	(btemp+5)^0,7,c
 12421  01625A  0EFF               	movlw	255
 12422  01625C  6E07               	movwf	(btemp+6)^0,c
 12423  01625E  6E08               	movwf	(btemp+7)^0,c
 12424                           
 12425                           ;stkvar	_offset @ sp[(-24)+-14]
 12426  016260  0EDA               	movlw	-38
 12427  016262  006F FF8F FFD9     	movff	plusw1,fsr2l
 12428  016268  0EDB               	movlw	-37
 12429  01626A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12430  016270  0060  F017  FFDE   	movff	btemp+4,postinc2
 12431  016276  0060  F01B  FFDE   	movff	btemp+5,postinc2
 12432  01627C  0060  F01F  FFDE   	movff	btemp+6,postinc2
 12433  016282  0060  F023  FFDE   	movff	btemp+7,postinc2
 12434                           
 12435                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12436  016288  0ED8               	movlw	-40
 12437  01628A  006F FF8C  F001    	movff	plusw1,btemp
 12438  016290  0ED9               	movlw	-39
 12439  016292  50E3               	movf	plusw1,w,c
 12440  016294  1001               	iorwf	btemp^0,w,c
 12441  016296  B4D8               	btfsc	status,2,c
 12442  016298  D029               	goto	l16347
 12443  01629A  0060  F1D8  F009   	movff	___timezone,btemp+8
 12444  0162A0  0060  F1DC  F00A   	movff	___timezone+1,btemp+9
 12445  0162A6  0060  F1E0  F00B   	movff	___timezone+2,btemp+10
 12446  0162AC  0060  F1E4  F00C   	movff	___timezone+3,btemp+11
 12447  0162B2  1E09               	comf	(btemp+8)^0,f,c
 12448  0162B4  1E0A               	comf	(btemp+9)^0,f,c
 12449  0162B6  1E0B               	comf	(btemp+10)^0,f,c
 12450  0162B8  1E0C               	comf	(btemp+11)^0,f,c
 12451  0162BA  2A09               	incf	(btemp+8)^0,f,c
 12452  0162BC  0E00               	movlw	0
 12453  0162BE  220A               	addwfc	(btemp+9)^0,f,c
 12454  0162C0  220B               	addwfc	(btemp+10)^0,f,c
 12455  0162C2  220C               	addwfc	(btemp+11)^0,f,c
 12456                           
 12457                           ;stkvar	_oppoff @ sp[(-24)+-16]
 12458  0162C4  0ED8               	movlw	-40
 12459  0162C6  006F FF8F FFD9     	movff	plusw1,fsr2l
 12460  0162CC  0ED9               	movlw	-39
 12461  0162CE  006F FF8F FFDA     	movff	plusw1,fsr2h
 12462  0162D4  0060  F027  FFDE   	movff	btemp+8,postinc2
 12463  0162DA  0060  F02B  FFDE   	movff	btemp+9,postinc2
 12464  0162E0  0060  F02F  FFDE   	movff	btemp+10,postinc2
 12465  0162E6  0060  F033  FFDE   	movff	btemp+11,postinc2
 12466  0162EC                     l16347:
 12467                           
 12468                           ;stkvar	_zonename @ sp[(-24)+-18]
 12469  0162EC  0ED6               	movlw	-42
 12470  0162EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12471  0162F4  0ED7               	movlw	-41
 12472  0162F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12473  0162FC  0060  F1D3  FFDE   	movff	___tzname+2,postinc2
 12474  016302  0060  F1D7  FFDD   	movff	___tzname+3,postdec2
 12475  016308                     l4012:
 12476                           
 12477                           ; ___secs_to_zone: autosize = 24, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          18, argsize = 18, vargsize = 0
 12478  016308  0ED6               	movlw	214
 12479  01630A  26E1               	addwf	fsr1l,f,c
 12480  01630C  0EFF               	movlw	255
 12481  01630E  22E2               	addwfc	fsr1h,f,c
 12482  016310  0012               	return		;funcret
 12483  016312                     __end_of___secs_to_zone:
 12484                           	opt callstack 0
 12485                           
 12486 ;; *************** function _scan_trans *****************
 12487 ;; Defined at:
 12488 ;;		line 145 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12489 ;; Parameters:    Size  Location     Type
 12490 ;;  t               8  [STACK] long long 
 12491 ;;  local           2  [STACK] int 
 12492 ;;  alt             2  [STACK] PTR unsigned int 
 12493 ;;		 -> alt(2), 
 12494 ;; Auto vars:     Size  Location     Type
 12495 ;;  x               8    0        unsigned long long 
 12496 ;;  a               2    0        unsigned int 
 12497 ;;  scale           2    0        int 
 12498 ;;  n               2    0        unsigned int 
 12499 ;;  m               2    0        unsigned int 
 12500 ;;  off             2    0        int 
 12501 ;; Return value:  Size  Location     Type
 12502 ;;                  2  [STACK] unsigned int 
 12503 ;; Registers used:
 12504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 12505 ;; Tracked objects:
 12506 ;;		On entry : 0/0
 12507 ;;		On exit  : 0/0
 12508 ;;		Unchanged: 0/0
 12509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12514 ;;Total ram usage:        0 bytes
 12515 ;; Hardware stack levels used:    1
 12516 ;; Hardware stack levels required when called:   16
 12517 ;; This function calls:
 12518 ;;		_zi_read32
 12519 ;; This function is called by:
 12520 ;;		___secs_to_zone
 12521 ;; This function uses a reentrant model
 12522 ;;
 12523                           
 12524                           	psect	text36
 12525  001602                     __ptext36:
 12526                           	opt callstack 0
 12527  001602                     _scan_trans:
 12528                           	opt callstack 10
 12529                           
 12530                           ;stkvar	_alt @ sp[(0)+-12]
 12531                           
 12532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 12 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 12533                           ;incstack = 0
 12534  001602  0EF4               	movlw	-12
 12535  001604  006F FF8C  F001    	movff	plusw1,btemp
 12536  00160A  0EF5               	movlw	-11
 12537  00160C  50E3               	movf	plusw1,w,c
 12538  00160E  1001               	iorwf	btemp^0,w,c
 12539  001610  B4D8               	btfsc	status,2,c
 12540  001612  D00C               	goto	l12053
 12541                           
 12542                           ;stkvar	_alt @ sp[(0)+-12]
 12543  001614  0EF4               	movlw	-12
 12544  001616  006F FF8F FFD9     	movff	plusw1,fsr2l
 12545  00161C  0EF5               	movlw	-11
 12546  00161E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12547  001624  0E00               	movlw	0
 12548  001626  6EDE               	movwf	postinc2,c
 12549  001628  0E00               	movlw	0
 12550  00162A  6EDD               	movwf	postdec2,c
 12551  00162C                     l12053:
 12552  00162C  0E00               	movlw	0
 12553  00162E  6E01               	movwf	btemp^0,c
 12554  001630  0E00               	movlw	0
 12555  001632  6E02               	movwf	(btemp+1)^0,c
 12556                           
 12557                           ; _scan_trans: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, a
      +                          rgsize = 12, vargsize = 0
 12558  001634  0EF4               	movlw	244
 12559  001636  26E1               	addwf	fsr1l,f,c
 12560  001638  0EFF               	movlw	255
 12561  00163A  22E2               	addwfc	fsr1h,f,c
 12562  00163C  0012               	return		;funcret
 12563  00163E                     __end_of_scan_trans:
 12564                           	opt callstack 0
 12565                           
 12566 ;; *************** function _zi_read32 *****************
 12567 ;; Defined at:
 12568 ;;		line 100 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12569 ;; Parameters:    Size  Location     Type
 12570 ;;  z               2  [STACK] PTR const unsigned char 
 12571 ;;		 -> NULL(0), 
 12572 ;; Auto vars:     Size  Location     Type
 12573 ;;		None
 12574 ;; Return value:  Size  Location     Type
 12575 ;;                  4  [STACK] unsigned long 
 12576 ;; Registers used:
 12577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12578 ;; Tracked objects:
 12579 ;;		On entry : 0/0
 12580 ;;		On exit  : 0/0
 12581 ;;		Unchanged: 0/0
 12582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12587 ;;Total ram usage:        0 bytes
 12588 ;; Hardware stack levels used:    1
 12589 ;; Hardware stack levels required when called:   15
 12590 ;; This function calls:
 12591 ;;		Nothing
 12592 ;; This function is called by:
 12593 ;;		_scan_trans
 12594 ;;		___secs_to_zone
 12595 ;; This function uses a reentrant model
 12596 ;;
 12597                           
 12598                           	psect	text37
 12599  01F1B8                     __ptext37:
 12600                           	opt callstack 0
 12601  01F1B8                     _zi_read32:
 12602                           	opt callstack 11
 12603                           
 12604                           ;stkvar	_z @ sp[(0)+-2]
 12605                           
 12606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12607                           ;incstack = 0
 12608  01F1B8  0EFE               	movlw	-2
 12609  01F1BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 12610  01F1C0  0EFF               	movlw	-1
 12611  01F1C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 12612  01F1C8  0E02               	movlw	2
 12613  01F1CA  240B               	addwf	(btemp+10)^0,w,c
 12614  01F1CC  6ED9               	movwf	fsr2l,c
 12615  01F1CE  0E00               	movlw	0
 12616  01F1D0  200C               	addwfc	(btemp+11)^0,w,c
 12617  01F1D2  6EDA               	movwf	fsr2h,c
 12618  01F1D4  50DF               	movf	indf2,w,c
 12619  01F1D6  6E0C               	movwf	(btemp+11)^0,c
 12620  01F1D8  0060  F030  F005   	movff	btemp+11,btemp+4
 12621  01F1DE  6A06               	clrf	(btemp+5)^0,c
 12622  01F1E0  6A07               	clrf	(btemp+6)^0,c
 12623  01F1E2  6A08               	clrf	(btemp+7)^0,c
 12624  01F1E4  0060  F01C  F008   	movff	btemp+6,btemp+7
 12625  01F1EA  0060  F018  F007   	movff	btemp+5,btemp+6
 12626  01F1F0  0060  F014  F006   	movff	btemp+4,btemp+5
 12627  01F1F6  6A05               	clrf	(btemp+4)^0,c
 12628                           
 12629                           ;stkvar	_z @ sp[(0)+-2]
 12630  01F1F8  0EFE               	movlw	-2
 12631  01F1FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 12632  01F200  0EFF               	movlw	-1
 12633  01F202  006F FF8C  F00C    	movff	plusw1,btemp+11
 12634  01F208  0E01               	movlw	1
 12635  01F20A  240B               	addwf	(btemp+10)^0,w,c
 12636  01F20C  6ED9               	movwf	fsr2l,c
 12637  01F20E  0E00               	movlw	0
 12638  01F210  200C               	addwfc	(btemp+11)^0,w,c
 12639  01F212  6EDA               	movwf	fsr2h,c
 12640  01F214  50DF               	movf	indf2,w,c
 12641  01F216  6E0C               	movwf	(btemp+11)^0,c
 12642  01F218  0060  F030  F001   	movff	btemp+11,btemp
 12643  01F21E  6A02               	clrf	(btemp+1)^0,c
 12644  01F220  6A03               	clrf	(btemp+2)^0,c
 12645  01F222  6A04               	clrf	(btemp+3)^0,c
 12646  01F224  0060  F008  F004   	movff	btemp+1,btemp+3
 12647  01F22A  0060  F004  F003   	movff	btemp,btemp+2
 12648  01F230  6A02               	clrf	(btemp+1)^0,c
 12649  01F232  6A01               	clrf	btemp^0,c
 12650                           
 12651                           ;stkvar	_z @ sp[(0)+-2]
 12652  01F234  0EFE               	movlw	-2
 12653  01F236  006F FF8F FFD9     	movff	plusw1,fsr2l
 12654  01F23C  0EFF               	movlw	-1
 12655  01F23E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12656  01F244  50DF               	movf	indf2,w,c
 12657  01F246  6E09               	movwf	(btemp+8)^0,c
 12658  01F248  6A0A               	clrf	(btemp+9)^0,c
 12659  01F24A  6A0B               	clrf	(btemp+10)^0,c
 12660  01F24C  6A0C               	clrf	(btemp+11)^0,c
 12661  01F24E  0060  F024  F00C   	movff	btemp+8,btemp+11
 12662  01F254  6A0B               	clrf	(btemp+10)^0,c
 12663  01F256  6A0A               	clrf	(btemp+9)^0,c
 12664  01F258  6A09               	clrf	(btemp+8)^0,c
 12665  01F25A  5001               	movf	btemp^0,w,c
 12666  01F25C  1209               	iorwf	(btemp+8)^0,f,c
 12667  01F25E  5002               	movf	(btemp+1)^0,w,c
 12668  01F260  120A               	iorwf	(btemp+9)^0,f,c
 12669  01F262  5003               	movf	(btemp+2)^0,w,c
 12670  01F264  120B               	iorwf	(btemp+10)^0,f,c
 12671  01F266  5004               	movf	(btemp+3)^0,w,c
 12672  01F268  120C               	iorwf	(btemp+11)^0,f,c
 12673  01F26A  5005               	movf	(btemp+4)^0,w,c
 12674  01F26C  1209               	iorwf	(btemp+8)^0,f,c
 12675  01F26E  5006               	movf	(btemp+5)^0,w,c
 12676  01F270  120A               	iorwf	(btemp+9)^0,f,c
 12677  01F272  5007               	movf	(btemp+6)^0,w,c
 12678  01F274  120B               	iorwf	(btemp+10)^0,f,c
 12679  01F276  5008               	movf	(btemp+7)^0,w,c
 12680  01F278  120C               	iorwf	(btemp+11)^0,f,c
 12681                           
 12682                           ;stkvar	_z @ sp[(0)+-2]
 12683  01F27A  0EFE               	movlw	-2
 12684  01F27C  006F FF8C  F007    	movff	plusw1,btemp+6
 12685  01F282  0EFF               	movlw	-1
 12686  01F284  006F FF8C  F008    	movff	plusw1,btemp+7
 12687  01F28A  0E03               	movlw	3
 12688  01F28C  2407               	addwf	(btemp+6)^0,w,c
 12689  01F28E  6ED9               	movwf	fsr2l,c
 12690  01F290  0E00               	movlw	0
 12691  01F292  2008               	addwfc	(btemp+7)^0,w,c
 12692  01F294  6EDA               	movwf	fsr2h,c
 12693  01F296  50DF               	movf	indf2,w,c
 12694  01F298  1009               	iorwf	(btemp+8)^0,w,c
 12695  01F29A  6E01               	movwf	btemp^0,c
 12696  01F29C  500A               	movf	(btemp+9)^0,w,c
 12697  01F29E  6E02               	movwf	(btemp+1)^0,c
 12698  01F2A0  500B               	movf	(btemp+10)^0,w,c
 12699  01F2A2  6E03               	movwf	(btemp+2)^0,c
 12700  01F2A4  500C               	movf	(btemp+11)^0,w,c
 12701  01F2A6  6E04               	movwf	(btemp+3)^0,c
 12702                           
 12703                           ; _zi_read32: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
 12704  01F2A8  52E5               	movf	postdec1,f,c
 12705  01F2AA  52E5               	movf	postdec1,f,c
 12706  01F2AC  0012               	return		;funcret
 12707  01F2AE                     __end_of_zi_read32:
 12708                           	opt callstack 0
 12709                           
 12710 ;; *************** function _rule_to_secs *****************
 12711 ;; Defined at:
 12712 ;;		line 218 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 12713 ;; Parameters:    Size  Location     Type
 12714 ;;  rule            2  [STACK] PTR const int 
 12715 ;;		 -> r1(10), r0(10), 
 12716 ;;  year            2  [STACK] int 
 12717 ;; Auto vars:     Size  Location     Type
 12718 ;;  days            2  [STACK] int 
 12719 ;;  wday            2  [STACK] int 
 12720 ;;  t               8  [STACK] long long 
 12721 ;;  is_leap         2  [STACK] int 
 12722 ;;  n               2  [STACK] int 
 12723 ;;  x               2  [STACK] int 
 12724 ;;  m               2  [STACK] int 
 12725 ;;  d               2  [STACK] int 
 12726 ;; Return value:  Size  Location     Type
 12727 ;;                  8  [STACK] long long 
 12728 ;; Registers used:
 12729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, tblptrl, tblptrh, tblptru, prodl, prodh
 12730 ;; Tracked objects:
 12731 ;;		On entry : 0/0
 12732 ;;		On exit  : 0/0
 12733 ;;		Unchanged: 0/0
 12734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12739 ;;Total ram usage:        0 bytes
 12740 ;; Hardware stack levels used:    1
 12741 ;; Hardware stack levels required when called:   17
 12742 ;; This function calls:
 12743 ;;		___aldiv
 12744 ;;		___aomod
 12745 ;;		___lmul
 12746 ;;		___month_to_secs
 12747 ;;		___year_to_secs
 12748 ;;		_days_in_month
 12749 ;; This function is called by:
 12750 ;;		___secs_to_zone
 12751 ;; This function uses a reentrant model
 12752 ;;
 12753                           
 12754                           	psect	text38
 12755  0172F8                     __ptext38:
 12756                           	opt callstack 0
 12757  0172F8                     _rule_to_secs:
 12758                           	opt callstack 0
 12759                           
 12760                           ; autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 8 argfudge = 4
 12761  0172F8  0E1A               	movlw	26
 12762  0172FA  26E1               	addwf	fsr1l,f,c
 12763  0172FC  0E00               	movlw	0
 12764  0172FE  22E2               	addwfc	fsr1h,f,c
 12765                           
 12766                           ;stkvar	_is_leap @ sp[(-22)+12]
 12767                           
 12768                           ;incstack = 0
 12769  017300  0EF6               	movlw	246
 12770  017302  24E1               	addwf	fsr1l,w,c
 12771  017304  6E01               	movwf	btemp^0,c
 12772  017306  0EFF               	movlw	255
 12773  017308  20E2               	addwfc	fsr1h,w,c
 12774  01730A  6E02               	movwf	(btemp+1)^0,c
 12775  01730C  0060  F007  FFE6   	movff	btemp,postinc1
 12776  017312  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12777                           
 12778                           ;stkvar	_year @ sp[(-24)+-8]
 12779  017318  0EE0               	movlw	-32
 12780  01731A  006F FF8C  F011    	movff	plusw1,btemp+16
 12781  017320  0EE1               	movlw	-31
 12782  017322  006F FF8C  F012    	movff	plusw1,btemp+17
 12783  017328  6A13               	clrf	(btemp+18)^0,c
 12784  01732A  BE12               	btfsc	(btemp+17)^0,7,c
 12785  01732C  6813               	setf	(btemp+18)^0,c
 12786  01732E  0060  F04C  F014   	movff	btemp+18,btemp+19
 12787  017334  0060  F04C  F015   	movff	btemp+18,btemp+20
 12788  01733A  0060  F04C  F016   	movff	btemp+18,btemp+21
 12789  017340  0060  F04C  F017   	movff	btemp+18,btemp+22
 12790  017346  0060  F04C  F018   	movff	btemp+18,btemp+23
 12791  01734C  0060  F047  FFE6   	movff	btemp+16,postinc1
 12792  017352  0060  F04B  FFE6   	movff	btemp+17,postinc1
 12793  017358  0060  F04F  FFE6   	movff	btemp+18,postinc1
 12794  01735E  0060  F053  FFE6   	movff	btemp+19,postinc1
 12795  017364  0060  F057  FFE6   	movff	btemp+20,postinc1
 12796  01736A  0060  F05B  FFE6   	movff	btemp+21,postinc1
 12797  017370  0060  F05F  FFE6   	movff	btemp+22,postinc1
 12798  017376  0060  F063  FFE6   	movff	btemp+23,postinc1
 12799  01737C  EC7F  F0A8         	call	___year_to_secs	;wreg free
 12800  017380  52E5               	movf	postdec1,f,c
 12801  017382  006F FF9C  F018    	movff	indf1,btemp+23
 12802  017388  52E5               	movf	postdec1,f,c
 12803  01738A  006F FF9C  F017    	movff	indf1,btemp+22
 12804  017390  52E5               	movf	postdec1,f,c
 12805  017392  006F FF9C  F016    	movff	indf1,btemp+21
 12806  017398  52E5               	movf	postdec1,f,c
 12807  01739A  006F FF9C  F015    	movff	indf1,btemp+20
 12808  0173A0  52E5               	movf	postdec1,f,c
 12809  0173A2  006F FF9C  F014    	movff	indf1,btemp+19
 12810  0173A8  52E5               	movf	postdec1,f,c
 12811  0173AA  006F FF9C  F013    	movff	indf1,btemp+18
 12812  0173B0  52E5               	movf	postdec1,f,c
 12813  0173B2  006F FF9C  F012    	movff	indf1,btemp+17
 12814  0173B8  52E5               	movf	postdec1,f,c
 12815  0173BA  006F FF9C  F011    	movff	indf1,btemp+16
 12816  0173C0  52E5               	movf	postdec1,f,c
 12817  0173C2  52E5               	movf	postdec1,f,c
 12818                           
 12819                           ;stkvar	_t @ sp[(-22)+4]
 12820  0173C4  0EEE               	movlw	-18
 12821  0173C6  0060  F047  FFE3   	movff	btemp+16,plusw1
 12822  0173CC  0EEF               	movlw	-17
 12823  0173CE  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12824  0173D4  0EF0               	movlw	-16
 12825  0173D6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12826  0173DC  0EF1               	movlw	-15
 12827  0173DE  0060  F053  FFE3   	movff	btemp+19,plusw1
 12828  0173E4  0EF2               	movlw	-14
 12829  0173E6  0060  F057  FFE3   	movff	btemp+20,plusw1
 12830  0173EC  0EF3               	movlw	-13
 12831  0173EE  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12832  0173F4  0EF4               	movlw	-12
 12833  0173F6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12834  0173FC  0EF5               	movlw	-11
 12835  0173FE  0060  F063  FFE3   	movff	btemp+23,plusw1
 12836                           
 12837                           ;stkvar	_rule @ sp[(-22)+-6]
 12838  017404  0EE4               	movlw	-28
 12839  017406  006F FF8F FFD9     	movff	plusw1,fsr2l
 12840  01740C  0EE5               	movlw	-27
 12841  01740E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12842  017414  0E4D               	movlw	77
 12843  017416  18DE               	xorwf	postinc2,w,c
 12844  017418  10DE               	iorwf	postinc2,w,c
 12845  01741A  B4D8               	btfsc	status,2,c
 12846  01741C  D074               	goto	l16209
 12847                           
 12848                           ;stkvar	_rule @ sp[(-22)+-6]
 12849  01741E  0EE4               	movlw	-28
 12850  017420  006F FF8C  F00B    	movff	plusw1,btemp+10
 12851  017426  0EE5               	movlw	-27
 12852  017428  006F FF8C  F00C    	movff	plusw1,btemp+11
 12853  01742E  0E02               	movlw	2
 12854  017430  240B               	addwf	(btemp+10)^0,w,c
 12855  017432  6ED9               	movwf	fsr2l,c
 12856  017434  0E00               	movlw	0
 12857  017436  200C               	addwfc	(btemp+11)^0,w,c
 12858  017438  6EDA               	movwf	fsr2h,c
 12859  01743A  006F FF78  F00B    	movff	postinc2,btemp+10
 12860  017440  006F FF74  F00C    	movff	postdec2,btemp+11
 12861                           
 12862                           ;stkvar	_x @ sp[(-22)+16]
 12863  017446  0EFA               	movlw	-6
 12864  017448  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12865  01744E  0EFB               	movlw	-5
 12866  017450  0060  F033  FFE3   	movff	btemp+11,plusw1
 12867                           
 12868                           ;stkvar	_rule @ sp[(-22)+-6]
 12869  017456  0EE4               	movlw	-28
 12870  017458  006F FF8F FFD9     	movff	plusw1,fsr2l
 12871  01745E  0EE5               	movlw	-27
 12872  017460  006F FF8F FFDA     	movff	plusw1,fsr2h
 12873  017466  0E4A               	movlw	74
 12874  017468  18DE               	xorwf	postinc2,w,c
 12875  01746A  10DE               	iorwf	postinc2,w,c
 12876  01746C  A4D8               	btfss	status,2,c
 12877  01746E  D021               	goto	l16207
 12878                           
 12879                           ;stkvar	_x @ sp[(-22)+16]
 12880  017470  0EFB               	movlw	-5
 12881  017472  BEE3               	btfsc	plusw1,7,c
 12882  017474  D014               	goto	u15810
 12883  017476  0EFB               	movlw	-5
 12884  017478  50E3               	movf	plusw1,w,c
 12885  01747A  E108               	bnz	u15800
 12886  01747C  0EFA               	movlw	-6
 12887  01747E  006F FF8C  F001    	movff	plusw1,btemp
 12888  017484  0E3C               	movlw	60
 12889  017486  5E01               	subwf	btemp^0,f,c
 12890  017488  A0D8               	btfss	status,0,c
 12891  01748A  D009               	goto	u15810
 12892  01748C                     u15800:
 12893                           
 12894                           ;stkvar	_is_leap @ sp[(-22)+12]
 12895  01748C  0EF6               	movlw	-10
 12896  01748E  006F FF8C  F001    	movff	plusw1,btemp
 12897  017494  0EF7               	movlw	-9
 12898  017496  50E3               	movf	plusw1,w,c
 12899  017498  1001               	iorwf	btemp^0,w,c
 12900  01749A  A4D8               	btfss	status,2,c
 12901  01749C  D00A               	goto	l16207
 12902  01749E                     u15810:
 12903                           
 12904                           ;stkvar	_x @ sp[(-22)+16]
 12905  01749E  50E1               	movf	fsr1l,w,c
 12906  0174A0  0FFA               	addlw	-6
 12907  0174A2  6ED9               	movwf	fsr2l,c
 12908  0174A4  50E2               	movf	fsr1h,w,c
 12909  0174A6  6EDA               	movwf	fsr2h,c
 12910  0174A8  0EFF               	movlw	255
 12911  0174AA  22DA               	addwfc	fsr2h,f,c
 12912  0174AC  06DE               	decf	postinc2,f,c
 12913  0174AE  0E00               	movlw	0
 12914  0174B0  5ADD               	subwfb	postdec2,f,c
 12915  0174B2                     l16207:
 12916  0174B2  0E80               	movlw	128
 12917  0174B4  6EE6               	movwf	postinc1,c
 12918  0174B6  0E51               	movlw	81
 12919  0174B8  6EE6               	movwf	postinc1,c
 12920  0174BA  0E01               	movlw	1
 12921  0174BC  6EE6               	movwf	postinc1,c
 12922  0174BE  0E00               	movlw	0
 12923  0174C0  6EE6               	movwf	postinc1,c
 12924                           
 12925                           ;stkvar	_x @ sp[(-26)+16]
 12926  0174C2  0EF6               	movlw	-10
 12927  0174C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 12928  0174CA  0EF7               	movlw	-9
 12929  0174CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 12930  0174D2  0060  F02C  F005   	movff	btemp+10,btemp+4
 12931  0174D8  0060  F030  F006   	movff	btemp+11,btemp+5
 12932  0174DE  0E00               	movlw	0
 12933  0174E0  BE06               	btfsc	(btemp+5)^0,7,c
 12934  0174E2  0EFF               	movlw	255
 12935  0174E4  6E07               	movwf	(btemp+6)^0,c
 12936  0174E6  6E08               	movwf	(btemp+7)^0,c
 12937  0174E8  0060  F017  FFE6   	movff	btemp+4,postinc1
 12938  0174EE  0060  F01B  FFE6   	movff	btemp+5,postinc1
 12939  0174F4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 12940  0174FA  0060  F023  FFE6   	movff	btemp+7,postinc1
 12941  017500  EC9F  F0FB         	call	___lmul	;wreg free
 12942  017504  D1EC               	goto	L9
 12943  017506                     l16209:
 12944                           
 12945                           ;stkvar	_rule @ sp[(-22)+-6]
 12946  017506  0EE4               	movlw	-28
 12947  017508  006F FF8C  F00B    	movff	plusw1,btemp+10
 12948  01750E  0EE5               	movlw	-27
 12949  017510  006F FF8C  F00C    	movff	plusw1,btemp+11
 12950  017516  0E02               	movlw	2
 12951  017518  240B               	addwf	(btemp+10)^0,w,c
 12952  01751A  6ED9               	movwf	fsr2l,c
 12953  01751C  0E00               	movlw	0
 12954  01751E  200C               	addwfc	(btemp+11)^0,w,c
 12955  017520  6EDA               	movwf	fsr2h,c
 12956  017522  006F FF78  F00B    	movff	postinc2,btemp+10
 12957  017528  006F FF74  F00C    	movff	postdec2,btemp+11
 12958                           
 12959                           ;stkvar	_m @ sp[(-22)+18]
 12960  01752E  0EFC               	movlw	-4
 12961  017530  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12962  017536  0EFD               	movlw	-3
 12963  017538  0060  F033  FFE3   	movff	btemp+11,plusw1
 12964                           
 12965                           ;stkvar	_rule @ sp[(-22)+-6]
 12966  01753E  0EE4               	movlw	-28
 12967  017540  006F FF8C  F00B    	movff	plusw1,btemp+10
 12968  017546  0EE5               	movlw	-27
 12969  017548  006F FF8C  F00C    	movff	plusw1,btemp+11
 12970  01754E  0E04               	movlw	4
 12971  017550  240B               	addwf	(btemp+10)^0,w,c
 12972  017552  6ED9               	movwf	fsr2l,c
 12973  017554  0E00               	movlw	0
 12974  017556  200C               	addwfc	(btemp+11)^0,w,c
 12975  017558  6EDA               	movwf	fsr2h,c
 12976  01755A  006F FF78  F00B    	movff	postinc2,btemp+10
 12977  017560  006F FF74  F00C    	movff	postdec2,btemp+11
 12978                           
 12979                           ;stkvar	_n @ sp[(-22)+14]
 12980  017566  0EF8               	movlw	-8
 12981  017568  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12982  01756E  0EF9               	movlw	-7
 12983  017570  0060  F033  FFE3   	movff	btemp+11,plusw1
 12984                           
 12985                           ;stkvar	_rule @ sp[(-22)+-6]
 12986  017576  0EE4               	movlw	-28
 12987  017578  006F FF8C  F00B    	movff	plusw1,btemp+10
 12988  01757E  0EE5               	movlw	-27
 12989  017580  006F FF8C  F00C    	movff	plusw1,btemp+11
 12990  017586  0E06               	movlw	6
 12991  017588  240B               	addwf	(btemp+10)^0,w,c
 12992  01758A  6ED9               	movwf	fsr2l,c
 12993  01758C  0E00               	movlw	0
 12994  01758E  200C               	addwfc	(btemp+11)^0,w,c
 12995  017590  6EDA               	movwf	fsr2h,c
 12996  017592  006F FF78  F00B    	movff	postinc2,btemp+10
 12997  017598  006F FF74  F00C    	movff	postdec2,btemp+11
 12998                           
 12999                           ;stkvar	_d @ sp[(-22)+20]
 13000  01759E  0EFE               	movlw	-2
 13001  0175A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13002  0175A6  0EFF               	movlw	-1
 13003  0175A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 13004                           
 13005                           ;stkvar	_is_leap @ sp[(-22)+12]
 13006  0175AE  0EF6               	movlw	-10
 13007  0175B0  006F FF8F FFE6     	movff	plusw1,postinc1
 13008  0175B6  006F FF8F FFE6     	movff	plusw1,postinc1
 13009                           
 13010                           ;stkvar	_m @ sp[(-24)+18]
 13011  0175BC  0EFA               	movlw	-6
 13012  0175BE  50E3               	movf	plusw1,w,c
 13013  0175C0  0FFF               	addlw	255
 13014  0175C2  6E0B               	movwf	(btemp+10)^0,c
 13015  0175C4  0EFB               	movlw	-5
 13016  0175C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 13017  0175CC  0EFF               	movlw	255
 13018  0175CE  220C               	addwfc	(btemp+11)^0,f,c
 13019  0175D0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13020  0175D6  0060  F033  FFE6   	movff	btemp+11,postinc1
 13021  0175DC  ECD0  F0F9         	call	___month_to_secs	;wreg free
 13022  0175E0  0060  F004  F011   	movff	btemp,btemp+16
 13023  0175E6  0060  F008  F012   	movff	btemp+1,btemp+17
 13024  0175EC  0060  F00C  F013   	movff	btemp+2,btemp+18
 13025  0175F2  0060  F010  F014   	movff	btemp+3,btemp+19
 13026  0175F8  6A15               	clrf	(btemp+20)^0,c
 13027  0175FA  BE14               	btfsc	(btemp+19)^0,7,c
 13028  0175FC  6815               	setf	(btemp+20)^0,c
 13029  0175FE  0060  F054  F016   	movff	btemp+20,btemp+21
 13030  017604  0060  F054  F017   	movff	btemp+20,btemp+22
 13031  01760A  0060  F054  F018   	movff	btemp+20,btemp+23
 13032                           
 13033                           ;stkvar	_t @ sp[(-22)+4]
 13034  017610  50E1               	movf	fsr1l,w,c
 13035  017612  0FEE               	addlw	-18
 13036  017614  6ED9               	movwf	fsr2l,c
 13037  017616  50E2               	movf	fsr1h,w,c
 13038  017618  6EDA               	movwf	fsr2h,c
 13039  01761A  0EFF               	movlw	255
 13040  01761C  22DA               	addwfc	fsr2h,f,c
 13041  01761E  5011               	movf	(btemp+16)^0,w,c
 13042  017620  26DE               	addwf	postinc2,f,c
 13043  017622  5012               	movf	(btemp+17)^0,w,c
 13044  017624  22DE               	addwfc	postinc2,f,c
 13045  017626  5013               	movf	(btemp+18)^0,w,c
 13046  017628  22DE               	addwfc	postinc2,f,c
 13047  01762A  5014               	movf	(btemp+19)^0,w,c
 13048  01762C  22DE               	addwfc	postinc2,f,c
 13049  01762E  5015               	movf	(btemp+20)^0,w,c
 13050  017630  22DE               	addwfc	postinc2,f,c
 13051  017632  5016               	movf	(btemp+21)^0,w,c
 13052  017634  22DE               	addwfc	postinc2,f,c
 13053  017636  5017               	movf	(btemp+22)^0,w,c
 13054  017638  22DE               	addwfc	postinc2,f,c
 13055  01763A  5018               	movf	(btemp+23)^0,w,c
 13056  01763C  22DE               	addwfc	postinc2,f,c
 13057  01763E  0E80               	movlw	128
 13058  017640  6EE6               	movwf	postinc1,c
 13059  017642  0E51               	movlw	81
 13060  017644  6EE6               	movwf	postinc1,c
 13061  017646  0E01               	movlw	1
 13062  017648  6EE6               	movwf	postinc1,c
 13063  01764A  0E00               	movlw	0
 13064  01764C  6EE6               	movwf	postinc1,c
 13065  01764E  0E80               	movlw	128
 13066  017650  6EE6               	movwf	postinc1,c
 13067  017652  0E3A               	movlw	58
 13068  017654  6EE6               	movwf	postinc1,c
 13069  017656  0E09               	movlw	9
 13070  017658  6EE6               	movwf	postinc1,c
 13071  01765A  0E00               	movlw	0
 13072  01765C  6EE6               	movwf	postinc1,c
 13073  01765E  0E00               	movlw	0
 13074  017660  6EE6               	movwf	postinc1,c
 13075  017662  0E00               	movlw	0
 13076  017664  6EE6               	movwf	postinc1,c
 13077  017666  0E00               	movlw	0
 13078  017668  6EE6               	movwf	postinc1,c
 13079  01766A  0E00               	movlw	0
 13080  01766C  6EE6               	movwf	postinc1,c
 13081                           
 13082                           ;stkvar	_t @ sp[(-34)+4]
 13083  01766E  0EE2               	movlw	-30
 13084  017670  50E3               	movf	plusw1,w,c
 13085  017672  0F00               	addlw	0
 13086  017674  6E11               	movwf	(btemp+16)^0,c
 13087  017676  0EE3               	movlw	-29
 13088  017678  006F FF8C  F012    	movff	plusw1,btemp+17
 13089  01767E  0E46               	movlw	70
 13090  017680  2212               	addwfc	(btemp+17)^0,f,c
 13091  017682  0EE4               	movlw	-28
 13092  017684  006F FF8C  F013    	movff	plusw1,btemp+18
 13093  01768A  0E05               	movlw	5
 13094  01768C  2213               	addwfc	(btemp+18)^0,f,c
 13095  01768E  0EE5               	movlw	-27
 13096  017690  006F FF8C  F014    	movff	plusw1,btemp+19
 13097  017696  0E00               	movlw	0
 13098  017698  2214               	addwfc	(btemp+19)^0,f,c
 13099  01769A  0EE6               	movlw	-26
 13100  01769C  006F FF8C  F015    	movff	plusw1,btemp+20
 13101  0176A2  0E00               	movlw	0
 13102  0176A4  2215               	addwfc	(btemp+20)^0,f,c
 13103  0176A6  0EE7               	movlw	-25
 13104  0176A8  006F FF8C  F016    	movff	plusw1,btemp+21
 13105  0176AE  0E00               	movlw	0
 13106  0176B0  2216               	addwfc	(btemp+21)^0,f,c
 13107  0176B2  0EE8               	movlw	-24
 13108  0176B4  006F FF8C  F017    	movff	plusw1,btemp+22
 13109  0176BA  0E00               	movlw	0
 13110  0176BC  2217               	addwfc	(btemp+22)^0,f,c
 13111  0176BE  0EE9               	movlw	-23
 13112  0176C0  006F FF8C  F018    	movff	plusw1,btemp+23
 13113  0176C6  0E00               	movlw	0
 13114  0176C8  2218               	addwfc	(btemp+23)^0,f,c
 13115  0176CA  0060  F047  FFE6   	movff	btemp+16,postinc1
 13116  0176D0  0060  F04B  FFE6   	movff	btemp+17,postinc1
 13117  0176D6  0060  F04F  FFE6   	movff	btemp+18,postinc1
 13118  0176DC  0060  F053  FFE6   	movff	btemp+19,postinc1
 13119  0176E2  0060  F057  FFE6   	movff	btemp+20,postinc1
 13120  0176E8  0060  F05B  FFE6   	movff	btemp+21,postinc1
 13121  0176EE  0060  F05F  FFE6   	movff	btemp+22,postinc1
 13122  0176F4  0060  F063  FFE6   	movff	btemp+23,postinc1
 13123  0176FA  EC11  F0DF         	call	___aomod	;wreg free
 13124  0176FE  52E5               	movf	postdec1,f,c
 13125  017700  006F FF9C  F018    	movff	indf1,btemp+23
 13126  017706  52E5               	movf	postdec1,f,c
 13127  017708  006F FF9C  F017    	movff	indf1,btemp+22
 13128  01770E  52E5               	movf	postdec1,f,c
 13129  017710  006F FF9C  F016    	movff	indf1,btemp+21
 13130  017716  52E5               	movf	postdec1,f,c
 13131  017718  006F FF9C  F015    	movff	indf1,btemp+20
 13132  01771E  52E5               	movf	postdec1,f,c
 13133  017720  006F FF9C  F014    	movff	indf1,btemp+19
 13134  017726  52E5               	movf	postdec1,f,c
 13135  017728  006F FF9C  F013    	movff	indf1,btemp+18
 13136  01772E  52E5               	movf	postdec1,f,c
 13137  017730  006F FF9C  F012    	movff	indf1,btemp+17
 13138  017736  52E5               	movf	postdec1,f,c
 13139  017738  006F FF9C  F011    	movff	indf1,btemp+16
 13140  01773E  0EF8               	movlw	248
 13141  017740  26E1               	addwf	fsr1l,f,c
 13142  017742  0EFF               	movlw	255
 13143  017744  22E2               	addwfc	fsr1h,f,c
 13144  017746  0060  F044  F00B   	movff	btemp+16,btemp+10
 13145  01774C  0060  F048  F00C   	movff	btemp+17,btemp+11
 13146  017752  0060  F02C  F005   	movff	btemp+10,btemp+4
 13147  017758  0060  F030  F006   	movff	btemp+11,btemp+5
 13148  01775E  0E00               	movlw	0
 13149  017760  BE06               	btfsc	(btemp+5)^0,7,c
 13150  017762  0EFF               	movlw	255
 13151  017764  6E07               	movwf	(btemp+6)^0,c
 13152  017766  6E08               	movwf	(btemp+7)^0,c
 13153  017768  0060  F017  FFE6   	movff	btemp+4,postinc1
 13154  01776E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 13155  017774  0060  F01F  FFE6   	movff	btemp+6,postinc1
 13156  01777A  0060  F023  FFE6   	movff	btemp+7,postinc1
 13157  017780  ECF2  F0E9         	call	___aldiv	;wreg free
 13158  017784  0060  F004  F00B   	movff	btemp,btemp+10
 13159  01778A  0060  F008  F00C   	movff	btemp+1,btemp+11
 13160                           
 13161                           ;stkvar	_wday @ sp[(-22)+2]
 13162  017790  0EEC               	movlw	-20
 13163  017792  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13164  017798  0EED               	movlw	-19
 13165  01779A  0060  F033  FFE3   	movff	btemp+11,plusw1
 13166                           
 13167                           ;stkvar	_wday @ sp[(-22)+2]
 13168                           ;stkvar	_d @ sp[(-22)+20]
 13169  0177A0  0EFE               	movlw	-2
 13170  0177A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 13171  0177A8  0EFF               	movlw	-1
 13172  0177AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 13173  0177B0  0EEC               	movlw	-20
 13174  0177B2  50E3               	movf	plusw1,w,c
 13175  0177B4  5E0B               	subwf	(btemp+10)^0,f,c
 13176  0177B6  0EED               	movlw	-19
 13177  0177B8  50E3               	movf	plusw1,w,c
 13178  0177BA  5A0C               	subwfb	(btemp+11)^0,f,c
 13179                           
 13180                           ;stkvar	_days @ sp[(-22)+0]
 13181  0177BC  0EEA               	movlw	-22
 13182  0177BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13183  0177C4  0EEB               	movlw	-21
 13184  0177C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 13185                           
 13186                           ;stkvar	_days @ sp[(-22)+0]
 13187  0177CC  0EEB               	movlw	-21
 13188  0177CE  AEE3               	btfss	plusw1,7,c
 13189  0177D0  D011               	goto	l4004
 13190                           
 13191                           ;stkvar	_days @ sp[(-22)+0]
 13192  0177D2  0EEA               	movlw	-22
 13193  0177D4  50E3               	movf	plusw1,w,c
 13194  0177D6  0F07               	addlw	7
 13195  0177D8  6E01               	movwf	btemp^0,c
 13196  0177DA  0EEA               	movlw	-22
 13197  0177DC  0060  F007  FFE3   	movff	btemp,plusw1
 13198  0177E2  6A01               	clrf	btemp^0,c
 13199  0177E4  0EEB               	movlw	-21
 13200  0177E6  50E3               	movf	plusw1,w,c
 13201  0177E8  2001               	addwfc	btemp^0,w,c
 13202  0177EA  6E01               	movwf	btemp^0,c
 13203  0177EC  0EEB               	movlw	-21
 13204  0177EE  0060  F007  FFE3   	movff	btemp,plusw1
 13205  0177F4                     l4004:
 13206                           
 13207                           ;stkvar	_n @ sp[(-22)+14]
 13208  0177F4  0EF8               	movlw	-8
 13209  0177F6  006F FF8C  F001    	movff	plusw1,btemp
 13210  0177FC  0E05               	movlw	5
 13211  0177FE  1801               	xorwf	btemp^0,w,c
 13212  017800  E134               	bnz	l16225
 13213  017802  0EF9               	movlw	-7
 13214  017804  50E3               	movf	plusw1,w,c
 13215  017806  A4D8               	btfss	status,2,c
 13216  017808  D030               	goto	l16225
 13217                           
 13218                           ;stkvar	_is_leap @ sp[(-22)+12]
 13219  01780A  0EF6               	movlw	-10
 13220  01780C  006F FF8F FFE6     	movff	plusw1,postinc1
 13221  017812  006F FF8F FFE6     	movff	plusw1,postinc1
 13222                           
 13223                           ;stkvar	_m @ sp[(-24)+18]
 13224  017818  0EFA               	movlw	-6
 13225  01781A  006F FF8F FFE6     	movff	plusw1,postinc1
 13226  017820  006F FF8F FFE6     	movff	plusw1,postinc1
 13227  017826  EC8D  F006         	call	_days_in_month	;wreg free
 13228                           
 13229                           ;stkvar	_days @ sp[(-22)+0]
 13230  01782A  0EEA               	movlw	-22
 13231  01782C  50E3               	movf	plusw1,w,c
 13232  01782E  0F1C               	addlw	28
 13233  017830  6E0B               	movwf	(btemp+10)^0,c
 13234  017832  0EEB               	movlw	-21
 13235  017834  006F FF8C  F00C    	movff	plusw1,btemp+11
 13236  01783A  0E00               	movlw	0
 13237  01783C  220C               	addwfc	(btemp+11)^0,f,c
 13238  01783E  5001               	movf	btemp^0,w,c
 13239  017840  5C0B               	subwf	(btemp+10)^0,w,c
 13240  017842  500C               	movf	(btemp+11)^0,w,c
 13241  017844  0A80               	xorlw	128
 13242  017846  6E03               	movwf	(btemp+2)^0,c
 13243  017848  5002               	movf	(btemp+1)^0,w,c
 13244  01784A  0A80               	xorlw	128
 13245  01784C  5803               	subwfb	(btemp+2)^0,w,c
 13246  01784E  A0D8               	btfss	status,0,c
 13247  017850  D00C               	goto	l16225
 13248  017852  0E04               	movlw	4
 13249  017854  6E0B               	movwf	(btemp+10)^0,c
 13250  017856  0E00               	movlw	0
 13251  017858  6E0C               	movwf	(btemp+11)^0,c
 13252                           
 13253                           ;stkvar	_n @ sp[(-22)+14]
 13254  01785A  0EF8               	movlw	-8
 13255  01785C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13256  017862  0EF9               	movlw	-7
 13257  017864  0060  F033  FFE3   	movff	btemp+11,plusw1
 13258  01786A                     l16225:
 13259  01786A  0E80               	movlw	128
 13260  01786C  6EE6               	movwf	postinc1,c
 13261  01786E  0E51               	movlw	81
 13262  017870  6EE6               	movwf	postinc1,c
 13263  017872  0E01               	movlw	1
 13264  017874  6EE6               	movwf	postinc1,c
 13265  017876  0E00               	movlw	0
 13266  017878  6EE6               	movwf	postinc1,c
 13267                           
 13268                           ;stkvar	_days @ sp[(-26)+0]
 13269                           ;stkvar	_n @ sp[(-26)+14]
 13270  01787A  0EF4               	movlw	-12
 13271  01787C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13272  017882  0EF5               	movlw	-11
 13273  017884  006F FF8C  F00C    	movff	plusw1,btemp+11
 13274  01788A  0E07               	movlw	7
 13275  01788C  020B               	mulwf	(btemp+10)^0,c
 13276  01788E  006F FFCC  F009    	movff	prodl,btemp+8
 13277  017894  006F FFD0  F00A    	movff	prodh,btemp+9
 13278  01789A  020C               	mulwf	(btemp+11)^0,c
 13279  01789C  50F3               	movf	prodl,w,c
 13280  01789E  260A               	addwf	(btemp+9)^0,f,c
 13281  0178A0  0EE6               	movlw	-26
 13282  0178A2  50E3               	movf	plusw1,w,c
 13283  0178A4  2609               	addwf	(btemp+8)^0,f,c
 13284  0178A6  0EE7               	movlw	-25
 13285  0178A8  50E3               	movf	plusw1,w,c
 13286  0178AA  220A               	addwfc	(btemp+9)^0,f,c
 13287  0178AC  0EF9               	movlw	249
 13288  0178AE  2409               	addwf	(btemp+8)^0,w,c
 13289  0178B0  6E05               	movwf	(btemp+4)^0,c
 13290  0178B2  0EFF               	movlw	255
 13291  0178B4  200A               	addwfc	(btemp+9)^0,w,c
 13292  0178B6  6E06               	movwf	(btemp+5)^0,c
 13293  0178B8  6A07               	clrf	(btemp+6)^0,c
 13294  0178BA  BE06               	btfsc	(btemp+5)^0,7,c
 13295  0178BC  0607               	decf	(btemp+6)^0,f,c
 13296  0178BE  5007               	movf	(btemp+6)^0,w,c
 13297  0178C0  6E08               	movwf	(btemp+7)^0,c
 13298  0178C2  0060  F017  FFE6   	movff	btemp+4,postinc1
 13299  0178C8  0060  F01B  FFE6   	movff	btemp+5,postinc1
 13300  0178CE  0060  F01F  FFE6   	movff	btemp+6,postinc1
 13301  0178D4  0060  F023  FFE6   	movff	btemp+7,postinc1
 13302  0178DA  EC9F  F0FB         	call	___lmul	;wreg free
 13303  0178DE                     L9:
 13304  0178DE  0060  F004  F011   	movff	btemp,btemp+16
 13305  0178E4  0060  F008  F012   	movff	btemp+1,btemp+17
 13306  0178EA  0060  F00C  F013   	movff	btemp+2,btemp+18
 13307  0178F0  0060  F010  F014   	movff	btemp+3,btemp+19
 13308  0178F6  6A15               	clrf	(btemp+20)^0,c
 13309  0178F8  BE14               	btfsc	(btemp+19)^0,7,c
 13310  0178FA  6815               	setf	(btemp+20)^0,c
 13311  0178FC  0060  F054  F016   	movff	btemp+20,btemp+21
 13312  017902  0060  F054  F017   	movff	btemp+20,btemp+22
 13313  017908  0060  F054  F018   	movff	btemp+20,btemp+23
 13314                           
 13315                           ;stkvar	_t @ sp[(-22)+4]
 13316  01790E  50E1               	movf	fsr1l,w,c
 13317  017910  0FEE               	addlw	-18
 13318  017912  6ED9               	movwf	fsr2l,c
 13319  017914  50E2               	movf	fsr1h,w,c
 13320  017916  6EDA               	movwf	fsr2h,c
 13321  017918  0EFF               	movlw	255
 13322  01791A  22DA               	addwfc	fsr2h,f,c
 13323  01791C  5011               	movf	(btemp+16)^0,w,c
 13324  01791E  26DE               	addwf	postinc2,f,c
 13325  017920  5012               	movf	(btemp+17)^0,w,c
 13326  017922  22DE               	addwfc	postinc2,f,c
 13327  017924  5013               	movf	(btemp+18)^0,w,c
 13328  017926  22DE               	addwfc	postinc2,f,c
 13329  017928  5014               	movf	(btemp+19)^0,w,c
 13330  01792A  22DE               	addwfc	postinc2,f,c
 13331  01792C  5015               	movf	(btemp+20)^0,w,c
 13332  01792E  22DE               	addwfc	postinc2,f,c
 13333  017930  5016               	movf	(btemp+21)^0,w,c
 13334  017932  22DE               	addwfc	postinc2,f,c
 13335  017934  5017               	movf	(btemp+22)^0,w,c
 13336  017936  22DE               	addwfc	postinc2,f,c
 13337  017938  5018               	movf	(btemp+23)^0,w,c
 13338  01793A  22DE               	addwfc	postinc2,f,c
 13339                           
 13340                           ;stkvar	_rule @ sp[(-22)+-6]
 13341  01793C  0EE4               	movlw	-28
 13342  01793E  006F FF8C  F00B    	movff	plusw1,btemp+10
 13343  017944  0EE5               	movlw	-27
 13344  017946  006F FF8C  F00C    	movff	plusw1,btemp+11
 13345  01794C  0E08               	movlw	8
 13346  01794E  240B               	addwf	(btemp+10)^0,w,c
 13347  017950  6ED9               	movwf	fsr2l,c
 13348  017952  0E00               	movlw	0
 13349  017954  200C               	addwfc	(btemp+11)^0,w,c
 13350  017956  6EDA               	movwf	fsr2h,c
 13351  017958  006F FF78  F00B    	movff	postinc2,btemp+10
 13352  01795E  006F FF74  F00C    	movff	postdec2,btemp+11
 13353                           
 13354                           ;stkvar	_t @ sp[(-22)+4]
 13355  017964  50E1               	movf	fsr1l,w,c
 13356  017966  0FEE               	addlw	-18
 13357  017968  6ED9               	movwf	fsr2l,c
 13358  01796A  50E2               	movf	fsr1h,w,c
 13359  01796C  6EDA               	movwf	fsr2h,c
 13360  01796E  0EFF               	movlw	255
 13361  017970  22DA               	addwfc	fsr2h,f,c
 13362  017972  500B               	movf	(btemp+10)^0,w,c
 13363  017974  26DE               	addwf	postinc2,f,c
 13364  017976  500C               	movf	(btemp+11)^0,w,c
 13365  017978  22DE               	addwfc	postinc2,f,c
 13366  01797A  0E00               	movlw	0
 13367  01797C  BE0C               	btfsc	(btemp+11)^0,7,c
 13368  01797E  0EFF               	movlw	255
 13369  017980  22DE               	addwfc	postinc2,f,c
 13370  017982  22DE               	addwfc	postinc2,f,c
 13371  017984  22DE               	addwfc	postinc2,f,c
 13372  017986  22DE               	addwfc	postinc2,f,c
 13373  017988  22DE               	addwfc	postinc2,f,c
 13374  01798A  22DE               	addwfc	postinc2,f,c
 13375                           
 13376                           ;stkvar	_t @ sp[(-22)+4]
 13377  01798C  0EEE               	movlw	238
 13378  01798E  24E1               	addwf	fsr1l,w,c
 13379  017990  6ED9               	movwf	fsr2l,c
 13380  017992  0EFF               	movlw	255
 13381  017994  20E2               	addwfc	fsr1h,w,c
 13382  017996  6EDA               	movwf	fsr2h,c
 13383                           
 13384                           ;stkvar	?_rule_to_secs @ sp[(-22)+-8]
 13385  017998  0E08               	movlw	8
 13386  01799A  6E01               	movwf	btemp^0,c
 13387  01799C  0EE2               	movlw	-30
 13388  01799E                     us1585999:
 13389  01799E  006F FF7B FFE3     	movff	postinc2,plusw1
 13390  0179A4  28E8               	incf	wreg,w,c
 13391  0179A6  2E01               	decfsz	btemp^0,f,c
 13392  0179A8  D7FA               	bra	us1585999
 13393                           
 13394                           ; _rule_to_secs: autosize = 22, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8,
      +                           argsize = 8, vargsize = 0
 13395  0179AA  0EEA               	movlw	234
 13396  0179AC  26E1               	addwf	fsr1l,f,c
 13397  0179AE  0EFF               	movlw	255
 13398  0179B0  22E2               	addwfc	fsr1h,f,c
 13399  0179B2  0012               	return		;funcret
 13400  0179B4                     __end_of_rule_to_secs:
 13401                           	opt callstack 0
 13402                           
 13403 ;; *************** function _days_in_month *****************
 13404 ;; Defined at:
 13405 ;;		line 210 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 13406 ;; Parameters:    Size  Location     Type
 13407 ;;  m               2  [STACK] int 
 13408 ;;  is_leap         2  [STACK] int 
 13409 ;; Auto vars:     Size  Location     Type
 13410 ;;		None
 13411 ;; Return value:  Size  Location     Type
 13412 ;;                  2  [STACK] int 
 13413 ;; Registers used:
 13414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13415 ;; Tracked objects:
 13416 ;;		On entry : 0/0
 13417 ;;		On exit  : 0/0
 13418 ;;		Unchanged: 0/0
 13419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13424 ;;Total ram usage:        0 bytes
 13425 ;; Hardware stack levels used:    1
 13426 ;; Hardware stack levels required when called:   15
 13427 ;; This function calls:
 13428 ;;		Nothing
 13429 ;; This function is called by:
 13430 ;;		_rule_to_secs
 13431 ;; This function uses a reentrant model
 13432 ;;
 13433                           
 13434                           	psect	text39
 13435  000D1A                     __ptext39:
 13436                           	opt callstack 0
 13437  000D1A                     _days_in_month:
 13438                           	opt callstack 10
 13439                           
 13440                           ;stkvar	_m @ sp[(0)+-2]
 13441                           
 13442                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13443                           ;incstack = 0
 13444  000D1A  0EFE               	movlw	-2
 13445  000D1C  006F FF8C  F001    	movff	plusw1,btemp
 13446  000D22  0E02               	movlw	2
 13447  000D24  1801               	xorwf	btemp^0,w,c
 13448  000D26  E10D               	bnz	l11575
 13449  000D28  0EFF               	movlw	-1
 13450  000D2A  50E3               	movf	plusw1,w,c
 13451  000D2C  A4D8               	btfss	status,2,c
 13452  000D2E  D009               	goto	l11575
 13453                           
 13454                           ;stkvar	_is_leap @ sp[(0)+-4]
 13455  000D30  0EFC               	movlw	-4
 13456  000D32  50E3               	movf	plusw1,w,c
 13457  000D34  0F1C               	addlw	28
 13458  000D36  6E01               	movwf	btemp^0,c
 13459  000D38  0EFD               	movlw	-3
 13460  000D3A  006F FF8C  F002    	movff	plusw1,btemp+1
 13461  000D40  D017               	goto	L10
 13462  000D42                     l11575:
 13463  000D42  0EFF               	movlw	255
 13464  000D44  6E0C               	movwf	(btemp+11)^0,c
 13465                           
 13466                           ;stkvar	_m @ sp[(0)+-2]
 13467  000D46  0EFE               	movlw	-2
 13468  000D48  50E3               	movf	plusw1,w,c
 13469  000D4A  240C               	addwf	(btemp+11)^0,w,c
 13470  000D4C  6E0B               	movwf	(btemp+10)^0,c
 13471  000D4E  0ED5               	movlw	213
 13472  000D50  6E01               	movwf	btemp^0,c
 13473  000D52  0E0A               	movlw	10
 13474  000D54  6E02               	movwf	(btemp+1)^0,c
 13475  000D56  2A0B               	incf	(btemp+10)^0,f,c
 13476  000D58  D003               	goto	u10664
 13477  000D5A                     u10665:
 13478  000D5A  3402               	rlcf	(btemp+1)^0,w,c
 13479  000D5C  3202               	rrcf	(btemp+1)^0,f,c
 13480  000D5E  3201               	rrcf	btemp^0,f,c
 13481  000D60                     u10664:
 13482  000D60  2E0B               	decfsz	(btemp+10)^0,f,c
 13483  000D62  D7FB               	goto	u10665
 13484  000D64  0E01               	movlw	1
 13485  000D66  1601               	andwf	btemp^0,f,c
 13486  000D68  0E00               	movlw	0
 13487  000D6A  1602               	andwf	(btemp+1)^0,f,c
 13488  000D6C  0E1E               	movlw	30
 13489  000D6E  2601               	addwf	btemp^0,f,c
 13490  000D70                     L10:
 13491  000D70  0E00               	movlw	0
 13492  000D72  2202               	addwfc	(btemp+1)^0,f,c
 13493                           
 13494                           ; _days_in_month: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 13495  000D74  52E5               	movf	postdec1,f,c
 13496  000D76  52E5               	movf	postdec1,f,c
 13497  000D78  52E5               	movf	postdec1,f,c
 13498  000D7A  52E5               	movf	postdec1,f,c
 13499  000D7C  0012               	return		;funcret
 13500  000D7E                     __end_of_days_in_month:
 13501                           	opt callstack 0
 13502                           
 13503 ;; *************** function ___year_to_secs *****************
 13504 ;; Defined at:
 13505 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__year_to_secs.c"
 13506 ;; Parameters:    Size  Location     Type
 13507 ;;  year            8  [STACK] long long 
 13508 ;;  is_leap         2  [STACK] PTR int 
 13509 ;;		 -> F5(2), is_leap(2), NULL(0), 
 13510 ;; Auto vars:     Size  Location     Type
 13511 ;;  y               2  [STACK] int 
 13512 ;;  leaps           2  [STACK] int 
 13513 ;;  rem             2  [STACK] int 
 13514 ;;  5               2  [STACK] int 
 13515 ;;  centuries       2  [STACK] int 
 13516 ;;  leaps           2  [STACK] int 
 13517 ;;  cycles          2  [STACK] int 
 13518 ;; Return value:  Size  Location     Type
 13519 ;;                  8  [STACK] long long 
 13520 ;; Registers used:
 13521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btem
      +p+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btem
      +p+31, prodl, prodh
 13522 ;; Tracked objects:
 13523 ;;		On entry : 0/0
 13524 ;;		On exit  : 0/0
 13525 ;;		Unchanged: 0/0
 13526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13531 ;;Total ram usage:        0 bytes
 13532 ;; Hardware stack levels used:    1
 13533 ;; Hardware stack levels required when called:   16
 13534 ;; This function calls:
 13535 ;;		___aodiv
 13536 ;;		___aomod
 13537 ;;		___lmul
 13538 ;;		___omul
 13539 ;; This function is called by:
 13540 ;;		_rule_to_secs
 13541 ;;		___secs_to_zone
 13542 ;; This function uses a reentrant model
 13543 ;;
 13544                           
 13545                           	psect	text40
 13546  0150FE                     __ptext40:
 13547                           	opt callstack 0
 13548  0150FE                     ___year_to_secs:
 13549                           	opt callstack 0
 13550                           
 13551                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 13552  0150FE  0E0E               	movlw	14
 13553  015100  26E1               	addwf	fsr1l,f,c
 13554  015102  0E00               	movlw	0
 13555  015104  22E2               	addwfc	fsr1h,f,c
 13556                           
 13557                           ;stkvar	_year @ sp[(-14)+-8]
 13558                           
 13559                           ;incstack = 0
 13560  015106  0EEA               	movlw	-22
 13561  015108  50E3               	movf	plusw1,w,c
 13562  01510A  0FFE               	addlw	254
 13563  01510C  6E11               	movwf	(btemp+16)^0,c
 13564  01510E  0EEB               	movlw	-21
 13565  015110  006F FF8C  F012    	movff	plusw1,btemp+17
 13566  015116  0EFF               	movlw	255
 13567  015118  2212               	addwfc	(btemp+17)^0,f,c
 13568  01511A  0EEC               	movlw	-20
 13569  01511C  006F FF8C  F013    	movff	plusw1,btemp+18
 13570  015122  0EFF               	movlw	255
 13571  015124  2213               	addwfc	(btemp+18)^0,f,c
 13572  015126  0EED               	movlw	-19
 13573  015128  006F FF8C  F014    	movff	plusw1,btemp+19
 13574  01512E  0EFF               	movlw	255
 13575  015130  2214               	addwfc	(btemp+19)^0,f,c
 13576  015132  0EEE               	movlw	-18
 13577  015134  006F FF8C  F015    	movff	plusw1,btemp+20
 13578  01513A  0EFF               	movlw	255
 13579  01513C  2215               	addwfc	(btemp+20)^0,f,c
 13580  01513E  0EEF               	movlw	-17
 13581  015140  006F FF8C  F016    	movff	plusw1,btemp+21
 13582  015146  0EFF               	movlw	255
 13583  015148  2216               	addwfc	(btemp+21)^0,f,c
 13584  01514A  0EF0               	movlw	-16
 13585  01514C  006F FF8C  F017    	movff	plusw1,btemp+22
 13586  015152  0EFF               	movlw	255
 13587  015154  2217               	addwfc	(btemp+22)^0,f,c
 13588  015156  0EF1               	movlw	-15
 13589  015158  006F FF8C  F018    	movff	plusw1,btemp+23
 13590  01515E  0EFF               	movlw	255
 13591  015160  2218               	addwfc	(btemp+23)^0,f,c
 13592  015162  5018               	movf	(btemp+23)^0,w,c
 13593  015164  1017               	iorwf	(btemp+22)^0,w,c
 13594  015166  1016               	iorwf	(btemp+21)^0,w,c
 13595  015168  1015               	iorwf	(btemp+20)^0,w,c
 13596  01516A  1014               	iorwf	(btemp+19)^0,w,c
 13597  01516C  1013               	iorwf	(btemp+18)^0,w,c
 13598  01516E  1012               	iorwf	(btemp+17)^0,w,c
 13599  015170  E103               	bnz	u10671
 13600  015172  0E89               	movlw	137
 13601  015174  5C11               	subwf	(btemp+16)^0,w,c
 13602  015176  B0D8               	btfsc	status,0,c
 13603  015178                     u10671:
 13604  015178  D0E7               	goto	l11601
 13605                           
 13606                           ;stkvar	_year @ sp[(-14)+-8]
 13607                           ;stkvar	_y @ sp[(-14)+0]
 13608  01517A  0EEA               	movlw	-22
 13609  01517C  006F FF8C  F001    	movff	plusw1,btemp
 13610  015182  0EF2               	movlw	-14
 13611  015184  0060  F007  FFE3   	movff	btemp,plusw1
 13612  01518A  0EEB               	movlw	-21
 13613  01518C  006F FF8C  F001    	movff	plusw1,btemp
 13614  015192  0EF3               	movlw	-13
 13615  015194  0060  F007  FFE3   	movff	btemp,plusw1
 13616                           
 13617                           ;stkvar	_y @ sp[(-14)+0]
 13618  01519A  0EF2               	movlw	-14
 13619  01519C  50E3               	movf	plusw1,w,c
 13620  01519E  0FBC               	addlw	188
 13621  0151A0  6E0B               	movwf	(btemp+10)^0,c
 13622  0151A2  0EF3               	movlw	-13
 13623  0151A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13624  0151AA  0EFF               	movlw	255
 13625  0151AC  220C               	addwfc	(btemp+11)^0,f,c
 13626  0151AE  340C               	rlcf	(btemp+11)^0,w,c
 13627  0151B0  320C               	rrcf	(btemp+11)^0,f,c
 13628  0151B2  320B               	rrcf	(btemp+10)^0,f,c
 13629  0151B4  340C               	rlcf	(btemp+11)^0,w,c
 13630  0151B6  320C               	rrcf	(btemp+11)^0,f,c
 13631  0151B8  320B               	rrcf	(btemp+10)^0,f,c
 13632                           
 13633                           ;stkvar	_leaps @ sp[(-14)+2]
 13634  0151BA  0EF4               	movlw	-12
 13635  0151BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13636  0151C2  0EF5               	movlw	-11
 13637  0151C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13638  0151CA  0EBC               	movlw	188
 13639  0151CC  6E0C               	movwf	(btemp+11)^0,c
 13640                           
 13641                           ;stkvar	_y @ sp[(-14)+0]
 13642  0151CE  0EF2               	movlw	-14
 13643  0151D0  50E3               	movf	plusw1,w,c
 13644  0151D2  240C               	addwf	(btemp+11)^0,w,c
 13645  0151D4  6E0B               	movwf	(btemp+10)^0,c
 13646  0151D6  0E03               	movlw	3
 13647  0151D8  160B               	andwf	(btemp+10)^0,f,c
 13648  0151DA  A4D8               	btfss	status,2,c
 13649  0151DC  D01D               	goto	l11593
 13650                           
 13651                           ;stkvar	_leaps @ sp[(-14)+2]
 13652  0151DE  50E1               	movf	fsr1l,w,c
 13653  0151E0  0FF4               	addlw	-12
 13654  0151E2  6ED9               	movwf	fsr2l,c
 13655  0151E4  50E2               	movf	fsr1h,w,c
 13656  0151E6  6EDA               	movwf	fsr2h,c
 13657  0151E8  0EFF               	movlw	255
 13658  0151EA  22DA               	addwfc	fsr2h,f,c
 13659  0151EC  06DE               	decf	postinc2,f,c
 13660  0151EE  0E00               	movlw	0
 13661  0151F0  5ADD               	subwfb	postdec2,f,c
 13662                           
 13663                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13664  0151F2  0EE8               	movlw	-24
 13665  0151F4  006F FF8C  F001    	movff	plusw1,btemp
 13666  0151FA  0EE9               	movlw	-23
 13667  0151FC  50E3               	movf	plusw1,w,c
 13668  0151FE  1001               	iorwf	btemp^0,w,c
 13669  015200  B4D8               	btfsc	status,2,c
 13670  015202  D01F               	goto	l11597
 13671                           
 13672                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13673  015204  0EE8               	movlw	-24
 13674  015206  006F FF8F FFD9     	movff	plusw1,fsr2l
 13675  01520C  0EE9               	movlw	-23
 13676  01520E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13677  015214  0E01               	movlw	1
 13678  015216  D012               	goto	L11
 13679  015218                     l11593:
 13680                           
 13681                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13682  015218  0EE8               	movlw	-24
 13683  01521A  006F FF8C  F001    	movff	plusw1,btemp
 13684  015220  0EE9               	movlw	-23
 13685  015222  50E3               	movf	plusw1,w,c
 13686  015224  1001               	iorwf	btemp^0,w,c
 13687  015226  B4D8               	btfsc	status,2,c
 13688  015228  D00C               	goto	l11597
 13689                           
 13690                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13691  01522A  0EE8               	movlw	-24
 13692  01522C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13693  015232  0EE9               	movlw	-23
 13694  015234  006F FF8F FFDA     	movff	plusw1,fsr2h
 13695  01523A  0E00               	movlw	0
 13696  01523C                     L11:
 13697  01523C  6EDE               	movwf	postinc2,c
 13698  01523E  0E00               	movlw	0
 13699  015240  6EDD               	movwf	postdec2,c
 13700  015242                     l11597:
 13701  015242  0E80               	movlw	128
 13702  015244  6EE6               	movwf	postinc1,c
 13703  015246  0E33               	movlw	51
 13704  015248  6EE6               	movwf	postinc1,c
 13705  01524A  0EE1               	movlw	225
 13706  01524C  6EE6               	movwf	postinc1,c
 13707  01524E  0E01               	movlw	1
 13708  015250  6EE6               	movwf	postinc1,c
 13709                           
 13710                           ;stkvar	_y @ sp[(-18)+0]
 13711  015252  0EEE               	movlw	-18
 13712  015254  006F FF8C  F00B    	movff	plusw1,btemp+10
 13713  01525A  0EEF               	movlw	-17
 13714  01525C  006F FF8C  F00C    	movff	plusw1,btemp+11
 13715  015262  0EBA               	movlw	186
 13716  015264  240B               	addwf	(btemp+10)^0,w,c
 13717  015266  6E05               	movwf	(btemp+4)^0,c
 13718  015268  0EFF               	movlw	255
 13719  01526A  200C               	addwfc	(btemp+11)^0,w,c
 13720  01526C  6E06               	movwf	(btemp+5)^0,c
 13721  01526E  6A07               	clrf	(btemp+6)^0,c
 13722  015270  BE06               	btfsc	(btemp+5)^0,7,c
 13723  015272  0607               	decf	(btemp+6)^0,f,c
 13724  015274  5007               	movf	(btemp+6)^0,w,c
 13725  015276  6E08               	movwf	(btemp+7)^0,c
 13726  015278  0060  F017  FFE6   	movff	btemp+4,postinc1
 13727  01527E  0060  F01B  FFE6   	movff	btemp+5,postinc1
 13728  015284  0060  F01F  FFE6   	movff	btemp+6,postinc1
 13729  01528A  0060  F023  FFE6   	movff	btemp+7,postinc1
 13730  015290  EC9F  F0FB         	call	___lmul	;wreg free
 13731  015294  0060  F004  F009   	movff	btemp,btemp+8
 13732  01529A  0060  F008  F00A   	movff	btemp+1,btemp+9
 13733  0152A0  0060  F00C  F00B   	movff	btemp+2,btemp+10
 13734  0152A6  0060  F010  F00C   	movff	btemp+3,btemp+11
 13735  0152AC  0E80               	movlw	128
 13736  0152AE  6EE6               	movwf	postinc1,c
 13737  0152B0  0E51               	movlw	81
 13738  0152B2  6EE6               	movwf	postinc1,c
 13739  0152B4  0E01               	movlw	1
 13740  0152B6  6EE6               	movwf	postinc1,c
 13741  0152B8  0E00               	movlw	0
 13742  0152BA  6EE6               	movwf	postinc1,c
 13743                           
 13744                           ;stkvar	_leaps @ sp[(-18)+2]
 13745  0152BC  0EF0               	movlw	-16
 13746  0152BE  006F FF8C  F007    	movff	plusw1,btemp+6
 13747  0152C4  0EF1               	movlw	-15
 13748  0152C6  006F FF8C  F008    	movff	plusw1,btemp+7
 13749  0152CC  0060  F01C  F001   	movff	btemp+6,btemp
 13750  0152D2  0060  F020  F002   	movff	btemp+7,btemp+1
 13751  0152D8  0E00               	movlw	0
 13752  0152DA  BE02               	btfsc	(btemp+1)^0,7,c
 13753  0152DC  0EFF               	movlw	255
 13754  0152DE  6E03               	movwf	(btemp+2)^0,c
 13755  0152E0  6E04               	movwf	(btemp+3)^0,c
 13756  0152E2  0060  F007  FFE6   	movff	btemp,postinc1
 13757  0152E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13758  0152EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13759  0152F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 13760  0152FA  EC9F  F0FB         	call	___lmul	;wreg free
 13761  0152FE  5001               	movf	btemp^0,w,c
 13762  015300  2409               	addwf	(btemp+8)^0,w,c
 13763  015302  6E05               	movwf	(btemp+4)^0,c
 13764  015304  5002               	movf	(btemp+1)^0,w,c
 13765  015306  200A               	addwfc	(btemp+9)^0,w,c
 13766  015308  6E06               	movwf	(btemp+5)^0,c
 13767  01530A  5003               	movf	(btemp+2)^0,w,c
 13768  01530C  200B               	addwfc	(btemp+10)^0,w,c
 13769  01530E  6E07               	movwf	(btemp+6)^0,c
 13770  015310  5004               	movf	(btemp+3)^0,w,c
 13771  015312  200C               	addwfc	(btemp+11)^0,w,c
 13772  015314  6E08               	movwf	(btemp+7)^0,c
 13773  015316  0060  F014  F011   	movff	btemp+4,btemp+16
 13774  01531C  0060  F018  F012   	movff	btemp+5,btemp+17
 13775  015322  0060  F01C  F013   	movff	btemp+6,btemp+18
 13776  015328  0060  F020  F014   	movff	btemp+7,btemp+19
 13777  01532E  6A15               	clrf	(btemp+20)^0,c
 13778  015330  BE14               	btfsc	(btemp+19)^0,7,c
 13779  015332  6815               	setf	(btemp+20)^0,c
 13780  015334  0060  F054  F016   	movff	btemp+20,btemp+21
 13781  01533A  0060  F054  F017   	movff	btemp+20,btemp+22
 13782  015340  0060  F054  F018   	movff	btemp+20,btemp+23
 13783  015346  D36F               	goto	L12
 13784  015348                     l11601:
 13785                           
 13786                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13787  015348  0EE8               	movlw	-24
 13788  01534A  006F FF8C  F001    	movff	plusw1,btemp
 13789  015350  0EE9               	movlw	-23
 13790  015352  50E3               	movf	plusw1,w,c
 13791  015354  1001               	iorwf	btemp^0,w,c
 13792  015356  A4D8               	btfss	status,2,c
 13793  015358  D012               	goto	l11607
 13794                           
 13795                           ;stkvar	F5 @ sp[(-14)+6]
 13796  01535A  0EF8               	movlw	-8
 13797  01535C  6AE3               	clrf	plusw1,c
 13798  01535E  0EF9               	movlw	-7
 13799  015360  6AE3               	clrf	plusw1,c
 13800                           
 13801                           ;stkvar	F5 @ sp[(-14)+6]
 13802  015362  0EF8               	movlw	248
 13803  015364  24E1               	addwf	fsr1l,w,c
 13804  015366  6E0B               	movwf	(btemp+10)^0,c
 13805  015368  0EFF               	movlw	255
 13806  01536A  20E2               	addwfc	fsr1h,w,c
 13807  01536C  6E0C               	movwf	(btemp+11)^0,c
 13808                           
 13809                           ;stkvar	_is_leap @ sp[(-14)+-10]
 13810  01536E  0EE9               	movlw	-23
 13811  015370  0060  F033  FFE3   	movff	btemp+11,plusw1
 13812  015376  0EE8               	movlw	-24
 13813  015378  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13814  01537E                     l11607:
 13815  01537E  0E90               	movlw	144
 13816  015380  6EE6               	movwf	postinc1,c
 13817  015382  0E01               	movlw	1
 13818  015384  6EE6               	movwf	postinc1,c
 13819  015386  0E00               	movlw	0
 13820  015388  6EE6               	movwf	postinc1,c
 13821  01538A  0E00               	movlw	0
 13822  01538C  6EE6               	movwf	postinc1,c
 13823  01538E  0E00               	movlw	0
 13824  015390  6EE6               	movwf	postinc1,c
 13825  015392  0E00               	movlw	0
 13826  015394  6EE6               	movwf	postinc1,c
 13827  015396  0E00               	movlw	0
 13828  015398  6EE6               	movwf	postinc1,c
 13829  01539A  0E00               	movlw	0
 13830  01539C  6EE6               	movwf	postinc1,c
 13831                           
 13832                           ;stkvar	_year @ sp[(-22)+-8]
 13833  01539E  0EE2               	movlw	-30
 13834  0153A0  50E3               	movf	plusw1,w,c
 13835  0153A2  0F9C               	addlw	156
 13836  0153A4  6E11               	movwf	(btemp+16)^0,c
 13837  0153A6  0EE3               	movlw	-29
 13838  0153A8  006F FF8C  F012    	movff	plusw1,btemp+17
 13839  0153AE  0EFF               	movlw	255
 13840  0153B0  2212               	addwfc	(btemp+17)^0,f,c
 13841  0153B2  0EE4               	movlw	-28
 13842  0153B4  006F FF8C  F013    	movff	plusw1,btemp+18
 13843  0153BA  0EFF               	movlw	255
 13844  0153BC  2213               	addwfc	(btemp+18)^0,f,c
 13845  0153BE  0EE5               	movlw	-27
 13846  0153C0  006F FF8C  F014    	movff	plusw1,btemp+19
 13847  0153C6  0EFF               	movlw	255
 13848  0153C8  2214               	addwfc	(btemp+19)^0,f,c
 13849  0153CA  0EE6               	movlw	-26
 13850  0153CC  006F FF8C  F015    	movff	plusw1,btemp+20
 13851  0153D2  0EFF               	movlw	255
 13852  0153D4  2215               	addwfc	(btemp+20)^0,f,c
 13853  0153D6  0EE7               	movlw	-25
 13854  0153D8  006F FF8C  F016    	movff	plusw1,btemp+21
 13855  0153DE  0EFF               	movlw	255
 13856  0153E0  2216               	addwfc	(btemp+21)^0,f,c
 13857  0153E2  0EE8               	movlw	-24
 13858  0153E4  006F FF8C  F017    	movff	plusw1,btemp+22
 13859  0153EA  0EFF               	movlw	255
 13860  0153EC  2217               	addwfc	(btemp+22)^0,f,c
 13861  0153EE  0EE9               	movlw	-23
 13862  0153F0  006F FF8C  F018    	movff	plusw1,btemp+23
 13863  0153F6  0EFF               	movlw	255
 13864  0153F8  2218               	addwfc	(btemp+23)^0,f,c
 13865  0153FA  0060  F047  FFE6   	movff	btemp+16,postinc1
 13866  015400  0060  F04B  FFE6   	movff	btemp+17,postinc1
 13867  015406  0060  F04F  FFE6   	movff	btemp+18,postinc1
 13868  01540C  0060  F053  FFE6   	movff	btemp+19,postinc1
 13869  015412  0060  F057  FFE6   	movff	btemp+20,postinc1
 13870  015418  0060  F05B  FFE6   	movff	btemp+21,postinc1
 13871  01541E  0060  F05F  FFE6   	movff	btemp+22,postinc1
 13872  015424  0060  F063  FFE6   	movff	btemp+23,postinc1
 13873  01542A  EC41  F0DA         	call	___aodiv	;wreg free
 13874  01542E  52E5               	movf	postdec1,f,c
 13875  015430  006F FF9C  F018    	movff	indf1,btemp+23
 13876  015436  52E5               	movf	postdec1,f,c
 13877  015438  006F FF9C  F017    	movff	indf1,btemp+22
 13878  01543E  52E5               	movf	postdec1,f,c
 13879  015440  006F FF9C  F016    	movff	indf1,btemp+21
 13880  015446  52E5               	movf	postdec1,f,c
 13881  015448  006F FF9C  F015    	movff	indf1,btemp+20
 13882  01544E  52E5               	movf	postdec1,f,c
 13883  015450  006F FF9C  F014    	movff	indf1,btemp+19
 13884  015456  52E5               	movf	postdec1,f,c
 13885  015458  006F FF9C  F013    	movff	indf1,btemp+18
 13886  01545E  52E5               	movf	postdec1,f,c
 13887  015460  006F FF9C  F012    	movff	indf1,btemp+17
 13888  015466  52E5               	movf	postdec1,f,c
 13889  015468  006F FF9C  F011    	movff	indf1,btemp+16
 13890  01546E  0EF8               	movlw	248
 13891  015470  26E1               	addwf	fsr1l,f,c
 13892  015472  0EFF               	movlw	255
 13893  015474  22E2               	addwfc	fsr1h,f,c
 13894  015476  0060  F044  F00B   	movff	btemp+16,btemp+10
 13895  01547C  0060  F048  F00C   	movff	btemp+17,btemp+11
 13896                           
 13897                           ;stkvar	_cycles @ sp[(-14)+12]
 13898  015482  0EFE               	movlw	-2
 13899  015484  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13900  01548A  0EFF               	movlw	-1
 13901  01548C  0060  F033  FFE3   	movff	btemp+11,plusw1
 13902  015492  0E90               	movlw	144
 13903  015494  6EE6               	movwf	postinc1,c
 13904  015496  0E01               	movlw	1
 13905  015498  6EE6               	movwf	postinc1,c
 13906  01549A  0E00               	movlw	0
 13907  01549C  6EE6               	movwf	postinc1,c
 13908  01549E  0E00               	movlw	0
 13909  0154A0  6EE6               	movwf	postinc1,c
 13910  0154A2  0E00               	movlw	0
 13911  0154A4  6EE6               	movwf	postinc1,c
 13912  0154A6  0E00               	movlw	0
 13913  0154A8  6EE6               	movwf	postinc1,c
 13914  0154AA  0E00               	movlw	0
 13915  0154AC  6EE6               	movwf	postinc1,c
 13916  0154AE  0E00               	movlw	0
 13917  0154B0  6EE6               	movwf	postinc1,c
 13918                           
 13919                           ;stkvar	_year @ sp[(-22)+-8]
 13920  0154B2  0EE2               	movlw	-30
 13921  0154B4  50E3               	movf	plusw1,w,c
 13922  0154B6  0F9C               	addlw	156
 13923  0154B8  6E11               	movwf	(btemp+16)^0,c
 13924  0154BA  0EE3               	movlw	-29
 13925  0154BC  006F FF8C  F012    	movff	plusw1,btemp+17
 13926  0154C2  0EFF               	movlw	255
 13927  0154C4  2212               	addwfc	(btemp+17)^0,f,c
 13928  0154C6  0EE4               	movlw	-28
 13929  0154C8  006F FF8C  F013    	movff	plusw1,btemp+18
 13930  0154CE  0EFF               	movlw	255
 13931  0154D0  2213               	addwfc	(btemp+18)^0,f,c
 13932  0154D2  0EE5               	movlw	-27
 13933  0154D4  006F FF8C  F014    	movff	plusw1,btemp+19
 13934  0154DA  0EFF               	movlw	255
 13935  0154DC  2214               	addwfc	(btemp+19)^0,f,c
 13936  0154DE  0EE6               	movlw	-26
 13937  0154E0  006F FF8C  F015    	movff	plusw1,btemp+20
 13938  0154E6  0EFF               	movlw	255
 13939  0154E8  2215               	addwfc	(btemp+20)^0,f,c
 13940  0154EA  0EE7               	movlw	-25
 13941  0154EC  006F FF8C  F016    	movff	plusw1,btemp+21
 13942  0154F2  0EFF               	movlw	255
 13943  0154F4  2216               	addwfc	(btemp+21)^0,f,c
 13944  0154F6  0EE8               	movlw	-24
 13945  0154F8  006F FF8C  F017    	movff	plusw1,btemp+22
 13946  0154FE  0EFF               	movlw	255
 13947  015500  2217               	addwfc	(btemp+22)^0,f,c
 13948  015502  0EE9               	movlw	-23
 13949  015504  006F FF8C  F018    	movff	plusw1,btemp+23
 13950  01550A  0EFF               	movlw	255
 13951  01550C  2218               	addwfc	(btemp+23)^0,f,c
 13952  01550E  0060  F047  FFE6   	movff	btemp+16,postinc1
 13953  015514  0060  F04B  FFE6   	movff	btemp+17,postinc1
 13954  01551A  0060  F04F  FFE6   	movff	btemp+18,postinc1
 13955  015520  0060  F053  FFE6   	movff	btemp+19,postinc1
 13956  015526  0060  F057  FFE6   	movff	btemp+20,postinc1
 13957  01552C  0060  F05B  FFE6   	movff	btemp+21,postinc1
 13958  015532  0060  F05F  FFE6   	movff	btemp+22,postinc1
 13959  015538  0060  F063  FFE6   	movff	btemp+23,postinc1
 13960  01553E  EC11  F0DF         	call	___aomod	;wreg free
 13961  015542  52E5               	movf	postdec1,f,c
 13962  015544  006F FF9C  F018    	movff	indf1,btemp+23
 13963  01554A  52E5               	movf	postdec1,f,c
 13964  01554C  006F FF9C  F017    	movff	indf1,btemp+22
 13965  015552  52E5               	movf	postdec1,f,c
 13966  015554  006F FF9C  F016    	movff	indf1,btemp+21
 13967  01555A  52E5               	movf	postdec1,f,c
 13968  01555C  006F FF9C  F015    	movff	indf1,btemp+20
 13969  015562  52E5               	movf	postdec1,f,c
 13970  015564  006F FF9C  F014    	movff	indf1,btemp+19
 13971  01556A  52E5               	movf	postdec1,f,c
 13972  01556C  006F FF9C  F013    	movff	indf1,btemp+18
 13973  015572  52E5               	movf	postdec1,f,c
 13974  015574  006F FF9C  F012    	movff	indf1,btemp+17
 13975  01557A  52E5               	movf	postdec1,f,c
 13976  01557C  006F FF9C  F011    	movff	indf1,btemp+16
 13977  015582  0EF8               	movlw	248
 13978  015584  26E1               	addwf	fsr1l,f,c
 13979  015586  0EFF               	movlw	255
 13980  015588  22E2               	addwfc	fsr1h,f,c
 13981  01558A  0060  F044  F00B   	movff	btemp+16,btemp+10
 13982  015590  0060  F048  F00C   	movff	btemp+17,btemp+11
 13983                           
 13984                           ;stkvar	_rem @ sp[(-14)+4]
 13985  015596  0EF6               	movlw	-10
 13986  015598  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13987  01559E  0EF7               	movlw	-9
 13988  0155A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 13989                           
 13990                           ;stkvar	_rem @ sp[(-14)+4]
 13991  0155A6  0EF7               	movlw	-9
 13992  0155A8  AEE3               	btfss	plusw1,7,c
 13993  0155AA  D015               	goto	l11617
 13994                           
 13995                           ;stkvar	_cycles @ sp[(-14)+12]
 13996  0155AC  50E1               	movf	fsr1l,w,c
 13997  0155AE  0FFE               	addlw	-2
 13998  0155B0  6ED9               	movwf	fsr2l,c
 13999  0155B2  50E2               	movf	fsr1h,w,c
 14000  0155B4  6EDA               	movwf	fsr2h,c
 14001  0155B6  0EFF               	movlw	255
 14002  0155B8  22DA               	addwfc	fsr2h,f,c
 14003  0155BA  06DE               	decf	postinc2,f,c
 14004  0155BC  0E00               	movlw	0
 14005  0155BE  5ADD               	subwfb	postdec2,f,c
 14006                           
 14007                           ;stkvar	_rem @ sp[(-14)+4]
 14008  0155C0  50E1               	movf	fsr1l,w,c
 14009  0155C2  0FF6               	addlw	-10
 14010  0155C4  6ED9               	movwf	fsr2l,c
 14011  0155C6  50E2               	movf	fsr1h,w,c
 14012  0155C8  6EDA               	movwf	fsr2h,c
 14013  0155CA  0EFF               	movlw	255
 14014  0155CC  22DA               	addwfc	fsr2h,f,c
 14015  0155CE  0E90               	movlw	144
 14016  0155D0  26DE               	addwf	postinc2,f,c
 14017  0155D2  0E01               	movlw	1
 14018  0155D4  22DD               	addwfc	postdec2,f,c
 14019  0155D6                     l11617:
 14020                           
 14021                           ;stkvar	_rem @ sp[(-14)+4]
 14022  0155D6  0EF6               	movlw	-10
 14023  0155D8  006F FF8C  F001    	movff	plusw1,btemp
 14024  0155DE  0EF7               	movlw	-9
 14025  0155E0  50E3               	movf	plusw1,w,c
 14026  0155E2  1001               	iorwf	btemp^0,w,c
 14027  0155E4  A4D8               	btfss	status,2,c
 14028  0155E6  D015               	goto	l11625
 14029                           
 14030                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14031  0155E8  0EE8               	movlw	-24
 14032  0155EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 14033  0155F0  0EE9               	movlw	-23
 14034  0155F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 14035  0155F8  0E01               	movlw	1
 14036  0155FA  6EDE               	movwf	postinc2,c
 14037  0155FC  0E00               	movlw	0
 14038  0155FE  6EDD               	movwf	postdec2,c
 14039                           
 14040                           ;stkvar	_centuries @ sp[(-14)+8]
 14041  015600  0EFA               	movlw	-6
 14042  015602  6AE3               	clrf	plusw1,c
 14043  015604  0EFB               	movlw	-5
 14044  015606  6AE3               	clrf	plusw1,c
 14045  015608                     l11623:
 14046                           
 14047                           ;stkvar	_leaps @ sp[(-14)+10]
 14048  015608  0EFC               	movlw	-4
 14049  01560A  6AE3               	clrf	plusw1,c
 14050  01560C  0EFD               	movlw	-3
 14051  01560E  6AE3               	clrf	plusw1,c
 14052  015610  D0D6               	goto	l11657
 14053  015612                     l11625:
 14054                           
 14055                           ;stkvar	_rem @ sp[(-14)+4]
 14056  015612  0EF7               	movlw	-9
 14057  015614  BEE3               	btfsc	plusw1,7,c
 14058  015616  D04A               	goto	l11637
 14059  015618  0EF7               	movlw	-9
 14060  01561A  50E3               	movf	plusw1,w,c
 14061  01561C  E108               	bnz	u10740
 14062  01561E  0EF6               	movlw	-10
 14063  015620  006F FF8C  F001    	movff	plusw1,btemp
 14064  015626  0EC8               	movlw	200
 14065  015628  5E01               	subwf	btemp^0,f,c
 14066  01562A  A0D8               	btfss	status,0,c
 14067  01562C  D03F               	goto	l11637
 14068  01562E                     u10740:
 14069                           
 14070                           ;stkvar	_rem @ sp[(-14)+4]
 14071  01562E  0EF7               	movlw	-9
 14072  015630  BEE3               	btfsc	plusw1,7,c
 14073  015632  D025               	goto	l11633
 14074  015634  0EF6               	movlw	-10
 14075  015636  006F FF8C  F001    	movff	plusw1,btemp
 14076  01563C  0E2C               	movlw	44
 14077  01563E  5E01               	subwf	btemp^0,f,c
 14078  015640  0EF7               	movlw	-9
 14079  015642  006F FF8C  F001    	movff	plusw1,btemp
 14080  015648  0E01               	movlw	1
 14081  01564A  5A01               	subwfb	btemp^0,f,c
 14082  01564C  A0D8               	btfss	status,0,c
 14083  01564E  D017               	goto	l11633
 14084  015650  0E03               	movlw	3
 14085  015652  6E0B               	movwf	(btemp+10)^0,c
 14086  015654  0E00               	movlw	0
 14087  015656  6E0C               	movwf	(btemp+11)^0,c
 14088                           
 14089                           ;stkvar	_centuries @ sp[(-14)+8]
 14090  015658  0EFA               	movlw	-6
 14091  01565A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14092  015660  0EFB               	movlw	-5
 14093  015662  0060  F033  FFE3   	movff	btemp+11,plusw1
 14094                           
 14095                           ;stkvar	_rem @ sp[(-14)+4]
 14096  015668  50E1               	movf	fsr1l,w,c
 14097  01566A  0FF6               	addlw	-10
 14098  01566C  6ED9               	movwf	fsr2l,c
 14099  01566E  50E2               	movf	fsr1h,w,c
 14100  015670  6EDA               	movwf	fsr2h,c
 14101  015672  0EFF               	movlw	255
 14102  015674  22DA               	addwfc	fsr2h,f,c
 14103  015676  0ED4               	movlw	212
 14104  015678  26DE               	addwf	postinc2,f,c
 14105  01567A  0EFE               	movlw	254
 14106  01567C  D015               	goto	L13
 14107  01567E                     l11633:
 14108  01567E  0E02               	movlw	2
 14109  015680  6E0B               	movwf	(btemp+10)^0,c
 14110  015682  0E00               	movlw	0
 14111  015684  6E0C               	movwf	(btemp+11)^0,c
 14112                           
 14113                           ;stkvar	_centuries @ sp[(-14)+8]
 14114  015686  0EFA               	movlw	-6
 14115  015688  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14116  01568E  0EFB               	movlw	-5
 14117  015690  0060  F033  FFE3   	movff	btemp+11,plusw1
 14118                           
 14119                           ;stkvar	_rem @ sp[(-14)+4]
 14120  015696  50E1               	movf	fsr1l,w,c
 14121  015698  0FF6               	addlw	-10
 14122  01569A  6ED9               	movwf	fsr2l,c
 14123  01569C  50E2               	movf	fsr1h,w,c
 14124  01569E  6EDA               	movwf	fsr2h,c
 14125  0156A0  0EFF               	movlw	255
 14126  0156A2  22DA               	addwfc	fsr2h,f,c
 14127  0156A4  0E38               	movlw	56
 14128  0156A6  D024               	goto	L14
 14129  0156A8                     L13:
 14130  0156A8  22DD               	addwfc	postdec2,f,c
 14131  0156AA  D029               	goto	l11645
 14132  0156AC                     l11637:
 14133                           
 14134                           ;stkvar	_rem @ sp[(-14)+4]
 14135  0156AC  0EF7               	movlw	-9
 14136  0156AE  BEE3               	btfsc	plusw1,7,c
 14137  0156B0  D022               	goto	l11643
 14138  0156B2  0EF7               	movlw	-9
 14139  0156B4  50E3               	movf	plusw1,w,c
 14140  0156B6  E108               	bnz	u10760
 14141  0156B8  0EF6               	movlw	-10
 14142  0156BA  006F FF8C  F001    	movff	plusw1,btemp
 14143  0156C0  0E64               	movlw	100
 14144  0156C2  5E01               	subwf	btemp^0,f,c
 14145  0156C4  A0D8               	btfss	status,0,c
 14146  0156C6  D017               	goto	l11643
 14147  0156C8                     u10760:
 14148  0156C8  0E01               	movlw	1
 14149  0156CA  6E0B               	movwf	(btemp+10)^0,c
 14150  0156CC  0E00               	movlw	0
 14151  0156CE  6E0C               	movwf	(btemp+11)^0,c
 14152                           
 14153                           ;stkvar	_centuries @ sp[(-14)+8]
 14154  0156D0  0EFA               	movlw	-6
 14155  0156D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14156  0156D8  0EFB               	movlw	-5
 14157  0156DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14158                           
 14159                           ;stkvar	_rem @ sp[(-14)+4]
 14160  0156E0  50E1               	movf	fsr1l,w,c
 14161  0156E2  0FF6               	addlw	-10
 14162  0156E4  6ED9               	movwf	fsr2l,c
 14163  0156E6  50E2               	movf	fsr1h,w,c
 14164  0156E8  6EDA               	movwf	fsr2h,c
 14165  0156EA  0EFF               	movlw	255
 14166  0156EC  22DA               	addwfc	fsr2h,f,c
 14167  0156EE  0E9C               	movlw	156
 14168  0156F0                     L14:
 14169  0156F0  26DE               	addwf	postinc2,f,c
 14170  0156F2  0EFF               	movlw	255
 14171  0156F4  D7D9               	goto	L13
 14172  0156F6                     l11643:
 14173                           
 14174                           ;stkvar	_centuries @ sp[(-14)+8]
 14175  0156F6  0EFA               	movlw	-6
 14176  0156F8  6AE3               	clrf	plusw1,c
 14177  0156FA  0EFB               	movlw	-5
 14178  0156FC  6AE3               	clrf	plusw1,c
 14179  0156FE                     l11645:
 14180                           
 14181                           ;stkvar	_rem @ sp[(-14)+4]
 14182  0156FE  0EF6               	movlw	-10
 14183  015700  006F FF8C  F001    	movff	plusw1,btemp
 14184  015706  0EF7               	movlw	-9
 14185  015708  50E3               	movf	plusw1,w,c
 14186  01570A  1001               	iorwf	btemp^0,w,c
 14187  01570C  A4D8               	btfss	status,2,c
 14188  01570E  D00D               	goto	l11651
 14189                           
 14190                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14191  015710  0EE8               	movlw	-24
 14192  015712  006F FF8F FFD9     	movff	plusw1,fsr2l
 14193  015718  0EE9               	movlw	-23
 14194  01571A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14195  015720  0E00               	movlw	0
 14196  015722  6EDE               	movwf	postinc2,c
 14197  015724  0E00               	movlw	0
 14198  015726  6EDD               	movwf	postdec2,c
 14199  015728  D76F               	goto	l11623
 14200  01572A                     l11651:
 14201                           
 14202                           ;stkvar	_rem @ sp[(-14)+4]
 14203  01572A  0EF6               	movlw	-10
 14204  01572C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14205  015732  0EF7               	movlw	-9
 14206  015734  006F FF8C  F00C    	movff	plusw1,btemp+11
 14207  01573A  90D8               	bcf	status,0,c
 14208  01573C  320C               	rrcf	(btemp+11)^0,f,c
 14209  01573E  320B               	rrcf	(btemp+10)^0,f,c
 14210  015740  90D8               	bcf	status,0,c
 14211  015742  320C               	rrcf	(btemp+11)^0,f,c
 14212  015744  320B               	rrcf	(btemp+10)^0,f,c
 14213                           
 14214                           ;stkvar	_leaps @ sp[(-14)+10]
 14215  015746  0EFC               	movlw	-4
 14216  015748  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14217  01574E  0EFD               	movlw	-3
 14218  015750  0060  F033  FFE3   	movff	btemp+11,plusw1
 14219  015756  0E03               	movlw	3
 14220  015758  6E0B               	movwf	(btemp+10)^0,c
 14221  01575A  0E00               	movlw	0
 14222  01575C  6E0C               	movwf	(btemp+11)^0,c
 14223                           
 14224                           ;stkvar	_rem @ sp[(-14)+4]
 14225  01575E  0EF6               	movlw	-10
 14226  015760  006F FF8C  F001    	movff	plusw1,btemp
 14227  015766  500B               	movf	(btemp+10)^0,w,c
 14228  015768  1601               	andwf	btemp^0,f,c
 14229  01576A  0EF6               	movlw	-10
 14230  01576C  0060  F007  FFE3   	movff	btemp,plusw1
 14231  015772  0EF7               	movlw	-9
 14232  015774  006F FF8C  F001    	movff	plusw1,btemp
 14233  01577A  500C               	movf	(btemp+11)^0,w,c
 14234  01577C  1601               	andwf	btemp^0,f,c
 14235  01577E  0EF7               	movlw	-9
 14236  015780  0060  F007  FFE3   	movff	btemp,plusw1
 14237                           
 14238                           ;stkvar	_rem @ sp[(-14)+4]
 14239  015786  0EF6               	movlw	-10
 14240  015788  006F FF8C  F001    	movff	plusw1,btemp
 14241  01578E  0EF7               	movlw	-9
 14242  015790  50E3               	movf	plusw1,w,c
 14243  015792  1001               	iorwf	btemp^0,w,c
 14244  015794  A4D8               	btfss	status,2,c
 14245  015796  D002               	goto	u10780
 14246  015798  0E01               	movlw	1
 14247  01579A  D001               	goto	u10790
 14248  01579C                     u10780:
 14249  01579C  0E00               	movlw	0
 14250  01579E                     u10790:
 14251  01579E  6E0B               	movwf	(btemp+10)^0,c
 14252  0157A0  6A0C               	clrf	(btemp+11)^0,c
 14253                           
 14254                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14255  0157A2  0EE8               	movlw	-24
 14256  0157A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14257  0157AA  0EE9               	movlw	-23
 14258  0157AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14259  0157B2  0060  F02F  FFDE   	movff	btemp+10,postinc2
 14260  0157B8  0060  F033  FFDD   	movff	btemp+11,postdec2
 14261  0157BE                     l11657:
 14262                           
 14263                           ;stkvar	_is_leap @ sp[(-14)+-10]
 14264  0157BE  0EE8               	movlw	-24
 14265  0157C0  006F FF8F FFD9     	movff	plusw1,fsr2l
 14266  0157C6  0EE9               	movlw	-23
 14267  0157C8  006F FF8F FFDA     	movff	plusw1,fsr2h
 14268  0157CE  006F FF78  F00B    	movff	postinc2,btemp+10
 14269  0157D4  006F FF74  F00C    	movff	postdec2,btemp+11
 14270                           
 14271                           ;stkvar	_centuries @ sp[(-14)+8]
 14272  0157DA  0EFA               	movlw	-6
 14273  0157DC  006F FF8C  F009    	movff	plusw1,btemp+8
 14274  0157E2  0EFB               	movlw	-5
 14275  0157E4  006F FF8C  F00A    	movff	plusw1,btemp+9
 14276  0157EA  0E18               	movlw	24
 14277  0157EC  0209               	mulwf	(btemp+8)^0,c
 14278  0157EE  006F FFCC  F007    	movff	prodl,btemp+6
 14279  0157F4  006F FFD0  F008    	movff	prodh,btemp+7
 14280  0157FA  020A               	mulwf	(btemp+9)^0,c
 14281  0157FC  50F3               	movf	prodl,w,c
 14282  0157FE  2608               	addwf	(btemp+7)^0,f,c
 14283                           
 14284                           ;stkvar	_cycles @ sp[(-14)+12]
 14285  015800  0EFE               	movlw	-2
 14286  015802  006F FF8C  F009    	movff	plusw1,btemp+8
 14287  015808  0EFF               	movlw	-1
 14288  01580A  006F FF8C  F00A    	movff	plusw1,btemp+9
 14289  015810  0E61               	movlw	97
 14290  015812  0209               	mulwf	(btemp+8)^0,c
 14291  015814  006F FFCC  F005    	movff	prodl,btemp+4
 14292  01581A  006F FFD0  F006    	movff	prodh,btemp+5
 14293  015820  020A               	mulwf	(btemp+9)^0,c
 14294  015822  50F3               	movf	prodl,w,c
 14295  015824  2606               	addwf	(btemp+5)^0,f,c
 14296  015826  5007               	movf	(btemp+6)^0,w,c
 14297  015828  2605               	addwf	(btemp+4)^0,f,c
 14298  01582A  5008               	movf	(btemp+7)^0,w,c
 14299  01582C  2206               	addwfc	(btemp+5)^0,f,c
 14300  01582E  500B               	movf	(btemp+10)^0,w,c
 14301  015830  5E05               	subwf	(btemp+4)^0,f,c
 14302  015832  500C               	movf	(btemp+11)^0,w,c
 14303  015834  5A06               	subwfb	(btemp+5)^0,f,c
 14304                           
 14305                           ;stkvar	_leaps @ sp[(-14)+10]
 14306  015836  50E1               	movf	fsr1l,w,c
 14307  015838  0FFC               	addlw	-4
 14308  01583A  6ED9               	movwf	fsr2l,c
 14309  01583C  50E2               	movf	fsr1h,w,c
 14310  01583E  6EDA               	movwf	fsr2h,c
 14311  015840  0EFF               	movlw	255
 14312  015842  22DA               	addwfc	fsr2h,f,c
 14313  015844  5005               	movf	(btemp+4)^0,w,c
 14314  015846  26DE               	addwf	postinc2,f,c
 14315  015848  5006               	movf	(btemp+5)^0,w,c
 14316  01584A  22DD               	addwfc	postdec2,f,c
 14317  01584C  0E80               	movlw	128
 14318  01584E  6EE6               	movwf	postinc1,c
 14319  015850  0E51               	movlw	81
 14320  015852  6EE6               	movwf	postinc1,c
 14321  015854  0E01               	movlw	1
 14322  015856  6EE6               	movwf	postinc1,c
 14323  015858  0E00               	movlw	0
 14324  01585A  6EE6               	movwf	postinc1,c
 14325  01585C  0E00               	movlw	0
 14326  01585E  6EE6               	movwf	postinc1,c
 14327  015860  0E00               	movlw	0
 14328  015862  6EE6               	movwf	postinc1,c
 14329  015864  0E00               	movlw	0
 14330  015866  6EE6               	movwf	postinc1,c
 14331  015868  0E00               	movlw	0
 14332  01586A  6EE6               	movwf	postinc1,c
 14333                           
 14334                           ;stkvar	_leaps @ sp[(-22)+10]
 14335  01586C  0EF4               	movlw	-12
 14336  01586E  006F FF8C  F011    	movff	plusw1,btemp+16
 14337  015874  0EF5               	movlw	-11
 14338  015876  006F FF8C  F012    	movff	plusw1,btemp+17
 14339  01587C  6A13               	clrf	(btemp+18)^0,c
 14340  01587E  BE12               	btfsc	(btemp+17)^0,7,c
 14341  015880  6813               	setf	(btemp+18)^0,c
 14342  015882  0060  F04C  F014   	movff	btemp+18,btemp+19
 14343  015888  0060  F04C  F015   	movff	btemp+18,btemp+20
 14344  01588E  0060  F04C  F016   	movff	btemp+18,btemp+21
 14345  015894  0060  F04C  F017   	movff	btemp+18,btemp+22
 14346  01589A  0060  F04C  F018   	movff	btemp+18,btemp+23
 14347  0158A0  0060  F047  FFE6   	movff	btemp+16,postinc1
 14348  0158A6  0060  F04B  FFE6   	movff	btemp+17,postinc1
 14349  0158AC  0060  F04F  FFE6   	movff	btemp+18,postinc1
 14350  0158B2  0060  F053  FFE6   	movff	btemp+19,postinc1
 14351  0158B8  0060  F057  FFE6   	movff	btemp+20,postinc1
 14352  0158BE  0060  F05B  FFE6   	movff	btemp+21,postinc1
 14353  0158C4  0060  F05F  FFE6   	movff	btemp+22,postinc1
 14354  0158CA  0060  F063  FFE6   	movff	btemp+23,postinc1
 14355  0158D0  EC3D  F0F1         	call	___omul	;wreg free
 14356  0158D4  52E5               	movf	postdec1,f,c
 14357  0158D6  006F FF9C  F018    	movff	indf1,btemp+23
 14358  0158DC  52E5               	movf	postdec1,f,c
 14359  0158DE  006F FF9C  F017    	movff	indf1,btemp+22
 14360  0158E4  52E5               	movf	postdec1,f,c
 14361  0158E6  006F FF9C  F016    	movff	indf1,btemp+21
 14362  0158EC  52E5               	movf	postdec1,f,c
 14363  0158EE  006F FF9C  F015    	movff	indf1,btemp+20
 14364  0158F4  52E5               	movf	postdec1,f,c
 14365  0158F6  006F FF9C  F014    	movff	indf1,btemp+19
 14366  0158FC  52E5               	movf	postdec1,f,c
 14367  0158FE  006F FF9C  F013    	movff	indf1,btemp+18
 14368  015904  52E5               	movf	postdec1,f,c
 14369  015906  006F FF9C  F012    	movff	indf1,btemp+17
 14370  01590C  52E5               	movf	postdec1,f,c
 14371  01590E  006F FF9C  F011    	movff	indf1,btemp+16
 14372  015914  0EF8               	movlw	248
 14373  015916  26E1               	addwf	fsr1l,f,c
 14374  015918  0EFF               	movlw	255
 14375  01591A  22E2               	addwfc	fsr1h,f,c
 14376  01591C  0E80               	movlw	128
 14377  01591E  6EE6               	movwf	postinc1,c
 14378  015920  0E33               	movlw	51
 14379  015922  6EE6               	movwf	postinc1,c
 14380  015924  0EE1               	movlw	225
 14381  015926  6EE6               	movwf	postinc1,c
 14382  015928  0E01               	movlw	1
 14383  01592A  6EE6               	movwf	postinc1,c
 14384  01592C  0E00               	movlw	0
 14385  01592E  6EE6               	movwf	postinc1,c
 14386  015930  0E00               	movlw	0
 14387  015932  6EE6               	movwf	postinc1,c
 14388  015934  0E00               	movlw	0
 14389  015936  6EE6               	movwf	postinc1,c
 14390  015938  0E00               	movlw	0
 14391  01593A  6EE6               	movwf	postinc1,c
 14392                           
 14393                           ;stkvar	_year @ sp[(-22)+-8]
 14394  01593C  50E1               	movf	fsr1l,w,c
 14395  01593E  0FE2               	addlw	-30
 14396  015940  6ED9               	movwf	fsr2l,c
 14397  015942  50E2               	movf	fsr1h,w,c
 14398  015944  6EDA               	movwf	fsr2h,c
 14399  015946  0EFF               	movlw	255
 14400  015948  22DA               	addwfc	fsr2h,f,c
 14401  01594A  006F FF7B FFE6     	movff	postinc2,postinc1
 14402  015950  006F FF7B FFE6     	movff	postinc2,postinc1
 14403  015956  006F FF7B FFE6     	movff	postinc2,postinc1
 14404  01595C  006F FF7B FFE6     	movff	postinc2,postinc1
 14405  015962  006F FF7B FFE6     	movff	postinc2,postinc1
 14406  015968  006F FF7B FFE6     	movff	postinc2,postinc1
 14407  01596E  006F FF7B FFE6     	movff	postinc2,postinc1
 14408  015974  006F FF7B FFE6     	movff	postinc2,postinc1
 14409  01597A  EC3D  F0F1         	call	___omul	;wreg free
 14410  01597E  52E5               	movf	postdec1,f,c
 14411  015980  006F FF9C  F020    	movff	indf1,btemp+31
 14412  015986  52E5               	movf	postdec1,f,c
 14413  015988  006F FF9C  F01F    	movff	indf1,btemp+30
 14414  01598E  52E5               	movf	postdec1,f,c
 14415  015990  006F FF9C  F01E    	movff	indf1,btemp+29
 14416  015996  52E5               	movf	postdec1,f,c
 14417  015998  006F FF9C  F01D    	movff	indf1,btemp+28
 14418  01599E  52E5               	movf	postdec1,f,c
 14419  0159A0  006F FF9C  F01C    	movff	indf1,btemp+27
 14420  0159A6  52E5               	movf	postdec1,f,c
 14421  0159A8  006F FF9C  F01B    	movff	indf1,btemp+26
 14422  0159AE  52E5               	movf	postdec1,f,c
 14423  0159B0  006F FF9C  F01A    	movff	indf1,btemp+25
 14424  0159B6  52E5               	movf	postdec1,f,c
 14425  0159B8  006F FF9C  F019    	movff	indf1,btemp+24
 14426  0159BE  0EF8               	movlw	248
 14427  0159C0  26E1               	addwf	fsr1l,f,c
 14428  0159C2  0EFF               	movlw	255
 14429  0159C4  22E2               	addwfc	fsr1h,f,c
 14430  0159C6  5011               	movf	(btemp+16)^0,w,c
 14431  0159C8  2419               	addwf	(btemp+24)^0,w,c
 14432  0159CA  6E09               	movwf	(btemp+8)^0,c
 14433  0159CC  5012               	movf	(btemp+17)^0,w,c
 14434  0159CE  201A               	addwfc	(btemp+25)^0,w,c
 14435  0159D0  6E0A               	movwf	(btemp+9)^0,c
 14436  0159D2  5013               	movf	(btemp+18)^0,w,c
 14437  0159D4  201B               	addwfc	(btemp+26)^0,w,c
 14438  0159D6  6E0B               	movwf	(btemp+10)^0,c
 14439  0159D8  5014               	movf	(btemp+19)^0,w,c
 14440  0159DA  201C               	addwfc	(btemp+27)^0,w,c
 14441  0159DC  6E0C               	movwf	(btemp+11)^0,c
 14442  0159DE  5015               	movf	(btemp+20)^0,w,c
 14443  0159E0  201D               	addwfc	(btemp+28)^0,w,c
 14444  0159E2  6E0D               	movwf	(btemp+12)^0,c
 14445  0159E4  5016               	movf	(btemp+21)^0,w,c
 14446  0159E6  201E               	addwfc	(btemp+29)^0,w,c
 14447  0159E8  6E0E               	movwf	(btemp+13)^0,c
 14448  0159EA  5017               	movf	(btemp+22)^0,w,c
 14449  0159EC  201F               	addwfc	(btemp+30)^0,w,c
 14450  0159EE  6E0F               	movwf	(btemp+14)^0,c
 14451  0159F0  5018               	movf	(btemp+23)^0,w,c
 14452  0159F2  2020               	addwfc	(btemp+31)^0,w,c
 14453  0159F4  6E10               	movwf	(btemp+15)^0,c
 14454  0159F6  0E00               	movlw	0
 14455  0159F8  2409               	addwf	(btemp+8)^0,w,c
 14456  0159FA  6E11               	movwf	(btemp+16)^0,c
 14457  0159FC  0E77               	movlw	119
 14458  0159FE  200A               	addwfc	(btemp+9)^0,w,c
 14459  015A00  6E12               	movwf	(btemp+17)^0,c
 14460  015A02  0E76               	movlw	118
 14461  015A04  200B               	addwfc	(btemp+10)^0,w,c
 14462  015A06  6E13               	movwf	(btemp+18)^0,c
 14463  015A08  0E7C               	movlw	124
 14464  015A0A  200C               	addwfc	(btemp+11)^0,w,c
 14465  015A0C  6E14               	movwf	(btemp+19)^0,c
 14466  015A0E  0EFF               	movlw	255
 14467  015A10  200D               	addwfc	(btemp+12)^0,w,c
 14468  015A12  6E15               	movwf	(btemp+20)^0,c
 14469  015A14  0EFF               	movlw	255
 14470  015A16  200E               	addwfc	(btemp+13)^0,w,c
 14471  015A18  6E16               	movwf	(btemp+21)^0,c
 14472  015A1A  0EFF               	movlw	255
 14473  015A1C  200F               	addwfc	(btemp+14)^0,w,c
 14474  015A1E  6E17               	movwf	(btemp+22)^0,c
 14475  015A20  0EFF               	movlw	255
 14476  015A22  2010               	addwfc	(btemp+15)^0,w,c
 14477  015A24  6E18               	movwf	(btemp+23)^0,c
 14478  015A26                     L12:
 14479                           
 14480                           ;stkvar	?___year_to_secs @ sp[(-14)+-8]
 14481  015A26  0EEA               	movlw	-22
 14482  015A28  0060  F047  FFE3   	movff	btemp+16,plusw1
 14483  015A2E  0EEB               	movlw	-21
 14484  015A30  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14485  015A36  0EEC               	movlw	-20
 14486  015A38  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14487  015A3E  0EED               	movlw	-19
 14488  015A40  0060  F053  FFE3   	movff	btemp+19,plusw1
 14489  015A46  0EEE               	movlw	-18
 14490  015A48  0060  F057  FFE3   	movff	btemp+20,plusw1
 14491  015A4E  0EEF               	movlw	-17
 14492  015A50  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14493  015A56  0EF0               	movlw	-16
 14494  015A58  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14495  015A5E  0EF1               	movlw	-15
 14496  015A60  0060  F063  FFE3   	movff	btemp+23,plusw1
 14497                           
 14498                           ; ___year_to_secs: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          10, argsize = 10, vargsize = 0
 14499  015A66  0EF2               	movlw	242
 14500  015A68  26E1               	addwf	fsr1l,f,c
 14501  015A6A  0EFF               	movlw	255
 14502  015A6C  22E2               	addwfc	fsr1h,f,c
 14503  015A6E  0012               	return		;funcret
 14504  015A70                     __end_of___year_to_secs:
 14505                           	opt callstack 0
 14506                           
 14507 ;; *************** function ___month_to_secs *****************
 14508 ;; Defined at:
 14509 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__month_to_secs.c"
 14510 ;; Parameters:    Size  Location     Type
 14511 ;;  month           2  [STACK] int 
 14512 ;;  is_leap         2  [STACK] int 
 14513 ;; Auto vars:     Size  Location     Type
 14514 ;;  t               4  [STACK] long 
 14515 ;; Return value:  Size  Location     Type
 14516 ;;                  4  [STACK] long 
 14517 ;; Registers used:
 14518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl
 14519 ;; Tracked objects:
 14520 ;;		On entry : 0/0
 14521 ;;		On exit  : 0/0
 14522 ;;		Unchanged: 0/0
 14523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14528 ;;Total ram usage:        0 bytes
 14529 ;; Hardware stack levels used:    1
 14530 ;; Hardware stack levels required when called:   15
 14531 ;; This function calls:
 14532 ;;		Nothing
 14533 ;; This function is called by:
 14534 ;;		_rule_to_secs
 14535 ;; This function uses a reentrant model
 14536 ;;
 14537                           
 14538                           	psect	text41
 14539  01F3A0                     __ptext41:
 14540                           	opt callstack 0
 14541  01F3A0                     ___month_to_secs:
 14542                           	opt callstack 0
 14543                           
 14544                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14545  01F3A0  52E6               	movf	postinc1,f,c
 14546  01F3A2  52E6               	movf	postinc1,f,c
 14547  01F3A4  52E6               	movf	postinc1,f,c
 14548  01F3A6  52E6               	movf	postinc1,f,c
 14549                           
 14550                           ;stkvar	_month @ sp[(-4)+-2]
 14551                           
 14552                           ;incstack = 0
 14553  01F3A8  0EFA               	movlw	-6
 14554  01F3AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 14555  01F3B0  0EFB               	movlw	-5
 14556  01F3B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 14557  01F3B8  90D8               	bcf	status,0,c
 14558  01F3BA  360B               	rlcf	(btemp+10)^0,f,c
 14559  01F3BC  360C               	rlcf	(btemp+11)^0,f,c
 14560  01F3BE  90D8               	bcf	status,0,c
 14561  01F3C0  360B               	rlcf	(btemp+10)^0,f,c
 14562  01F3C2  360C               	rlcf	(btemp+11)^0,f,c
 14563  01F3C4  0EE3               	movlw	low ___month_to_secs@secs_through_month
 14564  01F3C6  240B               	addwf	(btemp+10)^0,w,c
 14565  01F3C8  6EF6               	movwf	tblptrl,c
 14566  01F3CA  0EF8               	movlw	high ___month_to_secs@secs_through_month
 14567  01F3CC  200C               	addwfc	(btemp+11)^0,w,c
 14568  01F3CE  6EF7               	movwf	tblptrh,c
 14569  01F3D0                     	if	1	;There are 3 active tblptr bytes
 14570  01F3D0  6AF8               	clrf	tblptru,c
 14571  01F3D2  0E00               	movlw	low (__mediumconst shr (0+16))
 14572  01F3D4  22F8               	addwfc	tblptru,f,c
 14573  01F3D6                     	endif
 14574  01F3D6  0009               	tblrd		*+
 14575  01F3D8  006F FFD4  F009    	movff	tablat,btemp+8
 14576  01F3DE  0009               	tblrd		*+
 14577  01F3E0  006F FFD4  F00A    	movff	tablat,btemp+9
 14578  01F3E6  0009               	tblrd		*+
 14579  01F3E8  006F FFD4  F00B    	movff	tablat,btemp+10
 14580  01F3EE  0009               	tblrd		*+
 14581  01F3F0  006F FFD4  F00C    	movff	tablat,btemp+11
 14582                           
 14583                           ;stkvar	_t @ sp[(-4)+0]
 14584  01F3F6  0EFC               	movlw	-4
 14585  01F3F8  0060  F027  FFE3   	movff	btemp+8,plusw1
 14586  01F3FE  0EFD               	movlw	-3
 14587  01F400  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14588  01F406  0EFE               	movlw	-2
 14589  01F408  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14590  01F40E  0EFF               	movlw	-1
 14591  01F410  0060  F033  FFE3   	movff	btemp+11,plusw1
 14592                           
 14593                           ;stkvar	_is_leap @ sp[(-4)+-4]
 14594  01F416  0EF8               	movlw	-8
 14595  01F418  006F FF8C  F001    	movff	plusw1,btemp
 14596  01F41E  0EF9               	movlw	-7
 14597  01F420  50E3               	movf	plusw1,w,c
 14598  01F422  1001               	iorwf	btemp^0,w,c
 14599  01F424  B4D8               	btfsc	status,2,c
 14600  01F426  D01D               	goto	l11671
 14601                           
 14602                           ;stkvar	_month @ sp[(-4)+-2]
 14603  01F428  0EFB               	movlw	-5
 14604  01F42A  BEE3               	btfsc	plusw1,7,c
 14605  01F42C  D01A               	goto	l11671
 14606  01F42E  0EFB               	movlw	-5
 14607  01F430  50E3               	movf	plusw1,w,c
 14608  01F432  E108               	bnz	u10810
 14609  01F434  0EFA               	movlw	-6
 14610  01F436  006F FF8C  F001    	movff	plusw1,btemp
 14611  01F43C  0E02               	movlw	2
 14612  01F43E  5E01               	subwf	btemp^0,f,c
 14613  01F440  A0D8               	btfss	status,0,c
 14614  01F442  D00F               	goto	l11671
 14615  01F444                     u10810:
 14616                           
 14617                           ;stkvar	_t @ sp[(-4)+0]
 14618  01F444  50E1               	movf	fsr1l,w,c
 14619  01F446  0FFC               	addlw	-4
 14620  01F448  6ED9               	movwf	fsr2l,c
 14621  01F44A  50E2               	movf	fsr1h,w,c
 14622  01F44C  6EDA               	movwf	fsr2h,c
 14623  01F44E  0EFF               	movlw	255
 14624  01F450  22DA               	addwfc	fsr2h,f,c
 14625  01F452  0E80               	movlw	128
 14626  01F454  26DE               	addwf	postinc2,f,c
 14627  01F456  0E51               	movlw	81
 14628  01F458  22DE               	addwfc	postinc2,f,c
 14629  01F45A  0E01               	movlw	1
 14630  01F45C  22DE               	addwfc	postinc2,f,c
 14631  01F45E  0E00               	movlw	0
 14632  01F460  22DE               	addwfc	postinc2,f,c
 14633  01F462                     l11671:
 14634                           
 14635                           ;stkvar	_t @ sp[(-4)+0]
 14636  01F462  0EFC               	movlw	-4
 14637  01F464  006F FF8C  F001    	movff	plusw1,btemp
 14638  01F46A  0EFD               	movlw	-3
 14639  01F46C  006F FF8C  F002    	movff	plusw1,btemp+1
 14640  01F472  0EFE               	movlw	-2
 14641  01F474  006F FF8C  F003    	movff	plusw1,btemp+2
 14642  01F47A  0EFF               	movlw	-1
 14643  01F47C  006F FF8C  F004    	movff	plusw1,btemp+3
 14644                           
 14645                           ; ___month_to_secs: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
 14646  01F482  0EF8               	movlw	248
 14647  01F484  26E1               	addwf	fsr1l,f,c
 14648  01F486  0EFF               	movlw	255
 14649  01F488  22E2               	addwfc	fsr1h,f,c
 14650  01F48A  0012               	return		;funcret
 14651  01F48C                     __end_of___month_to_secs:
 14652                           	opt callstack 0
 14653                           
 14654 ;; *************** function _do_tzset *****************
 14655 ;; Defined at:
 14656 ;;		line 118 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 14657 ;; Parameters:    Size  Location     Type
 14658 ;;		None
 14659 ;; Auto vars:     Size  Location     Type
 14660 ;;  s               2  [STACK] PTR const unsigned char 
 14661 ;;		 -> __gmt(4), 
 14662 ;; Return value:  Size  Location     Type
 14663 ;;                  1  [STACK] void 
 14664 ;; Registers used:
 14665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 14666 ;; Tracked objects:
 14667 ;;		On entry : 0/39
 14668 ;;		On exit  : 0/0
 14669 ;;		Unchanged: 0/0
 14670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14675 ;;Total ram usage:        0 bytes
 14676 ;; Hardware stack levels used:    1
 14677 ;; Hardware stack levels required when called:   18
 14678 ;; This function calls:
 14679 ;;		_getname
 14680 ;;		_getoff
 14681 ;;		_getrule
 14682 ;; This function is called by:
 14683 ;;		___secs_to_zone
 14684 ;; This function uses a reentrant model
 14685 ;;
 14686                           
 14687                           	psect	text42
 14688  01AF82                     __ptext42:
 14689                           	opt callstack 0
 14690  01AF82                     _do_tzset:
 14691                           	opt callstack 0
 14692                           
 14693                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14694  01AF82  52E6               	movf	postinc1,f,c
 14695  01AF84  52E6               	movf	postinc1,f,c
 14696                           
 14697                           ;stkvar	_s @ sp[(-2)+0]
 14698                           
 14699                           ;incstack = 0
 14700  01AF86  0EFA               	movlw	high ___gmt
 14701  01AF88  6E01               	movwf	btemp^0,c
 14702  01AF8A  0EFF               	movlw	-1
 14703  01AF8C  0060  F007  FFE3   	movff	btemp,plusw1
 14704  01AF92  0E2F               	movlw	low ___gmt
 14705  01AF94  6E01               	movwf	btemp^0,c
 14706  01AF96  0EFE               	movlw	-2
 14707  01AF98  0060  F007  FFE3   	movff	btemp,plusw1
 14708                           
 14709                           ;stkvar	_s @ sp[(-2)+0]
 14710  01AF9E  0EFE               	movlw	254
 14711  01AFA0  24E1               	addwf	fsr1l,w,c
 14712  01AFA2  6E01               	movwf	btemp^0,c
 14713  01AFA4  0EFF               	movlw	255
 14714  01AFA6  20E2               	addwfc	fsr1h,w,c
 14715  01AFA8  6E02               	movwf	(btemp+1)^0,c
 14716  01AFAA  0060  F007  FFE6   	movff	btemp,postinc1
 14717  01AFB0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14718  01AFB6  0EF7               	movlw	low _std_name
 14719  01AFB8  6EE6               	movwf	postinc1,c
 14720  01AFBA  0E01               	movlw	high _std_name
 14721  01AFBC  6EE6               	movwf	postinc1,c
 14722  01AFBE  EC02  F0D2         	call	_getname	;wreg free
 14723  01AFC2  0EF7               	movlw	low _std_name
 14724  01AFC4  0100               	movlb	0	; () banked
 14725  01AFC6  6F72               	movwf	___tzname& (0+255),b
 14726  01AFC8  0E01               	movlw	high _std_name
 14727  01AFCA  6F73               	movwf	(___tzname+1)& (0+255),b
 14728                           
 14729                           ; BSR set to: 0
 14730                           ;stkvar	_s @ sp[(-2)+0]
 14731  01AFCC  0EFE               	movlw	254
 14732  01AFCE  24E1               	addwf	fsr1l,w,c
 14733  01AFD0  6E01               	movwf	btemp^0,c
 14734  01AFD2  0EFF               	movlw	255
 14735  01AFD4  20E2               	addwfc	fsr1h,w,c
 14736  01AFD6  6E02               	movwf	(btemp+1)^0,c
 14737  01AFD8  0060  F007  FFE6   	movff	btemp,postinc1
 14738  01AFDE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14739  01AFE4  EC31  F0E0         	call	_getoff	;wreg free
 14740  01AFE8  0060  F004  F076   	movff	btemp,___timezone
 14741  01AFEE  0060  F008  F077   	movff	btemp+1,___timezone+1
 14742  01AFF4  0100               	movlb	0	; () banked
 14743  01AFF6  0E00               	movlw	0
 14744  01AFF8  BF77               	btfsc	(___timezone+1)& (0+255),7,b
 14745  01AFFA  0EFF               	movlw	-1
 14746  01AFFC  6F78               	movwf	(___timezone+2)& (0+255),b
 14747  01AFFE  6F79               	movwf	(___timezone+3)& (0+255),b
 14748                           
 14749                           ; BSR set to: 0
 14750                           ;stkvar	_s @ sp[(-2)+0]
 14751  01B000  0EFE               	movlw	254
 14752  01B002  24E1               	addwf	fsr1l,w,c
 14753  01B004  6E01               	movwf	btemp^0,c
 14754  01B006  0EFF               	movlw	255
 14755  01B008  20E2               	addwfc	fsr1h,w,c
 14756  01B00A  6E02               	movwf	(btemp+1)^0,c
 14757  01B00C  0060  F007  FFE6   	movff	btemp,postinc1
 14758  01B012  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14759  01B018  0EF0               	movlw	low _dst_name
 14760  01B01A  6EE6               	movwf	postinc1,c
 14761  01B01C  0E01               	movlw	high _dst_name
 14762  01B01E  6EE6               	movwf	postinc1,c
 14763  01B020  EC02  F0D2         	call	_getname	;wreg free
 14764  01B024  0EF0               	movlw	low _dst_name
 14765  01B026  0100               	movlb	0	; () banked
 14766  01B028  6F74               	movwf	(___tzname+2)& (0+255),b
 14767  01B02A  0E01               	movlw	high _dst_name
 14768  01B02C  6F75               	movwf	(___tzname+3)& (0+255),b
 14769                           
 14770                           ; BSR set to: 0
 14771  01B02E  0101               	movlb	1	; () banked
 14772  01B030  51F0               	movf	_dst_name& (0+255),w,b
 14773  01B032  B4D8               	btfsc	status,2,c
 14774  01B034  D070               	goto	l3952
 14775                           
 14776                           ; BSR set to: 1
 14777  01B036  0E00               	movlw	0
 14778  01B038  0100               	movlb	0	; () banked
 14779  01B03A  6FC3               	movwf	(___daylight+1)& (0+255),b
 14780  01B03C  0E01               	movlw	1
 14781  01B03E  6FC2               	movwf	___daylight& (0+255),b
 14782                           
 14783                           ; BSR set to: 0
 14784                           ;stkvar	_s @ sp[(-2)+0]
 14785  01B040  50E1               	movf	fsr1l,w,c
 14786  01B042  0FFE               	addlw	-2
 14787  01B044  6ED9               	movwf	fsr2l,c
 14788  01B046  50E2               	movf	fsr1h,w,c
 14789  01B048  6EDA               	movwf	fsr2h,c
 14790  01B04A  0EFF               	movlw	255
 14791  01B04C  22DA               	addwfc	fsr2h,f,c
 14792  01B04E  006F FF7B FFF6     	movff	postinc2,tblptrl
 14793  01B054  006F FF77 FFF7     	movff	postdec2,tblptrh
 14794  01B05A                     	if	0	;tblptru may be non-zero
 14795  01B05A                     	endif
 14796  01B05A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14797  01B05A  0E00               	movlw	low (__mediumconst shr (0+16))
 14798  01B05C  6EF8               	movwf	tblptru,c
 14799  01B05E                     	endif
 14800  01B05E  0008               	tblrd		*
 14801  01B060  50F5               	movf	tablat,w,c
 14802  01B062  0A2B               	xorlw	43
 14803  01B064  B4D8               	btfsc	status,2,c
 14804  01B066  D035               	goto	u15750
 14805                           
 14806                           ; BSR set to: 0
 14807                           ;stkvar	_s @ sp[(-2)+0]
 14808  01B068  50E1               	movf	fsr1l,w,c
 14809  01B06A  0FFE               	addlw	-2
 14810  01B06C  6ED9               	movwf	fsr2l,c
 14811  01B06E  50E2               	movf	fsr1h,w,c
 14812  01B070  6EDA               	movwf	fsr2h,c
 14813  01B072  0EFF               	movlw	255
 14814  01B074  22DA               	addwfc	fsr2h,f,c
 14815  01B076  006F FF7B FFF6     	movff	postinc2,tblptrl
 14816  01B07C  006F FF77 FFF7     	movff	postdec2,tblptrh
 14817  01B082                     	if	0	;tblptru may be non-zero
 14818  01B082                     	endif
 14819  01B082                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14820  01B082  0E00               	movlw	low (__mediumconst shr (0+16))
 14821  01B084  6EF8               	movwf	tblptru,c
 14822  01B086                     	endif
 14823  01B086  0008               	tblrd		*
 14824  01B088  50F5               	movf	tablat,w,c
 14825  01B08A  0A2D               	xorlw	45
 14826  01B08C  B4D8               	btfsc	status,2,c
 14827  01B08E  D021               	goto	u15750
 14828                           
 14829                           ; BSR set to: 0
 14830  01B090  0ED0               	movlw	208
 14831  01B092  6E0B               	movwf	(btemp+10)^0,c
 14832  01B094  0EFF               	movlw	255
 14833  01B096  6E0C               	movwf	(btemp+11)^0,c
 14834                           
 14835                           ;stkvar	_s @ sp[(-2)+0]
 14836  01B098  50E1               	movf	fsr1l,w,c
 14837  01B09A  0FFE               	addlw	-2
 14838  01B09C  6ED9               	movwf	fsr2l,c
 14839  01B09E  50E2               	movf	fsr1h,w,c
 14840  01B0A0  6EDA               	movwf	fsr2h,c
 14841  01B0A2  0EFF               	movlw	255
 14842  01B0A4  22DA               	addwfc	fsr2h,f,c
 14843  01B0A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 14844  01B0AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 14845  01B0B2                     	if	0	;tblptru may be non-zero
 14846  01B0B2                     	endif
 14847  01B0B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14848  01B0B2  0E00               	movlw	low (__mediumconst shr (0+16))
 14849  01B0B4  6EF8               	movwf	tblptru,c
 14850  01B0B6                     	endif
 14851  01B0B6  0008               	tblrd		*
 14852  01B0B8  50F5               	movf	tablat,w,c
 14853  01B0BA  6E09               	movwf	(btemp+8)^0,c
 14854  01B0BC  6A0A               	clrf	(btemp+9)^0,c
 14855  01B0BE  500B               	movf	(btemp+10)^0,w,c
 14856  01B0C0  2609               	addwf	(btemp+8)^0,f,c
 14857  01B0C2  500C               	movf	(btemp+11)^0,w,c
 14858  01B0C4  220A               	addwfc	(btemp+9)^0,f,c
 14859  01B0C6  500A               	movf	(btemp+9)^0,w,c
 14860  01B0C8  E119               	bnz	l16179
 14861  01B0CA  0E0A               	movlw	10
 14862  01B0CC  5C09               	subwf	(btemp+8)^0,w,c
 14863  01B0CE  B0D8               	btfsc	status,0,c
 14864  01B0D0  D015               	goto	l16179
 14865  01B0D2                     u15750:
 14866                           
 14867                           ; BSR set to: 0
 14868                           ;stkvar	_s @ sp[(-2)+0]
 14869  01B0D2  0EFE               	movlw	254
 14870  01B0D4  24E1               	addwf	fsr1l,w,c
 14871  01B0D6  6E01               	movwf	btemp^0,c
 14872  01B0D8  0EFF               	movlw	255
 14873  01B0DA  20E2               	addwfc	fsr1h,w,c
 14874  01B0DC  6E02               	movwf	(btemp+1)^0,c
 14875  01B0DE  0060  F007  FFE6   	movff	btemp,postinc1
 14876  01B0E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14877  01B0EA  EC31  F0E0         	call	_getoff	;wreg free
 14878  01B0EE  0060  F004  F0C0   	movff	btemp,_dst_off
 14879  01B0F4  0060  F008  F0C1   	movff	btemp+1,_dst_off+1
 14880  01B0FA  D012               	goto	l16181
 14881  01B0FC                     l16179:
 14882                           
 14883                           ; BSR set to: 0
 14884  01B0FC  0060  F1D8  F00B   	movff	___timezone,btemp+10
 14885  01B102  0060  F1DC  F00C   	movff	___timezone+1,btemp+11
 14886  01B108  0EF0               	movlw	240
 14887  01B10A  240B               	addwf	(btemp+10)^0,w,c
 14888  01B10C  6FC0               	movwf	_dst_off& (0+255),b
 14889  01B10E  0EF1               	movlw	241
 14890  01B110  200C               	addwfc	(btemp+11)^0,w,c
 14891  01B112  6FC1               	movwf	(_dst_off+1)& (0+255),b
 14892  01B114  D005               	goto	l16181
 14893  01B116                     l3952:
 14894                           
 14895                           ; BSR set to: 1
 14896  01B116  0100               	movlb	0	; () banked
 14897  01B118  6BC2               	clrf	___daylight& (0+255),b
 14898  01B11A  6BC3               	clrf	(___daylight+1)& (0+255),b
 14899  01B11C  6BC0               	clrf	_dst_off& (0+255),b
 14900  01B11E  6BC1               	clrf	(_dst_off+1)& (0+255),b
 14901  01B120                     l16181:
 14902                           
 14903                           ;stkvar	_s @ sp[(-2)+0]
 14904  01B120  50E1               	movf	fsr1l,w,c
 14905  01B122  0FFE               	addlw	-2
 14906  01B124  6ED9               	movwf	fsr2l,c
 14907  01B126  50E2               	movf	fsr1h,w,c
 14908  01B128  6EDA               	movwf	fsr2h,c
 14909  01B12A  0EFF               	movlw	255
 14910  01B12C  22DA               	addwfc	fsr2h,f,c
 14911  01B12E  006F FF7B FFF6     	movff	postinc2,tblptrl
 14912  01B134  006F FF77 FFF7     	movff	postdec2,tblptrh
 14913  01B13A                     	if	0	;tblptru may be non-zero
 14914  01B13A                     	endif
 14915  01B13A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14916  01B13A  0E00               	movlw	low (__mediumconst shr (0+16))
 14917  01B13C  6EF8               	movwf	tblptru,c
 14918  01B13E                     	endif
 14919  01B13E  0008               	tblrd		*
 14920  01B140  50F5               	movf	tablat,w,c
 14921  01B142  0A2C               	xorlw	44
 14922  01B144  A4D8               	btfss	status,2,c
 14923  01B146  D023               	goto	l16187
 14924                           
 14925                           ;stkvar	_s @ sp[(-2)+0]
 14926  01B148  0EFE               	movlw	-2
 14927  01B14A  50E3               	movf	plusw1,w,c
 14928  01B14C  0F01               	addlw	1
 14929  01B14E  6E01               	movwf	btemp^0,c
 14930  01B150  0EFE               	movlw	-2
 14931  01B152  0060  F007  FFE3   	movff	btemp,plusw1
 14932  01B158  6A01               	clrf	btemp^0,c
 14933  01B15A  0EFF               	movlw	-1
 14934  01B15C  50E3               	movf	plusw1,w,c
 14935  01B15E  2001               	addwfc	btemp^0,w,c
 14936  01B160  6E01               	movwf	btemp^0,c
 14937  01B162  0EFF               	movlw	-1
 14938  01B164  0060  F007  FFE3   	movff	btemp,plusw1
 14939  01B16A  0EE6               	movlw	low _r0
 14940  01B16C  6EE6               	movwf	postinc1,c
 14941  01B16E  0E01               	movlw	high _r0
 14942  01B170  6EE6               	movwf	postinc1,c
 14943                           
 14944                           ;stkvar	_s @ sp[(-4)+0]
 14945  01B172  0EFC               	movlw	252
 14946  01B174  24E1               	addwf	fsr1l,w,c
 14947  01B176  6E01               	movwf	btemp^0,c
 14948  01B178  0EFF               	movlw	255
 14949  01B17A  20E2               	addwfc	fsr1h,w,c
 14950  01B17C  6E02               	movwf	(btemp+1)^0,c
 14951  01B17E  0060  F007  FFE6   	movff	btemp,postinc1
 14952  01B184  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14953  01B18A  EC01  F0D9         	call	_getrule	;wreg free
 14954  01B18E                     l16187:
 14955                           
 14956                           ;stkvar	_s @ sp[(-2)+0]
 14957  01B18E  50E1               	movf	fsr1l,w,c
 14958  01B190  0FFE               	addlw	-2
 14959  01B192  6ED9               	movwf	fsr2l,c
 14960  01B194  50E2               	movf	fsr1h,w,c
 14961  01B196  6EDA               	movwf	fsr2h,c
 14962  01B198  0EFF               	movlw	255
 14963  01B19A  22DA               	addwfc	fsr2h,f,c
 14964  01B19C  006F FF7B FFF6     	movff	postinc2,tblptrl
 14965  01B1A2  006F FF77 FFF7     	movff	postdec2,tblptrh
 14966  01B1A8                     	if	0	;tblptru may be non-zero
 14967  01B1A8                     	endif
 14968  01B1A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14969  01B1A8  0E00               	movlw	low (__mediumconst shr (0+16))
 14970  01B1AA  6EF8               	movwf	tblptru,c
 14971  01B1AC                     	endif
 14972  01B1AC  0008               	tblrd		*
 14973  01B1AE  50F5               	movf	tablat,w,c
 14974  01B1B0  0A2C               	xorlw	44
 14975  01B1B2  A4D8               	btfss	status,2,c
 14976  01B1B4  D023               	goto	l3960
 14977                           
 14978                           ;stkvar	_s @ sp[(-2)+0]
 14979  01B1B6  0EFE               	movlw	-2
 14980  01B1B8  50E3               	movf	plusw1,w,c
 14981  01B1BA  0F01               	addlw	1
 14982  01B1BC  6E01               	movwf	btemp^0,c
 14983  01B1BE  0EFE               	movlw	-2
 14984  01B1C0  0060  F007  FFE3   	movff	btemp,plusw1
 14985  01B1C6  6A01               	clrf	btemp^0,c
 14986  01B1C8  0EFF               	movlw	-1
 14987  01B1CA  50E3               	movf	plusw1,w,c
 14988  01B1CC  2001               	addwfc	btemp^0,w,c
 14989  01B1CE  6E01               	movwf	btemp^0,c
 14990  01B1D0  0EFF               	movlw	-1
 14991  01B1D2  0060  F007  FFE3   	movff	btemp,plusw1
 14992  01B1D8  0EDC               	movlw	low _r1
 14993  01B1DA  6EE6               	movwf	postinc1,c
 14994  01B1DC  0E01               	movlw	high _r1
 14995  01B1DE  6EE6               	movwf	postinc1,c
 14996                           
 14997                           ;stkvar	_s @ sp[(-4)+0]
 14998  01B1E0  0EFC               	movlw	252
 14999  01B1E2  24E1               	addwf	fsr1l,w,c
 15000  01B1E4  6E01               	movwf	btemp^0,c
 15001  01B1E6  0EFF               	movlw	255
 15002  01B1E8  20E2               	addwfc	fsr1h,w,c
 15003  01B1EA  6E02               	movwf	(btemp+1)^0,c
 15004  01B1EC  0060  F007  FFE6   	movff	btemp,postinc1
 15005  01B1F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15006  01B1F8  EC01  F0D9         	call	_getrule	;wreg free
 15007  01B1FC                     l3960:
 15008                           
 15009                           ; _do_tzset: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
 15010  01B1FC  52E5               	movf	postdec1,f,c
 15011  01B1FE  52E5               	movf	postdec1,f,c
 15012  01B200  0012               	return		;funcret
 15013  01B202                     __end_of_do_tzset:
 15014                           	opt callstack 0
 15015                           
 15016 ;; *************** function _getrule *****************
 15017 ;; Defined at:
 15018 ;;		line 60 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15019 ;; Parameters:    Size  Location     Type
 15020 ;;  p               2  [STACK] PTR PTR const unsigned c
 15021 ;;		 -> s(2), 
 15022 ;;  rule            2  [STACK] PTR int 
 15023 ;;		 -> r1(10), r0(10), 
 15024 ;; Auto vars:     Size  Location     Type
 15025 ;;  r               2  [STACK] int 
 15026 ;; Return value:  Size  Location     Type
 15027 ;;                  1  [STACK] void 
 15028 ;; Registers used:
 15029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15030 ;; Tracked objects:
 15031 ;;		On entry : 0/0
 15032 ;;		On exit  : 0/0
 15033 ;;		Unchanged: 0/0
 15034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15039 ;;Total ram usage:        0 bytes
 15040 ;; Hardware stack levels used:    1
 15041 ;; Hardware stack levels required when called:   17
 15042 ;; This function calls:
 15043 ;;		_getint
 15044 ;;		_getoff
 15045 ;; This function is called by:
 15046 ;;		_do_tzset
 15047 ;; This function uses a reentrant model
 15048 ;;
 15049                           
 15050                           	psect	text43
 15051  01B202                     __ptext43:
 15052                           	opt callstack 0
 15053  01B202                     _getrule:
 15054                           	opt callstack 0
 15055                           
 15056                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15057  01B202  52E6               	movf	postinc1,f,c
 15058  01B204  52E6               	movf	postinc1,f,c
 15059                           
 15060                           ;stkvar	_p @ sp[(-2)+-2]
 15061                           
 15062                           ;incstack = 0
 15063  01B206  0EFC               	movlw	-4
 15064  01B208  006F FF8F FFD9     	movff	plusw1,fsr2l
 15065  01B20E  0EFD               	movlw	-3
 15066  01B210  006F FF8F FFDA     	movff	plusw1,fsr2h
 15067  01B216  006F FF7B FFF6     	movff	postinc2,tblptrl
 15068  01B21C  006F FF77 FFF7     	movff	postdec2,tblptrh
 15069  01B222                     	if	0	;tblptru may be non-zero
 15070  01B222                     	endif
 15071  01B222                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15072  01B222  0E00               	movlw	low (__mediumconst shr (0+16))
 15073  01B224  6EF8               	movwf	tblptru,c
 15074  01B226                     	endif
 15075  01B226  0008               	tblrd		*
 15076  01B228  50F5               	movf	tablat,w,c
 15077  01B22A  6E0B               	movwf	(btemp+10)^0,c
 15078  01B22C  6A0C               	clrf	(btemp+11)^0,c
 15079                           
 15080                           ;stkvar	_rule @ sp[(-2)+-4]
 15081  01B22E  0EFA               	movlw	-6
 15082  01B230  006F FF8F FFD9     	movff	plusw1,fsr2l
 15083  01B236  0EFB               	movlw	-5
 15084  01B238  006F FF8F FFDA     	movff	plusw1,fsr2h
 15085  01B23E  0060  F02F  FFDE   	movff	btemp+10,postinc2
 15086  01B244  0060  F033  FFDD   	movff	btemp+11,postdec2
 15087  01B24A  006F FF78  F00B    	movff	postinc2,btemp+10
 15088  01B250  006F FF74  F00C    	movff	postdec2,btemp+11
 15089                           
 15090                           ;stkvar	_r @ sp[(-2)+0]
 15091  01B256  0EFE               	movlw	-2
 15092  01B258  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15093  01B25E  0EFF               	movlw	-1
 15094  01B260  0060  F033  FFE3   	movff	btemp+11,plusw1
 15095                           
 15096                           ;stkvar	_r @ sp[(-2)+0]
 15097  01B266  0EFE               	movlw	-2
 15098  01B268  006F FF8C  F001    	movff	plusw1,btemp
 15099  01B26E  0E4D               	movlw	77
 15100  01B270  1801               	xorwf	btemp^0,w,c
 15101  01B272  E104               	bnz	u15330
 15102  01B274  0EFF               	movlw	-1
 15103  01B276  50E3               	movf	plusw1,w,c
 15104  01B278  B4D8               	btfsc	status,2,c
 15105  01B27A  D036               	goto	l15883
 15106  01B27C                     u15330:
 15107                           
 15108                           ;stkvar	_r @ sp[(-2)+0]
 15109  01B27C  0EFE               	movlw	-2
 15110  01B27E  006F FF8C  F001    	movff	plusw1,btemp
 15111  01B284  0E4A               	movlw	74
 15112  01B286  1801               	xorwf	btemp^0,w,c
 15113  01B288  E110               	bnz	l15879
 15114  01B28A  0EFF               	movlw	-1
 15115  01B28C  50E3               	movf	plusw1,w,c
 15116  01B28E  A4D8               	btfss	status,2,c
 15117  01B290  D00C               	goto	l15879
 15118                           
 15119                           ;stkvar	_p @ sp[(-2)+-2]
 15120  01B292  0EFC               	movlw	-4
 15121  01B294  006F FF8F FFD9     	movff	plusw1,fsr2l
 15122  01B29A  0EFD               	movlw	-3
 15123  01B29C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15124  01B2A2  2ADE               	incf	postinc2,f,c
 15125  01B2A4  0E00               	movlw	0
 15126  01B2A6  22DD               	addwfc	postdec2,f,c
 15127  01B2A8  D00C               	goto	l15881
 15128  01B2AA                     l15879:
 15129                           
 15130                           ;stkvar	_rule @ sp[(-2)+-4]
 15131  01B2AA  0EFA               	movlw	-6
 15132  01B2AC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15133  01B2B2  0EFB               	movlw	-5
 15134  01B2B4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15135  01B2BA  0E00               	movlw	0
 15136  01B2BC  6EDE               	movwf	postinc2,c
 15137  01B2BE  0E00               	movlw	0
 15138  01B2C0  6EDD               	movwf	postdec2,c
 15139  01B2C2                     l15881:
 15140                           
 15141                           ;stkvar	_p @ sp[(-2)+-2]
 15142  01B2C2  0EFC               	movlw	-4
 15143  01B2C4  006F FF8F FFE6     	movff	plusw1,postinc1
 15144  01B2CA  006F FF8F FFE6     	movff	plusw1,postinc1
 15145  01B2D0  EC57  F0F9         	call	_getint	;wreg free
 15146                           
 15147                           ;stkvar	_rule @ sp[(-2)+-4]
 15148  01B2D4  0EFA               	movlw	-6
 15149  01B2D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 15150  01B2DC  0EFB               	movlw	-5
 15151  01B2DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 15152  01B2E4  0E02               	movlw	2
 15153  01B2E6  D06D               	goto	L15
 15154  01B2E8                     l15883:
 15155                           
 15156                           ;stkvar	_p @ sp[(-2)+-2]
 15157  01B2E8  0EFC               	movlw	-4
 15158  01B2EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15159  01B2F0  0EFD               	movlw	-3
 15160  01B2F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15161  01B2F8  2ADE               	incf	postinc2,f,c
 15162  01B2FA  0E00               	movlw	0
 15163  01B2FC  22DD               	addwfc	postdec2,f,c
 15164                           
 15165                           ;stkvar	_p @ sp[(-2)+-2]
 15166  01B2FE  0EFC               	movlw	-4
 15167  01B300  006F FF8F FFE6     	movff	plusw1,postinc1
 15168  01B306  006F FF8F FFE6     	movff	plusw1,postinc1
 15169  01B30C  EC57  F0F9         	call	_getint	;wreg free
 15170                           
 15171                           ;stkvar	_rule @ sp[(-2)+-4]
 15172  01B310  0EFA               	movlw	-6
 15173  01B312  006F FF8C  F00B    	movff	plusw1,btemp+10
 15174  01B318  0EFB               	movlw	-5
 15175  01B31A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15176  01B320  0E02               	movlw	2
 15177  01B322  240B               	addwf	(btemp+10)^0,w,c
 15178  01B324  6ED9               	movwf	fsr2l,c
 15179  01B326  0E00               	movlw	0
 15180  01B328  200C               	addwfc	(btemp+11)^0,w,c
 15181  01B32A  6EDA               	movwf	fsr2h,c
 15182  01B32C  0060  F007  FFDE   	movff	btemp,postinc2
 15183  01B332  0060  F00B  FFDD   	movff	btemp+1,postdec2
 15184                           
 15185                           ;stkvar	_p @ sp[(-2)+-2]
 15186  01B338  0EFC               	movlw	-4
 15187  01B33A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15188  01B340  0EFD               	movlw	-3
 15189  01B342  006F FF8F FFDA     	movff	plusw1,fsr2h
 15190  01B348  2ADE               	incf	postinc2,f,c
 15191  01B34A  0E00               	movlw	0
 15192  01B34C  22DD               	addwfc	postdec2,f,c
 15193                           
 15194                           ;stkvar	_p @ sp[(-2)+-2]
 15195  01B34E  0EFC               	movlw	-4
 15196  01B350  006F FF8F FFE6     	movff	plusw1,postinc1
 15197  01B356  006F FF8F FFE6     	movff	plusw1,postinc1
 15198  01B35C  EC57  F0F9         	call	_getint	;wreg free
 15199                           
 15200                           ;stkvar	_rule @ sp[(-2)+-4]
 15201  01B360  0EFA               	movlw	-6
 15202  01B362  006F FF8C  F00B    	movff	plusw1,btemp+10
 15203  01B368  0EFB               	movlw	-5
 15204  01B36A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15205  01B370  0E04               	movlw	4
 15206  01B372  240B               	addwf	(btemp+10)^0,w,c
 15207  01B374  6ED9               	movwf	fsr2l,c
 15208  01B376  0E00               	movlw	0
 15209  01B378  200C               	addwfc	(btemp+11)^0,w,c
 15210  01B37A  6EDA               	movwf	fsr2h,c
 15211  01B37C  0060  F007  FFDE   	movff	btemp,postinc2
 15212  01B382  0060  F00B  FFDD   	movff	btemp+1,postdec2
 15213                           
 15214                           ;stkvar	_p @ sp[(-2)+-2]
 15215  01B388  0EFC               	movlw	-4
 15216  01B38A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15217  01B390  0EFD               	movlw	-3
 15218  01B392  006F FF8F FFDA     	movff	plusw1,fsr2h
 15219  01B398  2ADE               	incf	postinc2,f,c
 15220  01B39A  0E00               	movlw	0
 15221  01B39C  22DD               	addwfc	postdec2,f,c
 15222                           
 15223                           ;stkvar	_p @ sp[(-2)+-2]
 15224  01B39E  0EFC               	movlw	-4
 15225  01B3A0  006F FF8F FFE6     	movff	plusw1,postinc1
 15226  01B3A6  006F FF8F FFE6     	movff	plusw1,postinc1
 15227  01B3AC  EC57  F0F9         	call	_getint	;wreg free
 15228                           
 15229                           ;stkvar	_rule @ sp[(-2)+-4]
 15230  01B3B0  0EFA               	movlw	-6
 15231  01B3B2  006F FF8C  F00B    	movff	plusw1,btemp+10
 15232  01B3B8  0EFB               	movlw	-5
 15233  01B3BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 15234  01B3C0  0E06               	movlw	6
 15235  01B3C2                     L15:
 15236  01B3C2  240B               	addwf	(btemp+10)^0,w,c
 15237  01B3C4  6ED9               	movwf	fsr2l,c
 15238  01B3C6  0E00               	movlw	0
 15239  01B3C8  200C               	addwfc	(btemp+11)^0,w,c
 15240  01B3CA  6EDA               	movwf	fsr2h,c
 15241  01B3CC  0060  F007  FFDE   	movff	btemp,postinc2
 15242  01B3D2  0060  F00B  FFDD   	movff	btemp+1,postdec2
 15243                           
 15244                           ;stkvar	_p @ sp[(-2)+-2]
 15245  01B3D8  0EFC               	movlw	-4
 15246  01B3DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 15247  01B3E0  0EFD               	movlw	-3
 15248  01B3E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15249  01B3E8  006F FF7B FFF6     	movff	postinc2,tblptrl
 15250  01B3EE  006F FF77 FFF7     	movff	postdec2,tblptrh
 15251  01B3F4                     	if	0	;tblptru may be non-zero
 15252  01B3F4                     	endif
 15253  01B3F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15254  01B3F4  0E00               	movlw	low (__mediumconst shr (0+16))
 15255  01B3F6  6EF8               	movwf	tblptru,c
 15256  01B3F8                     	endif
 15257  01B3F8  0008               	tblrd		*
 15258  01B3FA  50F5               	movf	tablat,w,c
 15259  01B3FC  0A2F               	xorlw	47
 15260  01B3FE  A4D8               	btfss	status,2,c
 15261  01B400  D029               	goto	l15899
 15262                           
 15263                           ;stkvar	_p @ sp[(-2)+-2]
 15264  01B402  0EFC               	movlw	-4
 15265  01B404  006F FF8F FFD9     	movff	plusw1,fsr2l
 15266  01B40A  0EFD               	movlw	-3
 15267  01B40C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15268  01B412  2ADE               	incf	postinc2,f,c
 15269  01B414  0E00               	movlw	0
 15270  01B416  22DD               	addwfc	postdec2,f,c
 15271                           
 15272                           ;stkvar	_p @ sp[(-2)+-2]
 15273  01B418  0EFC               	movlw	-4
 15274  01B41A  006F FF8F FFE6     	movff	plusw1,postinc1
 15275  01B420  006F FF8F FFE6     	movff	plusw1,postinc1
 15276  01B426  EC31  F0E0         	call	_getoff	;wreg free
 15277                           
 15278                           ;stkvar	_rule @ sp[(-2)+-4]
 15279  01B42A  0EFA               	movlw	-6
 15280  01B42C  006F FF8C  F00B    	movff	plusw1,btemp+10
 15281  01B432  0EFB               	movlw	-5
 15282  01B434  006F FF8C  F00C    	movff	plusw1,btemp+11
 15283  01B43A  0E08               	movlw	8
 15284  01B43C  240B               	addwf	(btemp+10)^0,w,c
 15285  01B43E  6ED9               	movwf	fsr2l,c
 15286  01B440  0E00               	movlw	0
 15287  01B442  200C               	addwfc	(btemp+11)^0,w,c
 15288  01B444  6EDA               	movwf	fsr2h,c
 15289  01B446  0060  F007  FFDE   	movff	btemp,postinc2
 15290  01B44C  0060  F00B  FFDD   	movff	btemp+1,postdec2
 15291  01B452  D012               	goto	l3925
 15292  01B454                     l15899:
 15293                           
 15294                           ;stkvar	_rule @ sp[(-2)+-4]
 15295  01B454  0EFA               	movlw	-6
 15296  01B456  006F FF8C  F00B    	movff	plusw1,btemp+10
 15297  01B45C  0EFB               	movlw	-5
 15298  01B45E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15299  01B464  0E08               	movlw	8
 15300  01B466  240B               	addwf	(btemp+10)^0,w,c
 15301  01B468  6ED9               	movwf	fsr2l,c
 15302  01B46A  0E00               	movlw	0
 15303  01B46C  200C               	addwfc	(btemp+11)^0,w,c
 15304  01B46E  6EDA               	movwf	fsr2h,c
 15305  01B470  0E20               	movlw	32
 15306  01B472  6EDE               	movwf	postinc2,c
 15307  01B474  0E1C               	movlw	28
 15308  01B476  6EDD               	movwf	postdec2,c
 15309  01B478                     l3925:
 15310                           
 15311                           ; _getrule: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15312  01B478  0EFA               	movlw	250
 15313  01B47A  26E1               	addwf	fsr1l,f,c
 15314  01B47C  0EFF               	movlw	255
 15315  01B47E  22E2               	addwfc	fsr1h,f,c
 15316  01B480  0012               	return		;funcret
 15317  01B482                     __end_of_getrule:
 15318                           	opt callstack 0
 15319                           
 15320 ;; *************** function _getoff *****************
 15321 ;; Defined at:
 15322 ;;		line 39 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15323 ;; Parameters:    Size  Location     Type
 15324 ;;  p               2  [STACK] PTR PTR const unsigned c
 15325 ;;		 -> s(2), 
 15326 ;; Auto vars:     Size  Location     Type
 15327 ;;  off             2  [STACK] int 
 15328 ;;  neg             2  [STACK] int 
 15329 ;; Return value:  Size  Location     Type
 15330 ;;                  2  [STACK] int 
 15331 ;; Registers used:
 15332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15333 ;; Tracked objects:
 15334 ;;		On entry : 0/0
 15335 ;;		On exit  : 0/0
 15336 ;;		Unchanged: 0/0
 15337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15342 ;;Total ram usage:        0 bytes
 15343 ;; Hardware stack levels used:    1
 15344 ;; Hardware stack levels required when called:   16
 15345 ;; This function calls:
 15346 ;;		_getint
 15347 ;; This function is called by:
 15348 ;;		_getrule
 15349 ;;		_do_tzset
 15350 ;; This function uses a reentrant model
 15351 ;;
 15352                           
 15353                           	psect	text44
 15354  01C062                     __ptext44:
 15355                           	opt callstack 0
 15356  01C062                     _getoff:
 15357                           	opt callstack 0
 15358                           
 15359                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15360  01C062  52E6               	movf	postinc1,f,c
 15361  01C064  52E6               	movf	postinc1,f,c
 15362  01C066  52E6               	movf	postinc1,f,c
 15363  01C068  52E6               	movf	postinc1,f,c
 15364                           
 15365                           ;stkvar	_neg @ sp[(-4)+2]
 15366                           
 15367                           ;incstack = 0
 15368  01C06A  0EFE               	movlw	-2
 15369  01C06C  6AE3               	clrf	plusw1,c
 15370  01C06E  0EFF               	movlw	-1
 15371  01C070  6AE3               	clrf	plusw1,c
 15372                           
 15373                           ;stkvar	_p @ sp[(-4)+-2]
 15374  01C072  0EFA               	movlw	-6
 15375  01C074  006F FF8F FFD9     	movff	plusw1,fsr2l
 15376  01C07A  0EFB               	movlw	-5
 15377  01C07C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15378  01C082  006F FF7B FFF6     	movff	postinc2,tblptrl
 15379  01C088  006F FF77 FFF7     	movff	postdec2,tblptrh
 15380  01C08E                     	if	0	;tblptru may be non-zero
 15381  01C08E                     	endif
 15382  01C08E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15383  01C08E  0E00               	movlw	low (__mediumconst shr (0+16))
 15384  01C090  6EF8               	movwf	tblptru,c
 15385  01C092                     	endif
 15386  01C092  0008               	tblrd		*
 15387  01C094  50F5               	movf	tablat,w,c
 15388  01C096  0A2D               	xorlw	45
 15389  01C098  A4D8               	btfss	status,2,c
 15390  01C09A  D018               	goto	l10791
 15391                           
 15392                           ;stkvar	_p @ sp[(-4)+-2]
 15393  01C09C  0EFA               	movlw	-6
 15394  01C09E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15395  01C0A4  0EFB               	movlw	-5
 15396  01C0A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15397  01C0AC  2ADE               	incf	postinc2,f,c
 15398  01C0AE  0E00               	movlw	0
 15399  01C0B0  22DD               	addwfc	postdec2,f,c
 15400  01C0B2  0E01               	movlw	1
 15401  01C0B4  6E0B               	movwf	(btemp+10)^0,c
 15402  01C0B6  0E00               	movlw	0
 15403  01C0B8  6E0C               	movwf	(btemp+11)^0,c
 15404                           
 15405                           ;stkvar	_neg @ sp[(-4)+2]
 15406  01C0BA  0EFE               	movlw	-2
 15407  01C0BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15408  01C0C2  0EFF               	movlw	-1
 15409  01C0C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15410  01C0CA  D020               	goto	l10795
 15411  01C0CC                     l10791:
 15412                           
 15413                           ;stkvar	_p @ sp[(-4)+-2]
 15414  01C0CC  0EFA               	movlw	-6
 15415  01C0CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15416  01C0D4  0EFB               	movlw	-5
 15417  01C0D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15418  01C0DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 15419  01C0E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 15420  01C0E8                     	if	0	;tblptru may be non-zero
 15421  01C0E8                     	endif
 15422  01C0E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15423  01C0E8  0E00               	movlw	low (__mediumconst shr (0+16))
 15424  01C0EA  6EF8               	movwf	tblptru,c
 15425  01C0EC                     	endif
 15426  01C0EC  0008               	tblrd		*
 15427  01C0EE  50F5               	movf	tablat,w,c
 15428  01C0F0  0A2B               	xorlw	43
 15429  01C0F2  A4D8               	btfss	status,2,c
 15430  01C0F4  D00B               	goto	l10795
 15431                           
 15432                           ;stkvar	_p @ sp[(-4)+-2]
 15433  01C0F6  0EFA               	movlw	-6
 15434  01C0F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15435  01C0FE  0EFB               	movlw	-5
 15436  01C100  006F FF8F FFDA     	movff	plusw1,fsr2h
 15437  01C106  2ADE               	incf	postinc2,f,c
 15438  01C108  0E00               	movlw	0
 15439  01C10A  22DD               	addwfc	postdec2,f,c
 15440  01C10C                     l10795:
 15441                           
 15442                           ;stkvar	_p @ sp[(-4)+-2]
 15443  01C10C  0EFA               	movlw	-6
 15444  01C10E  006F FF8F FFE6     	movff	plusw1,postinc1
 15445  01C114  006F FF8F FFE6     	movff	plusw1,postinc1
 15446  01C11A  EC57  F0F9         	call	_getint	;wreg free
 15447  01C11E  0060  F004  F00B   	movff	btemp,btemp+10
 15448  01C124  0060  F008  F00C   	movff	btemp+1,btemp+11
 15449  01C12A  0E10               	movlw	16
 15450  01C12C  020B               	mulwf	(btemp+10)^0,c
 15451  01C12E  006F FFCC  F009    	movff	prodl,btemp+8
 15452  01C134  006F FFD0  F00A    	movff	prodh,btemp+9
 15453  01C13A  020C               	mulwf	(btemp+11)^0,c
 15454  01C13C  50F3               	movf	prodl,w,c
 15455  01C13E  260A               	addwf	(btemp+9)^0,f,c
 15456  01C140  0E0E               	movlw	14
 15457  01C142  020B               	mulwf	(btemp+10)^0,c
 15458  01C144  50F3               	movf	prodl,w,c
 15459  01C146  260A               	addwf	(btemp+9)^0,f,c
 15460                           
 15461                           ;stkvar	_off @ sp[(-4)+0]
 15462  01C148  0EFC               	movlw	-4
 15463  01C14A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15464  01C150  0EFD               	movlw	-3
 15465  01C152  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15466                           
 15467                           ;stkvar	_p @ sp[(-4)+-2]
 15468  01C158  0EFA               	movlw	-6
 15469  01C15A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15470  01C160  0EFB               	movlw	-5
 15471  01C162  006F FF8F FFDA     	movff	plusw1,fsr2h
 15472  01C168  006F FF7B FFF6     	movff	postinc2,tblptrl
 15473  01C16E  006F FF77 FFF7     	movff	postdec2,tblptrh
 15474  01C174                     	if	0	;tblptru may be non-zero
 15475  01C174                     	endif
 15476  01C174                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15477  01C174  0E00               	movlw	low (__mediumconst shr (0+16))
 15478  01C176  6EF8               	movwf	tblptru,c
 15479  01C178                     	endif
 15480  01C178  0008               	tblrd		*
 15481  01C17A  50F5               	movf	tablat,w,c
 15482  01C17C  0A3A               	xorlw	58
 15483  01C17E  A4D8               	btfss	status,2,c
 15484  01C180  D064               	goto	l10809
 15485                           
 15486                           ;stkvar	_p @ sp[(-4)+-2]
 15487  01C182  0EFA               	movlw	-6
 15488  01C184  006F FF8F FFD9     	movff	plusw1,fsr2l
 15489  01C18A  0EFB               	movlw	-5
 15490  01C18C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15491  01C192  2ADE               	incf	postinc2,f,c
 15492  01C194  0E00               	movlw	0
 15493  01C196  22DD               	addwfc	postdec2,f,c
 15494                           
 15495                           ;stkvar	_p @ sp[(-4)+-2]
 15496  01C198  0EFA               	movlw	-6
 15497  01C19A  006F FF8F FFE6     	movff	plusw1,postinc1
 15498  01C1A0  006F FF8F FFE6     	movff	plusw1,postinc1
 15499  01C1A6  EC57  F0F9         	call	_getint	;wreg free
 15500  01C1AA  0060  F004  F00B   	movff	btemp,btemp+10
 15501  01C1B0  0060  F008  F00C   	movff	btemp+1,btemp+11
 15502  01C1B6  0E3C               	movlw	60
 15503  01C1B8  020B               	mulwf	(btemp+10)^0,c
 15504  01C1BA  006F FFCC  F009    	movff	prodl,btemp+8
 15505  01C1C0  006F FFD0  F00A    	movff	prodh,btemp+9
 15506  01C1C6  020C               	mulwf	(btemp+11)^0,c
 15507  01C1C8  50F3               	movf	prodl,w,c
 15508  01C1CA  260A               	addwf	(btemp+9)^0,f,c
 15509                           
 15510                           ;stkvar	_off @ sp[(-4)+0]
 15511  01C1CC  50E1               	movf	fsr1l,w,c
 15512  01C1CE  0FFC               	addlw	-4
 15513  01C1D0  6ED9               	movwf	fsr2l,c
 15514  01C1D2  50E2               	movf	fsr1h,w,c
 15515  01C1D4  6EDA               	movwf	fsr2h,c
 15516  01C1D6  0EFF               	movlw	255
 15517  01C1D8  22DA               	addwfc	fsr2h,f,c
 15518  01C1DA  5009               	movf	(btemp+8)^0,w,c
 15519  01C1DC  26DE               	addwf	postinc2,f,c
 15520  01C1DE  500A               	movf	(btemp+9)^0,w,c
 15521  01C1E0  22DD               	addwfc	postdec2,f,c
 15522                           
 15523                           ;stkvar	_p @ sp[(-4)+-2]
 15524  01C1E2  0EFA               	movlw	-6
 15525  01C1E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 15526  01C1EA  0EFB               	movlw	-5
 15527  01C1EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 15528  01C1F2  006F FF7B FFF6     	movff	postinc2,tblptrl
 15529  01C1F8  006F FF77 FFF7     	movff	postdec2,tblptrh
 15530  01C1FE                     	if	0	;tblptru may be non-zero
 15531  01C1FE                     	endif
 15532  01C1FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15533  01C1FE  0E00               	movlw	low (__mediumconst shr (0+16))
 15534  01C200  6EF8               	movwf	tblptru,c
 15535  01C202                     	endif
 15536  01C202  0008               	tblrd		*
 15537  01C204  50F5               	movf	tablat,w,c
 15538  01C206  0A3A               	xorlw	58
 15539  01C208  A4D8               	btfss	status,2,c
 15540  01C20A  D01F               	goto	l10809
 15541                           
 15542                           ;stkvar	_p @ sp[(-4)+-2]
 15543  01C20C  0EFA               	movlw	-6
 15544  01C20E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15545  01C214  0EFB               	movlw	-5
 15546  01C216  006F FF8F FFDA     	movff	plusw1,fsr2h
 15547  01C21C  2ADE               	incf	postinc2,f,c
 15548  01C21E  0E00               	movlw	0
 15549  01C220  22DD               	addwfc	postdec2,f,c
 15550                           
 15551                           ;stkvar	_p @ sp[(-4)+-2]
 15552  01C222  0EFA               	movlw	-6
 15553  01C224  006F FF8F FFE6     	movff	plusw1,postinc1
 15554  01C22A  006F FF8F FFE6     	movff	plusw1,postinc1
 15555  01C230  EC57  F0F9         	call	_getint	;wreg free
 15556                           
 15557                           ;stkvar	_off @ sp[(-4)+0]
 15558  01C234  50E1               	movf	fsr1l,w,c
 15559  01C236  0FFC               	addlw	-4
 15560  01C238  6ED9               	movwf	fsr2l,c
 15561  01C23A  50E2               	movf	fsr1h,w,c
 15562  01C23C  6EDA               	movwf	fsr2h,c
 15563  01C23E  0EFF               	movlw	255
 15564  01C240  22DA               	addwfc	fsr2h,f,c
 15565  01C242  5001               	movf	btemp^0,w,c
 15566  01C244  26DE               	addwf	postinc2,f,c
 15567  01C246  5002               	movf	(btemp+1)^0,w,c
 15568  01C248  22DD               	addwfc	postdec2,f,c
 15569  01C24A                     l10809:
 15570                           
 15571                           ;stkvar	_neg @ sp[(-4)+2]
 15572  01C24A  0EFE               	movlw	-2
 15573  01C24C  006F FF8C  F001    	movff	plusw1,btemp
 15574  01C252  0EFF               	movlw	-1
 15575  01C254  50E3               	movf	plusw1,w,c
 15576  01C256  1001               	iorwf	btemp^0,w,c
 15577  01C258  A4D8               	btfss	status,2,c
 15578  01C25A  D009               	goto	l10813
 15579                           
 15580                           ;stkvar	_off @ sp[(-4)+0]
 15581  01C25C  0EFC               	movlw	-4
 15582  01C25E  006F FF8C  F001    	movff	plusw1,btemp
 15583  01C264  0EFD               	movlw	-3
 15584  01C266  006F FF8C  F002    	movff	plusw1,btemp+1
 15585  01C26C  D00D               	goto	l3916
 15586  01C26E                     l10813:
 15587                           
 15588                           ;stkvar	_off @ sp[(-4)+0]
 15589  01C26E  0EFC               	movlw	-4
 15590  01C270  006F FF8C  F001    	movff	plusw1,btemp
 15591  01C276  1E01               	comf	btemp^0,f,c
 15592  01C278  0EFD               	movlw	-3
 15593  01C27A  006F FF8C  F002    	movff	plusw1,btemp+1
 15594  01C280  1E02               	comf	(btemp+1)^0,f,c
 15595  01C282  2A01               	incf	btemp^0,f,c
 15596  01C284  B4D8               	btfsc	status,2,c
 15597  01C286  2A02               	incf	(btemp+1)^0,f,c
 15598  01C288                     l3916:
 15599                           
 15600                           ; _getoff: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 15601  01C288  0EFA               	movlw	250
 15602  01C28A  26E1               	addwf	fsr1l,f,c
 15603  01C28C  0EFF               	movlw	255
 15604  01C28E  22E2               	addwfc	fsr1h,f,c
 15605  01C290  0012               	return		;funcret
 15606  01C292                     __end_of_getoff:
 15607                           	opt callstack 0
 15608                           
 15609 ;; *************** function _getint *****************
 15610 ;; Defined at:
 15611 ;;		line 32 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15612 ;; Parameters:    Size  Location     Type
 15613 ;;  p               2  [STACK] PTR PTR const unsigned c
 15614 ;;		 -> s(2), 
 15615 ;; Auto vars:     Size  Location     Type
 15616 ;;  x               2  [STACK] unsigned int 
 15617 ;; Return value:  Size  Location     Type
 15618 ;;                  2  [STACK] int 
 15619 ;; Registers used:
 15620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15621 ;; Tracked objects:
 15622 ;;		On entry : 0/0
 15623 ;;		On exit  : 0/0
 15624 ;;		Unchanged: 0/0
 15625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15630 ;;Total ram usage:        0 bytes
 15631 ;; Hardware stack levels used:    1
 15632 ;; Hardware stack levels required when called:   15
 15633 ;; This function calls:
 15634 ;;		Nothing
 15635 ;; This function is called by:
 15636 ;;		_getoff
 15637 ;;		_getrule
 15638 ;; This function uses a reentrant model
 15639 ;;
 15640                           
 15641                           	psect	text45
 15642  01F2AE                     __ptext45:
 15643                           	opt callstack 0
 15644  01F2AE                     _getint:
 15645                           	opt callstack 0
 15646                           
 15647                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15648  01F2AE  52E6               	movf	postinc1,f,c
 15649  01F2B0  52E6               	movf	postinc1,f,c
 15650                           
 15651                           ;stkvar	_x @ sp[(-2)+0]
 15652                           
 15653                           ;incstack = 0
 15654  01F2B2  0EFE               	movlw	-2
 15655  01F2B4  6AE3               	clrf	plusw1,c
 15656  01F2B6  0EFF               	movlw	-1
 15657  01F2B8  6AE3               	clrf	plusw1,c
 15658  01F2BA  D043               	goto	l9947
 15659  01F2BC                     l9943:
 15660  01F2BC  0ED0               	movlw	208
 15661  01F2BE  6E0B               	movwf	(btemp+10)^0,c
 15662  01F2C0  0EFF               	movlw	255
 15663  01F2C2  6E0C               	movwf	(btemp+11)^0,c
 15664                           
 15665                           ;stkvar	_x @ sp[(-2)+0]
 15666  01F2C4  0EFE               	movlw	-2
 15667  01F2C6  006F FF8C  F009    	movff	plusw1,btemp+8
 15668  01F2CC  0EFF               	movlw	-1
 15669  01F2CE  006F FF8C  F00A    	movff	plusw1,btemp+9
 15670  01F2D4  0E0A               	movlw	10
 15671  01F2D6  0209               	mulwf	(btemp+8)^0,c
 15672  01F2D8  006F FFCC  F007    	movff	prodl,btemp+6
 15673  01F2DE  006F FFD0  F008    	movff	prodh,btemp+7
 15674  01F2E4  020A               	mulwf	(btemp+9)^0,c
 15675  01F2E6  50F3               	movf	prodl,w,c
 15676  01F2E8  2608               	addwf	(btemp+7)^0,f,c
 15677                           
 15678                           ;stkvar	_p @ sp[(-2)+-2]
 15679  01F2EA  0EFC               	movlw	-4
 15680  01F2EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15681  01F2F2  0EFD               	movlw	-3
 15682  01F2F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15683  01F2FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 15684  01F300  006F FF77 FFF7     	movff	postdec2,tblptrh
 15685  01F306                     	if	0	;tblptru may be non-zero
 15686  01F306                     	endif
 15687  01F306                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15688  01F306  0E00               	movlw	low (__mediumconst shr (0+16))
 15689  01F308  6EF8               	movwf	tblptru,c
 15690  01F30A                     	endif
 15691  01F30A  0008               	tblrd		*
 15692  01F30C  50F5               	movf	tablat,w,c
 15693  01F30E  2607               	addwf	(btemp+6)^0,f,c
 15694  01F310  0E00               	movlw	0
 15695  01F312  2208               	addwfc	(btemp+7)^0,f,c
 15696  01F314  500B               	movf	(btemp+10)^0,w,c
 15697  01F316  2607               	addwf	(btemp+6)^0,f,c
 15698  01F318  500C               	movf	(btemp+11)^0,w,c
 15699  01F31A  2208               	addwfc	(btemp+7)^0,f,c
 15700                           
 15701                           ;stkvar	_x @ sp[(-2)+0]
 15702  01F31C  0EFE               	movlw	-2
 15703  01F31E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 15704  01F324  0EFF               	movlw	-1
 15705  01F326  0060  F023  FFE3   	movff	btemp+7,plusw1
 15706                           
 15707                           ;stkvar	_p @ sp[(-2)+-2]
 15708  01F32C  0EFC               	movlw	-4
 15709  01F32E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15710  01F334  0EFD               	movlw	-3
 15711  01F336  006F FF8F FFDA     	movff	plusw1,fsr2h
 15712  01F33C  2ADE               	incf	postinc2,f,c
 15713  01F33E  0E00               	movlw	0
 15714  01F340  22DD               	addwfc	postdec2,f,c
 15715  01F342                     l9947:
 15716  01F342  0ED0               	movlw	208
 15717  01F344  6E0B               	movwf	(btemp+10)^0,c
 15718  01F346  0EFF               	movlw	255
 15719  01F348  6E0C               	movwf	(btemp+11)^0,c
 15720                           
 15721                           ;stkvar	_p @ sp[(-2)+-2]
 15722  01F34A  0EFC               	movlw	-4
 15723  01F34C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15724  01F352  0EFD               	movlw	-3
 15725  01F354  006F FF8F FFDA     	movff	plusw1,fsr2h
 15726  01F35A  006F FF7B FFF6     	movff	postinc2,tblptrl
 15727  01F360  006F FF77 FFF7     	movff	postdec2,tblptrh
 15728  01F366                     	if	0	;tblptru may be non-zero
 15729  01F366                     	endif
 15730  01F366                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15731  01F366  0E00               	movlw	low (__mediumconst shr (0+16))
 15732  01F368  6EF8               	movwf	tblptru,c
 15733  01F36A                     	endif
 15734  01F36A  0008               	tblrd		*
 15735  01F36C  50F5               	movf	tablat,w,c
 15736  01F36E  6E09               	movwf	(btemp+8)^0,c
 15737  01F370  6A0A               	clrf	(btemp+9)^0,c
 15738  01F372  500B               	movf	(btemp+10)^0,w,c
 15739  01F374  2609               	addwf	(btemp+8)^0,f,c
 15740  01F376  500C               	movf	(btemp+11)^0,w,c
 15741  01F378  220A               	addwfc	(btemp+9)^0,f,c
 15742  01F37A  500A               	movf	(btemp+9)^0,w,c
 15743  01F37C  E104               	bnz	u7590
 15744  01F37E  0E0A               	movlw	10
 15745  01F380  5C09               	subwf	(btemp+8)^0,w,c
 15746  01F382  A0D8               	btfss	status,0,c
 15747  01F384  D79B               	goto	l9943
 15748  01F386                     u7590:
 15749                           
 15750                           ;stkvar	_x @ sp[(-2)+0]
 15751  01F386  0EFE               	movlw	-2
 15752  01F388  006F FF8C  F001    	movff	plusw1,btemp
 15753  01F38E  0EFF               	movlw	-1
 15754  01F390  006F FF8C  F002    	movff	plusw1,btemp+1
 15755                           
 15756                           ; _getint: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 15757  01F396  52E5               	movf	postdec1,f,c
 15758  01F398  52E5               	movf	postdec1,f,c
 15759  01F39A  52E5               	movf	postdec1,f,c
 15760  01F39C  52E5               	movf	postdec1,f,c
 15761  01F39E  0012               	return		;funcret
 15762  01F3A0                     __end_of_getint:
 15763                           	opt callstack 0
 15764                           
 15765 ;; *************** function _getname *****************
 15766 ;; Defined at:
 15767 ;;		line 82 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__tz.c"
 15768 ;; Parameters:    Size  Location     Type
 15769 ;;  d               2  [STACK] PTR unsigned char 
 15770 ;;		 -> dst_name(7), std_name(7), 
 15771 ;;  p               2  [STACK] PTR PTR const unsigned c
 15772 ;;		 -> s(2), 
 15773 ;; Auto vars:     Size  Location     Type
 15774 ;;  i               2  [STACK] int 
 15775 ;; Return value:  Size  Location     Type
 15776 ;;                  1  [STACK] void 
 15777 ;; Registers used:
 15778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11,
      + tblptrl, tblptrh, tblptru
 15779 ;; Tracked objects:
 15780 ;;		On entry : 0/39
 15781 ;;		On exit  : 0/0
 15782 ;;		Unchanged: 0/0
 15783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15788 ;;Total ram usage:        0 bytes
 15789 ;; Hardware stack levels used:    1
 15790 ;; Hardware stack levels required when called:   15
 15791 ;; This function calls:
 15792 ;;		Nothing
 15793 ;; This function is called by:
 15794 ;;		_do_tzset
 15795 ;; This function uses a reentrant model
 15796 ;;
 15797                           
 15798                           	psect	text46
 15799  01A404                     __ptext46:
 15800                           	opt callstack 0
 15801  01A404                     _getname:
 15802                           	opt callstack 0
 15803                           
 15804                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15805  01A404  52E6               	movf	postinc1,f,c
 15806  01A406  52E6               	movf	postinc1,f,c
 15807                           
 15808                           ;stkvar	_p @ sp[(-2)+-4]
 15809                           
 15810                           ;incstack = 0
 15811  01A408  0EFA               	movlw	-6
 15812  01A40A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15813  01A410  0EFB               	movlw	-5
 15814  01A412  006F FF8F FFDA     	movff	plusw1,fsr2h
 15815  01A418  006F FF7B FFF6     	movff	postinc2,tblptrl
 15816  01A41E  006F FF77 FFF7     	movff	postdec2,tblptrh
 15817  01A424                     	if	0	;tblptru may be non-zero
 15818  01A424                     	endif
 15819  01A424                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15820  01A424  0E00               	movlw	low (__mediumconst shr (0+16))
 15821  01A426  6EF8               	movwf	tblptru,c
 15822  01A428                     	endif
 15823  01A428  0008               	tblrd		*
 15824  01A42A  50F5               	movf	tablat,w,c
 15825  01A42C  0A3C               	xorlw	60
 15826  01A42E  A4D8               	btfss	status,2,c
 15827  01A430  D09E               	goto	l15917
 15828                           
 15829                           ;stkvar	_p @ sp[(-2)+-4]
 15830  01A432  0EFA               	movlw	-6
 15831  01A434  006F FF8F FFD9     	movff	plusw1,fsr2l
 15832  01A43A  0EFB               	movlw	-5
 15833  01A43C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15834  01A442  2ADE               	incf	postinc2,f,c
 15835  01A444  0E00               	movlw	0
 15836  01A446  22DD               	addwfc	postdec2,f,c
 15837                           
 15838                           ;stkvar	_i @ sp[(-2)+0]
 15839  01A448  0EFE               	movlw	-2
 15840  01A44A  6AE3               	clrf	plusw1,c
 15841  01A44C  0EFF               	movlw	-1
 15842  01A44E  6AE3               	clrf	plusw1,c
 15843  01A450  D04D               	goto	l15911
 15844  01A452                     l15907:
 15845                           
 15846                           ;stkvar	_i @ sp[(-2)+0]
 15847  01A452  0EFE               	movlw	-2
 15848  01A454  006F FF8C  F00B    	movff	plusw1,btemp+10
 15849  01A45A  0EFF               	movlw	-1
 15850  01A45C  006F FF8C  F00C    	movff	plusw1,btemp+11
 15851                           
 15852                           ;stkvar	_p @ sp[(-2)+-4]
 15853  01A462  0EFA               	movlw	-6
 15854  01A464  006F FF8F FFD9     	movff	plusw1,fsr2l
 15855  01A46A  0EFB               	movlw	-5
 15856  01A46C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15857  01A472  006F FF78  F009    	movff	postinc2,btemp+8
 15858  01A478  006F FF74  F00A    	movff	postdec2,btemp+9
 15859  01A47E  500B               	movf	(btemp+10)^0,w,c
 15860  01A480  2609               	addwf	(btemp+8)^0,f,c
 15861  01A482  500C               	movf	(btemp+11)^0,w,c
 15862  01A484  220A               	addwfc	(btemp+9)^0,f,c
 15863  01A486  0060  F027  FFF6   	movff	btemp+8,tblptrl
 15864  01A48C  0060  F02B  FFF7   	movff	btemp+9,tblptrh
 15865  01A492                     	if	0	;tblptru may be non-zero
 15866  01A492                     	endif
 15867  01A492                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15868  01A492  0E00               	movlw	low (__mediumconst shr (0+16))
 15869  01A494  6EF8               	movwf	tblptru,c
 15870  01A496                     	endif
 15871                           
 15872                           ;stkvar	_i @ sp[(-2)+0]
 15873  01A496  0EFE               	movlw	-2
 15874  01A498  006F FF8C  F00B    	movff	plusw1,btemp+10
 15875  01A49E  0EFF               	movlw	-1
 15876  01A4A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 15877                           
 15878                           ;stkvar	_d @ sp[(-2)+-2]
 15879  01A4A6  0EFC               	movlw	-4
 15880  01A4A8  006F FF8C  F009    	movff	plusw1,btemp+8
 15881  01A4AE  0EFD               	movlw	-3
 15882  01A4B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 15883  01A4B6  500B               	movf	(btemp+10)^0,w,c
 15884  01A4B8  2409               	addwf	(btemp+8)^0,w,c
 15885  01A4BA  6ED9               	movwf	fsr2l,c
 15886  01A4BC  500C               	movf	(btemp+11)^0,w,c
 15887  01A4BE  200A               	addwfc	(btemp+9)^0,w,c
 15888  01A4C0  6EDA               	movwf	fsr2h,c
 15889  01A4C2  0008               	tblrd		*
 15890  01A4C4  006F FFD7 FFDF     	movff	tablat,indf2
 15891                           
 15892                           ;stkvar	_i @ sp[(-2)+0]
 15893  01A4CA  0EFE               	movlw	-2
 15894  01A4CC  50E3               	movf	plusw1,w,c
 15895  01A4CE  0F01               	addlw	1
 15896  01A4D0  6E01               	movwf	btemp^0,c
 15897  01A4D2  0EFE               	movlw	-2
 15898  01A4D4  0060  F007  FFE3   	movff	btemp,plusw1
 15899  01A4DA  6A01               	clrf	btemp^0,c
 15900  01A4DC  0EFF               	movlw	-1
 15901  01A4DE  50E3               	movf	plusw1,w,c
 15902  01A4E0  2001               	addwfc	btemp^0,w,c
 15903  01A4E2  6E01               	movwf	btemp^0,c
 15904  01A4E4  0EFF               	movlw	-1
 15905  01A4E6  0060  F007  FFE3   	movff	btemp,plusw1
 15906  01A4EC                     l15911:
 15907                           
 15908                           ;stkvar	_i @ sp[(-2)+0]
 15909  01A4EC  0EFE               	movlw	-2
 15910  01A4EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 15911  01A4F4  0EFF               	movlw	-1
 15912  01A4F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 15913                           
 15914                           ;stkvar	_p @ sp[(-2)+-4]
 15915  01A4FC  0EFA               	movlw	-6
 15916  01A4FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15917  01A504  0EFB               	movlw	-5
 15918  01A506  006F FF8F FFDA     	movff	plusw1,fsr2h
 15919  01A50C  006F FF78  F009    	movff	postinc2,btemp+8
 15920  01A512  006F FF74  F00A    	movff	postdec2,btemp+9
 15921  01A518  500B               	movf	(btemp+10)^0,w,c
 15922  01A51A  2609               	addwf	(btemp+8)^0,f,c
 15923  01A51C  500C               	movf	(btemp+11)^0,w,c
 15924  01A51E  220A               	addwfc	(btemp+9)^0,f,c
 15925  01A520  0060  F027  FFF6   	movff	btemp+8,tblptrl
 15926  01A526  0060  F02B  FFF7   	movff	btemp+9,tblptrh
 15927  01A52C                     	if	0	;tblptru may be non-zero
 15928  01A52C                     	endif
 15929  01A52C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15930  01A52C  0E00               	movlw	low (__mediumconst shr (0+16))
 15931  01A52E  6EF8               	movwf	tblptru,c
 15932  01A530                     	endif
 15933  01A530  0008               	tblrd		*
 15934  01A532  50F5               	movf	tablat,w,c
 15935  01A534  0A3E               	xorlw	62
 15936  01A536  B4D8               	btfsc	status,2,c
 15937  01A538  D00E               	goto	u15380
 15938                           
 15939                           ;stkvar	_i @ sp[(-2)+0]
 15940  01A53A  0EFF               	movlw	-1
 15941  01A53C  BEE3               	btfsc	plusw1,7,c
 15942  01A53E  D789               	goto	l15907
 15943  01A540  0EFF               	movlw	-1
 15944  01A542  50E3               	movf	plusw1,w,c
 15945  01A544  E108               	bnz	u15380
 15946  01A546  0EFE               	movlw	-2
 15947  01A548  006F FF8C  F001    	movff	plusw1,btemp
 15948  01A54E  0E06               	movlw	6
 15949  01A550  5E01               	subwf	btemp^0,f,c
 15950  01A552  A0D8               	btfss	status,0,c
 15951  01A554  D77E               	goto	l15907
 15952  01A556                     u15380:
 15953                           
 15954                           ;stkvar	_p @ sp[(-2)+-4]
 15955  01A556  0EFA               	movlw	-6
 15956  01A558  006F FF8F FFD9     	movff	plusw1,fsr2l
 15957  01A55E  0EFB               	movlw	-5
 15958  01A560  006F FF8F FFDA     	movff	plusw1,fsr2h
 15959  01A566  2ADE               	incf	postinc2,f,c
 15960  01A568  0E00               	movlw	0
 15961  01A56A  22DD               	addwfc	postdec2,f,c
 15962  01A56C  D098               	goto	u15400
 15963  01A56E                     l15917:
 15964                           
 15965                           ;stkvar	_i @ sp[(-2)+0]
 15966  01A56E  0EFE               	movlw	-2
 15967  01A570  6AE3               	clrf	plusw1,c
 15968  01A572  0EFF               	movlw	-1
 15969  01A574  6AE3               	clrf	plusw1,c
 15970  01A576  D04D               	goto	l15923
 15971  01A578                     l15919:
 15972                           
 15973                           ;stkvar	_i @ sp[(-2)+0]
 15974  01A578  0EFE               	movlw	-2
 15975  01A57A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15976  01A580  0EFF               	movlw	-1
 15977  01A582  006F FF8C  F00C    	movff	plusw1,btemp+11
 15978                           
 15979                           ;stkvar	_p @ sp[(-2)+-4]
 15980  01A588  0EFA               	movlw	-6
 15981  01A58A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15982  01A590  0EFB               	movlw	-5
 15983  01A592  006F FF8F FFDA     	movff	plusw1,fsr2h
 15984  01A598  006F FF78  F009    	movff	postinc2,btemp+8
 15985  01A59E  006F FF74  F00A    	movff	postdec2,btemp+9
 15986  01A5A4  500B               	movf	(btemp+10)^0,w,c
 15987  01A5A6  2609               	addwf	(btemp+8)^0,f,c
 15988  01A5A8  500C               	movf	(btemp+11)^0,w,c
 15989  01A5AA  220A               	addwfc	(btemp+9)^0,f,c
 15990  01A5AC  0060  F027  FFF6   	movff	btemp+8,tblptrl
 15991  01A5B2  0060  F02B  FFF7   	movff	btemp+9,tblptrh
 15992  01A5B8                     	if	0	;tblptru may be non-zero
 15993  01A5B8                     	endif
 15994  01A5B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15995  01A5B8  0E00               	movlw	low (__mediumconst shr (0+16))
 15996  01A5BA  6EF8               	movwf	tblptru,c
 15997  01A5BC                     	endif
 15998                           
 15999                           ;stkvar	_i @ sp[(-2)+0]
 16000  01A5BC  0EFE               	movlw	-2
 16001  01A5BE  006F FF8C  F00B    	movff	plusw1,btemp+10
 16002  01A5C4  0EFF               	movlw	-1
 16003  01A5C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 16004                           
 16005                           ;stkvar	_d @ sp[(-2)+-2]
 16006  01A5CC  0EFC               	movlw	-4
 16007  01A5CE  006F FF8C  F009    	movff	plusw1,btemp+8
 16008  01A5D4  0EFD               	movlw	-3
 16009  01A5D6  006F FF8C  F00A    	movff	plusw1,btemp+9
 16010  01A5DC  500B               	movf	(btemp+10)^0,w,c
 16011  01A5DE  2409               	addwf	(btemp+8)^0,w,c
 16012  01A5E0  6ED9               	movwf	fsr2l,c
 16013  01A5E2  500C               	movf	(btemp+11)^0,w,c
 16014  01A5E4  200A               	addwfc	(btemp+9)^0,w,c
 16015  01A5E6  6EDA               	movwf	fsr2h,c
 16016  01A5E8  0008               	tblrd		*
 16017  01A5EA  006F FFD7 FFDF     	movff	tablat,indf2
 16018                           
 16019                           ;stkvar	_i @ sp[(-2)+0]
 16020  01A5F0  0EFE               	movlw	-2
 16021  01A5F2  50E3               	movf	plusw1,w,c
 16022  01A5F4  0F01               	addlw	1
 16023  01A5F6  6E01               	movwf	btemp^0,c
 16024  01A5F8  0EFE               	movlw	-2
 16025  01A5FA  0060  F007  FFE3   	movff	btemp,plusw1
 16026  01A600  6A01               	clrf	btemp^0,c
 16027  01A602  0EFF               	movlw	-1
 16028  01A604  50E3               	movf	plusw1,w,c
 16029  01A606  2001               	addwfc	btemp^0,w,c
 16030  01A608  6E01               	movwf	btemp^0,c
 16031  01A60A  0EFF               	movlw	-1
 16032  01A60C  0060  F007  FFE3   	movff	btemp,plusw1
 16033  01A612                     l15923:
 16034  01A612  0E9F               	movlw	159
 16035  01A614  6E0B               	movwf	(btemp+10)^0,c
 16036  01A616  0EFF               	movlw	255
 16037  01A618  6E0C               	movwf	(btemp+11)^0,c
 16038                           
 16039                           ;stkvar	_i @ sp[(-2)+0]
 16040  01A61A  0EFE               	movlw	-2
 16041  01A61C  006F FF8C  F009    	movff	plusw1,btemp+8
 16042  01A622  0EFF               	movlw	-1
 16043  01A624  006F FF8C  F00A    	movff	plusw1,btemp+9
 16044                           
 16045                           ;stkvar	_p @ sp[(-2)+-4]
 16046  01A62A  0EFA               	movlw	-6
 16047  01A62C  006F FF8F FFD9     	movff	plusw1,fsr2l
 16048  01A632  0EFB               	movlw	-5
 16049  01A634  006F FF8F FFDA     	movff	plusw1,fsr2h
 16050  01A63A  006F FF78  F007    	movff	postinc2,btemp+6
 16051  01A640  006F FF74  F008    	movff	postdec2,btemp+7
 16052  01A646  5009               	movf	(btemp+8)^0,w,c
 16053  01A648  2607               	addwf	(btemp+6)^0,f,c
 16054  01A64A  500A               	movf	(btemp+9)^0,w,c
 16055  01A64C  2208               	addwfc	(btemp+7)^0,f,c
 16056  01A64E  0060  F01F  FFF6   	movff	btemp+6,tblptrl
 16057  01A654  0060  F023  FFF7   	movff	btemp+7,tblptrh
 16058  01A65A                     	if	0	;tblptru may be non-zero
 16059  01A65A                     	endif
 16060  01A65A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16061  01A65A  0E00               	movlw	low (__mediumconst shr (0+16))
 16062  01A65C  6EF8               	movwf	tblptru,c
 16063  01A65E                     	endif
 16064  01A65E  0008               	tblrd		*
 16065  01A660  50F5               	movf	tablat,w,c
 16066  01A662  6E09               	movwf	(btemp+8)^0,c
 16067  01A664  6A0A               	clrf	(btemp+9)^0,c
 16068  01A666  0E20               	movlw	32
 16069  01A668  1209               	iorwf	(btemp+8)^0,f,c
 16070  01A66A  0E00               	movlw	0
 16071  01A66C  120A               	iorwf	(btemp+9)^0,f,c
 16072  01A66E  500B               	movf	(btemp+10)^0,w,c
 16073  01A670  2609               	addwf	(btemp+8)^0,f,c
 16074  01A672  500C               	movf	(btemp+11)^0,w,c
 16075  01A674  220A               	addwfc	(btemp+9)^0,f,c
 16076  01A676  500A               	movf	(btemp+9)^0,w,c
 16077  01A678  E112               	bnz	l15927
 16078  01A67A  0E1A               	movlw	26
 16079  01A67C  5C09               	subwf	(btemp+8)^0,w,c
 16080  01A67E  B0D8               	btfsc	status,0,c
 16081  01A680  D00E               	goto	u15400
 16082                           
 16083                           ;stkvar	_i @ sp[(-2)+0]
 16084  01A682  0EFF               	movlw	-1
 16085  01A684  BEE3               	btfsc	plusw1,7,c
 16086  01A686  D778               	goto	l15919
 16087  01A688  0EFF               	movlw	-1
 16088  01A68A  50E3               	movf	plusw1,w,c
 16089  01A68C  E108               	bnz	u15400
 16090  01A68E  0EFE               	movlw	-2
 16091  01A690  006F FF8C  F001    	movff	plusw1,btemp
 16092  01A696  0E06               	movlw	6
 16093  01A698  5E01               	subwf	btemp^0,f,c
 16094  01A69A  A0D8               	btfss	status,0,c
 16095  01A69C  D76D               	goto	l15919
 16096  01A69E                     u15400:
 16097  01A69E                     l15927:
 16098                           
 16099                           ;stkvar	_i @ sp[(-2)+0]
 16100  01A69E  0EFE               	movlw	-2
 16101  01A6A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 16102  01A6A6  0EFF               	movlw	-1
 16103  01A6A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 16104                           
 16105                           ;stkvar	_p @ sp[(-2)+-4]
 16106  01A6AE  0EFA               	movlw	-6
 16107  01A6B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 16108  01A6B6  0EFB               	movlw	-5
 16109  01A6B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 16110  01A6BE  500B               	movf	(btemp+10)^0,w,c
 16111  01A6C0  26DE               	addwf	postinc2,f,c
 16112  01A6C2  500C               	movf	(btemp+11)^0,w,c
 16113  01A6C4  22DD               	addwfc	postdec2,f,c
 16114                           
 16115                           ;stkvar	_i @ sp[(-2)+0]
 16116  01A6C6  0EFE               	movlw	-2
 16117  01A6C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 16118  01A6CE  0EFF               	movlw	-1
 16119  01A6D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16120                           
 16121                           ;stkvar	_d @ sp[(-2)+-2]
 16122  01A6D6  0EFC               	movlw	-4
 16123  01A6D8  006F FF8C  F009    	movff	plusw1,btemp+8
 16124  01A6DE  0EFD               	movlw	-3
 16125  01A6E0  006F FF8C  F00A    	movff	plusw1,btemp+9
 16126  01A6E6  500B               	movf	(btemp+10)^0,w,c
 16127  01A6E8  2409               	addwf	(btemp+8)^0,w,c
 16128  01A6EA  6ED9               	movwf	fsr2l,c
 16129  01A6EC  500C               	movf	(btemp+11)^0,w,c
 16130  01A6EE  200A               	addwfc	(btemp+9)^0,w,c
 16131  01A6F0  6EDA               	movwf	fsr2h,c
 16132  01A6F2  0E00               	movlw	0
 16133  01A6F4  6EDF               	movwf	indf2,c
 16134                           
 16135                           ; _getname: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16136  01A6F6  0EFA               	movlw	250
 16137  01A6F8  26E1               	addwf	fsr1l,f,c
 16138  01A6FA  0EFF               	movlw	255
 16139  01A6FC  22E2               	addwfc	fsr1h,f,c
 16140  01A6FE  0012               	return		;funcret
 16141  01A700                     __end_of_getname:
 16142                           	opt callstack 0
 16143                           
 16144 ;; *************** function ___secs_to_tm *****************
 16145 ;; Defined at:
 16146 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__secs_to_tm.c"
 16147 ;; Parameters:    Size  Location     Type
 16148 ;;  t               8  [STACK] long long 
 16149 ;;  tm              2  [STACK] PTR struct tm
 16150 ;;		 -> localtime@tm(24), 
 16151 ;; Auto vars:     Size  Location     Type
 16152 ;;  years           8  [STACK] long long 
 16153 ;;  days            8  [STACK] long long 
 16154 ;;  secs            8  [STACK] long long 
 16155 ;;  remdays         4  [STACK] long 
 16156 ;;  q_cycles        4  [STACK] long 
 16157 ;;  c_cycles        4  [STACK] long 
 16158 ;;  remyears        4  [STACK] long 
 16159 ;;  remsecs         4  [STACK] long 
 16160 ;;  qc_cycles       4  [STACK] long 
 16161 ;;  months          2  [STACK] int 
 16162 ;;  leap            2  [STACK] int 
 16163 ;;  yday            2  [STACK] int 
 16164 ;;  wday            2  [STACK] int 
 16165 ;; Return value:  Size  Location     Type
 16166 ;;                  4  [STACK] long 
 16167 ;; Registers used:
 16168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, btemp+17, 
      +btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, btemp+29, 
      +btemp+30, btemp+31, tblptrl, tblptrh, tblptru
 16169 ;; Tracked objects:
 16170 ;;		On entry : 0/39
 16171 ;;		On exit  : 0/0
 16172 ;;		Unchanged: 0/0
 16173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16178 ;;Total ram usage:        0 bytes
 16179 ;; Hardware stack levels used:    1
 16180 ;; Hardware stack levels required when called:   16
 16181 ;; This function calls:
 16182 ;;		___aldiv
 16183 ;;		___almod
 16184 ;;		___aodiv
 16185 ;;		___aomod
 16186 ;;		___lmul
 16187 ;;		___omul
 16188 ;; This function is called by:
 16189 ;;		___localtime_r
 16190 ;; This function uses a reentrant model
 16191 ;;
 16192                           
 16193                           	psect	text47
 16194  012612                     __ptext47:
 16195                           	opt callstack 0
 16196  012612                     ___secs_to_tm:
 16197                           	opt callstack 0
 16198                           
 16199                           ; autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16200  012612  0E39               	movlw	57
 16201  012614  26E1               	addwf	fsr1l,f,c
 16202  012616  0E00               	movlw	0
 16203  012618  22E2               	addwfc	fsr1h,f,c
 16204                           
 16205                           ;stkvar	_t @ sp[(-57)+-8]
 16206                           
 16207                           ;incstack = 0
 16208  01261A  0EC6               	movlw	-58
 16209  01261C  AEE3               	btfss	plusw1,7,c
 16210  01261E  D026               	goto	u15990
 16211  012620  0EC1               	movlw	-63
 16212  012622  006F FF8C  F001    	movff	plusw1,btemp
 16213  012628  0E80               	movlw	128
 16214  01262A  5E01               	subwf	btemp^0,f,c
 16215  01262C  0EC2               	movlw	-62
 16216  01262E  006F FF8C  F001    	movff	plusw1,btemp
 16217  012634  0EBD               	movlw	189
 16218  012636  5A01               	subwfb	btemp^0,f,c
 16219  012638  0EC3               	movlw	-61
 16220  01263A  006F FF8C  F001    	movff	plusw1,btemp
 16221  012640  0E0E               	movlw	14
 16222  012642  5A01               	subwfb	btemp^0,f,c
 16223  012644  0EC4               	movlw	-60
 16224  012646  006F FF8C  F001    	movff	plusw1,btemp
 16225  01264C  0EFF               	movlw	255
 16226  01264E  5A01               	subwfb	btemp^0,f,c
 16227  012650  0EC5               	movlw	-59
 16228  012652  006F FF8C  F001    	movff	plusw1,btemp
 16229  012658  0EFF               	movlw	255
 16230  01265A  5A01               	subwfb	btemp^0,f,c
 16231  01265C  0EC6               	movlw	-58
 16232  01265E  006F FF8C  F001    	movff	plusw1,btemp
 16233  012664  0EFF               	movlw	255
 16234  012666  5A01               	subwfb	btemp^0,f,c
 16235  012668  A0D8               	btfss	status,0,c
 16236  01266A  D028               	goto	u16000
 16237  01266C                     u15990:
 16238                           
 16239                           ;stkvar	_t @ sp[(-57)+-8]
 16240  01266C  0EC6               	movlw	-58
 16241  01266E  BEE3               	btfsc	plusw1,7,c
 16242  012670  D02F               	goto	l16357
 16243  012672  0EC6               	movlw	-58
 16244  012674  50E3               	movf	plusw1,w,c
 16245  012676  E122               	bnz	u16000
 16246  012678  0EC5               	movlw	-59
 16247  01267A  50E3               	movf	plusw1,w,c
 16248  01267C  E11F               	bnz	u16000
 16249  01267E  0EC4               	movlw	-60
 16250  012680  50E3               	movf	plusw1,w,c
 16251  012682  E11C               	bnz	u16000
 16252  012684  0EBF               	movlw	-65
 16253  012686  04E3               	decf	plusw1,w,c
 16254  012688  0EC0               	movlw	-64
 16255  01268A  006F FF8C  F001    	movff	plusw1,btemp
 16256  012690  0E7B               	movlw	123
 16257  012692  5A01               	subwfb	btemp^0,f,c
 16258  012694  0EC1               	movlw	-63
 16259  012696  006F FF8C  F001    	movff	plusw1,btemp
 16260  01269C  0E9D               	movlw	157
 16261  01269E  5A01               	subwfb	btemp^0,f,c
 16262  0126A0  0EC2               	movlw	-62
 16263  0126A2  006F FF8C  F001    	movff	plusw1,btemp
 16264  0126A8  0E40               	movlw	64
 16265  0126AA  5A01               	subwfb	btemp^0,f,c
 16266  0126AC  0EC3               	movlw	-61
 16267  0126AE  006F FF8C  F001    	movff	plusw1,btemp
 16268  0126B4  0EF1               	movlw	241
 16269  0126B6  5A01               	subwfb	btemp^0,f,c
 16270  0126B8  A0D8               	btfss	status,0,c
 16271  0126BA  D00A               	goto	l16357
 16272  0126BC                     u16000:
 16273  0126BC  0EFF               	movlw	255
 16274  0126BE  6E01               	movwf	btemp^0,c
 16275  0126C0  0EFF               	movlw	255
 16276  0126C2  6E02               	movwf	(btemp+1)^0,c
 16277  0126C4  0EFF               	movlw	255
 16278  0126C6  6E03               	movwf	(btemp+2)^0,c
 16279  0126C8  0EFF               	movlw	255
 16280  0126CA  6E04               	movwf	(btemp+3)^0,c
 16281  0126CC  EF6D  F09B         	goto	l3832
 16282  0126D0                     l16357:
 16283                           
 16284                           ;stkvar	_t @ sp[(-57)+-8]
 16285  0126D0  0EBF               	movlw	-65
 16286  0126D2  50E3               	movf	plusw1,w,c
 16287  0126D4  0F80               	addlw	128
 16288  0126D6  6E11               	movwf	(btemp+16)^0,c
 16289  0126D8  0EC0               	movlw	-64
 16290  0126DA  006F FF8C  F012    	movff	plusw1,btemp+17
 16291  0126E0  0EA2               	movlw	162
 16292  0126E2  2212               	addwfc	(btemp+17)^0,f,c
 16293  0126E4  0EC1               	movlw	-63
 16294  0126E6  006F FF8C  F013    	movff	plusw1,btemp+18
 16295  0126EC  0E43               	movlw	67
 16296  0126EE  2213               	addwfc	(btemp+18)^0,f,c
 16297  0126F0  0EC2               	movlw	-62
 16298  0126F2  006F FF8C  F014    	movff	plusw1,btemp+19
 16299  0126F8  0EC7               	movlw	199
 16300  0126FA  2214               	addwfc	(btemp+19)^0,f,c
 16301  0126FC  0EC3               	movlw	-61
 16302  0126FE  006F FF8C  F015    	movff	plusw1,btemp+20
 16303  012704  0EFF               	movlw	255
 16304  012706  2215               	addwfc	(btemp+20)^0,f,c
 16305  012708  0EC4               	movlw	-60
 16306  01270A  006F FF8C  F016    	movff	plusw1,btemp+21
 16307  012710  0EFF               	movlw	255
 16308  012712  2216               	addwfc	(btemp+21)^0,f,c
 16309  012714  0EC5               	movlw	-59
 16310  012716  006F FF8C  F017    	movff	plusw1,btemp+22
 16311  01271C  0EFF               	movlw	255
 16312  01271E  2217               	addwfc	(btemp+22)^0,f,c
 16313  012720  0EC6               	movlw	-58
 16314  012722  006F FF8C  F018    	movff	plusw1,btemp+23
 16315  012728  0EFF               	movlw	255
 16316  01272A  2218               	addwfc	(btemp+23)^0,f,c
 16317                           
 16318                           ;stkvar	_secs @ sp[(-57)+17]
 16319  01272C  0ED8               	movlw	-40
 16320  01272E  0060  F047  FFE3   	movff	btemp+16,plusw1
 16321  012734  0ED9               	movlw	-39
 16322  012736  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16323  01273C  0EDA               	movlw	-38
 16324  01273E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16325  012744  0EDB               	movlw	-37
 16326  012746  0060  F053  FFE3   	movff	btemp+19,plusw1
 16327  01274C  0EDC               	movlw	-36
 16328  01274E  0060  F057  FFE3   	movff	btemp+20,plusw1
 16329  012754  0EDD               	movlw	-35
 16330  012756  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16331  01275C  0EDE               	movlw	-34
 16332  01275E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16333  012764  0EDF               	movlw	-33
 16334  012766  0060  F063  FFE3   	movff	btemp+23,plusw1
 16335  01276C  0E80               	movlw	128
 16336  01276E  6EE6               	movwf	postinc1,c
 16337  012770  0E51               	movlw	81
 16338  012772  6EE6               	movwf	postinc1,c
 16339  012774  0E01               	movlw	1
 16340  012776  6EE6               	movwf	postinc1,c
 16341  012778  0E00               	movlw	0
 16342  01277A  6EE6               	movwf	postinc1,c
 16343  01277C  0E00               	movlw	0
 16344  01277E  6EE6               	movwf	postinc1,c
 16345  012780  0E00               	movlw	0
 16346  012782  6EE6               	movwf	postinc1,c
 16347  012784  0E00               	movlw	0
 16348  012786  6EE6               	movwf	postinc1,c
 16349  012788  0E00               	movlw	0
 16350  01278A  6EE6               	movwf	postinc1,c
 16351                           
 16352                           ;stkvar	_secs @ sp[(-65)+17]
 16353  01278C  50E1               	movf	fsr1l,w,c
 16354  01278E  0FD0               	addlw	-48
 16355  012790  6ED9               	movwf	fsr2l,c
 16356  012792  50E2               	movf	fsr1h,w,c
 16357  012794  6EDA               	movwf	fsr2h,c
 16358  012796  0EFF               	movlw	255
 16359  012798  22DA               	addwfc	fsr2h,f,c
 16360  01279A  006F FF7B FFE6     	movff	postinc2,postinc1
 16361  0127A0  006F FF7B FFE6     	movff	postinc2,postinc1
 16362  0127A6  006F FF7B FFE6     	movff	postinc2,postinc1
 16363  0127AC  006F FF7B FFE6     	movff	postinc2,postinc1
 16364  0127B2  006F FF7B FFE6     	movff	postinc2,postinc1
 16365  0127B8  006F FF7B FFE6     	movff	postinc2,postinc1
 16366  0127BE  006F FF7B FFE6     	movff	postinc2,postinc1
 16367  0127C4  006F FF7B FFE6     	movff	postinc2,postinc1
 16368  0127CA  EC41  F0DA         	call	___aodiv	;wreg free
 16369  0127CE  52E5               	movf	postdec1,f,c
 16370  0127D0  006F FF9C  F018    	movff	indf1,btemp+23
 16371  0127D6  52E5               	movf	postdec1,f,c
 16372  0127D8  006F FF9C  F017    	movff	indf1,btemp+22
 16373  0127DE  52E5               	movf	postdec1,f,c
 16374  0127E0  006F FF9C  F016    	movff	indf1,btemp+21
 16375  0127E6  52E5               	movf	postdec1,f,c
 16376  0127E8  006F FF9C  F015    	movff	indf1,btemp+20
 16377  0127EE  52E5               	movf	postdec1,f,c
 16378  0127F0  006F FF9C  F014    	movff	indf1,btemp+19
 16379  0127F6  52E5               	movf	postdec1,f,c
 16380  0127F8  006F FF9C  F013    	movff	indf1,btemp+18
 16381  0127FE  52E5               	movf	postdec1,f,c
 16382  012800  006F FF9C  F012    	movff	indf1,btemp+17
 16383  012806  52E5               	movf	postdec1,f,c
 16384  012808  006F FF9C  F011    	movff	indf1,btemp+16
 16385  01280E  0EF8               	movlw	248
 16386  012810  26E1               	addwf	fsr1l,f,c
 16387  012812  0EFF               	movlw	255
 16388  012814  22E2               	addwfc	fsr1h,f,c
 16389                           
 16390                           ;stkvar	_days @ sp[(-57)+9]
 16391  012816  0ED0               	movlw	-48
 16392  012818  0060  F047  FFE3   	movff	btemp+16,plusw1
 16393  01281E  0ED1               	movlw	-47
 16394  012820  0060  F04B  FFE3   	movff	btemp+17,plusw1
 16395  012826  0ED2               	movlw	-46
 16396  012828  0060  F04F  FFE3   	movff	btemp+18,plusw1
 16397  01282E  0ED3               	movlw	-45
 16398  012830  0060  F053  FFE3   	movff	btemp+19,plusw1
 16399  012836  0ED4               	movlw	-44
 16400  012838  0060  F057  FFE3   	movff	btemp+20,plusw1
 16401  01283E  0ED5               	movlw	-43
 16402  012840  0060  F05B  FFE3   	movff	btemp+21,plusw1
 16403  012846  0ED6               	movlw	-42
 16404  012848  0060  F05F  FFE3   	movff	btemp+22,plusw1
 16405  01284E  0ED7               	movlw	-41
 16406  012850  0060  F063  FFE3   	movff	btemp+23,plusw1
 16407  012856  0E80               	movlw	128
 16408  012858  6EE6               	movwf	postinc1,c
 16409  01285A  0E51               	movlw	81
 16410  01285C  6EE6               	movwf	postinc1,c
 16411  01285E  0E01               	movlw	1
 16412  012860  6EE6               	movwf	postinc1,c
 16413  012862  0E00               	movlw	0
 16414  012864  6EE6               	movwf	postinc1,c
 16415  012866  0E00               	movlw	0
 16416  012868  6EE6               	movwf	postinc1,c
 16417  01286A  0E00               	movlw	0
 16418  01286C  6EE6               	movwf	postinc1,c
 16419  01286E  0E00               	movlw	0
 16420  012870  6EE6               	movwf	postinc1,c
 16421  012872  0E00               	movlw	0
 16422  012874  6EE6               	movwf	postinc1,c
 16423                           
 16424                           ;stkvar	_secs @ sp[(-65)+17]
 16425  012876  50E1               	movf	fsr1l,w,c
 16426  012878  0FD0               	addlw	-48
 16427  01287A  6ED9               	movwf	fsr2l,c
 16428  01287C  50E2               	movf	fsr1h,w,c
 16429  01287E  6EDA               	movwf	fsr2h,c
 16430  012880  0EFF               	movlw	255
 16431  012882  22DA               	addwfc	fsr2h,f,c
 16432  012884  006F FF7B FFE6     	movff	postinc2,postinc1
 16433  01288A  006F FF7B FFE6     	movff	postinc2,postinc1
 16434  012890  006F FF7B FFE6     	movff	postinc2,postinc1
 16435  012896  006F FF7B FFE6     	movff	postinc2,postinc1
 16436  01289C  006F FF7B FFE6     	movff	postinc2,postinc1
 16437  0128A2  006F FF7B FFE6     	movff	postinc2,postinc1
 16438  0128A8  006F FF7B FFE6     	movff	postinc2,postinc1
 16439  0128AE  006F FF7B FFE6     	movff	postinc2,postinc1
 16440  0128B4  EC11  F0DF         	call	___aomod	;wreg free
 16441  0128B8  52E5               	movf	postdec1,f,c
 16442  0128BA  006F FF9C  F018    	movff	indf1,btemp+23
 16443  0128C0  52E5               	movf	postdec1,f,c
 16444  0128C2  006F FF9C  F017    	movff	indf1,btemp+22
 16445  0128C8  52E5               	movf	postdec1,f,c
 16446  0128CA  006F FF9C  F016    	movff	indf1,btemp+21
 16447  0128D0  52E5               	movf	postdec1,f,c
 16448  0128D2  006F FF9C  F015    	movff	indf1,btemp+20
 16449  0128D8  52E5               	movf	postdec1,f,c
 16450  0128DA  006F FF9C  F014    	movff	indf1,btemp+19
 16451  0128E0  52E5               	movf	postdec1,f,c
 16452  0128E2  006F FF9C  F013    	movff	indf1,btemp+18
 16453  0128E8  52E5               	movf	postdec1,f,c
 16454  0128EA  006F FF9C  F012    	movff	indf1,btemp+17
 16455  0128F0  52E5               	movf	postdec1,f,c
 16456  0128F2  006F FF9C  F011    	movff	indf1,btemp+16
 16457  0128F8  0EF8               	movlw	248
 16458  0128FA  26E1               	addwf	fsr1l,f,c
 16459  0128FC  0EFF               	movlw	255
 16460  0128FE  22E2               	addwfc	fsr1h,f,c
 16461  012900  0060  F044  F009   	movff	btemp+16,btemp+8
 16462  012906  0060  F048  F00A   	movff	btemp+17,btemp+9
 16463  01290C  0060  F04C  F00B   	movff	btemp+18,btemp+10
 16464  012912  0060  F050  F00C   	movff	btemp+19,btemp+11
 16465                           
 16466                           ;stkvar	_remsecs @ sp[(-57)+41]
 16467  012918  0EF0               	movlw	-16
 16468  01291A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16469  012920  0EF1               	movlw	-15
 16470  012922  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16471  012928  0EF2               	movlw	-14
 16472  01292A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16473  012930  0EF3               	movlw	-13
 16474  012932  0060  F033  FFE3   	movff	btemp+11,plusw1
 16475                           
 16476                           ;stkvar	_remsecs @ sp[(-57)+41]
 16477  012938  0EF3               	movlw	-13
 16478  01293A  AEE3               	btfss	plusw1,7,c
 16479  01293C  D01F               	goto	l16369
 16480                           
 16481                           ;stkvar	_remsecs @ sp[(-57)+41]
 16482  01293E  50E1               	movf	fsr1l,w,c
 16483  012940  0FF0               	addlw	-16
 16484  012942  6ED9               	movwf	fsr2l,c
 16485  012944  50E2               	movf	fsr1h,w,c
 16486  012946  6EDA               	movwf	fsr2h,c
 16487  012948  0EFF               	movlw	255
 16488  01294A  22DA               	addwfc	fsr2h,f,c
 16489  01294C  0E80               	movlw	128
 16490  01294E  26DE               	addwf	postinc2,f,c
 16491  012950  0E51               	movlw	81
 16492  012952  22DE               	addwfc	postinc2,f,c
 16493  012954  0E01               	movlw	1
 16494  012956  22DE               	addwfc	postinc2,f,c
 16495  012958  0E00               	movlw	0
 16496  01295A  22DE               	addwfc	postinc2,f,c
 16497                           
 16498                           ;stkvar	_days @ sp[(-57)+9]
 16499  01295C  50E1               	movf	fsr1l,w,c
 16500  01295E  0FD0               	addlw	-48
 16501  012960  6ED9               	movwf	fsr2l,c
 16502  012962  50E2               	movf	fsr1h,w,c
 16503  012964  6EDA               	movwf	fsr2h,c
 16504  012966  0EFF               	movlw	255
 16505  012968  22DA               	addwfc	fsr2h,f,c
 16506  01296A  06DE               	decf	postinc2,f,c
 16507  01296C  0E00               	movlw	0
 16508  01296E  5ADE               	subwfb	postinc2,f,c
 16509  012970  5ADE               	subwfb	postinc2,f,c
 16510  012972  5ADE               	subwfb	postinc2,f,c
 16511  012974  5ADE               	subwfb	postinc2,f,c
 16512  012976  5ADE               	subwfb	postinc2,f,c
 16513  012978  5ADE               	subwfb	postinc2,f,c
 16514  01297A  5ADE               	subwfb	postinc2,f,c
 16515  01297C                     l16369:
 16516  01297C  0E07               	movlw	7
 16517  01297E  6EE6               	movwf	postinc1,c
 16518  012980  0E00               	movlw	0
 16519  012982  6EE6               	movwf	postinc1,c
 16520  012984  0E00               	movlw	0
 16521  012986  6EE6               	movwf	postinc1,c
 16522  012988  0E00               	movlw	0
 16523  01298A  6EE6               	movwf	postinc1,c
 16524  01298C  0E00               	movlw	0
 16525  01298E  6EE6               	movwf	postinc1,c
 16526  012990  0E00               	movlw	0
 16527  012992  6EE6               	movwf	postinc1,c
 16528  012994  0E00               	movlw	0
 16529  012996  6EE6               	movwf	postinc1,c
 16530  012998  0E00               	movlw	0
 16531  01299A  6EE6               	movwf	postinc1,c
 16532                           
 16533                           ;stkvar	_days @ sp[(-65)+9]
 16534  01299C  0EC8               	movlw	-56
 16535  01299E  50E3               	movf	plusw1,w,c
 16536  0129A0  0F03               	addlw	3
 16537  0129A2  6E11               	movwf	(btemp+16)^0,c
 16538  0129A4  0EC9               	movlw	-55
 16539  0129A6  006F FF8C  F012    	movff	plusw1,btemp+17
 16540  0129AC  0E00               	movlw	0
 16541  0129AE  2212               	addwfc	(btemp+17)^0,f,c
 16542  0129B0  0ECA               	movlw	-54
 16543  0129B2  006F FF8C  F013    	movff	plusw1,btemp+18
 16544  0129B8  0E00               	movlw	0
 16545  0129BA  2213               	addwfc	(btemp+18)^0,f,c
 16546  0129BC  0ECB               	movlw	-53
 16547  0129BE  006F FF8C  F014    	movff	plusw1,btemp+19
 16548  0129C4  0E00               	movlw	0
 16549  0129C6  2214               	addwfc	(btemp+19)^0,f,c
 16550  0129C8  0ECC               	movlw	-52
 16551  0129CA  006F FF8C  F015    	movff	plusw1,btemp+20
 16552  0129D0  0E00               	movlw	0
 16553  0129D2  2215               	addwfc	(btemp+20)^0,f,c
 16554  0129D4  0ECD               	movlw	-51
 16555  0129D6  006F FF8C  F016    	movff	plusw1,btemp+21
 16556  0129DC  0E00               	movlw	0
 16557  0129DE  2216               	addwfc	(btemp+21)^0,f,c
 16558  0129E0  0ECE               	movlw	-50
 16559  0129E2  006F FF8C  F017    	movff	plusw1,btemp+22
 16560  0129E8  0E00               	movlw	0
 16561  0129EA  2217               	addwfc	(btemp+22)^0,f,c
 16562  0129EC  0ECF               	movlw	-49
 16563  0129EE  006F FF8C  F018    	movff	plusw1,btemp+23
 16564  0129F4  0E00               	movlw	0
 16565  0129F6  2218               	addwfc	(btemp+23)^0,f,c
 16566  0129F8  0060  F047  FFE6   	movff	btemp+16,postinc1
 16567  0129FE  0060  F04B  FFE6   	movff	btemp+17,postinc1
 16568  012A04  0060  F04F  FFE6   	movff	btemp+18,postinc1
 16569  012A0A  0060  F053  FFE6   	movff	btemp+19,postinc1
 16570  012A10  0060  F057  FFE6   	movff	btemp+20,postinc1
 16571  012A16  0060  F05B  FFE6   	movff	btemp+21,postinc1
 16572  012A1C  0060  F05F  FFE6   	movff	btemp+22,postinc1
 16573  012A22  0060  F063  FFE6   	movff	btemp+23,postinc1
 16574  012A28  EC11  F0DF         	call	___aomod	;wreg free
 16575  012A2C  52E5               	movf	postdec1,f,c
 16576  012A2E  006F FF9C  F018    	movff	indf1,btemp+23
 16577  012A34  52E5               	movf	postdec1,f,c
 16578  012A36  006F FF9C  F017    	movff	indf1,btemp+22
 16579  012A3C  52E5               	movf	postdec1,f,c
 16580  012A3E  006F FF9C  F016    	movff	indf1,btemp+21
 16581  012A44  52E5               	movf	postdec1,f,c
 16582  012A46  006F FF9C  F015    	movff	indf1,btemp+20
 16583  012A4C  52E5               	movf	postdec1,f,c
 16584  012A4E  006F FF9C  F014    	movff	indf1,btemp+19
 16585  012A54  52E5               	movf	postdec1,f,c
 16586  012A56  006F FF9C  F013    	movff	indf1,btemp+18
 16587  012A5C  52E5               	movf	postdec1,f,c
 16588  012A5E  006F FF9C  F012    	movff	indf1,btemp+17
 16589  012A64  52E5               	movf	postdec1,f,c
 16590  012A66  006F FF9C  F011    	movff	indf1,btemp+16
 16591  012A6C  0EF8               	movlw	248
 16592  012A6E  26E1               	addwf	fsr1l,f,c
 16593  012A70  0EFF               	movlw	255
 16594  012A72  22E2               	addwfc	fsr1h,f,c
 16595  012A74  0060  F044  F00B   	movff	btemp+16,btemp+10
 16596  012A7A  0060  F048  F00C   	movff	btemp+17,btemp+11
 16597                           
 16598                           ;stkvar	_wday @ sp[(-57)+55]
 16599  012A80  0EFE               	movlw	-2
 16600  012A82  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16601  012A88  0EFF               	movlw	-1
 16602  012A8A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16603                           
 16604                           ;stkvar	_wday @ sp[(-57)+55]
 16605  012A90  0EFF               	movlw	-1
 16606  012A92  AEE3               	btfss	plusw1,7,c
 16607  012A94  D011               	goto	l16375
 16608                           
 16609                           ;stkvar	_wday @ sp[(-57)+55]
 16610  012A96  0EFE               	movlw	-2
 16611  012A98  50E3               	movf	plusw1,w,c
 16612  012A9A  0F07               	addlw	7
 16613  012A9C  6E01               	movwf	btemp^0,c
 16614  012A9E  0EFE               	movlw	-2
 16615  012AA0  0060  F007  FFE3   	movff	btemp,plusw1
 16616  012AA6  6A01               	clrf	btemp^0,c
 16617  012AA8  0EFF               	movlw	-1
 16618  012AAA  50E3               	movf	plusw1,w,c
 16619  012AAC  2001               	addwfc	btemp^0,w,c
 16620  012AAE  6E01               	movwf	btemp^0,c
 16621  012AB0  0EFF               	movlw	-1
 16622  012AB2  0060  F007  FFE3   	movff	btemp,plusw1
 16623  012AB8                     l16375:
 16624  012AB8  0EB1               	movlw	177
 16625  012ABA  6EE6               	movwf	postinc1,c
 16626  012ABC  0E3A               	movlw	58
 16627  012ABE  6EE6               	movwf	postinc1,c
 16628  012AC0  0E02               	movlw	2
 16629  012AC2  6EE6               	movwf	postinc1,c
 16630  012AC4  0E00               	movlw	0
 16631  012AC6  6EE6               	movwf	postinc1,c
 16632  012AC8  0E00               	movlw	0
 16633  012ACA  6EE6               	movwf	postinc1,c
 16634  012ACC  0E00               	movlw	0
 16635  012ACE  6EE6               	movwf	postinc1,c
 16636  012AD0  0E00               	movlw	0
 16637  012AD2  6EE6               	movwf	postinc1,c
 16638  012AD4  0E00               	movlw	0
 16639  012AD6  6EE6               	movwf	postinc1,c
 16640                           
 16641                           ;stkvar	_days @ sp[(-65)+9]
 16642  012AD8  50E1               	movf	fsr1l,w,c
 16643  012ADA  0FC8               	addlw	-56
 16644  012ADC  6ED9               	movwf	fsr2l,c
 16645  012ADE  50E2               	movf	fsr1h,w,c
 16646  012AE0  6EDA               	movwf	fsr2h,c
 16647  012AE2  0EFF               	movlw	255
 16648  012AE4  22DA               	addwfc	fsr2h,f,c
 16649  012AE6  006F FF7B FFE6     	movff	postinc2,postinc1
 16650  012AEC  006F FF7B FFE6     	movff	postinc2,postinc1
 16651  012AF2  006F FF7B FFE6     	movff	postinc2,postinc1
 16652  012AF8  006F FF7B FFE6     	movff	postinc2,postinc1
 16653  012AFE  006F FF7B FFE6     	movff	postinc2,postinc1
 16654  012B04  006F FF7B FFE6     	movff	postinc2,postinc1
 16655  012B0A  006F FF7B FFE6     	movff	postinc2,postinc1
 16656  012B10  006F FF7B FFE6     	movff	postinc2,postinc1
 16657  012B16  EC41  F0DA         	call	___aodiv	;wreg free
 16658  012B1A  52E5               	movf	postdec1,f,c
 16659  012B1C  006F FF9C  F018    	movff	indf1,btemp+23
 16660  012B22  52E5               	movf	postdec1,f,c
 16661  012B24  006F FF9C  F017    	movff	indf1,btemp+22
 16662  012B2A  52E5               	movf	postdec1,f,c
 16663  012B2C  006F FF9C  F016    	movff	indf1,btemp+21
 16664  012B32  52E5               	movf	postdec1,f,c
 16665  012B34  006F FF9C  F015    	movff	indf1,btemp+20
 16666  012B3A  52E5               	movf	postdec1,f,c
 16667  012B3C  006F FF9C  F014    	movff	indf1,btemp+19
 16668  012B42  52E5               	movf	postdec1,f,c
 16669  012B44  006F FF9C  F013    	movff	indf1,btemp+18
 16670  012B4A  52E5               	movf	postdec1,f,c
 16671  012B4C  006F FF9C  F012    	movff	indf1,btemp+17
 16672  012B52  52E5               	movf	postdec1,f,c
 16673  012B54  006F FF9C  F011    	movff	indf1,btemp+16
 16674  012B5A  0EF8               	movlw	248
 16675  012B5C  26E1               	addwf	fsr1l,f,c
 16676  012B5E  0EFF               	movlw	255
 16677  012B60  22E2               	addwfc	fsr1h,f,c
 16678  012B62  0060  F044  F009   	movff	btemp+16,btemp+8
 16679  012B68  0060  F048  F00A   	movff	btemp+17,btemp+9
 16680  012B6E  0060  F04C  F00B   	movff	btemp+18,btemp+10
 16681  012B74  0060  F050  F00C   	movff	btemp+19,btemp+11
 16682                           
 16683                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 16684  012B7A  0EF4               	movlw	-12
 16685  012B7C  0060  F027  FFE3   	movff	btemp+8,plusw1
 16686  012B82  0EF5               	movlw	-11
 16687  012B84  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16688  012B8A  0EF6               	movlw	-10
 16689  012B8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16690  012B92  0EF7               	movlw	-9
 16691  012B94  0060  F033  FFE3   	movff	btemp+11,plusw1
 16692  012B9A  0EB1               	movlw	177
 16693  012B9C  6EE6               	movwf	postinc1,c
 16694  012B9E  0E3A               	movlw	58
 16695  012BA0  6EE6               	movwf	postinc1,c
 16696  012BA2  0E02               	movlw	2
 16697  012BA4  6EE6               	movwf	postinc1,c
 16698  012BA6  0E00               	movlw	0
 16699  012BA8  6EE6               	movwf	postinc1,c
 16700  012BAA  0E00               	movlw	0
 16701  012BAC  6EE6               	movwf	postinc1,c
 16702  012BAE  0E00               	movlw	0
 16703  012BB0  6EE6               	movwf	postinc1,c
 16704  012BB2  0E00               	movlw	0
 16705  012BB4  6EE6               	movwf	postinc1,c
 16706  012BB6  0E00               	movlw	0
 16707  012BB8  6EE6               	movwf	postinc1,c
 16708                           
 16709                           ;stkvar	_days @ sp[(-65)+9]
 16710  012BBA  50E1               	movf	fsr1l,w,c
 16711  012BBC  0FC8               	addlw	-56
 16712  012BBE  6ED9               	movwf	fsr2l,c
 16713  012BC0  50E2               	movf	fsr1h,w,c
 16714  012BC2  6EDA               	movwf	fsr2h,c
 16715  012BC4  0EFF               	movlw	255
 16716  012BC6  22DA               	addwfc	fsr2h,f,c
 16717  012BC8  006F FF7B FFE6     	movff	postinc2,postinc1
 16718  012BCE  006F FF7B FFE6     	movff	postinc2,postinc1
 16719  012BD4  006F FF7B FFE6     	movff	postinc2,postinc1
 16720  012BDA  006F FF7B FFE6     	movff	postinc2,postinc1
 16721  012BE0  006F FF7B FFE6     	movff	postinc2,postinc1
 16722  012BE6  006F FF7B FFE6     	movff	postinc2,postinc1
 16723  012BEC  006F FF7B FFE6     	movff	postinc2,postinc1
 16724  012BF2  006F FF7B FFE6     	movff	postinc2,postinc1
 16725  012BF8  EC11  F0DF         	call	___aomod	;wreg free
 16726  012BFC  52E5               	movf	postdec1,f,c
 16727  012BFE  006F FF9C  F018    	movff	indf1,btemp+23
 16728  012C04  52E5               	movf	postdec1,f,c
 16729  012C06  006F FF9C  F017    	movff	indf1,btemp+22
 16730  012C0C  52E5               	movf	postdec1,f,c
 16731  012C0E  006F FF9C  F016    	movff	indf1,btemp+21
 16732  012C14  52E5               	movf	postdec1,f,c
 16733  012C16  006F FF9C  F015    	movff	indf1,btemp+20
 16734  012C1C  52E5               	movf	postdec1,f,c
 16735  012C1E  006F FF9C  F014    	movff	indf1,btemp+19
 16736  012C24  52E5               	movf	postdec1,f,c
 16737  012C26  006F FF9C  F013    	movff	indf1,btemp+18
 16738  012C2C  52E5               	movf	postdec1,f,c
 16739  012C2E  006F FF9C  F012    	movff	indf1,btemp+17
 16740  012C34  52E5               	movf	postdec1,f,c
 16741  012C36  006F FF9C  F011    	movff	indf1,btemp+16
 16742  012C3C  0EF8               	movlw	248
 16743  012C3E  26E1               	addwf	fsr1l,f,c
 16744  012C40  0EFF               	movlw	255
 16745  012C42  22E2               	addwfc	fsr1h,f,c
 16746  012C44  0060  F044  F009   	movff	btemp+16,btemp+8
 16747  012C4A  0060  F048  F00A   	movff	btemp+17,btemp+9
 16748  012C50  0060  F04C  F00B   	movff	btemp+18,btemp+10
 16749  012C56  0060  F050  F00C   	movff	btemp+19,btemp+11
 16750                           
 16751                           ;stkvar	_remdays @ sp[(-57)+25]
 16752  012C5C  0EE0               	movlw	-32
 16753  012C5E  0060  F027  FFE3   	movff	btemp+8,plusw1
 16754  012C64  0EE1               	movlw	-31
 16755  012C66  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16756  012C6C  0EE2               	movlw	-30
 16757  012C6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16758  012C74  0EE3               	movlw	-29
 16759  012C76  0060  F033  FFE3   	movff	btemp+11,plusw1
 16760                           
 16761                           ;stkvar	_remdays @ sp[(-57)+25]
 16762  012C7C  0EE3               	movlw	-29
 16763  012C7E  AEE3               	btfss	plusw1,7,c
 16764  012C80  D01B               	goto	l16383
 16765                           
 16766                           ;stkvar	_remdays @ sp[(-57)+25]
 16767  012C82  50E1               	movf	fsr1l,w,c
 16768  012C84  0FE0               	addlw	-32
 16769  012C86  6ED9               	movwf	fsr2l,c
 16770  012C88  50E2               	movf	fsr1h,w,c
 16771  012C8A  6EDA               	movwf	fsr2h,c
 16772  012C8C  0EFF               	movlw	255
 16773  012C8E  22DA               	addwfc	fsr2h,f,c
 16774  012C90  0EB1               	movlw	177
 16775  012C92  26DE               	addwf	postinc2,f,c
 16776  012C94  0E3A               	movlw	58
 16777  012C96  22DE               	addwfc	postinc2,f,c
 16778  012C98  0E02               	movlw	2
 16779  012C9A  22DE               	addwfc	postinc2,f,c
 16780  012C9C  0E00               	movlw	0
 16781  012C9E  22DE               	addwfc	postinc2,f,c
 16782                           
 16783                           ;stkvar	_qc_cycles @ sp[(-57)+45]
 16784  012CA0  50E1               	movf	fsr1l,w,c
 16785  012CA2  0FF4               	addlw	-12
 16786  012CA4  6ED9               	movwf	fsr2l,c
 16787  012CA6  50E2               	movf	fsr1h,w,c
 16788  012CA8  6EDA               	movwf	fsr2h,c
 16789  012CAA  0EFF               	movlw	255
 16790  012CAC  22DA               	addwfc	fsr2h,f,c
 16791  012CAE  06DE               	decf	postinc2,f,c
 16792  012CB0  0E00               	movlw	0
 16793  012CB2  5ADE               	subwfb	postinc2,f,c
 16794  012CB4  5ADE               	subwfb	postinc2,f,c
 16795  012CB6  5ADE               	subwfb	postinc2,f,c
 16796  012CB8                     l16383:
 16797  012CB8  0EAC               	movlw	172
 16798  012CBA  6EE6               	movwf	postinc1,c
 16799  012CBC  0E8E               	movlw	142
 16800  012CBE  6EE6               	movwf	postinc1,c
 16801  012CC0  0E00               	movlw	0
 16802  012CC2  6EE6               	movwf	postinc1,c
 16803  012CC4  0E00               	movlw	0
 16804  012CC6  6EE6               	movwf	postinc1,c
 16805                           
 16806                           ;stkvar	_remdays @ sp[(-61)+25]
 16807  012CC8  0EDC               	movlw	-36
 16808  012CCA  006F FF8F FFE6     	movff	plusw1,postinc1
 16809  012CD0  006F FF8F FFE6     	movff	plusw1,postinc1
 16810  012CD6  006F FF8F FFE6     	movff	plusw1,postinc1
 16811  012CDC  006F FF8F FFE6     	movff	plusw1,postinc1
 16812  012CE2  ECF2  F0E9         	call	___aldiv	;wreg free
 16813                           
 16814                           ;stkvar	_c_cycles @ sp[(-57)+33]
 16815  012CE6  0EE8               	movlw	-24
 16816  012CE8  0060  F007  FFE3   	movff	btemp,plusw1
 16817  012CEE  0EE9               	movlw	-23
 16818  012CF0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16819  012CF6  0EEA               	movlw	-22
 16820  012CF8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16821  012CFE  0EEB               	movlw	-21
 16822  012D00  0060  F013  FFE3   	movff	btemp+3,plusw1
 16823                           
 16824                           ;stkvar	_c_cycles @ sp[(-57)+33]
 16825  012D06  0EE8               	movlw	-24
 16826  012D08  006F FF8C  F001    	movff	plusw1,btemp
 16827  012D0E  0E04               	movlw	4
 16828  012D10  1801               	xorwf	btemp^0,w,c
 16829  012D12  E116               	bnz	l16389
 16830  012D14  0EE9               	movlw	-23
 16831  012D16  50E3               	movf	plusw1,w,c
 16832  012D18  E113               	bnz	l16389
 16833  012D1A  0EEA               	movlw	-22
 16834  012D1C  50E3               	movf	plusw1,w,c
 16835  012D1E  E110               	bnz	l16389
 16836  012D20  0EEB               	movlw	-21
 16837  012D22  50E3               	movf	plusw1,w,c
 16838  012D24  A4D8               	btfss	status,2,c
 16839  012D26  D00C               	goto	l16389
 16840                           
 16841                           ;stkvar	_c_cycles @ sp[(-57)+33]
 16842  012D28  50E1               	movf	fsr1l,w,c
 16843  012D2A  0FE8               	addlw	-24
 16844  012D2C  6ED9               	movwf	fsr2l,c
 16845  012D2E  50E2               	movf	fsr1h,w,c
 16846  012D30  6EDA               	movwf	fsr2h,c
 16847  012D32  0EFF               	movlw	255
 16848  012D34  22DA               	addwfc	fsr2h,f,c
 16849  012D36  06DE               	decf	postinc2,f,c
 16850  012D38  0E00               	movlw	0
 16851  012D3A  5ADE               	subwfb	postinc2,f,c
 16852  012D3C  5ADE               	subwfb	postinc2,f,c
 16853  012D3E  5ADE               	subwfb	postinc2,f,c
 16854  012D40                     l16389:
 16855  012D40  0EAC               	movlw	172
 16856  012D42  6EE6               	movwf	postinc1,c
 16857  012D44  0E8E               	movlw	142
 16858  012D46  6EE6               	movwf	postinc1,c
 16859  012D48  0E00               	movlw	0
 16860  012D4A  6EE6               	movwf	postinc1,c
 16861  012D4C  0E00               	movlw	0
 16862  012D4E  6EE6               	movwf	postinc1,c
 16863                           
 16864                           ;stkvar	_c_cycles @ sp[(-61)+33]
 16865  012D50  0EE4               	movlw	-28
 16866  012D52  006F FF8F FFE6     	movff	plusw1,postinc1
 16867  012D58  006F FF8F FFE6     	movff	plusw1,postinc1
 16868  012D5E  006F FF8F FFE6     	movff	plusw1,postinc1
 16869  012D64  006F FF8F FFE6     	movff	plusw1,postinc1
 16870  012D6A  EC9F  F0FB         	call	___lmul	;wreg free
 16871                           
 16872                           ;stkvar	_remdays @ sp[(-57)+25]
 16873  012D6E  50E1               	movf	fsr1l,w,c
 16874  012D70  0FE0               	addlw	-32
 16875  012D72  6ED9               	movwf	fsr2l,c
 16876  012D74  50E2               	movf	fsr1h,w,c
 16877  012D76  6EDA               	movwf	fsr2h,c
 16878  012D78  0EFF               	movlw	255
 16879  012D7A  22DA               	addwfc	fsr2h,f,c
 16880  012D7C  5001               	movf	btemp^0,w,c
 16881  012D7E  5EDE               	subwf	postinc2,f,c
 16882  012D80  5002               	movf	(btemp+1)^0,w,c
 16883  012D82  5ADE               	subwfb	postinc2,f,c
 16884  012D84  5003               	movf	(btemp+2)^0,w,c
 16885  012D86  5ADE               	subwfb	postinc2,f,c
 16886  012D88  5004               	movf	(btemp+3)^0,w,c
 16887  012D8A  5ADE               	subwfb	postinc2,f,c
 16888  012D8C  0EB5               	movlw	181
 16889  012D8E  6EE6               	movwf	postinc1,c
 16890  012D90  0E05               	movlw	5
 16891  012D92  6EE6               	movwf	postinc1,c
 16892  012D94  0E00               	movlw	0
 16893  012D96  6EE6               	movwf	postinc1,c
 16894  012D98  0E00               	movlw	0
 16895  012D9A  6EE6               	movwf	postinc1,c
 16896                           
 16897                           ;stkvar	_remdays @ sp[(-61)+25]
 16898  012D9C  0EDC               	movlw	-36
 16899  012D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16900  012DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 16901  012DAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16902  012DB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16903  012DB6  ECF2  F0E9         	call	___aldiv	;wreg free
 16904                           
 16905                           ;stkvar	_q_cycles @ sp[(-57)+29]
 16906  012DBA  0EE4               	movlw	-28
 16907  012DBC  0060  F007  FFE3   	movff	btemp,plusw1
 16908  012DC2  0EE5               	movlw	-27
 16909  012DC4  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16910  012DCA  0EE6               	movlw	-26
 16911  012DCC  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16912  012DD2  0EE7               	movlw	-25
 16913  012DD4  0060  F013  FFE3   	movff	btemp+3,plusw1
 16914                           
 16915                           ;stkvar	_q_cycles @ sp[(-57)+29]
 16916  012DDA  0EE4               	movlw	-28
 16917  012DDC  006F FF8C  F001    	movff	plusw1,btemp
 16918  012DE2  0E19               	movlw	25
 16919  012DE4  1801               	xorwf	btemp^0,w,c
 16920  012DE6  E116               	bnz	l16397
 16921  012DE8  0EE5               	movlw	-27
 16922  012DEA  50E3               	movf	plusw1,w,c
 16923  012DEC  E113               	bnz	l16397
 16924  012DEE  0EE6               	movlw	-26
 16925  012DF0  50E3               	movf	plusw1,w,c
 16926  012DF2  E110               	bnz	l16397
 16927  012DF4  0EE7               	movlw	-25
 16928  012DF6  50E3               	movf	plusw1,w,c
 16929  012DF8  A4D8               	btfss	status,2,c
 16930  012DFA  D00C               	goto	l16397
 16931                           
 16932                           ;stkvar	_q_cycles @ sp[(-57)+29]
 16933  012DFC  50E1               	movf	fsr1l,w,c
 16934  012DFE  0FE4               	addlw	-28
 16935  012E00  6ED9               	movwf	fsr2l,c
 16936  012E02  50E2               	movf	fsr1h,w,c
 16937  012E04  6EDA               	movwf	fsr2h,c
 16938  012E06  0EFF               	movlw	255
 16939  012E08  22DA               	addwfc	fsr2h,f,c
 16940  012E0A  06DE               	decf	postinc2,f,c
 16941  012E0C  0E00               	movlw	0
 16942  012E0E  5ADE               	subwfb	postinc2,f,c
 16943  012E10  5ADE               	subwfb	postinc2,f,c
 16944  012E12  5ADE               	subwfb	postinc2,f,c
 16945  012E14                     l16397:
 16946  012E14  0EB5               	movlw	181
 16947  012E16  6EE6               	movwf	postinc1,c
 16948  012E18  0E05               	movlw	5
 16949  012E1A  6EE6               	movwf	postinc1,c
 16950  012E1C  0E00               	movlw	0
 16951  012E1E  6EE6               	movwf	postinc1,c
 16952  012E20  0E00               	movlw	0
 16953  012E22  6EE6               	movwf	postinc1,c
 16954                           
 16955                           ;stkvar	_q_cycles @ sp[(-61)+29]
 16956  012E24  0EE0               	movlw	-32
 16957  012E26  006F FF8F FFE6     	movff	plusw1,postinc1
 16958  012E2C  006F FF8F FFE6     	movff	plusw1,postinc1
 16959  012E32  006F FF8F FFE6     	movff	plusw1,postinc1
 16960  012E38  006F FF8F FFE6     	movff	plusw1,postinc1
 16961  012E3E  EC9F  F0FB         	call	___lmul	;wreg free
 16962                           
 16963                           ;stkvar	_remdays @ sp[(-57)+25]
 16964  012E42  50E1               	movf	fsr1l,w,c
 16965  012E44  0FE0               	addlw	-32
 16966  012E46  6ED9               	movwf	fsr2l,c
 16967  012E48  50E2               	movf	fsr1h,w,c
 16968  012E4A  6EDA               	movwf	fsr2h,c
 16969  012E4C  0EFF               	movlw	255
 16970  012E4E  22DA               	addwfc	fsr2h,f,c
 16971  012E50  5001               	movf	btemp^0,w,c
 16972  012E52  5EDE               	subwf	postinc2,f,c
 16973  012E54  5002               	movf	(btemp+1)^0,w,c
 16974  012E56  5ADE               	subwfb	postinc2,f,c
 16975  012E58  5003               	movf	(btemp+2)^0,w,c
 16976  012E5A  5ADE               	subwfb	postinc2,f,c
 16977  012E5C  5004               	movf	(btemp+3)^0,w,c
 16978  012E5E  5ADE               	subwfb	postinc2,f,c
 16979  012E60  0E6D               	movlw	109
 16980  012E62  6EE6               	movwf	postinc1,c
 16981  012E64  0E01               	movlw	1
 16982  012E66  6EE6               	movwf	postinc1,c
 16983  012E68  0E00               	movlw	0
 16984  012E6A  6EE6               	movwf	postinc1,c
 16985  012E6C  0E00               	movlw	0
 16986  012E6E  6EE6               	movwf	postinc1,c
 16987                           
 16988                           ;stkvar	_remdays @ sp[(-61)+25]
 16989  012E70  0EDC               	movlw	-36
 16990  012E72  006F FF8F FFE6     	movff	plusw1,postinc1
 16991  012E78  006F FF8F FFE6     	movff	plusw1,postinc1
 16992  012E7E  006F FF8F FFE6     	movff	plusw1,postinc1
 16993  012E84  006F FF8F FFE6     	movff	plusw1,postinc1
 16994  012E8A  ECF2  F0E9         	call	___aldiv	;wreg free
 16995                           
 16996                           ;stkvar	_remyears @ sp[(-57)+37]
 16997  012E8E  0EEC               	movlw	-20
 16998  012E90  0060  F007  FFE3   	movff	btemp,plusw1
 16999  012E96  0EED               	movlw	-19
 17000  012E98  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17001  012E9E  0EEE               	movlw	-18
 17002  012EA0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17003  012EA6  0EEF               	movlw	-17
 17004  012EA8  0060  F013  FFE3   	movff	btemp+3,plusw1
 17005                           
 17006                           ;stkvar	_remyears @ sp[(-57)+37]
 17007  012EAE  0EEC               	movlw	-20
 17008  012EB0  006F FF8C  F001    	movff	plusw1,btemp
 17009  012EB6  0E04               	movlw	4
 17010  012EB8  1801               	xorwf	btemp^0,w,c
 17011  012EBA  E116               	bnz	l16405
 17012  012EBC  0EED               	movlw	-19
 17013  012EBE  50E3               	movf	plusw1,w,c
 17014  012EC0  E113               	bnz	l16405
 17015  012EC2  0EEE               	movlw	-18
 17016  012EC4  50E3               	movf	plusw1,w,c
 17017  012EC6  E110               	bnz	l16405
 17018  012EC8  0EEF               	movlw	-17
 17019  012ECA  50E3               	movf	plusw1,w,c
 17020  012ECC  A4D8               	btfss	status,2,c
 17021  012ECE  D00C               	goto	l16405
 17022                           
 17023                           ;stkvar	_remyears @ sp[(-57)+37]
 17024  012ED0  50E1               	movf	fsr1l,w,c
 17025  012ED2  0FEC               	addlw	-20
 17026  012ED4  6ED9               	movwf	fsr2l,c
 17027  012ED6  50E2               	movf	fsr1h,w,c
 17028  012ED8  6EDA               	movwf	fsr2h,c
 17029  012EDA  0EFF               	movlw	255
 17030  012EDC  22DA               	addwfc	fsr2h,f,c
 17031  012EDE  06DE               	decf	postinc2,f,c
 17032  012EE0  0E00               	movlw	0
 17033  012EE2  5ADE               	subwfb	postinc2,f,c
 17034  012EE4  5ADE               	subwfb	postinc2,f,c
 17035  012EE6  5ADE               	subwfb	postinc2,f,c
 17036  012EE8                     l16405:
 17037  012EE8  0E6D               	movlw	109
 17038  012EEA  6EE6               	movwf	postinc1,c
 17039  012EEC  0E01               	movlw	1
 17040  012EEE  6EE6               	movwf	postinc1,c
 17041  012EF0  0E00               	movlw	0
 17042  012EF2  6EE6               	movwf	postinc1,c
 17043  012EF4  0E00               	movlw	0
 17044  012EF6  6EE6               	movwf	postinc1,c
 17045                           
 17046                           ;stkvar	_remyears @ sp[(-61)+37]
 17047  012EF8  0EE8               	movlw	-24
 17048  012EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 17049  012F00  006F FF8F FFE6     	movff	plusw1,postinc1
 17050  012F06  006F FF8F FFE6     	movff	plusw1,postinc1
 17051  012F0C  006F FF8F FFE6     	movff	plusw1,postinc1
 17052  012F12  EC9F  F0FB         	call	___lmul	;wreg free
 17053                           
 17054                           ;stkvar	_remdays @ sp[(-57)+25]
 17055  012F16  50E1               	movf	fsr1l,w,c
 17056  012F18  0FE0               	addlw	-32
 17057  012F1A  6ED9               	movwf	fsr2l,c
 17058  012F1C  50E2               	movf	fsr1h,w,c
 17059  012F1E  6EDA               	movwf	fsr2h,c
 17060  012F20  0EFF               	movlw	255
 17061  012F22  22DA               	addwfc	fsr2h,f,c
 17062  012F24  5001               	movf	btemp^0,w,c
 17063  012F26  5EDE               	subwf	postinc2,f,c
 17064  012F28  5002               	movf	(btemp+1)^0,w,c
 17065  012F2A  5ADE               	subwfb	postinc2,f,c
 17066  012F2C  5003               	movf	(btemp+2)^0,w,c
 17067  012F2E  5ADE               	subwfb	postinc2,f,c
 17068  012F30  5004               	movf	(btemp+3)^0,w,c
 17069  012F32  5ADE               	subwfb	postinc2,f,c
 17070                           
 17071                           ;stkvar	___secs_to_tm$7858 @ sp[(-57)+0]
 17072  012F34  0EC7               	movlw	-57
 17073  012F36  6AE3               	clrf	plusw1,c
 17074                           
 17075                           ;stkvar	_remyears @ sp[(-57)+37]
 17076  012F38  0EEC               	movlw	-20
 17077  012F3A  50E3               	movf	plusw1,w,c
 17078  012F3C  E127               	bnz	l16417
 17079  012F3E  0EED               	movlw	-19
 17080  012F40  50E3               	movf	plusw1,w,c
 17081  012F42  E124               	bnz	l16417
 17082  012F44  0EEE               	movlw	-18
 17083  012F46  50E3               	movf	plusw1,w,c
 17084  012F48  E121               	bnz	l16417
 17085  012F4A  0EEF               	movlw	-17
 17086  012F4C  50E3               	movf	plusw1,w,c
 17087  012F4E  A4D8               	btfss	status,2,c
 17088  012F50  D01D               	goto	l16417
 17089                           
 17090                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17091  012F52  0EE4               	movlw	-28
 17092  012F54  50E3               	movf	plusw1,w,c
 17093  012F56  E117               	bnz	l16415
 17094  012F58  0EE5               	movlw	-27
 17095  012F5A  50E3               	movf	plusw1,w,c
 17096  012F5C  E114               	bnz	l16415
 17097  012F5E  0EE6               	movlw	-26
 17098  012F60  50E3               	movf	plusw1,w,c
 17099  012F62  E111               	bnz	l16415
 17100  012F64  0EE7               	movlw	-25
 17101  012F66  50E3               	movf	plusw1,w,c
 17102  012F68  A4D8               	btfss	status,2,c
 17103  012F6A  D00D               	goto	u16090
 17104                           
 17105                           ;stkvar	_c_cycles @ sp[(-57)+33]
 17106  012F6C  0EE8               	movlw	-24
 17107  012F6E  50E3               	movf	plusw1,w,c
 17108  012F70  E10D               	bnz	l16417
 17109  012F72  0EE9               	movlw	-23
 17110  012F74  50E3               	movf	plusw1,w,c
 17111  012F76  E10A               	bnz	l16417
 17112  012F78  0EEA               	movlw	-22
 17113  012F7A  50E3               	movf	plusw1,w,c
 17114  012F7C  E107               	bnz	l16417
 17115  012F7E  0EEB               	movlw	-21
 17116  012F80  50E3               	movf	plusw1,w,c
 17117  012F82  A4D8               	btfss	status,2,c
 17118  012F84  D003               	goto	l16417
 17119  012F86                     u16090:
 17120  012F86                     l16415:
 17121                           
 17122                           ;stkvar	___secs_to_tm$7858 @ sp[(-57)+0]
 17123  012F86  0EC7               	movlw	-57
 17124  012F88  6AE3               	clrf	plusw1,c
 17125  012F8A  2AE3               	incf	plusw1,f,c
 17126  012F8C                     l16417:
 17127                           
 17128                           ;stkvar	___secs_to_tm$7858 @ sp[(-57)+0]
 17129  012F8C  0EC7               	movlw	-57
 17130  012F8E  50E3               	movf	plusw1,w,c
 17131  012F90  6E0B               	movwf	(btemp+10)^0,c
 17132  012F92  6A0C               	clrf	(btemp+11)^0,c
 17133                           
 17134                           ;stkvar	_leap @ sp[(-57)+51]
 17135  012F94  0EFA               	movlw	-6
 17136  012F96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17137  012F9C  0EFB               	movlw	-5
 17138  012F9E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17139                           
 17140                           ;stkvar	_remdays @ sp[(-57)+25]
 17141                           ;stkvar	_leap @ sp[(-57)+51]
 17142  012FA4  0EFA               	movlw	-6
 17143  012FA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 17144  012FAC  0EFB               	movlw	-5
 17145  012FAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 17146  012FB4  0EE0               	movlw	-32
 17147  012FB6  50E3               	movf	plusw1,w,c
 17148  012FB8  260B               	addwf	(btemp+10)^0,f,c
 17149  012FBA  0EE1               	movlw	-31
 17150  012FBC  50E3               	movf	plusw1,w,c
 17151  012FBE  220C               	addwfc	(btemp+11)^0,f,c
 17152  012FC0  0E3B               	movlw	59
 17153  012FC2  260B               	addwf	(btemp+10)^0,f,c
 17154  012FC4  0E00               	movlw	0
 17155  012FC6  220C               	addwfc	(btemp+11)^0,f,c
 17156                           
 17157                           ;stkvar	_yday @ sp[(-57)+53]
 17158  012FC8  0EFC               	movlw	-4
 17159  012FCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17160  012FD0  0EFD               	movlw	-3
 17161  012FD2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17162                           
 17163                           ;stkvar	_leap @ sp[(-57)+51]
 17164  012FD8  0EFA               	movlw	-6
 17165  012FDA  50E3               	movf	plusw1,w,c
 17166  012FDC  0F6D               	addlw	109
 17167  012FDE  6E0B               	movwf	(btemp+10)^0,c
 17168  012FE0  0EFB               	movlw	-5
 17169  012FE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 17170  012FE8  0E01               	movlw	1
 17171  012FEA  220C               	addwfc	(btemp+11)^0,f,c
 17172                           
 17173                           ;stkvar	_yday @ sp[(-57)+53]
 17174  012FEC  0EFC               	movlw	-4
 17175  012FEE  006F FF8C  F001    	movff	plusw1,btemp
 17176  012FF4  500B               	movf	(btemp+10)^0,w,c
 17177  012FF6  5C01               	subwf	btemp^0,w,c
 17178  012FF8  0EFD               	movlw	-3
 17179  012FFA  50E3               	movf	plusw1,w,c
 17180  012FFC  0A80               	xorlw	128
 17181  012FFE  6E01               	movwf	btemp^0,c
 17182  013000  500C               	movf	(btemp+11)^0,w,c
 17183  013002  0A80               	xorlw	128
 17184  013004  5801               	subwfb	btemp^0,w,c
 17185  013006  A0D8               	btfss	status,0,c
 17186  013008  D01E               	goto	l16425
 17187                           
 17188                           ;stkvar	_leap @ sp[(-57)+51]
 17189  01300A  0EFA               	movlw	-6
 17190  01300C  50E3               	movf	plusw1,w,c
 17191  01300E  0F6D               	addlw	109
 17192  013010  6E0B               	movwf	(btemp+10)^0,c
 17193  013012  0EFB               	movlw	-5
 17194  013014  006F FF8C  F00C    	movff	plusw1,btemp+11
 17195  01301A  0E01               	movlw	1
 17196  01301C  220C               	addwfc	(btemp+11)^0,f,c
 17197                           
 17198                           ;stkvar	_yday @ sp[(-57)+53]
 17199  01301E  0EFC               	movlw	-4
 17200  013020  006F FF8C  F001    	movff	plusw1,btemp
 17201  013026  500B               	movf	(btemp+10)^0,w,c
 17202  013028  5E01               	subwf	btemp^0,f,c
 17203  01302A  0EFC               	movlw	-4
 17204  01302C  0060  F007  FFE3   	movff	btemp,plusw1
 17205  013032  0EFD               	movlw	-3
 17206  013034  006F FF8C  F001    	movff	plusw1,btemp
 17207  01303A  500C               	movf	(btemp+11)^0,w,c
 17208  01303C  5A01               	subwfb	btemp^0,f,c
 17209  01303E  0EFD               	movlw	-3
 17210  013040  0060  F007  FFE3   	movff	btemp,plusw1
 17211  013046                     l16425:
 17212                           
 17213                           ;stkvar	_remyears @ sp[(-57)+37]
 17214                           ;stkvar	_q_cycles @ sp[(-57)+29]
 17215  013046  0EE4               	movlw	-28
 17216  013048  006F FF8C  F009    	movff	plusw1,btemp+8
 17217  01304E  0EE5               	movlw	-27
 17218  013050  006F FF8C  F00A    	movff	plusw1,btemp+9
 17219  013056  0EE6               	movlw	-26
 17220  013058  006F FF8C  F00B    	movff	plusw1,btemp+10
 17221  01305E  0EE7               	movlw	-25
 17222  013060  006F FF8C  F00C    	movff	plusw1,btemp+11
 17223  013066  0E02               	movlw	2
 17224  013068                     u16115:
 17225  013068  90D8               	bcf	status,0,c
 17226  01306A  3609               	rlcf	(btemp+8)^0,f,c
 17227  01306C  360A               	rlcf	(btemp+9)^0,f,c
 17228  01306E  360B               	rlcf	(btemp+10)^0,f,c
 17229  013070  360C               	rlcf	(btemp+11)^0,f,c
 17230  013072  2EE8               	decfsz	wreg,f,c
 17231  013074  D7F9               	goto	u16115
 17232  013076  0E64               	movlw	100
 17233  013078  6EE6               	movwf	postinc1,c
 17234  01307A  0E00               	movlw	0
 17235  01307C  6EE6               	movwf	postinc1,c
 17236  01307E  0E00               	movlw	0
 17237  013080  6EE6               	movwf	postinc1,c
 17238  013082  0E00               	movlw	0
 17239  013084  6EE6               	movwf	postinc1,c
 17240                           
 17241                           ;stkvar	_c_cycles @ sp[(-61)+33]
 17242  013086  0EE4               	movlw	-28
 17243  013088  006F FF8F FFE6     	movff	plusw1,postinc1
 17244  01308E  006F FF8F FFE6     	movff	plusw1,postinc1
 17245  013094  006F FF8F FFE6     	movff	plusw1,postinc1
 17246  01309A  006F FF8F FFE6     	movff	plusw1,postinc1
 17247  0130A0  EC9F  F0FB         	call	___lmul	;wreg free
 17248  0130A4  5009               	movf	(btemp+8)^0,w,c
 17249  0130A6  2401               	addwf	btemp^0,w,c
 17250  0130A8  6E05               	movwf	(btemp+4)^0,c
 17251  0130AA  500A               	movf	(btemp+9)^0,w,c
 17252  0130AC  2002               	addwfc	(btemp+1)^0,w,c
 17253  0130AE  6E06               	movwf	(btemp+5)^0,c
 17254  0130B0  500B               	movf	(btemp+10)^0,w,c
 17255  0130B2  2003               	addwfc	(btemp+2)^0,w,c
 17256  0130B4  6E07               	movwf	(btemp+6)^0,c
 17257  0130B6  500C               	movf	(btemp+11)^0,w,c
 17258  0130B8  2004               	addwfc	(btemp+3)^0,w,c
 17259  0130BA  6E08               	movwf	(btemp+7)^0,c
 17260  0130BC  0EEC               	movlw	-20
 17261  0130BE  50E3               	movf	plusw1,w,c
 17262  0130C0  2605               	addwf	(btemp+4)^0,f,c
 17263  0130C2  0EED               	movlw	-19
 17264  0130C4  50E3               	movf	plusw1,w,c
 17265  0130C6  2206               	addwfc	(btemp+5)^0,f,c
 17266  0130C8  0EEE               	movlw	-18
 17267  0130CA  50E3               	movf	plusw1,w,c
 17268  0130CC  2207               	addwfc	(btemp+6)^0,f,c
 17269  0130CE  0EEF               	movlw	-17
 17270  0130D0  50E3               	movf	plusw1,w,c
 17271  0130D2  2208               	addwfc	(btemp+7)^0,f,c
 17272  0130D4  0060  F014  F011   	movff	btemp+4,btemp+16
 17273  0130DA  0060  F018  F012   	movff	btemp+5,btemp+17
 17274  0130E0  0060  F01C  F013   	movff	btemp+6,btemp+18
 17275  0130E6  0060  F020  F014   	movff	btemp+7,btemp+19
 17276  0130EC  6A15               	clrf	(btemp+20)^0,c
 17277  0130EE  BE14               	btfsc	(btemp+19)^0,7,c
 17278  0130F0  6815               	setf	(btemp+20)^0,c
 17279  0130F2  0060  F054  F016   	movff	btemp+20,btemp+21
 17280  0130F8  0060  F054  F017   	movff	btemp+20,btemp+22
 17281  0130FE  0060  F054  F018   	movff	btemp+20,btemp+23
 17282  013104  0E90               	movlw	144
 17283  013106  6EE6               	movwf	postinc1,c
 17284  013108  0E01               	movlw	1
 17285  01310A  6EE6               	movwf	postinc1,c
 17286  01310C  0E00               	movlw	0
 17287  01310E  6EE6               	movwf	postinc1,c
 17288  013110  0E00               	movlw	0
 17289  013112  6EE6               	movwf	postinc1,c
 17290  013114  0E00               	movlw	0
 17291  013116  6EE6               	movwf	postinc1,c
 17292  013118  0E00               	movlw	0
 17293  01311A  6EE6               	movwf	postinc1,c
 17294  01311C  0E00               	movlw	0
 17295  01311E  6EE6               	movwf	postinc1,c
 17296  013120  0E00               	movlw	0
 17297  013122  6EE6               	movwf	postinc1,c
 17298                           
 17299                           ;stkvar	_qc_cycles @ sp[(-65)+45]
 17300  013124  0EEC               	movlw	-20
 17301  013126  006F FF8C  F019    	movff	plusw1,btemp+24
 17302  01312C  0EED               	movlw	-19
 17303  01312E  006F FF8C  F01A    	movff	plusw1,btemp+25
 17304  013134  0EEE               	movlw	-18
 17305  013136  006F FF8C  F01B    	movff	plusw1,btemp+26
 17306  01313C  0EEF               	movlw	-17
 17307  01313E  006F FF8C  F01C    	movff	plusw1,btemp+27
 17308  013144  6A1D               	clrf	(btemp+28)^0,c
 17309  013146  BE1C               	btfsc	(btemp+27)^0,7,c
 17310  013148  681D               	setf	(btemp+28)^0,c
 17311  01314A  0060  F074  F01E   	movff	btemp+28,btemp+29
 17312  013150  0060  F074  F01F   	movff	btemp+28,btemp+30
 17313  013156  0060  F074  F020   	movff	btemp+28,btemp+31
 17314  01315C  0060  F067  FFE6   	movff	btemp+24,postinc1
 17315  013162  0060  F06B  FFE6   	movff	btemp+25,postinc1
 17316  013168  0060  F06F  FFE6   	movff	btemp+26,postinc1
 17317  01316E  0060  F073  FFE6   	movff	btemp+27,postinc1
 17318  013174  0060  F077  FFE6   	movff	btemp+28,postinc1
 17319  01317A  0060  F07B  FFE6   	movff	btemp+29,postinc1
 17320  013180  0060  F07F  FFE6   	movff	btemp+30,postinc1
 17321  013186  0060  F083  FFE6   	movff	btemp+31,postinc1
 17322  01318C  EC3D  F0F1         	call	___omul	;wreg free
 17323  013190  52E5               	movf	postdec1,f,c
 17324  013192  006F FF9C  F020    	movff	indf1,btemp+31
 17325  013198  52E5               	movf	postdec1,f,c
 17326  01319A  006F FF9C  F01F    	movff	indf1,btemp+30
 17327  0131A0  52E5               	movf	postdec1,f,c
 17328  0131A2  006F FF9C  F01E    	movff	indf1,btemp+29
 17329  0131A8  52E5               	movf	postdec1,f,c
 17330  0131AA  006F FF9C  F01D    	movff	indf1,btemp+28
 17331  0131B0  52E5               	movf	postdec1,f,c
 17332  0131B2  006F FF9C  F01C    	movff	indf1,btemp+27
 17333  0131B8  52E5               	movf	postdec1,f,c
 17334  0131BA  006F FF9C  F01B    	movff	indf1,btemp+26
 17335  0131C0  52E5               	movf	postdec1,f,c
 17336  0131C2  006F FF9C  F01A    	movff	indf1,btemp+25
 17337  0131C8  52E5               	movf	postdec1,f,c
 17338  0131CA  006F FF9C  F019    	movff	indf1,btemp+24
 17339  0131D0  0EF8               	movlw	248
 17340  0131D2  26E1               	addwf	fsr1l,f,c
 17341  0131D4  0EFF               	movlw	255
 17342  0131D6  22E2               	addwfc	fsr1h,f,c
 17343  0131D8  5011               	movf	(btemp+16)^0,w,c
 17344  0131DA  2419               	addwf	(btemp+24)^0,w,c
 17345  0131DC  6E09               	movwf	(btemp+8)^0,c
 17346  0131DE  5012               	movf	(btemp+17)^0,w,c
 17347  0131E0  201A               	addwfc	(btemp+25)^0,w,c
 17348  0131E2  6E0A               	movwf	(btemp+9)^0,c
 17349  0131E4  5013               	movf	(btemp+18)^0,w,c
 17350  0131E6  201B               	addwfc	(btemp+26)^0,w,c
 17351  0131E8  6E0B               	movwf	(btemp+10)^0,c
 17352  0131EA  5014               	movf	(btemp+19)^0,w,c
 17353  0131EC  201C               	addwfc	(btemp+27)^0,w,c
 17354  0131EE  6E0C               	movwf	(btemp+11)^0,c
 17355  0131F0  5015               	movf	(btemp+20)^0,w,c
 17356  0131F2  201D               	addwfc	(btemp+28)^0,w,c
 17357  0131F4  6E0D               	movwf	(btemp+12)^0,c
 17358  0131F6  5016               	movf	(btemp+21)^0,w,c
 17359  0131F8  201E               	addwfc	(btemp+29)^0,w,c
 17360  0131FA  6E0E               	movwf	(btemp+13)^0,c
 17361  0131FC  5017               	movf	(btemp+22)^0,w,c
 17362  0131FE  201F               	addwfc	(btemp+30)^0,w,c
 17363  013200  6E0F               	movwf	(btemp+14)^0,c
 17364  013202  5018               	movf	(btemp+23)^0,w,c
 17365  013204  2020               	addwfc	(btemp+31)^0,w,c
 17366  013206  6E10               	movwf	(btemp+15)^0,c
 17367                           
 17368                           ;stkvar	_years @ sp[(-57)+1]
 17369  013208  0EC8               	movlw	-56
 17370  01320A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17371  013210  0EC9               	movlw	-55
 17372  013212  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17373  013218  0ECA               	movlw	-54
 17374  01321A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17375  013220  0ECB               	movlw	-53
 17376  013222  0060  F033  FFE3   	movff	btemp+11,plusw1
 17377  013228  0ECC               	movlw	-52
 17378  01322A  0060  F037  FFE3   	movff	btemp+12,plusw1
 17379  013230  0ECD               	movlw	-51
 17380  013232  0060  F03B  FFE3   	movff	btemp+13,plusw1
 17381  013238  0ECE               	movlw	-50
 17382  01323A  0060  F03F  FFE3   	movff	btemp+14,plusw1
 17383  013240  0ECF               	movlw	-49
 17384  013242  0060  F043  FFE3   	movff	btemp+15,plusw1
 17385                           
 17386                           ;stkvar	_months @ sp[(-57)+49]
 17387  013248  0EF8               	movlw	-8
 17388  01324A  6AE3               	clrf	plusw1,c
 17389  01324C  0EF9               	movlw	-7
 17390  01324E  6AE3               	clrf	plusw1,c
 17391  013250  D030               	goto	l16433
 17392  013252                     l16429:
 17393                           
 17394                           ;stkvar	_remdays @ sp[(-57)+25]
 17395  013252  50E1               	movf	fsr1l,w,c
 17396  013254  0FE0               	addlw	-32
 17397  013256  6ED9               	movwf	fsr2l,c
 17398  013258  50E2               	movf	fsr1h,w,c
 17399  01325A  6EDA               	movwf	fsr2h,c
 17400  01325C  0EFF               	movlw	255
 17401  01325E  22DA               	addwfc	fsr2h,f,c
 17402                           
 17403                           ;stkvar	_months @ sp[(-57)+49]
 17404  013260  0EF8               	movlw	-8
 17405  013262  006F FF8C  F00B    	movff	plusw1,btemp+10
 17406  013268  0EF9               	movlw	-7
 17407  01326A  006F FF8C  F00C    	movff	plusw1,btemp+11
 17408  013270  0E13               	movlw	low ___secs_to_tm@days_in_month
 17409  013272  240B               	addwf	(btemp+10)^0,w,c
 17410  013274  6EF6               	movwf	tblptrl,c
 17411  013276  0EF9               	movlw	high ___secs_to_tm@days_in_month
 17412  013278  200C               	addwfc	(btemp+11)^0,w,c
 17413  01327A  6EF7               	movwf	tblptrh,c
 17414  01327C                     	if	1	;There are 3 active tblptr bytes
 17415  01327C  6AF8               	clrf	tblptru,c
 17416  01327E  0E00               	movlw	low (__mediumconst shr (0+16))
 17417  013280  22F8               	addwfc	tblptru,f,c
 17418  013282                     	endif
 17419  013282  0008               	tblrd		*
 17420  013284  50F5               	movf	tablat,w,c
 17421  013286  5EDE               	subwf	postinc2,f,c
 17422  013288  0E00               	movlw	0
 17423  01328A  5ADE               	subwfb	postinc2,f,c
 17424  01328C  5ADE               	subwfb	postinc2,f,c
 17425  01328E  5ADE               	subwfb	postinc2,f,c
 17426                           
 17427                           ;stkvar	_months @ sp[(-57)+49]
 17428  013290  0EF8               	movlw	-8
 17429  013292  50E3               	movf	plusw1,w,c
 17430  013294  0F01               	addlw	1
 17431  013296  6E01               	movwf	btemp^0,c
 17432  013298  0EF8               	movlw	-8
 17433  01329A  0060  F007  FFE3   	movff	btemp,plusw1
 17434  0132A0  6A01               	clrf	btemp^0,c
 17435  0132A2  0EF9               	movlw	-7
 17436  0132A4  50E3               	movf	plusw1,w,c
 17437  0132A6  2001               	addwfc	btemp^0,w,c
 17438  0132A8  6E01               	movwf	btemp^0,c
 17439  0132AA  0EF9               	movlw	-7
 17440  0132AC  0060  F007  FFE3   	movff	btemp,plusw1
 17441  0132B2                     l16433:
 17442                           
 17443                           ;stkvar	_months @ sp[(-57)+49]
 17444  0132B2  0EF8               	movlw	-8
 17445  0132B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 17446  0132BA  0EF9               	movlw	-7
 17447  0132BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17448  0132C2  0E13               	movlw	low ___secs_to_tm@days_in_month
 17449  0132C4  240B               	addwf	(btemp+10)^0,w,c
 17450  0132C6  6EF6               	movwf	tblptrl,c
 17451  0132C8  0EF9               	movlw	high ___secs_to_tm@days_in_month
 17452  0132CA  200C               	addwfc	(btemp+11)^0,w,c
 17453  0132CC  6EF7               	movwf	tblptrh,c
 17454  0132CE                     	if	1	;There are 3 active tblptr bytes
 17455  0132CE  6AF8               	clrf	tblptru,c
 17456  0132D0  0E00               	movlw	low (__mediumconst shr (0+16))
 17457  0132D2  22F8               	addwfc	tblptru,f,c
 17458  0132D4                     	endif
 17459  0132D4  0008               	tblrd		*
 17460  0132D6  006F FFD4  F00C    	movff	tablat,btemp+11
 17461  0132DC  0060  F030  F005   	movff	btemp+11,btemp+4
 17462  0132E2  6A06               	clrf	(btemp+5)^0,c
 17463  0132E4  6A07               	clrf	(btemp+6)^0,c
 17464  0132E6  6A08               	clrf	(btemp+7)^0,c
 17465                           
 17466                           ;stkvar	_remdays @ sp[(-57)+25]
 17467  0132E8  0EE0               	movlw	-32
 17468  0132EA  006F FF8C  F001    	movff	plusw1,btemp
 17469  0132F0  5005               	movf	(btemp+4)^0,w,c
 17470  0132F2  5C01               	subwf	btemp^0,w,c
 17471  0132F4  0EE1               	movlw	-31
 17472  0132F6  006F FF8C  F001    	movff	plusw1,btemp
 17473  0132FC  5006               	movf	(btemp+5)^0,w,c
 17474  0132FE  5801               	subwfb	btemp^0,w,c
 17475  013300  0EE2               	movlw	-30
 17476  013302  006F FF8C  F001    	movff	plusw1,btemp
 17477  013308  5007               	movf	(btemp+6)^0,w,c
 17478  01330A  5801               	subwfb	btemp^0,w,c
 17479  01330C  0EE3               	movlw	-29
 17480  01330E  50E3               	movf	plusw1,w,c
 17481  013310  0A80               	xorlw	128
 17482  013312  6E01               	movwf	btemp^0,c
 17483  013314  5008               	movf	(btemp+7)^0,w,c
 17484  013316  0A80               	xorlw	128
 17485  013318  5801               	subwfb	btemp^0,w,c
 17486  01331A  B0D8               	btfsc	status,0,c
 17487  01331C  D79A               	goto	l16429
 17488                           
 17489                           ;stkvar	_months @ sp[(-57)+49]
 17490  01331E  0EF9               	movlw	-7
 17491  013320  BEE3               	btfsc	plusw1,7,c
 17492  013322  D026               	goto	l16441
 17493  013324  0EF9               	movlw	-7
 17494  013326  50E3               	movf	plusw1,w,c
 17495  013328  E108               	bnz	u16130
 17496  01332A  0EF8               	movlw	-8
 17497  01332C  006F FF8C  F001    	movff	plusw1,btemp
 17498  013332  0E0A               	movlw	10
 17499  013334  5E01               	subwf	btemp^0,f,c
 17500  013336  A0D8               	btfss	status,0,c
 17501  013338  D01B               	goto	l16441
 17502  01333A                     u16130:
 17503                           
 17504                           ;stkvar	_months @ sp[(-57)+49]
 17505  01333A  50E1               	movf	fsr1l,w,c
 17506  01333C  0FF8               	addlw	-8
 17507  01333E  6ED9               	movwf	fsr2l,c
 17508  013340  50E2               	movf	fsr1h,w,c
 17509  013342  6EDA               	movwf	fsr2h,c
 17510  013344  0EFF               	movlw	255
 17511  013346  22DA               	addwfc	fsr2h,f,c
 17512  013348  0EF4               	movlw	244
 17513  01334A  26DE               	addwf	postinc2,f,c
 17514  01334C  0EFF               	movlw	255
 17515  01334E  22DD               	addwfc	postdec2,f,c
 17516                           
 17517                           ;stkvar	_years @ sp[(-57)+1]
 17518  013350  50E1               	movf	fsr1l,w,c
 17519  013352  0FC8               	addlw	-56
 17520  013354  6ED9               	movwf	fsr2l,c
 17521  013356  50E2               	movf	fsr1h,w,c
 17522  013358  6EDA               	movwf	fsr2h,c
 17523  01335A  0EFF               	movlw	255
 17524  01335C  22DA               	addwfc	fsr2h,f,c
 17525  01335E  2ADE               	incf	postinc2,f,c
 17526  013360  0E00               	movlw	0
 17527  013362  22DE               	addwfc	postinc2,f,c
 17528  013364  22DE               	addwfc	postinc2,f,c
 17529  013366  22DE               	addwfc	postinc2,f,c
 17530  013368  22DE               	addwfc	postinc2,f,c
 17531  01336A  22DE               	addwfc	postinc2,f,c
 17532  01336C  22DE               	addwfc	postinc2,f,c
 17533  01336E  22DE               	addwfc	postinc2,f,c
 17534  013370                     l16441:
 17535                           
 17536                           ;stkvar	_years @ sp[(-57)+1]
 17537  013370  0EC8               	movlw	-56
 17538  013372  50E3               	movf	plusw1,w,c
 17539  013374  0F64               	addlw	100
 17540  013376  6E11               	movwf	(btemp+16)^0,c
 17541  013378  0EC9               	movlw	-55
 17542  01337A  006F FF8C  F012    	movff	plusw1,btemp+17
 17543  013380  0E00               	movlw	0
 17544  013382  2212               	addwfc	(btemp+17)^0,f,c
 17545  013384  0ECA               	movlw	-54
 17546  013386  006F FF8C  F013    	movff	plusw1,btemp+18
 17547  01338C  0E00               	movlw	0
 17548  01338E  2213               	addwfc	(btemp+18)^0,f,c
 17549  013390  0ECB               	movlw	-53
 17550  013392  006F FF8C  F014    	movff	plusw1,btemp+19
 17551  013398  0E00               	movlw	0
 17552  01339A  2214               	addwfc	(btemp+19)^0,f,c
 17553  01339C  0ECC               	movlw	-52
 17554  01339E  006F FF8C  F015    	movff	plusw1,btemp+20
 17555  0133A4  0E00               	movlw	0
 17556  0133A6  2215               	addwfc	(btemp+20)^0,f,c
 17557  0133A8  0ECD               	movlw	-51
 17558  0133AA  006F FF8C  F016    	movff	plusw1,btemp+21
 17559  0133B0  0E00               	movlw	0
 17560  0133B2  2216               	addwfc	(btemp+21)^0,f,c
 17561  0133B4  0ECE               	movlw	-50
 17562  0133B6  006F FF8C  F017    	movff	plusw1,btemp+22
 17563  0133BC  0E00               	movlw	0
 17564  0133BE  2217               	addwfc	(btemp+22)^0,f,c
 17565  0133C0  0ECF               	movlw	-49
 17566  0133C2  006F FF8C  F018    	movff	plusw1,btemp+23
 17567  0133C8  0E00               	movlw	0
 17568  0133CA  2218               	addwfc	(btemp+23)^0,f,c
 17569  0133CC  BE18               	btfsc	(btemp+23)^0,7,c
 17570  0133CE  D00C               	goto	u16140
 17571  0133D0  5018               	movf	(btemp+23)^0,w,c
 17572  0133D2  1017               	iorwf	(btemp+22)^0,w,c
 17573  0133D4  1016               	iorwf	(btemp+21)^0,w,c
 17574  0133D6  1015               	iorwf	(btemp+20)^0,w,c
 17575  0133D8  1014               	iorwf	(btemp+19)^0,w,c
 17576  0133DA  1013               	iorwf	(btemp+18)^0,w,c
 17577  0133DC  E103               	bnz	u16141
 17578  0133DE  0E80               	movlw	128
 17579  0133E0  5C12               	subwf	(btemp+17)^0,w,c
 17580  0133E2  B0D8               	btfsc	status,0,c
 17581  0133E4                     u16141:
 17582  0133E4  EF5E  F093         	goto	u16000
 17583  0133E8                     u16140:
 17584                           
 17585                           ;stkvar	_years @ sp[(-57)+1]
 17586  0133E8  0EC8               	movlw	-56
 17587  0133EA  50E3               	movf	plusw1,w,c
 17588  0133EC  0F64               	addlw	100
 17589  0133EE  6E11               	movwf	(btemp+16)^0,c
 17590  0133F0  0EC9               	movlw	-55
 17591  0133F2  006F FF8C  F012    	movff	plusw1,btemp+17
 17592  0133F8  0E00               	movlw	0
 17593  0133FA  2212               	addwfc	(btemp+17)^0,f,c
 17594  0133FC  0ECA               	movlw	-54
 17595  0133FE  006F FF8C  F013    	movff	plusw1,btemp+18
 17596  013404  0E00               	movlw	0
 17597  013406  2213               	addwfc	(btemp+18)^0,f,c
 17598  013408  0ECB               	movlw	-53
 17599  01340A  006F FF8C  F014    	movff	plusw1,btemp+19
 17600  013410  0E00               	movlw	0
 17601  013412  2214               	addwfc	(btemp+19)^0,f,c
 17602  013414  0ECC               	movlw	-52
 17603  013416  006F FF8C  F015    	movff	plusw1,btemp+20
 17604  01341C  0E00               	movlw	0
 17605  01341E  2215               	addwfc	(btemp+20)^0,f,c
 17606  013420  0ECD               	movlw	-51
 17607  013422  006F FF8C  F016    	movff	plusw1,btemp+21
 17608  013428  0E00               	movlw	0
 17609  01342A  2216               	addwfc	(btemp+21)^0,f,c
 17610  01342C  0ECE               	movlw	-50
 17611  01342E  006F FF8C  F017    	movff	plusw1,btemp+22
 17612  013434  0E00               	movlw	0
 17613  013436  2217               	addwfc	(btemp+22)^0,f,c
 17614  013438  0ECF               	movlw	-49
 17615  01343A  006F FF8C  F018    	movff	plusw1,btemp+23
 17616  013440  0E00               	movlw	0
 17617  013442  2218               	addwfc	(btemp+23)^0,f,c
 17618  013444  AE18               	btfss	(btemp+23)^0,7,c
 17619  013446  D011               	goto	l16449
 17620  013448  0E80               	movlw	128
 17621  01344A  5C12               	subwf	(btemp+17)^0,w,c
 17622  01344C  0EFF               	movlw	255
 17623  01344E  5813               	subwfb	(btemp+18)^0,w,c
 17624  013450  0EFF               	movlw	255
 17625  013452  5814               	subwfb	(btemp+19)^0,w,c
 17626  013454  0EFF               	movlw	255
 17627  013456  5815               	subwfb	(btemp+20)^0,w,c
 17628  013458  0EFF               	movlw	255
 17629  01345A  5816               	subwfb	(btemp+21)^0,w,c
 17630  01345C  0EFF               	movlw	255
 17631  01345E  5817               	subwfb	(btemp+22)^0,w,c
 17632  013460  0EFF               	movlw	255
 17633  013462  5818               	subwfb	(btemp+23)^0,w,c
 17634  013464  A0D8               	btfss	status,0,c
 17635  013466  EF5E  F093         	goto	u16000
 17636  01346A                     l16449:
 17637                           
 17638                           ;stkvar	_years @ sp[(-57)+1]
 17639  01346A  0EC8               	movlw	-56
 17640  01346C  50E3               	movf	plusw1,w,c
 17641  01346E  0F64               	addlw	100
 17642  013470  6E0B               	movwf	(btemp+10)^0,c
 17643  013472  0EC9               	movlw	-55
 17644  013474  006F FF8C  F00C    	movff	plusw1,btemp+11
 17645  01347A  0E00               	movlw	0
 17646  01347C  220C               	addwfc	(btemp+11)^0,f,c
 17647                           
 17648                           ;stkvar	_tm @ sp[(-57)+-10]
 17649  01347E  0EBD               	movlw	-67
 17650  013480  006F FF8C  F009    	movff	plusw1,btemp+8
 17651  013486  0EBE               	movlw	-66
 17652  013488  006F FF8C  F00A    	movff	plusw1,btemp+9
 17653  01348E  0E0A               	movlw	10
 17654  013490  2409               	addwf	(btemp+8)^0,w,c
 17655  013492  6ED9               	movwf	fsr2l,c
 17656  013494  0E00               	movlw	0
 17657  013496  200A               	addwfc	(btemp+9)^0,w,c
 17658  013498  6EDA               	movwf	fsr2h,c
 17659  01349A  0060  F02F  FFDE   	movff	btemp+10,postinc2
 17660  0134A0  0060  F033  FFDD   	movff	btemp+11,postdec2
 17661                           
 17662                           ;stkvar	_months @ sp[(-57)+49]
 17663  0134A6  0EF8               	movlw	-8
 17664  0134A8  50E3               	movf	plusw1,w,c
 17665  0134AA  0F02               	addlw	2
 17666  0134AC  6E0B               	movwf	(btemp+10)^0,c
 17667  0134AE  0EF9               	movlw	-7
 17668  0134B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 17669  0134B6  0E00               	movlw	0
 17670  0134B8  220C               	addwfc	(btemp+11)^0,f,c
 17671                           
 17672                           ;stkvar	_tm @ sp[(-57)+-10]
 17673  0134BA  0EBD               	movlw	-67
 17674  0134BC  006F FF8C  F009    	movff	plusw1,btemp+8
 17675  0134C2  0EBE               	movlw	-66
 17676  0134C4  006F FF8C  F00A    	movff	plusw1,btemp+9
 17677  0134CA  0E08               	movlw	8
 17678  0134CC  2409               	addwf	(btemp+8)^0,w,c
 17679  0134CE  6ED9               	movwf	fsr2l,c
 17680  0134D0  0E00               	movlw	0
 17681  0134D2  200A               	addwfc	(btemp+9)^0,w,c
 17682  0134D4  6EDA               	movwf	fsr2h,c
 17683  0134D6  0060  F02F  FFDE   	movff	btemp+10,postinc2
 17684  0134DC  0060  F033  FFDD   	movff	btemp+11,postdec2
 17685                           
 17686                           ;stkvar	_remdays @ sp[(-57)+25]
 17687  0134E2  0EE0               	movlw	-32
 17688  0134E4  50E3               	movf	plusw1,w,c
 17689  0134E6  0F01               	addlw	1
 17690  0134E8  6E0B               	movwf	(btemp+10)^0,c
 17691  0134EA  0EE1               	movlw	-31
 17692  0134EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17693  0134F2  0E00               	movlw	0
 17694  0134F4  220C               	addwfc	(btemp+11)^0,f,c
 17695                           
 17696                           ;stkvar	_tm @ sp[(-57)+-10]
 17697  0134F6  0EBD               	movlw	-67
 17698  0134F8  006F FF8C  F009    	movff	plusw1,btemp+8
 17699  0134FE  0EBE               	movlw	-66
 17700  013500  006F FF8C  F00A    	movff	plusw1,btemp+9
 17701  013506  0E06               	movlw	6
 17702  013508  2409               	addwf	(btemp+8)^0,w,c
 17703  01350A  6ED9               	movwf	fsr2l,c
 17704  01350C  0E00               	movlw	0
 17705  01350E  200A               	addwfc	(btemp+9)^0,w,c
 17706  013510  6EDA               	movwf	fsr2h,c
 17707  013512  0060  F02F  FFDE   	movff	btemp+10,postinc2
 17708  013518  0060  F033  FFDD   	movff	btemp+11,postdec2
 17709                           
 17710                           ;stkvar	_wday @ sp[(-57)+55]
 17711  01351E  50E1               	movf	fsr1l,w,c
 17712  013520  0FFE               	addlw	-2
 17713  013522  6ED9               	movwf	fsr2l,c
 17714  013524  50E2               	movf	fsr1h,w,c
 17715  013526  6EDA               	movwf	fsr2h,c
 17716  013528  0EFF               	movlw	255
 17717  01352A  22DA               	addwfc	fsr2h,f,c
 17718                           
 17719                           ;stkvar	_tm @ sp[(-57)+-10]
 17720  01352C  0EBD               	movlw	-67
 17721  01352E  006F FF8C  F00B    	movff	plusw1,btemp+10
 17722  013534  0EBE               	movlw	-66
 17723  013536  006F FF8C  F00C    	movff	plusw1,btemp+11
 17724  01353C  0E0C               	movlw	12
 17725  01353E  240B               	addwf	(btemp+10)^0,w,c
 17726  013540  6EE9               	movwf	fsr0l,c
 17727  013542  0E00               	movlw	0
 17728  013544  200C               	addwfc	(btemp+11)^0,w,c
 17729  013546  6EEA               	movwf	fsr0h,c
 17730  013548  006F FF7B FFEE     	movff	postinc2,postinc0
 17731  01354E  006F FF77 FFED     	movff	postdec2,postdec0
 17732                           
 17733                           ;stkvar	_yday @ sp[(-57)+53]
 17734  013554  50E1               	movf	fsr1l,w,c
 17735  013556  0FFC               	addlw	-4
 17736  013558  6ED9               	movwf	fsr2l,c
 17737  01355A  50E2               	movf	fsr1h,w,c
 17738  01355C  6EDA               	movwf	fsr2h,c
 17739  01355E  0EFF               	movlw	255
 17740  013560  22DA               	addwfc	fsr2h,f,c
 17741                           
 17742                           ;stkvar	_tm @ sp[(-57)+-10]
 17743  013562  0EBD               	movlw	-67
 17744  013564  006F FF8C  F00B    	movff	plusw1,btemp+10
 17745  01356A  0EBE               	movlw	-66
 17746  01356C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17747  013572  0E0E               	movlw	14
 17748  013574  240B               	addwf	(btemp+10)^0,w,c
 17749  013576  6EE9               	movwf	fsr0l,c
 17750  013578  0E00               	movlw	0
 17751  01357A  200C               	addwfc	(btemp+11)^0,w,c
 17752  01357C  6EEA               	movwf	fsr0h,c
 17753  01357E  006F FF7B FFEE     	movff	postinc2,postinc0
 17754  013584  006F FF77 FFED     	movff	postdec2,postdec0
 17755  01358A  0E10               	movlw	16
 17756  01358C  6EE6               	movwf	postinc1,c
 17757  01358E  0E0E               	movlw	14
 17758  013590  6EE6               	movwf	postinc1,c
 17759  013592  0E00               	movlw	0
 17760  013594  6EE6               	movwf	postinc1,c
 17761  013596  0E00               	movlw	0
 17762  013598  6EE6               	movwf	postinc1,c
 17763                           
 17764                           ;stkvar	_remsecs @ sp[(-61)+41]
 17765  01359A  0EEC               	movlw	-20
 17766  01359C  006F FF8F FFE6     	movff	plusw1,postinc1
 17767  0135A2  006F FF8F FFE6     	movff	plusw1,postinc1
 17768  0135A8  006F FF8F FFE6     	movff	plusw1,postinc1
 17769  0135AE  006F FF8F FFE6     	movff	plusw1,postinc1
 17770  0135B4  ECF2  F0E9         	call	___aldiv	;wreg free
 17771  0135B8  0060  F004  F00B   	movff	btemp,btemp+10
 17772  0135BE  0060  F008  F00C   	movff	btemp+1,btemp+11
 17773                           
 17774                           ;stkvar	_tm @ sp[(-57)+-10]
 17775  0135C4  0EBD               	movlw	-67
 17776  0135C6  006F FF8C  F009    	movff	plusw1,btemp+8
 17777  0135CC  0EBE               	movlw	-66
 17778  0135CE  006F FF8C  F00A    	movff	plusw1,btemp+9
 17779  0135D4  0E04               	movlw	4
 17780  0135D6  2409               	addwf	(btemp+8)^0,w,c
 17781  0135D8  6ED9               	movwf	fsr2l,c
 17782  0135DA  0E00               	movlw	0
 17783  0135DC  200A               	addwfc	(btemp+9)^0,w,c
 17784  0135DE  6EDA               	movwf	fsr2h,c
 17785  0135E0  0060  F02F  FFDE   	movff	btemp+10,postinc2
 17786  0135E6  0060  F033  FFDD   	movff	btemp+11,postdec2
 17787  0135EC  0E3C               	movlw	60
 17788  0135EE  6EE6               	movwf	postinc1,c
 17789  0135F0  0E00               	movlw	0
 17790  0135F2  6EE6               	movwf	postinc1,c
 17791  0135F4  0E00               	movlw	0
 17792  0135F6  6EE6               	movwf	postinc1,c
 17793  0135F8  0E00               	movlw	0
 17794  0135FA  6EE6               	movwf	postinc1,c
 17795  0135FC  0E3C               	movlw	60
 17796  0135FE  6EE6               	movwf	postinc1,c
 17797  013600  0E00               	movlw	0
 17798  013602  6EE6               	movwf	postinc1,c
 17799  013604  0E00               	movlw	0
 17800  013606  6EE6               	movwf	postinc1,c
 17801  013608  0E00               	movlw	0
 17802  01360A  6EE6               	movwf	postinc1,c
 17803                           
 17804                           ;stkvar	_remsecs @ sp[(-65)+41]
 17805  01360C  0EE8               	movlw	-24
 17806  01360E  006F FF8F FFE6     	movff	plusw1,postinc1
 17807  013614  006F FF8F FFE6     	movff	plusw1,postinc1
 17808  01361A  006F FF8F FFE6     	movff	plusw1,postinc1
 17809  013620  006F FF8F FFE6     	movff	plusw1,postinc1
 17810  013626  ECF2  F0E9         	call	___aldiv	;wreg free
 17811  01362A  0060  F007  FFE6   	movff	btemp,postinc1
 17812  013630  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17813  013636  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17814  01363C  0060  F013  FFE6   	movff	btemp+3,postinc1
 17815  013642  EC78  F0EE         	call	___almod	;wreg free
 17816  013646  0060  F004  F00B   	movff	btemp,btemp+10
 17817  01364C  0060  F008  F00C   	movff	btemp+1,btemp+11
 17818                           
 17819                           ;stkvar	_tm @ sp[(-57)+-10]
 17820  013652  0EBD               	movlw	-67
 17821  013654  006F FF8C  F009    	movff	plusw1,btemp+8
 17822  01365A  0EBE               	movlw	-66
 17823  01365C  006F FF8C  F00A    	movff	plusw1,btemp+9
 17824  013662  0E02               	movlw	2
 17825  013664  2409               	addwf	(btemp+8)^0,w,c
 17826  013666  6ED9               	movwf	fsr2l,c
 17827  013668  0E00               	movlw	0
 17828  01366A  200A               	addwfc	(btemp+9)^0,w,c
 17829  01366C  6EDA               	movwf	fsr2h,c
 17830  01366E  0060  F02F  FFDE   	movff	btemp+10,postinc2
 17831  013674  0060  F033  FFDD   	movff	btemp+11,postdec2
 17832  01367A  0E3C               	movlw	60
 17833  01367C  6EE6               	movwf	postinc1,c
 17834  01367E  0E00               	movlw	0
 17835  013680  6EE6               	movwf	postinc1,c
 17836  013682  0E00               	movlw	0
 17837  013684  6EE6               	movwf	postinc1,c
 17838  013686  0E00               	movlw	0
 17839  013688  6EE6               	movwf	postinc1,c
 17840                           
 17841                           ;stkvar	_remsecs @ sp[(-61)+41]
 17842  01368A  0EEC               	movlw	-20
 17843  01368C  006F FF8F FFE6     	movff	plusw1,postinc1
 17844  013692  006F FF8F FFE6     	movff	plusw1,postinc1
 17845  013698  006F FF8F FFE6     	movff	plusw1,postinc1
 17846  01369E  006F FF8F FFE6     	movff	plusw1,postinc1
 17847  0136A4  EC78  F0EE         	call	___almod	;wreg free
 17848  0136A8  0060  F004  F00B   	movff	btemp,btemp+10
 17849  0136AE  0060  F008  F00C   	movff	btemp+1,btemp+11
 17850                           
 17851                           ;stkvar	_tm @ sp[(-57)+-10]
 17852  0136B4  0EBD               	movlw	-67
 17853  0136B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 17854  0136BC  0EBE               	movlw	-66
 17855  0136BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 17856  0136C4  0060  F02F  FFDE   	movff	btemp+10,postinc2
 17857  0136CA  0060  F033  FFDD   	movff	btemp+11,postdec2
 17858  0136D0  0E00               	movlw	0
 17859  0136D2  6E01               	movwf	btemp^0,c
 17860  0136D4  6A02               	clrf	(btemp+1)^0,c
 17861  0136D6  6A03               	clrf	(btemp+2)^0,c
 17862  0136D8  6A04               	clrf	(btemp+3)^0,c
 17863  0136DA                     l3832:
 17864                           
 17865                           ; ___secs_to_tm: autosize = 57, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10
      +                          , argsize = 10, vargsize = 0
 17866  0136DA  0EBD               	movlw	189
 17867  0136DC  26E1               	addwf	fsr1l,f,c
 17868  0136DE  0EFF               	movlw	255
 17869  0136E0  22E2               	addwfc	fsr1h,f,c
 17870  0136E2  0012               	return		;funcret
 17871  0136E4                     __end_of___secs_to_tm:
 17872                           	opt callstack 0
 17873                           
 17874 ;; *************** function ___omul *****************
 17875 ;; Defined at:
 17876 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
 17877 ;; Parameters:    Size  Location     Type
 17878 ;;  multiplier      8  [STACK] unsigned long long 
 17879 ;;  multiplicand    8  [STACK] unsigned long long 
 17880 ;; Auto vars:     Size  Location     Type
 17881 ;;  product         8  [STACK] unsigned long long 
 17882 ;; Return value:  Size  Location     Type
 17883 ;;                  8  [STACK] unsigned long long 
 17884 ;; Registers used:
 17885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17886 ;; Tracked objects:
 17887 ;;		On entry : 0/0
 17888 ;;		On exit  : 0/0
 17889 ;;		Unchanged: 0/0
 17890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17895 ;;Total ram usage:        0 bytes
 17896 ;; Hardware stack levels used:    1
 17897 ;; Hardware stack levels required when called:   15
 17898 ;; This function calls:
 17899 ;;		Nothing
 17900 ;; This function is called by:
 17901 ;;		___secs_to_tm
 17902 ;;		___year_to_secs
 17903 ;; This function uses a reentrant model
 17904 ;;
 17905                           
 17906                           	psect	text48
 17907  01E27A                     __ptext48:
 17908                           	opt callstack 0
 17909  01E27A                     ___omul:
 17910                           	opt callstack 0
 17911                           
 17912                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17913  01E27A  0E08               	movlw	8
 17914  01E27C  26E1               	addwf	fsr1l,f,c
 17915  01E27E  0E00               	movlw	0
 17916  01E280  22E2               	addwfc	fsr1h,f,c
 17917                           
 17918                           ;stkvar	_product @ sp[(-8)+0]
 17919                           
 17920                           ;incstack = 0
 17921  01E282  0E07               	movlw	7
 17922  01E284  6E01               	movwf	btemp^0,c
 17923  01E286  0EF8               	movlw	-8
 17924  01E288                     u8011:
 17925  01E288  6AE3               	clrf	plusw1,c
 17926  01E28A  2AE8               	incf	wreg,f,c
 17927  01E28C  0601               	decf	btemp^0,f,c
 17928  01E28E  E2FC               	bc	u8011
 17929  01E290                     l10141:
 17930                           
 17931                           ;stkvar	_multiplier @ sp[(-8)+-8]
 17932  01E290  0EF0               	movlw	-16
 17933  01E292  A0E3               	btfss	plusw1,0,c
 17934  01E294  D050               	goto	l10145
 17935                           
 17936                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 17937                           ;stkvar	_product @ sp[(-8)+0]
 17938  01E296  0EF8               	movlw	-8
 17939  01E298  50E3               	movf	plusw1,w,c
 17940  01E29A  6E01               	movwf	btemp^0,c
 17941  01E29C  0EE8               	movlw	-24
 17942  01E29E  50E3               	movf	plusw1,w,c
 17943  01E2A0  2601               	addwf	btemp^0,f,c
 17944  01E2A2  0EF8               	movlw	-8
 17945  01E2A4  0060  F007  FFE3   	movff	btemp,plusw1
 17946  01E2AA  0EF9               	movlw	-7
 17947  01E2AC  50E3               	movf	plusw1,w,c
 17948  01E2AE  6E01               	movwf	btemp^0,c
 17949  01E2B0  0EE9               	movlw	-23
 17950  01E2B2  50E3               	movf	plusw1,w,c
 17951  01E2B4  2201               	addwfc	btemp^0,f,c
 17952  01E2B6  0EF9               	movlw	-7
 17953  01E2B8  0060  F007  FFE3   	movff	btemp,plusw1
 17954  01E2BE  0EFA               	movlw	-6
 17955  01E2C0  50E3               	movf	plusw1,w,c
 17956  01E2C2  6E01               	movwf	btemp^0,c
 17957  01E2C4  0EEA               	movlw	-22
 17958  01E2C6  50E3               	movf	plusw1,w,c
 17959  01E2C8  2201               	addwfc	btemp^0,f,c
 17960  01E2CA  0EFA               	movlw	-6
 17961  01E2CC  0060  F007  FFE3   	movff	btemp,plusw1
 17962  01E2D2  0EFB               	movlw	-5
 17963  01E2D4  50E3               	movf	plusw1,w,c
 17964  01E2D6  6E01               	movwf	btemp^0,c
 17965  01E2D8  0EEB               	movlw	-21
 17966  01E2DA  50E3               	movf	plusw1,w,c
 17967  01E2DC  2201               	addwfc	btemp^0,f,c
 17968  01E2DE  0EFB               	movlw	-5
 17969  01E2E0  0060  F007  FFE3   	movff	btemp,plusw1
 17970  01E2E6  0EFC               	movlw	-4
 17971  01E2E8  50E3               	movf	plusw1,w,c
 17972  01E2EA  6E01               	movwf	btemp^0,c
 17973  01E2EC  0EEC               	movlw	-20
 17974  01E2EE  50E3               	movf	plusw1,w,c
 17975  01E2F0  2201               	addwfc	btemp^0,f,c
 17976  01E2F2  0EFC               	movlw	-4
 17977  01E2F4  0060  F007  FFE3   	movff	btemp,plusw1
 17978  01E2FA  0EFD               	movlw	-3
 17979  01E2FC  50E3               	movf	plusw1,w,c
 17980  01E2FE  6E01               	movwf	btemp^0,c
 17981  01E300  0EED               	movlw	-19
 17982  01E302  50E3               	movf	plusw1,w,c
 17983  01E304  2201               	addwfc	btemp^0,f,c
 17984  01E306  0EFD               	movlw	-3
 17985  01E308  0060  F007  FFE3   	movff	btemp,plusw1
 17986  01E30E  0EFE               	movlw	-2
 17987  01E310  50E3               	movf	plusw1,w,c
 17988  01E312  6E01               	movwf	btemp^0,c
 17989  01E314  0EEE               	movlw	-18
 17990  01E316  50E3               	movf	plusw1,w,c
 17991  01E318  2201               	addwfc	btemp^0,f,c
 17992  01E31A  0EFE               	movlw	-2
 17993  01E31C  0060  F007  FFE3   	movff	btemp,plusw1
 17994  01E322  0EFF               	movlw	-1
 17995  01E324  50E3               	movf	plusw1,w,c
 17996  01E326  6E01               	movwf	btemp^0,c
 17997  01E328  0EEF               	movlw	-17
 17998  01E32A  50E3               	movf	plusw1,w,c
 17999  01E32C  2201               	addwfc	btemp^0,f,c
 18000  01E32E  0EFF               	movlw	-1
 18001  01E330  0060  F007  FFE3   	movff	btemp,plusw1
 18002  01E336                     l10145:
 18003                           
 18004                           ;stkvar	_multiplicand @ sp[(-8)+-16]
 18005  01E336  90D8               	bcf	status,0,c
 18006  01E338  0EE8               	movlw	-24
 18007  01E33A  36E3               	rlcf	plusw1,f,c
 18008  01E33C  0EE9               	movlw	-23
 18009  01E33E  36E3               	rlcf	plusw1,f,c
 18010  01E340  0EEA               	movlw	-22
 18011  01E342  36E3               	rlcf	plusw1,f,c
 18012  01E344  0EEB               	movlw	-21
 18013  01E346  36E3               	rlcf	plusw1,f,c
 18014  01E348  0EEC               	movlw	-20
 18015  01E34A  36E3               	rlcf	plusw1,f,c
 18016  01E34C  0EED               	movlw	-19
 18017  01E34E  36E3               	rlcf	plusw1,f,c
 18018  01E350  0EEE               	movlw	-18
 18019  01E352  36E3               	rlcf	plusw1,f,c
 18020  01E354  0EEF               	movlw	-17
 18021  01E356  36E3               	rlcf	plusw1,f,c
 18022                           
 18023                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18024  01E358  90D8               	bcf	status,0,c
 18025  01E35A  0EF7               	movlw	-9
 18026  01E35C  32E3               	rrcf	plusw1,f,c
 18027  01E35E  0EF6               	movlw	-10
 18028  01E360  32E3               	rrcf	plusw1,f,c
 18029  01E362  0EF5               	movlw	-11
 18030  01E364  32E3               	rrcf	plusw1,f,c
 18031  01E366  0EF4               	movlw	-12
 18032  01E368  32E3               	rrcf	plusw1,f,c
 18033  01E36A  0EF3               	movlw	-13
 18034  01E36C  32E3               	rrcf	plusw1,f,c
 18035  01E36E  0EF2               	movlw	-14
 18036  01E370  32E3               	rrcf	plusw1,f,c
 18037  01E372  0EF1               	movlw	-15
 18038  01E374  32E3               	rrcf	plusw1,f,c
 18039  01E376  0EF0               	movlw	-16
 18040  01E378  32E3               	rrcf	plusw1,f,c
 18041                           
 18042                           ;stkvar	_multiplier @ sp[(-8)+-8]
 18043  01E37A  0EF0               	movlw	-16
 18044  01E37C  50E3               	movf	plusw1,w,c
 18045  01E37E  E188               	bnz	l10141
 18046  01E380  0EF1               	movlw	-15
 18047  01E382  50E3               	movf	plusw1,w,c
 18048  01E384  E185               	bnz	l10141
 18049  01E386  0EF2               	movlw	-14
 18050  01E388  50E3               	movf	plusw1,w,c
 18051  01E38A  E182               	bnz	l10141
 18052  01E38C  0EF3               	movlw	-13
 18053  01E38E  50E3               	movf	plusw1,w,c
 18054  01E390  E10C               	bnz	u8031
 18055  01E392  0EF4               	movlw	-12
 18056  01E394  50E3               	movf	plusw1,w,c
 18057  01E396  E109               	bnz	u8031
 18058  01E398  0EF5               	movlw	-11
 18059  01E39A  50E3               	movf	plusw1,w,c
 18060  01E39C  E106               	bnz	u8031
 18061  01E39E  0EF6               	movlw	-10
 18062  01E3A0  50E3               	movf	plusw1,w,c
 18063  01E3A2  E103               	bnz	u8031
 18064  01E3A4  0EF7               	movlw	-9
 18065  01E3A6  50E3               	movf	plusw1,w,c
 18066  01E3A8  A4D8               	btfss	status,2,c
 18067  01E3AA                     u8031:
 18068  01E3AA  D772               	goto	l10141
 18069                           
 18070                           ;stkvar	_product @ sp[(-8)+0]
 18071  01E3AC  0EF8               	movlw	248
 18072  01E3AE  24E1               	addwf	fsr1l,w,c
 18073  01E3B0  6ED9               	movwf	fsr2l,c
 18074  01E3B2  0EFF               	movlw	255
 18075  01E3B4  20E2               	addwfc	fsr1h,w,c
 18076  01E3B6  6EDA               	movwf	fsr2h,c
 18077                           
 18078                           ;stkvar	?___omul @ sp[(-8)+-8]
 18079  01E3B8  0E08               	movlw	8
 18080  01E3BA  6E01               	movwf	btemp^0,c
 18081  01E3BC  0EF0               	movlw	-16
 18082  01E3BE                     us804999:
 18083  01E3BE  006F FF7B FFE3     	movff	postinc2,plusw1
 18084  01E3C4  28E8               	incf	wreg,w,c
 18085  01E3C6  2E01               	decfsz	btemp^0,f,c
 18086  01E3C8  D7FA               	bra	us804999
 18087                           
 18088                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
 18089  01E3CA  0EF8               	movlw	248
 18090  01E3CC  26E1               	addwf	fsr1l,f,c
 18091  01E3CE  0EFF               	movlw	255
 18092  01E3D0  22E2               	addwfc	fsr1h,f,c
 18093  01E3D2  0012               	return		;funcret
 18094  01E3D4                     __end_of___omul:
 18095                           	opt callstack 0
 18096                           
 18097 ;; *************** function ___lmul *****************
 18098 ;; Defined at:
 18099 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul32.c"
 18100 ;; Parameters:    Size  Location     Type
 18101 ;;  multiplier      4  [STACK] unsigned long 
 18102 ;;  multiplicand    4  [STACK] unsigned long 
 18103 ;; Auto vars:     Size  Location     Type
 18104 ;;  product         4  [STACK] unsigned long 
 18105 ;; Return value:  Size  Location     Type
 18106 ;;                  4  [STACK] unsigned long 
 18107 ;; Registers used:
 18108 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18109 ;; Tracked objects:
 18110 ;;		On entry : 0/0
 18111 ;;		On exit  : 0/0
 18112 ;;		Unchanged: 0/0
 18113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18118 ;;Total ram usage:        0 bytes
 18119 ;; Hardware stack levels used:    1
 18120 ;; Hardware stack levels required when called:   15
 18121 ;; This function calls:
 18122 ;;		Nothing
 18123 ;; This function is called by:
 18124 ;;		___secs_to_tm
 18125 ;;		_rule_to_secs
 18126 ;;		___year_to_secs
 18127 ;; This function uses a reentrant model
 18128 ;;
 18129                           
 18130                           	psect	text49
 18131  01F73E                     __ptext49:
 18132                           	opt callstack 0
 18133  01F73E                     ___lmul:
 18134                           	opt callstack 0
 18135                           
 18136                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18137  01F73E  52E6               	movf	postinc1,f,c
 18138  01F740  52E6               	movf	postinc1,f,c
 18139  01F742  52E6               	movf	postinc1,f,c
 18140  01F744  52E6               	movf	postinc1,f,c
 18141                           
 18142                           ;stkvar	_product @ sp[(-4)+0]
 18143                           
 18144                           ;incstack = 0
 18145  01F746  0EFC               	movlw	-4
 18146  01F748  6AE3               	clrf	plusw1,c
 18147  01F74A  0EFD               	movlw	-3
 18148  01F74C  6AE3               	clrf	plusw1,c
 18149  01F74E  0EFE               	movlw	-2
 18150  01F750  6AE3               	clrf	plusw1,c
 18151  01F752  0EFF               	movlw	-1
 18152  01F754  6AE3               	clrf	plusw1,c
 18153  01F756                     l2716:
 18154                           
 18155                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18156  01F756  0EF8               	movlw	-8
 18157  01F758  A0E3               	btfss	plusw1,0,c
 18158  01F75A  D028               	goto	l10131
 18159                           
 18160                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18161                           ;stkvar	_product @ sp[(-4)+0]
 18162  01F75C  0EFC               	movlw	-4
 18163  01F75E  50E3               	movf	plusw1,w,c
 18164  01F760  6E01               	movwf	btemp^0,c
 18165  01F762  0EF4               	movlw	-12
 18166  01F764  50E3               	movf	plusw1,w,c
 18167  01F766  2601               	addwf	btemp^0,f,c
 18168  01F768  0EFC               	movlw	-4
 18169  01F76A  0060  F007  FFE3   	movff	btemp,plusw1
 18170  01F770  0EFD               	movlw	-3
 18171  01F772  50E3               	movf	plusw1,w,c
 18172  01F774  6E01               	movwf	btemp^0,c
 18173  01F776  0EF5               	movlw	-11
 18174  01F778  50E3               	movf	plusw1,w,c
 18175  01F77A  2201               	addwfc	btemp^0,f,c
 18176  01F77C  0EFD               	movlw	-3
 18177  01F77E  0060  F007  FFE3   	movff	btemp,plusw1
 18178  01F784  0EFE               	movlw	-2
 18179  01F786  50E3               	movf	plusw1,w,c
 18180  01F788  6E01               	movwf	btemp^0,c
 18181  01F78A  0EF6               	movlw	-10
 18182  01F78C  50E3               	movf	plusw1,w,c
 18183  01F78E  2201               	addwfc	btemp^0,f,c
 18184  01F790  0EFE               	movlw	-2
 18185  01F792  0060  F007  FFE3   	movff	btemp,plusw1
 18186  01F798  0EFF               	movlw	-1
 18187  01F79A  50E3               	movf	plusw1,w,c
 18188  01F79C  6E01               	movwf	btemp^0,c
 18189  01F79E  0EF7               	movlw	-9
 18190  01F7A0  50E3               	movf	plusw1,w,c
 18191  01F7A2  2201               	addwfc	btemp^0,f,c
 18192  01F7A4  0EFF               	movlw	-1
 18193  01F7A6  0060  F007  FFE3   	movff	btemp,plusw1
 18194  01F7AC                     l10131:
 18195                           
 18196                           ;stkvar	_multiplicand @ sp[(-4)+-8]
 18197  01F7AC  90D8               	bcf	status,0,c
 18198  01F7AE  0EF4               	movlw	-12
 18199  01F7B0  36E3               	rlcf	plusw1,f,c
 18200  01F7B2  0EF5               	movlw	-11
 18201  01F7B4  36E3               	rlcf	plusw1,f,c
 18202  01F7B6  0EF6               	movlw	-10
 18203  01F7B8  36E3               	rlcf	plusw1,f,c
 18204  01F7BA  0EF7               	movlw	-9
 18205  01F7BC  36E3               	rlcf	plusw1,f,c
 18206                           
 18207                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18208  01F7BE  90D8               	bcf	status,0,c
 18209  01F7C0  0EFB               	movlw	-5
 18210  01F7C2  32E3               	rrcf	plusw1,f,c
 18211  01F7C4  0EFA               	movlw	-6
 18212  01F7C6  32E3               	rrcf	plusw1,f,c
 18213  01F7C8  0EF9               	movlw	-7
 18214  01F7CA  32E3               	rrcf	plusw1,f,c
 18215  01F7CC  0EF8               	movlw	-8
 18216  01F7CE  32E3               	rrcf	plusw1,f,c
 18217                           
 18218                           ;stkvar	_multiplier @ sp[(-4)+-4]
 18219  01F7D0  0EF8               	movlw	-8
 18220  01F7D2  50E3               	movf	plusw1,w,c
 18221  01F7D4  E1C0               	bnz	l2716
 18222  01F7D6  0EF9               	movlw	-7
 18223  01F7D8  50E3               	movf	plusw1,w,c
 18224  01F7DA  E1BD               	bnz	l2716
 18225  01F7DC  0EFA               	movlw	-6
 18226  01F7DE  50E3               	movf	plusw1,w,c
 18227  01F7E0  E1BA               	bnz	l2716
 18228  01F7E2  0EFB               	movlw	-5
 18229  01F7E4  50E3               	movf	plusw1,w,c
 18230  01F7E6  A4D8               	btfss	status,2,c
 18231  01F7E8  D7B6               	goto	l2716
 18232                           
 18233                           ;stkvar	_product @ sp[(-4)+0]
 18234  01F7EA  0EFC               	movlw	-4
 18235  01F7EC  006F FF8C  F001    	movff	plusw1,btemp
 18236  01F7F2  0EFD               	movlw	-3
 18237  01F7F4  006F FF8C  F002    	movff	plusw1,btemp+1
 18238  01F7FA  0EFE               	movlw	-2
 18239  01F7FC  006F FF8C  F003    	movff	plusw1,btemp+2
 18240  01F802  0EFF               	movlw	-1
 18241  01F804  006F FF8C  F004    	movff	plusw1,btemp+3
 18242                           
 18243                           ; ___lmul: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18244  01F80A  0EF4               	movlw	244
 18245  01F80C  26E1               	addwf	fsr1l,f,c
 18246  01F80E  0EFF               	movlw	255
 18247  01F810  22E2               	addwfc	fsr1h,f,c
 18248  01F812  0012               	return		;funcret
 18249  01F814                     __end_of___lmul:
 18250                           	opt callstack 0
 18251                           
 18252 ;; *************** function ___almod *****************
 18253 ;; Defined at:
 18254 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/almod.c"
 18255 ;; Parameters:    Size  Location     Type
 18256 ;;  dividend        4  [STACK] long 
 18257 ;;  divisor         4  [STACK] long 
 18258 ;; Auto vars:     Size  Location     Type
 18259 ;;  sign            1  [STACK] unsigned char 
 18260 ;;  counter         1  [STACK] unsigned char 
 18261 ;; Return value:  Size  Location     Type
 18262 ;;                  4  [STACK] long 
 18263 ;; Registers used:
 18264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18265 ;; Tracked objects:
 18266 ;;		On entry : 0/39
 18267 ;;		On exit  : 0/0
 18268 ;;		Unchanged: 0/0
 18269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18274 ;;Total ram usage:        0 bytes
 18275 ;; Hardware stack levels used:    1
 18276 ;; Hardware stack levels required when called:   15
 18277 ;; This function calls:
 18278 ;;		Nothing
 18279 ;; This function is called by:
 18280 ;;		___secs_to_tm
 18281 ;; This function uses a reentrant model
 18282 ;;
 18283                           
 18284                           	psect	text50
 18285  01DCF0                     __ptext50:
 18286                           	opt callstack 0
 18287  01DCF0                     ___almod:
 18288                           	opt callstack 0
 18289                           
 18290                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18291  01DCF0  52E6               	movf	postinc1,f,c
 18292  01DCF2  52E6               	movf	postinc1,f,c
 18293                           
 18294                           ;stkvar	_sign @ sp[(-2)+0]
 18295                           
 18296                           ;incstack = 0
 18297  01DCF4  0EFE               	movlw	-2
 18298  01DCF6  6AE3               	clrf	plusw1,c
 18299                           
 18300                           ;stkvar	_dividend @ sp[(-2)+-4]
 18301  01DCF8  0EFD               	movlw	-3
 18302  01DCFA  AEE3               	btfss	plusw1,7,c
 18303  01DCFC  D014               	goto	l11921
 18304                           
 18305                           ;stkvar	_dividend @ sp[(-2)+-4]
 18306                           ;stkvar	_dividend @ sp[(-2)+-4]
 18307  01DCFE  0EFA               	movlw	-6
 18308  01DD00  6CE3               	negf	plusw1,c
 18309  01DD02  0EFB               	movlw	-5
 18310  01DD04  1EE3               	comf	plusw1,f,c
 18311  01DD06  0EFC               	movlw	-4
 18312  01DD08  1EE3               	comf	plusw1,f,c
 18313  01DD0A  0EFD               	movlw	-3
 18314  01DD0C  1EE3               	comf	plusw1,f,c
 18315  01DD0E  E308               	bnc	u11160
 18316  01DD10  0EFB               	movlw	-5
 18317  01DD12  2AE3               	incf	plusw1,f,c
 18318  01DD14  E305               	bnc	u11160
 18319  01DD16  0EFC               	movlw	-4
 18320  01DD18  2AE3               	incf	plusw1,f,c
 18321  01DD1A  E302               	bnc	u11160
 18322  01DD1C  0EFD               	movlw	-3
 18323  01DD1E  2AE3               	incf	plusw1,f,c
 18324  01DD20                     u11160:
 18325                           
 18326                           ;stkvar	_sign @ sp[(-2)+0]
 18327  01DD20  0EFE               	movlw	-2
 18328  01DD22  6AE3               	clrf	plusw1,c
 18329  01DD24  2AE3               	incf	plusw1,f,c
 18330  01DD26                     l11921:
 18331                           
 18332                           ;stkvar	_divisor @ sp[(-2)+-8]
 18333  01DD26  0EF9               	movlw	-7
 18334  01DD28  AEE3               	btfss	plusw1,7,c
 18335  01DD2A  D011               	goto	u11180
 18336                           
 18337                           ;stkvar	_divisor @ sp[(-2)+-8]
 18338                           ;stkvar	_divisor @ sp[(-2)+-8]
 18339  01DD2C  0EF6               	movlw	-10
 18340  01DD2E  6CE3               	negf	plusw1,c
 18341  01DD30  0EF7               	movlw	-9
 18342  01DD32  1EE3               	comf	plusw1,f,c
 18343  01DD34  0EF8               	movlw	-8
 18344  01DD36  1EE3               	comf	plusw1,f,c
 18345  01DD38  0EF9               	movlw	-7
 18346  01DD3A  1EE3               	comf	plusw1,f,c
 18347  01DD3C  E308               	bnc	u11180
 18348  01DD3E  0EF7               	movlw	-9
 18349  01DD40  2AE3               	incf	plusw1,f,c
 18350  01DD42  E305               	bnc	u11180
 18351  01DD44  0EF8               	movlw	-8
 18352  01DD46  2AE3               	incf	plusw1,f,c
 18353  01DD48  E302               	bnc	u11180
 18354  01DD4A  0EF9               	movlw	-7
 18355  01DD4C  2AE3               	incf	plusw1,f,c
 18356  01DD4E                     u11180:
 18357                           
 18358                           ;stkvar	_divisor @ sp[(-2)+-8]
 18359  01DD4E  0EF6               	movlw	-10
 18360  01DD50  50E3               	movf	plusw1,w,c
 18361  01DD52  E10A               	bnz	u11190
 18362  01DD54  0EF7               	movlw	-9
 18363  01DD56  50E3               	movf	plusw1,w,c
 18364  01DD58  E107               	bnz	u11190
 18365  01DD5A  0EF8               	movlw	-8
 18366  01DD5C  50E3               	movf	plusw1,w,c
 18367  01DD5E  E104               	bnz	u11190
 18368  01DD60  0EF9               	movlw	-7
 18369  01DD62  50E3               	movf	plusw1,w,c
 18370  01DD64  B4D8               	btfsc	status,2,c
 18371  01DD66  D04D               	goto	u11220
 18372  01DD68                     u11190:
 18373                           
 18374                           ;stkvar	_counter @ sp[(-2)+1]
 18375  01DD68  0EFF               	movlw	-1
 18376  01DD6A  6AE3               	clrf	plusw1,c
 18377  01DD6C  D00A               	goto	L16
 18378  01DD6E                     l11929:
 18379                           
 18380                           ;stkvar	_divisor @ sp[(-2)+-8]
 18381  01DD6E  90D8               	bcf	status,0,c
 18382  01DD70  0EF6               	movlw	-10
 18383  01DD72  36E3               	rlcf	plusw1,f,c
 18384  01DD74  0EF7               	movlw	-9
 18385  01DD76  36E3               	rlcf	plusw1,f,c
 18386  01DD78  0EF8               	movlw	-8
 18387  01DD7A  36E3               	rlcf	plusw1,f,c
 18388  01DD7C  0EF9               	movlw	-7
 18389  01DD7E  36E3               	rlcf	plusw1,f,c
 18390                           
 18391                           ;stkvar	_counter @ sp[(-2)+1]
 18392  01DD80  0EFF               	movlw	-1
 18393  01DD82                     L16:
 18394  01DD82  2AE3               	incf	plusw1,f,c
 18395                           
 18396                           ;stkvar	_divisor @ sp[(-2)+-8]
 18397  01DD84  0EF9               	movlw	-7
 18398  01DD86  AEE3               	btfss	plusw1,7,c
 18399  01DD88  D7F2               	goto	l11929
 18400  01DD8A                     u11200:
 18401                           
 18402                           ;stkvar	_divisor @ sp[(-2)+-8]
 18403                           ;stkvar	_dividend @ sp[(-2)+-4]
 18404  01DD8A  50E1               	movf	fsr1l,w,c
 18405  01DD8C  0FFA               	addlw	-6
 18406  01DD8E  6ED9               	movwf	fsr2l,c
 18407  01DD90  50E2               	movf	fsr1h,w,c
 18408  01DD92  6EDA               	movwf	fsr2h,c
 18409  01DD94  0EFF               	movlw	255
 18410  01DD96  22DA               	addwfc	fsr2h,f,c
 18411  01DD98  0EF6               	movlw	-10
 18412  01DD9A  50E3               	movf	plusw1,w,c
 18413  01DD9C  5CDE               	subwf	postinc2,w,c
 18414  01DD9E  0EF7               	movlw	-9
 18415  01DDA0  50E3               	movf	plusw1,w,c
 18416  01DDA2  58DE               	subwfb	postinc2,w,c
 18417  01DDA4  0EF8               	movlw	-8
 18418  01DDA6  50E3               	movf	plusw1,w,c
 18419  01DDA8  58DE               	subwfb	postinc2,w,c
 18420  01DDAA  0EF9               	movlw	-7
 18421  01DDAC  50E3               	movf	plusw1,w,c
 18422  01DDAE  58DE               	subwfb	postinc2,w,c
 18423  01DDB0  A0D8               	btfss	status,0,c
 18424  01DDB2  D013               	goto	l11937
 18425                           
 18426                           ;stkvar	_divisor @ sp[(-2)+-8]
 18427                           ;stkvar	_dividend @ sp[(-2)+-4]
 18428  01DDB4  50E1               	movf	fsr1l,w,c
 18429  01DDB6  0FFA               	addlw	-6
 18430  01DDB8  6ED9               	movwf	fsr2l,c
 18431  01DDBA  50E2               	movf	fsr1h,w,c
 18432  01DDBC  6EDA               	movwf	fsr2h,c
 18433  01DDBE  0EFF               	movlw	255
 18434  01DDC0  22DA               	addwfc	fsr2h,f,c
 18435  01DDC2  0EF6               	movlw	-10
 18436  01DDC4  50E3               	movf	plusw1,w,c
 18437  01DDC6  5EDE               	subwf	postinc2,f,c
 18438  01DDC8  0EF7               	movlw	-9
 18439  01DDCA  50E3               	movf	plusw1,w,c
 18440  01DDCC  5ADE               	subwfb	postinc2,f,c
 18441  01DDCE  0EF8               	movlw	-8
 18442  01DDD0  50E3               	movf	plusw1,w,c
 18443  01DDD2  5ADE               	subwfb	postinc2,f,c
 18444  01DDD4  0EF9               	movlw	-7
 18445  01DDD6  50E3               	movf	plusw1,w,c
 18446  01DDD8  5ADE               	subwfb	postinc2,f,c
 18447  01DDDA                     l11937:
 18448                           
 18449                           ;stkvar	_divisor @ sp[(-2)+-8]
 18450  01DDDA  90D8               	bcf	status,0,c
 18451  01DDDC  0EF9               	movlw	-7
 18452  01DDDE  32E3               	rrcf	plusw1,f,c
 18453  01DDE0  0EF8               	movlw	-8
 18454  01DDE2  32E3               	rrcf	plusw1,f,c
 18455  01DDE4  0EF7               	movlw	-9
 18456  01DDE6  32E3               	rrcf	plusw1,f,c
 18457  01DDE8  0EF6               	movlw	-10
 18458  01DDEA  32E3               	rrcf	plusw1,f,c
 18459                           
 18460                           ;stkvar	_counter @ sp[(-2)+1]
 18461  01DDEC  0EFF               	movlw	-1
 18462  01DDEE  50E3               	movf	plusw1,w,c
 18463  01DDF0  6E01               	movwf	btemp^0,c
 18464  01DDF2  0E01               	movlw	1
 18465  01DDF4  5E01               	subwf	btemp^0,f,c
 18466  01DDF6  0EFF               	movlw	-1
 18467  01DDF8  0060  F007  FFE3   	movff	btemp,plusw1
 18468  01DDFE  A4D8               	btfss	status,2,c
 18469  01DE00  D7C4               	goto	u11200
 18470  01DE02                     u11220:
 18471                           
 18472                           ;stkvar	_sign @ sp[(-2)+0]
 18473  01DE02  0EFE               	movlw	-2
 18474  01DE04  50E3               	movf	plusw1,w,c
 18475  01DE06  B4D8               	btfsc	status,2,c
 18476  01DE08  D011               	goto	u11240
 18477                           
 18478                           ;stkvar	_dividend @ sp[(-2)+-4]
 18479                           ;stkvar	_dividend @ sp[(-2)+-4]
 18480  01DE0A  0EFA               	movlw	-6
 18481  01DE0C  6CE3               	negf	plusw1,c
 18482  01DE0E  0EFB               	movlw	-5
 18483  01DE10  1EE3               	comf	plusw1,f,c
 18484  01DE12  0EFC               	movlw	-4
 18485  01DE14  1EE3               	comf	plusw1,f,c
 18486  01DE16  0EFD               	movlw	-3
 18487  01DE18  1EE3               	comf	plusw1,f,c
 18488  01DE1A  E308               	bnc	u11240
 18489  01DE1C  0EFB               	movlw	-5
 18490  01DE1E  2AE3               	incf	plusw1,f,c
 18491  01DE20  E305               	bnc	u11240
 18492  01DE22  0EFC               	movlw	-4
 18493  01DE24  2AE3               	incf	plusw1,f,c
 18494  01DE26  E302               	bnc	u11240
 18495  01DE28  0EFD               	movlw	-3
 18496  01DE2A  2AE3               	incf	plusw1,f,c
 18497  01DE2C                     u11240:
 18498                           
 18499                           ;stkvar	_dividend @ sp[(-2)+-4]
 18500  01DE2C  0EFA               	movlw	-6
 18501  01DE2E  006F FF8C  F001    	movff	plusw1,btemp
 18502  01DE34  0EFB               	movlw	-5
 18503  01DE36  006F FF8C  F002    	movff	plusw1,btemp+1
 18504  01DE3C  0EFC               	movlw	-4
 18505  01DE3E  006F FF8C  F003    	movff	plusw1,btemp+2
 18506  01DE44  0EFD               	movlw	-3
 18507  01DE46  006F FF8C  F004    	movff	plusw1,btemp+3
 18508                           
 18509                           ; ___almod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 18510  01DE4C  0EF6               	movlw	246
 18511  01DE4E  26E1               	addwf	fsr1l,f,c
 18512  01DE50  0EFF               	movlw	255
 18513  01DE52  22E2               	addwfc	fsr1h,f,c
 18514  01DE54  0012               	return		;funcret
 18515  01DE56                     __end_of___almod:
 18516                           	opt callstack 0
 18517                           
 18518 ;; *************** function ___aldiv *****************
 18519 ;; Defined at:
 18520 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aldiv.c"
 18521 ;; Parameters:    Size  Location     Type
 18522 ;;  dividend        4  [STACK] long 
 18523 ;;  divisor         4  [STACK] long 
 18524 ;; Auto vars:     Size  Location     Type
 18525 ;;  quotient        4  [STACK] long 
 18526 ;;  sign            1  [STACK] unsigned char 
 18527 ;;  counter         1  [STACK] unsigned char 
 18528 ;; Return value:  Size  Location     Type
 18529 ;;                  4  [STACK] long 
 18530 ;; Registers used:
 18531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18532 ;; Tracked objects:
 18533 ;;		On entry : 0/0
 18534 ;;		On exit  : 0/0
 18535 ;;		Unchanged: 0/0
 18536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18541 ;;Total ram usage:        0 bytes
 18542 ;; Hardware stack levels used:    1
 18543 ;; Hardware stack levels required when called:   15
 18544 ;; This function calls:
 18545 ;;		Nothing
 18546 ;; This function is called by:
 18547 ;;		___secs_to_tm
 18548 ;;		_rule_to_secs
 18549 ;; This function uses a reentrant model
 18550 ;;
 18551                           
 18552                           	psect	text51
 18553  01D3E4                     __ptext51:
 18554                           	opt callstack 0
 18555  01D3E4                     ___aldiv:
 18556                           	opt callstack 0
 18557                           
 18558                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18559  01D3E4  0E06               	movlw	6
 18560  01D3E6  26E1               	addwf	fsr1l,f,c
 18561  01D3E8  0E00               	movlw	0
 18562  01D3EA  22E2               	addwfc	fsr1h,f,c
 18563                           
 18564                           ;stkvar	_sign @ sp[(-6)+4]
 18565                           
 18566                           ;incstack = 0
 18567  01D3EC  0EFE               	movlw	-2
 18568  01D3EE  6AE3               	clrf	plusw1,c
 18569                           
 18570                           ;stkvar	_divisor @ sp[(-6)+-8]
 18571  01D3F0  0EF5               	movlw	-11
 18572  01D3F2  AEE3               	btfss	plusw1,7,c
 18573  01D3F4  D014               	goto	l11467
 18574                           
 18575                           ;stkvar	_divisor @ sp[(-6)+-8]
 18576                           ;stkvar	_divisor @ sp[(-6)+-8]
 18577  01D3F6  0EF2               	movlw	-14
 18578  01D3F8  6CE3               	negf	plusw1,c
 18579  01D3FA  0EF3               	movlw	-13
 18580  01D3FC  1EE3               	comf	plusw1,f,c
 18581  01D3FE  0EF4               	movlw	-12
 18582  01D400  1EE3               	comf	plusw1,f,c
 18583  01D402  0EF5               	movlw	-11
 18584  01D404  1EE3               	comf	plusw1,f,c
 18585  01D406  E308               	bnc	u10480
 18586  01D408  0EF3               	movlw	-13
 18587  01D40A  2AE3               	incf	plusw1,f,c
 18588  01D40C  E305               	bnc	u10480
 18589  01D40E  0EF4               	movlw	-12
 18590  01D410  2AE3               	incf	plusw1,f,c
 18591  01D412  E302               	bnc	u10480
 18592  01D414  0EF5               	movlw	-11
 18593  01D416  2AE3               	incf	plusw1,f,c
 18594  01D418                     u10480:
 18595                           
 18596                           ;stkvar	_sign @ sp[(-6)+4]
 18597  01D418  0EFE               	movlw	-2
 18598  01D41A  6AE3               	clrf	plusw1,c
 18599  01D41C  2AE3               	incf	plusw1,f,c
 18600  01D41E                     l11467:
 18601                           
 18602                           ;stkvar	_dividend @ sp[(-6)+-4]
 18603  01D41E  0EF9               	movlw	-7
 18604  01D420  AEE3               	btfss	plusw1,7,c
 18605  01D422  D013               	goto	l11473
 18606                           
 18607                           ;stkvar	_dividend @ sp[(-6)+-4]
 18608                           ;stkvar	_dividend @ sp[(-6)+-4]
 18609  01D424  0EF6               	movlw	-10
 18610  01D426  6CE3               	negf	plusw1,c
 18611  01D428  0EF7               	movlw	-9
 18612  01D42A  1EE3               	comf	plusw1,f,c
 18613  01D42C  0EF8               	movlw	-8
 18614  01D42E  1EE3               	comf	plusw1,f,c
 18615  01D430  0EF9               	movlw	-7
 18616  01D432  1EE3               	comf	plusw1,f,c
 18617  01D434  E308               	bnc	u10500
 18618  01D436  0EF7               	movlw	-9
 18619  01D438  2AE3               	incf	plusw1,f,c
 18620  01D43A  E305               	bnc	u10500
 18621  01D43C  0EF8               	movlw	-8
 18622  01D43E  2AE3               	incf	plusw1,f,c
 18623  01D440  E302               	bnc	u10500
 18624  01D442  0EF9               	movlw	-7
 18625  01D444  2AE3               	incf	plusw1,f,c
 18626  01D446                     u10500:
 18627                           
 18628                           ;stkvar	_sign @ sp[(-6)+4]
 18629  01D446  0EFE               	movlw	-2
 18630  01D448  70E3               	btg	plusw1,0,c
 18631  01D44A                     l11473:
 18632                           
 18633                           ;stkvar	_quotient @ sp[(-6)+0]
 18634  01D44A  0EFA               	movlw	-6
 18635  01D44C  6AE3               	clrf	plusw1,c
 18636  01D44E  0EFB               	movlw	-5
 18637  01D450  6AE3               	clrf	plusw1,c
 18638  01D452  0EFC               	movlw	-4
 18639  01D454  6AE3               	clrf	plusw1,c
 18640  01D456  0EFD               	movlw	-3
 18641  01D458  6AE3               	clrf	plusw1,c
 18642                           
 18643                           ;stkvar	_divisor @ sp[(-6)+-8]
 18644  01D45A  0EF2               	movlw	-14
 18645  01D45C  50E3               	movf	plusw1,w,c
 18646  01D45E  E10A               	bnz	u10510
 18647  01D460  0EF3               	movlw	-13
 18648  01D462  50E3               	movf	plusw1,w,c
 18649  01D464  E107               	bnz	u10510
 18650  01D466  0EF4               	movlw	-12
 18651  01D468  50E3               	movf	plusw1,w,c
 18652  01D46A  E104               	bnz	u10510
 18653  01D46C  0EF5               	movlw	-11
 18654  01D46E  50E3               	movf	plusw1,w,c
 18655  01D470  B4D8               	btfsc	status,2,c
 18656  01D472  D058               	goto	u10540
 18657  01D474                     u10510:
 18658                           
 18659                           ;stkvar	_counter @ sp[(-6)+5]
 18660  01D474  0EFF               	movlw	-1
 18661  01D476  6AE3               	clrf	plusw1,c
 18662  01D478  D00A               	goto	L17
 18663  01D47A                     l11479:
 18664                           
 18665                           ;stkvar	_divisor @ sp[(-6)+-8]
 18666  01D47A  90D8               	bcf	status,0,c
 18667  01D47C  0EF2               	movlw	-14
 18668  01D47E  36E3               	rlcf	plusw1,f,c
 18669  01D480  0EF3               	movlw	-13
 18670  01D482  36E3               	rlcf	plusw1,f,c
 18671  01D484  0EF4               	movlw	-12
 18672  01D486  36E3               	rlcf	plusw1,f,c
 18673  01D488  0EF5               	movlw	-11
 18674  01D48A  36E3               	rlcf	plusw1,f,c
 18675                           
 18676                           ;stkvar	_counter @ sp[(-6)+5]
 18677  01D48C  0EFF               	movlw	-1
 18678  01D48E                     L17:
 18679  01D48E  2AE3               	incf	plusw1,f,c
 18680                           
 18681                           ;stkvar	_divisor @ sp[(-6)+-8]
 18682  01D490  0EF5               	movlw	-11
 18683  01D492  AEE3               	btfss	plusw1,7,c
 18684  01D494  D7F2               	goto	l11479
 18685  01D496                     u10520:
 18686                           
 18687                           ;stkvar	_quotient @ sp[(-6)+0]
 18688  01D496  90D8               	bcf	status,0,c
 18689  01D498  0EFA               	movlw	-6
 18690  01D49A  36E3               	rlcf	plusw1,f,c
 18691  01D49C  0EFB               	movlw	-5
 18692  01D49E  36E3               	rlcf	plusw1,f,c
 18693  01D4A0  0EFC               	movlw	-4
 18694  01D4A2  36E3               	rlcf	plusw1,f,c
 18695  01D4A4  0EFD               	movlw	-3
 18696  01D4A6  36E3               	rlcf	plusw1,f,c
 18697                           
 18698                           ;stkvar	_divisor @ sp[(-6)+-8]
 18699                           ;stkvar	_dividend @ sp[(-6)+-4]
 18700  01D4A8  50E1               	movf	fsr1l,w,c
 18701  01D4AA  0FF6               	addlw	-10
 18702  01D4AC  6ED9               	movwf	fsr2l,c
 18703  01D4AE  50E2               	movf	fsr1h,w,c
 18704  01D4B0  6EDA               	movwf	fsr2h,c
 18705  01D4B2  0EFF               	movlw	255
 18706  01D4B4  22DA               	addwfc	fsr2h,f,c
 18707  01D4B6  0EF2               	movlw	-14
 18708  01D4B8  50E3               	movf	plusw1,w,c
 18709  01D4BA  5CDE               	subwf	postinc2,w,c
 18710  01D4BC  0EF3               	movlw	-13
 18711  01D4BE  50E3               	movf	plusw1,w,c
 18712  01D4C0  58DE               	subwfb	postinc2,w,c
 18713  01D4C2  0EF4               	movlw	-12
 18714  01D4C4  50E3               	movf	plusw1,w,c
 18715  01D4C6  58DE               	subwfb	postinc2,w,c
 18716  01D4C8  0EF5               	movlw	-11
 18717  01D4CA  50E3               	movf	plusw1,w,c
 18718  01D4CC  58DE               	subwfb	postinc2,w,c
 18719  01D4CE  A0D8               	btfss	status,0,c
 18720  01D4D0  D015               	goto	l11491
 18721                           
 18722                           ;stkvar	_divisor @ sp[(-6)+-8]
 18723                           ;stkvar	_dividend @ sp[(-6)+-4]
 18724  01D4D2  50E1               	movf	fsr1l,w,c
 18725  01D4D4  0FF6               	addlw	-10
 18726  01D4D6  6ED9               	movwf	fsr2l,c
 18727  01D4D8  50E2               	movf	fsr1h,w,c
 18728  01D4DA  6EDA               	movwf	fsr2h,c
 18729  01D4DC  0EFF               	movlw	255
 18730  01D4DE  22DA               	addwfc	fsr2h,f,c
 18731  01D4E0  0EF2               	movlw	-14
 18732  01D4E2  50E3               	movf	plusw1,w,c
 18733  01D4E4  5EDE               	subwf	postinc2,f,c
 18734  01D4E6  0EF3               	movlw	-13
 18735  01D4E8  50E3               	movf	plusw1,w,c
 18736  01D4EA  5ADE               	subwfb	postinc2,f,c
 18737  01D4EC  0EF4               	movlw	-12
 18738  01D4EE  50E3               	movf	plusw1,w,c
 18739  01D4F0  5ADE               	subwfb	postinc2,f,c
 18740  01D4F2  0EF5               	movlw	-11
 18741  01D4F4  50E3               	movf	plusw1,w,c
 18742  01D4F6  5ADE               	subwfb	postinc2,f,c
 18743                           
 18744                           ;stkvar	_quotient @ sp[(-6)+0]
 18745  01D4F8  0EFA               	movlw	-6
 18746  01D4FA  80E3               	bsf	plusw1,0,c
 18747  01D4FC                     l11491:
 18748                           
 18749                           ;stkvar	_divisor @ sp[(-6)+-8]
 18750  01D4FC  90D8               	bcf	status,0,c
 18751  01D4FE  0EF5               	movlw	-11
 18752  01D500  32E3               	rrcf	plusw1,f,c
 18753  01D502  0EF4               	movlw	-12
 18754  01D504  32E3               	rrcf	plusw1,f,c
 18755  01D506  0EF3               	movlw	-13
 18756  01D508  32E3               	rrcf	plusw1,f,c
 18757  01D50A  0EF2               	movlw	-14
 18758  01D50C  32E3               	rrcf	plusw1,f,c
 18759                           
 18760                           ;stkvar	_counter @ sp[(-6)+5]
 18761  01D50E  0EFF               	movlw	-1
 18762  01D510  50E3               	movf	plusw1,w,c
 18763  01D512  6E01               	movwf	btemp^0,c
 18764  01D514  0E01               	movlw	1
 18765  01D516  5E01               	subwf	btemp^0,f,c
 18766  01D518  0EFF               	movlw	-1
 18767  01D51A  0060  F007  FFE3   	movff	btemp,plusw1
 18768  01D520  A4D8               	btfss	status,2,c
 18769  01D522  D7B9               	goto	u10520
 18770  01D524                     u10540:
 18771                           
 18772                           ;stkvar	_sign @ sp[(-6)+4]
 18773  01D524  0EFE               	movlw	-2
 18774  01D526  50E3               	movf	plusw1,w,c
 18775  01D528  B4D8               	btfsc	status,2,c
 18776  01D52A  D011               	goto	u10560
 18777                           
 18778                           ;stkvar	_quotient @ sp[(-6)+0]
 18779                           ;stkvar	_quotient @ sp[(-6)+0]
 18780  01D52C  0EFA               	movlw	-6
 18781  01D52E  6CE3               	negf	plusw1,c
 18782  01D530  0EFB               	movlw	-5
 18783  01D532  1EE3               	comf	plusw1,f,c
 18784  01D534  0EFC               	movlw	-4
 18785  01D536  1EE3               	comf	plusw1,f,c
 18786  01D538  0EFD               	movlw	-3
 18787  01D53A  1EE3               	comf	plusw1,f,c
 18788  01D53C  E308               	bnc	u10560
 18789  01D53E  0EFB               	movlw	-5
 18790  01D540  2AE3               	incf	plusw1,f,c
 18791  01D542  E305               	bnc	u10560
 18792  01D544  0EFC               	movlw	-4
 18793  01D546  2AE3               	incf	plusw1,f,c
 18794  01D548  E302               	bnc	u10560
 18795  01D54A  0EFD               	movlw	-3
 18796  01D54C  2AE3               	incf	plusw1,f,c
 18797  01D54E                     u10560:
 18798                           
 18799                           ;stkvar	_quotient @ sp[(-6)+0]
 18800  01D54E  0EFA               	movlw	-6
 18801  01D550  006F FF8C  F001    	movff	plusw1,btemp
 18802  01D556  0EFB               	movlw	-5
 18803  01D558  006F FF8C  F002    	movff	plusw1,btemp+1
 18804  01D55E  0EFC               	movlw	-4
 18805  01D560  006F FF8C  F003    	movff	plusw1,btemp+2
 18806  01D566  0EFD               	movlw	-3
 18807  01D568  006F FF8C  F004    	movff	plusw1,btemp+3
 18808                           
 18809                           ; ___aldiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 18810  01D56E  0EF2               	movlw	242
 18811  01D570  26E1               	addwf	fsr1l,f,c
 18812  01D572  0EFF               	movlw	255
 18813  01D574  22E2               	addwfc	fsr1h,f,c
 18814  01D576  0012               	return		;funcret
 18815  01D578                     __end_of___aldiv:
 18816                           	opt callstack 0
 18817                           
 18818 ;; *************** function _asctime *****************
 18819 ;; Defined at:
 18820 ;;		line 19 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 18821 ;; Parameters:    Size  Location     Type
 18822 ;;  tim             2  [STACK] PTR const struct tm
 18823 ;;		 -> localtime@tm(24), NULL(0), 
 18824 ;; Auto vars:     Size  Location     Type
 18825 ;;  cp              2  [STACK] PTR unsigned char 
 18826 ;;		 -> asctime@buf(27), 
 18827 ;;  s               2  [STACK] PTR const unsigned char 
 18828 ;;		 -> STR_128(37), STR_127(22), 
 18829 ;; Return value:  Size  Location     Type
 18830 ;;                  2  [STACK] PTR unsigned char 
 18831 ;; Registers used:
 18832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18833 ;; Tracked objects:
 18834 ;;		On entry : 3F/0
 18835 ;;		On exit  : 0/0
 18836 ;;		Unchanged: 0/0
 18837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18842 ;;Total ram usage:        0 bytes
 18843 ;; Hardware stack levels used:    1
 18844 ;; Hardware stack levels required when called:   17
 18845 ;; This function calls:
 18846 ;;		___awdiv
 18847 ;;		___awmod
 18848 ;;		_put2d
 18849 ;; This function is called by:
 18850 ;;		_display_history
 18851 ;; This function uses a reentrant model
 18852 ;;
 18853                           
 18854                           	psect	text52
 18855  017F2E                     __ptext52:
 18856                           	opt callstack 0
 18857  017F2E                     _asctime:
 18858                           	opt callstack 0
 18859                           
 18860                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18861  017F2E  52E6               	movf	postinc1,f,c
 18862  017F30  52E6               	movf	postinc1,f,c
 18863  017F32  52E6               	movf	postinc1,f,c
 18864  017F34  52E6               	movf	postinc1,f,c
 18865                           
 18866                           ;stkvar	_tim @ sp[(-4)+-2]
 18867                           
 18868                           ;incstack = 0
 18869  017F36  0EFA               	movlw	-6
 18870  017F38  006F FF8C  F00B    	movff	plusw1,btemp+10
 18871  017F3E  0EFB               	movlw	-5
 18872  017F40  006F FF8C  F00C    	movff	plusw1,btemp+11
 18873  017F46  0E0C               	movlw	12
 18874  017F48  240B               	addwf	(btemp+10)^0,w,c
 18875  017F4A  6ED9               	movwf	fsr2l,c
 18876  017F4C  0E00               	movlw	0
 18877  017F4E  200C               	addwfc	(btemp+11)^0,w,c
 18878  017F50  6EDA               	movwf	fsr2h,c
 18879  017F52  006F FF78  F00B    	movff	postinc2,btemp+10
 18880  017F58  006F FF74  F00C    	movff	postdec2,btemp+11
 18881  017F5E  0E03               	movlw	3
 18882  017F60  020B               	mulwf	(btemp+10)^0,c
 18883  017F62  006F FFCC  F009    	movff	prodl,btemp+8
 18884  017F68  006F FFD0  F00A    	movff	prodh,btemp+9
 18885  017F6E  020C               	mulwf	(btemp+11)^0,c
 18886  017F70  50F3               	movf	prodl,w,c
 18887  017F72  260A               	addwf	(btemp+9)^0,f,c
 18888  017F74  0ED9               	movlw	low STR_127
 18889  017F76  6E0B               	movwf	(btemp+10)^0,c
 18890  017F78  0EFB               	movlw	high STR_127
 18891  017F7A  6E0C               	movwf	(btemp+11)^0,c
 18892  017F7C  5009               	movf	(btemp+8)^0,w,c
 18893  017F7E  260B               	addwf	(btemp+10)^0,f,c
 18894  017F80  500A               	movf	(btemp+9)^0,w,c
 18895  017F82  220C               	addwfc	(btemp+11)^0,f,c
 18896                           
 18897                           ;stkvar	_s @ sp[(-4)+2]
 18898  017F84  0EFF               	movlw	-1
 18899  017F86  0060  F033  FFE3   	movff	btemp+11,plusw1
 18900  017F8C  0EFE               	movlw	-2
 18901  017F8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18902                           
 18903                           ;stkvar	_cp @ sp[(-4)+0]
 18904  017F94  0E03               	movlw	high asctime@buf
 18905  017F96  6E01               	movwf	btemp^0,c
 18906  017F98  0EFD               	movlw	-3
 18907  017F9A  0060  F007  FFE3   	movff	btemp,plusw1
 18908  017FA0  0EC4               	movlw	low asctime@buf
 18909  017FA2  6E01               	movwf	btemp^0,c
 18910  017FA4  0EFC               	movlw	-4
 18911  017FA6  0060  F007  FFE3   	movff	btemp,plusw1
 18912                           
 18913                           ;stkvar	_s @ sp[(-4)+2]
 18914  017FAC  50E1               	movf	fsr1l,w,c
 18915  017FAE  0FFE               	addlw	-2
 18916  017FB0  6ED9               	movwf	fsr2l,c
 18917  017FB2  50E2               	movf	fsr1h,w,c
 18918  017FB4  6EDA               	movwf	fsr2h,c
 18919  017FB6  0EFF               	movlw	255
 18920  017FB8  22DA               	addwfc	fsr2h,f,c
 18921  017FBA  006F FF7B FFF6     	movff	postinc2,tblptrl
 18922  017FC0  006F FF77 FFF7     	movff	postdec2,tblptrh
 18923  017FC6                     	if	0	;tblptru may be non-zero
 18924  017FC6                     	endif
 18925  017FC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18926  017FC6  0E00               	movlw	low (__mediumconst shr (0+16))
 18927  017FC8  6EF8               	movwf	tblptru,c
 18928  017FCA                     	endif
 18929                           
 18930                           ;stkvar	_cp @ sp[(-4)+0]
 18931  017FCA  0EFC               	movlw	-4
 18932  017FCC  006F FF8F FFD9     	movff	plusw1,fsr2l
 18933  017FD2  0EFD               	movlw	-3
 18934  017FD4  006F FF8F FFDA     	movff	plusw1,fsr2h
 18935  017FDA  0008               	tblrd		*
 18936  017FDC  006F FFD7 FFDF     	movff	tablat,indf2
 18937                           
 18938                           ;stkvar	_s @ sp[(-4)+2]
 18939  017FE2  0EFE               	movlw	-2
 18940  017FE4  50E3               	movf	plusw1,w,c
 18941  017FE6  0F01               	addlw	1
 18942  017FE8  6E01               	movwf	btemp^0,c
 18943  017FEA  0EFE               	movlw	-2
 18944  017FEC  0060  F007  FFE3   	movff	btemp,plusw1
 18945  017FF2  6A01               	clrf	btemp^0,c
 18946  017FF4  0EFF               	movlw	-1
 18947  017FF6  50E3               	movf	plusw1,w,c
 18948  017FF8  2001               	addwfc	btemp^0,w,c
 18949  017FFA  6E01               	movwf	btemp^0,c
 18950  017FFC  0EFF               	movlw	-1
 18951  017FFE  0060  F007  FFE3   	movff	btemp,plusw1
 18952                           
 18953                           ;stkvar	_cp @ sp[(-4)+0]
 18954  018004  0EFC               	movlw	-4
 18955  018006  50E3               	movf	plusw1,w,c
 18956  018008  0F01               	addlw	1
 18957  01800A  6E01               	movwf	btemp^0,c
 18958  01800C  0EFC               	movlw	-4
 18959  01800E  0060  F007  FFE3   	movff	btemp,plusw1
 18960  018014  6A01               	clrf	btemp^0,c
 18961  018016  0EFD               	movlw	-3
 18962  018018  50E3               	movf	plusw1,w,c
 18963  01801A  2001               	addwfc	btemp^0,w,c
 18964  01801C  6E01               	movwf	btemp^0,c
 18965  01801E  0EFD               	movlw	-3
 18966  018020  0060  F007  FFE3   	movff	btemp,plusw1
 18967                           
 18968                           ;stkvar	_s @ sp[(-4)+2]
 18969  018026  50E1               	movf	fsr1l,w,c
 18970  018028  0FFE               	addlw	-2
 18971  01802A  6ED9               	movwf	fsr2l,c
 18972  01802C  50E2               	movf	fsr1h,w,c
 18973  01802E  6EDA               	movwf	fsr2h,c
 18974  018030  0EFF               	movlw	255
 18975  018032  22DA               	addwfc	fsr2h,f,c
 18976  018034  006F FF7B FFF6     	movff	postinc2,tblptrl
 18977  01803A  006F FF77 FFF7     	movff	postdec2,tblptrh
 18978  018040                     	if	0	;tblptru may be non-zero
 18979  018040                     	endif
 18980  018040                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18981  018040  0E00               	movlw	low (__mediumconst shr (0+16))
 18982  018042  6EF8               	movwf	tblptru,c
 18983  018044                     	endif
 18984                           
 18985                           ;stkvar	_cp @ sp[(-4)+0]
 18986  018044  0EFC               	movlw	-4
 18987  018046  006F FF8F FFD9     	movff	plusw1,fsr2l
 18988  01804C  0EFD               	movlw	-3
 18989  01804E  006F FF8F FFDA     	movff	plusw1,fsr2h
 18990  018054  0008               	tblrd		*
 18991  018056  006F FFD7 FFDF     	movff	tablat,indf2
 18992                           
 18993                           ;stkvar	_s @ sp[(-4)+2]
 18994  01805C  0EFE               	movlw	-2
 18995  01805E  50E3               	movf	plusw1,w,c
 18996  018060  0F01               	addlw	1
 18997  018062  6E01               	movwf	btemp^0,c
 18998  018064  0EFE               	movlw	-2
 18999  018066  0060  F007  FFE3   	movff	btemp,plusw1
 19000  01806C  6A01               	clrf	btemp^0,c
 19001  01806E  0EFF               	movlw	-1
 19002  018070  50E3               	movf	plusw1,w,c
 19003  018072  2001               	addwfc	btemp^0,w,c
 19004  018074  6E01               	movwf	btemp^0,c
 19005  018076  0EFF               	movlw	-1
 19006  018078  0060  F007  FFE3   	movff	btemp,plusw1
 19007                           
 19008                           ;stkvar	_cp @ sp[(-4)+0]
 19009  01807E  0EFC               	movlw	-4
 19010  018080  50E3               	movf	plusw1,w,c
 19011  018082  0F01               	addlw	1
 19012  018084  6E01               	movwf	btemp^0,c
 19013  018086  0EFC               	movlw	-4
 19014  018088  0060  F007  FFE3   	movff	btemp,plusw1
 19015  01808E  6A01               	clrf	btemp^0,c
 19016  018090  0EFD               	movlw	-3
 19017  018092  50E3               	movf	plusw1,w,c
 19018  018094  2001               	addwfc	btemp^0,w,c
 19019  018096  6E01               	movwf	btemp^0,c
 19020  018098  0EFD               	movlw	-3
 19021  01809A  0060  F007  FFE3   	movff	btemp,plusw1
 19022                           
 19023                           ;stkvar	_s @ sp[(-4)+2]
 19024  0180A0  50E1               	movf	fsr1l,w,c
 19025  0180A2  0FFE               	addlw	-2
 19026  0180A4  6ED9               	movwf	fsr2l,c
 19027  0180A6  50E2               	movf	fsr1h,w,c
 19028  0180A8  6EDA               	movwf	fsr2h,c
 19029  0180AA  0EFF               	movlw	255
 19030  0180AC  22DA               	addwfc	fsr2h,f,c
 19031  0180AE  006F FF7B FFF6     	movff	postinc2,tblptrl
 19032  0180B4  006F FF77 FFF7     	movff	postdec2,tblptrh
 19033  0180BA                     	if	0	;tblptru may be non-zero
 19034  0180BA                     	endif
 19035  0180BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19036  0180BA  0E00               	movlw	low (__mediumconst shr (0+16))
 19037  0180BC  6EF8               	movwf	tblptru,c
 19038  0180BE                     	endif
 19039                           
 19040                           ;stkvar	_cp @ sp[(-4)+0]
 19041  0180BE  0EFC               	movlw	-4
 19042  0180C0  006F FF8F FFD9     	movff	plusw1,fsr2l
 19043  0180C6  0EFD               	movlw	-3
 19044  0180C8  006F FF8F FFDA     	movff	plusw1,fsr2h
 19045  0180CE  0008               	tblrd		*
 19046  0180D0  006F FFD7 FFDF     	movff	tablat,indf2
 19047                           
 19048                           ;stkvar	_cp @ sp[(-4)+0]
 19049  0180D6  0EFC               	movlw	-4
 19050  0180D8  50E3               	movf	plusw1,w,c
 19051  0180DA  0F01               	addlw	1
 19052  0180DC  6E01               	movwf	btemp^0,c
 19053  0180DE  0EFC               	movlw	-4
 19054  0180E0  0060  F007  FFE3   	movff	btemp,plusw1
 19055  0180E6  6A01               	clrf	btemp^0,c
 19056  0180E8  0EFD               	movlw	-3
 19057  0180EA  50E3               	movf	plusw1,w,c
 19058  0180EC  2001               	addwfc	btemp^0,w,c
 19059  0180EE  6E01               	movwf	btemp^0,c
 19060  0180F0  0EFD               	movlw	-3
 19061  0180F2  0060  F007  FFE3   	movff	btemp,plusw1
 19062                           
 19063                           ;stkvar	_cp @ sp[(-4)+0]
 19064  0180F8  0EFC               	movlw	-4
 19065  0180FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 19066  018100  0EFD               	movlw	-3
 19067  018102  006F FF8F FFDA     	movff	plusw1,fsr2h
 19068  018108  0E20               	movlw	32
 19069  01810A  6EDF               	movwf	indf2,c
 19070                           
 19071                           ;stkvar	_cp @ sp[(-4)+0]
 19072  01810C  0EFC               	movlw	-4
 19073  01810E  50E3               	movf	plusw1,w,c
 19074  018110  0F01               	addlw	1
 19075  018112  6E01               	movwf	btemp^0,c
 19076  018114  0EFC               	movlw	-4
 19077  018116  0060  F007  FFE3   	movff	btemp,plusw1
 19078  01811C  6A01               	clrf	btemp^0,c
 19079  01811E  0EFD               	movlw	-3
 19080  018120  50E3               	movf	plusw1,w,c
 19081  018122  2001               	addwfc	btemp^0,w,c
 19082  018124  6E01               	movwf	btemp^0,c
 19083  018126  0EFD               	movlw	-3
 19084  018128  0060  F007  FFE3   	movff	btemp,plusw1
 19085                           
 19086                           ;stkvar	_tim @ sp[(-4)+-2]
 19087  01812E  0EFA               	movlw	-6
 19088  018130  006F FF8C  F00B    	movff	plusw1,btemp+10
 19089  018136  0EFB               	movlw	-5
 19090  018138  006F FF8C  F00C    	movff	plusw1,btemp+11
 19091  01813E  0E08               	movlw	8
 19092  018140  240B               	addwf	(btemp+10)^0,w,c
 19093  018142  6ED9               	movwf	fsr2l,c
 19094  018144  0E00               	movlw	0
 19095  018146  200C               	addwfc	(btemp+11)^0,w,c
 19096  018148  6EDA               	movwf	fsr2h,c
 19097  01814A  006F FF78  F00B    	movff	postinc2,btemp+10
 19098  018150  006F FF74  F00C    	movff	postdec2,btemp+11
 19099  018156  0E03               	movlw	3
 19100  018158  020B               	mulwf	(btemp+10)^0,c
 19101  01815A  006F FFCC  F009    	movff	prodl,btemp+8
 19102  018160  006F FFD0  F00A    	movff	prodh,btemp+9
 19103  018166  020C               	mulwf	(btemp+11)^0,c
 19104  018168  50F3               	movf	prodl,w,c
 19105  01816A  260A               	addwf	(btemp+9)^0,f,c
 19106  01816C  0EBE               	movlw	low STR_128
 19107  01816E  6E0B               	movwf	(btemp+10)^0,c
 19108  018170  0EFA               	movlw	high STR_128
 19109  018172  6E0C               	movwf	(btemp+11)^0,c
 19110  018174  5009               	movf	(btemp+8)^0,w,c
 19111  018176  260B               	addwf	(btemp+10)^0,f,c
 19112  018178  500A               	movf	(btemp+9)^0,w,c
 19113  01817A  220C               	addwfc	(btemp+11)^0,f,c
 19114                           
 19115                           ;stkvar	_s @ sp[(-4)+2]
 19116  01817C  0EFF               	movlw	-1
 19117  01817E  0060  F033  FFE3   	movff	btemp+11,plusw1
 19118  018184  0EFE               	movlw	-2
 19119  018186  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19120                           
 19121                           ;stkvar	_s @ sp[(-4)+2]
 19122  01818C  50E1               	movf	fsr1l,w,c
 19123  01818E  0FFE               	addlw	-2
 19124  018190  6ED9               	movwf	fsr2l,c
 19125  018192  50E2               	movf	fsr1h,w,c
 19126  018194  6EDA               	movwf	fsr2h,c
 19127  018196  0EFF               	movlw	255
 19128  018198  22DA               	addwfc	fsr2h,f,c
 19129  01819A  006F FF7B FFF6     	movff	postinc2,tblptrl
 19130  0181A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 19131  0181A6                     	if	0	;tblptru may be non-zero
 19132  0181A6                     	endif
 19133  0181A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19134  0181A6  0E00               	movlw	low (__mediumconst shr (0+16))
 19135  0181A8  6EF8               	movwf	tblptru,c
 19136  0181AA                     	endif
 19137                           
 19138                           ;stkvar	_cp @ sp[(-4)+0]
 19139  0181AA  0EFC               	movlw	-4
 19140  0181AC  006F FF8F FFD9     	movff	plusw1,fsr2l
 19141  0181B2  0EFD               	movlw	-3
 19142  0181B4  006F FF8F FFDA     	movff	plusw1,fsr2h
 19143  0181BA  0008               	tblrd		*
 19144  0181BC  006F FFD7 FFDF     	movff	tablat,indf2
 19145                           
 19146                           ;stkvar	_s @ sp[(-4)+2]
 19147  0181C2  0EFE               	movlw	-2
 19148  0181C4  50E3               	movf	plusw1,w,c
 19149  0181C6  0F01               	addlw	1
 19150  0181C8  6E01               	movwf	btemp^0,c
 19151  0181CA  0EFE               	movlw	-2
 19152  0181CC  0060  F007  FFE3   	movff	btemp,plusw1
 19153  0181D2  6A01               	clrf	btemp^0,c
 19154  0181D4  0EFF               	movlw	-1
 19155  0181D6  50E3               	movf	plusw1,w,c
 19156  0181D8  2001               	addwfc	btemp^0,w,c
 19157  0181DA  6E01               	movwf	btemp^0,c
 19158  0181DC  0EFF               	movlw	-1
 19159  0181DE  0060  F007  FFE3   	movff	btemp,plusw1
 19160                           
 19161                           ;stkvar	_cp @ sp[(-4)+0]
 19162  0181E4  0EFC               	movlw	-4
 19163  0181E6  50E3               	movf	plusw1,w,c
 19164  0181E8  0F01               	addlw	1
 19165  0181EA  6E01               	movwf	btemp^0,c
 19166  0181EC  0EFC               	movlw	-4
 19167  0181EE  0060  F007  FFE3   	movff	btemp,plusw1
 19168  0181F4  6A01               	clrf	btemp^0,c
 19169  0181F6  0EFD               	movlw	-3
 19170  0181F8  50E3               	movf	plusw1,w,c
 19171  0181FA  2001               	addwfc	btemp^0,w,c
 19172  0181FC  6E01               	movwf	btemp^0,c
 19173  0181FE  0EFD               	movlw	-3
 19174  018200  0060  F007  FFE3   	movff	btemp,plusw1
 19175                           
 19176                           ;stkvar	_s @ sp[(-4)+2]
 19177  018206  50E1               	movf	fsr1l,w,c
 19178  018208  0FFE               	addlw	-2
 19179  01820A  6ED9               	movwf	fsr2l,c
 19180  01820C  50E2               	movf	fsr1h,w,c
 19181  01820E  6EDA               	movwf	fsr2h,c
 19182  018210  0EFF               	movlw	255
 19183  018212  22DA               	addwfc	fsr2h,f,c
 19184  018214  006F FF7B FFF6     	movff	postinc2,tblptrl
 19185  01821A  006F FF77 FFF7     	movff	postdec2,tblptrh
 19186  018220                     	if	0	;tblptru may be non-zero
 19187  018220                     	endif
 19188  018220                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19189  018220  0E00               	movlw	low (__mediumconst shr (0+16))
 19190  018222  6EF8               	movwf	tblptru,c
 19191  018224                     	endif
 19192                           
 19193                           ;stkvar	_cp @ sp[(-4)+0]
 19194  018224  0EFC               	movlw	-4
 19195  018226  006F FF8F FFD9     	movff	plusw1,fsr2l
 19196  01822C  0EFD               	movlw	-3
 19197  01822E  006F FF8F FFDA     	movff	plusw1,fsr2h
 19198  018234  0008               	tblrd		*
 19199  018236  006F FFD7 FFDF     	movff	tablat,indf2
 19200                           
 19201                           ;stkvar	_s @ sp[(-4)+2]
 19202  01823C  0EFE               	movlw	-2
 19203  01823E  50E3               	movf	plusw1,w,c
 19204  018240  0F01               	addlw	1
 19205  018242  6E01               	movwf	btemp^0,c
 19206  018244  0EFE               	movlw	-2
 19207  018246  0060  F007  FFE3   	movff	btemp,plusw1
 19208  01824C  6A01               	clrf	btemp^0,c
 19209  01824E  0EFF               	movlw	-1
 19210  018250  50E3               	movf	plusw1,w,c
 19211  018252  2001               	addwfc	btemp^0,w,c
 19212  018254  6E01               	movwf	btemp^0,c
 19213  018256  0EFF               	movlw	-1
 19214  018258  0060  F007  FFE3   	movff	btemp,plusw1
 19215                           
 19216                           ;stkvar	_cp @ sp[(-4)+0]
 19217  01825E  0EFC               	movlw	-4
 19218  018260  50E3               	movf	plusw1,w,c
 19219  018262  0F01               	addlw	1
 19220  018264  6E01               	movwf	btemp^0,c
 19221  018266  0EFC               	movlw	-4
 19222  018268  0060  F007  FFE3   	movff	btemp,plusw1
 19223  01826E  6A01               	clrf	btemp^0,c
 19224  018270  0EFD               	movlw	-3
 19225  018272  50E3               	movf	plusw1,w,c
 19226  018274  2001               	addwfc	btemp^0,w,c
 19227  018276  6E01               	movwf	btemp^0,c
 19228  018278  0EFD               	movlw	-3
 19229  01827A  0060  F007  FFE3   	movff	btemp,plusw1
 19230                           
 19231                           ;stkvar	_s @ sp[(-4)+2]
 19232  018280  50E1               	movf	fsr1l,w,c
 19233  018282  0FFE               	addlw	-2
 19234  018284  6ED9               	movwf	fsr2l,c
 19235  018286  50E2               	movf	fsr1h,w,c
 19236  018288  6EDA               	movwf	fsr2h,c
 19237  01828A  0EFF               	movlw	255
 19238  01828C  22DA               	addwfc	fsr2h,f,c
 19239  01828E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19240  018294  006F FF77 FFF7     	movff	postdec2,tblptrh
 19241  01829A                     	if	0	;tblptru may be non-zero
 19242  01829A                     	endif
 19243  01829A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19244  01829A  0E00               	movlw	low (__mediumconst shr (0+16))
 19245  01829C  6EF8               	movwf	tblptru,c
 19246  01829E                     	endif
 19247                           
 19248                           ;stkvar	_cp @ sp[(-4)+0]
 19249  01829E  0EFC               	movlw	-4
 19250  0182A0  006F FF8F FFD9     	movff	plusw1,fsr2l
 19251  0182A6  0EFD               	movlw	-3
 19252  0182A8  006F FF8F FFDA     	movff	plusw1,fsr2h
 19253  0182AE  0008               	tblrd		*
 19254  0182B0  006F FFD7 FFDF     	movff	tablat,indf2
 19255  0182B6  0E20               	movlw	32
 19256  0182B8  0103               	movlb	3	; () banked
 19257  0182BA  6FCB               	movwf	(asctime@buf+7)& (0+255),b
 19258                           
 19259                           ; BSR set to: 3
 19260  0182BC  0E20               	movlw	32
 19261  0182BE  6EE6               	movwf	postinc1,c
 19262  0182C0  0E20               	movlw	32
 19263  0182C2  6EE6               	movwf	postinc1,c
 19264                           
 19265                           ;stkvar	_tim @ sp[(-6)+-2]
 19266  0182C4  0EF8               	movlw	-8
 19267  0182C6  006F FF8C  F00B    	movff	plusw1,btemp+10
 19268  0182CC  0EF9               	movlw	-7
 19269  0182CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 19270  0182D4  0E06               	movlw	6
 19271  0182D6  240B               	addwf	(btemp+10)^0,w,c
 19272  0182D8  6ED9               	movwf	fsr2l,c
 19273  0182DA  0E00               	movlw	0
 19274  0182DC  200C               	addwfc	(btemp+11)^0,w,c
 19275  0182DE  6EDA               	movwf	fsr2h,c
 19276  0182E0  50DF               	movf	indf2,w,c
 19277  0182E2  6EE6               	movwf	postinc1,c
 19278  0182E4  0ECE               	movlw	low (asctime@buf+10)
 19279  0182E6  6EE6               	movwf	postinc1,c
 19280  0182E8  0E03               	movlw	high (asctime@buf+10)
 19281  0182EA  6EE6               	movwf	postinc1,c
 19282  0182EC  ECAC  F0F5         	call	_put2d	;wreg free
 19283  0182F0  0E3A               	movlw	58
 19284  0182F2  6EE6               	movwf	postinc1,c
 19285  0182F4  0E30               	movlw	48
 19286  0182F6  6EE6               	movwf	postinc1,c
 19287                           
 19288                           ;stkvar	_tim @ sp[(-6)+-2]
 19289  0182F8  0EF8               	movlw	-8
 19290  0182FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 19291  018300  0EF9               	movlw	-7
 19292  018302  006F FF8C  F00C    	movff	plusw1,btemp+11
 19293  018308  0E04               	movlw	4
 19294  01830A  240B               	addwf	(btemp+10)^0,w,c
 19295  01830C  6ED9               	movwf	fsr2l,c
 19296  01830E  0E00               	movlw	0
 19297  018310  200C               	addwfc	(btemp+11)^0,w,c
 19298  018312  6EDA               	movwf	fsr2h,c
 19299  018314  50DF               	movf	indf2,w,c
 19300  018316  6EE6               	movwf	postinc1,c
 19301  018318  0ED1               	movlw	low (asctime@buf+13)
 19302  01831A  6EE6               	movwf	postinc1,c
 19303  01831C  0E03               	movlw	high (asctime@buf+13)
 19304  01831E  6EE6               	movwf	postinc1,c
 19305  018320  ECAC  F0F5         	call	_put2d	;wreg free
 19306  018324  0E3A               	movlw	58
 19307  018326  6EE6               	movwf	postinc1,c
 19308  018328  0E30               	movlw	48
 19309  01832A  6EE6               	movwf	postinc1,c
 19310                           
 19311                           ;stkvar	_tim @ sp[(-6)+-2]
 19312  01832C  0EF8               	movlw	-8
 19313  01832E  006F FF8C  F00B    	movff	plusw1,btemp+10
 19314  018334  0EF9               	movlw	-7
 19315  018336  006F FF8C  F00C    	movff	plusw1,btemp+11
 19316  01833C  0E02               	movlw	2
 19317  01833E  240B               	addwf	(btemp+10)^0,w,c
 19318  018340  6ED9               	movwf	fsr2l,c
 19319  018342  0E00               	movlw	0
 19320  018344  200C               	addwfc	(btemp+11)^0,w,c
 19321  018346  6EDA               	movwf	fsr2h,c
 19322  018348  50DF               	movf	indf2,w,c
 19323  01834A  6EE6               	movwf	postinc1,c
 19324  01834C  0ED4               	movlw	low (asctime@buf+16)
 19325  01834E  6EE6               	movwf	postinc1,c
 19326  018350  0E03               	movlw	high (asctime@buf+16)
 19327  018352  6EE6               	movwf	postinc1,c
 19328  018354  ECAC  F0F5         	call	_put2d	;wreg free
 19329  018358  0E20               	movlw	32
 19330  01835A  6EE6               	movwf	postinc1,c
 19331  01835C  0E30               	movlw	48
 19332  01835E  6EE6               	movwf	postinc1,c
 19333                           
 19334                           ;stkvar	_tim @ sp[(-6)+-2]
 19335  018360  0EF8               	movlw	-8
 19336  018362  006F FF8F FFD9     	movff	plusw1,fsr2l
 19337  018368  0EF9               	movlw	-7
 19338  01836A  006F FF8F FFDA     	movff	plusw1,fsr2h
 19339  018370  50DF               	movf	indf2,w,c
 19340  018372  6EE6               	movwf	postinc1,c
 19341  018374  0ED7               	movlw	low (asctime@buf+19)
 19342  018376  6EE6               	movwf	postinc1,c
 19343  018378  0E03               	movlw	high (asctime@buf+19)
 19344  01837A  6EE6               	movwf	postinc1,c
 19345  01837C  ECAC  F0F5         	call	_put2d	;wreg free
 19346  018380  0E00               	movlw	0
 19347  018382  6EE6               	movwf	postinc1,c
 19348  018384  0E20               	movlw	32
 19349  018386  6EE6               	movwf	postinc1,c
 19350  018388  0E64               	movlw	100
 19351  01838A  6EE6               	movwf	postinc1,c
 19352  01838C  0E00               	movlw	0
 19353  01838E  6EE6               	movwf	postinc1,c
 19354                           
 19355                           ;stkvar	_tim @ sp[(-8)+-2]
 19356  018390  0EF6               	movlw	-10
 19357  018392  006F FF8C  F00B    	movff	plusw1,btemp+10
 19358  018398  0EF7               	movlw	-9
 19359  01839A  006F FF8C  F00C    	movff	plusw1,btemp+11
 19360  0183A0  0E0A               	movlw	10
 19361  0183A2  240B               	addwf	(btemp+10)^0,w,c
 19362  0183A4  6ED9               	movwf	fsr2l,c
 19363  0183A6  0E00               	movlw	0
 19364  0183A8  200C               	addwfc	(btemp+11)^0,w,c
 19365  0183AA  6EDA               	movwf	fsr2h,c
 19366  0183AC  006F FF78  F00B    	movff	postinc2,btemp+10
 19367  0183B2  006F FF74  F00C    	movff	postdec2,btemp+11
 19368  0183B8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19369  0183BE  0060  F033  FFE6   	movff	btemp+11,postinc1
 19370  0183C4  EC96  F0F2         	call	___awdiv	;wreg free
 19371  0183C8  5001               	movf	btemp^0,w,c
 19372  0183CA  0F13               	addlw	19
 19373  0183CC  6EE6               	movwf	postinc1,c
 19374  0183CE  0EDA               	movlw	low (asctime@buf+22)
 19375  0183D0  6EE6               	movwf	postinc1,c
 19376  0183D2  0E03               	movlw	high (asctime@buf+22)
 19377  0183D4  6EE6               	movwf	postinc1,c
 19378  0183D6  ECAC  F0F5         	call	_put2d	;wreg free
 19379  0183DA  0E0A               	movlw	10
 19380  0183DC  6EE6               	movwf	postinc1,c
 19381  0183DE  0E30               	movlw	48
 19382  0183E0  6EE6               	movwf	postinc1,c
 19383  0183E2  0E64               	movlw	100
 19384  0183E4  6EE6               	movwf	postinc1,c
 19385  0183E6  0E00               	movlw	0
 19386  0183E8  6EE6               	movwf	postinc1,c
 19387                           
 19388                           ;stkvar	_tim @ sp[(-8)+-2]
 19389  0183EA  0EF6               	movlw	-10
 19390  0183EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 19391  0183F2  0EF7               	movlw	-9
 19392  0183F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 19393  0183FA  0E0A               	movlw	10
 19394  0183FC  240B               	addwf	(btemp+10)^0,w,c
 19395  0183FE  6ED9               	movwf	fsr2l,c
 19396  018400  0E00               	movlw	0
 19397  018402  200C               	addwfc	(btemp+11)^0,w,c
 19398  018404  6EDA               	movwf	fsr2h,c
 19399  018406  006F FF78  F00B    	movff	postinc2,btemp+10
 19400  01840C  006F FF74  F00C    	movff	postdec2,btemp+11
 19401  018412  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19402  018418  0060  F033  FFE6   	movff	btemp+11,postinc1
 19403  01841E  ECC5  F0F6         	call	___awmod	;wreg free
 19404  018422  5001               	movf	btemp^0,w,c
 19405  018424  6EE6               	movwf	postinc1,c
 19406  018426  0EDC               	movlw	low (asctime@buf+24)
 19407  018428  6EE6               	movwf	postinc1,c
 19408  01842A  0E03               	movlw	high (asctime@buf+24)
 19409  01842C  6EE6               	movwf	postinc1,c
 19410  01842E  ECAC  F0F5         	call	_put2d	;wreg free
 19411  018432  0EC4               	movlw	low asctime@buf
 19412  018434  6E01               	movwf	btemp^0,c
 19413  018436  0E03               	movlw	high asctime@buf
 19414  018438  6E02               	movwf	(btemp+1)^0,c
 19415                           
 19416                           ; _asctime: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19417  01843A  0EFA               	movlw	250
 19418  01843C  26E1               	addwf	fsr1l,f,c
 19419  01843E  0EFF               	movlw	255
 19420  018440  22E2               	addwfc	fsr1h,f,c
 19421  018442  0012               	return		;funcret
 19422  018444                     __end_of_asctime:
 19423                           	opt callstack 0
 19424                           
 19425 ;; *************** function _put2d *****************
 19426 ;; Defined at:
 19427 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/asctime.c"
 19428 ;; Parameters:    Size  Location     Type
 19429 ;;  cp              2  [STACK] PTR unsigned char 
 19430 ;;		 -> asctime@buf(27), 
 19431 ;;  i               1  [STACK] unsigned char 
 19432 ;;  cl              1  [STACK] unsigned char 
 19433 ;;  ct              1  [STACK] unsigned char 
 19434 ;; Auto vars:     Size  Location     Type
 19435 ;;		None
 19436 ;; Return value:  Size  Location     Type
 19437 ;;                  1  [STACK] void 
 19438 ;; Registers used:
 19439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19440 ;; Tracked objects:
 19441 ;;		On entry : 0/3
 19442 ;;		On exit  : 0/0
 19443 ;;		Unchanged: 0/0
 19444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19449 ;;Total ram usage:        0 bytes
 19450 ;; Hardware stack levels used:    1
 19451 ;; Hardware stack levels required when called:   16
 19452 ;; This function calls:
 19453 ;;		___awdiv
 19454 ;;		___lbmod
 19455 ;; This function is called by:
 19456 ;;		_asctime
 19457 ;; This function uses a reentrant model
 19458 ;;
 19459                           
 19460                           	psect	text53
 19461  01EB58                     __ptext53:
 19462                           	opt callstack 0
 19463  01EB58                     _put2d:
 19464                           	opt callstack 12
 19465                           
 19466                           ;stkvar	_ct @ sp[(0)+-5]
 19467                           ;stkvar	_cp @ sp[(0)+-2]
 19468                           
 19469                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19470                           ;incstack = 0
 19471  01EB58  0EFE               	movlw	-2
 19472  01EB5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 19473  01EB60  0EFF               	movlw	-1
 19474  01EB62  006F FF8F FFDA     	movff	plusw1,fsr2h
 19475  01EB68  0EFB               	movlw	-5
 19476  01EB6A  006F FF8F FFDF     	movff	plusw1,indf2
 19477  01EB70  0E0A               	movlw	10
 19478  01EB72  6EE6               	movwf	postinc1,c
 19479                           
 19480                           ;stkvar	_i @ sp[(-1)+-3]
 19481  01EB74  0EFC               	movlw	-4
 19482  01EB76  50E3               	movf	plusw1,w,c
 19483  01EB78  6EE6               	movwf	postinc1,c
 19484  01EB7A  ECA8  F001         	call	___lbmod	;wreg free
 19485  01EB7E  0E30               	movlw	48
 19486  01EB80  2601               	addwf	btemp^0,f,c
 19487                           
 19488                           ;stkvar	_cp @ sp[(0)+-2]
 19489  01EB82  0EFE               	movlw	-2
 19490  01EB84  006F FF8C  F002    	movff	plusw1,btemp+1
 19491  01EB8A  0E01               	movlw	1
 19492  01EB8C  5E02               	subwf	(btemp+1)^0,f,c
 19493  01EB8E  0EFE               	movlw	-2
 19494  01EB90  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19495  01EB96  0EFF               	movlw	-1
 19496  01EB98  006F FF8C  F002    	movff	plusw1,btemp+1
 19497  01EB9E  0E00               	movlw	0
 19498  01EBA0  5A02               	subwfb	(btemp+1)^0,f,c
 19499  01EBA2  0EFF               	movlw	-1
 19500  01EBA4  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19501  01EBAA  0EFE               	movlw	-2
 19502  01EBAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 19503  01EBB2  0EFF               	movlw	-1
 19504  01EBB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 19505  01EBBA  0060  F007  FFDF   	movff	btemp,indf2
 19506  01EBC0  0E0A               	movlw	10
 19507  01EBC2  6EE6               	movwf	postinc1,c
 19508  01EBC4  0E00               	movlw	0
 19509  01EBC6  6EE6               	movwf	postinc1,c
 19510                           
 19511                           ;stkvar	_i @ sp[(-2)+-3]
 19512  01EBC8  0EFB               	movlw	-5
 19513  01EBCA  50E3               	movf	plusw1,w,c
 19514  01EBCC  6EE6               	movwf	postinc1,c
 19515  01EBCE  0E00               	movlw	0
 19516  01EBD0  6EE6               	movwf	postinc1,c
 19517  01EBD2  EC96  F0F2         	call	___awdiv	;wreg free
 19518                           
 19519                           ;stkvar	_i @ sp[(0)+-3]
 19520  01EBD6  0EFD               	movlw	-3
 19521  01EBD8  0060  F007  FFE3   	movff	btemp,plusw1
 19522  01EBDE  0EFD               	movlw	-3
 19523  01EBE0  50E3               	movf	plusw1,w,c
 19524  01EBE2  B4D8               	btfsc	status,2,c
 19525  01EBE4  D021               	goto	l16517
 19526                           
 19527                           ;stkvar	_cp @ sp[(0)+-2]
 19528  01EBE6  0EFE               	movlw	-2
 19529  01EBE8  006F FF8C  F001    	movff	plusw1,btemp
 19530  01EBEE  0E01               	movlw	1
 19531  01EBF0  5E01               	subwf	btemp^0,f,c
 19532  01EBF2  0EFE               	movlw	-2
 19533  01EBF4  0060  F007  FFE3   	movff	btemp,plusw1
 19534  01EBFA  0EFF               	movlw	-1
 19535  01EBFC  006F FF8C  F001    	movff	plusw1,btemp
 19536  01EC02  0E00               	movlw	0
 19537  01EC04  5A01               	subwfb	btemp^0,f,c
 19538  01EC06  0EFF               	movlw	-1
 19539  01EC08  0060  F007  FFE3   	movff	btemp,plusw1
 19540  01EC0E  0EFE               	movlw	-2
 19541  01EC10  006F FF8F FFD9     	movff	plusw1,fsr2l
 19542  01EC16  0EFF               	movlw	-1
 19543  01EC18  006F FF8F FFDA     	movff	plusw1,fsr2h
 19544                           
 19545                           ;stkvar	_i @ sp[(0)+-3]
 19546  01EC1E  0EFD               	movlw	-3
 19547  01EC20  50E3               	movf	plusw1,w,c
 19548  01EC22  0F30               	addlw	48
 19549  01EC24  6EDF               	movwf	indf2,c
 19550  01EC26  D020               	goto	l3401
 19551  01EC28                     l16517:
 19552                           
 19553                           ;stkvar	_cl @ sp[(0)+-4]
 19554                           ;stkvar	_cp @ sp[(0)+-2]
 19555  01EC28  0EFE               	movlw	-2
 19556  01EC2A  006F FF8C  F001    	movff	plusw1,btemp
 19557  01EC30  0E01               	movlw	1
 19558  01EC32  5E01               	subwf	btemp^0,f,c
 19559  01EC34  0EFE               	movlw	-2
 19560  01EC36  0060  F007  FFE3   	movff	btemp,plusw1
 19561  01EC3C  0EFF               	movlw	-1
 19562  01EC3E  006F FF8C  F001    	movff	plusw1,btemp
 19563  01EC44  0E00               	movlw	0
 19564  01EC46  5A01               	subwfb	btemp^0,f,c
 19565  01EC48  0EFF               	movlw	-1
 19566  01EC4A  0060  F007  FFE3   	movff	btemp,plusw1
 19567  01EC50  0EFE               	movlw	-2
 19568  01EC52  006F FF8F FFD9     	movff	plusw1,fsr2l
 19569  01EC58  0EFF               	movlw	-1
 19570  01EC5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 19571  01EC60  0EFC               	movlw	-4
 19572  01EC62  006F FF8F FFDF     	movff	plusw1,indf2
 19573  01EC68                     l3401:
 19574                           
 19575                           ; _put2d: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize
      +                           = 5, vargsize = 0
 19576  01EC68  0EFB               	movlw	251
 19577  01EC6A  26E1               	addwf	fsr1l,f,c
 19578  01EC6C  0EFF               	movlw	255
 19579  01EC6E  22E2               	addwfc	fsr1h,f,c
 19580  01EC70  0012               	return		;funcret
 19581  01EC72                     __end_of_put2d:
 19582                           	opt callstack 0
 19583                           
 19584 ;; *************** function ___lbmod *****************
 19585 ;; Defined at:
 19586 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lbmod.c"
 19587 ;; Parameters:    Size  Location     Type
 19588 ;;  dividend        1  [STACK] unsigned char 
 19589 ;;  divisor         1  [STACK] unsigned char 
 19590 ;; Auto vars:     Size  Location     Type
 19591 ;;  rem             1  [STACK] unsigned char 
 19592 ;;  counter         1  [STACK] unsigned char 
 19593 ;; Return value:  Size  Location     Type
 19594 ;;                  1  [STACK] unsigned char 
 19595 ;; Registers used:
 19596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 19597 ;; Tracked objects:
 19598 ;;		On entry : 0/3
 19599 ;;		On exit  : 0/0
 19600 ;;		Unchanged: 0/0
 19601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19606 ;;Total ram usage:        0 bytes
 19607 ;; Hardware stack levels used:    1
 19608 ;; Hardware stack levels required when called:   15
 19609 ;; This function calls:
 19610 ;;		Nothing
 19611 ;; This function is called by:
 19612 ;;		_put2d
 19613 ;; This function uses a reentrant model
 19614 ;;
 19615                           
 19616                           	psect	text54
 19617  000350                     __ptext54:
 19618                           	opt callstack 0
 19619  000350                     ___lbmod:
 19620                           	opt callstack 0
 19621                           
 19622                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19623  000350  52E6               	movf	postinc1,f,c
 19624  000352  52E6               	movf	postinc1,f,c
 19625                           
 19626                           ;stkvar	_counter @ sp[(-2)+1]
 19627                           
 19628                           ;incstack = 0
 19629  000354  0EFF               	movlw	-1
 19630  000356  6AE3               	clrf	plusw1,c
 19631  000358  86E3               	bsf	plusw1,3,c
 19632                           
 19633                           ;stkvar	_rem @ sp[(-2)+0]
 19634  00035A  0EFE               	movlw	-2
 19635  00035C  6AE3               	clrf	plusw1,c
 19636  00035E                     l12339:
 19637                           
 19638                           ;stkvar	_dividend @ sp[(-2)+-1]
 19639  00035E  0EFD               	movlw	-3
 19640  000360  006F FF8C  F00C    	movff	plusw1,btemp+11
 19641                           
 19642                           ;stkvar	_rem @ sp[(-2)+0]
 19643  000366  0EFE               	movlw	-2
 19644  000368  006F FF8C  F00B    	movff	plusw1,btemp+10
 19645  00036E  90D8               	bcf	status,0,c
 19646  000370  340C               	rlcf	(btemp+11)^0,w,c
 19647  000372  340B               	rlcf	(btemp+10)^0,w,c
 19648  000374  6E0C               	movwf	(btemp+11)^0,c
 19649                           
 19650                           ;stkvar	_rem @ sp[(-2)+0]
 19651  000376  0EFE               	movlw	-2
 19652  000378  0060  F033  FFE3   	movff	btemp+11,plusw1
 19653                           
 19654                           ;stkvar	_dividend @ sp[(-2)+-1]
 19655  00037E  50E1               	movf	fsr1l,w,c
 19656  000380  0FFD               	addlw	-3
 19657  000382  6ED9               	movwf	fsr2l,c
 19658  000384  50E2               	movf	fsr1h,w,c
 19659  000386  6EDA               	movwf	fsr2h,c
 19660  000388  0EFF               	movlw	255
 19661  00038A  22DA               	addwfc	fsr2h,f,c
 19662  00038C  90D8               	bcf	status,0,c
 19663  00038E  36DF               	rlcf	indf2,f,c
 19664                           
 19665                           ;stkvar	_divisor @ sp[(-2)+-2]
 19666                           ;stkvar	_rem @ sp[(-2)+0]
 19667  000390  50E1               	movf	fsr1l,w,c
 19668  000392  0FFE               	addlw	-2
 19669  000394  6ED9               	movwf	fsr2l,c
 19670  000396  50E2               	movf	fsr1h,w,c
 19671  000398  6EDA               	movwf	fsr2h,c
 19672  00039A  0EFF               	movlw	255
 19673  00039C  22DA               	addwfc	fsr2h,f,c
 19674  00039E  0EFC               	movlw	-4
 19675  0003A0  50E3               	movf	plusw1,w,c
 19676  0003A2  5CDE               	subwf	postinc2,w,c
 19677  0003A4  A0D8               	btfss	status,0,c
 19678  0003A6  D00D               	goto	l12347
 19679                           
 19680                           ;stkvar	_divisor @ sp[(-2)+-2]
 19681  0003A8  0EFC               	movlw	-4
 19682  0003AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19683                           
 19684                           ;stkvar	_rem @ sp[(-2)+0]
 19685  0003B0  50E1               	movf	fsr1l,w,c
 19686  0003B2  0FFE               	addlw	-2
 19687  0003B4  6ED9               	movwf	fsr2l,c
 19688  0003B6  50E2               	movf	fsr1h,w,c
 19689  0003B8  6EDA               	movwf	fsr2h,c
 19690  0003BA  0EFF               	movlw	255
 19691  0003BC  22DA               	addwfc	fsr2h,f,c
 19692  0003BE  500C               	movf	(btemp+11)^0,w,c
 19693  0003C0  5EDF               	subwf	indf2,f,c
 19694  0003C2                     l12347:
 19695                           
 19696                           ;stkvar	_counter @ sp[(-2)+1]
 19697  0003C2  0EFF               	movlw	-1
 19698  0003C4  50E3               	movf	plusw1,w,c
 19699  0003C6  6E01               	movwf	btemp^0,c
 19700  0003C8  0E01               	movlw	1
 19701  0003CA  5E01               	subwf	btemp^0,f,c
 19702  0003CC  0EFF               	movlw	-1
 19703  0003CE  0060  F007  FFE3   	movff	btemp,plusw1
 19704  0003D4  A4D8               	btfss	status,2,c
 19705  0003D6  D7C3               	goto	l12339
 19706                           
 19707                           ;stkvar	_rem @ sp[(-2)+0]
 19708  0003D8  0EFE               	movlw	-2
 19709  0003DA  006F FF8C  F001    	movff	plusw1,btemp
 19710                           
 19711                           ; ___lbmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19712  0003E0  52E5               	movf	postdec1,f,c
 19713  0003E2  52E5               	movf	postdec1,f,c
 19714  0003E4  52E5               	movf	postdec1,f,c
 19715  0003E6  52E5               	movf	postdec1,f,c
 19716  0003E8  0012               	return		;funcret
 19717  0003EA                     __end_of___lbmod:
 19718                           	opt callstack 0
 19719                           
 19720 ;; *************** function _current_sensor_cal *****************
 19721 ;; Defined at:
 19722 ;;		line 507 in file "main.c"
 19723 ;; Parameters:    Size  Location     Type
 19724 ;;		None
 19725 ;; Auto vars:     Size  Location     Type
 19726 ;;  cp              4  [STACK] unsigned long 
 19727 ;;  cb              4  [STACK] unsigned long 
 19728 ;;  x               1  [STACK] unsigned char 
 19729 ;; Return value:  Size  Location     Type
 19730 ;;                  1  [STACK] _Bool 
 19731 ;; Registers used:
 19732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 19733 ;; Tracked objects:
 19734 ;;		On entry : 0/1
 19735 ;;		On exit  : 0/0
 19736 ;;		Unchanged: 0/0
 19737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19742 ;;Total ram usage:        0 bytes
 19743 ;; Hardware stack levels used:    1
 19744 ;; Hardware stack levels required when called:   28
 19745 ;; This function calls:
 19746 ;;		_WaitMs
 19747 ;;		_cal_current_zero
 19748 ;;		_clear_adc_scan
 19749 ;;		_get_raw_result
 19750 ;;		_get_switch
 19751 ;;		_get_vterm_ptr
 19752 ;;		_spinners
 19753 ;;		_sprintf
 19754 ;;		_start_adc_scan
 19755 ;;		_update_lcd
 19756 ;;		_write_cal_data
 19757 ;; This function is called by:
 19758 ;;		_main
 19759 ;; This function uses a reentrant model
 19760 ;;
 19761                           
 19762                           	psect	text55
 19763  018D80                     __ptext55:
 19764                           	opt callstack 0
 19765  018D80                     _current_sensor_cal:
 19766                           	opt callstack 0
 19767                           
 19768                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19769  018D80  0E09               	movlw	9
 19770  018D82  26E1               	addwf	fsr1l,f,c
 19771  018D84  0E00               	movlw	0
 19772  018D86  22E2               	addwfc	fsr1h,f,c
 19773                           
 19774                           ;main.c: 509:  uint8_t x = 0;
 19775                           ;stkvar	_x @ sp[(-9)+8]
 19776                           
 19777                           ;incstack = 0
 19778  018D88  0EFF               	movlw	-1
 19779  018D8A  6AE3               	clrf	plusw1,c
 19780                           
 19781                           ;main.c: 510:  uint32_t cb = 0, cp = 0;
 19782                           ;stkvar	_cb @ sp[(-9)+4]
 19783  018D8C  0EFB               	movlw	-5
 19784  018D8E  6AE3               	clrf	plusw1,c
 19785  018D90  0EFC               	movlw	-4
 19786  018D92  6AE3               	clrf	plusw1,c
 19787  018D94  0EFD               	movlw	-3
 19788  018D96  6AE3               	clrf	plusw1,c
 19789  018D98  0EFE               	movlw	-2
 19790  018D9A  6AE3               	clrf	plusw1,c
 19791                           
 19792                           ;stkvar	_cp @ sp[(-9)+0]
 19793  018D9C  0EF7               	movlw	-9
 19794  018D9E  6AE3               	clrf	plusw1,c
 19795  018DA0  0EF8               	movlw	-8
 19796  018DA2  6AE3               	clrf	plusw1,c
 19797  018DA4  0EF9               	movlw	-7
 19798  018DA6  6AE3               	clrf	plusw1,c
 19799  018DA8  0EFA               	movlw	-6
 19800  018DAA  6AE3               	clrf	plusw1,c
 19801                           
 19802                           ;main.c: 512:  sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 19803  018DAC  0E76               	movlw	low STR_51
 19804  018DAE  6EE6               	movwf	postinc1,c
 19805  018DB0  0EFE               	movlw	high STR_51
 19806  018DB2  6EE6               	movwf	postinc1,c
 19807  018DB4  0E00               	movlw	0
 19808  018DB6  6EE6               	movwf	postinc1,c
 19809  018DB8  0E00               	movlw	0
 19810  018DBA  6EE6               	movwf	postinc1,c
 19811  018DBC  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 19812  018DC0  0060  F007  FFE6   	movff	btemp,postinc1
 19813  018DC6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19814  018DCC  0E04               	movlw	4
 19815  018DCE  6EE6               	movwf	postinc1,c
 19816  018DD0  ECDB  F0F7         	call	_sprintf	;wreg free
 19817                           
 19818                           ; BSR set to: 0
 19819                           ;main.c: 513:  sprintf(get_vterm_ptr(1, 0), "Sensor Zero         ");
 19820  018DD4  0E22               	movlw	low STR_52
 19821  018DD6  6EE6               	movwf	postinc1,c
 19822  018DD8  0EFE               	movlw	high STR_52
 19823  018DDA  6EE6               	movwf	postinc1,c
 19824  018DDC  0E00               	movlw	0
 19825  018DDE  6EE6               	movwf	postinc1,c
 19826  018DE0  0E01               	movlw	1
 19827  018DE2  6EE6               	movwf	postinc1,c
 19828  018DE4  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 19829  018DE8  0060  F007  FFE6   	movff	btemp,postinc1
 19830  018DEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19831  018DF4  0E04               	movlw	4
 19832  018DF6  6EE6               	movwf	postinc1,c
 19833  018DF8  ECDB  F0F7         	call	_sprintf	;wreg free
 19834                           
 19835                           ; BSR set to: 0
 19836                           ;main.c: 514:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 19837  018DFC  0E0D               	movlw	low STR_53
 19838  018DFE  6EE6               	movwf	postinc1,c
 19839  018E00  0EFE               	movlw	high STR_53
 19840  018E02  6EE6               	movwf	postinc1,c
 19841  018E04  0E00               	movlw	0
 19842  018E06  6EE6               	movwf	postinc1,c
 19843  018E08  0E02               	movlw	2
 19844  018E0A  6EE6               	movwf	postinc1,c
 19845  018E0C  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 19846  018E10  0060  F007  FFE6   	movff	btemp,postinc1
 19847  018E16  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19848  018E1C  0E04               	movlw	4
 19849  018E1E  6EE6               	movwf	postinc1,c
 19850  018E20  ECDB  F0F7         	call	_sprintf	;wreg free
 19851                           
 19852                           ; BSR set to: 0
 19853                           ;main.c: 515:  update_lcd(0);
 19854  018E24  0E00               	movlw	0
 19855  018E26  6EE6               	movwf	postinc1,c
 19856  018E28  EC8D  F0F0         	call	_update_lcd	;wreg free
 19857                           
 19858                           ;main.c: 516:  WaitMs(2000);
 19859  018E2C  0ED0               	movlw	208
 19860  018E2E  6EE6               	movwf	postinc1,c
 19861  018E30  0E07               	movlw	7
 19862  018E32  6EE6               	movwf	postinc1,c
 19863  018E34  EC74  F00B         	call	_WaitMs	;wreg free
 19864  018E38                     l16837:
 19865                           
 19866                           ;main.c: 518:   if (++x > 64)
 19867                           ;stkvar	_x @ sp[(-9)+8]
 19868  018E38  0EFF               	movlw	-1
 19869  018E3A  2AE3               	incf	plusw1,f,c
 19870  018E3C  0EFF               	movlw	-1
 19871  018E3E  006F FF8C  F001    	movff	plusw1,btemp
 19872  018E44  0E40               	movlw	64
 19873  018E46  6401               	cpfsgt	btemp^0,c
 19874  018E48  D001               	goto	l16841
 19875  018E4A  D1CF               	goto	l1514
 19876  018E4C                     l16841:
 19877                           
 19878                           ;main.c: 520:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 19879  018E4C  0E00               	movlw	0
 19880  018E4E  6EE6               	movwf	postinc1,c
 19881  018E50  0E04               	movlw	4
 19882  018E52  6EE6               	movwf	postinc1,c
 19883  018E54  ECBB  F0FA         	call	_spinners	;wreg free
 19884  018E58  5001               	movf	btemp^0,w,c
 19885  018E5A  6EE6               	movwf	postinc1,c
 19886  018E5C  0E00               	movlw	0
 19887  018E5E  6EE6               	movwf	postinc1,c
 19888  018E60  0E48               	movlw	low STR_54
 19889  018E62  6EE6               	movwf	postinc1,c
 19890  018E64  0EFF               	movlw	high STR_54
 19891  018E66  6EE6               	movwf	postinc1,c
 19892  018E68  0E00               	movlw	0
 19893  018E6A  6EE6               	movwf	postinc1,c
 19894  018E6C  0E02               	movlw	2
 19895  018E6E  6EE6               	movwf	postinc1,c
 19896  018E70  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 19897  018E74  0060  F007  FFE6   	movff	btemp,postinc1
 19898  018E7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19899  018E80  0E06               	movlw	6
 19900  018E82  6EE6               	movwf	postinc1,c
 19901  018E84  ECDB  F0F7         	call	_sprintf	;wreg free
 19902                           
 19903                           ;main.c: 521:   update_lcd(0);
 19904  018E88  0E00               	movlw	0
 19905  018E8A  6EE6               	movwf	postinc1,c
 19906  018E8C  EC8D  F0F0         	call	_update_lcd	;wreg free
 19907                           
 19908                           ;main.c: 522:   WaitMs(100);
 19909  018E90  0E64               	movlw	100
 19910  018E92  6EE6               	movwf	postinc1,c
 19911  018E94  0E00               	movlw	0
 19912  018E96  6EE6               	movwf	postinc1,c
 19913  018E98  EC74  F00B         	call	_WaitMs	;wreg free
 19914                           
 19915                           ;main.c: 523:  } while (get_switch(SCALIB));
 19916  018E9C  0E04               	movlw	4
 19917  018E9E  6EE6               	movwf	postinc1,c
 19918  018EA0  EC87  F00C         	call	_get_switch	;wreg free
 19919  018EA4  5001               	movf	btemp^0,w,c
 19920  018EA6  A4D8               	btfss	status,2,c
 19921  018EA8  D7C7               	goto	l16837
 19922                           
 19923                           ;main.c: 525:  x = 0;
 19924                           ;stkvar	_x @ sp[(-9)+8]
 19925  018EAA  0EFF               	movlw	-1
 19926  018EAC  6AE3               	clrf	plusw1,c
 19927  018EAE                     l16849:
 19928                           
 19929                           ;main.c: 527:   cb += get_raw_result(C_BATT);
 19930  018EAE  0E00               	movlw	0
 19931  018EB0  6EE6               	movwf	postinc1,c
 19932  018EB2  EC89  F00E         	call	_get_raw_result	;wreg free
 19933                           
 19934                           ;stkvar	_cb @ sp[(-9)+4]
 19935  018EB6  50E1               	movf	fsr1l,w,c
 19936  018EB8  0FFB               	addlw	-5
 19937  018EBA  6ED9               	movwf	fsr2l,c
 19938  018EBC  50E2               	movf	fsr1h,w,c
 19939  018EBE  6EDA               	movwf	fsr2h,c
 19940  018EC0  0EFF               	movlw	255
 19941  018EC2  22DA               	addwfc	fsr2h,f,c
 19942  018EC4  5001               	movf	btemp^0,w,c
 19943  018EC6  26DE               	addwf	postinc2,f,c
 19944  018EC8  5002               	movf	(btemp+1)^0,w,c
 19945  018ECA  22DE               	addwfc	postinc2,f,c
 19946  018ECC  0E00               	movlw	0
 19947  018ECE  22DE               	addwfc	postinc2,f,c
 19948  018ED0  22DE               	addwfc	postinc2,f,c
 19949                           
 19950                           ;main.c: 528:   cp += get_raw_result(C_PV);
 19951  018ED2  0E01               	movlw	1
 19952  018ED4  6EE6               	movwf	postinc1,c
 19953  018ED6  EC89  F00E         	call	_get_raw_result	;wreg free
 19954                           
 19955                           ;stkvar	_cp @ sp[(-9)+0]
 19956  018EDA  50E1               	movf	fsr1l,w,c
 19957  018EDC  0FF7               	addlw	-9
 19958  018EDE  6ED9               	movwf	fsr2l,c
 19959  018EE0  50E2               	movf	fsr1h,w,c
 19960  018EE2  6EDA               	movwf	fsr2h,c
 19961  018EE4  0EFF               	movlw	255
 19962  018EE6  22DA               	addwfc	fsr2h,f,c
 19963  018EE8  5001               	movf	btemp^0,w,c
 19964  018EEA  26DE               	addwf	postinc2,f,c
 19965  018EEC  5002               	movf	(btemp+1)^0,w,c
 19966  018EEE  22DE               	addwfc	postinc2,f,c
 19967  018EF0  0E00               	movlw	0
 19968  018EF2  22DE               	addwfc	postinc2,f,c
 19969  018EF4  22DE               	addwfc	postinc2,f,c
 19970                           
 19971                           ;main.c: 529:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 19972  018EF6  0EB5               	movlw	low STR_55
 19973  018EF8  6EE6               	movwf	postinc1,c
 19974  018EFA  0EFE               	movlw	high STR_55
 19975  018EFC  6EE6               	movwf	postinc1,c
 19976  018EFE  0E00               	movlw	0
 19977  018F00  6EE6               	movwf	postinc1,c
 19978  018F02  0E00               	movlw	0
 19979  018F04  6EE6               	movwf	postinc1,c
 19980  018F06  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 19981  018F0A  0060  F007  FFE6   	movff	btemp,postinc1
 19982  018F10  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19983  018F16  0E04               	movlw	4
 19984  018F18  6EE6               	movwf	postinc1,c
 19985  018F1A  ECDB  F0F7         	call	_sprintf	;wreg free
 19986                           
 19987                           ; BSR set to: 0
 19988                           ;main.c: 530:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 19989  018F1E  0E01               	movlw	1
 19990  018F20  6EE6               	movwf	postinc1,c
 19991  018F22  EC89  F00E         	call	_get_raw_result	;wreg free
 19992  018F26  0060  F007  FFE6   	movff	btemp,postinc1
 19993  018F2C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19994  018F32  0E00               	movlw	0
 19995  018F34  6EE6               	movwf	postinc1,c
 19996  018F36  EC89  F00E         	call	_get_raw_result	;wreg free
 19997  018F3A  0060  F007  FFE6   	movff	btemp,postinc1
 19998  018F40  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19999  018F46  0E65               	movlw	low STR_56
 20000  018F48  6EE6               	movwf	postinc1,c
 20001  018F4A  0EFD               	movlw	high STR_56
 20002  018F4C  6EE6               	movwf	postinc1,c
 20003  018F4E  0E00               	movlw	0
 20004  018F50  6EE6               	movwf	postinc1,c
 20005  018F52  0E01               	movlw	1
 20006  018F54  6EE6               	movwf	postinc1,c
 20007  018F56  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 20008  018F5A  0060  F007  FFE6   	movff	btemp,postinc1
 20009  018F60  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20010  018F66  0E08               	movlw	8
 20011  018F68  6EE6               	movwf	postinc1,c
 20012  018F6A  ECDB  F0F7         	call	_sprintf	;wreg free
 20013                           
 20014                           ; BSR set to: 0
 20015                           ;main.c: 531:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 20016                           ;stkvar	_x @ sp[(-9)+8]
 20017  018F6E  0EFF               	movlw	-1
 20018  018F70  50E3               	movf	plusw1,w,c
 20019  018F72  6EE6               	movwf	postinc1,c
 20020  018F74  0E00               	movlw	0
 20021  018F76  6EE6               	movwf	postinc1,c
 20022  018F78  0E09               	movlw	low STR_57
 20023  018F7A  6EE6               	movwf	postinc1,c
 20024  018F7C  0EFF               	movlw	high STR_57
 20025  018F7E  6EE6               	movwf	postinc1,c
 20026  018F80  0E00               	movlw	0
 20027  018F82  6EE6               	movwf	postinc1,c
 20028  018F84  0E02               	movlw	2
 20029  018F86  6EE6               	movwf	postinc1,c
 20030  018F88  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 20031  018F8C  0060  F007  FFE6   	movff	btemp,postinc1
 20032  018F92  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20033  018F98  0E06               	movlw	6
 20034  018F9A  6EE6               	movwf	postinc1,c
 20035  018F9C  ECDB  F0F7         	call	_sprintf	;wreg free
 20036                           
 20037                           ; BSR set to: 0
 20038                           ;main.c: 532:   update_lcd(0);
 20039  018FA0  0E00               	movlw	0
 20040  018FA2  6EE6               	movwf	postinc1,c
 20041  018FA4  EC8D  F0F0         	call	_update_lcd	;wreg free
 20042                           
 20043                           ;main.c: 533:   clear_adc_scan();
 20044  018FA8  EC24  F010         	call	_clear_adc_scan	;wreg free
 20045                           
 20046                           ; BSR set to: 2
 20047                           ;main.c: 534:   start_adc_scan();
 20048  018FAC  ECBF  F006         	call	_start_adc_scan	;wreg free
 20049                           
 20050                           ;main.c: 535:   WaitMs(100);
 20051  018FB0  0E64               	movlw	100
 20052  018FB2  6EE6               	movwf	postinc1,c
 20053  018FB4  0E00               	movlw	0
 20054  018FB6  6EE6               	movwf	postinc1,c
 20055  018FB8  EC74  F00B         	call	_WaitMs	;wreg free
 20056                           
 20057                           ;main.c: 536:  } while (++x < 64);
 20058                           ;stkvar	_x @ sp[(-9)+8]
 20059  018FBC  0EFF               	movlw	-1
 20060  018FBE  2AE3               	incf	plusw1,f,c
 20061  018FC0  0EFF               	movlw	-1
 20062  018FC2  006F FF8C  F001    	movff	plusw1,btemp
 20063  018FC8  0E3F               	movlw	63
 20064  018FCA  6401               	cpfsgt	btemp^0,c
 20065  018FCC  D770               	goto	l16849
 20066                           
 20067                           ;main.c: 537:  cb = cb >> 6;
 20068  018FCE  0E06               	movlw	6
 20069  018FD0  6E0C               	movwf	(btemp+11)^0,c
 20070                           
 20071                           ;stkvar	_cb @ sp[(-9)+4]
 20072  018FD2  50E1               	movf	fsr1l,w,c
 20073  018FD4  0FFB               	addlw	-5
 20074  018FD6  6ED9               	movwf	fsr2l,c
 20075  018FD8  50E2               	movf	fsr1h,w,c
 20076  018FDA  6EDA               	movwf	fsr2h,c
 20077  018FDC  0EFF               	movlw	255
 20078  018FDE  22DA               	addwfc	fsr2h,f,c
 20079  018FE0  280C               	incf	(btemp+11)^0,w,c
 20080  018FE2  52DE               	movf	postinc2,f,c
 20081  018FE4  D007               	goto	u16500
 20082  018FE6                     u16505:
 20083  018FE6  52DE               	movf	postinc2,f,c
 20084  018FE8  52DE               	movf	postinc2,f,c
 20085  018FEA  90D8               	bcf	status,0,c
 20086  018FEC  32DD               	rrcf	postdec2,f,c
 20087  018FEE  32DD               	rrcf	postdec2,f,c
 20088  018FF0  32DD               	rrcf	postdec2,f,c
 20089  018FF2  32DE               	rrcf	postinc2,f,c
 20090  018FF4                     u16500:
 20091  018FF4  2EE8               	decfsz	wreg,f,c
 20092  018FF6  D7F7               	goto	u16505
 20093                           
 20094                           ;main.c: 538:  cp = cp >> 6;
 20095  018FF8  0E06               	movlw	6
 20096  018FFA  6E0C               	movwf	(btemp+11)^0,c
 20097                           
 20098                           ;stkvar	_cp @ sp[(-9)+0]
 20099  018FFC  50E1               	movf	fsr1l,w,c
 20100  018FFE  0FF7               	addlw	-9
 20101  019000  6ED9               	movwf	fsr2l,c
 20102  019002  50E2               	movf	fsr1h,w,c
 20103  019004  6EDA               	movwf	fsr2h,c
 20104  019006  0EFF               	movlw	255
 20105  019008  22DA               	addwfc	fsr2h,f,c
 20106  01900A  280C               	incf	(btemp+11)^0,w,c
 20107  01900C  52DE               	movf	postinc2,f,c
 20108  01900E  D007               	goto	u16510
 20109  019010                     u16515:
 20110  019010  52DE               	movf	postinc2,f,c
 20111  019012  52DE               	movf	postinc2,f,c
 20112  019014  90D8               	bcf	status,0,c
 20113  019016  32DD               	rrcf	postdec2,f,c
 20114  019018  32DD               	rrcf	postdec2,f,c
 20115  01901A  32DD               	rrcf	postdec2,f,c
 20116  01901C  32DE               	rrcf	postinc2,f,c
 20117  01901E                     u16510:
 20118  01901E  2EE8               	decfsz	wreg,f,c
 20119  019020  D7F7               	goto	u16515
 20120                           
 20121                           ;main.c: 540:  if (cal_current_zero(0, cb, cp)) {
 20122                           ;stkvar	_cp @ sp[(-9)+0]
 20123  019022  0EF7               	movlw	-9
 20124  019024  006F FF8F FFE6     	movff	plusw1,postinc1
 20125  01902A  006F FF8F FFE6     	movff	plusw1,postinc1
 20126                           
 20127                           ;stkvar	_cb @ sp[(-11)+4]
 20128  019030  0EF9               	movlw	-7
 20129  019032  006F FF8F FFE6     	movff	plusw1,postinc1
 20130  019038  006F FF8F FFE6     	movff	plusw1,postinc1
 20131  01903E  0E00               	movlw	0
 20132  019040  6EE6               	movwf	postinc1,c
 20133  019042  EC41  F002         	call	_cal_current_zero	;wreg free
 20134  019046  5001               	movf	btemp^0,w,c
 20135  019048  B4D8               	btfsc	status,2,c
 20136  01904A  D075               	goto	l16887
 20137                           
 20138                           ;main.c: 541:   cal_current_zero(1, cb, cp);
 20139                           ;stkvar	_cp @ sp[(-9)+0]
 20140  01904C  0EF7               	movlw	-9
 20141  01904E  006F FF8F FFE6     	movff	plusw1,postinc1
 20142  019054  006F FF8F FFE6     	movff	plusw1,postinc1
 20143                           
 20144                           ;stkvar	_cb @ sp[(-11)+4]
 20145  01905A  0EF9               	movlw	-7
 20146  01905C  006F FF8F FFE6     	movff	plusw1,postinc1
 20147  019062  006F FF8F FFE6     	movff	plusw1,postinc1
 20148  019068  0E01               	movlw	1
 20149  01906A  6EE6               	movwf	postinc1,c
 20150  01906C  EC41  F002         	call	_cal_current_zero	;wreg free
 20151                           
 20152                           ;main.c: 542:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 20153  019070  0E76               	movlw	low STR_51
 20154  019072  6EE6               	movwf	postinc1,c
 20155  019074  0EFE               	movlw	high STR_51
 20156  019076  6EE6               	movwf	postinc1,c
 20157  019078  0E00               	movlw	0
 20158  01907A  6EE6               	movwf	postinc1,c
 20159  01907C  0E00               	movlw	0
 20160  01907E  6EE6               	movwf	postinc1,c
 20161  019080  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 20162  019084  0060  F007  FFE6   	movff	btemp,postinc1
 20163  01908A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20164  019090  0E04               	movlw	4
 20165  019092  6EE6               	movwf	postinc1,c
 20166  019094  ECDB  F0F7         	call	_sprintf	;wreg free
 20167                           
 20168                           ; BSR set to: 0
 20169                           ;main.c: 543:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", cb, cp);
 20170                           ;stkvar	_cp @ sp[(-9)+0]
 20171  019098  0EF7               	movlw	-9
 20172  01909A  006F FF8F FFE6     	movff	plusw1,postinc1
 20173  0190A0  006F FF8F FFE6     	movff	plusw1,postinc1
 20174  0190A6  006F FF8F FFE6     	movff	plusw1,postinc1
 20175  0190AC  006F FF8F FFE6     	movff	plusw1,postinc1
 20176                           
 20177                           ;stkvar	_cb @ sp[(-13)+4]
 20178  0190B2  0EF7               	movlw	-9
 20179  0190B4  006F FF8F FFE6     	movff	plusw1,postinc1
 20180  0190BA  006F FF8F FFE6     	movff	plusw1,postinc1
 20181  0190C0  006F FF8F FFE6     	movff	plusw1,postinc1
 20182  0190C6  006F FF8F FFE6     	movff	plusw1,postinc1
 20183  0190CC  0E7A               	movlw	low STR_59
 20184  0190CE  6EE6               	movwf	postinc1,c
 20185  0190D0  0EFD               	movlw	high STR_59
 20186  0190D2  6EE6               	movwf	postinc1,c
 20187  0190D4  0E00               	movlw	0
 20188  0190D6  6EE6               	movwf	postinc1,c
 20189  0190D8  0E01               	movlw	1
 20190  0190DA  6EE6               	movwf	postinc1,c
 20191  0190DC  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 20192  0190E0  0060  F007  FFE6   	movff	btemp,postinc1
 20193  0190E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20194  0190EC  0E0C               	movlw	12
 20195  0190EE  6EE6               	movwf	postinc1,c
 20196  0190F0  ECDB  F0F7         	call	_sprintf	;wreg free
 20197                           
 20198                           ; BSR set to: 0
 20199                           ;main.c: 544:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
 20200  0190F4  0E4C               	movlw	low STR_60
 20201  0190F6  6EE6               	movwf	postinc1,c
 20202  0190F8  0EFE               	movlw	high STR_60
 20203  0190FA  6EE6               	movwf	postinc1,c
 20204  0190FC  0E00               	movlw	0
 20205  0190FE  6EE6               	movwf	postinc1,c
 20206  019100  0E02               	movlw	2
 20207  019102  6EE6               	movwf	postinc1,c
 20208  019104  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 20209  019108  0060  F007  FFE6   	movff	btemp,postinc1
 20210  01910E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20211  019114  0E04               	movlw	4
 20212  019116  6EE6               	movwf	postinc1,c
 20213  019118  ECDB  F0F7         	call	_sprintf	;wreg free
 20214                           
 20215                           ; BSR set to: 0
 20216                           ;main.c: 545:   update_lcd(0);
 20217  01911C  0E00               	movlw	0
 20218  01911E  6EE6               	movwf	postinc1,c
 20219  019120  EC8D  F0F0         	call	_update_lcd	;wreg free
 20220                           
 20221                           ;main.c: 546:   WaitMs(2000);
 20222  019124  0ED0               	movlw	208
 20223  019126  6EE6               	movwf	postinc1,c
 20224  019128  0E07               	movlw	7
 20225  01912A  6EE6               	movwf	postinc1,c
 20226  01912C  EC74  F00B         	call	_WaitMs	;wreg free
 20227                           
 20228                           ;main.c: 547:   write_cal_data();
 20229  019130  ECEA  F0F1         	call	_write_cal_data	;wreg free
 20230                           
 20231                           ;main.c: 548:  } else {
 20232  019134  D05A               	goto	l1514
 20233  019136                     l16887:
 20234                           
 20235                           ;main.c: 549:   sprintf(get_vterm_ptr(0, 0), "Battery and PV      ");
 20236  019136  0E76               	movlw	low STR_51
 20237  019138  6EE6               	movwf	postinc1,c
 20238  01913A  0EFE               	movlw	high STR_51
 20239  01913C  6EE6               	movwf	postinc1,c
 20240  01913E  0E00               	movlw	0
 20241  019140  6EE6               	movwf	postinc1,c
 20242  019142  0E00               	movlw	0
 20243  019144  6EE6               	movwf	postinc1,c
 20244  019146  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 20245  01914A  0060  F007  FFE6   	movff	btemp,postinc1
 20246  019150  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20247  019156  0E04               	movlw	4
 20248  019158  6EE6               	movwf	postinc1,c
 20249  01915A  ECDB  F0F7         	call	_sprintf	;wreg free
 20250                           
 20251                           ;main.c: 550:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 20252  01915E  0E01               	movlw	1
 20253  019160  6EE6               	movwf	postinc1,c
 20254  019162  EC89  F00E         	call	_get_raw_result	;wreg free
 20255  019166  0060  F007  FFE6   	movff	btemp,postinc1
 20256  01916C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20257  019172  0E00               	movlw	0
 20258  019174  6EE6               	movwf	postinc1,c
 20259  019176  EC89  F00E         	call	_get_raw_result	;wreg free
 20260  01917A  0060  F007  FFE6   	movff	btemp,postinc1
 20261  019180  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20262  019186  0E7A               	movlw	low STR_59
 20263  019188  6EE6               	movwf	postinc1,c
 20264  01918A  0EFD               	movlw	high STR_59
 20265  01918C  6EE6               	movwf	postinc1,c
 20266  01918E  0E00               	movlw	0
 20267  019190  6EE6               	movwf	postinc1,c
 20268  019192  0E01               	movlw	1
 20269  019194  6EE6               	movwf	postinc1,c
 20270  019196  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 20271  01919A  0060  F007  FFE6   	movff	btemp,postinc1
 20272  0191A0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20273  0191A6  0E08               	movlw	8
 20274  0191A8  6EE6               	movwf	postinc1,c
 20275  0191AA  ECDB  F0F7         	call	_sprintf	;wreg free
 20276                           
 20277                           ;main.c: 551:   sprintf(get_vterm_ptr(2, 0), "Zero Out Of Range   ");
 20278  0191AE  0EF4               	movlw	low STR_63
 20279  0191B0  6EE6               	movwf	postinc1,c
 20280  0191B2  0EFE               	movlw	high STR_63
 20281  0191B4  6EE6               	movwf	postinc1,c
 20282  0191B6  0E00               	movlw	0
 20283  0191B8  6EE6               	movwf	postinc1,c
 20284  0191BA  0E02               	movlw	2
 20285  0191BC  6EE6               	movwf	postinc1,c
 20286  0191BE  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 20287  0191C2  0060  F007  FFE6   	movff	btemp,postinc1
 20288  0191C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20289  0191CE  0E04               	movlw	4
 20290  0191D0  6EE6               	movwf	postinc1,c
 20291  0191D2  ECDB  F0F7         	call	_sprintf	;wreg free
 20292                           
 20293                           ;main.c: 552:   update_lcd(0);
 20294  0191D6  0E00               	movlw	0
 20295  0191D8  6EE6               	movwf	postinc1,c
 20296  0191DA  EC8D  F0F0         	call	_update_lcd	;wreg free
 20297                           
 20298                           ;main.c: 553:   WaitMs(2000);
 20299  0191DE  0ED0               	movlw	208
 20300  0191E0  6EE6               	movwf	postinc1,c
 20301  0191E2  0E07               	movlw	7
 20302  0191E4  6EE6               	movwf	postinc1,c
 20303  0191E6  EC74  F00B         	call	_WaitMs	;wreg free
 20304  0191EA                     l1514:
 20305                           
 20306                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 20307  0191EA  0EF7               	movlw	247
 20308  0191EC  26E1               	addwf	fsr1l,f,c
 20309  0191EE  0EFF               	movlw	255
 20310  0191F0  22E2               	addwfc	fsr1h,f,c
 20311  0191F2  0012               	return		;funcret
 20312  0191F4                     __end_of_current_sensor_cal:
 20313                           	opt callstack 0
 20314                           
 20315 ;; *************** function _write_cal_data *****************
 20316 ;; Defined at:
 20317 ;;		line 406 in file "daq.c"
 20318 ;; Parameters:    Size  Location     Type
 20319 ;;		None
 20320 ;; Auto vars:     Size  Location     Type
 20321 ;;  x               2  [STACK] unsigned short 
 20322 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
 20323 ;;		 -> R(171), 
 20324 ;;  y               2  [STACK] unsigned short 
 20325 ;;  crcVal          1  [STACK] unsigned char 
 20326 ;; Return value:  Size  Location     Type
 20327 ;;                  1  [STACK] void 
 20328 ;; Registers used:
 20329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, 
      +btemp+11, prodl
 20330 ;; Tracked objects:
 20331 ;;		On entry : 0/39
 20332 ;;		On exit  : 0/0
 20333 ;;		Unchanged: 0/0
 20334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20339 ;;Total ram usage:        0 bytes
 20340 ;; Hardware stack levels used:    1
 20341 ;; Hardware stack levels required when called:   17
 20342 ;; This function calls:
 20343 ;;		_CRC_8BitDataWrite
 20344 ;;		_CRC_CalculatedResultGet
 20345 ;;		_CRC_Initialize
 20346 ;;		_CRC_IsBusy
 20347 ;;		_CRC_Start
 20348 ;;		_DATAEE_WriteByte
 20349 ;; This function is called by:
 20350 ;;		_main
 20351 ;;		_current_sensor_cal
 20352 ;; This function uses a reentrant model
 20353 ;;
 20354                           
 20355                           	psect	text56
 20356  01E3D4                     __ptext56:
 20357                           	opt callstack 0
 20358  01E3D4                     _write_cal_data:
 20359                           	opt callstack 0
 20360                           
 20361                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20362  01E3D4  0E07               	movlw	7
 20363  01E3D6  26E1               	addwf	fsr1l,f,c
 20364  01E3D8  0E00               	movlw	0
 20365  01E3DA  22E2               	addwfc	fsr1h,f,c
 20366                           
 20367                           ;daq.c: 408:  uint16_t x = 0, y;
 20368                           ;stkvar	_x @ sp[(-7)+0]
 20369                           
 20370                           ;incstack = 0
 20371  01E3DC  0EF9               	movlw	-7
 20372  01E3DE  6AE3               	clrf	plusw1,c
 20373  01E3E0  0EFA               	movlw	-6
 20374  01E3E2  6AE3               	clrf	plusw1,c
 20375                           
 20376                           ;daq.c: 409:  uint8_t *r_cal_ptr, crcVal;;daq.c: 411:  y = sizeof(R);
 20377  01E3E4  0EAB               	movlw	171
 20378  01E3E6  6E0B               	movwf	(btemp+10)^0,c
 20379  01E3E8  0E00               	movlw	0
 20380  01E3EA  6E0C               	movwf	(btemp+11)^0,c
 20381                           
 20382                           ;stkvar	_y @ sp[(-7)+4]
 20383  01E3EC  0EFD               	movlw	-3
 20384  01E3EE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20385  01E3F4  0EFE               	movlw	-2
 20386  01E3F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 20387                           
 20388                           ;daq.c: 412:  R.crc = 0x42;
 20389  01E3FC  0E42               	movlw	66
 20390  01E3FE  0102               	movlb	2	; () banked
 20391  01E400  6FAA               	movwf	(_R+170)& (0+255),b	;volatile
 20392                           
 20393                           ; BSR set to: 2
 20394                           ;daq.c: 413:  r_cal_ptr = (uint8_t*) & R;
 20395                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 20396  01E402  0E02               	movlw	high _R
 20397  01E404  6E01               	movwf	btemp^0,c
 20398  01E406  0EFC               	movlw	-4
 20399  01E408  0060  F007  FFE3   	movff	btemp,plusw1
 20400  01E40E  0E00               	movlw	low _R
 20401  01E410  6E01               	movwf	btemp^0,c
 20402  01E412  0EFB               	movlw	-5
 20403  01E414  0060  F007  FFE3   	movff	btemp,plusw1
 20404                           
 20405                           ; BSR set to: 2
 20406                           ;daq.c: 414:  R.checkmark = 0x1957;
 20407  01E41A  0E19               	movlw	25
 20408  01E41C  6FA9               	movwf	(_R+169)& (0+255),b	;volatile
 20409  01E41E  0E57               	movlw	87
 20410  01E420  6FA8               	movwf	(_R+168)& (0+255),b	;volatile
 20411                           
 20412                           ; BSR set to: 2
 20413                           ;daq.c: 416:  CRC_Initialize();
 20414  01E422  EC1C  F003         	call	_CRC_Initialize	;wreg free
 20415                           
 20416                           ; BSR set to: 0
 20417                           ;daq.c: 419:  CRC_Start();
 20418  01E426  EC21  F010         	call	_CRC_Start	;wreg free
 20419  01E42A                     l13365:
 20420                           
 20421                           ;daq.c: 422:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 20422                           ;stkvar	_x @ sp[(-7)+0]
 20423  01E42A  0EF9               	movlw	-7
 20424  01E42C  006F FF8C  F00B    	movff	plusw1,btemp+10
 20425  01E432  0EFA               	movlw	-6
 20426  01E434  006F FF8C  F00C    	movff	plusw1,btemp+11
 20427                           
 20428                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 20429  01E43A  0EFB               	movlw	-5
 20430  01E43C  006F FF8C  F009    	movff	plusw1,btemp+8
 20431  01E442  0EFC               	movlw	-4
 20432  01E444  006F FF8C  F00A    	movff	plusw1,btemp+9
 20433  01E44A  500B               	movf	(btemp+10)^0,w,c
 20434  01E44C  2409               	addwf	(btemp+8)^0,w,c
 20435  01E44E  6ED9               	movwf	fsr2l,c
 20436  01E450  500C               	movf	(btemp+11)^0,w,c
 20437  01E452  200A               	addwfc	(btemp+9)^0,w,c
 20438  01E454  6EDA               	movwf	fsr2h,c
 20439  01E456  50DF               	movf	indf2,w,c
 20440  01E458  6EE6               	movwf	postinc1,c
 20441                           
 20442                           ;stkvar	_x @ sp[(-8)+0]
 20443  01E45A  0EF8               	movlw	-8
 20444  01E45C  006F FF8F FFE6     	movff	plusw1,postinc1
 20445  01E462  006F FF8F FFE6     	movff	plusw1,postinc1
 20446  01E468  ECF3  F005         	call	_DATAEE_WriteByte	;wreg free
 20447                           
 20448                           ;daq.c: 423:   CRC_8BitDataWrite(r_cal_ptr[x]);
 20449                           ;stkvar	_x @ sp[(-7)+0]
 20450  01E46C  0EF9               	movlw	-7
 20451  01E46E  006F FF8C  F00B    	movff	plusw1,btemp+10
 20452  01E474  0EFA               	movlw	-6
 20453  01E476  006F FF8C  F00C    	movff	plusw1,btemp+11
 20454                           
 20455                           ;stkvar	_r_cal_ptr @ sp[(-7)+2]
 20456  01E47C  0EFB               	movlw	-5
 20457  01E47E  006F FF8C  F009    	movff	plusw1,btemp+8
 20458  01E484  0EFC               	movlw	-4
 20459  01E486  006F FF8C  F00A    	movff	plusw1,btemp+9
 20460  01E48C  500B               	movf	(btemp+10)^0,w,c
 20461  01E48E  2409               	addwf	(btemp+8)^0,w,c
 20462  01E490  6ED9               	movwf	fsr2l,c
 20463  01E492  500C               	movf	(btemp+11)^0,w,c
 20464  01E494  200A               	addwfc	(btemp+9)^0,w,c
 20465  01E496  6EDA               	movwf	fsr2h,c
 20466  01E498  50DF               	movf	indf2,w,c
 20467  01E49A  6EE6               	movwf	postinc1,c
 20468  01E49C  EC92  F00F         	call	_CRC_8BitDataWrite	;wreg free
 20469  01E4A0                     l13369:
 20470  01E4A0  ECB4  F00F         	call	_CRC_IsBusy	;wreg free
 20471  01E4A4  5001               	movf	btemp^0,w,c
 20472  01E4A6  A4D8               	btfss	status,2,c
 20473  01E4A8  D7FB               	goto	l13369
 20474                           
 20475                           ;daq.c: 425:  } while (++x < y);
 20476                           ;stkvar	_y @ sp[(-7)+4]
 20477  01E4AA  0EFD               	movlw	-3
 20478  01E4AC  006F FF8C  F00B    	movff	plusw1,btemp+10
 20479  01E4B2  0EFE               	movlw	-2
 20480  01E4B4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20481                           
 20482                           ;stkvar	_x @ sp[(-7)+0]
 20483  01E4BA  0EF9               	movlw	-7
 20484  01E4BC  50E3               	movf	plusw1,w,c
 20485  01E4BE  0F01               	addlw	1
 20486  01E4C0  6E01               	movwf	btemp^0,c
 20487  01E4C2  0EF9               	movlw	-7
 20488  01E4C4  0060  F007  FFE3   	movff	btemp,plusw1
 20489  01E4CA  6A01               	clrf	btemp^0,c
 20490  01E4CC  0EFA               	movlw	-6
 20491  01E4CE  50E3               	movf	plusw1,w,c
 20492  01E4D0  2001               	addwfc	btemp^0,w,c
 20493  01E4D2  6E01               	movwf	btemp^0,c
 20494  01E4D4  0EFA               	movlw	-6
 20495  01E4D6  0060  F007  FFE3   	movff	btemp,plusw1
 20496  01E4DC  0EF9               	movlw	-7
 20497  01E4DE  006F FF8C  F009    	movff	plusw1,btemp+8
 20498  01E4E4  0EFA               	movlw	-6
 20499  01E4E6  006F FF8C  F00A    	movff	plusw1,btemp+9
 20500  01E4EC  500B               	movf	(btemp+10)^0,w,c
 20501  01E4EE  5C09               	subwf	(btemp+8)^0,w,c
 20502  01E4F0  500C               	movf	(btemp+11)^0,w,c
 20503  01E4F2  580A               	subwfb	(btemp+9)^0,w,c
 20504  01E4F4  A0D8               	btfss	status,0,c
 20505  01E4F6  D799               	goto	l13365
 20506                           
 20507                           ;daq.c: 427:  crcVal = CRC_CalculatedResultGet(0, 0x00);
 20508  01E4F8  0E00               	movlw	0
 20509  01E4FA  6EE6               	movwf	postinc1,c
 20510  01E4FC  0E00               	movlw	0
 20511  01E4FE  6EE6               	movwf	postinc1,c
 20512  01E500  0E00               	movlw	0
 20513  01E502  6EE6               	movwf	postinc1,c
 20514  01E504  EC06  F0ED         	call	_CRC_CalculatedResultGet	;wreg free
 20515                           
 20516                           ;stkvar	_crcVal @ sp[(-7)+6]
 20517  01E508  0EFF               	movlw	-1
 20518  01E50A  0060  F007  FFE3   	movff	btemp,plusw1
 20519                           
 20520                           ;daq.c: 429:  DATAEE_WriteByte(sizeof(R) - 1, crcVal);
 20521                           ;stkvar	_crcVal @ sp[(-7)+6]
 20522  01E510  0EFF               	movlw	-1
 20523  01E512  50E3               	movf	plusw1,w,c
 20524  01E514  6EE6               	movwf	postinc1,c
 20525  01E516  0EAA               	movlw	170
 20526  01E518  6EE6               	movwf	postinc1,c
 20527  01E51A  0E00               	movlw	0
 20528  01E51C  6EE6               	movwf	postinc1,c
 20529  01E51E  ECF3  F005         	call	_DATAEE_WriteByte	;wreg free
 20530                           
 20531                           ; _write_cal_data: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20532  01E522  0EF9               	movlw	249
 20533  01E524  26E1               	addwf	fsr1l,f,c
 20534  01E526  0EFF               	movlw	255
 20535  01E528  22E2               	addwfc	fsr1h,f,c
 20536  01E52A  0012               	return		;funcret
 20537  01E52C                     __end_of_write_cal_data:
 20538                           	opt callstack 0
 20539                           
 20540 ;; *************** function _DATAEE_WriteByte *****************
 20541 ;; Defined at:
 20542 ;;		line 172 in file "mcc_generated_files/memory.c"
 20543 ;; Parameters:    Size  Location     Type
 20544 ;;  bAdd            2  [STACK] unsigned short 
 20545 ;;  bData           1  [STACK] unsigned char 
 20546 ;; Auto vars:     Size  Location     Type
 20547 ;;  GIEBitValue     1  [STACK] unsigned char 
 20548 ;; Return value:  Size  Location     Type
 20549 ;;                  1  [STACK] void 
 20550 ;; Registers used:
 20551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 20552 ;; Tracked objects:
 20553 ;;		On entry : 0/39
 20554 ;;		On exit  : 0/0
 20555 ;;		Unchanged: 0/0
 20556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20561 ;;Total ram usage:        0 bytes
 20562 ;; Hardware stack levels used:    1
 20563 ;; Hardware stack levels required when called:   15
 20564 ;; This function calls:
 20565 ;;		Nothing
 20566 ;; This function is called by:
 20567 ;;		_write_cal_data
 20568 ;; This function uses a reentrant model
 20569 ;;
 20570                           
 20571                           	psect	text57
 20572  000BE6                     __ptext57:
 20573                           	opt callstack 0
 20574  000BE6                     _DATAEE_WriteByte:
 20575                           	opt callstack 0
 20576                           
 20577                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20578  000BE6  52E6               	movf	postinc1,f,c
 20579                           
 20580                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 20581                           
 20582                           ;incstack = 0
 20583  000BE8  AED2               	btfss	210,7,c	;volatile
 20584  000BEA  D003               	goto	u12000
 20585  000BEC  6A0C               	clrf	(btemp+11)^0,c
 20586  000BEE  2A0C               	incf	(btemp+11)^0,f,c
 20587  000BF0  D001               	goto	u12008
 20588  000BF2                     u12000:
 20589  000BF2  6A0C               	clrf	(btemp+11)^0,c
 20590  000BF4                     u12008:
 20591                           
 20592                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 20593  000BF4  0EFF               	movlw	-1
 20594  000BF6  0060  F033  FFE3   	movff	btemp+11,plusw1
 20595                           
 20596                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 20597                           ;stkvar	_bAdd @ sp[(-1)+-2]
 20598  000BFC  0EFE               	movlw	254
 20599  000BFE  24E1               	addwf	fsr1l,w,c
 20600  000C00  6ED9               	movwf	fsr2l,c
 20601  000C02  0EFF               	movlw	255
 20602  000C04  20E2               	addwfc	fsr1h,w,c
 20603  000C06  6EDA               	movwf	fsr2h,c
 20604  000C08  50DF               	movf	indf2,w,c
 20605  000C0A  0B03               	andlw	3
 20606  000C0C  0139               	movlb	57	; () banked
 20607  000C0E  6FE1               	movwf	225,b	;volatile
 20608                           
 20609                           ; BSR set to: 57
 20610                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 20611                           ;stkvar	_bAdd @ sp[(-1)+-2]
 20612  000C10  0EFD               	movlw	-3
 20613  000C12  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 20614                           
 20615                           ; BSR set to: 57
 20616                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 20617                           ;stkvar	_bData @ sp[(-1)+-3]
 20618  000C18  0EFC               	movlw	-4
 20619  000C1A  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 20620                           
 20621                           ; BSR set to: 57
 20622                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 20623  000C20  0E3F               	movlw	-193
 20624  000C22  17E5               	andwf	229,f,b	;volsfr
 20625                           
 20626                           ; BSR set to: 57
 20627                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 20628  000C24  85E5               	bsf	229,2,b	;volsfr
 20629                           
 20630                           ; BSR set to: 57
 20631                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 20632  000C26  9ED2               	bcf	210,7,c	;volatile
 20633                           
 20634                           ; BSR set to: 57
 20635                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 20636  000C28  0E55               	movlw	85
 20637  000C2A  6FE6               	movwf	230,b	;volsfr
 20638                           
 20639                           ; BSR set to: 57
 20640                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 20641  000C2C  0EAA               	movlw	170
 20642  000C2E  6FE6               	movwf	230,b	;volsfr
 20643                           
 20644                           ; BSR set to: 57
 20645                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 20646  000C30  83E5               	bsf	229,1,b	;volsfr
 20647  000C32                     l942:
 20648                           
 20649                           ; BSR set to: 57
 20650                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 20651  000C32  B3E5               	btfsc	229,1,b	;volsfr
 20652  000C34  D7FE               	goto	l942
 20653                           
 20654                           ; BSR set to: 57
 20655                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 20656  000C36  95E5               	bcf	229,2,b	;volsfr
 20657                           
 20658                           ; BSR set to: 57
 20659                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 20660                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 20661  000C38  0EFF               	movlw	-1
 20662  000C3A  B0E3               	btfsc	plusw1,0,c
 20663  000C3C  D002               	bra	u12025
 20664  000C3E  9ED2               	bcf	210,7,c	;volatile
 20665  000C40  D001               	bra	u12026
 20666  000C42                     u12025:
 20667  000C42  8ED2               	bsf	210,7,c	;volatile
 20668  000C44                     u12026:
 20669                           
 20670                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 20671  000C44  52E5               	movf	postdec1,f,c
 20672  000C46  52E5               	movf	postdec1,f,c
 20673  000C48  52E5               	movf	postdec1,f,c
 20674  000C4A  52E5               	movf	postdec1,f,c
 20675  000C4C  0012               	return		;funcret
 20676  000C4E                     __end_of_DATAEE_WriteByte:
 20677                           	opt callstack 0
 20678                           
 20679 ;; *************** function _CRC_Start *****************
 20680 ;; Defined at:
 20681 ;;		line 119 in file "mcc_generated_files/crc.c"
 20682 ;; Parameters:    Size  Location     Type
 20683 ;;		None
 20684 ;; Auto vars:     Size  Location     Type
 20685 ;;		None
 20686 ;; Return value:  Size  Location     Type
 20687 ;;                  1  [STACK] void 
 20688 ;; Registers used:
 20689 ;;		None
 20690 ;; Tracked objects:
 20691 ;;		On entry : 3F/0
 20692 ;;		On exit  : 3F/39
 20693 ;;		Unchanged: 0/0
 20694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20699 ;;Total ram usage:        0 bytes
 20700 ;; Hardware stack levels used:    1
 20701 ;; Hardware stack levels required when called:   15
 20702 ;; This function calls:
 20703 ;;		Nothing
 20704 ;; This function is called by:
 20705 ;;		_read_cal_data
 20706 ;;		_write_cal_data
 20707 ;; This function uses a reentrant model
 20708 ;;
 20709                           
 20710                           	psect	text58
 20711  002042                     __ptext58:
 20712                           	opt callstack 0
 20713  002042                     _CRC_Start:
 20714                           	opt callstack 14
 20715                           
 20716                           ;mcc_generated_files/crc.c: 122:     CRCCON0bits.CRCGO = 1;
 20717                           
 20718                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20719                           ;incstack = 0
 20720  002042  0139               	movlb	57	; () banked
 20721  002044  8D68               	bsf	104,6,b	;volatile
 20722                           
 20723                           ; BSR set to: 57
 20724                           ; _CRC_Start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 20725  002046  0012               	return		;funcret
 20726  002048                     __end_of_CRC_Start:
 20727                           	opt callstack 0
 20728                           
 20729 ;; *************** function _CRC_IsBusy *****************
 20730 ;; Defined at:
 20731 ;;		line 201 in file "mcc_generated_files/crc.c"
 20732 ;; Parameters:    Size  Location     Type
 20733 ;;		None
 20734 ;; Auto vars:     Size  Location     Type
 20735 ;;		None
 20736 ;; Return value:  Size  Location     Type
 20737 ;;                  1  [STACK] _Bool 
 20738 ;; Registers used:
 20739 ;;		btemp
 20740 ;; Tracked objects:
 20741 ;;		On entry : 0/39
 20742 ;;		On exit  : 0/0
 20743 ;;		Unchanged: 0/0
 20744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20749 ;;Total ram usage:        0 bytes
 20750 ;; Hardware stack levels used:    1
 20751 ;; Hardware stack levels required when called:   15
 20752 ;; This function calls:
 20753 ;;		Nothing
 20754 ;; This function is called by:
 20755 ;;		_read_cal_data
 20756 ;;		_write_cal_data
 20757 ;; This function uses a reentrant model
 20758 ;;
 20759                           
 20760                           	psect	text59
 20761  001F68                     __ptext59:
 20762                           	opt callstack 0
 20763  001F68                     _CRC_IsBusy:
 20764                           	opt callstack 14
 20765                           
 20766                           ;mcc_generated_files/crc.c: 204:     return(CRCCON0bits.BUSY);
 20767                           
 20768                           ; BSR set to: 57
 20769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20770                           ;incstack = 0
 20771  001F68  0139               	movlb	57	; () banked
 20772  001F6A  AB68               	btfss	104,5,b	;volatile
 20773  001F6C  D003               	goto	u12230
 20774  001F6E  6A01               	clrf	btemp^0,c
 20775  001F70  2A01               	incf	btemp^0,f,c
 20776  001F72  0012               	return	
 20777  001F74                     u12230:
 20778  001F74  6A01               	clrf	btemp^0,c
 20779                           
 20780                           ; _CRC_IsBusy: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 20781  001F76  0012               	return		;funcret
 20782  001F78                     __end_of_CRC_IsBusy:
 20783                           	opt callstack 0
 20784                           
 20785 ;; *************** function _CRC_CalculatedResultGet *****************
 20786 ;; Defined at:
 20787 ;;		line 159 in file "mcc_generated_files/crc.c"
 20788 ;; Parameters:    Size  Location     Type
 20789 ;;  reverse         1  [STACK] _Bool 
 20790 ;;  xorValue        2  [STACK] unsigned short 
 20791 ;; Auto vars:     Size  Location     Type
 20792 ;;  result          2  [STACK] unsigned short 
 20793 ;;  mask            2  [STACK] unsigned short 
 20794 ;; Return value:  Size  Location     Type
 20795 ;;                  2  [STACK] unsigned short 
 20796 ;; Registers used:
 20797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+9, btemp+10, btemp+11,
      + prodl
 20798 ;; Tracked objects:
 20799 ;;		On entry : 0/39
 20800 ;;		On exit  : 0/0
 20801 ;;		Unchanged: 0/0
 20802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20807 ;;Total ram usage:        0 bytes
 20808 ;; Hardware stack levels used:    1
 20809 ;; Hardware stack levels required when called:   16
 20810 ;; This function calls:
 20811 ;;		_CRC_ReverseValue
 20812 ;; This function is called by:
 20813 ;;		_read_cal_data
 20814 ;;		_write_cal_data
 20815 ;; This function uses a reentrant model
 20816 ;;
 20817                           
 20818                           	psect	text60
 20819  01DA0C                     __ptext60:
 20820                           	opt callstack 0
 20821  01DA0C                     _CRC_CalculatedResultGet:
 20822                           	opt callstack 0
 20823                           
 20824                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20825  01DA0C  52E6               	movf	postinc1,f,c
 20826  01DA0E  52E6               	movf	postinc1,f,c
 20827  01DA10  52E6               	movf	postinc1,f,c
 20828  01DA12  52E6               	movf	postinc1,f,c
 20829                           
 20830                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 20831                           
 20832                           ;incstack = 0
 20833  01DA14  0139               	movlb	57	; () banked
 20834  01DA16  9D68               	bcf	104,6,b	;volatile
 20835                           
 20836                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 20837  01DA18  9DA0               	bcf	160,6,b	;volatile
 20838                           
 20839                           ; BSR set to: 57
 20840                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 20841  01DA1A  5169               	movf	105,w,b	;volatile
 20842  01DA1C  0B0F               	andlw	15
 20843  01DA1E  6E0C               	movwf	(btemp+11)^0,c
 20844  01DA20  3A0C               	swapf	(btemp+11)^0,f,c
 20845  01DA22  5169               	movf	105,w,b	;volatile
 20846  01DA24  180C               	xorwf	(btemp+11)^0,w,c
 20847  01DA26  0B0F               	andlw	-241
 20848  01DA28  180C               	xorwf	(btemp+11)^0,w,c
 20849  01DA2A  6F69               	movwf	105,b	;volatile
 20850                           
 20851                           ; BSR set to: 57
 20852                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 20853  01DA2C  0E08               	movlw	8
 20854  01DA2E  0100               	movlb	0	; () banked
 20855  01DA30  65E5               	cpfsgt	(_crcObj+1)& (0+255),b
 20856  01DA32  D003               	goto	l1282
 20857                           
 20858                           ; BSR set to: 0
 20859                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 20860  01DA34  0139               	movlb	57	; () banked
 20861  01DA36  6B61               	clrf	97,b	;volatile
 20862  01DA38  D001               	goto	L18
 20863  01DA3A                     l1282:
 20864                           
 20865                           ; BSR set to: 0
 20866                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 20867  01DA3A  0139               	movlb	57	; () banked
 20868  01DA3C                     L18:
 20869  01DA3C  6B60               	clrf	96,b	;volatile
 20870                           
 20871                           ; BSR set to: 57
 20872                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 20873                           
 20874                           ;mcc_generated_files/crc.c: 176:      }
 20875  01DA3E  8D68               	bsf	104,6,b	;volatile
 20876  01DA40                     l1284:
 20877                           
 20878                           ; BSR set to: 57
 20879  01DA40  ADA0               	btfss	160,6,b	;volatile
 20880  01DA42  D7FE               	goto	l1284
 20881                           
 20882                           ; BSR set to: 57
 20883                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 20884  01DA44  9DA0               	bcf	160,6,b	;volatile
 20885                           
 20886                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 20887  01DA46  9D68               	bcf	104,6,b	;volatile
 20888                           
 20889                           ; BSR set to: 57
 20890                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 20891  01DA48  0060  F390  F00C   	movff	_crcObj,btemp+11
 20892  01DA4E  0EFF               	movlw	255
 20893  01DA50  260C               	addwf	(btemp+11)^0,f,c
 20894  01DA52  3A0C               	swapf	(btemp+11)^0,f,c
 20895  01DA54  5169               	movf	105,w,b	;volatile
 20896  01DA56  180C               	xorwf	(btemp+11)^0,w,c
 20897  01DA58  0B0F               	andlw	-241
 20898  01DA5A  180C               	xorwf	(btemp+11)^0,w,c
 20899  01DA5C  6F69               	movwf	105,b	;volatile
 20900                           
 20901                           ; BSR set to: 57
 20902                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 20903  01DA5E  5162               	movf	98,w,b	;volatile
 20904  01DA60  006E F58C  F001    	movff	14691,btemp	;volatile
 20905  01DA66  6A02               	clrf	(btemp+1)^0,c
 20906  01DA68  0060  F004  F002   	movff	btemp,btemp+1
 20907  01DA6E  6A01               	clrf	btemp^0,c
 20908  01DA70  1201               	iorwf	btemp^0,f,c
 20909  01DA72  0E00               	movlw	0
 20910  01DA74  1202               	iorwf	(btemp+1)^0,f,c
 20911                           
 20912                           ;stkvar	_result @ sp[(-4)+0]
 20913  01DA76  0EFC               	movlw	-4
 20914  01DA78  0060  F007  FFE3   	movff	btemp,plusw1
 20915  01DA7E  0EFD               	movlw	-3
 20916  01DA80  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20917                           
 20918                           ; BSR set to: 57
 20919                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 20920  01DA86  0E10               	movlw	16
 20921  01DA88  0100               	movlb	0	; () banked
 20922  01DA8A  61E5               	cpfslt	(_crcObj+1)& (0+255),b
 20923  01DA8C  D03A               	goto	l12713
 20924                           
 20925                           ; BSR set to: 0
 20926                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 20927  01DA8E  0EFF               	movlw	255
 20928  01DA90  6E0B               	movwf	(btemp+10)^0,c
 20929  01DA92  0EFF               	movlw	255
 20930  01DA94  6E0C               	movwf	(btemp+11)^0,c
 20931  01DA96  0060  F394  F00A   	movff	_crcObj+1,btemp+9
 20932  01DA9C  0E01               	movlw	1
 20933  01DA9E  6E07               	movwf	(btemp+6)^0,c
 20934  01DAA0  0E00               	movlw	0
 20935  01DAA2  6E08               	movwf	(btemp+7)^0,c
 20936  01DAA4  2A0A               	incf	(btemp+9)^0,f,c
 20937  01DAA6  D003               	goto	u12214
 20938  01DAA8                     u12215:
 20939  01DAA8  90D8               	bcf	status,0,c
 20940  01DAAA  3607               	rlcf	(btemp+6)^0,f,c
 20941  01DAAC  3608               	rlcf	(btemp+7)^0,f,c
 20942  01DAAE                     u12214:
 20943  01DAAE  2E0A               	decfsz	(btemp+9)^0,f,c
 20944  01DAB0  D7FB               	goto	u12215
 20945  01DAB2  500B               	movf	(btemp+10)^0,w,c
 20946  01DAB4  2607               	addwf	(btemp+6)^0,f,c
 20947  01DAB6  500C               	movf	(btemp+11)^0,w,c
 20948  01DAB8  2208               	addwfc	(btemp+7)^0,f,c
 20949                           
 20950                           ;stkvar	_mask @ sp[(-4)+2]
 20951  01DABA  0EFE               	movlw	-2
 20952  01DABC  0060  F01F  FFE3   	movff	btemp+6,plusw1
 20953  01DAC2  0EFF               	movlw	-1
 20954  01DAC4  0060  F023  FFE3   	movff	btemp+7,plusw1
 20955                           
 20956                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 20957                           ;stkvar	_mask @ sp[(-4)+2]
 20958  01DACA  0EFE               	movlw	-2
 20959  01DACC  006F FF8C  F00B    	movff	plusw1,btemp+10
 20960  01DAD2  0EFF               	movlw	-1
 20961  01DAD4  006F FF8C  F00C    	movff	plusw1,btemp+11
 20962                           
 20963                           ;stkvar	_result @ sp[(-4)+0]
 20964  01DADA  0EFC               	movlw	-4
 20965  01DADC  006F FF8C  F001    	movff	plusw1,btemp
 20966  01DAE2  500B               	movf	(btemp+10)^0,w,c
 20967  01DAE4  1601               	andwf	btemp^0,f,c
 20968  01DAE6  0EFC               	movlw	-4
 20969  01DAE8  0060  F007  FFE3   	movff	btemp,plusw1
 20970  01DAEE  0EFD               	movlw	-3
 20971  01DAF0  006F FF8C  F001    	movff	plusw1,btemp
 20972  01DAF6  500C               	movf	(btemp+11)^0,w,c
 20973  01DAF8  1601               	andwf	btemp^0,f,c
 20974  01DAFA  0EFD               	movlw	-3
 20975  01DAFC  0060  F007  FFE3   	movff	btemp,plusw1
 20976  01DB02                     l12713:
 20977                           
 20978                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 20979                           ;stkvar	_reverse @ sp[(-4)+-1]
 20980  01DB02  0EFB               	movlw	-5
 20981  01DB04  50E3               	movf	plusw1,w,c
 20982  01DB06  B4D8               	btfsc	status,2,c
 20983  01DB08  D011               	goto	l12717
 20984                           
 20985                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 20986                           ;stkvar	_result @ sp[(-4)+0]
 20987  01DB0A  0EFC               	movlw	-4
 20988  01DB0C  006F FF8F FFE6     	movff	plusw1,postinc1
 20989  01DB12  006F FF8F FFE6     	movff	plusw1,postinc1
 20990  01DB18  ECDC  F0FC         	call	_CRC_ReverseValue	;wreg free
 20991                           
 20992                           ;stkvar	_result @ sp[(-4)+0]
 20993  01DB1C  0EFC               	movlw	-4
 20994  01DB1E  0060  F007  FFE3   	movff	btemp,plusw1
 20995  01DB24  0EFD               	movlw	-3
 20996  01DB26  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20997  01DB2C                     l12717:
 20998                           
 20999                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 21000                           ;stkvar	_xorValue @ sp[(-4)+-3]
 21001  01DB2C  0EF9               	movlw	-7
 21002  01DB2E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21003  01DB34  0EFA               	movlw	-6
 21004  01DB36  006F FF8C  F00C    	movff	plusw1,btemp+11
 21005                           
 21006                           ;stkvar	_result @ sp[(-4)+0]
 21007  01DB3C  0EFC               	movlw	-4
 21008  01DB3E  006F FF8C  F001    	movff	plusw1,btemp
 21009  01DB44  500B               	movf	(btemp+10)^0,w,c
 21010  01DB46  1A01               	xorwf	btemp^0,f,c
 21011  01DB48  0EFC               	movlw	-4
 21012  01DB4A  0060  F007  FFE3   	movff	btemp,plusw1
 21013  01DB50  0EFD               	movlw	-3
 21014  01DB52  006F FF8C  F001    	movff	plusw1,btemp
 21015  01DB58  500C               	movf	(btemp+11)^0,w,c
 21016  01DB5A  1A01               	xorwf	btemp^0,f,c
 21017  01DB5C  0EFD               	movlw	-3
 21018  01DB5E  0060  F007  FFE3   	movff	btemp,plusw1
 21019                           
 21020                           ;mcc_generated_files/crc.c: 198:     return result;
 21021                           ;stkvar	_result @ sp[(-4)+0]
 21022  01DB64  0EFC               	movlw	-4
 21023  01DB66  006F FF8C  F001    	movff	plusw1,btemp
 21024  01DB6C  0EFD               	movlw	-3
 21025  01DB6E  006F FF8C  F002    	movff	plusw1,btemp+1
 21026                           
 21027                           ; _CRC_CalculatedResultGet: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
 21028  01DB74  0EF9               	movlw	249
 21029  01DB76  26E1               	addwf	fsr1l,f,c
 21030  01DB78  0EFF               	movlw	255
 21031  01DB7A  22E2               	addwfc	fsr1h,f,c
 21032  01DB7C  0012               	return		;funcret
 21033  01DB7E                     __end_of_CRC_CalculatedResultGet:
 21034                           	opt callstack 0
 21035                           
 21036 ;; *************** function _CRC_ReverseValue *****************
 21037 ;; Defined at:
 21038 ;;		line 138 in file "mcc_generated_files/crc.c"
 21039 ;; Parameters:    Size  Location     Type
 21040 ;;  crc             2  [STACK] unsigned short 
 21041 ;; Auto vars:     Size  Location     Type
 21042 ;;  mask            2  [STACK] unsigned short 
 21043 ;;  reverse         2  [STACK] unsigned short 
 21044 ;; Return value:  Size  Location     Type
 21045 ;;                  2  [STACK] unsigned short 
 21046 ;; Registers used:
 21047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 21048 ;; Tracked objects:
 21049 ;;		On entry : 0/0
 21050 ;;		On exit  : 0/0
 21051 ;;		Unchanged: 0/0
 21052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21057 ;;Total ram usage:        0 bytes
 21058 ;; Hardware stack levels used:    1
 21059 ;; Hardware stack levels required when called:   15
 21060 ;; This function calls:
 21061 ;;		Nothing
 21062 ;; This function is called by:
 21063 ;;		_CRC_CalculatedResultGet
 21064 ;; This function uses a reentrant model
 21065 ;;
 21066                           
 21067                           	psect	text61
 21068  01F9B8                     __ptext61:
 21069                           	opt callstack 0
 21070  01F9B8                     _CRC_ReverseValue:
 21071                           	opt callstack 0
 21072                           
 21073                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21074  01F9B8  52E6               	movf	postinc1,f,c
 21075  01F9BA  52E6               	movf	postinc1,f,c
 21076  01F9BC  52E6               	movf	postinc1,f,c
 21077  01F9BE  52E6               	movf	postinc1,f,c
 21078                           
 21079                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 21080                           
 21081                           ;incstack = 0
 21082  01F9C0  0E01               	movlw	1
 21083  01F9C2  6E0B               	movwf	(btemp+10)^0,c
 21084  01F9C4  0E00               	movlw	0
 21085  01F9C6  6E0C               	movwf	(btemp+11)^0,c
 21086                           
 21087                           ;stkvar	_mask @ sp[(-4)+0]
 21088  01F9C8  0EFC               	movlw	-4
 21089  01F9CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21090  01F9D0  0EFD               	movlw	-3
 21091  01F9D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 21092                           
 21093                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 21094  01F9D8  0060  F394  F00C   	movff	_crcObj+1,btemp+11
 21095  01F9DE  0EFF               	movlw	255
 21096  01F9E0  260C               	addwf	(btemp+11)^0,f,c
 21097                           
 21098                           ;stkvar	_mask @ sp[(-4)+0]
 21099  01F9E2  50E1               	movf	fsr1l,w,c
 21100  01F9E4  0FFC               	addlw	-4
 21101  01F9E6  6ED9               	movwf	fsr2l,c
 21102  01F9E8  50E2               	movf	fsr1h,w,c
 21103  01F9EA  6EDA               	movwf	fsr2h,c
 21104  01F9EC  0EFF               	movlw	255
 21105  01F9EE  22DA               	addwfc	fsr2h,f,c
 21106  01F9F0  280C               	incf	(btemp+11)^0,w,c
 21107  01F9F2  D003               	goto	u11500
 21108  01F9F4                     u11505:
 21109  01F9F4  90D8               	bcf	status,0,c
 21110  01F9F6  36DE               	rlcf	postinc2,f,c
 21111  01F9F8  36DD               	rlcf	postdec2,f,c
 21112  01F9FA                     u11500:
 21113  01F9FA  2EE8               	decfsz	wreg,f,c
 21114  01F9FC  D7FB               	goto	u11505
 21115                           
 21116                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 21117                           ;stkvar	_reverse @ sp[(-4)+2]
 21118  01F9FE  0EFE               	movlw	-2
 21119  01FA00  6AE3               	clrf	plusw1,c
 21120  01FA02  0EFF               	movlw	-1
 21121  01FA04  6AE3               	clrf	plusw1,c
 21122                           
 21123                           ;mcc_generated_files/crc.c: 147:     while(crc)
 21124  01FA06  D029               	goto	l12211
 21125  01FA08                     l12203:
 21126                           
 21127                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 21128                           ;stkvar	_crc @ sp[(-4)+-2]
 21129  01FA08  0EFA               	movlw	-6
 21130  01FA0A  A0E3               	btfss	plusw1,0,c
 21131  01FA0C  D01C               	goto	l12207
 21132                           
 21133                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 21134                           ;stkvar	_mask @ sp[(-4)+0]
 21135  01FA0E  0EFC               	movlw	-4
 21136  01FA10  006F FF8C  F00B    	movff	plusw1,btemp+10
 21137  01FA16  0EFD               	movlw	-3
 21138  01FA18  006F FF8C  F00C    	movff	plusw1,btemp+11
 21139                           
 21140                           ;stkvar	_reverse @ sp[(-4)+2]
 21141  01FA1E  0EFE               	movlw	-2
 21142  01FA20  006F FF8C  F001    	movff	plusw1,btemp
 21143  01FA26  500B               	movf	(btemp+10)^0,w,c
 21144  01FA28  1201               	iorwf	btemp^0,f,c
 21145  01FA2A  0EFE               	movlw	-2
 21146  01FA2C  0060  F007  FFE3   	movff	btemp,plusw1
 21147  01FA32  0EFF               	movlw	-1
 21148  01FA34  006F FF8C  F001    	movff	plusw1,btemp
 21149  01FA3A  500C               	movf	(btemp+11)^0,w,c
 21150  01FA3C  1201               	iorwf	btemp^0,f,c
 21151  01FA3E  0EFF               	movlw	-1
 21152  01FA40  0060  F007  FFE3   	movff	btemp,plusw1
 21153  01FA46                     l12207:
 21154                           
 21155                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 21156                           ;stkvar	_mask @ sp[(-4)+0]
 21157  01FA46  90D8               	bcf	status,0,c
 21158  01FA48  0EFD               	movlw	-3
 21159  01FA4A  32E3               	rrcf	plusw1,f,c
 21160  01FA4C  0EFC               	movlw	-4
 21161  01FA4E  32E3               	rrcf	plusw1,f,c
 21162                           
 21163                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 21164                           ;stkvar	_crc @ sp[(-4)+-2]
 21165  01FA50  90D8               	bcf	status,0,c
 21166  01FA52  0EFB               	movlw	-5
 21167  01FA54  32E3               	rrcf	plusw1,f,c
 21168  01FA56  0EFA               	movlw	-6
 21169  01FA58  32E3               	rrcf	plusw1,f,c
 21170  01FA5A                     l12211:
 21171                           
 21172                           ;mcc_generated_files/crc.c: 147:     while(crc)
 21173                           ;stkvar	_crc @ sp[(-4)+-2]
 21174  01FA5A  0EFA               	movlw	-6
 21175  01FA5C  006F FF8C  F001    	movff	plusw1,btemp
 21176  01FA62  0EFB               	movlw	-5
 21177  01FA64  50E3               	movf	plusw1,w,c
 21178  01FA66  1001               	iorwf	btemp^0,w,c
 21179  01FA68  A4D8               	btfss	status,2,c
 21180  01FA6A  D7CE               	goto	l12203
 21181                           
 21182                           ;mcc_generated_files/crc.c: 156:     return reverse;
 21183                           ;stkvar	_reverse @ sp[(-4)+2]
 21184  01FA6C  0EFE               	movlw	-2
 21185  01FA6E  006F FF8C  F001    	movff	plusw1,btemp
 21186  01FA74  0EFF               	movlw	-1
 21187  01FA76  006F FF8C  F002    	movff	plusw1,btemp+1
 21188                           
 21189                           ; _CRC_ReverseValue: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 21190  01FA7C  0EFA               	movlw	250
 21191  01FA7E  26E1               	addwf	fsr1l,f,c
 21192  01FA80  0EFF               	movlw	255
 21193  01FA82  22E2               	addwfc	fsr1h,f,c
 21194  01FA84  0012               	return		;funcret
 21195  01FA86                     __end_of_CRC_ReverseValue:
 21196                           	opt callstack 0
 21197                           
 21198 ;; *************** function _CRC_8BitDataWrite *****************
 21199 ;; Defined at:
 21200 ;;		line 125 in file "mcc_generated_files/crc.c"
 21201 ;; Parameters:    Size  Location     Type
 21202 ;;  data            1  [STACK] unsigned char 
 21203 ;; Auto vars:     Size  Location     Type
 21204 ;;		None
 21205 ;; Return value:  Size  Location     Type
 21206 ;;                  1  [STACK] _Bool 
 21207 ;; Registers used:
 21208 ;;		fsr1l, fsr1h
 21209 ;; Tracked objects:
 21210 ;;		On entry : 0/5
 21211 ;;		On exit  : 3F/39
 21212 ;;		Unchanged: 0/0
 21213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21218 ;;Total ram usage:        0 bytes
 21219 ;; Hardware stack levels used:    1
 21220 ;; Hardware stack levels required when called:   15
 21221 ;; This function calls:
 21222 ;;		Nothing
 21223 ;; This function is called by:
 21224 ;;		_read_cal_data
 21225 ;;		_write_cal_data
 21226 ;; This function uses a reentrant model
 21227 ;;
 21228                           
 21229                           	psect	text62
 21230  001F24                     __ptext62:
 21231                           	opt callstack 0
 21232  001F24                     _CRC_8BitDataWrite:
 21233                           	opt callstack 14
 21234                           
 21235                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 21236                           
 21237                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21238                           ;incstack = 0
 21239  001F24  0139               	movlb	57	; () banked
 21240  001F26  B168               	btfsc	104,0,b	;volatile
 21241  001F28  D004               	goto	l1271
 21242                           
 21243                           ; BSR set to: 57
 21244                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 21245                           ;stkvar	_data @ sp[(0)+-1]
 21246  001F2A  0EFF               	movlw	-1
 21247  001F2C  006F FF8F F960     	movff	plusw1,14688	;volatile
 21248  001F32                     l1271:
 21249                           
 21250                           ; BSR set to: 57
 21251                           ; _CRC_8BitDataWrite: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 21252  001F32  52E5               	movf	postdec1,f,c
 21253  001F34  0012               	return		;funcret
 21254  001F36                     __end_of_CRC_8BitDataWrite:
 21255                           	opt callstack 0
 21256                           
 21257 ;; *************** function _start_adc_scan *****************
 21258 ;; Defined at:
 21259 ;;		line 70 in file "daq.c"
 21260 ;; Parameters:    Size  Location     Type
 21261 ;;		None
 21262 ;; Auto vars:     Size  Location     Type
 21263 ;;		None
 21264 ;; Return value:  Size  Location     Type
 21265 ;;                  1  [STACK] _Bool 
 21266 ;; Registers used:
 21267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 21268 ;; Tracked objects:
 21269 ;;		On entry : 0/0
 21270 ;;		On exit  : 3/2
 21271 ;;		Unchanged: 0/0
 21272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21277 ;;Total ram usage:        0 bytes
 21278 ;; Hardware stack levels used:    1
 21279 ;; Hardware stack levels required when called:   16
 21280 ;; This function calls:
 21281 ;;		_ADCC_DischargeSampleCapacitor
 21282 ;;		_ADCC_SetADIInterruptHandler
 21283 ;;		_ADCC_SetADTIInterruptHandler
 21284 ;;		_ADCC_StartConversion
 21285 ;; This function is called by:
 21286 ;;		_main
 21287 ;;		_current_sensor_cal
 21288 ;;		_update_adc_result
 21289 ;; This function uses a reentrant model
 21290 ;;
 21291                           
 21292                           	psect	text63
 21293  000D7E                     __ptext63:
 21294                           	opt callstack 0
 21295  000D7E                     _start_adc_scan:
 21296                           	opt callstack 14
 21297                           
 21298                           ;daq.c: 72:  if (R.done)
 21299                           
 21300                           ; BSR set to: 57
 21301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21302                           ;incstack = 0
 21303  000D7E  0102               	movlb	2	; () banked
 21304  000D80  5135               	movf	(_R+53)& (0+255),w,b	;volatile
 21305  000D82  A4D8               	btfss	status,2,c
 21306  000D84  0012               	return	
 21307                           
 21308                           ; BSR set to: 2
 21309                           ;daq.c: 75:  R.scan_index = 0;
 21310  000D86  6B32               	clrf	(_R+50)& (0+255),b	;volatile
 21311                           
 21312                           ; BSR set to: 2
 21313                           ;daq.c: 76:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 21314  000D88  013A               	movlb	58	; () banked
 21315  000D8A  5140               	movf	64,w,b	;volatile
 21316  000D8C  006E F940  F001    	movff	14928,btemp	;volatile
 21317  000D92  6A02               	clrf	(btemp+1)^0,c
 21318  000D94  0060  F004  F002   	movff	btemp,btemp+1
 21319  000D9A  6A01               	clrf	btemp^0,c
 21320  000D9C  2601               	addwf	btemp^0,f,c
 21321  000D9E  0E00               	movlw	0
 21322  000DA0  2202               	addwfc	(btemp+1)^0,f,c
 21323  000DA2  0E77               	movlw	119
 21324  000DA4  1401               	andwf	btemp^0,w,c
 21325  000DA6  0102               	movlb	2	; () banked
 21326  000DA8  6F33               	movwf	(_R+51)& (0+255),b	;volatile
 21327  000DAA  0E3C               	movlw	60
 21328  000DAC  1402               	andwf	(btemp+1)^0,w,c
 21329  000DAE  6F34               	movwf	(_R+52)& (0+255),b	;volatile
 21330                           
 21331                           ; BSR set to: 2
 21332                           ;daq.c: 77:  ADCC_SetADIInterruptHandler(adc_int_handler);
 21333  000DB0  0E6E               	movlw	low _adc_int_handler
 21334  000DB2  6EE6               	movwf	postinc1,c
 21335  000DB4  0E20               	movlw	high _adc_int_handler
 21336  000DB6  6EE6               	movwf	postinc1,c
 21337  000DB8  0E00               	movlw	low (_adc_int_handler shr (0+16))
 21338  000DBA  6EE6               	movwf	postinc1,c
 21339  000DBC  ECBB  F00D         	call	_ADCC_SetADIInterruptHandler	;wreg free
 21340                           
 21341                           ;daq.c: 78:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 21342  000DC0  0ED2               	movlw	low _adc_int_t_handler
 21343  000DC2  6EE6               	movwf	postinc1,c
 21344  000DC4  0E07               	movlw	high _adc_int_t_handler
 21345  000DC6  6EE6               	movwf	postinc1,c
 21346  000DC8  0E00               	movlw	low (_adc_int_t_handler shr (0+16))
 21347  000DCA  6EE6               	movwf	postinc1,c
 21348  000DCC  ECA7  F00D         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 21349                           
 21350                           ;daq.c: 79:  ADCC_DischargeSampleCapacitor();
 21351  000DD0  EC11  F010         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 21352                           
 21353                           ; BSR set to: 62
 21354                           ;daq.c: 80:  ADCC_StartConversion(R.scan_index & 0xf);
 21355  000DD4  0102               	movlb	2	; () banked
 21356  000DD6  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 21357  000DD8  0B0F               	andlw	15
 21358  000DDA  6EE6               	movwf	postinc1,c
 21359  000DDC  EC9B  F00F         	call	_ADCC_StartConversion	;wreg free
 21360                           
 21361                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21362  000DE0  0012               	return		;funcret
 21363  000DE2                     __end_of_start_adc_scan:
 21364                           	opt callstack 0
 21365                           
 21366 ;; *************** function _ADCC_StartConversion *****************
 21367 ;; Defined at:
 21368 ;;		line 128 in file "mcc_generated_files/adcc.c"
 21369 ;; Parameters:    Size  Location     Type
 21370 ;;  channel         1  [STACK] enum E16136
 21371 ;; Auto vars:     Size  Location     Type
 21372 ;;		None
 21373 ;; Return value:  Size  Location     Type
 21374 ;;                  1  [STACK] void 
 21375 ;; Registers used:
 21376 ;;		fsr1l, fsr1h
 21377 ;; Tracked objects:
 21378 ;;		On entry : 3F/2
 21379 ;;		On exit  : 3F/3E
 21380 ;;		Unchanged: 0/0
 21381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21386 ;;Total ram usage:        0 bytes
 21387 ;; Hardware stack levels used:    1
 21388 ;; Hardware stack levels required when called:   15
 21389 ;; This function calls:
 21390 ;;		Nothing
 21391 ;; This function is called by:
 21392 ;;		_start_adc_scan
 21393 ;;		_adc_int_t_handler
 21394 ;; This function uses a reentrant model
 21395 ;;
 21396                           
 21397                           	psect	text64
 21398  001F36                     __ptext64:
 21399                           	opt callstack 0
 21400  001F36                     _ADCC_StartConversion:
 21401                           	opt callstack 0
 21402                           
 21403                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 21404                           ;stkvar	_channel @ sp[(0)+-1]
 21405                           
 21406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21407                           ;incstack = 0
 21408 ;; hardware stack exceeded
 21409  001F36  0EFF               	movlw	-1
 21410  001F38  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 21411                           
 21412                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 21413  001F3E  013E               	movlb	62	; () banked
 21414  001F40  8FF8               	bsf	248,7,b	;volatile
 21415                           
 21416                           ; BSR set to: 62
 21417                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 21418  001F42  81F8               	bsf	248,0,b	;volatile
 21419                           
 21420                           ; BSR set to: 62
 21421                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 21422  001F44  52E5               	movf	postdec1,f,c
 21423  001F46  0012               	return		;funcret
 21424  001F48                     __end_of_ADCC_StartConversion:
 21425                           	opt callstack 0
 21426                           
 21427 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 21428 ;; Defined at:
 21429 ;;		line 189 in file "mcc_generated_files/adcc.c"
 21430 ;; Parameters:    Size  Location     Type
 21431 ;;		None
 21432 ;; Auto vars:     Size  Location     Type
 21433 ;;		None
 21434 ;; Return value:  Size  Location     Type
 21435 ;;                  1  [STACK] void 
 21436 ;; Registers used:
 21437 ;;		wreg, status,2
 21438 ;; Tracked objects:
 21439 ;;		On entry : 0/2
 21440 ;;		On exit  : 3F/3E
 21441 ;;		Unchanged: 0/0
 21442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21447 ;;Total ram usage:        0 bytes
 21448 ;; Hardware stack levels used:    1
 21449 ;; Hardware stack levels required when called:   15
 21450 ;; This function calls:
 21451 ;;		Nothing
 21452 ;; This function is called by:
 21453 ;;		_start_adc_scan
 21454 ;;		_adc_int_t_handler
 21455 ;; This function uses a reentrant model
 21456 ;;
 21457                           
 21458                           	psect	text65
 21459  002022                     __ptext65:
 21460                           	opt callstack 0
 21461  002022                     _ADCC_DischargeSampleCapacitor:
 21462                           	opt callstack 0
 21463                           
 21464                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 21465                           
 21466                           ; BSR set to: 62
 21467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21468                           ;incstack = 0
 21469 ;; hardware stack exceeded
 21470  002022  0E3B               	movlw	59
 21471  002024  013E               	movlb	62	; () banked
 21472  002026  6FF1               	movwf	241,b	;volatile
 21473                           
 21474                           ; BSR set to: 62
 21475                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 21476  002028  0012               	return		;funcret
 21477  00202A                     __end_of_ADCC_DischargeSampleCapacitor:
 21478                           	opt callstack 0
 21479                           
 21480 ;; *************** function _spinners *****************
 21481 ;; Defined at:
 21482 ;;		line 147 in file "mbmc.c"
 21483 ;; Parameters:    Size  Location     Type
 21484 ;;  shape           1  [STACK] unsigned char 
 21485 ;;  reset           1  [STACK] const unsigned char 
 21486 ;; Auto vars:     Size  Location     Type
 21487 ;;  c               1  [STACK] unsigned char 
 21488 ;; Return value:  Size  Location     Type
 21489 ;;                  1  [STACK] unsigned char 
 21490 ;; Registers used:
 21491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 21492 ;; Tracked objects:
 21493 ;;		On entry : 0/0
 21494 ;;		On exit  : 0/0
 21495 ;;		Unchanged: 0/0
 21496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21501 ;;Total ram usage:        0 bytes
 21502 ;; Hardware stack levels used:    1
 21503 ;; Hardware stack levels required when called:   16
 21504 ;; This function calls:
 21505 ;;		_strlen
 21506 ;; This function is called by:
 21507 ;;		_main
 21508 ;;		_current_sensor_cal
 21509 ;; This function uses a reentrant model
 21510 ;;
 21511                           
 21512                           	psect	text66
 21513  01F576                     __ptext66:
 21514                           	opt callstack 0
 21515  01F576                     _spinners:
 21516                           	opt callstack 0
 21517                           
 21518                           ; BSR set to: 62
 21519                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21520  01F576  52E6               	movf	postinc1,f,c
 21521                           
 21522                           ;mbmc.c: 147: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 148: {;mbmc.c: 1
      +                          49:  static uint8_t s[6];;mbmc.c: 150:  char c;;mbmc.c: 152:  if (shape > (6 - 1))
 21523                           ;stkvar	_shape @ sp[(-1)+-1]
 21524                           
 21525                           ;incstack = 0
 21526  01F578  0EFE               	movlw	-2
 21527  01F57A  006F FF8C  F001    	movff	plusw1,btemp
 21528  01F580  0E05               	movlw	5
 21529  01F582  6401               	cpfsgt	btemp^0,c
 21530  01F584  D002               	goto	l2172
 21531                           
 21532                           ;mbmc.c: 153:   shape = 0;
 21533                           ;stkvar	_shape @ sp[(-1)+-1]
 21534  01F586  0EFE               	movlw	-2
 21535  01F588  6AE3               	clrf	plusw1,c
 21536  01F58A                     l2172:
 21537                           
 21538                           ;mbmc.c: 154:  if (reset)
 21539                           ;stkvar	_reset @ sp[(-1)+-2]
 21540  01F58A  0EFD               	movlw	-3
 21541  01F58C  50E3               	movf	plusw1,w,c
 21542  01F58E  B4D8               	btfsc	status,2,c
 21543  01F590  D00A               	goto	l13333
 21544                           
 21545                           ;mbmc.c: 155:   s[shape] = 0;
 21546                           ;stkvar	_shape @ sp[(-1)+-1]
 21547  01F592  0EFE               	movlw	-2
 21548  01F594  006F FF8C  F00C    	movff	plusw1,btemp+11
 21549  01F59A  500C               	movf	(btemp+11)^0,w,c
 21550  01F59C  0F6C               	addlw	low spinners@s
 21551  01F59E  6ED9               	movwf	fsr2l,c
 21552  01F5A0  6ADA               	clrf	fsr2h,c
 21553  01F5A2  0E00               	movlw	0
 21554  01F5A4  6EDF               	movwf	indf2,c
 21555  01F5A6                     l13333:
 21556                           
 21557                           ;mbmc.c: 156:  c = spin[shape][s[shape]];
 21558                           ;stkvar	_shape @ sp[(-1)+-1]
 21559  01F5A6  0EFE               	movlw	-2
 21560  01F5A8  50E3               	movf	plusw1,w,c
 21561  01F5AA  0D14               	mullw	20
 21562  01F5AC  0EAF               	movlw	low _spin
 21563  01F5AE  6E0B               	movwf	(btemp+10)^0,c
 21564  01F5B0  0EF9               	movlw	high _spin
 21565  01F5B2  6E0C               	movwf	(btemp+11)^0,c
 21566  01F5B4  50F3               	movf	243,w,c
 21567  01F5B6  260B               	addwf	(btemp+10)^0,f,c
 21568  01F5B8  50F4               	movf	244,w,c
 21569  01F5BA  220C               	addwfc	(btemp+11)^0,f,c
 21570                           
 21571                           ;stkvar	_shape @ sp[(-1)+-1]
 21572  01F5BC  0EFE               	movlw	-2
 21573  01F5BE  006F FF8C  F00A    	movff	plusw1,btemp+9
 21574  01F5C4  500A               	movf	(btemp+9)^0,w,c
 21575  01F5C6  0F6C               	addlw	low spinners@s
 21576  01F5C8  6ED9               	movwf	fsr2l,c
 21577  01F5CA  6ADA               	clrf	fsr2h,c
 21578  01F5CC  50DF               	movf	indf2,w,c
 21579  01F5CE  260B               	addwf	(btemp+10)^0,f,c
 21580  01F5D0  0E00               	movlw	0
 21581  01F5D2  220C               	addwfc	(btemp+11)^0,f,c
 21582  01F5D4  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 21583  01F5DA  0060  F033  FFF7   	movff	btemp+11,tblptrh
 21584  01F5E0                     	if	0	;tblptru may be non-zero
 21585  01F5E0                     	endif
 21586  01F5E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21587  01F5E0  0E00               	movlw	low (__mediumconst shr (0+16))
 21588  01F5E2  6EF8               	movwf	tblptru,c
 21589  01F5E4                     	endif
 21590                           
 21591                           ;stkvar	_c @ sp[(-1)+0]
 21592  01F5E4  0008               	tblrd		*
 21593  01F5E6  0EFF               	movlw	-1
 21594  01F5E8  006F FFD7 FFE3     	movff	tablat,plusw1
 21595                           
 21596                           ;mbmc.c: 157:  if (++s[shape] >= strlen(spin[shape]))
 21597                           ;stkvar	_shape @ sp[(-1)+-1]
 21598  01F5EE  0EFE               	movlw	-2
 21599  01F5F0  50E3               	movf	plusw1,w,c
 21600  01F5F2  0D14               	mullw	20
 21601  01F5F4  0EAF               	movlw	low _spin
 21602  01F5F6  6E0B               	movwf	(btemp+10)^0,c
 21603  01F5F8  0EF9               	movlw	high _spin
 21604  01F5FA  6E0C               	movwf	(btemp+11)^0,c
 21605  01F5FC  50F3               	movf	243,w,c
 21606  01F5FE  260B               	addwf	(btemp+10)^0,f,c
 21607  01F600  50F4               	movf	244,w,c
 21608  01F602  220C               	addwfc	(btemp+11)^0,f,c
 21609  01F604  0060  F02F  FFE6   	movff	btemp+10,postinc1
 21610  01F60A  0060  F033  FFE6   	movff	btemp+11,postinc1
 21611  01F610  EC57  F001         	call	_strlen	;wreg free
 21612                           
 21613                           ;stkvar	_shape @ sp[(-1)+-1]
 21614  01F614  0EFE               	movlw	-2
 21615  01F616  006F FF8C  F00C    	movff	plusw1,btemp+11
 21616  01F61C  500C               	movf	(btemp+11)^0,w,c
 21617  01F61E  0F6C               	addlw	low spinners@s
 21618  01F620  6ED9               	movwf	fsr2l,c
 21619  01F622  6ADA               	clrf	fsr2h,c
 21620  01F624  2ADF               	incf	indf2,f,c
 21621  01F626  50DF               	movf	indf2,w,c
 21622  01F628  6E0B               	movwf	(btemp+10)^0,c
 21623  01F62A  6A0C               	clrf	(btemp+11)^0,c
 21624  01F62C  5001               	movf	btemp^0,w,c
 21625  01F62E  5C0B               	subwf	(btemp+10)^0,w,c
 21626  01F630  5002               	movf	(btemp+1)^0,w,c
 21627  01F632  580C               	subwfb	(btemp+11)^0,w,c
 21628  01F634  A0D8               	btfss	status,0,c
 21629  01F636  D00A               	goto	l13339
 21630                           
 21631                           ;mbmc.c: 158:   s[shape] = 0;
 21632                           ;stkvar	_shape @ sp[(-1)+-1]
 21633  01F638  0EFE               	movlw	-2
 21634  01F63A  006F FF8C  F00C    	movff	plusw1,btemp+11
 21635  01F640  500C               	movf	(btemp+11)^0,w,c
 21636  01F642  0F6C               	addlw	low spinners@s
 21637  01F644  6ED9               	movwf	fsr2l,c
 21638  01F646  6ADA               	clrf	fsr2h,c
 21639  01F648  0E00               	movlw	0
 21640  01F64A  6EDF               	movwf	indf2,c
 21641  01F64C                     l13339:
 21642                           
 21643                           ;mbmc.c: 159:  return c;
 21644                           ;stkvar	_c @ sp[(-1)+0]
 21645  01F64C  0EFF               	movlw	-1
 21646  01F64E  006F FF8C  F001    	movff	plusw1,btemp
 21647                           
 21648                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 21649  01F654  52E5               	movf	postdec1,f,c
 21650  01F656  52E5               	movf	postdec1,f,c
 21651  01F658  52E5               	movf	postdec1,f,c
 21652  01F65A  0012               	return		;funcret
 21653  01F65C                     __end_of_spinners:
 21654                           	opt callstack 0
 21655                           
 21656 ;; *************** function _get_switch *****************
 21657 ;; Defined at:
 21658 ;;		line 18 in file "dio.c"
 21659 ;; Parameters:    Size  Location     Type
 21660 ;;  i               1  [STACK] const unsigned char 
 21661 ;; Auto vars:     Size  Location     Type
 21662 ;;		None
 21663 ;; Return value:  Size  Location     Type
 21664 ;;                  1  [STACK] enum E17187
 21665 ;; Registers used:
 21666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21667 ;; Tracked objects:
 21668 ;;		On entry : 0/0
 21669 ;;		On exit  : 0/0
 21670 ;;		Unchanged: 0/0
 21671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21676 ;;Total ram usage:        0 bytes
 21677 ;; Hardware stack levels used:    1
 21678 ;; Hardware stack levels required when called:   15
 21679 ;; This function calls:
 21680 ;;		Nothing
 21681 ;; This function is called by:
 21682 ;;		_main
 21683 ;;		_current_sensor_cal
 21684 ;;		_display_history
 21685 ;;		_hid_input
 21686 ;; This function uses a reentrant model
 21687 ;;
 21688                           
 21689                           	psect	text67
 21690  00190E                     __ptext67:
 21691                           	opt callstack 0
 21692  00190E                     _get_switch:
 21693                           	opt callstack 13
 21694                           
 21695                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 21696                           ;stkvar	_i @ sp[(0)+-1]
 21697                           
 21698                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21699                           ;incstack = 0
 21700  00190E  0EFF               	movlw	-1
 21701  001910  006F FF8C  F001    	movff	plusw1,btemp
 21702  001916  0E05               	movlw	5
 21703  001918  6401               	cpfsgt	btemp^0,c
 21704  00191A  D002               	goto	l12783
 21705                           
 21706                           ;dio.c: 21:   return SW_OFF;
 21707  00191C  0E00               	movlw	0
 21708  00191E  D00A               	goto	L19
 21709  001920                     l12783:
 21710                           
 21711                           ;dio.c: 23:  return S.button[i].sw;
 21712                           ;stkvar	_i @ sp[(0)+-1]
 21713  001920  0EFF               	movlw	-1
 21714  001922  50E3               	movf	plusw1,w,c
 21715  001924  0D05               	mullw	5
 21716  001926  0EAB               	movlw	low _S
 21717  001928  24F3               	addwf	243,w,c
 21718  00192A  6ED9               	movwf	fsr2l,c
 21719  00192C  0E02               	movlw	high _S
 21720  00192E  20F4               	addwfc	prodh,w,c
 21721  001930  6EDA               	movwf	fsr2h,c
 21722  001932  50DF               	movf	indf2,w,c
 21723  001934                     L19:
 21724  001934  6E01               	movwf	btemp^0,c
 21725                           
 21726                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 21727  001936  52E5               	movf	postdec1,f,c
 21728  001938  0012               	return		;funcret
 21729  00193A                     __end_of_get_switch:
 21730                           	opt callstack 0
 21731                           
 21732 ;; *************** function _clear_adc_scan *****************
 21733 ;; Defined at:
 21734 ;;		line 101 in file "daq.c"
 21735 ;; Parameters:    Size  Location     Type
 21736 ;;		None
 21737 ;; Auto vars:     Size  Location     Type
 21738 ;;		None
 21739 ;; Return value:  Size  Location     Type
 21740 ;;                  1  [STACK] void 
 21741 ;; Registers used:
 21742 ;;		None
 21743 ;; Tracked objects:
 21744 ;;		On entry : 0/0
 21745 ;;		On exit  : 3F/2
 21746 ;;		Unchanged: 0/0
 21747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21752 ;;Total ram usage:        0 bytes
 21753 ;; Hardware stack levels used:    1
 21754 ;; Hardware stack levels required when called:   15
 21755 ;; This function calls:
 21756 ;;		Nothing
 21757 ;; This function is called by:
 21758 ;;		_main
 21759 ;;		_current_sensor_cal
 21760 ;;		_update_adc_result
 21761 ;; This function uses a reentrant model
 21762 ;;
 21763                           
 21764                           	psect	text68
 21765  002048                     __ptext68:
 21766                           	opt callstack 0
 21767  002048                     _clear_adc_scan:
 21768                           	opt callstack 13
 21769                           
 21770                           ;daq.c: 103:  R.done = 0;
 21771                           
 21772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21773                           ;incstack = 0
 21774  002048  0102               	movlb	2	; () banked
 21775  00204A  6B35               	clrf	(_R+53)& (0+255),b	;volatile
 21776                           
 21777                           ; BSR set to: 2
 21778                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21779  00204C  0012               	return		;funcret
 21780  00204E                     __end_of_clear_adc_scan:
 21781                           	opt callstack 0
 21782                           
 21783 ;; *************** function _cal_current_zero *****************
 21784 ;; Defined at:
 21785 ;;		line 327 in file "daq.c"
 21786 ;; Parameters:    Size  Location     Type
 21787 ;;  mode            1  [STACK] const _Bool 
 21788 ;;  cb              2  [STACK] const short 
 21789 ;;  cp              2  [STACK] const short 
 21790 ;; Auto vars:     Size  Location     Type
 21791 ;;		None
 21792 ;; Return value:  Size  Location     Type
 21793 ;;                  1  [STACK] _Bool 
 21794 ;; Registers used:
 21795 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21796 ;; Tracked objects:
 21797 ;;		On entry : 0/2
 21798 ;;		On exit  : 0/0
 21799 ;;		Unchanged: 0/0
 21800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21805 ;;Total ram usage:        0 bytes
 21806 ;; Hardware stack levels used:    1
 21807 ;; Hardware stack levels required when called:   16
 21808 ;; This function calls:
 21809 ;;		_check_range
 21810 ;; This function is called by:
 21811 ;;		_current_sensor_cal
 21812 ;; This function uses a reentrant model
 21813 ;;
 21814                           
 21815                           	psect	text69
 21816  000482                     __ptext69:
 21817                           	opt callstack 0
 21818  000482                     _cal_current_zero:
 21819                           	opt callstack 13
 21820                           
 21821                           ;daq.c: 327: _Bool cal_current_zero(const _Bool mode, const int16_t cb, const int16_t cp
      +                          );daq.c: 328: {;daq.c: 330:  if (!check_range(cb, 100, 4000))
 21822                           
 21823                           ; BSR set to: 2
 21824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21825                           ;incstack = 0
 21826  000482  0EA0               	movlw	160
 21827  000484  6EE6               	movwf	postinc1,c
 21828  000486  0E0F               	movlw	15
 21829  000488  6EE6               	movwf	postinc1,c
 21830  00048A  0E64               	movlw	100
 21831  00048C  6EE6               	movwf	postinc1,c
 21832  00048E  0E00               	movlw	0
 21833  000490  6EE6               	movwf	postinc1,c
 21834                           
 21835                           ;stkvar	_cb @ sp[(-4)+-3]
 21836  000492  0EF9               	movlw	-7
 21837  000494  006F FF8F FFE6     	movff	plusw1,postinc1
 21838  00049A  006F FF8F FFE6     	movff	plusw1,postinc1
 21839  0004A0  EC2A  F004         	call	_check_range	;wreg free
 21840  0004A4  5001               	movf	btemp^0,w,c
 21841  0004A6  A4D8               	btfss	status,2,c
 21842  0004A8  D002               	goto	l13407
 21843  0004AA                     u12550:
 21844                           
 21845                           ;daq.c: 331:   return 0;
 21846  0004AA  0E00               	movlw	0
 21847  0004AC  D019               	goto	L20
 21848  0004AE                     l13407:
 21849                           
 21850                           ;daq.c: 333:  if (!check_range(cp, 100, 4000))
 21851  0004AE  0EA0               	movlw	160
 21852  0004B0  6EE6               	movwf	postinc1,c
 21853  0004B2  0E0F               	movlw	15
 21854  0004B4  6EE6               	movwf	postinc1,c
 21855  0004B6  0E64               	movlw	100
 21856  0004B8  6EE6               	movwf	postinc1,c
 21857  0004BA  0E00               	movlw	0
 21858  0004BC  6EE6               	movwf	postinc1,c
 21859                           
 21860                           ;stkvar	_cp @ sp[(-4)+-5]
 21861  0004BE  0EF7               	movlw	-9
 21862  0004C0  006F FF8F FFE6     	movff	plusw1,postinc1
 21863  0004C6  006F FF8F FFE6     	movff	plusw1,postinc1
 21864  0004CC  EC2A  F004         	call	_check_range	;wreg free
 21865  0004D0  5001               	movf	btemp^0,w,c
 21866  0004D2  B4D8               	btfsc	status,2,c
 21867  0004D4  D7EA               	goto	u12550
 21868                           
 21869                           ;daq.c: 336:  if (!mode)
 21870                           ;stkvar	_mode @ sp[(0)+-1]
 21871  0004D6  0EFF               	movlw	-1
 21872  0004D8  50E3               	movf	plusw1,w,c
 21873  0004DA  A4D8               	btfss	status,2,c
 21874  0004DC  D003               	goto	l13419
 21875  0004DE                     u12570:
 21876                           
 21877                           ;daq.c: 337:   return 1;
 21878  0004DE  0E01               	movlw	1
 21879  0004E0                     L20:
 21880  0004E0  6E01               	movwf	btemp^0,c
 21881  0004E2  D013               	goto	l2052
 21882  0004E4                     l13419:
 21883                           
 21884                           ;daq.c: 339:  R.n_offset[0] = cb;
 21885                           ;stkvar	_cb @ sp[(0)+-3]
 21886  0004E4  0EFD               	movlw	-3
 21887  0004E6  006F FF8C  F226    	movff	plusw1,_R+38	;volatile
 21888  0004EC  0EFE               	movlw	-2
 21889  0004EE  006F FF8C  F227    	movff	plusw1,_R+39	;volatile
 21890                           
 21891                           ;daq.c: 340:  R.n_offset[1] = cp;
 21892                           ;stkvar	_cp @ sp[(0)+-5]
 21893  0004F4  0EFB               	movlw	-5
 21894  0004F6  006F FF8C  F228    	movff	plusw1,_R+40	;volatile
 21895  0004FC  0EFC               	movlw	-4
 21896  0004FE  006F FF8C  F229    	movff	plusw1,_R+41	;volatile
 21897                           
 21898                           ;daq.c: 341:  R.c_zero_cal = 1;
 21899  000504  0102               	movlb	2	; () banked
 21900  000506  83A7               	bsf	(_R+167)& (0+255),1,b	;volatile
 21901  000508  D7EA               	goto	u12570
 21902  00050A                     l2052:
 21903                           
 21904                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 21905  00050A  0EFB               	movlw	251
 21906  00050C  26E1               	addwf	fsr1l,f,c
 21907  00050E  0EFF               	movlw	255
 21908  000510  22E2               	addwfc	fsr1h,f,c
 21909  000512  0012               	return		;funcret
 21910  000514                     __end_of_cal_current_zero:
 21911                           	opt callstack 0
 21912                           
 21913 ;; *************** function _check_range *****************
 21914 ;; Defined at:
 21915 ;;		line 315 in file "daq.c"
 21916 ;; Parameters:    Size  Location     Type
 21917 ;;  value           2  [STACK] const short 
 21918 ;;  window          2  [STACK] const short 
 21919 ;;  standard        2  [STACK] const short 
 21920 ;; Auto vars:     Size  Location     Type
 21921 ;;		None
 21922 ;; Return value:  Size  Location     Type
 21923 ;;                  1  [STACK] _Bool 
 21924 ;; Registers used:
 21925 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21926 ;; Tracked objects:
 21927 ;;		On entry : 0/2
 21928 ;;		On exit  : 0/0
 21929 ;;		Unchanged: 0/0
 21930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21935 ;;Total ram usage:        0 bytes
 21936 ;; Hardware stack levels used:    1
 21937 ;; Hardware stack levels required when called:   15
 21938 ;; This function calls:
 21939 ;;		Nothing
 21940 ;; This function is called by:
 21941 ;;		_cal_current_zero
 21942 ;; This function uses a reentrant model
 21943 ;;
 21944                           
 21945                           	psect	text70
 21946  000854                     __ptext70:
 21947                           	opt callstack 0
 21948  000854                     _check_range:
 21949                           	opt callstack 13
 21950                           
 21951                           ;daq.c: 315: static _Bool check_range(const int16_t value, const int16_t window, const i
      +                          nt16_t standard);daq.c: 316: {;daq.c: 317:  if (value > (standard + window))
 21952                           ;stkvar	_value @ sp[(0)+-2]
 21953                           ;stkvar	_window @ sp[(0)+-4]
 21954                           ;stkvar	_standard @ sp[(0)+-6]
 21955                           
 21956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21957                           ;incstack = 0
 21958  000854  0EFA               	movlw	-6
 21959  000856  006F FF8C  F00B    	movff	plusw1,btemp+10
 21960  00085C  0EFB               	movlw	-5
 21961  00085E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21962  000864  0EFC               	movlw	-4
 21963  000866  50E3               	movf	plusw1,w,c
 21964  000868  260B               	addwf	(btemp+10)^0,f,c
 21965  00086A  0EFD               	movlw	-3
 21966  00086C  50E3               	movf	plusw1,w,c
 21967  00086E  220C               	addwfc	(btemp+11)^0,f,c
 21968  000870  0EFE               	movlw	-2
 21969  000872  50E3               	movf	plusw1,w,c
 21970  000874  5C0B               	subwf	(btemp+10)^0,w,c
 21971  000876  500C               	movf	(btemp+11)^0,w,c
 21972  000878  0A80               	xorlw	128
 21973  00087A  6E01               	movwf	btemp^0,c
 21974  00087C  0EFF               	movlw	-1
 21975  00087E  50E3               	movf	plusw1,w,c
 21976  000880  0A80               	xorlw	128
 21977  000882  5801               	subwfb	btemp^0,w,c
 21978  000884  B0D8               	btfsc	status,0,c
 21979  000886  D002               	goto	l12841
 21980  000888                     u12280:
 21981                           
 21982                           ;daq.c: 318:   return 0;
 21983  000888  0E00               	movlw	0
 21984  00088A  D01E               	goto	L21
 21985  00088C                     l12841:
 21986                           
 21987                           ;daq.c: 319:  if (value < (standard - window))
 21988                           ;stkvar	_window @ sp[(0)+-4]
 21989                           ;stkvar	_standard @ sp[(0)+-6]
 21990  00088C  0EFA               	movlw	-6
 21991  00088E  006F FF8C  F00B    	movff	plusw1,btemp+10
 21992  000894  0EFB               	movlw	-5
 21993  000896  006F FF8C  F00C    	movff	plusw1,btemp+11
 21994  00089C  0EFC               	movlw	-4
 21995  00089E  50E3               	movf	plusw1,w,c
 21996  0008A0  5E0B               	subwf	(btemp+10)^0,f,c
 21997  0008A2  0EFD               	movlw	-3
 21998  0008A4  50E3               	movf	plusw1,w,c
 21999  0008A6  5A0C               	subwfb	(btemp+11)^0,f,c
 22000                           
 22001                           ;stkvar	_value @ sp[(0)+-2]
 22002  0008A8  0EFE               	movlw	-2
 22003  0008AA  006F FF8C  F001    	movff	plusw1,btemp
 22004  0008B0  500B               	movf	(btemp+10)^0,w,c
 22005  0008B2  5C01               	subwf	btemp^0,w,c
 22006  0008B4  0EFF               	movlw	-1
 22007  0008B6  50E3               	movf	plusw1,w,c
 22008  0008B8  0A80               	xorlw	128
 22009  0008BA  6E01               	movwf	btemp^0,c
 22010  0008BC  500C               	movf	(btemp+11)^0,w,c
 22011  0008BE  0A80               	xorlw	128
 22012  0008C0  5801               	subwfb	btemp^0,w,c
 22013  0008C2  A0D8               	btfss	status,0,c
 22014  0008C4  D7E1               	goto	u12280
 22015                           
 22016                           ;daq.c: 321:  return 1;
 22017  0008C6  0E01               	movlw	1
 22018  0008C8                     L21:
 22019  0008C8  6E01               	movwf	btemp^0,c
 22020                           
 22021                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 22022  0008CA  0EFA               	movlw	250
 22023  0008CC  26E1               	addwf	fsr1l,f,c
 22024  0008CE  0EFF               	movlw	255
 22025  0008D0  22E2               	addwfc	fsr1h,f,c
 22026  0008D2  0012               	return		;funcret
 22027  0008D4                     __end_of_check_range:
 22028                           	opt callstack 0
 22029                           
 22030 ;; *************** function _convert_adc_data *****************
 22031 ;; Defined at:
 22032 ;;		line 51 in file "mbmc.c"
 22033 ;; Parameters:    Size  Location     Type
 22034 ;;		None
 22035 ;; Auto vars:     Size  Location     Type
 22036 ;;  i               1  [STACK] unsigned char 
 22037 ;; Return value:  Size  Location     Type
 22038 ;;                  1  [STACK] void 
 22039 ;; Registers used:
 22040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22041 ;; Tracked objects:
 22042 ;;		On entry : 0/1
 22043 ;;		On exit  : 0/0
 22044 ;;		Unchanged: 0/0
 22045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22050 ;;Total ram usage:        0 bytes
 22051 ;; Hardware stack levels used:    1
 22052 ;; Hardware stack levels required when called:   18
 22053 ;; This function calls:
 22054 ;;		_conv_raw_result
 22055 ;;		_lp_filter
 22056 ;; This function is called by:
 22057 ;;		_main
 22058 ;; This function uses a reentrant model
 22059 ;;
 22060                           
 22061                           	psect	text71
 22062  01FC04                     __ptext71:
 22063                           	opt callstack 0
 22064  01FC04                     _convert_adc_data:
 22065                           	opt callstack 0
 22066                           
 22067                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22068  01FC04  52E6               	movf	postinc1,f,c
 22069                           
 22070                           ;mbmc.c: 53:  uint8_t i = 0;
 22071                           ;stkvar	_i @ sp[(-1)+0]
 22072                           
 22073                           ;incstack = 0
 22074  01FC06  0EFF               	movlw	-1
 22075  01FC08  6AE3               	clrf	plusw1,c
 22076  01FC0A                     l14289:
 22077                           
 22078                           ;mbmc.c: 56:   if (V.calib) {
 22079  01FC0A  0101               	movlb	1	; () banked
 22080  01FC0C  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 22081  01FC0E  B4D8               	btfsc	status,2,c
 22082  01FC10  D01B               	goto	l14293
 22083                           
 22084                           ; BSR set to: 1
 22085                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 22086  01FC12  0E01               	movlw	1
 22087  01FC14  6EE6               	movwf	postinc1,c
 22088                           
 22089                           ;stkvar	_i @ sp[(-2)+0]
 22090  01FC16  0EFE               	movlw	-2
 22091  01FC18  50E3               	movf	plusw1,w,c
 22092  01FC1A  6EE6               	movwf	postinc1,c
 22093  01FC1C  0E01               	movlw	1
 22094  01FC1E  6EE6               	movwf	postinc1,c
 22095                           
 22096                           ;stkvar	_i @ sp[(-4)+0]
 22097  01FC20  0EFC               	movlw	-4
 22098  01FC22  50E3               	movf	plusw1,w,c
 22099  01FC24  6EE6               	movwf	postinc1,c
 22100  01FC26  EC22  F0C2         	call	_conv_raw_result	;wreg free
 22101  01FC2A  0060  F007  FFE6   	movff	btemp,postinc1
 22102  01FC30  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22103  01FC36  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22104  01FC3C  0060  F013  FFE6   	movff	btemp+3,postinc1
 22105  01FC42  EC49  F0E8         	call	_lp_filter	;wreg free
 22106  01FC46  D01A               	goto	L22
 22107  01FC48                     l14293:
 22108                           
 22109                           ; BSR set to: 1
 22110                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 22111  01FC48  0E00               	movlw	0
 22112  01FC4A  6EE6               	movwf	postinc1,c
 22113                           
 22114                           ;stkvar	_i @ sp[(-2)+0]
 22115  01FC4C  0EFE               	movlw	-2
 22116  01FC4E  50E3               	movf	plusw1,w,c
 22117  01FC50  6EE6               	movwf	postinc1,c
 22118  01FC52  0E00               	movlw	0
 22119  01FC54  6EE6               	movwf	postinc1,c
 22120                           
 22121                           ;stkvar	_i @ sp[(-4)+0]
 22122  01FC56  0EFC               	movlw	-4
 22123  01FC58  50E3               	movf	plusw1,w,c
 22124  01FC5A  6EE6               	movwf	postinc1,c
 22125  01FC5C  EC22  F0C2         	call	_conv_raw_result	;wreg free
 22126  01FC60  0060  F007  FFE6   	movff	btemp,postinc1
 22127  01FC66  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22128  01FC6C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 22129  01FC72  0060  F013  FFE6   	movff	btemp+3,postinc1
 22130  01FC78  EC49  F0E8         	call	_lp_filter	;wreg free
 22131  01FC7C                     L22:
 22132                           
 22133                           ;stkvar	_i @ sp[(-1)+0]
 22134  01FC7C  0EFF               	movlw	-1
 22135  01FC7E  50E3               	movf	plusw1,w,c
 22136  01FC80  0D04               	mullw	4
 22137  01FC82  0EFF               	movlw	low _C
 22138  01FC84  24F3               	addwf	243,w,c
 22139  01FC86  6ED9               	movwf	fsr2l,c
 22140  01FC88  0E08               	movlw	high _C
 22141  01FC8A  20F4               	addwfc	prodh,w,c
 22142  01FC8C  6EDA               	movwf	fsr2h,c
 22143  01FC8E  0060  F007  FFDE   	movff	btemp,postinc2
 22144  01FC94  0060  F00B  FFDE   	movff	btemp+1,postinc2
 22145  01FC9A  0060  F00F  FFDE   	movff	btemp+2,postinc2
 22146  01FCA0  0060  F013  FFDE   	movff	btemp+3,postinc2
 22147                           
 22148                           ;mbmc.c: 61:  } while (++i < 16);
 22149                           ;stkvar	_i @ sp[(-1)+0]
 22150  01FCA6  0EFF               	movlw	-1
 22151  01FCA8  2AE3               	incf	plusw1,f,c
 22152  01FCAA  0EFF               	movlw	-1
 22153  01FCAC  006F FF8C  F001    	movff	plusw1,btemp
 22154  01FCB2  0E0F               	movlw	15
 22155  01FCB4  6401               	cpfsgt	btemp^0,c
 22156  01FCB6  D7A9               	goto	l14289
 22157                           
 22158                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22159  01FCB8  52E5               	movf	postdec1,f,c
 22160  01FCBA  0012               	return		;funcret
 22161  01FCBC                     __end_of_convert_adc_data:
 22162                           	opt callstack 0
 22163                           
 22164 ;; *************** function _clear_hid_pflags *****************
 22165 ;; Defined at:
 22166 ;;		line 67 in file "hid.c"
 22167 ;; Parameters:    Size  Location     Type
 22168 ;;  h               2  [STACK] PTR struct H_data
 22169 ;;		 -> H(9), 
 22170 ;; Auto vars:     Size  Location     Type
 22171 ;;		None
 22172 ;; Return value:  Size  Location     Type
 22173 ;;                  1  [STACK] void 
 22174 ;; Registers used:
 22175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 22176 ;; Tracked objects:
 22177 ;;		On entry : 3E/0
 22178 ;;		On exit  : 0/0
 22179 ;;		Unchanged: 0/0
 22180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22185 ;;Total ram usage:        0 bytes
 22186 ;; Hardware stack levels used:    1
 22187 ;; Hardware stack levels required when called:   15
 22188 ;; This function calls:
 22189 ;;		Nothing
 22190 ;; This function is called by:
 22191 ;;		_main
 22192 ;; This function uses a reentrant model
 22193 ;;
 22194                           
 22195                           	psect	text72
 22196  000C4E                     __ptext72:
 22197                           	opt callstack 0
 22198  000C4E                     _clear_hid_pflags:
 22199                           	opt callstack 15
 22200                           
 22201                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 22202                           ;stkvar	_h @ sp[(0)+-2]
 22203                           
 22204                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22205                           ;incstack = 0
 22206  000C4E  0EFE               	movlw	-2
 22207  000C50  006F FF8C  F00B    	movff	plusw1,btemp+10
 22208  000C56  0EFF               	movlw	-1
 22209  000C58  006F FF8C  F00C    	movff	plusw1,btemp+11
 22210  000C5E  0E03               	movlw	3
 22211  000C60  240B               	addwf	(btemp+10)^0,w,c
 22212  000C62  6ED9               	movwf	fsr2l,c
 22213  000C64  0E00               	movlw	0
 22214  000C66  200C               	addwfc	(btemp+11)^0,w,c
 22215  000C68  6EDA               	movwf	fsr2h,c
 22216  000C6A  0E00               	movlw	0
 22217  000C6C  6EDF               	movwf	indf2,c
 22218                           
 22219                           ;hid.c: 70:  h->enter_p = SW_OFF;
 22220                           ;stkvar	_h @ sp[(0)+-2]
 22221  000C6E  0EFE               	movlw	-2
 22222  000C70  006F FF8C  F00B    	movff	plusw1,btemp+10
 22223  000C76  0EFF               	movlw	-1
 22224  000C78  006F FF8C  F00C    	movff	plusw1,btemp+11
 22225  000C7E  0E05               	movlw	5
 22226  000C80  240B               	addwf	(btemp+10)^0,w,c
 22227  000C82  6ED9               	movwf	fsr2l,c
 22228  000C84  0E00               	movlw	0
 22229  000C86  200C               	addwfc	(btemp+11)^0,w,c
 22230  000C88  6EDA               	movwf	fsr2h,c
 22231  000C8A  0E00               	movlw	0
 22232  000C8C  6EDF               	movwf	indf2,c
 22233                           
 22234                           ;hid.c: 71:  h->calib_p = SW_OFF;
 22235                           ;stkvar	_h @ sp[(0)+-2]
 22236  000C8E  0EFE               	movlw	-2
 22237  000C90  006F FF8C  F00B    	movff	plusw1,btemp+10
 22238  000C96  0EFF               	movlw	-1
 22239  000C98  006F FF8C  F00C    	movff	plusw1,btemp+11
 22240  000C9E  0E07               	movlw	7
 22241  000CA0  240B               	addwf	(btemp+10)^0,w,c
 22242  000CA2  6ED9               	movwf	fsr2l,c
 22243  000CA4  0E00               	movlw	0
 22244  000CA6  200C               	addwfc	(btemp+11)^0,w,c
 22245  000CA8  6EDA               	movwf	fsr2h,c
 22246  000CAA  0E00               	movlw	0
 22247  000CAC  6EDF               	movwf	indf2,c
 22248                           
 22249                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 22250  000CAE  52E5               	movf	postdec1,f,c
 22251  000CB0  52E5               	movf	postdec1,f,c
 22252  000CB2  0012               	return		;funcret
 22253  000CB4                     __end_of_clear_hid_pflags:
 22254                           	opt callstack 0
 22255                           
 22256 ;; *************** function _check_help *****************
 22257 ;; Defined at:
 22258 ;;		line 40 in file "mconfig.c"
 22259 ;; Parameters:    Size  Location     Type
 22260 ;;  flipper         1  [STACK] const _Bool 
 22261 ;; Auto vars:     Size  Location     Type
 22262 ;;  estatus         1    0        _Bool 
 22263 ;; Return value:  Size  Location     Type
 22264 ;;                  1  [STACK] _Bool 
 22265 ;; Registers used:
 22266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 22267 ;; Tracked objects:
 22268 ;;		On entry : 3F/1
 22269 ;;		On exit  : 0/0
 22270 ;;		Unchanged: 0/0
 22271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22276 ;;Total ram usage:        0 bytes
 22277 ;; Hardware stack levels used:    1
 22278 ;; Hardware stack levels required when called:   28
 22279 ;; This function calls:
 22280 ;;		_StartTimer
 22281 ;;		_TimerDone
 22282 ;;		_display_help
 22283 ;;		_display_info
 22284 ;;		_get_vterm_ptr
 22285 ;;		_help_button
 22286 ;;		_mode_lamp_bright
 22287 ;;		_mode_lamp_dim
 22288 ;;		_set_display_info
 22289 ;;		_set_temp_display_help
 22290 ;;		_set_vterm
 22291 ;;		_sprintf
 22292 ;;		_update_lcd
 22293 ;;		_vterm_dump
 22294 ;; This function is called by:
 22295 ;;		_main
 22296 ;; This function uses a reentrant model
 22297 ;;
 22298                           
 22299                           	psect	text73
 22300  01C8F4                     __ptext73:
 22301                           	opt callstack 0
 22302  01C8F4                     _check_help:
 22303                           	opt callstack 2
 22304                           
 22305                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 22306                           
 22307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22308                           ;incstack = 0
 22309  01C8F4  EC3C  F00B         	call	_help_button	;wreg free
 22310  01C8F8  5001               	movf	btemp^0,w,c
 22311  01C8FA  B4D8               	btfsc	status,2,c
 22312  01C8FC  D0D0               	goto	l17009
 22313  01C8FE  EC15  F010         	call	_display_info	;wreg free
 22314  01C902  0401               	decf	btemp^0,w,c
 22315  01C904  B4D8               	btfsc	status,2,c
 22316  01C906  D0CB               	goto	l17009
 22317                           
 22318                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 22319  01C908  0EDC               	movlw	220
 22320  01C90A  6EE6               	movwf	postinc1,c
 22321  01C90C  0E05               	movlw	5
 22322  01C90E  6EE6               	movwf	postinc1,c
 22323  01C910  0E0B               	movlw	11
 22324  01C912  6EE6               	movwf	postinc1,c
 22325  01C914  EC82  F00A         	call	_StartTimer	;wreg free
 22326                           
 22327                           ;mconfig.c: 48:   if (V.debug)
 22328  01C918  0101               	movlb	1	; () banked
 22329  01C91A  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
 22330                           
 22331                           ; BSR set to: 1
 22332                           ;mconfig.c: 49:    vterm_dump();
 22333  01C91C  ECBC  F0EA         	call	_vterm_dump	;wreg free
 22334                           
 22335                           ;mconfig.c: 51:   set_vterm(1);
 22336  01C920  0E01               	movlw	1
 22337  01C922  6EE6               	movwf	postinc1,c
 22338  01C924  EC0A  F00F         	call	_set_vterm	;wreg free
 22339                           
 22340                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 22341  01C928  EC15  F010         	call	_display_info	;wreg free
 22342  01C92C  5001               	movf	btemp^0,w,c
 22343  01C92E  6EE6               	movwf	postinc1,c
 22344  01C930  ECBC  F00F         	call	_set_temp_display_help	;wreg free
 22345                           
 22346                           ; BSR set to: 1
 22347                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 22348  01C934  0E01               	movlw	1
 22349  01C936  6EE6               	movwf	postinc1,c
 22350  01C938  EC19  F00F         	call	_set_display_info	;wreg free
 22351                           
 22352                           ;mconfig.c: 54:   if (flipper) {
 22353                           ;stkvar	_flipper @ sp[(0)+-1]
 22354  01C93C  0EFF               	movlw	-1
 22355  01C93E  50E3               	movf	plusw1,w,c
 22356  01C940  B4D8               	btfsc	status,2,c
 22357  01C942  D019               	goto	l16995
 22358                           
 22359                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 22360  01C944  0EB2               	movlw	low STR_70
 22361  01C946  6EE6               	movwf	postinc1,c
 22362  01C948  0EFF               	movlw	high STR_70
 22363  01C94A  6EE6               	movwf	postinc1,c
 22364  01C94C  0E5C               	movlw	low STR_72
 22365  01C94E  6EE6               	movwf	postinc1,c
 22366  01C950  0EFF               	movlw	high STR_72
 22367  01C952  6EE6               	movwf	postinc1,c
 22368  01C954  0E01               	movlw	1
 22369  01C956  6EE6               	movwf	postinc1,c
 22370  01C958  0E00               	movlw	0
 22371  01C95A  6EE6               	movwf	postinc1,c
 22372  01C95C  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 22373  01C960  0060  F007  FFE6   	movff	btemp,postinc1
 22374  01C966  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22375  01C96C  0E06               	movlw	6
 22376  01C96E  6EE6               	movwf	postinc1,c
 22377  01C970  ECDB  F0F7         	call	_sprintf	;wreg free
 22378                           
 22379                           ;mconfig.c: 56:   } else {
 22380  01C974  D018               	goto	l1823
 22381  01C976                     l16995:
 22382                           
 22383                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 22384  01C976  0EC8               	movlw	low STR_71
 22385  01C978  6EE6               	movwf	postinc1,c
 22386  01C97A  0EFF               	movlw	high STR_71
 22387  01C97C  6EE6               	movwf	postinc1,c
 22388  01C97E  0E5C               	movlw	low STR_72
 22389  01C980  6EE6               	movwf	postinc1,c
 22390  01C982  0EFF               	movlw	high STR_72
 22391  01C984  6EE6               	movwf	postinc1,c
 22392  01C986  0E01               	movlw	1
 22393  01C988  6EE6               	movwf	postinc1,c
 22394  01C98A  0E00               	movlw	0
 22395  01C98C  6EE6               	movwf	postinc1,c
 22396  01C98E  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 22397  01C992  0060  F007  FFE6   	movff	btemp,postinc1
 22398  01C998  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22399  01C99E  0E06               	movlw	6
 22400  01C9A0  6EE6               	movwf	postinc1,c
 22401  01C9A2  ECDB  F0F7         	call	_sprintf	;wreg free
 22402  01C9A6                     l1823:
 22403                           
 22404                           ; BSR set to: 0
 22405                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 22406  01C9A6  0101               	movlb	1	; () banked
 22407  01C9A8  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 22408  01C9AA  32E8               	rrcf	wreg,f,c
 22409  01C9AC  32E8               	rrcf	wreg,f,c
 22410  01C9AE  0B03               	andlw	3
 22411  01C9B0  0D24               	mullw	36
 22412  01C9B2  0E12               	movlw	18
 22413  01C9B4  26F3               	addwf	243,f,c
 22414  01C9B6  0E00               	movlw	0
 22415  01C9B8  22F4               	addwfc	244,f,c
 22416  01C9BA  0E1F               	movlw	low _T
 22417  01C9BC  6E0B               	movwf	(btemp+10)^0,c
 22418  01C9BE  0EF9               	movlw	high _T
 22419  01C9C0  6E0C               	movwf	(btemp+11)^0,c
 22420  01C9C2  50F3               	movf	243,w,c
 22421  01C9C4  260B               	addwf	(btemp+10)^0,f,c
 22422  01C9C6  50F4               	movf	244,w,c
 22423  01C9C8  220C               	addwfc	(btemp+11)^0,f,c
 22424  01C9CA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22425  01C9D0  0060  F033  FFE6   	movff	btemp+11,postinc1
 22426  01C9D6  0EBE               	movlw	low STR_74
 22427  01C9D8  6EE6               	movwf	postinc1,c
 22428  01C9DA  0EFF               	movlw	high STR_74
 22429  01C9DC  6EE6               	movwf	postinc1,c
 22430  01C9DE  0E01               	movlw	1
 22431  01C9E0  6EE6               	movwf	postinc1,c
 22432  01C9E2  0E01               	movlw	1
 22433  01C9E4  6EE6               	movwf	postinc1,c
 22434  01C9E6  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 22435  01C9EA  0060  F007  FFE6   	movff	btemp,postinc1
 22436  01C9F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22437  01C9F6  0E06               	movlw	6
 22438  01C9F8  6EE6               	movwf	postinc1,c
 22439  01C9FA  ECDB  F0F7         	call	_sprintf	;wreg free
 22440                           
 22441                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 22442  01C9FE  0101               	movlb	1	; () banked
 22443  01CA00  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 22444  01CA02  32E8               	rrcf	wreg,f,c
 22445  01CA04  32E8               	rrcf	wreg,f,c
 22446  01CA06  0B03               	andlw	3
 22447  01CA08  0D24               	mullw	36
 22448  01CA0A  0E1F               	movlw	low _T
 22449  01CA0C  6E0B               	movwf	(btemp+10)^0,c
 22450  01CA0E  0EF9               	movlw	high _T
 22451  01CA10  6E0C               	movwf	(btemp+11)^0,c
 22452  01CA12  50F3               	movf	243,w,c
 22453  01CA14  260B               	addwf	(btemp+10)^0,f,c
 22454  01CA16  50F4               	movf	244,w,c
 22455  01CA18  220C               	addwfc	(btemp+11)^0,f,c
 22456  01CA1A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 22457  01CA20  0060  F033  FFE6   	movff	btemp+11,postinc1
 22458  01CA26  0EBE               	movlw	low STR_74
 22459  01CA28  6EE6               	movwf	postinc1,c
 22460  01CA2A  0EFF               	movlw	high STR_74
 22461  01CA2C  6EE6               	movwf	postinc1,c
 22462  01CA2E  0E01               	movlw	1
 22463  01CA30  6EE6               	movwf	postinc1,c
 22464  01CA32  0E02               	movlw	2
 22465  01CA34  6EE6               	movwf	postinc1,c
 22466  01CA36  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 22467  01CA3A  0060  F007  FFE6   	movff	btemp,postinc1
 22468  01CA40  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22469  01CA46  0E06               	movlw	6
 22470  01CA48  6EE6               	movwf	postinc1,c
 22471  01CA4A  ECDB  F0F7         	call	_sprintf	;wreg free
 22472                           
 22473                           ; BSR set to: 0
 22474                           ;mconfig.c: 61:   V.help_id++;
 22475  01CA4E  EE20  F1A2         	lfsr	2,_V+155	;volatile
 22476  01CA52  38DF               	swapf	223,w,c
 22477  01CA54  6E0C               	movwf	(btemp+11)^0,c
 22478  01CA56  320C               	rrcf	(btemp+11)^0,f,c
 22479  01CA58  300C               	rrcf	(btemp+11)^0,w,c
 22480  01CA5A  0B03               	andlw	3
 22481  01CA5C  6E0C               	movwf	(btemp+11)^0,c
 22482  01CA5E  2A0C               	incf	(btemp+11)^0,f,c
 22483  01CA60  3A0C               	swapf	(btemp+11)^0,f,c
 22484  01CA62  360C               	rlcf	(btemp+11)^0,f,c
 22485  01CA64  360C               	rlcf	(btemp+11)^0,f,c
 22486  01CA66  50DF               	movf	223,w,c
 22487  01CA68  180C               	xorwf	(btemp+11)^0,w,c
 22488  01CA6A  0B3F               	andlw	-193
 22489  01CA6C  180C               	xorwf	(btemp+11)^0,w,c
 22490  01CA6E  6EDF               	movwf	223,c
 22491                           
 22492                           ; BSR set to: 0
 22493                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 22494  01CA70  0EB8               	movlw	184
 22495  01CA72  6EE6               	movwf	postinc1,c
 22496  01CA74  0E0B               	movlw	11
 22497  01CA76  6EE6               	movwf	postinc1,c
 22498  01CA78  0E09               	movlw	9
 22499  01CA7A  6EE6               	movwf	postinc1,c
 22500  01CA7C  EC82  F00A         	call	_StartTimer	;wreg free
 22501                           
 22502                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 22503  01CA80  0EB8               	movlw	184
 22504  01CA82  6EE6               	movwf	postinc1,c
 22505  01CA84  0E0B               	movlw	11
 22506  01CA86  6EE6               	movwf	postinc1,c
 22507  01CA88  0E07               	movlw	7
 22508  01CA8A  6EE6               	movwf	postinc1,c
 22509  01CA8C  EC82  F00A         	call	_StartTimer	;wreg free
 22510                           
 22511                           ;mconfig.c: 64:   mode_lamp_bright();
 22512  01CA90  ECD3  F00F         	call	_mode_lamp_bright	;wreg free
 22513                           
 22514                           ;mconfig.c: 65:   update_lcd(1);
 22515  01CA94  0E01               	movlw	1
 22516  01CA96  6EE6               	movwf	postinc1,c
 22517  01CA98  EC8D  F0F0         	call	_update_lcd	;wreg free
 22518                           
 22519                           ;mconfig.c: 67:  } else {
 22520  01CA9C  D032               	goto	l1824
 22521  01CA9E                     l17009:
 22522                           
 22523                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 22524  01CA9E  0E09               	movlw	9
 22525  01CAA0  6EE6               	movwf	postinc1,c
 22526  01CAA2  ECF3  F00C         	call	_TimerDone	;wreg free
 22527  01CAA6  5001               	movf	btemp^0,w,c
 22528  01CAA8  B4D8               	btfsc	status,2,c
 22529  01CAAA  D02B               	goto	l1824
 22530                           
 22531                           ;mconfig.c: 69:    set_vterm(0);
 22532  01CAAC  0E00               	movlw	0
 22533  01CAAE  6EE6               	movwf	postinc1,c
 22534  01CAB0  EC0A  F00F         	call	_set_vterm	;wreg free
 22535                           
 22536                           ;mconfig.c: 70:    V.help = 0;
 22537  01CAB4  0101               	movlb	1	; () banked
 22538  01CAB6  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 22539                           
 22540                           ; BSR set to: 1
 22541                           ;mconfig.c: 71:    set_display_info(display_help());
 22542  01CAB8  EC19  F010         	call	_display_help	;wreg free
 22543  01CABC  5001               	movf	btemp^0,w,c
 22544  01CABE  6EE6               	movwf	postinc1,c
 22545  01CAC0  EC19  F00F         	call	_set_display_info	;wreg free
 22546                           
 22547                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 22548  01CAC4  0060  F673  FFE6   	movff	_V+149,postinc1
 22549  01CACA  0060  F677  FFE6   	movff	_V+150,postinc1
 22550  01CAD0  EC4F  F00F         	call	_mode_lamp_dim	;wreg free
 22551                           
 22552                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 22553  01CAD4  0E0B               	movlw	11
 22554  01CAD6  6EE6               	movwf	postinc1,c
 22555  01CAD8  ECF3  F00C         	call	_TimerDone	;wreg free
 22556  01CADC  5001               	movf	btemp^0,w,c
 22557  01CADE  B4D8               	btfsc	status,2,c
 22558  01CAE0  D010               	goto	l1824
 22559                           
 22560                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 22561  01CAE2  0101               	movlb	1	; () banked
 22562  01CAE4  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 22563  01CAE6  A4D8               	btfss	status,2,c
 22564  01CAE8  D002               	goto	u16660
 22565  01CAEA  0E01               	movlw	1
 22566  01CAEC  D001               	goto	u16670
 22567  01CAEE                     u16660:
 22568  01CAEE  0E00               	movlw	0
 22569  01CAF0                     u16670:
 22570  01CAF0  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 22571                           
 22572                           ; BSR set to: 1
 22573                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 22574  01CAF2  0EDC               	movlw	220
 22575  01CAF4  6EE6               	movwf	postinc1,c
 22576  01CAF6  0E05               	movlw	5
 22577  01CAF8  6EE6               	movwf	postinc1,c
 22578  01CAFA  0E0B               	movlw	11
 22579  01CAFC  6EE6               	movwf	postinc1,c
 22580  01CAFE  EC82  F00A         	call	_StartTimer	;wreg free
 22581  01CB02                     l1824:
 22582                           
 22583                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 22584  01CB02  52E5               	movf	postdec1,f,c
 22585  01CB04  0012               	return		;funcret
 22586  01CB06                     __end_of_check_help:
 22587                           	opt callstack 0
 22588                           
 22589 ;; *************** function _vterm_dump *****************
 22590 ;; Defined at:
 22591 ;;		line 124 in file "mconfig.c"
 22592 ;; Parameters:    Size  Location     Type
 22593 ;;		None
 22594 ;; Auto vars:     Size  Location     Type
 22595 ;;		None
 22596 ;; Return value:  Size  Location     Type
 22597 ;;                  1  [STACK] void 
 22598 ;; Registers used:
 22599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 22600 ;; Tracked objects:
 22601 ;;		On entry : 3F/1
 22602 ;;		On exit  : 0/0
 22603 ;;		Unchanged: 0/0
 22604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22609 ;;Total ram usage:        0 bytes
 22610 ;; Hardware stack levels used:    1
 22611 ;; Hardware stack levels required when called:   27
 22612 ;; This function calls:
 22613 ;;		_WaitMs
 22614 ;;		_eaDogM_WriteStringAtPos
 22615 ;;		_get_vterm_ptr
 22616 ;;		_sprintf
 22617 ;;		_wait_lcd_done
 22618 ;; This function is called by:
 22619 ;;		_check_help
 22620 ;; This function uses a reentrant model
 22621 ;;
 22622                           
 22623                           	psect	text74
 22624  01D578                     __ptext74:
 22625                           	opt callstack 0
 22626  01D578                     _vterm_dump:
 22627                           	opt callstack 2
 22628                           
 22629                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 22630                           
 22631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22632                           ;incstack = 0
 22633  01D578  0E01               	movlw	1
 22634  01D57A  6EE6               	movwf	postinc1,c
 22635  01D57C  0E00               	movlw	0
 22636  01D57E  6EE6               	movwf	postinc1,c
 22637  01D580  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 22638  01D584  0060  F007  FFE6   	movff	btemp,postinc1
 22639  01D58A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22640  01D590  0E00               	movlw	0
 22641  01D592  6EE6               	movwf	postinc1,c
 22642  01D594  0E00               	movlw	0
 22643  01D596  6EE6               	movwf	postinc1,c
 22644  01D598  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 22645  01D59C  0060  F007  FFE6   	movff	btemp,postinc1
 22646  01D5A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22647  01D5A8  0EA3               	movlw	low STR_76
 22648  01D5AA  6EE6               	movwf	postinc1,c
 22649  01D5AC  0EFF               	movlw	high STR_76
 22650  01D5AE  6EE6               	movwf	postinc1,c
 22651  01D5B0  0E08               	movlw	low (_V+1)
 22652  01D5B2  6EE6               	movwf	postinc1,c
 22653  01D5B4  0E01               	movlw	high (_V+1)
 22654  01D5B6  6EE6               	movwf	postinc1,c
 22655  01D5B8  0E08               	movlw	8
 22656  01D5BA  6EE6               	movwf	postinc1,c
 22657  01D5BC  ECDB  F0F7         	call	_sprintf	;wreg free
 22658                           
 22659                           ; BSR set to: 0
 22660                           ;mconfig.c: 127:  wait_lcd_done();
 22661  01D5C0  EC78  F00E         	call	_wait_lcd_done	;wreg free
 22662                           
 22663                           ; BSR set to: 0
 22664                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 22665  01D5C4  0E08               	movlw	low (_V+1)
 22666  01D5C6  6EE6               	movwf	postinc1,c
 22667  01D5C8  0E01               	movlw	high (_V+1)
 22668  01D5CA  6EE6               	movwf	postinc1,c
 22669  01D5CC  0E00               	movlw	0
 22670  01D5CE  6EE6               	movwf	postinc1,c
 22671  01D5D0  0E00               	movlw	0
 22672  01D5D2  6EE6               	movwf	postinc1,c
 22673  01D5D4  ECB0  F000         	call	_eaDogM_WriteStringAtPos	;wreg free
 22674                           
 22675                           ; BSR set to: 59
 22676                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 22677  01D5D8  0E01               	movlw	1
 22678  01D5DA  6EE6               	movwf	postinc1,c
 22679  01D5DC  0E01               	movlw	1
 22680  01D5DE  6EE6               	movwf	postinc1,c
 22681  01D5E0  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 22682  01D5E4  0060  F007  FFE6   	movff	btemp,postinc1
 22683  01D5EA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22684  01D5F0  0E00               	movlw	0
 22685  01D5F2  6EE6               	movwf	postinc1,c
 22686  01D5F4  0E01               	movlw	1
 22687  01D5F6  6EE6               	movwf	postinc1,c
 22688  01D5F8  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 22689  01D5FC  0060  F007  FFE6   	movff	btemp,postinc1
 22690  01D602  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22691  01D608  0EA3               	movlw	low STR_76
 22692  01D60A  6EE6               	movwf	postinc1,c
 22693  01D60C  0EFF               	movlw	high STR_76
 22694  01D60E  6EE6               	movwf	postinc1,c
 22695  01D610  0E08               	movlw	low (_V+1)
 22696  01D612  6EE6               	movwf	postinc1,c
 22697  01D614  0E01               	movlw	high (_V+1)
 22698  01D616  6EE6               	movwf	postinc1,c
 22699  01D618  0E08               	movlw	8
 22700  01D61A  6EE6               	movwf	postinc1,c
 22701  01D61C  ECDB  F0F7         	call	_sprintf	;wreg free
 22702                           
 22703                           ; BSR set to: 0
 22704                           ;mconfig.c: 130:  wait_lcd_done();
 22705  01D620  EC78  F00E         	call	_wait_lcd_done	;wreg free
 22706                           
 22707                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 22708  01D624  0E08               	movlw	low (_V+1)
 22709  01D626  6EE6               	movwf	postinc1,c
 22710  01D628  0E01               	movlw	high (_V+1)
 22711  01D62A  6EE6               	movwf	postinc1,c
 22712  01D62C  0E00               	movlw	0
 22713  01D62E  6EE6               	movwf	postinc1,c
 22714  01D630  0E01               	movlw	1
 22715  01D632  6EE6               	movwf	postinc1,c
 22716  01D634  ECB0  F000         	call	_eaDogM_WriteStringAtPos	;wreg free
 22717                           
 22718                           ;mconfig.c: 132:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 22719  01D638  0E01               	movlw	1
 22720  01D63A  6EE6               	movwf	postinc1,c
 22721  01D63C  0E02               	movlw	2
 22722  01D63E  6EE6               	movwf	postinc1,c
 22723  01D640  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 22724  01D644  0060  F007  FFE6   	movff	btemp,postinc1
 22725  01D64A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22726  01D650  0E00               	movlw	0
 22727  01D652  6EE6               	movwf	postinc1,c
 22728  01D654  0E02               	movlw	2
 22729  01D656  6EE6               	movwf	postinc1,c
 22730  01D658  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 22731  01D65C  0060  F007  FFE6   	movff	btemp,postinc1
 22732  01D662  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22733  01D668  0EA3               	movlw	low STR_76
 22734  01D66A  6EE6               	movwf	postinc1,c
 22735  01D66C  0EFF               	movlw	high STR_76
 22736  01D66E  6EE6               	movwf	postinc1,c
 22737  01D670  0E08               	movlw	low (_V+1)
 22738  01D672  6EE6               	movwf	postinc1,c
 22739  01D674  0E01               	movlw	high (_V+1)
 22740  01D676  6EE6               	movwf	postinc1,c
 22741  01D678  0E08               	movlw	8
 22742  01D67A  6EE6               	movwf	postinc1,c
 22743  01D67C  ECDB  F0F7         	call	_sprintf	;wreg free
 22744                           
 22745                           ; BSR set to: 0
 22746                           ;mconfig.c: 133:  wait_lcd_done();
 22747  01D680  EC78  F00E         	call	_wait_lcd_done	;wreg free
 22748                           
 22749                           ; BSR set to: 0
 22750                           ;mconfig.c: 134:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 22751  01D684  0E08               	movlw	low (_V+1)
 22752  01D686  6EE6               	movwf	postinc1,c
 22753  01D688  0E01               	movlw	high (_V+1)
 22754  01D68A  6EE6               	movwf	postinc1,c
 22755  01D68C  0E00               	movlw	0
 22756  01D68E  6EE6               	movwf	postinc1,c
 22757  01D690  0E02               	movlw	2
 22758  01D692  6EE6               	movwf	postinc1,c
 22759  01D694  ECB0  F000         	call	_eaDogM_WriteStringAtPos	;wreg free
 22760                           
 22761                           ; BSR set to: 59
 22762                           ;mconfig.c: 135:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(3, 0), get_vterm_ptr(3,
      +                           1));
 22763  01D698  0E01               	movlw	1
 22764  01D69A  6EE6               	movwf	postinc1,c
 22765  01D69C  0E03               	movlw	3
 22766  01D69E  6EE6               	movwf	postinc1,c
 22767  01D6A0  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 22768  01D6A4  0060  F007  FFE6   	movff	btemp,postinc1
 22769  01D6AA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22770  01D6B0  0E00               	movlw	0
 22771  01D6B2  6EE6               	movwf	postinc1,c
 22772  01D6B4  0E03               	movlw	3
 22773  01D6B6  6EE6               	movwf	postinc1,c
 22774  01D6B8  EC70  F00C         	call	_get_vterm_ptr	;wreg free
 22775  01D6BC  0060  F007  FFE6   	movff	btemp,postinc1
 22776  01D6C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22777  01D6C8  0EA3               	movlw	low STR_76
 22778  01D6CA  6EE6               	movwf	postinc1,c
 22779  01D6CC  0EFF               	movlw	high STR_76
 22780  01D6CE  6EE6               	movwf	postinc1,c
 22781  01D6D0  0E08               	movlw	low (_V+1)
 22782  01D6D2  6EE6               	movwf	postinc1,c
 22783  01D6D4  0E01               	movlw	high (_V+1)
 22784  01D6D6  6EE6               	movwf	postinc1,c
 22785  01D6D8  0E08               	movlw	8
 22786  01D6DA  6EE6               	movwf	postinc1,c
 22787  01D6DC  ECDB  F0F7         	call	_sprintf	;wreg free
 22788                           
 22789                           ; BSR set to: 0
 22790                           ;mconfig.c: 136:  wait_lcd_done();
 22791  01D6E0  EC78  F00E         	call	_wait_lcd_done	;wreg free
 22792                           
 22793                           ;mconfig.c: 137:  eaDogM_WriteStringAtPos(3, 0, V.buf);
 22794  01D6E4  0E08               	movlw	low (_V+1)
 22795  01D6E6  6EE6               	movwf	postinc1,c
 22796  01D6E8  0E01               	movlw	high (_V+1)
 22797  01D6EA  6EE6               	movwf	postinc1,c
 22798  01D6EC  0E00               	movlw	0
 22799  01D6EE  6EE6               	movwf	postinc1,c
 22800  01D6F0  0E03               	movlw	3
 22801  01D6F2  6EE6               	movwf	postinc1,c
 22802  01D6F4  ECB0  F000         	call	_eaDogM_WriteStringAtPos	;wreg free
 22803                           
 22804                           ; BSR set to: 59
 22805                           ;mconfig.c: 138:  WaitMs(3000);
 22806  01D6F8  0EB8               	movlw	184
 22807  01D6FA  6EE6               	movwf	postinc1,c
 22808  01D6FC  0E0B               	movlw	11
 22809  01D6FE  6EE6               	movwf	postinc1,c
 22810  01D700  EC74  F00B         	call	_WaitMs	;wreg free
 22811                           
 22812                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 22813  01D704  0012               	return		;funcret
 22814  01D706                     __end_of_vterm_dump:
 22815                           	opt callstack 0
 22816                           
 22817 ;; *************** function _sprintf *****************
 22818 ;; Defined at:
 22819 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 22820 ;; Parameters:    Size  Location     Type
 22821 ;;  s               2  [STACK] PTR unsigned char 
 22822 ;;		 -> D.lcd(640), D(642), port_data(512), V(192), 
 22823 ;;  fmt             2  [STACK] PTR const unsigned char 
 22824 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(19), 
 22825 ;;		 -> STR_85(19), STR_84(19), STR_83(19), STR_82(19), 
 22826 ;;		 -> STR_81(19), STR_80(24), STR_79(15), STR_78(15), 
 22827 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 22828 ;;		 -> STR_73(19), STR_72(19), STR_67(14), STR_66(21), 
 22829 ;;		 -> STR_65(21), STR_64(21), STR_63(21), STR_62(21), 
 22830 ;;		 -> STR_61(21), STR_60(21), STR_59(21), STR_58(21), 
 22831 ;;		 -> STR_57(21), STR_56(21), STR_55(21), STR_54(20), 
 22832 ;;		 -> STR_53(21), STR_52(21), STR_51(21), STR_50(22), 
 22833 ;;		 -> STR_49(22), STR_48(22), STR_47(23), STR_46(23), 
 22834 ;;		 -> STR_45(23), STR_44(29), STR_43(23), STR_42(23), 
 22835 ;;		 -> STR_41(22), STR_40(22), STR_39(22), STR_38(22), 
 22836 ;;		 -> STR_37(22), STR_36(22), STR_35(22), STR_34(22), 
 22837 ;;		 -> STR_33(22), STR_32(22), STR_31(22), STR_30(22), 
 22838 ;;		 -> STR_29(17), STR_28(16), STR_27(16), STR_26(21), 
 22839 ;;		 -> STR_25(21), STR_24(21), STR_23(26), STR_22(26), 
 22840 ;;		 -> STR_21(22), STR_20(21), STR_19(21), STR_18(21), 
 22841 ;;		 -> STR_17(21), STR_16(22), STR_15(22), STR_14(22), 
 22842 ;;		 -> STR_13(26), STR_12(21), STR_11(21), STR_10(21), 
 22843 ;;		 -> STR_9(21), STR_8(21), STR_7(21), STR_6(21), 
 22844 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 22845 ;; Auto vars:     Size  Location     Type
 22846 ;;  f               6  [STACK] struct _IO_FILE
 22847 ;;  ap              2  [STACK] PTR void [1]
 22848 ;;		 -> ?_printf(2), ?_sprintf(2), 
 22849 ;;  ret             2    0        int 
 22850 ;; Return value:  Size  Location     Type
 22851 ;;                  2  [STACK] int 
 22852 ;; Registers used:
 22853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 22854 ;; Tracked objects:
 22855 ;;		On entry : 0/2
 22856 ;;		On exit  : 3F/0
 22857 ;;		Unchanged: 0/0
 22858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22863 ;;Total ram usage:        0 bytes
 22864 ;; Hardware stack levels used:    1
 22865 ;; Hardware stack levels required when called:   23
 22866 ;; This function calls:
 22867 ;;		_vfprintf
 22868 ;; This function is called by:
 22869 ;;		_main
 22870 ;;		_current_sensor_cal
 22871 ;;		_display_history
 22872 ;;		_check_help
 22873 ;;		_vterm_dump
 22874 ;;		_calc_bsoc
 22875 ;; This function uses a reentrant model
 22876 ;;
 22877                           
 22878                           	psect	text75
 22879  01EFB6                     __ptext75:
 22880                           	opt callstack 0
 22881  01EFB6                     _sprintf:
 22882                           	opt callstack 0
 22883                           
 22884                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22885  01EFB6  0E08               	movlw	8
 22886  01EFB8  26E1               	addwf	fsr1l,f,c
 22887  01EFBA  0E00               	movlw	0
 22888  01EFBC  22E2               	addwfc	fsr1h,f,c
 22889                           
 22890                           ;incstack = 0
 22891 ;; hardware stack exceeded
 22892  01EFBE  0EFE               	movlw	254
 22893  01EFC0  6E0B               	movwf	(btemp+10)^0,c
 22894  01EFC2  0EFF               	movlw	255
 22895  01EFC4  6E0C               	movwf	(btemp+11)^0,c
 22896                           
 22897                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 22898  01EFC6  0EF5               	movlw	245
 22899  01EFC8  24E1               	addwf	fsr1l,w,c
 22900  01EFCA  6E09               	movwf	(btemp+8)^0,c
 22901  01EFCC  0EFF               	movlw	255
 22902  01EFCE  20E2               	addwfc	fsr1h,w,c
 22903  01EFD0  6E0A               	movwf	(btemp+9)^0,c
 22904  01EFD2  500B               	movf	(btemp+10)^0,w,c
 22905  01EFD4  2609               	addwf	(btemp+8)^0,f,c
 22906  01EFD6  500C               	movf	(btemp+11)^0,w,c
 22907  01EFD8  220A               	addwfc	(btemp+9)^0,f,c
 22908                           
 22909                           ;stkvar	_ap @ sp[(-8)+6]
 22910  01EFDA  0EFF               	movlw	-1
 22911  01EFDC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22912  01EFE2  0EFE               	movlw	-2
 22913  01EFE4  0060  F027  FFE3   	movff	btemp+8,plusw1
 22914                           
 22915                           ;stkvar	_s @ sp[(-8)+-3]
 22916  01EFEA  0EF5               	movlw	-11
 22917  01EFEC  006F FF8C  F00B    	movff	plusw1,btemp+10
 22918  01EFF2  0EF6               	movlw	-10
 22919  01EFF4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22920                           
 22921                           ;stkvar	_f @ sp[(-8)+0]
 22922  01EFFA  0EF9               	movlw	-7
 22923  01EFFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 22924  01F002  0EF8               	movlw	-8
 22925  01F004  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22926                           
 22927                           ;stkvar	_f @ sp[(-8)+0]
 22928  01F00A  0EFA               	movlw	250
 22929  01F00C  24E1               	addwf	fsr1l,w,c
 22930  01F00E  6ED9               	movwf	fsr2l,c
 22931  01F010  0EFF               	movlw	255
 22932  01F012  20E2               	addwfc	fsr1h,w,c
 22933  01F014  6EDA               	movwf	fsr2h,c
 22934  01F016  0E00               	movlw	0
 22935  01F018  6EDE               	movwf	postinc2,c
 22936  01F01A  0E00               	movlw	0
 22937  01F01C  6EDD               	movwf	postdec2,c
 22938                           
 22939                           ;stkvar	_f @ sp[(-8)+0]
 22940  01F01E  0EFC               	movlw	252
 22941  01F020  24E1               	addwf	fsr1l,w,c
 22942  01F022  6ED9               	movwf	fsr2l,c
 22943  01F024  0EFF               	movlw	255
 22944  01F026  20E2               	addwfc	fsr1h,w,c
 22945  01F028  6EDA               	movwf	fsr2h,c
 22946  01F02A  0E00               	movlw	0
 22947  01F02C  6EDE               	movwf	postinc2,c
 22948  01F02E  0E00               	movlw	0
 22949  01F030  6EDD               	movwf	postdec2,c
 22950                           
 22951                           ;stkvar	_ap @ sp[(-8)+6]
 22952  01F032  0EFE               	movlw	254
 22953  01F034  24E1               	addwf	fsr1l,w,c
 22954  01F036  6E01               	movwf	btemp^0,c
 22955  01F038  0EFF               	movlw	255
 22956  01F03A  20E2               	addwfc	fsr1h,w,c
 22957  01F03C  6E02               	movwf	(btemp+1)^0,c
 22958  01F03E  0060  F007  FFE6   	movff	btemp,postinc1
 22959  01F044  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22960                           
 22961                           ;stkvar	_fmt @ sp[(-10)+-5]
 22962  01F04A  0EF1               	movlw	-15
 22963  01F04C  006F FF8F FFE6     	movff	plusw1,postinc1
 22964  01F052  006F FF8F FFE6     	movff	plusw1,postinc1
 22965                           
 22966                           ;stkvar	_f @ sp[(-12)+0]
 22967  01F058  0EF4               	movlw	244
 22968  01F05A  24E1               	addwf	fsr1l,w,c
 22969  01F05C  6E01               	movwf	btemp^0,c
 22970  01F05E  0EFF               	movlw	255
 22971  01F060  20E2               	addwfc	fsr1h,w,c
 22972  01F062  6E02               	movwf	(btemp+1)^0,c
 22973  01F064  0060  F007  FFE6   	movff	btemp,postinc1
 22974  01F06A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 22975  01F070  EC10  F0FF         	call	_vfprintf	;wreg free
 22976                           
 22977                           ; BSR set to: 0
 22978                           ;stkvar	_f @ sp[(-8)+0]
 22979  01F074  0EFA               	movlw	250
 22980  01F076  24E1               	addwf	fsr1l,w,c
 22981  01F078  6ED9               	movwf	fsr2l,c
 22982  01F07A  0EFF               	movlw	255
 22983  01F07C  20E2               	addwfc	fsr1h,w,c
 22984  01F07E  6EDA               	movwf	fsr2h,c
 22985  01F080  006F FF78  F00B    	movff	postinc2,btemp+10
 22986  01F086  006F FF74  F00C    	movff	postdec2,btemp+11
 22987                           
 22988                           ;stkvar	_s @ sp[(-8)+-3]
 22989  01F08C  0EF5               	movlw	-11
 22990  01F08E  006F FF8C  F009    	movff	plusw1,btemp+8
 22991  01F094  0EF6               	movlw	-10
 22992  01F096  006F FF8C  F00A    	movff	plusw1,btemp+9
 22993  01F09C  500B               	movf	(btemp+10)^0,w,c
 22994  01F09E  2409               	addwf	(btemp+8)^0,w,c
 22995  01F0A0  6ED9               	movwf	fsr2l,c
 22996  01F0A2  500C               	movf	(btemp+11)^0,w,c
 22997  01F0A4  200A               	addwfc	(btemp+9)^0,w,c
 22998  01F0A6  6EDA               	movwf	fsr2h,c
 22999  01F0A8  0E00               	movlw	0
 23000  01F0AA  6EDF               	movwf	indf2,c
 23001                           
 23002                           ; BSR set to: 0
 23003                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 23004  01F0AC  0EF8               	movlw	248
 23005  01F0AE  26E1               	addwf	fsr1l,f,c
 23006  01F0B0  0EFF               	movlw	255
 23007  01F0B2  22E2               	addwfc	fsr1h,f,c
 23008  01F0B4  52E5               	movf	postdec1,f,c
 23009  01F0B6  50E7               	movf	indf1,w,c
 23010  01F0B8  5EE1               	subwf	fsr1l,f,c
 23011  01F0BA  0E00               	movlw	0
 23012  01F0BC  5AE2               	subwfb	fsr1h,f,c
 23013  01F0BE  0012               	return		;funcret
 23014  01F0C0                     __end_of_sprintf:
 23015                           	opt callstack 0
 23016                           
 23017 ;; *************** function _get_vterm_ptr *****************
 23018 ;; Defined at:
 23019 ;;		line 119 in file "mconfig.c"
 23020 ;; Parameters:    Size  Location     Type
 23021 ;;  line            1  [STACK] const unsigned char 
 23022 ;;  vterm           1  [STACK] const unsigned char 
 23023 ;; Auto vars:     Size  Location     Type
 23024 ;;		None
 23025 ;; Return value:  Size  Location     Type
 23026 ;;                  2  [STACK] PTR unsigned char 
 23027 ;; Registers used:
 23028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23029 ;; Tracked objects:
 23030 ;;		On entry : 0/2
 23031 ;;		On exit  : 0/0
 23032 ;;		Unchanged: 0/0
 23033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23038 ;;Total ram usage:        0 bytes
 23039 ;; Hardware stack levels used:    1
 23040 ;; Hardware stack levels required when called:   15
 23041 ;; This function calls:
 23042 ;;		Nothing
 23043 ;; This function is called by:
 23044 ;;		_main
 23045 ;;		_current_sensor_cal
 23046 ;;		_display_history
 23047 ;;		_check_help
 23048 ;;		_vterm_dump
 23049 ;; This function uses a reentrant model
 23050 ;;
 23051                           
 23052                           	psect	text76
 23053  0018E0                     __ptext76:
 23054                           	opt callstack 0
 23055  0018E0                     _get_vterm_ptr:
 23056                           	opt callstack 15
 23057                           
 23058                           ;mconfig.c: 119: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 120: {;mconfig.c: 121:  return D.lcd[vterm & 0x03][line & 0x03];
 23059                           ;stkvar	_vterm @ sp[(0)+-2]
 23060                           
 23061                           ; BSR set to: 0
 23062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23063                           ;incstack = 0
 23064  0018E0  0EFE               	movlw	-2
 23065  0018E2  50E3               	movf	plusw1,w,c
 23066  0018E4  0B03               	andlw	3
 23067  0018E6  0DA0               	mullw	160
 23068  0018E8  0E4F               	movlw	low _D
 23069  0018EA  6E01               	movwf	btemp^0,c
 23070  0018EC  0E0A               	movlw	high _D
 23071  0018EE  6E02               	movwf	(btemp+1)^0,c
 23072  0018F0  50F3               	movf	243,w,c
 23073  0018F2  2601               	addwf	btemp^0,f,c
 23074  0018F4  50F4               	movf	244,w,c
 23075  0018F6  2202               	addwfc	(btemp+1)^0,f,c
 23076                           
 23077                           ;stkvar	_line @ sp[(0)+-1]
 23078  0018F8  0EFF               	movlw	-1
 23079  0018FA  50E3               	movf	plusw1,w,c
 23080  0018FC  0B03               	andlw	3
 23081  0018FE  0D28               	mullw	40
 23082  001900  50F3               	movf	243,w,c
 23083  001902  2601               	addwf	btemp^0,f,c
 23084  001904  50F4               	movf	244,w,c
 23085  001906  2202               	addwfc	(btemp+1)^0,f,c
 23086                           
 23087                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23088  001908  52E5               	movf	postdec1,f,c
 23089  00190A  52E5               	movf	postdec1,f,c
 23090  00190C  0012               	return		;funcret
 23091  00190E                     __end_of_get_vterm_ptr:
 23092                           	opt callstack 0
 23093                           
 23094 ;; *************** function _WaitMs *****************
 23095 ;; Defined at:
 23096 ;;		line 32 in file "timers.c"
 23097 ;; Parameters:    Size  Location     Type
 23098 ;;  numMilliseco    2  [STACK] const unsigned short 
 23099 ;; Auto vars:     Size  Location     Type
 23100 ;;		None
 23101 ;; Return value:  Size  Location     Type
 23102 ;;                  1  [STACK] void 
 23103 ;; Registers used:
 23104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23105 ;; Tracked objects:
 23106 ;;		On entry : 0/1
 23107 ;;		On exit  : 0/0
 23108 ;;		Unchanged: 0/0
 23109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23114 ;;Total ram usage:        0 bytes
 23115 ;; Hardware stack levels used:    1
 23116 ;; Hardware stack levels required when called:   16
 23117 ;; This function calls:
 23118 ;;		_StartTimer
 23119 ;;		_TimerDone
 23120 ;; This function is called by:
 23121 ;;		_main
 23122 ;;		_current_sensor_cal
 23123 ;;		_display_history
 23124 ;;		_vterm_dump
 23125 ;; This function uses a reentrant model
 23126 ;;
 23127                           
 23128                           	psect	text77
 23129  0016E8                     __ptext77:
 23130                           	opt callstack 0
 23131  0016E8                     _WaitMs:
 23132                           	opt callstack 13
 23133                           
 23134                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 23135                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 23136                           
 23137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23138                           ;incstack = 0
 23139  0016E8  0EFE               	movlw	-2
 23140  0016EA  006F FF8F FFE6     	movff	plusw1,postinc1
 23141  0016F0  006F FF8F FFE6     	movff	plusw1,postinc1
 23142  0016F6  0E00               	movlw	0
 23143  0016F8  6EE6               	movwf	postinc1,c
 23144  0016FA  EC82  F00A         	call	_StartTimer	;wreg free
 23145                           
 23146                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 23147  0016FE  D005               	goto	l12729
 23148  001700                     l1755:
 23149                           
 23150                           ;timers.c: 36:   __nop();
 23151  001700  F000               	nop	
 23152                           
 23153                           ;timers.c: 37:   __nop();
 23154  001702  F000               	nop	
 23155                           
 23156                           ;timers.c: 38:   __nop();
 23157  001704  F000               	nop	
 23158                           
 23159                           ;timers.c: 39:   __nop();
 23160  001706  F000               	nop	
 23161  001708  0004               	clrwdt		;# 
 23162  00170A                     l12729:
 23163                           
 23164                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 23165  00170A  0E00               	movlw	0
 23166  00170C  6EE6               	movwf	postinc1,c
 23167  00170E  ECF3  F00C         	call	_TimerDone	;wreg free
 23168  001712  5001               	movf	btemp^0,w,c
 23169  001714  B4D8               	btfsc	status,2,c
 23170  001716  D7F4               	goto	l1755
 23171                           
 23172                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 23173  001718  52E5               	movf	postdec1,f,c
 23174  00171A  52E5               	movf	postdec1,f,c
 23175  00171C  0012               	return		;funcret
 23176  00171E                     __end_of_WaitMs:
 23177                           	opt callstack 0
 23178                           
 23179 ;; *************** function _update_lcd *****************
 23180 ;; Defined at:
 23181 ;;		line 85 in file "mconfig.c"
 23182 ;; Parameters:    Size  Location     Type
 23183 ;;  vterm           1  [STACK] unsigned char 
 23184 ;; Auto vars:     Size  Location     Type
 23185 ;;		None
 23186 ;; Return value:  Size  Location     Type
 23187 ;;                  1  [STACK] unsigned char 
 23188 ;; Registers used:
 23189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23190 ;; Tracked objects:
 23191 ;;		On entry : 0/0
 23192 ;;		On exit  : 0/0
 23193 ;;		Unchanged: 0/0
 23194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23199 ;;Total ram usage:        0 bytes
 23200 ;; Hardware stack levels used:    1
 23201 ;; Hardware stack levels required when called:   27
 23202 ;; This function calls:
 23203 ;;		_eaDogM_WriteStringAtPos
 23204 ;;		_wait_lcd_done
 23205 ;; This function is called by:
 23206 ;;		_main
 23207 ;;		_current_sensor_cal
 23208 ;;		_display_history
 23209 ;;		_check_help
 23210 ;; This function uses a reentrant model
 23211 ;;
 23212                           
 23213                           	psect	text78
 23214  01E11A                     __ptext78:
 23215                           	opt callstack 0
 23216  01E11A                     _update_lcd:
 23217                           	opt callstack 3
 23218                           
 23219                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 23220                           ;stkvar	_vterm @ sp[(0)+-1]
 23221                           
 23222                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23223                           ;incstack = 0
 23224  01E11A  0EFF               	movlw	-1
 23225  01E11C  006F FF8C  F001    	movff	plusw1,btemp
 23226  01E122  0E03               	movlw	3
 23227  01E124  1601               	andwf	btemp^0,f,c
 23228  01E126  0EFF               	movlw	-1
 23229  01E128  0060  F007  FFE3   	movff	btemp,plusw1
 23230                           
 23231                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 23232  01E12E  EE23  F0CF         	lfsr	2,_D+640
 23233  01E132  A0DF               	btfss	indf2,0,c
 23234  01E134  D004               	goto	l16547
 23235                           
 23236                           ;stkvar	_vterm @ sp[(0)+-1]
 23237  01E136  0EFF               	movlw	-1
 23238  01E138  50E3               	movf	plusw1,w,c
 23239  01E13A  B4D8               	btfsc	status,2,c
 23240  01E13C  D09C               	goto	l1831
 23241  01E13E                     l16547:
 23242                           
 23243                           ;mconfig.c: 92:  D.lcd[vterm][0][19] = 0;
 23244                           ;stkvar	_vterm @ sp[(0)+-1]
 23245  01E13E  0EFF               	movlw	-1
 23246  01E140  50E3               	movf	plusw1,w,c
 23247  01E142  0DA0               	mullw	160
 23248  01E144  0E62               	movlw	low (_D+19)
 23249  01E146  24F3               	addwf	243,w,c
 23250  01E148  6ED9               	movwf	fsr2l,c
 23251  01E14A  0E0A               	movlw	high (_D+19)
 23252  01E14C  20F4               	addwfc	prodh,w,c
 23253  01E14E  6EDA               	movwf	fsr2h,c
 23254  01E150  0E00               	movlw	0
 23255  01E152  6EDF               	movwf	indf2,c
 23256                           
 23257                           ;mconfig.c: 93:  D.lcd[vterm][1][19] = 0;
 23258                           ;stkvar	_vterm @ sp[(0)+-1]
 23259  01E154  0EFF               	movlw	-1
 23260  01E156  50E3               	movf	plusw1,w,c
 23261  01E158  0DA0               	mullw	160
 23262  01E15A  0E8A               	movlw	low (_D+59)
 23263  01E15C  24F3               	addwf	243,w,c
 23264  01E15E  6ED9               	movwf	fsr2l,c
 23265  01E160  0E0A               	movlw	high (_D+59)
 23266  01E162  20F4               	addwfc	prodh,w,c
 23267  01E164  6EDA               	movwf	fsr2h,c
 23268  01E166  0E00               	movlw	0
 23269  01E168  6EDF               	movwf	indf2,c
 23270                           
 23271                           ;mconfig.c: 94:  D.lcd[vterm][2][19] = 0;
 23272                           ;stkvar	_vterm @ sp[(0)+-1]
 23273  01E16A  0EFF               	movlw	-1
 23274  01E16C  50E3               	movf	plusw1,w,c
 23275  01E16E  0DA0               	mullw	160
 23276  01E170  0EB2               	movlw	low (_D+99)
 23277  01E172  24F3               	addwf	243,w,c
 23278  01E174  6ED9               	movwf	fsr2l,c
 23279  01E176  0E0A               	movlw	high (_D+99)
 23280  01E178  20F4               	addwfc	prodh,w,c
 23281  01E17A  6EDA               	movwf	fsr2h,c
 23282  01E17C  0E00               	movlw	0
 23283  01E17E  6EDF               	movwf	indf2,c
 23284                           
 23285                           ;mconfig.c: 95:  D.lcd[vterm][3][19] = 0;
 23286                           ;stkvar	_vterm @ sp[(0)+-1]
 23287  01E180  0EFF               	movlw	-1
 23288  01E182  50E3               	movf	plusw1,w,c
 23289  01E184  0DA0               	mullw	160
 23290  01E186  0EDA               	movlw	low (_D+139)
 23291  01E188  24F3               	addwf	243,w,c
 23292  01E18A  6ED9               	movwf	fsr2l,c
 23293  01E18C  0E0A               	movlw	high (_D+139)
 23294  01E18E  20F4               	addwfc	prodh,w,c
 23295  01E190  6EDA               	movwf	fsr2h,c
 23296  01E192  0E00               	movlw	0
 23297  01E194  6EDF               	movwf	indf2,c
 23298                           
 23299                           ;mconfig.c: 96:  wait_lcd_done();
 23300  01E196  EC78  F00E         	call	_wait_lcd_done	;wreg free
 23301                           
 23302                           ; BSR set to: 0
 23303                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 23304                           ;stkvar	_vterm @ sp[(0)+-1]
 23305  01E19A  0EFF               	movlw	-1
 23306  01E19C  50E3               	movf	plusw1,w,c
 23307  01E19E  0DA0               	mullw	160
 23308  01E1A0  0E4F               	movlw	low _D
 23309  01E1A2  6E0B               	movwf	(btemp+10)^0,c
 23310  01E1A4  0E0A               	movlw	high _D
 23311  01E1A6  6E0C               	movwf	(btemp+11)^0,c
 23312  01E1A8  50F3               	movf	243,w,c
 23313  01E1AA  260B               	addwf	(btemp+10)^0,f,c
 23314  01E1AC  50F4               	movf	244,w,c
 23315  01E1AE  220C               	addwfc	(btemp+11)^0,f,c
 23316  01E1B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23317  01E1B6  0060  F033  FFE6   	movff	btemp+11,postinc1
 23318  01E1BC  0E00               	movlw	0
 23319  01E1BE  6EE6               	movwf	postinc1,c
 23320  01E1C0  0E00               	movlw	0
 23321  01E1C2  6EE6               	movwf	postinc1,c
 23322  01E1C4  ECB0  F000         	call	_eaDogM_WriteStringAtPos	;wreg free
 23323                           
 23324                           ; BSR set to: 59
 23325                           ;mconfig.c: 98:  wait_lcd_done();
 23326  01E1C8  EC78  F00E         	call	_wait_lcd_done	;wreg free
 23327                           
 23328                           ; BSR set to: 0
 23329                           ;mconfig.c: 99:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 23330                           ;stkvar	_vterm @ sp[(0)+-1]
 23331  01E1CC  0EFF               	movlw	-1
 23332  01E1CE  50E3               	movf	plusw1,w,c
 23333  01E1D0  0DA0               	mullw	160
 23334  01E1D2  0E4F               	movlw	low _D
 23335  01E1D4  6E0B               	movwf	(btemp+10)^0,c
 23336  01E1D6  0E0A               	movlw	high _D
 23337  01E1D8  6E0C               	movwf	(btemp+11)^0,c
 23338  01E1DA  0E28               	movlw	40
 23339  01E1DC  260B               	addwf	(btemp+10)^0,f,c
 23340  01E1DE  0E00               	movlw	0
 23341  01E1E0  220C               	addwfc	(btemp+11)^0,f,c
 23342  01E1E2  50F3               	movf	243,w,c
 23343  01E1E4  260B               	addwf	(btemp+10)^0,f,c
 23344  01E1E6  50F4               	movf	244,w,c
 23345  01E1E8  220C               	addwfc	(btemp+11)^0,f,c
 23346  01E1EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23347  01E1F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 23348  01E1F6  0E00               	movlw	0
 23349  01E1F8  6EE6               	movwf	postinc1,c
 23350  01E1FA  0E01               	movlw	1
 23351  01E1FC  6EE6               	movwf	postinc1,c
 23352  01E1FE  ECB0  F000         	call	_eaDogM_WriteStringAtPos	;wreg free
 23353                           
 23354                           ; BSR set to: 59
 23355                           ;mconfig.c: 100:  wait_lcd_done();
 23356  01E202  EC78  F00E         	call	_wait_lcd_done	;wreg free
 23357                           
 23358                           ; BSR set to: 0
 23359                           ;mconfig.c: 101:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 23360                           ;stkvar	_vterm @ sp[(0)+-1]
 23361  01E206  0EFF               	movlw	-1
 23362  01E208  50E3               	movf	plusw1,w,c
 23363  01E20A  0DA0               	mullw	160
 23364  01E20C  0E4F               	movlw	low _D
 23365  01E20E  6E0B               	movwf	(btemp+10)^0,c
 23366  01E210  0E0A               	movlw	high _D
 23367  01E212  6E0C               	movwf	(btemp+11)^0,c
 23368  01E214  0E50               	movlw	80
 23369  01E216  260B               	addwf	(btemp+10)^0,f,c
 23370  01E218  0E00               	movlw	0
 23371  01E21A  220C               	addwfc	(btemp+11)^0,f,c
 23372  01E21C  50F3               	movf	243,w,c
 23373  01E21E  260B               	addwf	(btemp+10)^0,f,c
 23374  01E220  50F4               	movf	244,w,c
 23375  01E222  220C               	addwfc	(btemp+11)^0,f,c
 23376  01E224  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23377  01E22A  0060  F033  FFE6   	movff	btemp+11,postinc1
 23378  01E230  0E00               	movlw	0
 23379  01E232  6EE6               	movwf	postinc1,c
 23380  01E234  0E02               	movlw	2
 23381  01E236  6EE6               	movwf	postinc1,c
 23382  01E238  ECB0  F000         	call	_eaDogM_WriteStringAtPos	;wreg free
 23383                           
 23384                           ; BSR set to: 59
 23385                           ;mconfig.c: 102:  wait_lcd_done();
 23386  01E23C  EC78  F00E         	call	_wait_lcd_done	;wreg free
 23387                           
 23388                           ; BSR set to: 0
 23389                           ;mconfig.c: 103:  eaDogM_WriteStringAtPos(3, 0, D.lcd[vterm][3]);
 23390                           ;stkvar	_vterm @ sp[(0)+-1]
 23391  01E240  0EFF               	movlw	-1
 23392  01E242  50E3               	movf	plusw1,w,c
 23393  01E244  0DA0               	mullw	160
 23394  01E246  0E4F               	movlw	low _D
 23395  01E248  6E0B               	movwf	(btemp+10)^0,c
 23396  01E24A  0E0A               	movlw	high _D
 23397  01E24C  6E0C               	movwf	(btemp+11)^0,c
 23398  01E24E  0E78               	movlw	120
 23399  01E250  260B               	addwf	(btemp+10)^0,f,c
 23400  01E252  0E00               	movlw	0
 23401  01E254  220C               	addwfc	(btemp+11)^0,f,c
 23402  01E256  50F3               	movf	243,w,c
 23403  01E258  260B               	addwf	(btemp+10)^0,f,c
 23404  01E25A  50F4               	movf	244,w,c
 23405  01E25C  220C               	addwfc	(btemp+11)^0,f,c
 23406  01E25E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23407  01E264  0060  F033  FFE6   	movff	btemp+11,postinc1
 23408  01E26A  0E00               	movlw	0
 23409  01E26C  6EE6               	movwf	postinc1,c
 23410  01E26E  0E03               	movlw	3
 23411  01E270  6EE6               	movwf	postinc1,c
 23412  01E272  ECB0  F000         	call	_eaDogM_WriteStringAtPos	;wreg free
 23413  01E276                     l1831:
 23414                           
 23415                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 23416  01E276  52E5               	movf	postdec1,f,c
 23417  01E278  0012               	return		;funcret
 23418  01E27A                     __end_of_update_lcd:
 23419                           	opt callstack 0
 23420                           
 23421 ;; *************** function _eaDogM_WriteStringAtPos *****************
 23422 ;; Defined at:
 23423 ;;		line 195 in file "eadog.c"
 23424 ;; Parameters:    Size  Location     Type
 23425 ;;  r               1  [STACK] const unsigned char 
 23426 ;;  c               1  [STACK] const unsigned char 
 23427 ;;  strPtr          2  [STACK] PTR unsigned char 
 23428 ;;		 -> D.lcd(640), D(642), V(192), 
 23429 ;; Auto vars:     Size  Location     Type
 23430 ;;  row             1  [STACK] unsigned char 
 23431 ;; Return value:  Size  Location     Type
 23432 ;;                  1  [STACK] void 
 23433 ;; Registers used:
 23434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23435 ;; Tracked objects:
 23436 ;;		On entry : 3F/0
 23437 ;;		On exit  : 3F/3B
 23438 ;;		Unchanged: 0/0
 23439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23444 ;;Total ram usage:        0 bytes
 23445 ;; Hardware stack levels used:    1
 23446 ;; Hardware stack levels required when called:   26
 23447 ;; This function calls:
 23448 ;;		_eaDogM_WriteString
 23449 ;;		_send_lcd_cmd_dma
 23450 ;;		_send_lcd_data_dma
 23451 ;;		_wait_lcd_done
 23452 ;;		_wdtdelay
 23453 ;; This function is called by:
 23454 ;;		_update_lcd
 23455 ;;		_vterm_dump
 23456 ;; This function uses a reentrant model
 23457 ;;
 23458                           
 23459                           	psect	text79
 23460  000160                     __ptext79:
 23461                           	opt callstack 0
 23462  000160                     _eaDogM_WriteStringAtPos:
 23463                           	opt callstack 0
 23464                           
 23465                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23466  000160  52E6               	movf	postinc1,f,c
 23467                           
 23468                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 23469                           
 23470                           ;incstack = 0
 23471  000162  D014               	goto	l16493
 23472  000164                     l16481:
 23473                           
 23474                           ;eadog.c: 201:   row = 0x40;
 23475                           ;stkvar	_row @ sp[(-1)+0]
 23476  000164  0EFF               	movlw	-1
 23477  000166  6AE3               	clrf	plusw1,c
 23478  000168  8CE3               	bsf	plusw1,6,c
 23479                           
 23480                           ;eadog.c: 202:   break;
 23481  00016A  D026               	goto	l16495
 23482  00016C                     l16483:
 23483                           
 23484                           ;eadog.c: 204:   row = 0x14;
 23485                           ;stkvar	_row @ sp[(-1)+0]
 23486  00016C  0EFF               	movlw	-1
 23487  00016E  6AE3               	clrf	plusw1,c
 23488  000170  84E3               	bsf	plusw1,2,c
 23489  000172  88E3               	bsf	plusw1,4,c	;indir
 23490                           
 23491                           ;eadog.c: 205:   break;
 23492  000174  D021               	goto	l16495
 23493  000176                     l16485:
 23494                           
 23495                           ;eadog.c: 207:   row = 0x54;
 23496  000176  0E54               	movlw	84
 23497  000178  6E0C               	movwf	(btemp+11)^0,c
 23498                           
 23499                           ;stkvar	_row @ sp[(-1)+0]
 23500  00017A  0EFF               	movlw	-1
 23501  00017C  0060  F033  FFE3   	movff	btemp+11,plusw1
 23502                           
 23503                           ;eadog.c: 208:   break;
 23504  000182  D01A               	goto	l16495
 23505  000184                     l16487:
 23506                           
 23507                           ;eadog.c: 210:   row = 0x01;
 23508                           ;stkvar	_row @ sp[(-1)+0]
 23509  000184  0EFF               	movlw	-1
 23510  000186  6AE3               	clrf	plusw1,c
 23511  000188  2AE3               	incf	plusw1,f,c
 23512                           
 23513                           ;eadog.c: 211:   break;
 23514  00018A  D016               	goto	l16495
 23515  00018C                     l16493:
 23516                           
 23517                           ;stkvar	_r @ sp[(-1)+-1]
 23518  00018C  0EFE               	movlw	-2
 23519  00018E  50E3               	movf	plusw1,w,c
 23520  000190  6E0B               	movwf	(btemp+10)^0,c
 23521  000192  6A0C               	clrf	(btemp+11)^0,c
 23522                           
 23523                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23524                           ; Switch size 1, requested type "simple"
 23525                           ; Number of cases is 1, Range of values is 0 to 0
 23526                           ; switch strategies available:
 23527                           ; Name         Instructions Cycles
 23528                           ; simple_byte            4     3 (average)
 23529                           ;	Chosen strategy is simple_byte
 23530  000194  500C               	movf	(btemp+11)^0,w,c
 23531  000196  0A00               	xorlw	0	; case 0
 23532  000198  A4D8               	btfss	status,2,c
 23533  00019A  D7E4               	goto	l16481
 23534                           
 23535                           ; Switch size 1, requested type "simple"
 23536                           ; Number of cases is 4, Range of values is 0 to 3
 23537                           ; switch strategies available:
 23538                           ; Name         Instructions Cycles
 23539                           ; simple_byte           13     7 (average)
 23540                           ;	Chosen strategy is simple_byte
 23541  00019C  500B               	movf	(btemp+10)^0,w,c
 23542  00019E  0A00               	xorlw	0	; case 0
 23543  0001A0  B4D8               	btfsc	status,2,c
 23544  0001A2  D7E0               	goto	l16481
 23545  0001A4  0A01               	xorlw	1	; case 1
 23546  0001A6  B4D8               	btfsc	status,2,c
 23547  0001A8  D7E1               	goto	l16483
 23548  0001AA  0A03               	xorlw	3	; case 2
 23549  0001AC  B4D8               	btfsc	status,2,c
 23550  0001AE  D7E3               	goto	l16485
 23551  0001B0  0A01               	xorlw	1	; case 3
 23552  0001B2  B4D8               	btfsc	status,2,c
 23553  0001B4  D7E7               	goto	l16487
 23554  0001B6  D7D6               	goto	l16481
 23555  0001B8                     l16495:
 23556                           
 23557                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 23558  0001B8  0E45               	movlw	69
 23559  0001BA  6EE6               	movwf	postinc1,c
 23560  0001BC  ECFB  F00E         	call	_send_lcd_cmd_dma	;wreg free
 23561                           
 23562                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 23563                           ;stkvar	_c @ sp[(-1)+-2]
 23564  0001C0  0EFD               	movlw	-3
 23565  0001C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23566                           
 23567                           ;stkvar	_row @ sp[(-1)+0]
 23568  0001C8  0EFF               	movlw	-1
 23569  0001CA  50E3               	movf	plusw1,w,c
 23570  0001CC  240C               	addwf	(btemp+11)^0,w,c
 23571  0001CE  6EE6               	movwf	postinc1,c
 23572  0001D0  EC04  F009         	call	_send_lcd_data_dma	;wreg free
 23573                           
 23574                           ; BSR set to: 59
 23575                           ;eadog.c: 218:  wait_lcd_done();
 23576  0001D4  EC78  F00E         	call	_wait_lcd_done	;wreg free
 23577                           
 23578                           ; BSR set to: 0
 23579                           ;eadog.c: 219:  wdtdelay(8);
 23580  0001D8  0E08               	movlw	8
 23581  0001DA  6EE6               	movwf	postinc1,c
 23582  0001DC  0E00               	movlw	0
 23583  0001DE  6EE6               	movwf	postinc1,c
 23584  0001E0  0E00               	movlw	0
 23585  0001E2  6EE6               	movwf	postinc1,c
 23586  0001E4  0E00               	movlw	0
 23587  0001E6  6EE6               	movwf	postinc1,c
 23588  0001E8  ECDF  F007         	call	_wdtdelay	;wreg free
 23589                           
 23590                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 23591                           ;stkvar	_strPtr @ sp[(-1)+-4]
 23592  0001EC  0EFB               	movlw	-5
 23593  0001EE  006F FF8F FFE6     	movff	plusw1,postinc1
 23594  0001F4  006F FF8F FFE6     	movff	plusw1,postinc1
 23595  0001FA  EC04  F001         	call	_eaDogM_WriteString	;wreg free
 23596                           
 23597                           ; BSR set to: 59
 23598                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 23599  0001FE  0EFB               	movlw	251
 23600  000200  26E1               	addwf	fsr1l,f,c
 23601  000202  0EFF               	movlw	255
 23602  000204  22E2               	addwfc	fsr1h,f,c
 23603  000206  0012               	return		;funcret
 23604  000208                     __end_of_eaDogM_WriteStringAtPos:
 23605                           	opt callstack 0
 23606                           
 23607 ;; *************** function _send_lcd_cmd_dma *****************
 23608 ;; Defined at:
 23609 ;;		line 171 in file "eadog.c"
 23610 ;; Parameters:    Size  Location     Type
 23611 ;;  strPtr          1  [STACK] const unsigned char 
 23612 ;; Auto vars:     Size  Location     Type
 23613 ;;		None
 23614 ;; Return value:  Size  Location     Type
 23615 ;;                  1  [STACK] void 
 23616 ;; Registers used:
 23617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23618 ;; Tracked objects:
 23619 ;;		On entry : 0/3D
 23620 ;;		On exit  : 3F/0
 23621 ;;		Unchanged: 0/0
 23622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23627 ;;Total ram usage:        0 bytes
 23628 ;; Hardware stack levels used:    1
 23629 ;; Hardware stack levels required when called:   25
 23630 ;; This function calls:
 23631 ;;		_send_lcd_data_dma
 23632 ;;		_wait_lcd_done
 23633 ;; This function is called by:
 23634 ;;		_eaDogM_WriteStringAtPos
 23635 ;;		_eaDogM_WriteCommand
 23636 ;; This function uses a reentrant model
 23637 ;;
 23638                           
 23639                           	psect	text80
 23640  001DF6                     __ptext80:
 23641                           	opt callstack 0
 23642  001DF6                     _send_lcd_cmd_dma:
 23643                           	opt callstack 3
 23644                           
 23645                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 23646                           
 23647                           ; BSR set to: 59
 23648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23649                           ;incstack = 0
 23650  001DF6  0EFE               	movlw	254
 23651  001DF8  6EE6               	movwf	postinc1,c
 23652  001DFA  EC04  F009         	call	_send_lcd_data_dma	;wreg free
 23653                           
 23654                           ; BSR set to: 59
 23655                           ;eadog.c: 174:  wait_lcd_done();
 23656  001DFE  EC78  F00E         	call	_wait_lcd_done	;wreg free
 23657                           
 23658                           ; BSR set to: 0
 23659                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 23660                           ;stkvar	_strPtr @ sp[(0)+-1]
 23661  001E02  0EFF               	movlw	-1
 23662  001E04  50E3               	movf	plusw1,w,c
 23663  001E06  6EE6               	movwf	postinc1,c
 23664  001E08  EC04  F009         	call	_send_lcd_data_dma	;wreg free
 23665                           
 23666                           ;eadog.c: 176:  wait_lcd_done();
 23667  001E0C  EC78  F00E         	call	_wait_lcd_done	;wreg free
 23668                           
 23669                           ; BSR set to: 0
 23670                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 23671  001E10  52E5               	movf	postdec1,f,c
 23672  001E12  0012               	return		;funcret
 23673  001E14                     __end_of_send_lcd_cmd_dma:
 23674                           	opt callstack 0
 23675                           
 23676 ;; *************** function _wait_lcd_done *****************
 23677 ;; Defined at:
 23678 ;;		line 444 in file "eadog.c"
 23679 ;; Parameters:    Size  Location     Type
 23680 ;;		None
 23681 ;; Auto vars:     Size  Location     Type
 23682 ;;		None
 23683 ;; Return value:  Size  Location     Type
 23684 ;;                  1  [STACK] void 
 23685 ;; Registers used:
 23686 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 23687 ;; Tracked objects:
 23688 ;;		On entry : 0/1
 23689 ;;		On exit  : 3F/0
 23690 ;;		Unchanged: 0/0
 23691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23696 ;;Total ram usage:        0 bytes
 23697 ;; Hardware stack levels used:    1
 23698 ;; Hardware stack levels required when called:   16
 23699 ;; This function calls:
 23700 ;;		_wdtdelay
 23701 ;; This function is called by:
 23702 ;;		_main
 23703 ;;		_send_lcd_cmd_dma
 23704 ;;		_eaDogM_WriteStringAtPos
 23705 ;;		_update_lcd
 23706 ;;		_vterm_dump
 23707 ;; This function uses a reentrant model
 23708 ;;
 23709                           
 23710                           	psect	text81
 23711  001CF0                     __ptext81:
 23712                           	opt callstack 0
 23713  001CF0                     _wait_lcd_done:
 23714                           	opt callstack 14
 23715                           
 23716                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 23717                           
 23718                           ; BSR set to: 0
 23719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23720                           ;incstack = 0
 23721  001CF0  0100               	movlb	0	; () banked
 23722  001CF2  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 23723  001CF4  D7FD               	goto	_wait_lcd_done
 23724  001CF6                     u10820:
 23725  001CF6  013D               	movlb	61	; () banked
 23726  001CF8  AB17               	btfss	23,5,b	;volatile
 23727  001CFA  D7FD               	goto	u10820
 23728                           
 23729                           ; BSR set to: 61
 23730                           ;eadog.c: 448:  wdtdelay(50);
 23731  001CFC  0E32               	movlw	50
 23732  001CFE  6EE6               	movwf	postinc1,c
 23733  001D00  0E00               	movlw	0
 23734  001D02  6EE6               	movwf	postinc1,c
 23735  001D04  0E00               	movlw	0
 23736  001D06  6EE6               	movwf	postinc1,c
 23737  001D08  0E00               	movlw	0
 23738  001D0A  6EE6               	movwf	postinc1,c
 23739  001D0C  ECDF  F007         	call	_wdtdelay	;wreg free
 23740                           
 23741                           ; BSR set to: 0
 23742                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23743  001D10  0012               	return		;funcret
 23744  001D12                     __end_of_wait_lcd_done:
 23745                           	opt callstack 0
 23746                           
 23747 ;; *************** function _wdtdelay *****************
 23748 ;; Defined at:
 23749 ;;		line 23 in file "eadog.c"
 23750 ;; Parameters:    Size  Location     Type
 23751 ;;  delay           4  [STACK] const unsigned long 
 23752 ;; Auto vars:     Size  Location     Type
 23753 ;;		None
 23754 ;; Return value:  Size  Location     Type
 23755 ;;                  1  [STACK] void 
 23756 ;; Registers used:
 23757 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 23758 ;; Tracked objects:
 23759 ;;		On entry : 2/3D
 23760 ;;		On exit  : 3F/0
 23761 ;;		Unchanged: 0/0
 23762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23767 ;;Total ram usage:        0 bytes
 23768 ;; Hardware stack levels used:    1
 23769 ;; Hardware stack levels required when called:   15
 23770 ;; This function calls:
 23771 ;;		Nothing
 23772 ;; This function is called by:
 23773 ;;		_init_display
 23774 ;;		_send_lcd_data
 23775 ;;		_send_lcd_cmd
 23776 ;;		_send_lcd_cmd_long
 23777 ;;		_eaDogM_WriteStringAtPos
 23778 ;;		_wait_lcd_done
 23779 ;; This function uses a reentrant model
 23780 ;;
 23781                           
 23782                           	psect	text82
 23783  000FBE                     __ptext82:
 23784                           	opt callstack 0
 23785  000FBE                     _wdtdelay:
 23786                           	opt callstack 14
 23787                           
 23788                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 23789                           
 23790                           ; BSR set to: 0
 23791                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23792                           ;incstack = 0
 23793  000FBE  0100               	movlb	0	; () banked
 23794  000FC0  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 23795  000FC2  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 23796  000FC4  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 23797  000FC6  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 23798  000FC8                     l1608:
 23799                           
 23800                           ; BSR set to: 0
 23801                           ;eadog.c: 28:   __nop();
 23802  000FC8  F000               	nop	
 23803  000FCA  0004               	clrwdt		;# 
 23804                           
 23805                           ;eadog.c: 30:  };
 23806  000FCC  0E01               	movlw	1
 23807  000FCE  0100               	movlb	0	; () banked
 23808  000FD0  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 23809  000FD2  0E00               	movlw	0
 23810  000FD4  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 23811  000FD6  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 23812  000FD8  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 23813                           
 23814                           ; BSR set to: 0
 23815                           ;stkvar	_delay @ sp[(0)+-4]
 23816  000FDA  0EFC               	movlw	-4
 23817  000FDC  006F FF8C  F001    	movff	plusw1,btemp
 23818  000FE2  519A               	movf	wdtdelay@dcount& (0+255),w,b
 23819  000FE4  5C01               	subwf	btemp^0,w,c
 23820  000FE6  0EFD               	movlw	-3
 23821  000FE8  006F FF8C  F001    	movff	plusw1,btemp
 23822  000FEE  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 23823  000FF0  5801               	subwfb	btemp^0,w,c
 23824  000FF2  0EFE               	movlw	-2
 23825  000FF4  006F FF8C  F001    	movff	plusw1,btemp
 23826  000FFA  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 23827  000FFC  5801               	subwfb	btemp^0,w,c
 23828  000FFE  0EFF               	movlw	-1
 23829  001000  006F FF8C  F001    	movff	plusw1,btemp
 23830  001006  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 23831  001008  5801               	subwfb	btemp^0,w,c
 23832  00100A  B0D8               	btfsc	status,0,c
 23833  00100C  D7DD               	goto	l1608
 23834                           
 23835                           ; BSR set to: 0
 23836                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 23837  00100E  52E5               	movf	postdec1,f,c
 23838  001010  52E5               	movf	postdec1,f,c
 23839  001012  52E5               	movf	postdec1,f,c
 23840  001014  52E5               	movf	postdec1,f,c
 23841  001016  0012               	return		;funcret
 23842  001018                     __end_of_wdtdelay:
 23843                           	opt callstack 0
 23844                           
 23845 ;; *************** function _send_lcd_data_dma *****************
 23846 ;; Defined at:
 23847 ;;		line 182 in file "eadog.c"
 23848 ;; Parameters:    Size  Location     Type
 23849 ;;  strPtr          1  [STACK] const unsigned char 
 23850 ;; Auto vars:     Size  Location     Type
 23851 ;;		None
 23852 ;; Return value:  Size  Location     Type
 23853 ;;                  1  [STACK] void 
 23854 ;; Registers used:
 23855 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23856 ;; Tracked objects:
 23857 ;;		On entry : 0/0
 23858 ;;		On exit  : 3F/3B
 23859 ;;		Unchanged: 0/0
 23860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23865 ;;Total ram usage:        0 bytes
 23866 ;; Hardware stack levels used:    1
 23867 ;; Hardware stack levels required when called:   24
 23868 ;; This function calls:
 23869 ;;		_printf
 23870 ;;		_ringBufS_flush
 23871 ;;		_start_lcd
 23872 ;;		_wait_lcd_set
 23873 ;; This function is called by:
 23874 ;;		_send_lcd_cmd_dma
 23875 ;;		_eaDogM_WriteStringAtPos
 23876 ;; This function uses a reentrant model
 23877 ;;
 23878                           
 23879                           	psect	text83
 23880  001208                     __ptext83:
 23881                           	opt callstack 0
 23882  001208                     _send_lcd_data_dma:
 23883                           	opt callstack 4
 23884                           
 23885                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 23886                           
 23887                           ; BSR set to: 0
 23888                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23889                           ;incstack = 0
 23890  001208  EC27  F010         	call	_wait_lcd_set	;wreg free
 23891                           
 23892                           ; BSR set to: 0
 23893                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 23894  00120C  0E00               	movlw	0
 23895  00120E  6EE6               	movwf	postinc1,c
 23896  001210  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 23897  001216  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 23898  00121C  EC8A  F002         	call	_ringBufS_flush	;wreg free
 23899  001220  94BC               	bcf	188,2,c	;volatile
 23900                           
 23901                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 23902  001222  013B               	movlb	59	; () banked
 23903  001224  9FFC               	bcf	252,7,b	;volatile
 23904                           
 23905                           ; BSR set to: 59
 23906                           ;eadog.c: 189:  DMA1SSZ = 1;
 23907  001226  0E00               	movlw	0
 23908  001228  6FF8               	movwf	248,b	;volatile
 23909  00122A  0E01               	movlw	1
 23910  00122C  6FF7               	movwf	247,b	;volatile
 23911                           
 23912                           ; BSR set to: 59
 23913                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 23914  00122E  8FFC               	bsf	252,7,b	;volatile
 23915                           
 23916                           ; BSR set to: 59
 23917                           ;eadog.c: 191:  printf("%c", strPtr);
 23918                           ;stkvar	_strPtr @ sp[(0)+-1]
 23919  001230  0EFF               	movlw	-1
 23920  001232  50E3               	movf	plusw1,w,c
 23921  001234  6EE6               	movwf	postinc1,c
 23922  001236  0E00               	movlw	0
 23923  001238  6EE6               	movwf	postinc1,c
 23924  00123A  0EF8               	movlw	low STR_69
 23925  00123C  6EE6               	movwf	postinc1,c
 23926  00123E  0EFF               	movlw	high STR_69
 23927  001240  6EE6               	movwf	postinc1,c
 23928  001242  0E04               	movlw	4
 23929  001244  6EE6               	movwf	postinc1,c
 23930  001246  ECF1  F006         	call	_printf	;wreg free
 23931                           
 23932                           ; BSR set to: 0
 23933                           ;eadog.c: 192:  start_lcd();
 23934  00124A  EC2A  F010         	call	_start_lcd	;wreg free
 23935                           
 23936                           ; BSR set to: 59
 23937                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 23938  00124E  52E5               	movf	postdec1,f,c
 23939  001250  0012               	return		;funcret
 23940  001252                     __end_of_send_lcd_data_dma:
 23941                           	opt callstack 0
 23942                           
 23943 ;; *************** function _eaDogM_WriteString *****************
 23944 ;; Defined at:
 23945 ;;		line 151 in file "eadog.c"
 23946 ;; Parameters:    Size  Location     Type
 23947 ;;  strPtr          2  [STACK] PTR unsigned char 
 23948 ;;		 -> D.lcd(640), D(642), V(192), 
 23949 ;; Auto vars:     Size  Location     Type
 23950 ;;		None
 23951 ;; Return value:  Size  Location     Type
 23952 ;;                  1  [STACK] void 
 23953 ;; Registers used:
 23954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 23955 ;; Tracked objects:
 23956 ;;		On entry : 3F/0
 23957 ;;		On exit  : 3F/3B
 23958 ;;		Unchanged: 0/0
 23959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23964 ;;Total ram usage:        0 bytes
 23965 ;; Hardware stack levels used:    1
 23966 ;; Hardware stack levels required when called:   24
 23967 ;; This function calls:
 23968 ;;		_printf
 23969 ;;		_ringBufS_flush
 23970 ;;		_start_lcd
 23971 ;;		_strlen
 23972 ;;		_wait_lcd_set
 23973 ;; This function is called by:
 23974 ;;		_eaDogM_WriteStringAtPos
 23975 ;; This function uses a reentrant model
 23976 ;;
 23977                           
 23978                           	psect	text84
 23979  000208                     __ptext84:
 23980                           	opt callstack 0
 23981  000208                     _eaDogM_WriteString:
 23982                           	opt callstack 4
 23983                           
 23984                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 23985                           
 23986                           ; BSR set to: 59
 23987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23988                           ;incstack = 0
 23989  000208  EC27  F010         	call	_wait_lcd_set	;wreg free
 23990                           
 23991                           ; BSR set to: 0
 23992                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 23993  00020C  0E00               	movlw	0
 23994  00020E  6EE6               	movwf	postinc1,c
 23995  000210  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 23996  000216  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 23997  00021C  EC8A  F002         	call	_ringBufS_flush	;wreg free
 23998  000220  94BC               	bcf	188,2,c	;volatile
 23999                           
 24000                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 24001                           ;stkvar	_strPtr @ sp[(0)+-2]
 24002  000222  0EFE               	movlw	-2
 24003  000224  006F FF8F FFE6     	movff	plusw1,postinc1
 24004  00022A  006F FF8F FFE6     	movff	plusw1,postinc1
 24005  000230  EC57  F001         	call	_strlen	;wreg free
 24006  000234  5002               	movf	(btemp+1)^0,w,c
 24007  000236  E104               	bnz	u15860
 24008  000238  0E41               	movlw	65
 24009  00023A  5C01               	subwf	btemp^0,w,c
 24010  00023C  A0D8               	btfss	status,0,c
 24011  00023E  D010               	goto	l16243
 24012  000240                     u15860:
 24013                           
 24014                           ;stkvar	_strPtr @ sp[(0)+-2]
 24015  000240  0EFE               	movlw	-2
 24016  000242  006F FF8C  F00B    	movff	plusw1,btemp+10
 24017  000248  0EFF               	movlw	-1
 24018  00024A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24019  000250  0E40               	movlw	64
 24020  000252  240B               	addwf	(btemp+10)^0,w,c
 24021  000254  6ED9               	movwf	fsr2l,c
 24022  000256  0E00               	movlw	0
 24023  000258  200C               	addwfc	(btemp+11)^0,w,c
 24024  00025A  6EDA               	movwf	fsr2h,c
 24025  00025C  0E00               	movlw	0
 24026  00025E  6EDF               	movwf	indf2,c
 24027  000260                     l16243:
 24028                           
 24029                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 24030  000260  013B               	movlb	59	; () banked
 24031  000262  9FFC               	bcf	252,7,b	;volatile
 24032                           
 24033                           ; BSR set to: 59
 24034                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 24035                           ;stkvar	_strPtr @ sp[(0)+-2]
 24036  000264  0EFE               	movlw	-2
 24037  000266  006F FF8F FFE6     	movff	plusw1,postinc1
 24038  00026C  006F FF8F FFE6     	movff	plusw1,postinc1
 24039  000272  EC57  F001         	call	_strlen	;wreg free
 24040  000276  0060  F007  FBF7   	movff	btemp,15351	;volatile
 24041  00027C  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 24042                           
 24043                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 24044  000282  013B               	movlb	59	; () banked
 24045  000284  8FFC               	bsf	252,7,b	;volatile
 24046                           
 24047                           ; BSR set to: 59
 24048                           ;eadog.c: 161:  printf("%s", strPtr);
 24049                           ;stkvar	_strPtr @ sp[(0)+-2]
 24050  000286  0EFE               	movlw	-2
 24051  000288  006F FF8F FFE6     	movff	plusw1,postinc1
 24052  00028E  006F FF8F FFE6     	movff	plusw1,postinc1
 24053  000294  0EFB               	movlw	low STR_68
 24054  000296  6EE6               	movwf	postinc1,c
 24055  000298  0EFF               	movlw	high STR_68
 24056  00029A  6EE6               	movwf	postinc1,c
 24057  00029C  0E04               	movlw	4
 24058  00029E  6EE6               	movwf	postinc1,c
 24059  0002A0  ECF1  F006         	call	_printf	;wreg free
 24060                           
 24061                           ; BSR set to: 0
 24062                           ;eadog.c: 162:  start_lcd();
 24063  0002A4  EC2A  F010         	call	_start_lcd	;wreg free
 24064                           
 24065                           ; BSR set to: 59
 24066                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 24067  0002A8  52E5               	movf	postdec1,f,c
 24068  0002AA  52E5               	movf	postdec1,f,c
 24069  0002AC  0012               	return		;funcret
 24070  0002AE                     __end_of_eaDogM_WriteString:
 24071                           	opt callstack 0
 24072                           
 24073 ;; *************** function _wait_lcd_set *****************
 24074 ;; Defined at:
 24075 ;;		line 434 in file "eadog.c"
 24076 ;; Parameters:    Size  Location     Type
 24077 ;;		None
 24078 ;; Auto vars:     Size  Location     Type
 24079 ;;		None
 24080 ;; Return value:  Size  Location     Type
 24081 ;;                  1  [STACK] void 
 24082 ;; Registers used:
 24083 ;;		None
 24084 ;; Tracked objects:
 24085 ;;		On entry : 0/0
 24086 ;;		On exit  : 3F/0
 24087 ;;		Unchanged: 0/0
 24088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24093 ;;Total ram usage:        0 bytes
 24094 ;; Hardware stack levels used:    1
 24095 ;; Hardware stack levels required when called:   15
 24096 ;; This function calls:
 24097 ;;		Nothing
 24098 ;; This function is called by:
 24099 ;;		_eaDogM_WriteString
 24100 ;;		_send_lcd_data_dma
 24101 ;; This function uses a reentrant model
 24102 ;;
 24103                           
 24104                           	psect	text85
 24105  00204E                     __ptext85:
 24106                           	opt callstack 0
 24107  00204E                     _wait_lcd_set:
 24108                           	opt callstack 12
 24109                           
 24110                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 24111                           
 24112                           ; BSR set to: 59
 24113                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24114                           ;incstack = 0
 24115  00204E  0100               	movlb	0	; () banked
 24116  002050  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 24117                           
 24118                           ; BSR set to: 0
 24119                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 24120  002052  0012               	return		;funcret
 24121  002054                     __end_of_wait_lcd_set:
 24122                           	opt callstack 0
 24123                           
 24124 ;; *************** function _start_lcd *****************
 24125 ;; Defined at:
 24126 ;;		line 429 in file "eadog.c"
 24127 ;; Parameters:    Size  Location     Type
 24128 ;;		None
 24129 ;; Auto vars:     Size  Location     Type
 24130 ;;		None
 24131 ;; Return value:  Size  Location     Type
 24132 ;;                  1  [STACK] void 
 24133 ;; Registers used:
 24134 ;;		None
 24135 ;; Tracked objects:
 24136 ;;		On entry : 3F/0
 24137 ;;		On exit  : 3F/3B
 24138 ;;		Unchanged: 0/0
 24139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24144 ;;Total ram usage:        0 bytes
 24145 ;; Hardware stack levels used:    1
 24146 ;; Hardware stack levels required when called:   15
 24147 ;; This function calls:
 24148 ;;		Nothing
 24149 ;; This function is called by:
 24150 ;;		_eaDogM_WriteString
 24151 ;;		_send_lcd_data_dma
 24152 ;; This function uses a reentrant model
 24153 ;;
 24154                           
 24155                           	psect	text86
 24156  002054                     __ptext86:
 24157                           	opt callstack 0
 24158  002054                     _start_lcd:
 24159                           	opt callstack 12
 24160                           
 24161                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 24162                           
 24163                           ; BSR set to: 0
 24164                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24165                           ;incstack = 0
 24166  002054  013B               	movlb	59	; () banked
 24167  002056  8DFC               	bsf	252,6,b	;volatile
 24168                           
 24169                           ; BSR set to: 59
 24170                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 24171  002058  0012               	return		;funcret
 24172  00205A                     __end_of_start_lcd:
 24173                           	opt callstack 0
 24174                           
 24175 ;; *************** function _ringBufS_flush *****************
 24176 ;; Defined at:
 24177 ;;		line 76 in file "ringbufs.c"
 24178 ;; Parameters:    Size  Location     Type
 24179 ;;  _this           2  [STACK] PTR struct ringBufS_t
 24180 ;;		 -> ring_buf1(67), 
 24181 ;;  clearBuffer     1  [STACK] const char 
 24182 ;; Auto vars:     Size  Location     Type
 24183 ;;		None
 24184 ;; Return value:  Size  Location     Type
 24185 ;;                  1  [STACK] void 
 24186 ;; Registers used:
 24187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 24188 ;; Tracked objects:
 24189 ;;		On entry : 3F/0
 24190 ;;		On exit  : 0/0
 24191 ;;		Unchanged: 0/0
 24192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24197 ;;Total ram usage:        0 bytes
 24198 ;; Hardware stack levels used:    1
 24199 ;; Hardware stack levels required when called:   16
 24200 ;; This function calls:
 24201 ;;		_memset
 24202 ;; This function is called by:
 24203 ;;		_eaDogM_WriteString
 24204 ;;		_send_lcd_data_dma
 24205 ;; This function uses a reentrant model
 24206 ;;
 24207                           
 24208                           	psect	text87
 24209  000514                     __ptext87:
 24210                           	opt callstack 0
 24211  000514                     _ringBufS_flush:
 24212                           	opt callstack 11
 24213                           
 24214                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 24215                           ;stkvar	__this @ sp[(0)+-2]
 24216                           
 24217                           ; BSR set to: 59
 24218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24219                           ;incstack = 0
 24220  000514  0EFE               	movlw	-2
 24221  000516  006F FF8C  F00B    	movff	plusw1,btemp+10
 24222  00051C  0EFF               	movlw	-1
 24223  00051E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24224  000524  0E42               	movlw	66
 24225  000526  240B               	addwf	(btemp+10)^0,w,c
 24226  000528  6ED9               	movwf	fsr2l,c
 24227  00052A  0E00               	movlw	0
 24228  00052C  200C               	addwfc	(btemp+11)^0,w,c
 24229  00052E  6EDA               	movwf	fsr2h,c
 24230  000530  0E00               	movlw	0
 24231  000532  6EDF               	movwf	indf2,c
 24232                           
 24233                           ;ringbufs.c: 79:  _this->head = 0;
 24234                           ;stkvar	__this @ sp[(0)+-2]
 24235  000534  0EFE               	movlw	-2
 24236  000536  006F FF8C  F00B    	movff	plusw1,btemp+10
 24237  00053C  0EFF               	movlw	-1
 24238  00053E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24239  000544  0E40               	movlw	64
 24240  000546  240B               	addwf	(btemp+10)^0,w,c
 24241  000548  6ED9               	movwf	fsr2l,c
 24242  00054A  0E00               	movlw	0
 24243  00054C  200C               	addwfc	(btemp+11)^0,w,c
 24244  00054E  6EDA               	movwf	fsr2h,c
 24245  000550  0E00               	movlw	0
 24246  000552  6EDF               	movwf	indf2,c
 24247                           
 24248                           ;ringbufs.c: 80:  _this->tail = 0;
 24249                           ;stkvar	__this @ sp[(0)+-2]
 24250  000554  0EFE               	movlw	-2
 24251  000556  006F FF8C  F00B    	movff	plusw1,btemp+10
 24252  00055C  0EFF               	movlw	-1
 24253  00055E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24254  000564  0E41               	movlw	65
 24255  000566  240B               	addwf	(btemp+10)^0,w,c
 24256  000568  6ED9               	movwf	fsr2l,c
 24257  00056A  0E00               	movlw	0
 24258  00056C  200C               	addwfc	(btemp+11)^0,w,c
 24259  00056E  6EDA               	movwf	fsr2h,c
 24260  000570  0E00               	movlw	0
 24261  000572  6EDF               	movwf	indf2,c
 24262                           
 24263                           ;ringbufs.c: 81:  if (clearBuffer) {
 24264                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 24265  000574  0EFD               	movlw	-3
 24266  000576  50E3               	movf	plusw1,w,c
 24267  000578  B4D8               	btfsc	status,2,c
 24268  00057A  D011               	goto	l1740
 24269                           
 24270                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 24271  00057C  0E40               	movlw	64
 24272  00057E  6EE6               	movwf	postinc1,c
 24273  000580  0E00               	movlw	0
 24274  000582  6EE6               	movwf	postinc1,c
 24275  000584  0E00               	movlw	0
 24276  000586  6EE6               	movwf	postinc1,c
 24277  000588  0E00               	movlw	0
 24278  00058A  6EE6               	movwf	postinc1,c
 24279                           
 24280                           ;stkvar	__this @ sp[(-4)+-2]
 24281  00058C  0EFA               	movlw	-6
 24282  00058E  006F FF8F FFE6     	movff	plusw1,postinc1
 24283  000594  006F FF8F FFE6     	movff	plusw1,postinc1
 24284  00059A  EC80  F0D3         	call	_memset	;wreg free
 24285  00059E                     l1740:
 24286                           
 24287                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 24288  00059E  52E5               	movf	postdec1,f,c
 24289  0005A0  52E5               	movf	postdec1,f,c
 24290  0005A2  52E5               	movf	postdec1,f,c
 24291  0005A4  0012               	return		;funcret
 24292  0005A6                     __end_of_ringBufS_flush:
 24293                           	opt callstack 0
 24294                           
 24295 ;; *************** function _memset *****************
 24296 ;; Defined at:
 24297 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 24298 ;; Parameters:    Size  Location     Type
 24299 ;;  dest            2  [STACK] PTR void 
 24300 ;;		 -> ring_buf2(67), ring_buf1(67), 
 24301 ;;  c               2  [STACK] int 
 24302 ;;  n               2  [STACK] unsigned int 
 24303 ;; Auto vars:     Size  Location     Type
 24304 ;;  s               2  [STACK] PTR unsigned char 
 24305 ;;		 -> ring_buf2(67), ring_buf1(67), 
 24306 ;;  k               2  [STACK] unsigned int 
 24307 ;; Return value:  Size  Location     Type
 24308 ;;                  2  [STACK] PTR void 
 24309 ;; Registers used:
 24310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 24311 ;; Tracked objects:
 24312 ;;		On entry : 0/0
 24313 ;;		On exit  : 0/0
 24314 ;;		Unchanged: 0/0
 24315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24320 ;;Total ram usage:        0 bytes
 24321 ;; Hardware stack levels used:    1
 24322 ;; Hardware stack levels required when called:   15
 24323 ;; This function calls:
 24324 ;;		Nothing
 24325 ;; This function is called by:
 24326 ;;		_ringBufS_init
 24327 ;;		_ringBufS_flush
 24328 ;; This function uses a reentrant model
 24329 ;;
 24330                           
 24331                           	psect	text88
 24332  01A700                     __ptext88:
 24333                           	opt callstack 0
 24334  01A700                     _memset:
 24335                           	opt callstack 0
 24336                           
 24337                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24338  01A700  52E6               	movf	postinc1,f,c
 24339  01A702  52E6               	movf	postinc1,f,c
 24340  01A704  52E6               	movf	postinc1,f,c
 24341  01A706  52E6               	movf	postinc1,f,c
 24342                           
 24343                           ;stkvar	_dest @ sp[(-4)+-2]
 24344                           
 24345                           ;incstack = 0
 24346  01A708  0EFA               	movlw	-6
 24347  01A70A  006F FF8C  F00B    	movff	plusw1,btemp+10
 24348  01A710  0EFB               	movlw	-5
 24349  01A712  006F FF8C  F00C    	movff	plusw1,btemp+11
 24350                           
 24351                           ;stkvar	_s @ sp[(-4)+0]
 24352  01A718  0EFD               	movlw	-3
 24353  01A71A  0060  F033  FFE3   	movff	btemp+11,plusw1
 24354  01A720  0EFC               	movlw	-4
 24355  01A722  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24356                           
 24357                           ;stkvar	_n @ sp[(-4)+-6]
 24358  01A728  0EF6               	movlw	-10
 24359  01A72A  006F FF8C  F001    	movff	plusw1,btemp
 24360  01A730  0EF7               	movlw	-9
 24361  01A732  50E3               	movf	plusw1,w,c
 24362  01A734  1001               	iorwf	btemp^0,w,c
 24363  01A736  B4D8               	btfsc	status,2,c
 24364  01A738  D154               	goto	u14190
 24365                           
 24366                           ;stkvar	_c @ sp[(-4)+-4]
 24367                           ;stkvar	_s @ sp[(-4)+0]
 24368  01A73A  0EFC               	movlw	-4
 24369  01A73C  006F FF8F FFD9     	movff	plusw1,fsr2l
 24370  01A742  0EFD               	movlw	-3
 24371  01A744  006F FF8F FFDA     	movff	plusw1,fsr2h
 24372  01A74A  0EF8               	movlw	-8
 24373  01A74C  006F FF8F FFDF     	movff	plusw1,indf2
 24374                           
 24375                           ;stkvar	_c @ sp[(-4)+-4]
 24376                           ;stkvar	_n @ sp[(-4)+-6]
 24377                           ;stkvar	_s @ sp[(-4)+0]
 24378  01A752  0EFC               	movlw	-4
 24379  01A754  006F FF8C  F00B    	movff	plusw1,btemp+10
 24380  01A75A  0EFD               	movlw	-3
 24381  01A75C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24382  01A762  0EF6               	movlw	-10
 24383  01A764  50E3               	movf	plusw1,w,c
 24384  01A766  260B               	addwf	(btemp+10)^0,f,c
 24385  01A768  0EF7               	movlw	-9
 24386  01A76A  50E3               	movf	plusw1,w,c
 24387  01A76C  220C               	addwfc	(btemp+11)^0,f,c
 24388  01A76E  0EFF               	movlw	255
 24389  01A770  240B               	addwf	(btemp+10)^0,w,c
 24390  01A772  6ED9               	movwf	fsr2l,c
 24391  01A774  0EFF               	movlw	255
 24392  01A776  200C               	addwfc	(btemp+11)^0,w,c
 24393  01A778  6EDA               	movwf	fsr2h,c
 24394  01A77A  0EF8               	movlw	-8
 24395  01A77C  006F FF8F FFDF     	movff	plusw1,indf2
 24396                           
 24397                           ;stkvar	_n @ sp[(-4)+-6]
 24398  01A782  0EF7               	movlw	-9
 24399  01A784  50E3               	movf	plusw1,w,c
 24400  01A786  E108               	bnz	l15257
 24401  01A788  0EF6               	movlw	-10
 24402  01A78A  006F FF8C  F001    	movff	plusw1,btemp
 24403  01A790  0E03               	movlw	3
 24404  01A792  5E01               	subwf	btemp^0,f,c
 24405  01A794  A0D8               	btfss	status,0,c
 24406  01A796  D125               	goto	u14190
 24407  01A798                     l15257:
 24408                           
 24409                           ;stkvar	_c @ sp[(-4)+-4]
 24410                           ;stkvar	_s @ sp[(-4)+0]
 24411  01A798  0EFC               	movlw	-4
 24412  01A79A  006F FF8C  F00B    	movff	plusw1,btemp+10
 24413  01A7A0  0EFD               	movlw	-3
 24414  01A7A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 24415  01A7A8  0E01               	movlw	1
 24416  01A7AA  240B               	addwf	(btemp+10)^0,w,c
 24417  01A7AC  6ED9               	movwf	fsr2l,c
 24418  01A7AE  0E00               	movlw	0
 24419  01A7B0  200C               	addwfc	(btemp+11)^0,w,c
 24420  01A7B2  6EDA               	movwf	fsr2h,c
 24421  01A7B4  0EF8               	movlw	-8
 24422  01A7B6  006F FF8F FFDF     	movff	plusw1,indf2
 24423                           
 24424                           ;stkvar	_c @ sp[(-4)+-4]
 24425                           ;stkvar	_s @ sp[(-4)+0]
 24426  01A7BC  0EFC               	movlw	-4
 24427  01A7BE  006F FF8C  F00B    	movff	plusw1,btemp+10
 24428  01A7C4  0EFD               	movlw	-3
 24429  01A7C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24430  01A7CC  0E02               	movlw	2
 24431  01A7CE  240B               	addwf	(btemp+10)^0,w,c
 24432  01A7D0  6ED9               	movwf	fsr2l,c
 24433  01A7D2  0E00               	movlw	0
 24434  01A7D4  200C               	addwfc	(btemp+11)^0,w,c
 24435  01A7D6  6EDA               	movwf	fsr2h,c
 24436  01A7D8  0EF8               	movlw	-8
 24437  01A7DA  006F FF8F FFDF     	movff	plusw1,indf2
 24438                           
 24439                           ;stkvar	_c @ sp[(-4)+-4]
 24440                           ;stkvar	_n @ sp[(-4)+-6]
 24441                           ;stkvar	_s @ sp[(-4)+0]
 24442  01A7E0  0EFC               	movlw	-4
 24443  01A7E2  006F FF8C  F00B    	movff	plusw1,btemp+10
 24444  01A7E8  0EFD               	movlw	-3
 24445  01A7EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24446  01A7F0  0EF6               	movlw	-10
 24447  01A7F2  50E3               	movf	plusw1,w,c
 24448  01A7F4  260B               	addwf	(btemp+10)^0,f,c
 24449  01A7F6  0EF7               	movlw	-9
 24450  01A7F8  50E3               	movf	plusw1,w,c
 24451  01A7FA  220C               	addwfc	(btemp+11)^0,f,c
 24452  01A7FC  0EFE               	movlw	254
 24453  01A7FE  240B               	addwf	(btemp+10)^0,w,c
 24454  01A800  6ED9               	movwf	fsr2l,c
 24455  01A802  0EFF               	movlw	255
 24456  01A804  200C               	addwfc	(btemp+11)^0,w,c
 24457  01A806  6EDA               	movwf	fsr2h,c
 24458  01A808  0EF8               	movlw	-8
 24459  01A80A  006F FF8F FFDF     	movff	plusw1,indf2
 24460                           
 24461                           ;stkvar	_c @ sp[(-4)+-4]
 24462                           ;stkvar	_n @ sp[(-4)+-6]
 24463                           ;stkvar	_s @ sp[(-4)+0]
 24464  01A810  0EFC               	movlw	-4
 24465  01A812  006F FF8C  F00B    	movff	plusw1,btemp+10
 24466  01A818  0EFD               	movlw	-3
 24467  01A81A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24468  01A820  0EF6               	movlw	-10
 24469  01A822  50E3               	movf	plusw1,w,c
 24470  01A824  260B               	addwf	(btemp+10)^0,f,c
 24471  01A826  0EF7               	movlw	-9
 24472  01A828  50E3               	movf	plusw1,w,c
 24473  01A82A  220C               	addwfc	(btemp+11)^0,f,c
 24474  01A82C  0EFD               	movlw	253
 24475  01A82E  240B               	addwf	(btemp+10)^0,w,c
 24476  01A830  6ED9               	movwf	fsr2l,c
 24477  01A832  0EFF               	movlw	255
 24478  01A834  200C               	addwfc	(btemp+11)^0,w,c
 24479  01A836  6EDA               	movwf	fsr2h,c
 24480  01A838  0EF8               	movlw	-8
 24481  01A83A  006F FF8F FFDF     	movff	plusw1,indf2
 24482                           
 24483                           ;stkvar	_n @ sp[(-4)+-6]
 24484  01A840  0EF7               	movlw	-9
 24485  01A842  50E3               	movf	plusw1,w,c
 24486  01A844  E108               	bnz	l15263
 24487  01A846  0EF6               	movlw	-10
 24488  01A848  006F FF8C  F001    	movff	plusw1,btemp
 24489  01A84E  0E07               	movlw	7
 24490  01A850  5E01               	subwf	btemp^0,f,c
 24491  01A852  A0D8               	btfss	status,0,c
 24492  01A854  D0C6               	goto	u14190
 24493  01A856                     l15263:
 24494                           
 24495                           ;stkvar	_c @ sp[(-4)+-4]
 24496                           ;stkvar	_s @ sp[(-4)+0]
 24497  01A856  0EFC               	movlw	-4
 24498  01A858  006F FF8C  F00B    	movff	plusw1,btemp+10
 24499  01A85E  0EFD               	movlw	-3
 24500  01A860  006F FF8C  F00C    	movff	plusw1,btemp+11
 24501  01A866  0E03               	movlw	3
 24502  01A868  240B               	addwf	(btemp+10)^0,w,c
 24503  01A86A  6ED9               	movwf	fsr2l,c
 24504  01A86C  0E00               	movlw	0
 24505  01A86E  200C               	addwfc	(btemp+11)^0,w,c
 24506  01A870  6EDA               	movwf	fsr2h,c
 24507  01A872  0EF8               	movlw	-8
 24508  01A874  006F FF8F FFDF     	movff	plusw1,indf2
 24509                           
 24510                           ;stkvar	_c @ sp[(-4)+-4]
 24511                           ;stkvar	_n @ sp[(-4)+-6]
 24512                           ;stkvar	_s @ sp[(-4)+0]
 24513  01A87A  0EFC               	movlw	-4
 24514  01A87C  006F FF8C  F00B    	movff	plusw1,btemp+10
 24515  01A882  0EFD               	movlw	-3
 24516  01A884  006F FF8C  F00C    	movff	plusw1,btemp+11
 24517  01A88A  0EF6               	movlw	-10
 24518  01A88C  50E3               	movf	plusw1,w,c
 24519  01A88E  260B               	addwf	(btemp+10)^0,f,c
 24520  01A890  0EF7               	movlw	-9
 24521  01A892  50E3               	movf	plusw1,w,c
 24522  01A894  220C               	addwfc	(btemp+11)^0,f,c
 24523  01A896  0EFC               	movlw	252
 24524  01A898  240B               	addwf	(btemp+10)^0,w,c
 24525  01A89A  6ED9               	movwf	fsr2l,c
 24526  01A89C  0EFF               	movlw	255
 24527  01A89E  200C               	addwfc	(btemp+11)^0,w,c
 24528  01A8A0  6EDA               	movwf	fsr2h,c
 24529  01A8A2  0EF8               	movlw	-8
 24530  01A8A4  006F FF8F FFDF     	movff	plusw1,indf2
 24531                           
 24532                           ;stkvar	_n @ sp[(-4)+-6]
 24533  01A8AA  0EF7               	movlw	-9
 24534  01A8AC  50E3               	movf	plusw1,w,c
 24535  01A8AE  E108               	bnz	l15269
 24536  01A8B0  0EF6               	movlw	-10
 24537  01A8B2  006F FF8C  F001    	movff	plusw1,btemp
 24538  01A8B8  0E09               	movlw	9
 24539  01A8BA  5E01               	subwf	btemp^0,f,c
 24540  01A8BC  A0D8               	btfss	status,0,c
 24541  01A8BE  D091               	goto	u14190
 24542  01A8C0                     l15269:
 24543                           
 24544                           ;stkvar	_s @ sp[(-4)+0]
 24545  01A8C0  0EFC               	movlw	-4
 24546  01A8C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 24547  01A8C8  1E0B               	comf	(btemp+10)^0,f,c
 24548  01A8CA  0EFD               	movlw	-3
 24549  01A8CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 24550  01A8D2  1E0C               	comf	(btemp+11)^0,f,c
 24551  01A8D4  2A0B               	incf	(btemp+10)^0,f,c
 24552  01A8D6  B4D8               	btfsc	status,2,c
 24553  01A8D8  2A0C               	incf	(btemp+11)^0,f,c
 24554  01A8DA  0E03               	movlw	3
 24555  01A8DC  160B               	andwf	(btemp+10)^0,f,c
 24556  01A8DE  0E00               	movlw	0
 24557  01A8E0  160C               	andwf	(btemp+11)^0,f,c
 24558                           
 24559                           ;stkvar	_k @ sp[(-4)+2]
 24560  01A8E2  0EFE               	movlw	-2
 24561  01A8E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24562  01A8EA  0EFF               	movlw	-1
 24563  01A8EC  0060  F033  FFE3   	movff	btemp+11,plusw1
 24564                           
 24565                           ;stkvar	_k @ sp[(-4)+2]
 24566                           ;stkvar	_s @ sp[(-4)+0]
 24567  01A8F2  0EFC               	movlw	-4
 24568  01A8F4  50E3               	movf	plusw1,w,c
 24569  01A8F6  6E01               	movwf	btemp^0,c
 24570  01A8F8  0EFE               	movlw	-2
 24571  01A8FA  50E3               	movf	plusw1,w,c
 24572  01A8FC  2601               	addwf	btemp^0,f,c
 24573  01A8FE  0EFC               	movlw	-4
 24574  01A900  0060  F007  FFE3   	movff	btemp,plusw1
 24575  01A906  0EFD               	movlw	-3
 24576  01A908  50E3               	movf	plusw1,w,c
 24577  01A90A  6E01               	movwf	btemp^0,c
 24578  01A90C  0EFF               	movlw	-1
 24579  01A90E  50E3               	movf	plusw1,w,c
 24580  01A910  2201               	addwfc	btemp^0,f,c
 24581  01A912  0EFD               	movlw	-3
 24582  01A914  0060  F007  FFE3   	movff	btemp,plusw1
 24583                           
 24584                           ;stkvar	_k @ sp[(-4)+2]
 24585                           ;stkvar	_n @ sp[(-4)+-6]
 24586  01A91A  0EF6               	movlw	-10
 24587  01A91C  50E3               	movf	plusw1,w,c
 24588  01A91E  6E01               	movwf	btemp^0,c
 24589  01A920  0EFE               	movlw	-2
 24590  01A922  50E3               	movf	plusw1,w,c
 24591  01A924  5E01               	subwf	btemp^0,f,c
 24592  01A926  0EF6               	movlw	-10
 24593  01A928  0060  F007  FFE3   	movff	btemp,plusw1
 24594  01A92E  0EF7               	movlw	-9
 24595  01A930  50E3               	movf	plusw1,w,c
 24596  01A932  6E01               	movwf	btemp^0,c
 24597  01A934  0EFF               	movlw	-1
 24598  01A936  50E3               	movf	plusw1,w,c
 24599  01A938  5A01               	subwfb	btemp^0,f,c
 24600  01A93A  0EF7               	movlw	-9
 24601  01A93C  0060  F007  FFE3   	movff	btemp,plusw1
 24602  01A942  0EFC               	movlw	252
 24603  01A944  6E0B               	movwf	(btemp+10)^0,c
 24604  01A946  0EFF               	movlw	255
 24605  01A948  6E0C               	movwf	(btemp+11)^0,c
 24606                           
 24607                           ;stkvar	_n @ sp[(-4)+-6]
 24608  01A94A  0EF6               	movlw	-10
 24609  01A94C  006F FF8C  F001    	movff	plusw1,btemp
 24610  01A952  500B               	movf	(btemp+10)^0,w,c
 24611  01A954  1601               	andwf	btemp^0,f,c
 24612  01A956  0EF6               	movlw	-10
 24613  01A958  0060  F007  FFE3   	movff	btemp,plusw1
 24614  01A95E  0EF7               	movlw	-9
 24615  01A960  006F FF8C  F001    	movff	plusw1,btemp
 24616  01A966  500C               	movf	(btemp+11)^0,w,c
 24617  01A968  1601               	andwf	btemp^0,f,c
 24618  01A96A  0EF7               	movlw	-9
 24619  01A96C  D02E               	goto	L23
 24620  01A96E                     l15277:
 24621                           
 24622                           ;stkvar	_c @ sp[(-4)+-4]
 24623                           ;stkvar	_s @ sp[(-4)+0]
 24624  01A96E  0EFC               	movlw	-4
 24625  01A970  006F FF8F FFD9     	movff	plusw1,fsr2l
 24626  01A976  0EFD               	movlw	-3
 24627  01A978  006F FF8F FFDA     	movff	plusw1,fsr2h
 24628  01A97E  0EF8               	movlw	-8
 24629  01A980  006F FF8F FFDF     	movff	plusw1,indf2
 24630                           
 24631                           ;stkvar	_n @ sp[(-4)+-6]
 24632  01A986  0EF6               	movlw	-10
 24633  01A988  006F FF8C  F001    	movff	plusw1,btemp
 24634  01A98E  0E01               	movlw	1
 24635  01A990  5E01               	subwf	btemp^0,f,c
 24636  01A992  0EF6               	movlw	-10
 24637  01A994  0060  F007  FFE3   	movff	btemp,plusw1
 24638  01A99A  0EF7               	movlw	-9
 24639  01A99C  006F FF8C  F001    	movff	plusw1,btemp
 24640  01A9A2  0E00               	movlw	0
 24641  01A9A4  5A01               	subwfb	btemp^0,f,c
 24642  01A9A6  0EF7               	movlw	-9
 24643  01A9A8  0060  F007  FFE3   	movff	btemp,plusw1
 24644                           
 24645                           ;stkvar	_s @ sp[(-4)+0]
 24646  01A9AE  0EFC               	movlw	-4
 24647  01A9B0  50E3               	movf	plusw1,w,c
 24648  01A9B2  0F01               	addlw	1
 24649  01A9B4  6E01               	movwf	btemp^0,c
 24650  01A9B6  0EFC               	movlw	-4
 24651  01A9B8  0060  F007  FFE3   	movff	btemp,plusw1
 24652  01A9BE  6A01               	clrf	btemp^0,c
 24653  01A9C0  0EFD               	movlw	-3
 24654  01A9C2  50E3               	movf	plusw1,w,c
 24655  01A9C4  2001               	addwfc	btemp^0,w,c
 24656  01A9C6  6E01               	movwf	btemp^0,c
 24657  01A9C8  0EFD               	movlw	-3
 24658  01A9CA                     L23:
 24659  01A9CA  0060  F007  FFE3   	movff	btemp,plusw1
 24660                           
 24661                           ;stkvar	_n @ sp[(-4)+-6]
 24662  01A9D0  0EF6               	movlw	-10
 24663  01A9D2  006F FF8C  F001    	movff	plusw1,btemp
 24664  01A9D8  0EF7               	movlw	-9
 24665  01A9DA  50E3               	movf	plusw1,w,c
 24666  01A9DC  1001               	iorwf	btemp^0,w,c
 24667  01A9DE  A4D8               	btfss	status,2,c
 24668  01A9E0  D7C6               	goto	l15277
 24669  01A9E2                     u14190:
 24670                           
 24671                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 24672  01A9E2  0EF6               	movlw	246
 24673  01A9E4  26E1               	addwf	fsr1l,f,c
 24674  01A9E6  0EFF               	movlw	255
 24675  01A9E8  22E2               	addwfc	fsr1h,f,c
 24676  01A9EA  0012               	return		;funcret
 24677  01A9EC                     __end_of_memset:
 24678                           	opt callstack 0
 24679                           
 24680 ;; *************** function _printf *****************
 24681 ;; Defined at:
 24682 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 24683 ;; Parameters:    Size  Location     Type
 24684 ;;  fmt             2  [STACK] PTR const unsigned char 
 24685 ;;		 -> STR_69(3), STR_68(3), 
 24686 ;; Auto vars:     Size  Location     Type
 24687 ;;  ap              2  [STACK] PTR void [1]
 24688 ;;		 -> ?_printf(2), ?_sprintf(2), 
 24689 ;;  ret             2    0        int 
 24690 ;; Return value:  Size  Location     Type
 24691 ;;                  2  [STACK] int 
 24692 ;; Registers used:
 24693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24694 ;; Tracked objects:
 24695 ;;		On entry : 3F/3B
 24696 ;;		On exit  : 3F/0
 24697 ;;		Unchanged: 0/0
 24698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24703 ;;Total ram usage:        0 bytes
 24704 ;; Hardware stack levels used:    1
 24705 ;; Hardware stack levels required when called:   23
 24706 ;; This function calls:
 24707 ;;		_vfprintf
 24708 ;; This function is called by:
 24709 ;;		_eaDogM_WriteString
 24710 ;;		_send_lcd_data_dma
 24711 ;; This function uses a reentrant model
 24712 ;;
 24713                           
 24714                           	psect	text89
 24715  000DE2                     __ptext89:
 24716                           	opt callstack 0
 24717  000DE2                     _printf:
 24718                           	opt callstack 0
 24719                           
 24720                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24721  000DE2  52E6               	movf	postinc1,f,c
 24722  000DE4  52E6               	movf	postinc1,f,c
 24723                           
 24724                           ;stkvar	?_printf @ sp[(-2)+-3]
 24725                           
 24726                           ;incstack = 0
 24727  000DE6  0EFB               	movlw	251
 24728  000DE8  24E1               	addwf	fsr1l,w,c
 24729  000DEA  6E0B               	movwf	(btemp+10)^0,c
 24730  000DEC  0EFF               	movlw	255
 24731  000DEE  20E2               	addwfc	fsr1h,w,c
 24732  000DF0  6E0C               	movwf	(btemp+11)^0,c
 24733                           
 24734                           ;stkvar	_ap @ sp[(-2)+0]
 24735  000DF2  0EFF               	movlw	-1
 24736  000DF4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24737  000DFA  0EFE               	movlw	-2
 24738  000DFC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24739                           
 24740                           ;stkvar	_ap @ sp[(-2)+0]
 24741  000E02  0EFE               	movlw	254
 24742  000E04  24E1               	addwf	fsr1l,w,c
 24743  000E06  6E01               	movwf	btemp^0,c
 24744  000E08  0EFF               	movlw	255
 24745  000E0A  20E2               	addwfc	fsr1h,w,c
 24746  000E0C  6E02               	movwf	(btemp+1)^0,c
 24747  000E0E  0060  F007  FFE6   	movff	btemp,postinc1
 24748  000E14  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24749                           
 24750                           ;stkvar	_fmt @ sp[(-4)+-3]
 24751  000E1A  0EF9               	movlw	-7
 24752  000E1C  006F FF8F FFE6     	movff	plusw1,postinc1
 24753  000E22  006F FF8F FFE6     	movff	plusw1,postinc1
 24754  000E28  0E00               	movlw	0
 24755  000E2A  6EE6               	movwf	postinc1,c
 24756  000E2C  0E00               	movlw	0
 24757  000E2E  6EE6               	movwf	postinc1,c
 24758  000E30  EC10  F0FF         	call	_vfprintf	;wreg free
 24759                           
 24760                           ; BSR set to: 0
 24761                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 24762  000E34  52E5               	movf	postdec1,f,c
 24763  000E36  52E5               	movf	postdec1,f,c
 24764  000E38  52E5               	movf	postdec1,f,c
 24765  000E3A  50E7               	movf	indf1,w,c
 24766  000E3C  5EE1               	subwf	fsr1l,f,c
 24767  000E3E  0E00               	movlw	0
 24768  000E40  5AE2               	subwfb	fsr1h,f,c
 24769  000E42  0012               	return		;funcret
 24770  000E44                     __end_of_printf:
 24771                           	opt callstack 0
 24772                           
 24773 ;; *************** function _vfprintf *****************
 24774 ;; Defined at:
 24775 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 24776 ;; Parameters:    Size  Location     Type
 24777 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24778 ;;		 -> f(6), NULL(0), 
 24779 ;;  fmt             2  [STACK] PTR const unsigned char 
 24780 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(19), 
 24781 ;;		 -> STR_85(19), STR_84(19), STR_83(19), STR_82(19), 
 24782 ;;		 -> STR_81(19), STR_80(24), STR_79(15), STR_78(15), 
 24783 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 24784 ;;		 -> STR_73(19), STR_72(19), STR_69(3), STR_68(3), 
 24785 ;;		 -> STR_67(14), STR_66(21), STR_65(21), STR_64(21), 
 24786 ;;		 -> STR_63(21), STR_62(21), STR_61(21), STR_60(21), 
 24787 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 24788 ;;		 -> STR_55(21), STR_54(20), STR_53(21), STR_52(21), 
 24789 ;;		 -> STR_51(21), STR_50(22), STR_49(22), STR_48(22), 
 24790 ;;		 -> STR_47(23), STR_46(23), STR_45(23), STR_44(29), 
 24791 ;;		 -> STR_43(23), STR_42(23), STR_41(22), STR_40(22), 
 24792 ;;		 -> STR_39(22), STR_38(22), STR_37(22), STR_36(22), 
 24793 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 24794 ;;		 -> STR_31(22), STR_30(22), STR_29(17), STR_28(16), 
 24795 ;;		 -> STR_27(16), STR_26(21), STR_25(21), STR_24(21), 
 24796 ;;		 -> STR_23(26), STR_22(26), STR_21(22), STR_20(21), 
 24797 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(22), 
 24798 ;;		 -> STR_15(22), STR_14(22), STR_13(26), STR_12(21), 
 24799 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 24800 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 24801 ;;		 -> STR_2(21), STR_1(21), 
 24802 ;;  ap              2  [STACK] PTR PTR void 
 24803 ;;		 -> ap(2), ap(2), 
 24804 ;; Auto vars:     Size  Location     Type
 24805 ;;  cfmt            2  [STACK] PTR unsigned char 
 24806 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(19), 
 24807 ;;		 -> STR_85(19), STR_84(19), STR_83(19), STR_82(19), 
 24808 ;;		 -> STR_81(19), STR_80(24), STR_79(15), STR_78(15), 
 24809 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 24810 ;;		 -> STR_73(19), STR_72(19), STR_69(3), STR_68(3), 
 24811 ;;		 -> STR_67(14), STR_66(21), STR_65(21), STR_64(21), 
 24812 ;;		 -> STR_63(21), STR_62(21), STR_61(21), STR_60(21), 
 24813 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 24814 ;;		 -> STR_55(21), STR_54(20), STR_53(21), STR_52(21), 
 24815 ;;		 -> STR_51(21), STR_50(22), STR_49(22), STR_48(22), 
 24816 ;;		 -> STR_47(23), STR_46(23), STR_45(23), STR_44(29), 
 24817 ;;		 -> STR_43(23), STR_42(23), STR_41(22), STR_40(22), 
 24818 ;;		 -> STR_39(22), STR_38(22), STR_37(22), STR_36(22), 
 24819 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 24820 ;;		 -> STR_31(22), STR_30(22), STR_29(17), STR_28(16), 
 24821 ;;		 -> STR_27(16), STR_26(21), STR_25(21), STR_24(21), 
 24822 ;;		 -> STR_23(26), STR_22(26), STR_21(22), STR_20(21), 
 24823 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(22), 
 24824 ;;		 -> STR_15(22), STR_14(22), STR_13(26), STR_12(21), 
 24825 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 24826 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 24827 ;;		 -> STR_2(21), STR_1(21), 
 24828 ;; Return value:  Size  Location     Type
 24829 ;;                  2  [STACK] int 
 24830 ;; Registers used:
 24831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24832 ;; Tracked objects:
 24833 ;;		On entry : 0/2
 24834 ;;		On exit  : 3F/0
 24835 ;;		Unchanged: 0/0
 24836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24841 ;;Total ram usage:        0 bytes
 24842 ;; Hardware stack levels used:    1
 24843 ;; Hardware stack levels required when called:   22
 24844 ;; This function calls:
 24845 ;;		_vfpfcnvrt
 24846 ;; This function is called by:
 24847 ;;		_sprintf
 24848 ;;		_printf
 24849 ;; This function uses a reentrant model
 24850 ;;
 24851                           
 24852                           	psect	text90
 24853  01FE20                     __ptext90:
 24854                           	opt callstack 0
 24855  01FE20                     _vfprintf:
 24856                           	opt callstack 0
 24857                           
 24858                           ; BSR set to: 0
 24859                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24860  01FE20  52E6               	movf	postinc1,f,c
 24861  01FE22  52E6               	movf	postinc1,f,c
 24862                           
 24863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 24864                           ;stkvar	_fmt @ sp[(-2)+-4]
 24865                           
 24866                           ;incstack = 0
 24867 ;; hardware stack exceeded
 24868  01FE24  0EFA               	movlw	-6
 24869  01FE26  006F FF8C  F00B    	movff	plusw1,btemp+10
 24870  01FE2C  0EFB               	movlw	-5
 24871  01FE2E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24872                           
 24873                           ;stkvar	_cfmt @ sp[(-2)+0]
 24874  01FE34  0EFF               	movlw	-1
 24875  01FE36  0060  F033  FFE3   	movff	btemp+11,plusw1
 24876  01FE3C  0EFE               	movlw	-2
 24877  01FE3E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24878                           
 24879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 24880  01FE44  0100               	movlb	0	; () banked
 24881  01FE46  6BC4               	clrf	_nout& (0+255),b
 24882  01FE48  6BC5               	clrf	(_nout+1)& (0+255),b
 24883                           
 24884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 24885  01FE4A  D021               	goto	l16265
 24886  01FE4C                     l16263:
 24887                           
 24888                           ; BSR set to: 0
 24889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 24890                           ;stkvar	_ap @ sp[(-2)+-6]
 24891  01FE4C  0EF8               	movlw	-8
 24892  01FE4E  006F FF8F FFE6     	movff	plusw1,postinc1
 24893  01FE54  006F FF8F FFE6     	movff	plusw1,postinc1
 24894                           
 24895                           ;stkvar	_cfmt @ sp[(-4)+0]
 24896  01FE5A  0EFC               	movlw	252
 24897  01FE5C  24E1               	addwf	fsr1l,w,c
 24898  01FE5E  6E01               	movwf	btemp^0,c
 24899  01FE60  0EFF               	movlw	255
 24900  01FE62  20E2               	addwfc	fsr1h,w,c
 24901  01FE64  6E02               	movwf	(btemp+1)^0,c
 24902  01FE66  0060  F007  FFE6   	movff	btemp,postinc1
 24903  01FE6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24904                           
 24905                           ;stkvar	_fp @ sp[(-6)+-2]
 24906  01FE72  0EF8               	movlw	-8
 24907  01FE74  006F FF8F FFE6     	movff	plusw1,postinc1
 24908  01FE7A  006F FF8F FFE6     	movff	plusw1,postinc1
 24909  01FE80  EC72  F09B         	call	_vfpfcnvrt	;wreg free
 24910  01FE84  5001               	movf	btemp^0,w,c
 24911  01FE86  0100               	movlb	0	; () banked
 24912  01FE88  27C4               	addwf	_nout& (0+255),f,b
 24913  01FE8A  5002               	movf	(btemp+1)^0,w,c
 24914  01FE8C  23C5               	addwfc	(_nout+1)& (0+255),f,b
 24915  01FE8E                     l16265:
 24916                           
 24917                           ; BSR set to: 0
 24918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 24919                           ;stkvar	_cfmt @ sp[(-2)+0]
 24920  01FE8E  50E1               	movf	fsr1l,w,c
 24921  01FE90  0FFE               	addlw	-2
 24922  01FE92  6ED9               	movwf	fsr2l,c
 24923  01FE94  50E2               	movf	fsr1h,w,c
 24924  01FE96  6EDA               	movwf	fsr2h,c
 24925  01FE98  0EFF               	movlw	255
 24926  01FE9A  22DA               	addwfc	fsr2h,f,c
 24927  01FE9C  006F FF7B FFF6     	movff	postinc2,tblptrl
 24928  01FEA2  006F FF77 FFF7     	movff	postdec2,tblptrh
 24929  01FEA8                     	if	0	;tblptru may be non-zero
 24930  01FEA8                     	endif
 24931  01FEA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24932  01FEA8  0E00               	movlw	low (__mediumconst shr (0+16))
 24933  01FEAA  6EF8               	movwf	tblptru,c
 24934  01FEAC                     	endif
 24935  01FEAC  0008               	tblrd		*
 24936  01FEAE  50F5               	movf	tablat,w,c
 24937  01FEB0  0900               	iorlw	0
 24938  01FEB2  A4D8               	btfss	status,2,c
 24939  01FEB4  D7CB               	goto	l16263
 24940                           
 24941                           ; BSR set to: 0
 24942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 24943  01FEB6  0060  F310  F001   	movff	_nout,btemp
 24944  01FEBC  0060  F314  F002   	movff	_nout+1,btemp+1
 24945                           
 24946                           ; BSR set to: 0
 24947                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 24948  01FEC2  0EF8               	movlw	248
 24949  01FEC4  26E1               	addwf	fsr1l,f,c
 24950  01FEC6  0EFF               	movlw	255
 24951  01FEC8  22E2               	addwfc	fsr1h,f,c
 24952  01FECA  0012               	return		;funcret
 24953  01FECC                     __end_of_vfprintf:
 24954                           	opt callstack 0
 24955                           
 24956 ;; *************** function _vfpfcnvrt *****************
 24957 ;; Defined at:
 24958 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 24959 ;; Parameters:    Size  Location     Type
 24960 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24961 ;;		 -> f(6), NULL(0), 
 24962 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 24963 ;;		 -> cfmt(2), 
 24964 ;;  ap              2  [STACK] PTR PTR void 
 24965 ;;		 -> ap(2), ap(2), 
 24966 ;; Auto vars:     Size  Location     Type
 24967 ;;  llu             8  [STACK] unsigned long long 
 24968 ;;  ll              8  [STACK] long long 
 24969 ;;  f               4  [STACK] long long 
 24970 ;;  ct              3  [STACK] unsigned char [3]
 24971 ;;  vp              3    0        PTR void 
 24972 ;;  cp              2  [STACK] PTR unsigned char 
 24973 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_71(9), 
 24974 ;;		 -> STR_70(12), D.lcd(640), D(642), T(144), 
 24975 ;;		 -> STR_3(5), V(192), 
 24976 ;;  i               2    0        int 
 24977 ;;  done            2    0        int 
 24978 ;;  c               1  [STACK] unsigned char 
 24979 ;; Return value:  Size  Location     Type
 24980 ;;                  2  [STACK] int 
 24981 ;; Registers used:
 24982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 24983 ;; Tracked objects:
 24984 ;;		On entry : 0/0
 24985 ;;		On exit  : 0/0
 24986 ;;		Unchanged: 0/0
 24987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24992 ;;Total ram usage:        0 bytes
 24993 ;; Hardware stack levels used:    1
 24994 ;; Hardware stack levels required when called:   21
 24995 ;; This function calls:
 24996 ;;		_atoi
 24997 ;;		_ctoa
 24998 ;;		_dtoa
 24999 ;;		_efgtoa
 25000 ;;		_fputc
 25001 ;;		_isdigit
 25002 ;;		_isupper
 25003 ;;		_stoa
 25004 ;;		_strncmp
 25005 ;;		_tolower
 25006 ;;		_utoa
 25007 ;;		_xtoa
 25008 ;; This function is called by:
 25009 ;;		_vfprintf
 25010 ;; This function uses a reentrant model
 25011 ;;
 25012                           
 25013                           	psect	text91
 25014  0136E4                     __ptext91:
 25015                           	opt callstack 0
 25016  0136E4                     _vfpfcnvrt:
 25017                           	opt callstack 0
 25018                           
 25019                           ; BSR set to: 0
 25020                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25021  0136E4  0E20               	movlw	32
 25022  0136E6  26E1               	addwf	fsr1l,f,c
 25023  0136E8  0E00               	movlw	0
 25024  0136EA  22E2               	addwfc	fsr1h,f,c
 25025                           
 25026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 25027                           ;stkvar	_fmt @ sp[(-32)+-4]
 25028                           
 25029                           ;incstack = 0
 25030 ;; hardware stack exceeded
 25031  0136EC  0EDC               	movlw	-36
 25032  0136EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 25033  0136F4  0EDD               	movlw	-35
 25034  0136F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 25035  0136FC  006F FF7B FFF6     	movff	postinc2,tblptrl
 25036  013702  006F FF77 FFF7     	movff	postdec2,tblptrh
 25037  013708                     	if	0	;tblptru may be non-zero
 25038  013708                     	endif
 25039  013708                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25040  013708  0E00               	movlw	low (__mediumconst shr (0+16))
 25041  01370A  6EF8               	movwf	tblptru,c
 25042  01370C                     	endif
 25043  01370C  0008               	tblrd		*
 25044  01370E  50F5               	movf	tablat,w,c
 25045  013710  0A25               	xorlw	37
 25046  013712  A4D8               	btfss	status,2,c
 25047  013714  EF19  F0A3         	goto	l16147
 25048                           
 25049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 25050                           ;stkvar	_fmt @ sp[(-32)+-4]
 25051  013718  0EDC               	movlw	-36
 25052  01371A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25053  013720  0EDD               	movlw	-35
 25054  013722  006F FF8F FFDA     	movff	plusw1,fsr2h
 25055  013728  2ADE               	incf	postinc2,f,c
 25056  01372A  0E00               	movlw	0
 25057  01372C  22DD               	addwfc	postdec2,f,c
 25058                           
 25059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 25060  01372E  6A3A               	clrf	_width^0,c
 25061  013730  6A3B               	clrf	(_width+1)^0,c
 25062  013732  6A3E               	clrf	_flags^0,c
 25063  013734  6A3F               	clrf	(_flags+1)^0,c
 25064                           
 25065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 25066  013736  683C               	setf	_prec^0,c
 25067  013738  683D               	setf	(_prec+1)^0,c
 25068                           
 25069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 25070                           ;stkvar	_fmt @ sp[(-32)+-4]
 25071  01373A  0EDC               	movlw	-36
 25072  01373C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25073  013742  0EDD               	movlw	-35
 25074  013744  006F FF8F FFDA     	movff	plusw1,fsr2h
 25075  01374A  006F FF7B FFF6     	movff	postinc2,tblptrl
 25076  013750  006F FF77 FFF7     	movff	postdec2,tblptrh
 25077  013756                     	if	0	;tblptru may be non-zero
 25078  013756                     	endif
 25079  013756                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25080  013756  0E00               	movlw	low (__mediumconst shr (0+16))
 25081  013758  6EF8               	movwf	tblptru,c
 25082  01375A                     	endif
 25083  01375A  0008               	tblrd		*
 25084  01375C  50F5               	movf	tablat,w,c
 25085  01375E  0A2A               	xorlw	42
 25086  013760  A4D8               	btfss	status,2,c
 25087  013762  D031               	goto	l15965
 25088                           
 25089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 25090                           ;stkvar	_fmt @ sp[(-32)+-4]
 25091  013764  0EDC               	movlw	-36
 25092  013766  006F FF8F FFD9     	movff	plusw1,fsr2l
 25093  01376C  0EDD               	movlw	-35
 25094  01376E  006F FF8F FFDA     	movff	plusw1,fsr2h
 25095  013774  2ADE               	incf	postinc2,f,c
 25096  013776  0E00               	movlw	0
 25097  013778  22DD               	addwfc	postdec2,f,c
 25098                           
 25099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 25100                           ;stkvar	_ap @ sp[(-32)+-6]
 25101  01377A  0EDA               	movlw	-38
 25102  01377C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25103  013782  0EDB               	movlw	-37
 25104  013784  006F FF8F FFDA     	movff	plusw1,fsr2h
 25105  01378A  0E02               	movlw	2
 25106  01378C  5EDE               	subwf	postinc2,f,c
 25107  01378E  0E00               	movlw	0
 25108  013790  5ADD               	subwfb	postdec2,f,c
 25109  013792  006F FF78  F00B    	movff	postinc2,btemp+10
 25110  013798  006F FF74  F00C    	movff	postdec2,btemp+11
 25111  01379E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 25112  0137A4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 25113  0137AA  006F FF78  F03A    	movff	postinc2,_width
 25114  0137B0  006F FF74  F03B    	movff	postdec2,_width+1
 25115                           
 25116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 25117  0137B6  AE3B               	btfss	(_width+1)^0,7,c
 25118  0137B8  D066               	goto	u15460
 25119                           
 25120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 25121  0137BA  803E               	bsf	_flags^0,0,c
 25122                           
 25123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 25124  0137BC  6C3A               	negf	_width^0,c
 25125  0137BE  1E3B               	comf	(_width+1)^0,f,c
 25126  0137C0  B0D8               	btfsc	status,0,c
 25127  0137C2  2A3B               	incf	(_width+1)^0,f,c
 25128  0137C4  D060               	goto	u15460
 25129  0137C6                     l15965:
 25130                           
 25131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 25132                           ;stkvar	_fmt @ sp[(-32)+-4]
 25133  0137C6  0EDC               	movlw	-36
 25134  0137C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 25135  0137CE  0EDD               	movlw	-35
 25136  0137D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 25137  0137D6  006F FF78  F00B    	movff	postinc2,btemp+10
 25138  0137DC  006F FF74  F00C    	movff	postdec2,btemp+11
 25139  0137E2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25140  0137E8  0060  F033  FFE6   	movff	btemp+11,postinc1
 25141  0137EE  EC81  F0DB         	call	_atoi	;wreg free
 25142  0137F2  0060  F004  F03A   	movff	btemp,_width
 25143  0137F8  0060  F008  F03B   	movff	btemp+1,_width+1
 25144                           
 25145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 25146  0137FE  D00B               	goto	l15969
 25147  013800                     l15967:
 25148                           
 25149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 25150                           ;stkvar	_fmt @ sp[(-32)+-4]
 25151  013800  0EDC               	movlw	-36
 25152  013802  006F FF8F FFD9     	movff	plusw1,fsr2l
 25153  013808  0EDD               	movlw	-35
 25154  01380A  006F FF8F FFDA     	movff	plusw1,fsr2h
 25155  013810  2ADE               	incf	postinc2,f,c
 25156  013812  0E00               	movlw	0
 25157  013814  22DD               	addwfc	postdec2,f,c
 25158  013816                     l15969:
 25159  013816  0ED0               	movlw	208
 25160  013818  6E0B               	movwf	(btemp+10)^0,c
 25161  01381A  0EFF               	movlw	255
 25162  01381C  6E0C               	movwf	(btemp+11)^0,c
 25163                           
 25164                           ;stkvar	_fmt @ sp[(-32)+-4]
 25165  01381E  0EDC               	movlw	-36
 25166  013820  006F FF8F FFD9     	movff	plusw1,fsr2l
 25167  013826  0EDD               	movlw	-35
 25168  013828  006F FF8F FFDA     	movff	plusw1,fsr2h
 25169  01382E  006F FF7B FFF6     	movff	postinc2,tblptrl
 25170  013834  006F FF77 FFF7     	movff	postdec2,tblptrh
 25171  01383A                     	if	0	;tblptru may be non-zero
 25172  01383A                     	endif
 25173  01383A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25174  01383A  0E00               	movlw	low (__mediumconst shr (0+16))
 25175  01383C  6EF8               	movwf	tblptru,c
 25176  01383E                     	endif
 25177  01383E  0008               	tblrd		*
 25178  013840  50F5               	movf	tablat,w,c
 25179  013842  6E09               	movwf	(btemp+8)^0,c
 25180  013844  6A0A               	clrf	(btemp+9)^0,c
 25181  013846  500B               	movf	(btemp+10)^0,w,c
 25182  013848  2609               	addwf	(btemp+8)^0,f,c
 25183  01384A  500C               	movf	(btemp+11)^0,w,c
 25184  01384C  220A               	addwfc	(btemp+9)^0,f,c
 25185  01384E  500A               	movf	(btemp+9)^0,w,c
 25186  013850  E106               	bnz	u15440
 25187  013852  0E0A               	movlw	10
 25188  013854  5C09               	subwf	(btemp+8)^0,w,c
 25189  013856  B0D8               	btfsc	status,0,c
 25190  013858  D002               	goto	u15440
 25191  01385A  0E01               	movlw	1
 25192  01385C  D001               	goto	u15450
 25193  01385E                     u15440:
 25194  01385E  0E00               	movlw	0
 25195  013860                     u15450:
 25196  013860  6E0B               	movwf	(btemp+10)^0,c
 25197  013862  6A0C               	clrf	(btemp+11)^0,c
 25198                           
 25199                           ;stkvar	_vfpfcnvrt$6898 @ sp[(-32)+4]
 25200  013864  0EE4               	movlw	-28
 25201  013866  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25202  01386C  0EE5               	movlw	-27
 25203  01386E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25204                           
 25205                           ;stkvar	_vfpfcnvrt$6898 @ sp[(-32)+4]
 25206  013874  0EE4               	movlw	-28
 25207  013876  006F FF8C  F001    	movff	plusw1,btemp
 25208  01387C  0EE5               	movlw	-27
 25209  01387E  50E3               	movf	plusw1,w,c
 25210  013880  1001               	iorwf	btemp^0,w,c
 25211  013882  A4D8               	btfss	status,2,c
 25212  013884  D7BD               	goto	l15967
 25213  013886                     u15460:
 25214                           
 25215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 25216                           ;stkvar	_fmt @ sp[(-32)+-4]
 25217  013886  0EDC               	movlw	-36
 25218  013888  006F FF8F FFD9     	movff	plusw1,fsr2l
 25219  01388E  0EDD               	movlw	-35
 25220  013890  006F FF8F FFDA     	movff	plusw1,fsr2h
 25221  013896  006F FF7B FFF6     	movff	postinc2,tblptrl
 25222  01389C  006F FF77 FFF7     	movff	postdec2,tblptrh
 25223  0138A2                     	if	0	;tblptru may be non-zero
 25224  0138A2                     	endif
 25225  0138A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25226  0138A2  0E00               	movlw	low (__mediumconst shr (0+16))
 25227  0138A4  6EF8               	movwf	tblptru,c
 25228  0138A6                     	endif
 25229  0138A6  0008               	tblrd		*
 25230  0138A8  50F5               	movf	tablat,w,c
 25231  0138AA  0A2E               	xorlw	46
 25232  0138AC  A4D8               	btfss	status,2,c
 25233  0138AE  D0AC               	goto	u15510
 25234                           
 25235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 25236  0138B0  6A3C               	clrf	_prec^0,c
 25237  0138B2  6A3D               	clrf	(_prec+1)^0,c
 25238                           
 25239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 25240                           ;stkvar	_fmt @ sp[(-32)+-4]
 25241  0138B4  0EDC               	movlw	-36
 25242  0138B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 25243  0138BC  0EDD               	movlw	-35
 25244  0138BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 25245  0138C4  2ADE               	incf	postinc2,f,c
 25246  0138C6  0E00               	movlw	0
 25247  0138C8  22DD               	addwfc	postdec2,f,c
 25248                           
 25249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 25250                           ;stkvar	_fmt @ sp[(-32)+-4]
 25251  0138CA  0EDC               	movlw	-36
 25252  0138CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 25253  0138D2  0EDD               	movlw	-35
 25254  0138D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 25255  0138DA  006F FF7B FFF6     	movff	postinc2,tblptrl
 25256  0138E0  006F FF77 FFF7     	movff	postdec2,tblptrh
 25257  0138E6                     	if	0	;tblptru may be non-zero
 25258  0138E6                     	endif
 25259  0138E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25260  0138E6  0E00               	movlw	low (__mediumconst shr (0+16))
 25261  0138E8  6EF8               	movwf	tblptru,c
 25262  0138EA                     	endif
 25263  0138EA  0008               	tblrd		*
 25264  0138EC  50F5               	movf	tablat,w,c
 25265  0138EE  0A2A               	xorlw	42
 25266  0138F0  A4D8               	btfss	status,2,c
 25267  0138F2  D02A               	goto	l15987
 25268                           
 25269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 25270                           ;stkvar	_fmt @ sp[(-32)+-4]
 25271  0138F4  0EDC               	movlw	-36
 25272  0138F6  006F FF8F FFD9     	movff	plusw1,fsr2l
 25273  0138FC  0EDD               	movlw	-35
 25274  0138FE  006F FF8F FFDA     	movff	plusw1,fsr2h
 25275  013904  2ADE               	incf	postinc2,f,c
 25276  013906  0E00               	movlw	0
 25277  013908  22DD               	addwfc	postdec2,f,c
 25278                           
 25279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 25280                           ;stkvar	_ap @ sp[(-32)+-6]
 25281  01390A  0EDA               	movlw	-38
 25282  01390C  006F FF8F FFD9     	movff	plusw1,fsr2l
 25283  013912  0EDB               	movlw	-37
 25284  013914  006F FF8F FFDA     	movff	plusw1,fsr2h
 25285  01391A  0E02               	movlw	2
 25286  01391C  5EDE               	subwf	postinc2,f,c
 25287  01391E  0E00               	movlw	0
 25288  013920  5ADD               	subwfb	postdec2,f,c
 25289  013922  006F FF78  F00B    	movff	postinc2,btemp+10
 25290  013928  006F FF74  F00C    	movff	postdec2,btemp+11
 25291  01392E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 25292  013934  0060  F033  FFDA   	movff	btemp+11,fsr2h
 25293  01393A  006F FF78  F03C    	movff	postinc2,_prec
 25294  013940  006F FF74  F03D    	movff	postdec2,_prec+1
 25295                           
 25296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 25297  013946  D060               	goto	u15510
 25298  013948                     l15987:
 25299                           
 25300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 25301                           ;stkvar	_fmt @ sp[(-32)+-4]
 25302  013948  0EDC               	movlw	-36
 25303  01394A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25304  013950  0EDD               	movlw	-35
 25305  013952  006F FF8F FFDA     	movff	plusw1,fsr2h
 25306  013958  006F FF78  F00B    	movff	postinc2,btemp+10
 25307  01395E  006F FF74  F00C    	movff	postdec2,btemp+11
 25308  013964  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25309  01396A  0060  F033  FFE6   	movff	btemp+11,postinc1
 25310  013970  EC81  F0DB         	call	_atoi	;wreg free
 25311  013974  0060  F004  F03C   	movff	btemp,_prec
 25312  01397A  0060  F008  F03D   	movff	btemp+1,_prec+1
 25313                           
 25314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 25315  013980  D00B               	goto	l15991
 25316  013982                     l15989:
 25317                           
 25318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 25319                           ;stkvar	_fmt @ sp[(-32)+-4]
 25320  013982  0EDC               	movlw	-36
 25321  013984  006F FF8F FFD9     	movff	plusw1,fsr2l
 25322  01398A  0EDD               	movlw	-35
 25323  01398C  006F FF8F FFDA     	movff	plusw1,fsr2h
 25324  013992  2ADE               	incf	postinc2,f,c
 25325  013994  0E00               	movlw	0
 25326  013996  22DD               	addwfc	postdec2,f,c
 25327  013998                     l15991:
 25328  013998  0ED0               	movlw	208
 25329  01399A  6E0B               	movwf	(btemp+10)^0,c
 25330  01399C  0EFF               	movlw	255
 25331  01399E  6E0C               	movwf	(btemp+11)^0,c
 25332                           
 25333                           ;stkvar	_fmt @ sp[(-32)+-4]
 25334  0139A0  0EDC               	movlw	-36
 25335  0139A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 25336  0139A8  0EDD               	movlw	-35
 25337  0139AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 25338  0139B0  006F FF7B FFF6     	movff	postinc2,tblptrl
 25339  0139B6  006F FF77 FFF7     	movff	postdec2,tblptrh
 25340  0139BC                     	if	0	;tblptru may be non-zero
 25341  0139BC                     	endif
 25342  0139BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25343  0139BC  0E00               	movlw	low (__mediumconst shr (0+16))
 25344  0139BE  6EF8               	movwf	tblptru,c
 25345  0139C0                     	endif
 25346  0139C0  0008               	tblrd		*
 25347  0139C2  50F5               	movf	tablat,w,c
 25348  0139C4  6E09               	movwf	(btemp+8)^0,c
 25349  0139C6  6A0A               	clrf	(btemp+9)^0,c
 25350  0139C8  500B               	movf	(btemp+10)^0,w,c
 25351  0139CA  2609               	addwf	(btemp+8)^0,f,c
 25352  0139CC  500C               	movf	(btemp+11)^0,w,c
 25353  0139CE  220A               	addwfc	(btemp+9)^0,f,c
 25354  0139D0  500A               	movf	(btemp+9)^0,w,c
 25355  0139D2  E106               	bnz	u15490
 25356  0139D4  0E0A               	movlw	10
 25357  0139D6  5C09               	subwf	(btemp+8)^0,w,c
 25358  0139D8  B0D8               	btfsc	status,0,c
 25359  0139DA  D002               	goto	u15490
 25360  0139DC  0E01               	movlw	1
 25361  0139DE  D001               	goto	u15500
 25362  0139E0                     u15490:
 25363  0139E0  0E00               	movlw	0
 25364  0139E2                     u15500:
 25365  0139E2  6E0B               	movwf	(btemp+10)^0,c
 25366  0139E4  6A0C               	clrf	(btemp+11)^0,c
 25367                           
 25368                           ;stkvar	_vfpfcnvrt$6899 @ sp[(-32)+0]
 25369  0139E6  0EE0               	movlw	-32
 25370  0139E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25371  0139EE  0EE1               	movlw	-31
 25372  0139F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25373                           
 25374                           ;stkvar	_vfpfcnvrt$6899 @ sp[(-32)+0]
 25375  0139F6  0EE0               	movlw	-32
 25376  0139F8  006F FF8C  F001    	movff	plusw1,btemp
 25377  0139FE  0EE1               	movlw	-31
 25378  013A00  50E3               	movf	plusw1,w,c
 25379  013A02  1001               	iorwf	btemp^0,w,c
 25380  013A04  A4D8               	btfss	status,2,c
 25381  013A06  D7BD               	goto	l15989
 25382  013A08                     u15510:
 25383                           
 25384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 25385                           ;stkvar	_fmt @ sp[(-32)+-4]
 25386  013A08  0EDC               	movlw	-36
 25387  013A0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25388  013A10  0EDD               	movlw	-35
 25389  013A12  006F FF8F FFDA     	movff	plusw1,fsr2h
 25390  013A18  006F FF7B FFF6     	movff	postinc2,tblptrl
 25391  013A1E  006F FF77 FFF7     	movff	postdec2,tblptrh
 25392  013A24                     	if	0	;tblptru may be non-zero
 25393  013A24                     	endif
 25394  013A24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25395  013A24  0E00               	movlw	low (__mediumconst shr (0+16))
 25396  013A26  6EF8               	movwf	tblptru,c
 25397  013A28                     	endif
 25398  013A28  0008               	tblrd		*
 25399  013A2A  50F5               	movf	tablat,w,c
 25400  013A2C  6EE6               	movwf	postinc1,c
 25401  013A2E  0E00               	movlw	0
 25402  013A30  6EE6               	movwf	postinc1,c
 25403  013A32  ECA7  F003         	call	_tolower	;wreg free
 25404                           
 25405                           ;stkvar	_ct @ sp[(-32)+26]
 25406  013A36  0EFA               	movlw	-6
 25407  013A38  0060  F007  FFE3   	movff	btemp,plusw1
 25408                           
 25409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 25410                           ;stkvar	_ct @ sp[(-32)+26]
 25411  013A3E  0EFA               	movlw	-6
 25412  013A40  50E3               	movf	plusw1,w,c
 25413  013A42  B4D8               	btfsc	status,2,c
 25414  013A44  D05B               	goto	l16007
 25415                           
 25416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 25417                           ;stkvar	_ct @ sp[(-32)+26]
 25418  013A46  0EFB               	movlw	251
 25419  013A48  24E1               	addwf	fsr1l,w,c
 25420  013A4A  6ED9               	movwf	fsr2l,c
 25421  013A4C  0EFF               	movlw	255
 25422  013A4E  20E2               	addwfc	fsr1h,w,c
 25423  013A50  6EDA               	movwf	fsr2h,c
 25424                           
 25425                           ;stkvar	_fmt @ sp[(-32)+-4]
 25426  013A52  0EDC               	movlw	-36
 25427  013A54  006F FF8F FFE9     	movff	plusw1,fsr0l
 25428  013A5A  0EDD               	movlw	-35
 25429  013A5C  006F FF8F FFEA     	movff	plusw1,fsr0h
 25430  013A62  006F FFB8  F00B    	movff	postinc0,btemp+10
 25431  013A68  006F FFB4  F00C    	movff	postdec0,btemp+11
 25432  013A6E  0E01               	movlw	1
 25433  013A70  260B               	addwf	(btemp+10)^0,f,c
 25434  013A72  0E00               	movlw	0
 25435  013A74  220C               	addwfc	(btemp+11)^0,f,c
 25436  013A76  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 25437  013A7C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 25438  013A82                     	if	0	;tblptru may be non-zero
 25439  013A82                     	endif
 25440  013A82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25441  013A82  0E00               	movlw	low (__mediumconst shr (0+16))
 25442  013A84  6EF8               	movwf	tblptru,c
 25443  013A86                     	endif
 25444  013A86  0008               	tblrd		*
 25445  013A88  50F5               	movf	tablat,w,c
 25446  013A8A  6EE6               	movwf	postinc1,c
 25447  013A8C  0E00               	movlw	0
 25448  013A8E  6EE6               	movwf	postinc1,c
 25449  013A90  ECA7  F003         	call	_tolower	;wreg free
 25450  013A94  5001               	movf	btemp^0,w,c
 25451  013A96  6EDF               	movwf	indf2,c
 25452                           
 25453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 25454                           ;stkvar	_ct @ sp[(-32)+26]
 25455  013A98  0EFB               	movlw	251
 25456  013A9A  24E1               	addwf	fsr1l,w,c
 25457  013A9C  6ED9               	movwf	fsr2l,c
 25458  013A9E  0EFF               	movlw	255
 25459  013AA0  20E2               	addwfc	fsr1h,w,c
 25460  013AA2  6EDA               	movwf	fsr2h,c
 25461  013AA4  50DF               	movf	indf2,w,c
 25462  013AA6  B4D8               	btfsc	status,2,c
 25463  013AA8  D029               	goto	l16007
 25464                           
 25465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 25466                           ;stkvar	_ct @ sp[(-32)+26]
 25467  013AAA  0EFC               	movlw	252
 25468  013AAC  24E1               	addwf	fsr1l,w,c
 25469  013AAE  6ED9               	movwf	fsr2l,c
 25470  013AB0  0EFF               	movlw	255
 25471  013AB2  20E2               	addwfc	fsr1h,w,c
 25472  013AB4  6EDA               	movwf	fsr2h,c
 25473                           
 25474                           ;stkvar	_fmt @ sp[(-32)+-4]
 25475  013AB6  0EDC               	movlw	-36
 25476  013AB8  006F FF8F FFE9     	movff	plusw1,fsr0l
 25477  013ABE  0EDD               	movlw	-35
 25478  013AC0  006F FF8F FFEA     	movff	plusw1,fsr0h
 25479  013AC6  006F FFB8  F00B    	movff	postinc0,btemp+10
 25480  013ACC  006F FFB4  F00C    	movff	postdec0,btemp+11
 25481  013AD2  0E02               	movlw	2
 25482  013AD4  260B               	addwf	(btemp+10)^0,f,c
 25483  013AD6  0E00               	movlw	0
 25484  013AD8  220C               	addwfc	(btemp+11)^0,f,c
 25485  013ADA  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 25486  013AE0  0060  F033  FFF7   	movff	btemp+11,tblptrh
 25487  013AE6                     	if	0	;tblptru may be non-zero
 25488  013AE6                     	endif
 25489  013AE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25490  013AE6  0E00               	movlw	low (__mediumconst shr (0+16))
 25491  013AE8  6EF8               	movwf	tblptru,c
 25492  013AEA                     	endif
 25493  013AEA  0008               	tblrd		*
 25494  013AEC  50F5               	movf	tablat,w,c
 25495  013AEE  6EE6               	movwf	postinc1,c
 25496  013AF0  0E00               	movlw	0
 25497  013AF2  6EE6               	movwf	postinc1,c
 25498  013AF4  ECA7  F003         	call	_tolower	;wreg free
 25499  013AF8  5001               	movf	btemp^0,w,c
 25500  013AFA  6EDF               	movwf	indf2,c
 25501  013AFC                     l16007:
 25502                           
 25503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 25504                           ;stkvar	_fmt @ sp[(-32)+-4]
 25505  013AFC  0EDC               	movlw	-36
 25506  013AFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 25507  013B04  0EDD               	movlw	-35
 25508  013B06  006F FF8F FFDA     	movff	plusw1,fsr2h
 25509  013B0C  006F FF7B FFF6     	movff	postinc2,tblptrl
 25510  013B12  006F FF77 FFF7     	movff	postdec2,tblptrh
 25511  013B18                     	if	0	;tblptru may be non-zero
 25512  013B18                     	endif
 25513  013B18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25514  013B18  0E00               	movlw	low (__mediumconst shr (0+16))
 25515  013B1A  6EF8               	movwf	tblptru,c
 25516  013B1C                     	endif
 25517  013B1C  0008               	tblrd		*
 25518  013B1E  50F5               	movf	tablat,w,c
 25519  013B20  0A63               	xorlw	99
 25520  013B22  A4D8               	btfss	status,2,c
 25521  013B24  D037               	goto	l16017
 25522                           
 25523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 25524                           ;stkvar	_fmt @ sp[(-32)+-4]
 25525  013B26  0EDC               	movlw	-36
 25526  013B28  006F FF8F FFD9     	movff	plusw1,fsr2l
 25527  013B2E  0EDD               	movlw	-35
 25528  013B30  006F FF8F FFDA     	movff	plusw1,fsr2h
 25529  013B36  2ADE               	incf	postinc2,f,c
 25530  013B38  0E00               	movlw	0
 25531  013B3A  22DD               	addwfc	postdec2,f,c
 25532                           
 25533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 25534                           ;stkvar	_ap @ sp[(-32)+-6]
 25535  013B3C  0EDA               	movlw	-38
 25536  013B3E  006F FF8F FFD9     	movff	plusw1,fsr2l
 25537  013B44  0EDB               	movlw	-37
 25538  013B46  006F FF8F FFDA     	movff	plusw1,fsr2h
 25539  013B4C  0E02               	movlw	2
 25540  013B4E  5EDE               	subwf	postinc2,f,c
 25541  013B50  0E00               	movlw	0
 25542  013B52  5ADD               	subwfb	postdec2,f,c
 25543  013B54  006F FF78  F00B    	movff	postinc2,btemp+10
 25544  013B5A  006F FF74  F00C    	movff	postdec2,btemp+11
 25545  013B60  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 25546  013B66  0060  F033  FFDA   	movff	btemp+11,fsr2h
 25547  013B6C  50DF               	movf	indf2,w,c
 25548  013B6E  6E0C               	movwf	(btemp+11)^0,c
 25549                           
 25550                           ;stkvar	_c @ sp[(-32)+31]
 25551  013B70  0EFF               	movlw	-1
 25552  013B72  0060  F033  FFE3   	movff	btemp+11,plusw1
 25553                           
 25554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 25555                           ;stkvar	_c @ sp[(-32)+31]
 25556  013B78  0EFF               	movlw	-1
 25557  013B7A  50E3               	movf	plusw1,w,c
 25558  013B7C  6EE6               	movwf	postinc1,c
 25559                           
 25560                           ;stkvar	_fp @ sp[(-33)+-2]
 25561  013B7E  0EDD               	movlw	-35
 25562  013B80  006F FF8F FFE6     	movff	plusw1,postinc1
 25563  013B86  006F FF8F FFE6     	movff	plusw1,postinc1
 25564  013B8C  ECBC  F0FF         	call	_ctoa	;wreg free
 25565  013B90  EF43  F0A3         	goto	l2674
 25566  013B94                     l16017:
 25567                           
 25568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 25569                           ;stkvar	_fmt @ sp[(-32)+-4]
 25570  013B94  0EDC               	movlw	-36
 25571  013B96  006F FF8F FFD9     	movff	plusw1,fsr2l
 25572  013B9C  0EDD               	movlw	-35
 25573  013B9E  006F FF8F FFDA     	movff	plusw1,fsr2h
 25574  013BA4  006F FF7B FFF6     	movff	postinc2,tblptrl
 25575  013BAA  006F FF77 FFF7     	movff	postdec2,tblptrh
 25576  013BB0                     	if	0	;tblptru may be non-zero
 25577  013BB0                     	endif
 25578  013BB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25579  013BB0  0E00               	movlw	low (__mediumconst shr (0+16))
 25580  013BB2  6EF8               	movwf	tblptru,c
 25581  013BB4                     	endif
 25582  013BB4  0008               	tblrd		*
 25583  013BB6  50F5               	movf	tablat,w,c
 25584  013BB8  0A64               	xorlw	100
 25585  013BBA  B4D8               	btfsc	status,2,c
 25586  013BBC  D015               	goto	u15560
 25587                           
 25588                           ;stkvar	_fmt @ sp[(-32)+-4]
 25589  013BBE  0EDC               	movlw	-36
 25590  013BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
 25591  013BC6  0EDD               	movlw	-35
 25592  013BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
 25593  013BCE  006F FF7B FFF6     	movff	postinc2,tblptrl
 25594  013BD4  006F FF77 FFF7     	movff	postdec2,tblptrh
 25595  013BDA                     	if	0	;tblptru may be non-zero
 25596  013BDA                     	endif
 25597  013BDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25598  013BDA  0E00               	movlw	low (__mediumconst shr (0+16))
 25599  013BDC  6EF8               	movwf	tblptru,c
 25600  013BDE                     	endif
 25601  013BDE  0008               	tblrd		*
 25602  013BE0  50F5               	movf	tablat,w,c
 25603  013BE2  0A69               	xorlw	105
 25604  013BE4  A4D8               	btfss	status,2,c
 25605  013BE6  D076               	goto	l16029
 25606  013BE8                     u15560:
 25607                           
 25608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 25609                           ;stkvar	_fmt @ sp[(-32)+-4]
 25610  013BE8  0EDC               	movlw	-36
 25611  013BEA  006F FF8F FFD9     	movff	plusw1,fsr2l
 25612  013BF0  0EDD               	movlw	-35
 25613  013BF2  006F FF8F FFDA     	movff	plusw1,fsr2h
 25614  013BF8  2ADE               	incf	postinc2,f,c
 25615  013BFA  0E00               	movlw	0
 25616  013BFC  22DD               	addwfc	postdec2,f,c
 25617                           
 25618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 25619                           ;stkvar	_ap @ sp[(-32)+-6]
 25620  013BFE  0EDA               	movlw	-38
 25621  013C00  006F FF8F FFD9     	movff	plusw1,fsr2l
 25622  013C06  0EDB               	movlw	-37
 25623  013C08  006F FF8F FFDA     	movff	plusw1,fsr2h
 25624  013C0E  0E02               	movlw	2
 25625  013C10  5EDE               	subwf	postinc2,f,c
 25626  013C12  0E00               	movlw	0
 25627  013C14  5ADD               	subwfb	postdec2,f,c
 25628  013C16  006F FF78  F00B    	movff	postinc2,btemp+10
 25629  013C1C  006F FF74  F00C    	movff	postdec2,btemp+11
 25630  013C22  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 25631  013C28  0060  F033  FFDA   	movff	btemp+11,fsr2h
 25632  013C2E  006F FF78  F00B    	movff	postinc2,btemp+10
 25633  013C34  006F FF74  F00C    	movff	postdec2,btemp+11
 25634                           
 25635                           ;stkvar	_ll @ sp[(-32)+14]
 25636  013C3A  0EEE               	movlw	-18
 25637  013C3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25638  013C42  0EEF               	movlw	-17
 25639  013C44  0060  F033  FFE3   	movff	btemp+11,plusw1
 25640  013C4A  6A01               	clrf	btemp^0,c
 25641  013C4C  BEE3               	btfsc	plusw1,7,c
 25642  013C4E  6801               	setf	btemp^0,c
 25643  013C50  0EF0               	movlw	-16
 25644  013C52  0060  F007  FFE3   	movff	btemp,plusw1
 25645  013C58  0EF1               	movlw	-15
 25646  013C5A  0060  F007  FFE3   	movff	btemp,plusw1
 25647  013C60  0EF2               	movlw	-14
 25648  013C62  0060  F007  FFE3   	movff	btemp,plusw1
 25649  013C68  0EF3               	movlw	-13
 25650  013C6A  0060  F007  FFE3   	movff	btemp,plusw1
 25651  013C70  0EF4               	movlw	-12
 25652  013C72  0060  F007  FFE3   	movff	btemp,plusw1
 25653  013C78  0EF5               	movlw	-11
 25654  013C7A  0060  F007  FFE3   	movff	btemp,plusw1
 25655  013C80                     l16025:
 25656                           
 25657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 25658                           ;stkvar	_ll @ sp[(-32)+14]
 25659  013C80  50E1               	movf	fsr1l,w,c
 25660  013C82  0FEE               	addlw	-18
 25661  013C84  6ED9               	movwf	fsr2l,c
 25662  013C86  50E2               	movf	fsr1h,w,c
 25663  013C88  6EDA               	movwf	fsr2h,c
 25664  013C8A  0EFF               	movlw	255
 25665  013C8C  22DA               	addwfc	fsr2h,f,c
 25666  013C8E  006F FF7B FFE6     	movff	postinc2,postinc1
 25667  013C94  006F FF7B FFE6     	movff	postinc2,postinc1
 25668  013C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 25669  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 25670  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 25671  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 25672  013CB2  006F FF7B FFE6     	movff	postinc2,postinc1
 25673  013CB8  006F FF7B FFE6     	movff	postinc2,postinc1
 25674                           
 25675                           ;stkvar	_fp @ sp[(-40)+-2]
 25676  013CBE  0ED6               	movlw	-42
 25677  013CC0  006F FF8F FFE6     	movff	plusw1,postinc1
 25678  013CC6  006F FF8F FFE6     	movff	plusw1,postinc1
 25679  013CCC  EC80  F0C4         	call	_dtoa	;wreg free
 25680  013CD0  EF43  F0A3         	goto	l2674
 25681  013CD4                     l16029:
 25682                           
 25683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 25684  013CD4  0E02               	movlw	2
 25685  013CD6  6EE6               	movwf	postinc1,c
 25686  013CD8  0E00               	movlw	0
 25687  013CDA  6EE6               	movwf	postinc1,c
 25688  013CDC  0EE9               	movlw	low STR_99
 25689  013CDE  6EE6               	movwf	postinc1,c
 25690  013CE0  0EFF               	movlw	high STR_99
 25691  013CE2  6EE6               	movwf	postinc1,c
 25692                           
 25693                           ;stkvar	_fmt @ sp[(-36)+-4]
 25694  013CE4  0ED8               	movlw	-40
 25695  013CE6  006F FF8F FFD9     	movff	plusw1,fsr2l
 25696  013CEC  0ED9               	movlw	-39
 25697  013CEE  006F FF8F FFDA     	movff	plusw1,fsr2h
 25698  013CF4  006F FF78  F00B    	movff	postinc2,btemp+10
 25699  013CFA  006F FF74  F00C    	movff	postdec2,btemp+11
 25700  013D00  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25701  013D06  0060  F033  FFE6   	movff	btemp+11,postinc1
 25702  013D0C  EC5C  F0E2         	call	_strncmp	;wreg free
 25703  013D10  5001               	movf	btemp^0,w,c
 25704  013D12  1002               	iorwf	(btemp+1)^0,w,c
 25705  013D14  B4D8               	btfsc	status,2,c
 25706  013D16  D022               	goto	u15580
 25707  013D18  0E02               	movlw	2
 25708  013D1A  6EE6               	movwf	postinc1,c
 25709  013D1C  0E00               	movlw	0
 25710  013D1E  6EE6               	movwf	postinc1,c
 25711  013D20  0EEF               	movlw	low STR_103
 25712  013D22  6EE6               	movwf	postinc1,c
 25713  013D24  0EFF               	movlw	high STR_103
 25714  013D26  6EE6               	movwf	postinc1,c
 25715                           
 25716                           ;stkvar	_fmt @ sp[(-36)+-4]
 25717  013D28  0ED8               	movlw	-40
 25718  013D2A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25719  013D30  0ED9               	movlw	-39
 25720  013D32  006F FF8F FFDA     	movff	plusw1,fsr2h
 25721  013D38  006F FF78  F00B    	movff	postinc2,btemp+10
 25722  013D3E  006F FF74  F00C    	movff	postdec2,btemp+11
 25723  013D44  0060  F02F  FFE6   	movff	btemp+10,postinc1
 25724  013D4A  0060  F033  FFE6   	movff	btemp+11,postinc1
 25725  013D50  EC5C  F0E2         	call	_strncmp	;wreg free
 25726  013D54  5001               	movf	btemp^0,w,c
 25727  013D56  1002               	iorwf	(btemp+1)^0,w,c
 25728  013D58  A4D8               	btfss	status,2,c
 25729  013D5A  D069               	goto	l16041
 25730  013D5C                     u15580:
 25731                           
 25732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 25733                           ;stkvar	_fmt @ sp[(-32)+-4]
 25734  013D5C  0EDC               	movlw	-36
 25735  013D5E  006F FF8F FFD9     	movff	plusw1,fsr2l
 25736  013D64  0EDD               	movlw	-35
 25737  013D66  006F FF8F FFDA     	movff	plusw1,fsr2h
 25738  013D6C  0E02               	movlw	2
 25739  013D6E  26DE               	addwf	postinc2,f,c
 25740  013D70  0E00               	movlw	0
 25741  013D72  22DD               	addwfc	postdec2,f,c
 25742                           
 25743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 25744                           ;stkvar	_ap @ sp[(-32)+-6]
 25745  013D74  0EDA               	movlw	-38
 25746  013D76  006F FF8F FFD9     	movff	plusw1,fsr2l
 25747  013D7C  0EDB               	movlw	-37
 25748  013D7E  006F FF8F FFDA     	movff	plusw1,fsr2h
 25749  013D84  0E04               	movlw	4
 25750  013D86  5EDE               	subwf	postinc2,f,c
 25751  013D88  0E00               	movlw	0
 25752  013D8A  5ADD               	subwfb	postdec2,f,c
 25753  013D8C  006F FF78  F00B    	movff	postinc2,btemp+10
 25754  013D92  006F FF74  F00C    	movff	postdec2,btemp+11
 25755  013D98  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 25756  013D9E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 25757  013DA4  006F FF78  F009    	movff	postinc2,btemp+8
 25758  013DAA  006F FF78  F00A    	movff	postinc2,btemp+9
 25759  013DB0  006F FF78  F00B    	movff	postinc2,btemp+10
 25760  013DB6  006F FF78  F00C    	movff	postinc2,btemp+11
 25761  013DBC  0060  F024  F011   	movff	btemp+8,btemp+16
 25762  013DC2  0060  F028  F012   	movff	btemp+9,btemp+17
 25763  013DC8  0060  F02C  F013   	movff	btemp+10,btemp+18
 25764  013DCE  0060  F030  F014   	movff	btemp+11,btemp+19
 25765  013DD4  6A15               	clrf	(btemp+20)^0,c
 25766  013DD6  BE14               	btfsc	(btemp+19)^0,7,c
 25767  013DD8  6815               	setf	(btemp+20)^0,c
 25768  013DDA  0060  F054  F016   	movff	btemp+20,btemp+21
 25769  013DE0  0060  F054  F017   	movff	btemp+20,btemp+22
 25770  013DE6  0060  F054  F018   	movff	btemp+20,btemp+23
 25771                           
 25772                           ;stkvar	_ll @ sp[(-32)+14]
 25773  013DEC  0EEE               	movlw	-18
 25774  013DEE  0060  F047  FFE3   	movff	btemp+16,plusw1
 25775  013DF4  0EEF               	movlw	-17
 25776  013DF6  0060  F04B  FFE3   	movff	btemp+17,plusw1
 25777  013DFC  0EF0               	movlw	-16
 25778  013DFE  0060  F04F  FFE3   	movff	btemp+18,plusw1
 25779  013E04  0EF1               	movlw	-15
 25780  013E06  0060  F053  FFE3   	movff	btemp+19,plusw1
 25781  013E0C  0EF2               	movlw	-14
 25782  013E0E  0060  F057  FFE3   	movff	btemp+20,plusw1
 25783  013E14  0EF3               	movlw	-13
 25784  013E16  0060  F05B  FFE3   	movff	btemp+21,plusw1
 25785  013E1C  0EF4               	movlw	-12
 25786  013E1E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 25787  013E24  0EF5               	movlw	-11
 25788  013E26  0060  F063  FFE3   	movff	btemp+23,plusw1
 25789  013E2C  D729               	goto	l16025
 25790  013E2E                     l16041:
 25791                           
 25792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 25793                           ;stkvar	_ct @ sp[(-32)+26]
 25794  013E2E  0EFA               	movlw	-6
 25795  013E30  006F FF8C  F001    	movff	plusw1,btemp
 25796  013E36  0E66               	movlw	102
 25797  013E38  1801               	xorwf	btemp^0,w,c
 25798  013E3A  A4D8               	btfss	status,2,c
 25799  013E3C  D06E               	goto	l16053
 25800                           
 25801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 25802                           ;stkvar	_fmt @ sp[(-32)+-4]
 25803  013E3E  0EDC               	movlw	-36
 25804  013E40  006F FF8F FFD9     	movff	plusw1,fsr2l
 25805  013E46  0EDD               	movlw	-35
 25806  013E48  006F FF8F FFDA     	movff	plusw1,fsr2h
 25807  013E4E  006F FF7B FFF6     	movff	postinc2,tblptrl
 25808  013E54  006F FF77 FFF7     	movff	postdec2,tblptrh
 25809  013E5A                     	if	0	;tblptru may be non-zero
 25810  013E5A                     	endif
 25811  013E5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25812  013E5A  0E00               	movlw	low (__mediumconst shr (0+16))
 25813  013E5C  6EF8               	movwf	tblptru,c
 25814  013E5E                     	endif
 25815                           
 25816                           ;stkvar	_c @ sp[(-32)+31]
 25817  013E5E  0008               	tblrd		*
 25818  013E60  0EFF               	movlw	-1
 25819  013E62  006F FFD7 FFE3     	movff	tablat,plusw1
 25820                           
 25821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 25822                           ;stkvar	_fmt @ sp[(-32)+-4]
 25823  013E68  0EDC               	movlw	-36
 25824  013E6A  006F FF8F FFD9     	movff	plusw1,fsr2l
 25825  013E70  0EDD               	movlw	-35
 25826  013E72  006F FF8F FFDA     	movff	plusw1,fsr2h
 25827  013E78  2ADE               	incf	postinc2,f,c
 25828  013E7A  0E00               	movlw	0
 25829  013E7C  22DD               	addwfc	postdec2,f,c
 25830                           
 25831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 25832                           ;stkvar	_ap @ sp[(-32)+-6]
 25833  013E7E  0EDA               	movlw	-38
 25834  013E80  006F FF8F FFD9     	movff	plusw1,fsr2l
 25835  013E86  0EDB               	movlw	-37
 25836  013E88  006F FF8F FFDA     	movff	plusw1,fsr2h
 25837  013E8E  0E04               	movlw	4
 25838  013E90  5EDE               	subwf	postinc2,f,c
 25839  013E92  0E00               	movlw	0
 25840  013E94  5ADD               	subwfb	postdec2,f,c
 25841  013E96  006F FF78  F00B    	movff	postinc2,btemp+10
 25842  013E9C  006F FF74  F00C    	movff	postdec2,btemp+11
 25843  013EA2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 25844  013EA8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 25845  013EAE  006F FF78  F009    	movff	postinc2,btemp+8
 25846  013EB4  006F FF78  F00A    	movff	postinc2,btemp+9
 25847  013EBA  006F FF78  F00B    	movff	postinc2,btemp+10
 25848  013EC0  006F FF78  F00C    	movff	postinc2,btemp+11
 25849                           
 25850                           ;stkvar	_f @ sp[(-32)+22]
 25851  013EC6  0EF6               	movlw	-10
 25852  013EC8  0060  F027  FFE3   	movff	btemp+8,plusw1
 25853  013ECE  0EF7               	movlw	-9
 25854  013ED0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25855  013ED6  0EF8               	movlw	-8
 25856  013ED8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25857  013EDE  0EF9               	movlw	-7
 25858  013EE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25859  013EE6                     l16049:
 25860                           
 25861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 25862                           ;stkvar	_c @ sp[(-32)+31]
 25863  013EE6  0EFF               	movlw	-1
 25864  013EE8  50E3               	movf	plusw1,w,c
 25865  013EEA  6EE6               	movwf	postinc1,c
 25866                           
 25867                           ;stkvar	_f @ sp[(-33)+22]
 25868  013EEC  0EF5               	movlw	-11
 25869  013EEE  006F FF8F FFE6     	movff	plusw1,postinc1
 25870  013EF4  006F FF8F FFE6     	movff	plusw1,postinc1
 25871  013EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 25872  013F00  006F FF8F FFE6     	movff	plusw1,postinc1
 25873                           
 25874                           ;stkvar	_fp @ sp[(-37)+-2]
 25875  013F06  0ED9               	movlw	-39
 25876  013F08  006F FF8F FFE6     	movff	plusw1,postinc1
 25877  013F0E  006F FF8F FFE6     	movff	plusw1,postinc1
 25878  013F14  ECE7  F089         	call	_efgtoa	;wreg free
 25879  013F18  D3B6               	goto	l2674
 25880  013F1A                     l16053:
 25881                           
 25882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 25883  013F1A  0E02               	movlw	2
 25884  013F1C  6EE6               	movwf	postinc1,c
 25885  013F1E  0E00               	movlw	0
 25886  013F20  6EE6               	movwf	postinc1,c
 25887  013F22  0EEC               	movlw	low STR_108
 25888  013F24  6EE6               	movwf	postinc1,c
 25889  013F26  0EFF               	movlw	high STR_108
 25890  013F28  6EE6               	movwf	postinc1,c
 25891                           
 25892                           ;stkvar	_ct @ sp[(-36)+26]
 25893  013F2A  0EF6               	movlw	246
 25894  013F2C  24E1               	addwf	fsr1l,w,c
 25895  013F2E  6E01               	movwf	btemp^0,c
 25896  013F30  0EFF               	movlw	255
 25897  013F32  20E2               	addwfc	fsr1h,w,c
 25898  013F34  6E02               	movwf	(btemp+1)^0,c
 25899  013F36  0060  F007  FFE6   	movff	btemp,postinc1
 25900  013F3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 25901  013F42  EC5C  F0E2         	call	_strncmp	;wreg free
 25902  013F46  5001               	movf	btemp^0,w,c
 25903  013F48  1002               	iorwf	(btemp+1)^0,w,c
 25904  013F4A  A4D8               	btfss	status,2,c
 25905  013F4C  D096               	goto	l16073
 25906                           
 25907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 25908                           ;stkvar	_fmt @ sp[(-32)+-4]
 25909  013F4E  0EDC               	movlw	-36
 25910  013F50  006F FF8F FFD9     	movff	plusw1,fsr2l
 25911  013F56  0EDD               	movlw	-35
 25912  013F58  006F FF8F FFDA     	movff	plusw1,fsr2h
 25913  013F5E  006F FF78  F00B    	movff	postinc2,btemp+10
 25914  013F64  006F FF74  F00C    	movff	postdec2,btemp+11
 25915  013F6A  0E01               	movlw	1
 25916  013F6C  260B               	addwf	(btemp+10)^0,f,c
 25917  013F6E  0E00               	movlw	0
 25918  013F70  220C               	addwfc	(btemp+11)^0,f,c
 25919  013F72  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 25920  013F78  0060  F033  FFF7   	movff	btemp+11,tblptrh
 25921  013F7E                     	if	0	;tblptru may be non-zero
 25922  013F7E                     	endif
 25923  013F7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25924  013F7E  0E00               	movlw	low (__mediumconst shr (0+16))
 25925  013F80  6EF8               	movwf	tblptru,c
 25926  013F82                     	endif
 25927                           
 25928                           ;stkvar	_c @ sp[(-32)+31]
 25929  013F82  0008               	tblrd		*
 25930  013F84  0EFF               	movlw	-1
 25931  013F86  006F FFD7 FFE3     	movff	tablat,plusw1
 25932  013F8C  0EBF               	movlw	191
 25933  013F8E  6E0B               	movwf	(btemp+10)^0,c
 25934  013F90  0EFF               	movlw	255
 25935  013F92  6E0C               	movwf	(btemp+11)^0,c
 25936                           
 25937                           ;stkvar	_fmt @ sp[(-32)+-4]
 25938  013F94  0EDC               	movlw	-36
 25939  013F96  006F FF8F FFD9     	movff	plusw1,fsr2l
 25940  013F9C  0EDD               	movlw	-35
 25941  013F9E  006F FF8F FFDA     	movff	plusw1,fsr2h
 25942  013FA4  006F FF7B FFF6     	movff	postinc2,tblptrl
 25943  013FAA  006F FF77 FFF7     	movff	postdec2,tblptrh
 25944  013FB0                     	if	0	;tblptru may be non-zero
 25945  013FB0                     	endif
 25946  013FB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25947  013FB0  0E00               	movlw	low (__mediumconst shr (0+16))
 25948  013FB2  6EF8               	movwf	tblptru,c
 25949  013FB4                     	endif
 25950  013FB4  0008               	tblrd		*
 25951  013FB6  50F5               	movf	tablat,w,c
 25952  013FB8  6E09               	movwf	(btemp+8)^0,c
 25953  013FBA  6A0A               	clrf	(btemp+9)^0,c
 25954  013FBC  500B               	movf	(btemp+10)^0,w,c
 25955  013FBE  2609               	addwf	(btemp+8)^0,f,c
 25956  013FC0  500C               	movf	(btemp+11)^0,w,c
 25957  013FC2  220A               	addwfc	(btemp+9)^0,f,c
 25958  013FC4  500A               	movf	(btemp+9)^0,w,c
 25959  013FC6  E106               	bnz	u15610
 25960  013FC8  0E1A               	movlw	26
 25961  013FCA  5C09               	subwf	(btemp+8)^0,w,c
 25962  013FCC  B0D8               	btfsc	status,0,c
 25963  013FCE  D002               	goto	u15610
 25964  013FD0  0E01               	movlw	1
 25965  013FD2  D001               	goto	u15620
 25966  013FD4                     u15610:
 25967  013FD4  0E00               	movlw	0
 25968  013FD6                     u15620:
 25969  013FD6  6E0B               	movwf	(btemp+10)^0,c
 25970  013FD8  6A0C               	clrf	(btemp+11)^0,c
 25971                           
 25972                           ;stkvar	_vfpfcnvrt$6910 @ sp[(-32)+2]
 25973  013FDA  0EE2               	movlw	-30
 25974  013FDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25975  013FE2  0EE3               	movlw	-29
 25976  013FE4  0060  F033  FFE3   	movff	btemp+11,plusw1
 25977                           
 25978                           ;stkvar	_vfpfcnvrt$6910 @ sp[(-32)+2]
 25979  013FEA  0EE2               	movlw	-30
 25980  013FEC  006F FF8C  F001    	movff	plusw1,btemp
 25981  013FF2  0EE3               	movlw	-29
 25982  013FF4  50E3               	movf	plusw1,w,c
 25983  013FF6  1001               	iorwf	btemp^0,w,c
 25984                           
 25985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 25986                           ;stkvar	_ap @ sp[(-32)+-6]
 25987                           
 25988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 25989                           
 25990                           ;stkvar	_f @ sp[(-32)+22]
 25991                           
 25992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 25993                           ;stkvar	_ap @ sp[(-32)+-6]
 25994  013FF8  0EDA               	movlw	-38
 25995  013FFA  006F FF8F FFD9     	movff	plusw1,fsr2l
 25996  014000  0EDB               	movlw	-37
 25997  014002  006F FF8F FFDA     	movff	plusw1,fsr2h
 25998  014008  0E04               	movlw	4
 25999  01400A  5EDE               	subwf	postinc2,f,c
 26000  01400C  0E00               	movlw	0
 26001  01400E  5ADD               	subwfb	postdec2,f,c
 26002  014010  006F FF78  F00B    	movff	postinc2,btemp+10
 26003  014016  006F FF74  F00C    	movff	postdec2,btemp+11
 26004  01401C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 26005  014022  0060  F033  FFDA   	movff	btemp+11,fsr2h
 26006  014028  006F FF78  F009    	movff	postinc2,btemp+8
 26007  01402E  006F FF78  F00A    	movff	postinc2,btemp+9
 26008  014034  006F FF78  F00B    	movff	postinc2,btemp+10
 26009  01403A  006F FF78  F00C    	movff	postinc2,btemp+11
 26010                           
 26011                           ;stkvar	_f @ sp[(-32)+22]
 26012  014040  0EF6               	movlw	-10
 26013  014042  0060  F027  FFE3   	movff	btemp+8,plusw1
 26014  014048  0EF7               	movlw	-9
 26015  01404A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26016  014050  0EF8               	movlw	-8
 26017  014052  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26018  014058  0EF9               	movlw	-7
 26019  01405A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26020                           
 26021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 26022                           ;stkvar	_fmt @ sp[(-32)+-4]
 26023  014060  0EDC               	movlw	-36
 26024  014062  006F FF8F FFD9     	movff	plusw1,fsr2l
 26025  014068  0EDD               	movlw	-35
 26026  01406A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26027  014070  0E02               	movlw	2
 26028  014072  26DE               	addwf	postinc2,f,c
 26029  014074  0E00               	movlw	0
 26030  014076  22DD               	addwfc	postdec2,f,c
 26031  014078  D736               	goto	l16049
 26032  01407A                     l16073:
 26033                           
 26034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 26035                           ;stkvar	_fmt @ sp[(-32)+-4]
 26036  01407A  0EDC               	movlw	-36
 26037  01407C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26038  014082  0EDD               	movlw	-35
 26039  014084  006F FF8F FFDA     	movff	plusw1,fsr2h
 26040  01408A  006F FF7B FFF6     	movff	postinc2,tblptrl
 26041  014090  006F FF77 FFF7     	movff	postdec2,tblptrh
 26042  014096                     	if	0	;tblptru may be non-zero
 26043  014096                     	endif
 26044  014096                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26045  014096  0E00               	movlw	low (__mediumconst shr (0+16))
 26046  014098  6EF8               	movwf	tblptru,c
 26047  01409A                     	endif
 26048  01409A  0008               	tblrd		*
 26049  01409C  50F5               	movf	tablat,w,c
 26050  01409E  0A73               	xorlw	115
 26051  0140A0  A4D8               	btfss	status,2,c
 26052  0140A2  D042               	goto	l16083
 26053                           
 26054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 26055                           ;stkvar	_fmt @ sp[(-32)+-4]
 26056  0140A4  0EDC               	movlw	-36
 26057  0140A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26058  0140AC  0EDD               	movlw	-35
 26059  0140AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26060  0140B4  2ADE               	incf	postinc2,f,c
 26061  0140B6  0E00               	movlw	0
 26062  0140B8  22DD               	addwfc	postdec2,f,c
 26063                           
 26064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 26065                           ;stkvar	_ap @ sp[(-32)+-6]
 26066  0140BA  0EDA               	movlw	-38
 26067  0140BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 26068  0140C2  0EDB               	movlw	-37
 26069  0140C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 26070  0140CA  0E02               	movlw	2
 26071  0140CC  5EDE               	subwf	postinc2,f,c
 26072  0140CE  0E00               	movlw	0
 26073  0140D0  5ADD               	subwfb	postdec2,f,c
 26074  0140D2  006F FF78  F00B    	movff	postinc2,btemp+10
 26075  0140D8  006F FF74  F00C    	movff	postdec2,btemp+11
 26076  0140DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 26077  0140E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 26078  0140EA  006F FF78  F00B    	movff	postinc2,btemp+10
 26079  0140F0  006F FF74  F00C    	movff	postdec2,btemp+11
 26080                           
 26081                           ;stkvar	_cp @ sp[(-32)+29]
 26082  0140F6  0EFE               	movlw	-2
 26083  0140F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 26084  0140FE  0EFD               	movlw	-3
 26085  014100  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26086                           
 26087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 26088                           ;stkvar	_cp @ sp[(-32)+29]
 26089  014106  0EFD               	movlw	-3
 26090  014108  006F FF8F FFE6     	movff	plusw1,postinc1
 26091  01410E  006F FF8F FFE6     	movff	plusw1,postinc1
 26092                           
 26093                           ;stkvar	_fp @ sp[(-34)+-2]
 26094  014114  0EDC               	movlw	-36
 26095  014116  006F FF8F FFE6     	movff	plusw1,postinc1
 26096  01411C  006F FF8F FFE6     	movff	plusw1,postinc1
 26097  014122  EC62  F0D6         	call	_stoa	;wreg free
 26098  014126  D2AF               	goto	l2674
 26099  014128                     l16083:
 26100                           
 26101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 26102                           ;stkvar	_fmt @ sp[(-32)+-4]
 26103  014128  0EDC               	movlw	-36
 26104  01412A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26105  014130  0EDD               	movlw	-35
 26106  014132  006F FF8F FFDA     	movff	plusw1,fsr2h
 26107  014138  006F FF7B FFF6     	movff	postinc2,tblptrl
 26108  01413E  006F FF77 FFF7     	movff	postdec2,tblptrh
 26109  014144                     	if	0	;tblptru may be non-zero
 26110  014144                     	endif
 26111  014144                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26112  014144  0E00               	movlw	low (__mediumconst shr (0+16))
 26113  014146  6EF8               	movwf	tblptru,c
 26114  014148                     	endif
 26115  014148  0008               	tblrd		*
 26116  01414A  50F5               	movf	tablat,w,c
 26117  01414C  0A75               	xorlw	117
 26118  01414E  A4D8               	btfss	status,2,c
 26119  014150  D07C               	goto	l16093
 26120                           
 26121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 26122                           ;stkvar	_fmt @ sp[(-32)+-4]
 26123  014152  0EDC               	movlw	-36
 26124  014154  006F FF8F FFD9     	movff	plusw1,fsr2l
 26125  01415A  0EDD               	movlw	-35
 26126  01415C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26127  014162  2ADE               	incf	postinc2,f,c
 26128  014164  0E00               	movlw	0
 26129  014166  22DD               	addwfc	postdec2,f,c
 26130                           
 26131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 26132                           ;stkvar	_ap @ sp[(-32)+-6]
 26133  014168  0EDA               	movlw	-38
 26134  01416A  006F FF8F FFD9     	movff	plusw1,fsr2l
 26135  014170  0EDB               	movlw	-37
 26136  014172  006F FF8F FFDA     	movff	plusw1,fsr2h
 26137  014178  0E02               	movlw	2
 26138  01417A  5EDE               	subwf	postinc2,f,c
 26139  01417C  0E00               	movlw	0
 26140  01417E  5ADD               	subwfb	postdec2,f,c
 26141  014180  006F FF78  F00B    	movff	postinc2,btemp+10
 26142  014186  006F FF74  F00C    	movff	postdec2,btemp+11
 26143  01418C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 26144  014192  0060  F033  FFDA   	movff	btemp+11,fsr2h
 26145  014198  006F FF78  F00B    	movff	postinc2,btemp+10
 26146  01419E  006F FF74  F00C    	movff	postdec2,btemp+11
 26147  0141A4  500B               	movf	(btemp+10)^0,w,c
 26148  0141A6  6E11               	movwf	(btemp+16)^0,c
 26149  0141A8  500C               	movf	(btemp+11)^0,w,c
 26150  0141AA  6E12               	movwf	(btemp+17)^0,c
 26151  0141AC  6A13               	clrf	(btemp+18)^0,c
 26152  0141AE  6A14               	clrf	(btemp+19)^0,c
 26153  0141B0  6A15               	clrf	(btemp+20)^0,c
 26154  0141B2  6A16               	clrf	(btemp+21)^0,c
 26155  0141B4  6A17               	clrf	(btemp+22)^0,c
 26156  0141B6  6A18               	clrf	(btemp+23)^0,c
 26157                           
 26158                           ;stkvar	_llu @ sp[(-32)+6]
 26159  0141B8  0EE6               	movlw	-26
 26160  0141BA  0060  F047  FFE3   	movff	btemp+16,plusw1
 26161  0141C0  0EE7               	movlw	-25
 26162  0141C2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 26163  0141C8  0EE8               	movlw	-24
 26164  0141CA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 26165  0141D0  0EE9               	movlw	-23
 26166  0141D2  0060  F053  FFE3   	movff	btemp+19,plusw1
 26167  0141D8  0EEA               	movlw	-22
 26168  0141DA  0060  F057  FFE3   	movff	btemp+20,plusw1
 26169  0141E0  0EEB               	movlw	-21
 26170  0141E2  0060  F05B  FFE3   	movff	btemp+21,plusw1
 26171  0141E8  0EEC               	movlw	-20
 26172  0141EA  0060  F05F  FFE3   	movff	btemp+22,plusw1
 26173  0141F0  0EED               	movlw	-19
 26174  0141F2  0060  F063  FFE3   	movff	btemp+23,plusw1
 26175                           
 26176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 26177                           ;stkvar	_llu @ sp[(-32)+6]
 26178  0141F8  50E1               	movf	fsr1l,w,c
 26179  0141FA  0FE6               	addlw	-26
 26180  0141FC  6ED9               	movwf	fsr2l,c
 26181  0141FE  50E2               	movf	fsr1h,w,c
 26182  014200  6EDA               	movwf	fsr2h,c
 26183  014202  0EFF               	movlw	255
 26184  014204  22DA               	addwfc	fsr2h,f,c
 26185  014206  006F FF7B FFE6     	movff	postinc2,postinc1
 26186  01420C  006F FF7B FFE6     	movff	postinc2,postinc1
 26187  014212  006F FF7B FFE6     	movff	postinc2,postinc1
 26188  014218  006F FF7B FFE6     	movff	postinc2,postinc1
 26189  01421E  006F FF7B FFE6     	movff	postinc2,postinc1
 26190  014224  006F FF7B FFE6     	movff	postinc2,postinc1
 26191  01422A  006F FF7B FFE6     	movff	postinc2,postinc1
 26192  014230  006F FF7B FFE6     	movff	postinc2,postinc1
 26193                           
 26194                           ;stkvar	_fp @ sp[(-40)+-2]
 26195  014236  0ED6               	movlw	-42
 26196  014238  006F FF8F FFE6     	movff	plusw1,postinc1
 26197  01423E  006F FF8F FFE6     	movff	plusw1,postinc1
 26198  014244  EC62  F0D0         	call	_utoa	;wreg free
 26199  014248  D21E               	goto	l2674
 26200  01424A                     l16093:
 26201                           
 26202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 26203  01424A  0E02               	movlw	2
 26204  01424C  6EE6               	movwf	postinc1,c
 26205  01424E  0E00               	movlw	0
 26206  014250  6EE6               	movwf	postinc1,c
 26207  014252  0EF2               	movlw	low STR_113
 26208  014254  6EE6               	movwf	postinc1,c
 26209  014256  0EFF               	movlw	high STR_113
 26210  014258  6EE6               	movwf	postinc1,c
 26211                           
 26212                           ;stkvar	_fmt @ sp[(-36)+-4]
 26213  01425A  0ED8               	movlw	-40
 26214  01425C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26215  014262  0ED9               	movlw	-39
 26216  014264  006F FF8F FFDA     	movff	plusw1,fsr2h
 26217  01426A  006F FF78  F00B    	movff	postinc2,btemp+10
 26218  014270  006F FF74  F00C    	movff	postdec2,btemp+11
 26219  014276  0060  F02F  FFE6   	movff	btemp+10,postinc1
 26220  01427C  0060  F033  FFE6   	movff	btemp+11,postinc1
 26221  014282  EC5C  F0E2         	call	_strncmp	;wreg free
 26222  014286  5001               	movf	btemp^0,w,c
 26223  014288  1002               	iorwf	(btemp+1)^0,w,c
 26224  01428A  A4D8               	btfss	status,2,c
 26225  01428C  D039               	goto	l16103
 26226                           
 26227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 26228                           ;stkvar	_fmt @ sp[(-32)+-4]
 26229  01428E  0EDC               	movlw	-36
 26230  014290  006F FF8F FFD9     	movff	plusw1,fsr2l
 26231  014296  0EDD               	movlw	-35
 26232  014298  006F FF8F FFDA     	movff	plusw1,fsr2h
 26233  01429E  0E02               	movlw	2
 26234  0142A0  26DE               	addwf	postinc2,f,c
 26235  0142A2  0E00               	movlw	0
 26236  0142A4  22DD               	addwfc	postdec2,f,c
 26237                           
 26238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 26239                           ;stkvar	_ap @ sp[(-32)+-6]
 26240  0142A6  0EDA               	movlw	-38
 26241  0142A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 26242  0142AE  0EDB               	movlw	-37
 26243  0142B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 26244  0142B6  0E04               	movlw	4
 26245  0142B8  5EDE               	subwf	postinc2,f,c
 26246  0142BA  0E00               	movlw	0
 26247  0142BC  5ADD               	subwfb	postdec2,f,c
 26248  0142BE  006F FF78  F00B    	movff	postinc2,btemp+10
 26249  0142C4  006F FF74  F00C    	movff	postdec2,btemp+11
 26250  0142CA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 26251  0142D0  0060  F033  FFDA   	movff	btemp+11,fsr2h
 26252  0142D6  006F FF78  F009    	movff	postinc2,btemp+8
 26253  0142DC  006F FF78  F00A    	movff	postinc2,btemp+9
 26254  0142E2  006F FF78  F00B    	movff	postinc2,btemp+10
 26255  0142E8  006F FF78  F00C    	movff	postinc2,btemp+11
 26256  0142EE  5009               	movf	(btemp+8)^0,w,c
 26257  0142F0  6E11               	movwf	(btemp+16)^0,c
 26258  0142F2  500A               	movf	(btemp+9)^0,w,c
 26259  0142F4  6E12               	movwf	(btemp+17)^0,c
 26260  0142F6  500B               	movf	(btemp+10)^0,w,c
 26261  0142F8  6E13               	movwf	(btemp+18)^0,c
 26262  0142FA  500C               	movf	(btemp+11)^0,w,c
 26263  0142FC  6E14               	movwf	(btemp+19)^0,c
 26264  0142FE  D758               	goto	L24
 26265  014300                     l16103:
 26266                           
 26267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 26268                           ;stkvar	_fmt @ sp[(-32)+-4]
 26269  014300  0EDC               	movlw	-36
 26270  014302  006F FF8F FFD9     	movff	plusw1,fsr2l
 26271  014308  0EDD               	movlw	-35
 26272  01430A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26273  014310  006F FF7B FFF6     	movff	postinc2,tblptrl
 26274  014316  006F FF77 FFF7     	movff	postdec2,tblptrh
 26275  01431C                     	if	0	;tblptru may be non-zero
 26276  01431C                     	endif
 26277  01431C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26278  01431C  0E00               	movlw	low (__mediumconst shr (0+16))
 26279  01431E  6EF8               	movwf	tblptru,c
 26280  014320                     	endif
 26281  014320  0008               	tblrd		*
 26282  014322  50F5               	movf	tablat,w,c
 26283  014324  0A78               	xorlw	120
 26284  014326  B4D8               	btfsc	status,2,c
 26285  014328  D015               	goto	u15680
 26286                           
 26287                           ;stkvar	_fmt @ sp[(-32)+-4]
 26288  01432A  0EDC               	movlw	-36
 26289  01432C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26290  014332  0EDD               	movlw	-35
 26291  014334  006F FF8F FFDA     	movff	plusw1,fsr2h
 26292  01433A  006F FF7B FFF6     	movff	postinc2,tblptrl
 26293  014340  006F FF77 FFF7     	movff	postdec2,tblptrh
 26294  014346                     	if	0	;tblptru may be non-zero
 26295  014346                     	endif
 26296  014346                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26297  014346  0E00               	movlw	low (__mediumconst shr (0+16))
 26298  014348  6EF8               	movwf	tblptru,c
 26299  01434A                     	endif
 26300  01434A  0008               	tblrd		*
 26301  01434C  50F5               	movf	tablat,w,c
 26302  01434E  0A58               	xorlw	88
 26303  014350  A4D8               	btfss	status,2,c
 26304  014352  D094               	goto	l16117
 26305  014354                     u15680:
 26306                           
 26307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 26308                           ;stkvar	_fmt @ sp[(-32)+-4]
 26309  014354  0EDC               	movlw	-36
 26310  014356  006F FF8F FFD9     	movff	plusw1,fsr2l
 26311  01435C  0EDD               	movlw	-35
 26312  01435E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26313  014364  006F FF7B FFF6     	movff	postinc2,tblptrl
 26314  01436A  006F FF77 FFF7     	movff	postdec2,tblptrh
 26315  014370                     	if	0	;tblptru may be non-zero
 26316  014370                     	endif
 26317  014370                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26318  014370  0E00               	movlw	low (__mediumconst shr (0+16))
 26319  014372  6EF8               	movwf	tblptru,c
 26320  014374                     	endif
 26321                           
 26322                           ;stkvar	_c @ sp[(-32)+31]
 26323  014374  0008               	tblrd		*
 26324  014376  0EFF               	movlw	-1
 26325  014378  006F FFD7 FFE3     	movff	tablat,plusw1
 26326                           
 26327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 26328                           ;stkvar	_fmt @ sp[(-32)+-4]
 26329  01437E  0EDC               	movlw	-36
 26330  014380  006F FF8F FFD9     	movff	plusw1,fsr2l
 26331  014386  0EDD               	movlw	-35
 26332  014388  006F FF8F FFDA     	movff	plusw1,fsr2h
 26333  01438E  2ADE               	incf	postinc2,f,c
 26334  014390  0E00               	movlw	0
 26335  014392  22DD               	addwfc	postdec2,f,c
 26336                           
 26337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 26338                           ;stkvar	_ap @ sp[(-32)+-6]
 26339  014394  0EDA               	movlw	-38
 26340  014396  006F FF8F FFD9     	movff	plusw1,fsr2l
 26341  01439C  0EDB               	movlw	-37
 26342  01439E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26343  0143A4  0E02               	movlw	2
 26344  0143A6  5EDE               	subwf	postinc2,f,c
 26345  0143A8  0E00               	movlw	0
 26346  0143AA  5ADD               	subwfb	postdec2,f,c
 26347  0143AC  006F FF78  F00B    	movff	postinc2,btemp+10
 26348  0143B2  006F FF74  F00C    	movff	postdec2,btemp+11
 26349  0143B8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 26350  0143BE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 26351  0143C4  006F FF78  F00B    	movff	postinc2,btemp+10
 26352  0143CA  006F FF74  F00C    	movff	postdec2,btemp+11
 26353  0143D0  500B               	movf	(btemp+10)^0,w,c
 26354  0143D2  6E11               	movwf	(btemp+16)^0,c
 26355  0143D4  500C               	movf	(btemp+11)^0,w,c
 26356  0143D6  6E12               	movwf	(btemp+17)^0,c
 26357  0143D8  6A13               	clrf	(btemp+18)^0,c
 26358  0143DA  6A14               	clrf	(btemp+19)^0,c
 26359  0143DC  6A15               	clrf	(btemp+20)^0,c
 26360  0143DE  6A16               	clrf	(btemp+21)^0,c
 26361  0143E0  6A17               	clrf	(btemp+22)^0,c
 26362  0143E2  6A18               	clrf	(btemp+23)^0,c
 26363                           
 26364                           ;stkvar	_llu @ sp[(-32)+6]
 26365  0143E4  0EE6               	movlw	-26
 26366  0143E6  0060  F047  FFE3   	movff	btemp+16,plusw1
 26367  0143EC  0EE7               	movlw	-25
 26368  0143EE  0060  F04B  FFE3   	movff	btemp+17,plusw1
 26369  0143F4  0EE8               	movlw	-24
 26370  0143F6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 26371  0143FC  0EE9               	movlw	-23
 26372  0143FE  0060  F053  FFE3   	movff	btemp+19,plusw1
 26373  014404  0EEA               	movlw	-22
 26374  014406  0060  F057  FFE3   	movff	btemp+20,plusw1
 26375  01440C  0EEB               	movlw	-21
 26376  01440E  0060  F05B  FFE3   	movff	btemp+21,plusw1
 26377  014414  0EEC               	movlw	-20
 26378  014416  0060  F05F  FFE3   	movff	btemp+22,plusw1
 26379  01441C  0EED               	movlw	-19
 26380  01441E  0060  F063  FFE3   	movff	btemp+23,plusw1
 26381                           
 26382                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 26383                           ;stkvar	_c @ sp[(-32)+31]
 26384  014424  0EFF               	movlw	-1
 26385  014426  50E3               	movf	plusw1,w,c
 26386  014428  6EE6               	movwf	postinc1,c
 26387                           
 26388                           ;stkvar	_llu @ sp[(-33)+6]
 26389  01442A  50E1               	movf	fsr1l,w,c
 26390  01442C  0FE5               	addlw	-27
 26391  01442E  6ED9               	movwf	fsr2l,c
 26392  014430  50E2               	movf	fsr1h,w,c
 26393  014432  6EDA               	movwf	fsr2h,c
 26394  014434  0EFF               	movlw	255
 26395  014436  22DA               	addwfc	fsr2h,f,c
 26396  014438  006F FF7B FFE6     	movff	postinc2,postinc1
 26397  01443E  006F FF7B FFE6     	movff	postinc2,postinc1
 26398  014444  006F FF7B FFE6     	movff	postinc2,postinc1
 26399  01444A  006F FF7B FFE6     	movff	postinc2,postinc1
 26400  014450  006F FF7B FFE6     	movff	postinc2,postinc1
 26401  014456  006F FF7B FFE6     	movff	postinc2,postinc1
 26402  01445C  006F FF7B FFE6     	movff	postinc2,postinc1
 26403  014462  006F FF7B FFE6     	movff	postinc2,postinc1
 26404                           
 26405                           ;stkvar	_fp @ sp[(-41)+-2]
 26406  014468  0ED5               	movlw	-43
 26407  01446A  006F FF8F FFE6     	movff	plusw1,postinc1
 26408  014470  006F FF8F FFE6     	movff	plusw1,postinc1
 26409  014476  EC27  F0CB         	call	_xtoa	;wreg free
 26410  01447A  D105               	goto	l2674
 26411  01447C                     l16117:
 26412                           
 26413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 26414  01447C  0E02               	movlw	2
 26415  01447E  6EE6               	movwf	postinc1,c
 26416  014480  0E00               	movlw	0
 26417  014482  6EE6               	movwf	postinc1,c
 26418  014484  0EF5               	movlw	low STR_118
 26419  014486  6EE6               	movwf	postinc1,c
 26420  014488  0EFF               	movlw	high STR_118
 26421  01448A  6EE6               	movwf	postinc1,c
 26422                           
 26423                           ;stkvar	_fmt @ sp[(-36)+-4]
 26424  01448C  0ED8               	movlw	-40
 26425  01448E  006F FF8F FFD9     	movff	plusw1,fsr2l
 26426  014494  0ED9               	movlw	-39
 26427  014496  006F FF8F FFDA     	movff	plusw1,fsr2h
 26428  01449C  006F FF78  F00B    	movff	postinc2,btemp+10
 26429  0144A2  006F FF74  F00C    	movff	postdec2,btemp+11
 26430  0144A8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 26431  0144AE  0060  F033  FFE6   	movff	btemp+11,postinc1
 26432  0144B4  EC5C  F0E2         	call	_strncmp	;wreg free
 26433  0144B8  5001               	movf	btemp^0,w,c
 26434  0144BA  1002               	iorwf	(btemp+1)^0,w,c
 26435  0144BC  B4D8               	btfsc	status,2,c
 26436  0144BE  D022               	goto	u15700
 26437  0144C0  0E02               	movlw	2
 26438  0144C2  6EE6               	movwf	postinc1,c
 26439  0144C4  0E00               	movlw	0
 26440  0144C6  6EE6               	movwf	postinc1,c
 26441  0144C8  0EE6               	movlw	low STR_122
 26442  0144CA  6EE6               	movwf	postinc1,c
 26443  0144CC  0EFF               	movlw	high STR_122
 26444  0144CE  6EE6               	movwf	postinc1,c
 26445                           
 26446                           ;stkvar	_fmt @ sp[(-36)+-4]
 26447  0144D0  0ED8               	movlw	-40
 26448  0144D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 26449  0144D8  0ED9               	movlw	-39
 26450  0144DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 26451  0144E0  006F FF78  F00B    	movff	postinc2,btemp+10
 26452  0144E6  006F FF74  F00C    	movff	postdec2,btemp+11
 26453  0144EC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 26454  0144F2  0060  F033  FFE6   	movff	btemp+11,postinc1
 26455  0144F8  EC5C  F0E2         	call	_strncmp	;wreg free
 26456  0144FC  5001               	movf	btemp^0,w,c
 26457  0144FE  1002               	iorwf	(btemp+1)^0,w,c
 26458  014500  A4D8               	btfss	status,2,c
 26459  014502  D058               	goto	l16131
 26460  014504                     u15700:
 26461                           
 26462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 26463                           ;stkvar	_fmt @ sp[(-32)+-4]
 26464  014504  0EDC               	movlw	-36
 26465  014506  006F FF8F FFD9     	movff	plusw1,fsr2l
 26466  01450C  0EDD               	movlw	-35
 26467  01450E  006F FF8F FFDA     	movff	plusw1,fsr2h
 26468  014514  006F FF78  F00B    	movff	postinc2,btemp+10
 26469  01451A  006F FF74  F00C    	movff	postdec2,btemp+11
 26470  014520  0E01               	movlw	1
 26471  014522  260B               	addwf	(btemp+10)^0,f,c
 26472  014524  0E00               	movlw	0
 26473  014526  220C               	addwfc	(btemp+11)^0,f,c
 26474  014528  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 26475  01452E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 26476  014534                     	if	0	;tblptru may be non-zero
 26477  014534                     	endif
 26478  014534                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26479  014534  0E00               	movlw	low (__mediumconst shr (0+16))
 26480  014536  6EF8               	movwf	tblptru,c
 26481  014538                     	endif
 26482                           
 26483                           ;stkvar	_c @ sp[(-32)+31]
 26484  014538  0008               	tblrd		*
 26485  01453A  0EFF               	movlw	-1
 26486  01453C  006F FFD7 FFE3     	movff	tablat,plusw1
 26487                           
 26488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 26489                           ;stkvar	_fmt @ sp[(-32)+-4]
 26490  014542  0EDC               	movlw	-36
 26491  014544  006F FF8F FFD9     	movff	plusw1,fsr2l
 26492  01454A  0EDD               	movlw	-35
 26493  01454C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26494  014552  0E02               	movlw	2
 26495  014554  26DE               	addwf	postinc2,f,c
 26496  014556  0E00               	movlw	0
 26497  014558  22DD               	addwfc	postdec2,f,c
 26498                           
 26499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 26500                           ;stkvar	_ap @ sp[(-32)+-6]
 26501  01455A  0EDA               	movlw	-38
 26502  01455C  006F FF8F FFD9     	movff	plusw1,fsr2l
 26503  014562  0EDB               	movlw	-37
 26504  014564  006F FF8F FFDA     	movff	plusw1,fsr2h
 26505  01456A  0E04               	movlw	4
 26506  01456C  5EDE               	subwf	postinc2,f,c
 26507  01456E  0E00               	movlw	0
 26508  014570  5ADD               	subwfb	postdec2,f,c
 26509  014572  006F FF78  F00B    	movff	postinc2,btemp+10
 26510  014578  006F FF74  F00C    	movff	postdec2,btemp+11
 26511  01457E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 26512  014584  0060  F033  FFDA   	movff	btemp+11,fsr2h
 26513  01458A  006F FF78  F009    	movff	postinc2,btemp+8
 26514  014590  006F FF78  F00A    	movff	postinc2,btemp+9
 26515  014596  006F FF78  F00B    	movff	postinc2,btemp+10
 26516  01459C  006F FF78  F00C    	movff	postinc2,btemp+11
 26517  0145A2  5009               	movf	(btemp+8)^0,w,c
 26518  0145A4  6E11               	movwf	(btemp+16)^0,c
 26519  0145A6  500A               	movf	(btemp+9)^0,w,c
 26520  0145A8  6E12               	movwf	(btemp+17)^0,c
 26521  0145AA  500B               	movf	(btemp+10)^0,w,c
 26522  0145AC  6E13               	movwf	(btemp+18)^0,c
 26523  0145AE  500C               	movf	(btemp+11)^0,w,c
 26524  0145B0  6E14               	movwf	(btemp+19)^0,c
 26525  0145B2  D714               	goto	L25
 26526  0145B4                     l16131:
 26527                           
 26528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 26529                           ;stkvar	_fmt @ sp[(-32)+-4]
 26530  0145B4  0EDC               	movlw	-36
 26531  0145B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 26532  0145BC  0EDD               	movlw	-35
 26533  0145BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 26534  0145C4  006F FF7B FFF6     	movff	postinc2,tblptrl
 26535  0145CA  006F FF77 FFF7     	movff	postdec2,tblptrh
 26536  0145D0                     	if	0	;tblptru may be non-zero
 26537  0145D0                     	endif
 26538  0145D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26539  0145D0  0E00               	movlw	low (__mediumconst shr (0+16))
 26540  0145D2  6EF8               	movwf	tblptru,c
 26541  0145D4                     	endif
 26542  0145D4  0008               	tblrd		*
 26543  0145D6  50F5               	movf	tablat,w,c
 26544  0145D8  0A25               	xorlw	37
 26545  0145DA  A4D8               	btfss	status,2,c
 26546  0145DC  D01A               	goto	l16141
 26547                           
 26548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 26549                           ;stkvar	_fmt @ sp[(-32)+-4]
 26550  0145DE  0EDC               	movlw	-36
 26551  0145E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 26552  0145E6  0EDD               	movlw	-35
 26553  0145E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 26554  0145EE  2ADE               	incf	postinc2,f,c
 26555  0145F0  0E00               	movlw	0
 26556  0145F2  22DD               	addwfc	postdec2,f,c
 26557                           
 26558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 26559                           ;stkvar	_fp @ sp[(-32)+-2]
 26560  0145F4  0EDE               	movlw	-34
 26561  0145F6  006F FF8F FFE6     	movff	plusw1,postinc1
 26562  0145FC  006F FF8F FFE6     	movff	plusw1,postinc1
 26563  014602  0E25               	movlw	37
 26564  014604  6EE6               	movwf	postinc1,c
 26565  014606  0E00               	movlw	0
 26566  014608  6EE6               	movwf	postinc1,c
 26567  01460A  EC1A  F0F5         	call	_fputc	;wreg free
 26568  01460E                     l16137:
 26569                           
 26570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 26571  01460E  0E01               	movlw	1
 26572  014610  D00C               	goto	L26
 26573  014612                     l16141:
 26574                           
 26575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 26576                           ;stkvar	_fmt @ sp[(-32)+-4]
 26577  014612  0EDC               	movlw	-36
 26578  014614  006F FF8F FFD9     	movff	plusw1,fsr2l
 26579  01461A  0EDD               	movlw	-35
 26580  01461C  006F FF8F FFDA     	movff	plusw1,fsr2h
 26581  014622  2ADE               	incf	postinc2,f,c
 26582  014624  0E00               	movlw	0
 26583  014626  22DD               	addwfc	postdec2,f,c
 26584                           
 26585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 26586  014628  0E00               	movlw	0
 26587  01462A                     L26:
 26588  01462A  6E01               	movwf	btemp^0,c
 26589  01462C  0E00               	movlw	0
 26590  01462E  6E02               	movwf	(btemp+1)^0,c
 26591  014630  D02A               	goto	l2674
 26592  014632                     l16147:
 26593                           
 26594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 26595                           ;stkvar	_fp @ sp[(-32)+-2]
 26596  014632  0EDE               	movlw	-34
 26597  014634  006F FF8F FFE6     	movff	plusw1,postinc1
 26598  01463A  006F FF8F FFE6     	movff	plusw1,postinc1
 26599                           
 26600                           ;stkvar	_fmt @ sp[(-34)+-4]
 26601  014640  0EDA               	movlw	-38
 26602  014642  006F FF8F FFD9     	movff	plusw1,fsr2l
 26603  014648  0EDB               	movlw	-37
 26604  01464A  006F FF8F FFDA     	movff	plusw1,fsr2h
 26605  014650  006F FF7B FFF6     	movff	postinc2,tblptrl
 26606  014656  006F FF77 FFF7     	movff	postdec2,tblptrh
 26607  01465C                     	if	0	;tblptru may be non-zero
 26608  01465C                     	endif
 26609  01465C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26610  01465C  0E00               	movlw	low (__mediumconst shr (0+16))
 26611  01465E  6EF8               	movwf	tblptru,c
 26612  014660                     	endif
 26613  014660  0008               	tblrd		*
 26614  014662  50F5               	movf	tablat,w,c
 26615  014664  6EE6               	movwf	postinc1,c
 26616  014666  0E00               	movlw	0
 26617  014668  6EE6               	movwf	postinc1,c
 26618  01466A  EC1A  F0F5         	call	_fputc	;wreg free
 26619                           
 26620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 26621                           ;stkvar	_fmt @ sp[(-32)+-4]
 26622  01466E  0EDC               	movlw	-36
 26623  014670  006F FF8F FFD9     	movff	plusw1,fsr2l
 26624  014676  0EDD               	movlw	-35
 26625  014678  006F FF8F FFDA     	movff	plusw1,fsr2h
 26626  01467E  2ADE               	incf	postinc2,f,c
 26627  014680  0E00               	movlw	0
 26628  014682  22DD               	addwfc	postdec2,f,c
 26629  014684  D7C4               	goto	l16137
 26630  014686                     l2674:
 26631                           
 26632                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 26633  014686  0EDA               	movlw	218
 26634  014688  26E1               	addwf	fsr1l,f,c
 26635  01468A  0EFF               	movlw	255
 26636  01468C  22E2               	addwfc	fsr1h,f,c
 26637  01468E  0012               	return		;funcret
 26638  014690                     __end_of_vfpfcnvrt:
 26639                           	opt callstack 0
 26640                           
 26641 ;; *************** function _xtoa *****************
 26642 ;; Defined at:
 26643 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 26644 ;; Parameters:    Size  Location     Type
 26645 ;;  fp              2  [STACK] PTR struct _IO_FILE
 26646 ;;		 -> f(6), NULL(0), 
 26647 ;;  d               8  [STACK] unsigned long long 
 26648 ;;  x               1  [STACK] unsigned char 
 26649 ;; Auto vars:     Size  Location     Type
 26650 ;;  n               8  [STACK] unsigned long long 
 26651 ;;  c               2  [STACK] int 
 26652 ;;  i               2  [STACK] int 
 26653 ;;  w               2  [STACK] int 
 26654 ;;  p               2  [STACK] int 
 26655 ;; Return value:  Size  Location     Type
 26656 ;;                  2  [STACK] int 
 26657 ;; Registers used:
 26658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 26659 ;; Tracked objects:
 26660 ;;		On entry : 0/0
 26661 ;;		On exit  : 0/0
 26662 ;;		Unchanged: 0/0
 26663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26668 ;;Total ram usage:        0 bytes
 26669 ;; Hardware stack levels used:    1
 26670 ;; Hardware stack levels required when called:   20
 26671 ;; This function calls:
 26672 ;;		_isalpha
 26673 ;;		_isupper
 26674 ;;		_pad
 26675 ;;		_toupper
 26676 ;; This function is called by:
 26677 ;;		_vfpfcnvrt
 26678 ;; This function uses a reentrant model
 26679 ;;
 26680                           
 26681                           	psect	text92
 26682  01964E                     __ptext92:
 26683                           	opt callstack 0
 26684  01964E                     _xtoa:
 26685                           	opt callstack 0
 26686                           
 26687                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 26688  01964E  0E14               	movlw	20
 26689  019650  26E1               	addwf	fsr1l,f,c
 26690  019652  0E00               	movlw	0
 26691  019654  22E2               	addwfc	fsr1h,f,c
 26692                           
 26693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 26694                           
 26695                           ;incstack = 0
 26696 ;; hardware stack exceeded
 26697  019656  AE3D               	btfss	(_prec+1)^0,7,c
 26698                           
 26699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 26700  019658  923E               	bcf	_flags^0,1,c
 26701                           
 26702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 26703  01965A  BE3D               	btfsc	(_prec+1)^0,7,c
 26704  01965C  D005               	goto	u15160
 26705  01965E  503D               	movf	(_prec+1)^0,w,c
 26706  019660  E110               	bnz	l15807
 26707  019662  043C               	decf	_prec^0,w,c
 26708  019664  B0D8               	btfsc	status,0,c
 26709  019666  D00D               	goto	l15807
 26710  019668                     u15160:
 26711  019668  0E01               	movlw	1
 26712  01966A  6E0B               	movwf	(btemp+10)^0,c
 26713  01966C  0E00               	movlw	0
 26714  01966E  6E0C               	movwf	(btemp+11)^0,c
 26715                           
 26716                           ;stkvar	_p @ sp[(-20)+18]
 26717  019670  0EFE               	movlw	-2
 26718  019672  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26719  019678  0EFF               	movlw	-1
 26720  01967A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26721  019680  D008               	goto	l2624
 26722  019682                     l15807:
 26723                           
 26724                           ;stkvar	_p @ sp[(-20)+18]
 26725  019682  0EFE               	movlw	-2
 26726  019684  0060  F0F3  FFE3   	movff	_prec,plusw1
 26727  01968A  0EFF               	movlw	-1
 26728  01968C  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 26729  019692                     l2624:
 26730                           
 26731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 26732                           ;stkvar	_w @ sp[(-20)+16]
 26733  019692  0EFC               	movlw	-4
 26734  019694  0060  F0EB  FFE3   	movff	_width,plusw1
 26735  01969A  0EFD               	movlw	-3
 26736  01969C  0060  F0EF  FFE3   	movff	_width+1,plusw1
 26737                           
 26738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 26739  0196A2  A83E               	btfss	_flags^0,4,c
 26740  0196A4  D00B               	goto	l15813
 26741                           
 26742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 26743                           ;stkvar	_w @ sp[(-20)+16]
 26744  0196A6  50E1               	movf	fsr1l,w,c
 26745  0196A8  0FFC               	addlw	-4
 26746  0196AA  6ED9               	movwf	fsr2l,c
 26747  0196AC  50E2               	movf	fsr1h,w,c
 26748  0196AE  6EDA               	movwf	fsr2h,c
 26749  0196B0  0EFF               	movlw	255
 26750  0196B2  22DA               	addwfc	fsr2h,f,c
 26751  0196B4  0EFE               	movlw	254
 26752  0196B6  26DE               	addwf	postinc2,f,c
 26753  0196B8  0EFF               	movlw	255
 26754  0196BA  22DD               	addwfc	postdec2,f,c
 26755  0196BC                     l15813:
 26756                           
 26757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 26758                           ;stkvar	_d @ sp[(-20)+-10]
 26759  0196BC  0EE2               	movlw	226
 26760  0196BE  24E1               	addwf	fsr1l,w,c
 26761  0196C0  6ED9               	movwf	fsr2l,c
 26762  0196C2  0EFF               	movlw	255
 26763  0196C4  20E2               	addwfc	fsr1h,w,c
 26764  0196C6  6EDA               	movwf	fsr2h,c
 26765                           
 26766                           ;stkvar	_n @ sp[(-20)+4]
 26767  0196C8  0E08               	movlw	8
 26768  0196CA  6E01               	movwf	btemp^0,c
 26769  0196CC  0EF0               	movlw	-16
 26770  0196CE                     us1518999:
 26771  0196CE  006F FF7B FFE3     	movff	postinc2,plusw1
 26772  0196D4  28E8               	incf	wreg,w,c
 26773  0196D6  2E01               	decfsz	btemp^0,f,c
 26774  0196D8  D7FA               	bra	us1518999
 26775                           
 26776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 26777  0196DA  0E4F               	movlw	79
 26778  0196DC  6E0B               	movwf	(btemp+10)^0,c
 26779  0196DE  0E00               	movlw	0
 26780  0196E0  6E0C               	movwf	(btemp+11)^0,c
 26781                           
 26782                           ;stkvar	_i @ sp[(-20)+14]
 26783  0196E2  0EFA               	movlw	-6
 26784  0196E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26785  0196EA  0EFB               	movlw	-5
 26786  0196EC  0060  F033  FFE3   	movff	btemp+11,plusw1
 26787                           
 26788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 26789  0196F2  0103               	movlb	3	; () banked
 26790  0196F4  6BA3               	clrf	(_dbuf+79)& (0+255),b
 26791                           
 26792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 26793  0196F6  D0EE               	goto	l15851
 26794  0196F8                     l15819:
 26795                           
 26796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 26797                           ;stkvar	_i @ sp[(-20)+14]
 26798  0196F8  50E1               	movf	fsr1l,w,c
 26799  0196FA  0FFA               	addlw	-6
 26800  0196FC  6ED9               	movwf	fsr2l,c
 26801  0196FE  50E2               	movf	fsr1h,w,c
 26802  019700  6EDA               	movwf	fsr2h,c
 26803  019702  0EFF               	movlw	255
 26804  019704  22DA               	addwfc	fsr2h,f,c
 26805  019706  06DE               	decf	postinc2,f,c
 26806  019708  0E00               	movlw	0
 26807  01970A  5ADD               	subwfb	postdec2,f,c
 26808                           
 26809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 26810                           ;stkvar	_n @ sp[(-20)+4]
 26811  01970C  0EF0               	movlw	-16
 26812  01970E  006F FF8C  F00B    	movff	plusw1,btemp+10
 26813  019714  0EF1               	movlw	-15
 26814  019716  006F FF8C  F00C    	movff	plusw1,btemp+11
 26815  01971C  0E0F               	movlw	15
 26816  01971E  160B               	andwf	(btemp+10)^0,f,c
 26817  019720  0E00               	movlw	0
 26818  019722  160C               	andwf	(btemp+11)^0,f,c
 26819                           
 26820                           ;stkvar	_c @ sp[(-20)+12]
 26821  019724  0EF8               	movlw	-8
 26822  019726  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26823  01972C  0EF9               	movlw	-7
 26824  01972E  0060  F033  FFE3   	movff	btemp+11,plusw1
 26825                           
 26826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 26827                           ;stkvar	_c @ sp[(-20)+12]
 26828  019734  0EF9               	movlw	-7
 26829  019736  BEE3               	btfsc	plusw1,7,c
 26830  019738  D00F               	goto	l15827
 26831  01973A  0EF9               	movlw	-7
 26832  01973C  50E3               	movf	plusw1,w,c
 26833  01973E  E108               	bnz	u15190
 26834  019740  0EF8               	movlw	-8
 26835  019742  006F FF8C  F001    	movff	plusw1,btemp
 26836  019748  0E0A               	movlw	10
 26837  01974A  5E01               	subwf	btemp^0,f,c
 26838  01974C  A0D8               	btfss	status,0,c
 26839  01974E  D004               	goto	l15827
 26840  019750                     u15190:
 26841                           
 26842                           ;stkvar	_c @ sp[(-20)+12]
 26843  019750  0EF8               	movlw	-8
 26844  019752  50E3               	movf	plusw1,w,c
 26845  019754  0F57               	addlw	87
 26846  019756  D003               	goto	L27
 26847  019758                     l15827:
 26848                           
 26849                           ;stkvar	_c @ sp[(-20)+12]
 26850  019758  0EF8               	movlw	-8
 26851  01975A  50E3               	movf	plusw1,w,c
 26852  01975C  0F30               	addlw	48
 26853  01975E                     L27:
 26854  01975E  6E0B               	movwf	(btemp+10)^0,c
 26855  019760  0EF9               	movlw	-7
 26856  019762  006F FF8C  F00C    	movff	plusw1,btemp+11
 26857  019768  0E00               	movlw	0
 26858  01976A  220C               	addwfc	(btemp+11)^0,f,c
 26859                           
 26860                           ;stkvar	_c @ sp[(-20)+12]
 26861  01976C  0EF8               	movlw	-8
 26862  01976E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26863  019774  0EF9               	movlw	-7
 26864  019776  0060  F033  FFE3   	movff	btemp+11,plusw1
 26865  01977C  0EBF               	movlw	191
 26866  01977E  6E0B               	movwf	(btemp+10)^0,c
 26867  019780  0EFF               	movlw	255
 26868  019782  6E0C               	movwf	(btemp+11)^0,c
 26869                           
 26870                           ;stkvar	_x @ sp[(-20)+-11]
 26871  019784  0EE1               	movlw	-31
 26872  019786  50E3               	movf	plusw1,w,c
 26873  019788  6E09               	movwf	(btemp+8)^0,c
 26874  01978A  6A0A               	clrf	(btemp+9)^0,c
 26875  01978C  500B               	movf	(btemp+10)^0,w,c
 26876  01978E  2609               	addwf	(btemp+8)^0,f,c
 26877  019790  500C               	movf	(btemp+11)^0,w,c
 26878  019792  220A               	addwfc	(btemp+9)^0,f,c
 26879  019794  500A               	movf	(btemp+9)^0,w,c
 26880  019796  E106               	bnz	u15200
 26881  019798  0E1A               	movlw	26
 26882  01979A  5C09               	subwf	(btemp+8)^0,w,c
 26883  01979C  B0D8               	btfsc	status,0,c
 26884  01979E  D002               	goto	u15200
 26885  0197A0  0E01               	movlw	1
 26886  0197A2  D001               	goto	u15210
 26887  0197A4                     u15200:
 26888  0197A4  0E00               	movlw	0
 26889  0197A6                     u15210:
 26890  0197A6  6E0B               	movwf	(btemp+10)^0,c
 26891  0197A8  6A0C               	clrf	(btemp+11)^0,c
 26892                           
 26893                           ;stkvar	_xtoa$6883 @ sp[(-20)+2]
 26894  0197AA  0EEE               	movlw	-18
 26895  0197AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26896  0197B2  0EEF               	movlw	-17
 26897  0197B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 26898                           
 26899                           ;stkvar	_xtoa$6883 @ sp[(-20)+2]
 26900  0197BA  0EEE               	movlw	-18
 26901  0197BC  006F FF8C  F001    	movff	plusw1,btemp
 26902  0197C2  0EEF               	movlw	-17
 26903  0197C4  50E3               	movf	plusw1,w,c
 26904  0197C6  1001               	iorwf	btemp^0,w,c
 26905  0197C8  B4D8               	btfsc	status,2,c
 26906  0197CA  D041               	goto	l15843
 26907  0197CC  0E9F               	movlw	159
 26908  0197CE  6E0B               	movwf	(btemp+10)^0,c
 26909  0197D0  0EFF               	movlw	255
 26910  0197D2  6E0C               	movwf	(btemp+11)^0,c
 26911                           
 26912                           ;stkvar	_c @ sp[(-20)+12]
 26913  0197D4  0EF8               	movlw	-8
 26914  0197D6  006F FF8C  F009    	movff	plusw1,btemp+8
 26915  0197DC  0EF9               	movlw	-7
 26916  0197DE  006F FF8C  F00A    	movff	plusw1,btemp+9
 26917  0197E4  0E20               	movlw	32
 26918  0197E6  1209               	iorwf	(btemp+8)^0,f,c
 26919  0197E8  0E00               	movlw	0
 26920  0197EA  120A               	iorwf	(btemp+9)^0,f,c
 26921  0197EC  500B               	movf	(btemp+10)^0,w,c
 26922  0197EE  2609               	addwf	(btemp+8)^0,f,c
 26923  0197F0  500C               	movf	(btemp+11)^0,w,c
 26924  0197F2  220A               	addwfc	(btemp+9)^0,f,c
 26925  0197F4  500A               	movf	(btemp+9)^0,w,c
 26926  0197F6  E106               	bnz	u15230
 26927  0197F8  0E1A               	movlw	26
 26928  0197FA  5C09               	subwf	(btemp+8)^0,w,c
 26929  0197FC  B0D8               	btfsc	status,0,c
 26930  0197FE  D002               	goto	u15230
 26931  019800  0E01               	movlw	1
 26932  019802  D001               	goto	u15240
 26933  019804                     u15230:
 26934  019804  0E00               	movlw	0
 26935  019806                     u15240:
 26936  019806  6E0B               	movwf	(btemp+10)^0,c
 26937  019808  6A0C               	clrf	(btemp+11)^0,c
 26938                           
 26939                           ;stkvar	_xtoa$6884 @ sp[(-20)+0]
 26940  01980A  0EEC               	movlw	-20
 26941  01980C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26942  019812  0EED               	movlw	-19
 26943  019814  0060  F033  FFE3   	movff	btemp+11,plusw1
 26944                           
 26945                           ;stkvar	_xtoa$6884 @ sp[(-20)+0]
 26946  01981A  0EEC               	movlw	-20
 26947  01981C  006F FF8C  F001    	movff	plusw1,btemp
 26948  019822  0EED               	movlw	-19
 26949  019824  50E3               	movf	plusw1,w,c
 26950  019826  1001               	iorwf	btemp^0,w,c
 26951  019828  B4D8               	btfsc	status,2,c
 26952  01982A  D011               	goto	l15843
 26953                           
 26954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 26955                           ;stkvar	_c @ sp[(-20)+12]
 26956  01982C  0EF8               	movlw	-8
 26957  01982E  006F FF8F FFE6     	movff	plusw1,postinc1
 26958  019834  006F FF8F FFE6     	movff	plusw1,postinc1
 26959  01983A  EC65  F003         	call	_toupper	;wreg free
 26960                           
 26961                           ;stkvar	_c @ sp[(-20)+12]
 26962  01983E  0EF8               	movlw	-8
 26963  019840  0060  F007  FFE3   	movff	btemp,plusw1
 26964  019846  0EF9               	movlw	-7
 26965  019848  0060  F00B  FFE3   	movff	btemp+1,plusw1
 26966  01984E                     l15843:
 26967                           
 26968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 26969                           ;stkvar	_c @ sp[(-20)+12]
 26970                           ;stkvar	_i @ sp[(-20)+14]
 26971  01984E  0EFA               	movlw	-6
 26972  019850  006F FF8C  F00B    	movff	plusw1,btemp+10
 26973  019856  0EFB               	movlw	-5
 26974  019858  006F FF8C  F00C    	movff	plusw1,btemp+11
 26975  01985E  0E54               	movlw	low _dbuf
 26976  019860  240B               	addwf	(btemp+10)^0,w,c
 26977  019862  6ED9               	movwf	fsr2l,c
 26978  019864  0E03               	movlw	high _dbuf
 26979  019866  200C               	addwfc	(btemp+11)^0,w,c
 26980  019868  6EDA               	movwf	fsr2h,c
 26981  01986A  0EF8               	movlw	-8
 26982  01986C  006F FF8F FFDF     	movff	plusw1,indf2
 26983                           
 26984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 26985                           ;stkvar	_p @ sp[(-20)+18]
 26986  019872  50E1               	movf	fsr1l,w,c
 26987  019874  0FFE               	addlw	-2
 26988  019876  6ED9               	movwf	fsr2l,c
 26989  019878  50E2               	movf	fsr1h,w,c
 26990  01987A  6EDA               	movwf	fsr2h,c
 26991  01987C  0EFF               	movlw	255
 26992  01987E  22DA               	addwfc	fsr2h,f,c
 26993  019880  06DE               	decf	postinc2,f,c
 26994  019882  0E00               	movlw	0
 26995  019884  5ADD               	subwfb	postdec2,f,c
 26996                           
 26997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 26998                           ;stkvar	_w @ sp[(-20)+16]
 26999  019886  50E1               	movf	fsr1l,w,c
 27000  019888  0FFC               	addlw	-4
 27001  01988A  6ED9               	movwf	fsr2l,c
 27002  01988C  50E2               	movf	fsr1h,w,c
 27003  01988E  6EDA               	movwf	fsr2h,c
 27004  019890  0EFF               	movlw	255
 27005  019892  22DA               	addwfc	fsr2h,f,c
 27006  019894  06DE               	decf	postinc2,f,c
 27007  019896  0E00               	movlw	0
 27008  019898  5ADD               	subwfb	postdec2,f,c
 27009                           
 27010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 27011  01989A  0E04               	movlw	4
 27012  01989C  6E0C               	movwf	(btemp+11)^0,c
 27013                           
 27014                           ;stkvar	_n @ sp[(-20)+4]
 27015  01989E  50E1               	movf	fsr1l,w,c
 27016  0198A0  0FF0               	addlw	-16
 27017  0198A2  6ED9               	movwf	fsr2l,c
 27018  0198A4  50E2               	movf	fsr1h,w,c
 27019  0198A6  6EDA               	movwf	fsr2h,c
 27020  0198A8  0EFF               	movlw	255
 27021  0198AA  22DA               	addwfc	fsr2h,f,c
 27022  0198AC  280C               	incf	(btemp+11)^0,w,c
 27023  0198AE  52DE               	movf	postinc2,f,c
 27024  0198B0  D00F               	goto	u15260
 27025  0198B2                     u15265:
 27026  0198B2  52DE               	movf	postinc2,f,c
 27027  0198B4  52DE               	movf	postinc2,f,c
 27028  0198B6  52DE               	movf	postinc2,f,c
 27029  0198B8  52DE               	movf	postinc2,f,c
 27030  0198BA  52DE               	movf	postinc2,f,c
 27031  0198BC  52DE               	movf	postinc2,f,c
 27032  0198BE  90D8               	bcf	status,0,c
 27033  0198C0  32DD               	rrcf	postdec2,f,c
 27034  0198C2  32DD               	rrcf	postdec2,f,c
 27035  0198C4  32DD               	rrcf	postdec2,f,c
 27036  0198C6  32DD               	rrcf	postdec2,f,c
 27037  0198C8  32DD               	rrcf	postdec2,f,c
 27038  0198CA  32DD               	rrcf	postdec2,f,c
 27039  0198CC  32DD               	rrcf	postdec2,f,c
 27040  0198CE  32DE               	rrcf	postinc2,f,c
 27041  0198D0                     u15260:
 27042  0198D0  2EE8               	decfsz	wreg,f,c
 27043  0198D2  D7EF               	goto	u15265
 27044  0198D4                     l15851:
 27045                           
 27046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 27047                           ;stkvar	_i @ sp[(-20)+14]
 27048  0198D4  0EFB               	movlw	-5
 27049  0198D6  BEE3               	btfsc	plusw1,7,c
 27050  0198D8  D03A               	goto	u15310
 27051  0198DA  0EFB               	movlw	-5
 27052  0198DC  50E3               	movf	plusw1,w,c
 27053  0198DE  E108               	bnz	u15270
 27054  0198E0  0EFA               	movlw	-6
 27055  0198E2  006F FF8C  F001    	movff	plusw1,btemp
 27056  0198E8  0E02               	movlw	2
 27057  0198EA  5E01               	subwf	btemp^0,f,c
 27058  0198EC  A0D8               	btfss	status,0,c
 27059  0198EE  D02F               	goto	u15310
 27060  0198F0                     u15270:
 27061                           
 27062                           ;stkvar	_n @ sp[(-20)+4]
 27063  0198F0  0EF0               	movlw	-16
 27064  0198F2  50E3               	movf	plusw1,w,c
 27065  0198F4  E115               	bnz	u15281
 27066  0198F6  0EF1               	movlw	-15
 27067  0198F8  50E3               	movf	plusw1,w,c
 27068  0198FA  E112               	bnz	u15281
 27069  0198FC  0EF2               	movlw	-14
 27070  0198FE  50E3               	movf	plusw1,w,c
 27071  019900  E10F               	bnz	u15281
 27072  019902  0EF3               	movlw	-13
 27073  019904  50E3               	movf	plusw1,w,c
 27074  019906  E10C               	bnz	u15281
 27075  019908  0EF4               	movlw	-12
 27076  01990A  50E3               	movf	plusw1,w,c
 27077  01990C  E109               	bnz	u15281
 27078  01990E  0EF5               	movlw	-11
 27079  019910  50E3               	movf	plusw1,w,c
 27080  019912  E106               	bnz	u15281
 27081  019914  0EF6               	movlw	-10
 27082  019916  50E3               	movf	plusw1,w,c
 27083  019918  E103               	bnz	u15281
 27084  01991A  0EF7               	movlw	-9
 27085  01991C  50E3               	movf	plusw1,w,c
 27086  01991E  A4D8               	btfss	status,2,c
 27087  019920                     u15281:
 27088  019920  D6EB               	goto	l15819
 27089                           
 27090                           ;stkvar	_p @ sp[(-20)+18]
 27091  019922  0EFF               	movlw	-1
 27092  019924  BEE3               	btfsc	plusw1,7,c
 27093  019926  D007               	goto	u15290
 27094  019928  0EFF               	movlw	-1
 27095  01992A  50E3               	movf	plusw1,w,c
 27096  01992C  E103               	bnz	u15291
 27097  01992E  0EFE               	movlw	-2
 27098  019930  04E3               	decf	plusw1,w,c
 27099  019932  B0D8               	btfsc	status,0,c
 27100  019934                     u15291:
 27101  019934  D6E1               	goto	l15819
 27102  019936                     u15290:
 27103                           
 27104                           ;stkvar	_w @ sp[(-20)+16]
 27105  019936  0EFD               	movlw	-3
 27106  019938  BEE3               	btfsc	plusw1,7,c
 27107  01993A  D009               	goto	u15310
 27108  01993C  0EFD               	movlw	-3
 27109  01993E  50E3               	movf	plusw1,w,c
 27110  019940  E104               	bnz	u15300
 27111  019942  0EFC               	movlw	-4
 27112  019944  04E3               	decf	plusw1,w,c
 27113  019946  A0D8               	btfss	status,0,c
 27114  019948  D002               	goto	u15310
 27115  01994A                     u15300:
 27116  01994A  B23E               	btfsc	_flags^0,1,c
 27117  01994C  D6D5               	goto	l15819
 27118  01994E                     u15310:
 27119                           
 27120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 27121  01994E  A83E               	btfss	_flags^0,4,c
 27122  019950  D036               	goto	l15867
 27123                           
 27124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 27125                           ;stkvar	_i @ sp[(-20)+14]
 27126  019952  50E1               	movf	fsr1l,w,c
 27127  019954  0FFA               	addlw	-6
 27128  019956  6ED9               	movwf	fsr2l,c
 27129  019958  50E2               	movf	fsr1h,w,c
 27130  01995A  6EDA               	movwf	fsr2h,c
 27131  01995C  0EFF               	movlw	255
 27132  01995E  22DA               	addwfc	fsr2h,f,c
 27133  019960  06DE               	decf	postinc2,f,c
 27134  019962  0E00               	movlw	0
 27135  019964  5ADD               	subwfb	postdec2,f,c
 27136                           
 27137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 27138                           ;stkvar	_x @ sp[(-20)+-11]
 27139                           ;stkvar	_i @ sp[(-20)+14]
 27140  019966  0EFA               	movlw	-6
 27141  019968  006F FF8C  F00B    	movff	plusw1,btemp+10
 27142  01996E  0EFB               	movlw	-5
 27143  019970  006F FF8C  F00C    	movff	plusw1,btemp+11
 27144  019976  0E54               	movlw	low _dbuf
 27145  019978  240B               	addwf	(btemp+10)^0,w,c
 27146  01997A  6ED9               	movwf	fsr2l,c
 27147  01997C  0E03               	movlw	high _dbuf
 27148  01997E  200C               	addwfc	(btemp+11)^0,w,c
 27149  019980  6EDA               	movwf	fsr2h,c
 27150  019982  0EE1               	movlw	-31
 27151  019984  006F FF8F FFDF     	movff	plusw1,indf2
 27152                           
 27153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 27154                           ;stkvar	_i @ sp[(-20)+14]
 27155  01998A  50E1               	movf	fsr1l,w,c
 27156  01998C  0FFA               	addlw	-6
 27157  01998E  6ED9               	movwf	fsr2l,c
 27158  019990  50E2               	movf	fsr1h,w,c
 27159  019992  6EDA               	movwf	fsr2h,c
 27160  019994  0EFF               	movlw	255
 27161  019996  22DA               	addwfc	fsr2h,f,c
 27162  019998  06DE               	decf	postinc2,f,c
 27163  01999A  0E00               	movlw	0
 27164  01999C  5ADD               	subwfb	postdec2,f,c
 27165                           
 27166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 27167                           ;stkvar	_i @ sp[(-20)+14]
 27168  01999E  0EFA               	movlw	-6
 27169  0199A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 27170  0199A6  0EFB               	movlw	-5
 27171  0199A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 27172  0199AE  0E54               	movlw	low _dbuf
 27173  0199B0  240B               	addwf	(btemp+10)^0,w,c
 27174  0199B2  6ED9               	movwf	fsr2l,c
 27175  0199B4  0E03               	movlw	high _dbuf
 27176  0199B6  200C               	addwfc	(btemp+11)^0,w,c
 27177  0199B8  6EDA               	movwf	fsr2h,c
 27178  0199BA  0E30               	movlw	48
 27179  0199BC  6EDF               	movwf	indf2,c
 27180  0199BE                     l15867:
 27181                           
 27182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 27183                           ;stkvar	_w @ sp[(-20)+16]
 27184  0199BE  0EFC               	movlw	-4
 27185  0199C0  006F FF8F FFE6     	movff	plusw1,postinc1
 27186  0199C6  006F FF8F FFE6     	movff	plusw1,postinc1
 27187                           
 27188                           ;stkvar	_i @ sp[(-22)+14]
 27189  0199CC  0E54               	movlw	low _dbuf
 27190  0199CE  6E0B               	movwf	(btemp+10)^0,c
 27191  0199D0  0E03               	movlw	high _dbuf
 27192  0199D2  6E0C               	movwf	(btemp+11)^0,c
 27193  0199D4  0EF8               	movlw	-8
 27194  0199D6  50E3               	movf	plusw1,w,c
 27195  0199D8  260B               	addwf	(btemp+10)^0,f,c
 27196  0199DA  0EF9               	movlw	-7
 27197  0199DC  50E3               	movf	plusw1,w,c
 27198  0199DE  220C               	addwfc	(btemp+11)^0,f,c
 27199  0199E0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 27200  0199E6  0060  F033  FFE6   	movff	btemp+11,postinc1
 27201                           
 27202                           ;stkvar	_fp @ sp[(-24)+-2]
 27203  0199EC  0EE6               	movlw	-26
 27204  0199EE  006F FF8F FFE6     	movff	plusw1,postinc1
 27205  0199F4  006F FF8F FFE6     	movff	plusw1,postinc1
 27206  0199FA  EC51  F0F7         	call	_pad	;wreg free
 27207                           
 27208                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 27209  0199FE  0EE1               	movlw	225
 27210  019A00  26E1               	addwf	fsr1l,f,c
 27211  019A02  0EFF               	movlw	255
 27212  019A04  22E2               	addwfc	fsr1h,f,c
 27213  019A06  0012               	return		;funcret
 27214  019A08                     __end_of_xtoa:
 27215                           	opt callstack 0
 27216                           
 27217 ;; *************** function _toupper *****************
 27218 ;; Defined at:
 27219 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 27220 ;; Parameters:    Size  Location     Type
 27221 ;;  c               2  [STACK] int 
 27222 ;; Auto vars:     Size  Location     Type
 27223 ;;		None
 27224 ;; Return value:  Size  Location     Type
 27225 ;;                  2  [STACK] int 
 27226 ;; Registers used:
 27227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 27228 ;; Tracked objects:
 27229 ;;		On entry : 0/3
 27230 ;;		On exit  : 0/0
 27231 ;;		Unchanged: 0/0
 27232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27237 ;;Total ram usage:        0 bytes
 27238 ;; Hardware stack levels used:    1
 27239 ;; Hardware stack levels required when called:   16
 27240 ;; This function calls:
 27241 ;;		_islower
 27242 ;; This function is called by:
 27243 ;;		_xtoa
 27244 ;; This function uses a reentrant model
 27245 ;;
 27246                           
 27247                           	psect	text93
 27248  0006CA                     __ptext93:
 27249                           	opt callstack 0
 27250  0006CA                     _toupper:
 27251                           	opt callstack 0
 27252                           
 27253                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27254  0006CA  52E6               	movf	postinc1,f,c
 27255  0006CC  52E6               	movf	postinc1,f,c
 27256                           
 27257                           ;stkvar	_c @ sp[(-2)+-2]
 27258                           
 27259                           ;incstack = 0
 27260 ;; hardware stack exceeded
 27261  0006CE  0EFC               	movlw	-4
 27262  0006D0  50E3               	movf	plusw1,w,c
 27263  0006D2  0F9F               	addlw	159
 27264  0006D4  6E0B               	movwf	(btemp+10)^0,c
 27265  0006D6  0EFD               	movlw	-3
 27266  0006D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 27267  0006DE  0EFF               	movlw	255
 27268  0006E0  220C               	addwfc	(btemp+11)^0,f,c
 27269  0006E2  500C               	movf	(btemp+11)^0,w,c
 27270  0006E4  E106               	bnz	u7940
 27271  0006E6  0E1A               	movlw	26
 27272  0006E8  5C0B               	subwf	(btemp+10)^0,w,c
 27273  0006EA  B0D8               	btfsc	status,0,c
 27274  0006EC  D002               	goto	u7940
 27275  0006EE  0E01               	movlw	1
 27276  0006F0  D001               	goto	u7950
 27277  0006F2                     u7940:
 27278  0006F2  0E00               	movlw	0
 27279  0006F4                     u7950:
 27280  0006F4  6E0B               	movwf	(btemp+10)^0,c
 27281  0006F6  6A0C               	clrf	(btemp+11)^0,c
 27282                           
 27283                           ;stkvar	_toupper$7825 @ sp[(-2)+0]
 27284  0006F8  0EFE               	movlw	-2
 27285  0006FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27286  000700  0EFF               	movlw	-1
 27287  000702  0060  F033  FFE3   	movff	btemp+11,plusw1
 27288                           
 27289                           ;stkvar	_toupper$7825 @ sp[(-2)+0]
 27290  000708  0EFE               	movlw	-2
 27291  00070A  006F FF8C  F001    	movff	plusw1,btemp
 27292  000710  0EFF               	movlw	-1
 27293  000712  50E3               	movf	plusw1,w,c
 27294  000714  1001               	iorwf	btemp^0,w,c
 27295  000716  B4D8               	btfsc	status,2,c
 27296  000718  D00D               	goto	l10119
 27297                           
 27298                           ;stkvar	_c @ sp[(-2)+-2]
 27299  00071A  0EFC               	movlw	-4
 27300  00071C  006F FF8C  F001    	movff	plusw1,btemp
 27301  000722  0EFD               	movlw	-3
 27302  000724  006F FF8C  F002    	movff	plusw1,btemp+1
 27303  00072A  0E5F               	movlw	95
 27304  00072C  1601               	andwf	btemp^0,f,c
 27305  00072E  0E00               	movlw	0
 27306  000730  1602               	andwf	(btemp+1)^0,f,c
 27307  000732  D008               	goto	l3821
 27308  000734                     l10119:
 27309                           
 27310                           ;stkvar	_c @ sp[(-2)+-2]
 27311  000734  0EFC               	movlw	-4
 27312  000736  006F FF8C  F001    	movff	plusw1,btemp
 27313  00073C  0EFD               	movlw	-3
 27314  00073E  006F FF8C  F002    	movff	plusw1,btemp+1
 27315  000744                     l3821:
 27316                           
 27317                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27318  000744  52E5               	movf	postdec1,f,c
 27319  000746  52E5               	movf	postdec1,f,c
 27320  000748  52E5               	movf	postdec1,f,c
 27321  00074A  52E5               	movf	postdec1,f,c
 27322  00074C  0012               	return		;funcret
 27323  00074E                     __end_of_toupper:
 27324                           	opt callstack 0
 27325                           
 27326 ;; *************** function _islower *****************
 27327 ;; Defined at:
 27328 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 27329 ;; Parameters:    Size  Location     Type
 27330 ;;  c               2  [STACK] int 
 27331 ;; Auto vars:     Size  Location     Type
 27332 ;;		None
 27333 ;; Return value:  Size  Location     Type
 27334 ;;                  2  [STACK] int 
 27335 ;; Registers used:
 27336 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 27337 ;; Tracked objects:
 27338 ;;		On entry : 0/0
 27339 ;;		On exit  : 0/0
 27340 ;;		Unchanged: 0/0
 27341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27346 ;;Total ram usage:        0 bytes
 27347 ;; Hardware stack levels used:    1
 27348 ;; Hardware stack levels required when called:   15
 27349 ;; This function calls:
 27350 ;;		Nothing
 27351 ;; This function is called by:
 27352 ;;		_toupper
 27353 ;; This function uses a reentrant model
 27354 ;;
 27355                           
 27356                           	psect	text94
 27357  001850                     __ptext94:
 27358                           	opt callstack 0
 27359  001850                     _islower:
 27360                           	opt callstack 0
 27361                           
 27362                           ;stkvar	_c @ sp[(0)+-2]
 27363                           
 27364                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27365                           ;incstack = 0
 27366 ;; hardware stack exceeded
 27367  001850  0EFE               	movlw	-2
 27368  001852  50E3               	movf	plusw1,w,c
 27369  001854  0F9F               	addlw	159
 27370  001856  6E0B               	movwf	(btemp+10)^0,c
 27371  001858  0EFF               	movlw	-1
 27372  00185A  006F FF8C  F00C    	movff	plusw1,btemp+11
 27373  001860  0EFF               	movlw	255
 27374  001862  220C               	addwfc	(btemp+11)^0,f,c
 27375  001864  500C               	movf	(btemp+11)^0,w,c
 27376  001866  E106               	bnz	u7570
 27377  001868  0E1A               	movlw	26
 27378  00186A  5C0B               	subwf	(btemp+10)^0,w,c
 27379  00186C  B0D8               	btfsc	status,0,c
 27380  00186E  D002               	goto	u7570
 27381  001870  0E01               	movlw	1
 27382  001872  D001               	goto	u7580
 27383  001874                     u7570:
 27384  001874  0E00               	movlw	0
 27385  001876                     u7580:
 27386  001876  6E01               	movwf	btemp^0,c
 27387  001878  6A02               	clrf	(btemp+1)^0,c
 27388                           
 27389                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27390  00187A  52E5               	movf	postdec1,f,c
 27391  00187C  52E5               	movf	postdec1,f,c
 27392  00187E  0012               	return		;funcret
 27393  001880                     __end_of_islower:
 27394                           	opt callstack 0
 27395                           
 27396 ;; *************** function _isalpha *****************
 27397 ;; Defined at:
 27398 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 27399 ;; Parameters:    Size  Location     Type
 27400 ;;  c               2  [STACK] int 
 27401 ;; Auto vars:     Size  Location     Type
 27402 ;;		None
 27403 ;; Return value:  Size  Location     Type
 27404 ;;                  2  [STACK] int 
 27405 ;; Registers used:
 27406 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 27407 ;; Tracked objects:
 27408 ;;		On entry : 0/0
 27409 ;;		On exit  : 0/0
 27410 ;;		Unchanged: 0/0
 27411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27416 ;;Total ram usage:        0 bytes
 27417 ;; Hardware stack levels used:    1
 27418 ;; Hardware stack levels required when called:   15
 27419 ;; This function calls:
 27420 ;;		Nothing
 27421 ;; This function is called by:
 27422 ;;		_xtoa
 27423 ;; This function uses a reentrant model
 27424 ;;
 27425                           
 27426                           	psect	text95
 27427  0013FE                     __ptext95:
 27428                           	opt callstack 0
 27429  0013FE                     _isalpha:
 27430                           	opt callstack 0
 27431                           
 27432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27433                           ;incstack = 0
 27434 ;; hardware stack exceeded
 27435  0013FE  0E9F               	movlw	159
 27436  001400  6E0B               	movwf	(btemp+10)^0,c
 27437  001402  0EFF               	movlw	255
 27438  001404  6E0C               	movwf	(btemp+11)^0,c
 27439                           
 27440                           ;stkvar	_c @ sp[(0)+-2]
 27441  001406  0EFE               	movlw	-2
 27442  001408  006F FF8C  F009    	movff	plusw1,btemp+8
 27443  00140E  0EFF               	movlw	-1
 27444  001410  006F FF8C  F00A    	movff	plusw1,btemp+9
 27445  001416  0E20               	movlw	32
 27446  001418  1209               	iorwf	(btemp+8)^0,f,c
 27447  00141A  0E00               	movlw	0
 27448  00141C  120A               	iorwf	(btemp+9)^0,f,c
 27449  00141E  500B               	movf	(btemp+10)^0,w,c
 27450  001420  2609               	addwf	(btemp+8)^0,f,c
 27451  001422  500C               	movf	(btemp+11)^0,w,c
 27452  001424  220A               	addwfc	(btemp+9)^0,f,c
 27453  001426  500A               	movf	(btemp+9)^0,w,c
 27454  001428  E106               	bnz	u7920
 27455  00142A  0E1A               	movlw	26
 27456  00142C  5C09               	subwf	(btemp+8)^0,w,c
 27457  00142E  B0D8               	btfsc	status,0,c
 27458  001430  D002               	goto	u7920
 27459  001432  0E01               	movlw	1
 27460  001434  D001               	goto	u7930
 27461  001436                     u7920:
 27462  001436  0E00               	movlw	0
 27463  001438                     u7930:
 27464  001438  6E01               	movwf	btemp^0,c
 27465  00143A  6A02               	clrf	(btemp+1)^0,c
 27466                           
 27467                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 27468  00143C  52E5               	movf	postdec1,f,c
 27469  00143E  52E5               	movf	postdec1,f,c
 27470  001440  0012               	return		;funcret
 27471  001442                     __end_of_isalpha:
 27472                           	opt callstack 0
 27473                           
 27474 ;; *************** function _utoa *****************
 27475 ;; Defined at:
 27476 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 27477 ;; Parameters:    Size  Location     Type
 27478 ;;  fp              2  [STACK] PTR struct _IO_FILE
 27479 ;;		 -> f(6), NULL(0), 
 27480 ;;  d               8  [STACK] unsigned long long 
 27481 ;; Auto vars:     Size  Location     Type
 27482 ;;  n               8  [STACK] unsigned long long 
 27483 ;;  i               2  [STACK] int 
 27484 ;;  w               2  [STACK] int 
 27485 ;;  p               2  [STACK] int 
 27486 ;; Return value:  Size  Location     Type
 27487 ;;                  2  [STACK] int 
 27488 ;; Registers used:
 27489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 27490 ;; Tracked objects:
 27491 ;;		On entry : 0/0
 27492 ;;		On exit  : 0/0
 27493 ;;		Unchanged: 0/0
 27494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27499 ;;Total ram usage:        0 bytes
 27500 ;; Hardware stack levels used:    1
 27501 ;; Hardware stack levels required when called:   20
 27502 ;; This function calls:
 27503 ;;		___lodiv
 27504 ;;		___lomod
 27505 ;;		_pad
 27506 ;; This function is called by:
 27507 ;;		_vfpfcnvrt
 27508 ;; This function uses a reentrant model
 27509 ;;
 27510                           
 27511                           	psect	text96
 27512  01A0C4                     __ptext96:
 27513                           	opt callstack 0
 27514  01A0C4                     _utoa:
 27515                           	opt callstack 0
 27516                           
 27517                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 27518  01A0C4  0E0E               	movlw	14
 27519  01A0C6  26E1               	addwf	fsr1l,f,c
 27520  01A0C8  0E00               	movlw	0
 27521  01A0CA  22E2               	addwfc	fsr1h,f,c
 27522                           
 27523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 27524                           
 27525                           ;incstack = 0
 27526 ;; hardware stack exceeded
 27527  01A0CC  AE3D               	btfss	(_prec+1)^0,7,c
 27528                           
 27529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 27530  01A0CE  923E               	bcf	_flags^0,1,c
 27531                           
 27532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 27533  01A0D0  BE3D               	btfsc	(_prec+1)^0,7,c
 27534  01A0D2  D005               	goto	u15080
 27535  01A0D4  503D               	movf	(_prec+1)^0,w,c
 27536  01A0D6  E110               	bnz	l15767
 27537  01A0D8  043C               	decf	_prec^0,w,c
 27538  01A0DA  B0D8               	btfsc	status,0,c
 27539  01A0DC  D00D               	goto	l15767
 27540  01A0DE                     u15080:
 27541  01A0DE  0E01               	movlw	1
 27542  01A0E0  6E0B               	movwf	(btemp+10)^0,c
 27543  01A0E2  0E00               	movlw	0
 27544  01A0E4  6E0C               	movwf	(btemp+11)^0,c
 27545                           
 27546                           ;stkvar	_p @ sp[(-14)+12]
 27547  01A0E6  0EFE               	movlw	-2
 27548  01A0E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27549  01A0EE  0EFF               	movlw	-1
 27550  01A0F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 27551  01A0F6  D008               	goto	l2609
 27552  01A0F8                     l15767:
 27553                           
 27554                           ;stkvar	_p @ sp[(-14)+12]
 27555  01A0F8  0EFE               	movlw	-2
 27556  01A0FA  0060  F0F3  FFE3   	movff	_prec,plusw1
 27557  01A100  0EFF               	movlw	-1
 27558  01A102  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 27559  01A108                     l2609:
 27560                           
 27561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 27562                           ;stkvar	_w @ sp[(-14)+10]
 27563  01A108  0EFC               	movlw	-4
 27564  01A10A  0060  F0EB  FFE3   	movff	_width,plusw1
 27565  01A110  0EFD               	movlw	-3
 27566  01A112  0060  F0EF  FFE3   	movff	_width+1,plusw1
 27567                           
 27568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 27569                           ;stkvar	_d @ sp[(-14)+-10]
 27570  01A118  0EE8               	movlw	232
 27571  01A11A  24E1               	addwf	fsr1l,w,c
 27572  01A11C  6ED9               	movwf	fsr2l,c
 27573  01A11E  0EFF               	movlw	255
 27574  01A120  20E2               	addwfc	fsr1h,w,c
 27575  01A122  6EDA               	movwf	fsr2h,c
 27576                           
 27577                           ;stkvar	_n @ sp[(-14)+0]
 27578  01A124  0E08               	movlw	8
 27579  01A126  6E01               	movwf	btemp^0,c
 27580  01A128  0EF2               	movlw	-14
 27581  01A12A                     us1509999:
 27582  01A12A  006F FF7B FFE3     	movff	postinc2,plusw1
 27583  01A130  28E8               	incf	wreg,w,c
 27584  01A132  2E01               	decfsz	btemp^0,f,c
 27585  01A134  D7FA               	bra	us1509999
 27586                           
 27587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 27588  01A136  0E4F               	movlw	79
 27589  01A138  6E0B               	movwf	(btemp+10)^0,c
 27590  01A13A  0E00               	movlw	0
 27591  01A13C  6E0C               	movwf	(btemp+11)^0,c
 27592                           
 27593                           ;stkvar	_i @ sp[(-14)+8]
 27594  01A13E  0EFA               	movlw	-6
 27595  01A140  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27596  01A146  0EFB               	movlw	-5
 27597  01A148  0060  F033  FFE3   	movff	btemp+11,plusw1
 27598                           
 27599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 27600  01A14E  0103               	movlb	3	; () banked
 27601  01A150  6BA3               	clrf	(_dbuf+79)& (0+255),b
 27602                           
 27603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 27604  01A152  D0FB               	goto	l15785
 27605  01A154                     l15775:
 27606                           
 27607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 27608                           ;stkvar	_i @ sp[(-14)+8]
 27609  01A154  50E1               	movf	fsr1l,w,c
 27610  01A156  0FFA               	addlw	-6
 27611  01A158  6ED9               	movwf	fsr2l,c
 27612  01A15A  50E2               	movf	fsr1h,w,c
 27613  01A15C  6EDA               	movwf	fsr2h,c
 27614  01A15E  0EFF               	movlw	255
 27615  01A160  22DA               	addwfc	fsr2h,f,c
 27616  01A162  06DE               	decf	postinc2,f,c
 27617  01A164  0E00               	movlw	0
 27618  01A166  5ADD               	subwfb	postdec2,f,c
 27619                           
 27620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 27621  01A168  0E0A               	movlw	10
 27622  01A16A  6EE6               	movwf	postinc1,c
 27623  01A16C  0E00               	movlw	0
 27624  01A16E  6EE6               	movwf	postinc1,c
 27625  01A170  0E00               	movlw	0
 27626  01A172  6EE6               	movwf	postinc1,c
 27627  01A174  0E00               	movlw	0
 27628  01A176  6EE6               	movwf	postinc1,c
 27629  01A178  0E00               	movlw	0
 27630  01A17A  6EE6               	movwf	postinc1,c
 27631  01A17C  0E00               	movlw	0
 27632  01A17E  6EE6               	movwf	postinc1,c
 27633  01A180  0E00               	movlw	0
 27634  01A182  6EE6               	movwf	postinc1,c
 27635  01A184  0E00               	movlw	0
 27636  01A186  6EE6               	movwf	postinc1,c
 27637                           
 27638                           ;stkvar	_n @ sp[(-22)+0]
 27639  01A188  50E1               	movf	fsr1l,w,c
 27640  01A18A  0FEA               	addlw	-22
 27641  01A18C  6ED9               	movwf	fsr2l,c
 27642  01A18E  50E2               	movf	fsr1h,w,c
 27643  01A190  6EDA               	movwf	fsr2h,c
 27644  01A192  0EFF               	movlw	255
 27645  01A194  22DA               	addwfc	fsr2h,f,c
 27646  01A196  006F FF7B FFE6     	movff	postinc2,postinc1
 27647  01A19C  006F FF7B FFE6     	movff	postinc2,postinc1
 27648  01A1A2  006F FF7B FFE6     	movff	postinc2,postinc1
 27649  01A1A8  006F FF7B FFE6     	movff	postinc2,postinc1
 27650  01A1AE  006F FF7B FFE6     	movff	postinc2,postinc1
 27651  01A1B4  006F FF7B FFE6     	movff	postinc2,postinc1
 27652  01A1BA  006F FF7B FFE6     	movff	postinc2,postinc1
 27653  01A1C0  006F FF7B FFE6     	movff	postinc2,postinc1
 27654  01A1C6  ECDE  F0F3         	call	___lomod	;wreg free
 27655  01A1CA  52E5               	movf	postdec1,f,c
 27656  01A1CC  006F FF9C  F018    	movff	indf1,btemp+23
 27657  01A1D2  52E5               	movf	postdec1,f,c
 27658  01A1D4  006F FF9C  F017    	movff	indf1,btemp+22
 27659  01A1DA  52E5               	movf	postdec1,f,c
 27660  01A1DC  006F FF9C  F016    	movff	indf1,btemp+21
 27661  01A1E2  52E5               	movf	postdec1,f,c
 27662  01A1E4  006F FF9C  F015    	movff	indf1,btemp+20
 27663  01A1EA  52E5               	movf	postdec1,f,c
 27664  01A1EC  006F FF9C  F014    	movff	indf1,btemp+19
 27665  01A1F2  52E5               	movf	postdec1,f,c
 27666  01A1F4  006F FF9C  F013    	movff	indf1,btemp+18
 27667  01A1FA  52E5               	movf	postdec1,f,c
 27668  01A1FC  006F FF9C  F012    	movff	indf1,btemp+17
 27669  01A202  52E5               	movf	postdec1,f,c
 27670  01A204  006F FF9C  F011    	movff	indf1,btemp+16
 27671  01A20A  0EF8               	movlw	248
 27672  01A20C  26E1               	addwf	fsr1l,f,c
 27673  01A20E  0EFF               	movlw	255
 27674  01A210  22E2               	addwfc	fsr1h,f,c
 27675  01A212  0E30               	movlw	48
 27676  01A214  2611               	addwf	(btemp+16)^0,f,c
 27677                           
 27678                           ;stkvar	_i @ sp[(-14)+8]
 27679  01A216  0EFA               	movlw	-6
 27680  01A218  006F FF8C  F00B    	movff	plusw1,btemp+10
 27681  01A21E  0EFB               	movlw	-5
 27682  01A220  006F FF8C  F00C    	movff	plusw1,btemp+11
 27683  01A226  0E54               	movlw	low _dbuf
 27684  01A228  240B               	addwf	(btemp+10)^0,w,c
 27685  01A22A  6ED9               	movwf	fsr2l,c
 27686  01A22C  0E03               	movlw	high _dbuf
 27687  01A22E  200C               	addwfc	(btemp+11)^0,w,c
 27688  01A230  6EDA               	movwf	fsr2h,c
 27689  01A232  0060  F047  FFDF   	movff	btemp+16,indf2
 27690                           
 27691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 27692                           ;stkvar	_p @ sp[(-14)+12]
 27693  01A238  50E1               	movf	fsr1l,w,c
 27694  01A23A  0FFE               	addlw	-2
 27695  01A23C  6ED9               	movwf	fsr2l,c
 27696  01A23E  50E2               	movf	fsr1h,w,c
 27697  01A240  6EDA               	movwf	fsr2h,c
 27698  01A242  0EFF               	movlw	255
 27699  01A244  22DA               	addwfc	fsr2h,f,c
 27700  01A246  06DE               	decf	postinc2,f,c
 27701  01A248  0E00               	movlw	0
 27702  01A24A  5ADD               	subwfb	postdec2,f,c
 27703                           
 27704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 27705                           ;stkvar	_w @ sp[(-14)+10]
 27706  01A24C  50E1               	movf	fsr1l,w,c
 27707  01A24E  0FFC               	addlw	-4
 27708  01A250  6ED9               	movwf	fsr2l,c
 27709  01A252  50E2               	movf	fsr1h,w,c
 27710  01A254  6EDA               	movwf	fsr2h,c
 27711  01A256  0EFF               	movlw	255
 27712  01A258  22DA               	addwfc	fsr2h,f,c
 27713  01A25A  06DE               	decf	postinc2,f,c
 27714  01A25C  0E00               	movlw	0
 27715  01A25E  5ADD               	subwfb	postdec2,f,c
 27716                           
 27717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 27718  01A260  0E0A               	movlw	10
 27719  01A262  6EE6               	movwf	postinc1,c
 27720  01A264  0E00               	movlw	0
 27721  01A266  6EE6               	movwf	postinc1,c
 27722  01A268  0E00               	movlw	0
 27723  01A26A  6EE6               	movwf	postinc1,c
 27724  01A26C  0E00               	movlw	0
 27725  01A26E  6EE6               	movwf	postinc1,c
 27726  01A270  0E00               	movlw	0
 27727  01A272  6EE6               	movwf	postinc1,c
 27728  01A274  0E00               	movlw	0
 27729  01A276  6EE6               	movwf	postinc1,c
 27730  01A278  0E00               	movlw	0
 27731  01A27A  6EE6               	movwf	postinc1,c
 27732  01A27C  0E00               	movlw	0
 27733  01A27E  6EE6               	movwf	postinc1,c
 27734                           
 27735                           ;stkvar	_n @ sp[(-22)+0]
 27736  01A280  50E1               	movf	fsr1l,w,c
 27737  01A282  0FEA               	addlw	-22
 27738  01A284  6ED9               	movwf	fsr2l,c
 27739  01A286  50E2               	movf	fsr1h,w,c
 27740  01A288  6EDA               	movwf	fsr2h,c
 27741  01A28A  0EFF               	movlw	255
 27742  01A28C  22DA               	addwfc	fsr2h,f,c
 27743  01A28E  006F FF7B FFE6     	movff	postinc2,postinc1
 27744  01A294  006F FF7B FFE6     	movff	postinc2,postinc1
 27745  01A29A  006F FF7B FFE6     	movff	postinc2,postinc1
 27746  01A2A0  006F FF7B FFE6     	movff	postinc2,postinc1
 27747  01A2A6  006F FF7B FFE6     	movff	postinc2,postinc1
 27748  01A2AC  006F FF7B FFE6     	movff	postinc2,postinc1
 27749  01A2B2  006F FF7B FFE6     	movff	postinc2,postinc1
 27750  01A2B8  006F FF7B FFE6     	movff	postinc2,postinc1
 27751  01A2BE  EC46  F0EC         	call	___lodiv	;wreg free
 27752  01A2C2  52E5               	movf	postdec1,f,c
 27753  01A2C4  006F FF9C  F018    	movff	indf1,btemp+23
 27754  01A2CA  52E5               	movf	postdec1,f,c
 27755  01A2CC  006F FF9C  F017    	movff	indf1,btemp+22
 27756  01A2D2  52E5               	movf	postdec1,f,c
 27757  01A2D4  006F FF9C  F016    	movff	indf1,btemp+21
 27758  01A2DA  52E5               	movf	postdec1,f,c
 27759  01A2DC  006F FF9C  F015    	movff	indf1,btemp+20
 27760  01A2E2  52E5               	movf	postdec1,f,c
 27761  01A2E4  006F FF9C  F014    	movff	indf1,btemp+19
 27762  01A2EA  52E5               	movf	postdec1,f,c
 27763  01A2EC  006F FF9C  F013    	movff	indf1,btemp+18
 27764  01A2F2  52E5               	movf	postdec1,f,c
 27765  01A2F4  006F FF9C  F012    	movff	indf1,btemp+17
 27766  01A2FA  52E5               	movf	postdec1,f,c
 27767  01A2FC  006F FF9C  F011    	movff	indf1,btemp+16
 27768  01A302  0EF8               	movlw	248
 27769  01A304  26E1               	addwf	fsr1l,f,c
 27770  01A306  0EFF               	movlw	255
 27771  01A308  22E2               	addwfc	fsr1h,f,c
 27772                           
 27773                           ;stkvar	_n @ sp[(-14)+0]
 27774  01A30A  0EF2               	movlw	-14
 27775  01A30C  0060  F047  FFE3   	movff	btemp+16,plusw1
 27776  01A312  0EF3               	movlw	-13
 27777  01A314  0060  F04B  FFE3   	movff	btemp+17,plusw1
 27778  01A31A  0EF4               	movlw	-12
 27779  01A31C  0060  F04F  FFE3   	movff	btemp+18,plusw1
 27780  01A322  0EF5               	movlw	-11
 27781  01A324  0060  F053  FFE3   	movff	btemp+19,plusw1
 27782  01A32A  0EF6               	movlw	-10
 27783  01A32C  0060  F057  FFE3   	movff	btemp+20,plusw1
 27784  01A332  0EF7               	movlw	-9
 27785  01A334  0060  F05B  FFE3   	movff	btemp+21,plusw1
 27786  01A33A  0EF8               	movlw	-8
 27787  01A33C  0060  F05F  FFE3   	movff	btemp+22,plusw1
 27788  01A342  0EF9               	movlw	-7
 27789  01A344  0060  F063  FFE3   	movff	btemp+23,plusw1
 27790  01A34A                     l15785:
 27791                           
 27792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 27793                           ;stkvar	_i @ sp[(-14)+8]
 27794  01A34A  0EFA               	movlw	-6
 27795  01A34C  006F FF8C  F001    	movff	plusw1,btemp
 27796  01A352  0EFB               	movlw	-5
 27797  01A354  50E3               	movf	plusw1,w,c
 27798  01A356  1001               	iorwf	btemp^0,w,c
 27799  01A358  B4D8               	btfsc	status,2,c
 27800  01A35A  D02F               	goto	u15140
 27801                           
 27802                           ;stkvar	_n @ sp[(-14)+0]
 27803  01A35C  0EF2               	movlw	-14
 27804  01A35E  50E3               	movf	plusw1,w,c
 27805  01A360  E115               	bnz	u15111
 27806  01A362  0EF3               	movlw	-13
 27807  01A364  50E3               	movf	plusw1,w,c
 27808  01A366  E112               	bnz	u15111
 27809  01A368  0EF4               	movlw	-12
 27810  01A36A  50E3               	movf	plusw1,w,c
 27811  01A36C  E10F               	bnz	u15111
 27812  01A36E  0EF5               	movlw	-11
 27813  01A370  50E3               	movf	plusw1,w,c
 27814  01A372  E10C               	bnz	u15111
 27815  01A374  0EF6               	movlw	-10
 27816  01A376  50E3               	movf	plusw1,w,c
 27817  01A378  E109               	bnz	u15111
 27818  01A37A  0EF7               	movlw	-9
 27819  01A37C  50E3               	movf	plusw1,w,c
 27820  01A37E  E106               	bnz	u15111
 27821  01A380  0EF8               	movlw	-8
 27822  01A382  50E3               	movf	plusw1,w,c
 27823  01A384  E103               	bnz	u15111
 27824  01A386  0EF9               	movlw	-7
 27825  01A388  50E3               	movf	plusw1,w,c
 27826  01A38A  A4D8               	btfss	status,2,c
 27827  01A38C                     u15111:
 27828  01A38C  D6E3               	goto	l15775
 27829                           
 27830                           ;stkvar	_p @ sp[(-14)+12]
 27831  01A38E  0EFF               	movlw	-1
 27832  01A390  BEE3               	btfsc	plusw1,7,c
 27833  01A392  D007               	goto	u15120
 27834  01A394  0EFF               	movlw	-1
 27835  01A396  50E3               	movf	plusw1,w,c
 27836  01A398  E103               	bnz	u15121
 27837  01A39A  0EFE               	movlw	-2
 27838  01A39C  04E3               	decf	plusw1,w,c
 27839  01A39E  B0D8               	btfsc	status,0,c
 27840  01A3A0                     u15121:
 27841  01A3A0  D6D9               	goto	l15775
 27842  01A3A2                     u15120:
 27843                           
 27844                           ;stkvar	_w @ sp[(-14)+10]
 27845  01A3A2  0EFD               	movlw	-3
 27846  01A3A4  BEE3               	btfsc	plusw1,7,c
 27847  01A3A6  D009               	goto	u15140
 27848  01A3A8  0EFD               	movlw	-3
 27849  01A3AA  50E3               	movf	plusw1,w,c
 27850  01A3AC  E104               	bnz	u15130
 27851  01A3AE  0EFC               	movlw	-4
 27852  01A3B0  04E3               	decf	plusw1,w,c
 27853  01A3B2  A0D8               	btfss	status,0,c
 27854  01A3B4  D002               	goto	u15140
 27855  01A3B6                     u15130:
 27856  01A3B6  B23E               	btfsc	_flags^0,1,c
 27857  01A3B8  D6CD               	goto	l15775
 27858  01A3BA                     u15140:
 27859                           
 27860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 27861                           ;stkvar	_w @ sp[(-14)+10]
 27862  01A3BA  0EFC               	movlw	-4
 27863  01A3BC  006F FF8F FFE6     	movff	plusw1,postinc1
 27864  01A3C2  006F FF8F FFE6     	movff	plusw1,postinc1
 27865                           
 27866                           ;stkvar	_i @ sp[(-16)+8]
 27867  01A3C8  0E54               	movlw	low _dbuf
 27868  01A3CA  6E0B               	movwf	(btemp+10)^0,c
 27869  01A3CC  0E03               	movlw	high _dbuf
 27870  01A3CE  6E0C               	movwf	(btemp+11)^0,c
 27871  01A3D0  0EF8               	movlw	-8
 27872  01A3D2  50E3               	movf	plusw1,w,c
 27873  01A3D4  260B               	addwf	(btemp+10)^0,f,c
 27874  01A3D6  0EF9               	movlw	-7
 27875  01A3D8  50E3               	movf	plusw1,w,c
 27876  01A3DA  220C               	addwfc	(btemp+11)^0,f,c
 27877  01A3DC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 27878  01A3E2  0060  F033  FFE6   	movff	btemp+11,postinc1
 27879                           
 27880                           ;stkvar	_fp @ sp[(-18)+-2]
 27881  01A3E8  0EEC               	movlw	-20
 27882  01A3EA  006F FF8F FFE6     	movff	plusw1,postinc1
 27883  01A3F0  006F FF8F FFE6     	movff	plusw1,postinc1
 27884  01A3F6  EC51  F0F7         	call	_pad	;wreg free
 27885                           
 27886                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 27887  01A3FA  0EE8               	movlw	232
 27888  01A3FC  26E1               	addwf	fsr1l,f,c
 27889  01A3FE  0EFF               	movlw	255
 27890  01A400  22E2               	addwfc	fsr1h,f,c
 27891  01A402  0012               	return		;funcret
 27892  01A404                     __end_of_utoa:
 27893                           	opt callstack 0
 27894                           
 27895 ;; *************** function ___lomod *****************
 27896 ;; Defined at:
 27897 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 27898 ;; Parameters:    Size  Location     Type
 27899 ;;  dividend        8  [STACK] unsigned long long 
 27900 ;;  divisor         8  [STACK] unsigned long long 
 27901 ;; Auto vars:     Size  Location     Type
 27902 ;;  counter         1  [STACK] unsigned char 
 27903 ;; Return value:  Size  Location     Type
 27904 ;;                  8  [STACK] unsigned long long 
 27905 ;; Registers used:
 27906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 27907 ;; Tracked objects:
 27908 ;;		On entry : 0/3
 27909 ;;		On exit  : 0/0
 27910 ;;		Unchanged: 0/0
 27911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27916 ;;Total ram usage:        0 bytes
 27917 ;; Hardware stack levels used:    1
 27918 ;; Hardware stack levels required when called:   15
 27919 ;; This function calls:
 27920 ;;		Nothing
 27921 ;; This function is called by:
 27922 ;;		_utoa
 27923 ;; This function uses a reentrant model
 27924 ;;
 27925                           
 27926                           	psect	text97
 27927  01E7BC                     __ptext97:
 27928                           	opt callstack 0
 27929  01E7BC                     ___lomod:
 27930                           	opt callstack 0
 27931                           
 27932                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 27933  01E7BC  52E6               	movf	postinc1,f,c
 27934                           
 27935                           ;stkvar	_divisor @ sp[(-1)+-16]
 27936                           
 27937                           ;incstack = 0
 27938 ;; hardware stack exceeded
 27939  01E7BE  0EEF               	movlw	-17
 27940  01E7C0  50E3               	movf	plusw1,w,c
 27941  01E7C2  E116               	bnz	u9130
 27942  01E7C4  0EF0               	movlw	-16
 27943  01E7C6  50E3               	movf	plusw1,w,c
 27944  01E7C8  E113               	bnz	u9130
 27945  01E7CA  0EF1               	movlw	-15
 27946  01E7CC  50E3               	movf	plusw1,w,c
 27947  01E7CE  E110               	bnz	u9130
 27948  01E7D0  0EF2               	movlw	-14
 27949  01E7D2  50E3               	movf	plusw1,w,c
 27950  01E7D4  E10D               	bnz	u9130
 27951  01E7D6  0EF3               	movlw	-13
 27952  01E7D8  50E3               	movf	plusw1,w,c
 27953  01E7DA  E10A               	bnz	u9130
 27954  01E7DC  0EF4               	movlw	-12
 27955  01E7DE  50E3               	movf	plusw1,w,c
 27956  01E7E0  E107               	bnz	u9130
 27957  01E7E2  0EF5               	movlw	-11
 27958  01E7E4  50E3               	movf	plusw1,w,c
 27959  01E7E6  E104               	bnz	u9130
 27960  01E7E8  0EF6               	movlw	-10
 27961  01E7EA  50E3               	movf	plusw1,w,c
 27962  01E7EC  B4D8               	btfsc	status,2,c
 27963  01E7EE  D075               	goto	u9160
 27964  01E7F0                     u9130:
 27965                           
 27966                           ;stkvar	_counter @ sp[(-1)+0]
 27967  01E7F0  0EFF               	movlw	-1
 27968  01E7F2  6AE3               	clrf	plusw1,c
 27969  01E7F4  D012               	goto	L28
 27970  01E7F6                     l10755:
 27971                           
 27972                           ;stkvar	_divisor @ sp[(-1)+-16]
 27973  01E7F6  90D8               	bcf	status,0,c
 27974  01E7F8  0EEF               	movlw	-17
 27975  01E7FA  36E3               	rlcf	plusw1,f,c
 27976  01E7FC  0EF0               	movlw	-16
 27977  01E7FE  36E3               	rlcf	plusw1,f,c
 27978  01E800  0EF1               	movlw	-15
 27979  01E802  36E3               	rlcf	plusw1,f,c
 27980  01E804  0EF2               	movlw	-14
 27981  01E806  36E3               	rlcf	plusw1,f,c
 27982  01E808  0EF3               	movlw	-13
 27983  01E80A  36E3               	rlcf	plusw1,f,c
 27984  01E80C  0EF4               	movlw	-12
 27985  01E80E  36E3               	rlcf	plusw1,f,c
 27986  01E810  0EF5               	movlw	-11
 27987  01E812  36E3               	rlcf	plusw1,f,c
 27988  01E814  0EF6               	movlw	-10
 27989  01E816  36E3               	rlcf	plusw1,f,c
 27990                           
 27991                           ;stkvar	_counter @ sp[(-1)+0]
 27992  01E818  0EFF               	movlw	-1
 27993  01E81A                     L28:
 27994  01E81A  2AE3               	incf	plusw1,f,c
 27995                           
 27996                           ;stkvar	_divisor @ sp[(-1)+-16]
 27997  01E81C  0EF6               	movlw	-10
 27998  01E81E  AEE3               	btfss	plusw1,7,c
 27999  01E820  D7EA               	goto	l10755
 28000  01E822                     u9140:
 28001                           
 28002                           ;stkvar	_divisor @ sp[(-1)+-16]
 28003                           ;stkvar	_dividend @ sp[(-1)+-8]
 28004  01E822  50E1               	movf	fsr1l,w,c
 28005  01E824  0FF7               	addlw	-9
 28006  01E826  6ED9               	movwf	fsr2l,c
 28007  01E828  50E2               	movf	fsr1h,w,c
 28008  01E82A  6EDA               	movwf	fsr2h,c
 28009  01E82C  0EFF               	movlw	255
 28010  01E82E  22DA               	addwfc	fsr2h,f,c
 28011  01E830  0EEF               	movlw	-17
 28012  01E832  50E3               	movf	plusw1,w,c
 28013  01E834  5CDE               	subwf	postinc2,w,c
 28014  01E836  0EF0               	movlw	-16
 28015  01E838  50E3               	movf	plusw1,w,c
 28016  01E83A  58DE               	subwfb	postinc2,w,c
 28017  01E83C  0EF1               	movlw	-15
 28018  01E83E  50E3               	movf	plusw1,w,c
 28019  01E840  58DE               	subwfb	postinc2,w,c
 28020  01E842  0EF2               	movlw	-14
 28021  01E844  50E3               	movf	plusw1,w,c
 28022  01E846  58DE               	subwfb	postinc2,w,c
 28023  01E848  0EF3               	movlw	-13
 28024  01E84A  50E3               	movf	plusw1,w,c
 28025  01E84C  58DE               	subwfb	postinc2,w,c
 28026  01E84E  0EF4               	movlw	-12
 28027  01E850  50E3               	movf	plusw1,w,c
 28028  01E852  58DE               	subwfb	postinc2,w,c
 28029  01E854  0EF5               	movlw	-11
 28030  01E856  50E3               	movf	plusw1,w,c
 28031  01E858  58DE               	subwfb	postinc2,w,c
 28032  01E85A  0EF6               	movlw	-10
 28033  01E85C  50E3               	movf	plusw1,w,c
 28034  01E85E  58DE               	subwfb	postinc2,w,c
 28035  01E860  A0D8               	btfss	status,0,c
 28036  01E862  D01F               	goto	l10763
 28037                           
 28038                           ;stkvar	_divisor @ sp[(-1)+-16]
 28039                           ;stkvar	_dividend @ sp[(-1)+-8]
 28040  01E864  50E1               	movf	fsr1l,w,c
 28041  01E866  0FF7               	addlw	-9
 28042  01E868  6ED9               	movwf	fsr2l,c
 28043  01E86A  50E2               	movf	fsr1h,w,c
 28044  01E86C  6EDA               	movwf	fsr2h,c
 28045  01E86E  0EFF               	movlw	255
 28046  01E870  22DA               	addwfc	fsr2h,f,c
 28047  01E872  0EEF               	movlw	-17
 28048  01E874  50E3               	movf	plusw1,w,c
 28049  01E876  5EDE               	subwf	postinc2,f,c
 28050  01E878  0EF0               	movlw	-16
 28051  01E87A  50E3               	movf	plusw1,w,c
 28052  01E87C  5ADE               	subwfb	postinc2,f,c
 28053  01E87E  0EF1               	movlw	-15
 28054  01E880  50E3               	movf	plusw1,w,c
 28055  01E882  5ADE               	subwfb	postinc2,f,c
 28056  01E884  0EF2               	movlw	-14
 28057  01E886  50E3               	movf	plusw1,w,c
 28058  01E888  5ADE               	subwfb	postinc2,f,c
 28059  01E88A  0EF3               	movlw	-13
 28060  01E88C  50E3               	movf	plusw1,w,c
 28061  01E88E  5ADE               	subwfb	postinc2,f,c
 28062  01E890  0EF4               	movlw	-12
 28063  01E892  50E3               	movf	plusw1,w,c
 28064  01E894  5ADE               	subwfb	postinc2,f,c
 28065  01E896  0EF5               	movlw	-11
 28066  01E898  50E3               	movf	plusw1,w,c
 28067  01E89A  5ADE               	subwfb	postinc2,f,c
 28068  01E89C  0EF6               	movlw	-10
 28069  01E89E  50E3               	movf	plusw1,w,c
 28070  01E8A0  5ADE               	subwfb	postinc2,f,c
 28071  01E8A2                     l10763:
 28072                           
 28073                           ;stkvar	_divisor @ sp[(-1)+-16]
 28074  01E8A2  90D8               	bcf	status,0,c
 28075  01E8A4  0EF6               	movlw	-10
 28076  01E8A6  32E3               	rrcf	plusw1,f,c
 28077  01E8A8  0EF5               	movlw	-11
 28078  01E8AA  32E3               	rrcf	plusw1,f,c
 28079  01E8AC  0EF4               	movlw	-12
 28080  01E8AE  32E3               	rrcf	plusw1,f,c
 28081  01E8B0  0EF3               	movlw	-13
 28082  01E8B2  32E3               	rrcf	plusw1,f,c
 28083  01E8B4  0EF2               	movlw	-14
 28084  01E8B6  32E3               	rrcf	plusw1,f,c
 28085  01E8B8  0EF1               	movlw	-15
 28086  01E8BA  32E3               	rrcf	plusw1,f,c
 28087  01E8BC  0EF0               	movlw	-16
 28088  01E8BE  32E3               	rrcf	plusw1,f,c
 28089  01E8C0  0EEF               	movlw	-17
 28090  01E8C2  32E3               	rrcf	plusw1,f,c
 28091                           
 28092                           ;stkvar	_counter @ sp[(-1)+0]
 28093  01E8C4  0EFF               	movlw	-1
 28094  01E8C6  50E3               	movf	plusw1,w,c
 28095  01E8C8  6E01               	movwf	btemp^0,c
 28096  01E8CA  0E01               	movlw	1
 28097  01E8CC  5E01               	subwf	btemp^0,f,c
 28098  01E8CE  0EFF               	movlw	-1
 28099  01E8D0  0060  F007  FFE3   	movff	btemp,plusw1
 28100  01E8D6  A4D8               	btfss	status,2,c
 28101  01E8D8  D7A4               	goto	u9140
 28102  01E8DA                     u9160:
 28103                           
 28104                           ;stkvar	_dividend @ sp[(-1)+-8]
 28105  01E8DA  0EF7               	movlw	247
 28106  01E8DC  24E1               	addwf	fsr1l,w,c
 28107  01E8DE  6ED9               	movwf	fsr2l,c
 28108  01E8E0  0EFF               	movlw	255
 28109  01E8E2  20E2               	addwfc	fsr1h,w,c
 28110  01E8E4  6EDA               	movwf	fsr2h,c
 28111                           
 28112                           ;stkvar	?___lomod @ sp[(-1)+-8]
 28113  01E8E6  0E08               	movlw	8
 28114  01E8E8  6E01               	movwf	btemp^0,c
 28115  01E8EA  0EF7               	movlw	-9
 28116  01E8EC                     us917999:
 28117  01E8EC  006F FF7B FFE3     	movff	postinc2,plusw1
 28118  01E8F2  28E8               	incf	wreg,w,c
 28119  01E8F4  2E01               	decfsz	btemp^0,f,c
 28120  01E8F6  D7FA               	bra	us917999
 28121                           
 28122                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 28123  01E8F8  52E5               	movf	postdec1,f,c
 28124  01E8FA  0012               	return		;funcret
 28125  01E8FC                     __end_of___lomod:
 28126                           	opt callstack 0
 28127                           
 28128 ;; *************** function ___lodiv *****************
 28129 ;; Defined at:
 28130 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 28131 ;; Parameters:    Size  Location     Type
 28132 ;;  dividend        8  [STACK] unsigned long long 
 28133 ;;  divisor         8  [STACK] unsigned long long 
 28134 ;; Auto vars:     Size  Location     Type
 28135 ;;  quotient        8  [STACK] unsigned long long 
 28136 ;;  counter         1  [STACK] unsigned char 
 28137 ;; Return value:  Size  Location     Type
 28138 ;;                  8  [STACK] unsigned long long 
 28139 ;; Registers used:
 28140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 28141 ;; Tracked objects:
 28142 ;;		On entry : 0/3
 28143 ;;		On exit  : 0/0
 28144 ;;		Unchanged: 0/0
 28145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28150 ;;Total ram usage:        0 bytes
 28151 ;; Hardware stack levels used:    1
 28152 ;; Hardware stack levels required when called:   15
 28153 ;; This function calls:
 28154 ;;		Nothing
 28155 ;; This function is called by:
 28156 ;;		_utoa
 28157 ;; This function uses a reentrant model
 28158 ;;
 28159                           
 28160                           	psect	text98
 28161  01D88C                     __ptext98:
 28162                           	opt callstack 0
 28163  01D88C                     ___lodiv:
 28164                           	opt callstack 0
 28165                           
 28166                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 28167  01D88C  0E09               	movlw	9
 28168  01D88E  26E1               	addwf	fsr1l,f,c
 28169  01D890  0E00               	movlw	0
 28170  01D892  22E2               	addwfc	fsr1h,f,c
 28171                           
 28172                           ;stkvar	_quotient @ sp[(-9)+0]
 28173                           
 28174                           ;incstack = 0
 28175 ;; hardware stack exceeded
 28176  01D894  0E07               	movlw	7
 28177  01D896  6E01               	movwf	btemp^0,c
 28178  01D898  0EF7               	movlw	-9
 28179  01D89A                     u9071:
 28180  01D89A  6AE3               	clrf	plusw1,c
 28181  01D89C  2AE8               	incf	wreg,f,c
 28182  01D89E  0601               	decf	btemp^0,f,c
 28183  01D8A0  E2FC               	bc	u9071
 28184                           
 28185                           ;stkvar	_divisor @ sp[(-9)+-16]
 28186  01D8A2  0EE7               	movlw	-25
 28187  01D8A4  50E3               	movf	plusw1,w,c
 28188  01D8A6  E116               	bnz	u9080
 28189  01D8A8  0EE8               	movlw	-24
 28190  01D8AA  50E3               	movf	plusw1,w,c
 28191  01D8AC  E113               	bnz	u9080
 28192  01D8AE  0EE9               	movlw	-23
 28193  01D8B0  50E3               	movf	plusw1,w,c
 28194  01D8B2  E110               	bnz	u9080
 28195  01D8B4  0EEA               	movlw	-22
 28196  01D8B6  50E3               	movf	plusw1,w,c
 28197  01D8B8  E10D               	bnz	u9080
 28198  01D8BA  0EEB               	movlw	-21
 28199  01D8BC  50E3               	movf	plusw1,w,c
 28200  01D8BE  E10A               	bnz	u9080
 28201  01D8C0  0EEC               	movlw	-20
 28202  01D8C2  50E3               	movf	plusw1,w,c
 28203  01D8C4  E107               	bnz	u9080
 28204  01D8C6  0EED               	movlw	-19
 28205  01D8C8  50E3               	movf	plusw1,w,c
 28206  01D8CA  E104               	bnz	u9080
 28207  01D8CC  0EEE               	movlw	-18
 28208  01D8CE  50E3               	movf	plusw1,w,c
 28209  01D8D0  B4D8               	btfsc	status,2,c
 28210  01D8D2  D088               	goto	u9110
 28211  01D8D4                     u9080:
 28212                           
 28213                           ;stkvar	_counter @ sp[(-9)+8]
 28214  01D8D4  0EFF               	movlw	-1
 28215  01D8D6  6AE3               	clrf	plusw1,c
 28216  01D8D8  D012               	goto	L29
 28217  01D8DA                     l10731:
 28218                           
 28219                           ;stkvar	_divisor @ sp[(-9)+-16]
 28220  01D8DA  90D8               	bcf	status,0,c
 28221  01D8DC  0EE7               	movlw	-25
 28222  01D8DE  36E3               	rlcf	plusw1,f,c
 28223  01D8E0  0EE8               	movlw	-24
 28224  01D8E2  36E3               	rlcf	plusw1,f,c
 28225  01D8E4  0EE9               	movlw	-23
 28226  01D8E6  36E3               	rlcf	plusw1,f,c
 28227  01D8E8  0EEA               	movlw	-22
 28228  01D8EA  36E3               	rlcf	plusw1,f,c
 28229  01D8EC  0EEB               	movlw	-21
 28230  01D8EE  36E3               	rlcf	plusw1,f,c
 28231  01D8F0  0EEC               	movlw	-20
 28232  01D8F2  36E3               	rlcf	plusw1,f,c
 28233  01D8F4  0EED               	movlw	-19
 28234  01D8F6  36E3               	rlcf	plusw1,f,c
 28235  01D8F8  0EEE               	movlw	-18
 28236  01D8FA  36E3               	rlcf	plusw1,f,c
 28237                           
 28238                           ;stkvar	_counter @ sp[(-9)+8]
 28239  01D8FC  0EFF               	movlw	-1
 28240  01D8FE                     L29:
 28241  01D8FE  2AE3               	incf	plusw1,f,c
 28242                           
 28243                           ;stkvar	_divisor @ sp[(-9)+-16]
 28244  01D900  0EEE               	movlw	-18
 28245  01D902  AEE3               	btfss	plusw1,7,c
 28246  01D904  D7EA               	goto	l10731
 28247  01D906                     u9090:
 28248                           
 28249                           ;stkvar	_quotient @ sp[(-9)+0]
 28250  01D906  90D8               	bcf	status,0,c
 28251  01D908  0EF7               	movlw	-9
 28252  01D90A  36E3               	rlcf	plusw1,f,c
 28253  01D90C  0EF8               	movlw	-8
 28254  01D90E  36E3               	rlcf	plusw1,f,c
 28255  01D910  0EF9               	movlw	-7
 28256  01D912  36E3               	rlcf	plusw1,f,c
 28257  01D914  0EFA               	movlw	-6
 28258  01D916  36E3               	rlcf	plusw1,f,c
 28259  01D918  0EFB               	movlw	-5
 28260  01D91A  36E3               	rlcf	plusw1,f,c
 28261  01D91C  0EFC               	movlw	-4
 28262  01D91E  36E3               	rlcf	plusw1,f,c
 28263  01D920  0EFD               	movlw	-3
 28264  01D922  36E3               	rlcf	plusw1,f,c
 28265  01D924  0EFE               	movlw	-2
 28266  01D926  36E3               	rlcf	plusw1,f,c
 28267                           
 28268                           ;stkvar	_divisor @ sp[(-9)+-16]
 28269                           ;stkvar	_dividend @ sp[(-9)+-8]
 28270  01D928  50E1               	movf	fsr1l,w,c
 28271  01D92A  0FEF               	addlw	-17
 28272  01D92C  6ED9               	movwf	fsr2l,c
 28273  01D92E  50E2               	movf	fsr1h,w,c
 28274  01D930  6EDA               	movwf	fsr2h,c
 28275  01D932  0EFF               	movlw	255
 28276  01D934  22DA               	addwfc	fsr2h,f,c
 28277  01D936  0EE7               	movlw	-25
 28278  01D938  50E3               	movf	plusw1,w,c
 28279  01D93A  5CDE               	subwf	postinc2,w,c
 28280  01D93C  0EE8               	movlw	-24
 28281  01D93E  50E3               	movf	plusw1,w,c
 28282  01D940  58DE               	subwfb	postinc2,w,c
 28283  01D942  0EE9               	movlw	-23
 28284  01D944  50E3               	movf	plusw1,w,c
 28285  01D946  58DE               	subwfb	postinc2,w,c
 28286  01D948  0EEA               	movlw	-22
 28287  01D94A  50E3               	movf	plusw1,w,c
 28288  01D94C  58DE               	subwfb	postinc2,w,c
 28289  01D94E  0EEB               	movlw	-21
 28290  01D950  50E3               	movf	plusw1,w,c
 28291  01D952  58DE               	subwfb	postinc2,w,c
 28292  01D954  0EEC               	movlw	-20
 28293  01D956  50E3               	movf	plusw1,w,c
 28294  01D958  58DE               	subwfb	postinc2,w,c
 28295  01D95A  0EED               	movlw	-19
 28296  01D95C  50E3               	movf	plusw1,w,c
 28297  01D95E  58DE               	subwfb	postinc2,w,c
 28298  01D960  0EEE               	movlw	-18
 28299  01D962  50E3               	movf	plusw1,w,c
 28300  01D964  58DE               	subwfb	postinc2,w,c
 28301  01D966  A0D8               	btfss	status,0,c
 28302  01D968  D021               	goto	l10743
 28303                           
 28304                           ;stkvar	_divisor @ sp[(-9)+-16]
 28305                           ;stkvar	_dividend @ sp[(-9)+-8]
 28306  01D96A  50E1               	movf	fsr1l,w,c
 28307  01D96C  0FEF               	addlw	-17
 28308  01D96E  6ED9               	movwf	fsr2l,c
 28309  01D970  50E2               	movf	fsr1h,w,c
 28310  01D972  6EDA               	movwf	fsr2h,c
 28311  01D974  0EFF               	movlw	255
 28312  01D976  22DA               	addwfc	fsr2h,f,c
 28313  01D978  0EE7               	movlw	-25
 28314  01D97A  50E3               	movf	plusw1,w,c
 28315  01D97C  5EDE               	subwf	postinc2,f,c
 28316  01D97E  0EE8               	movlw	-24
 28317  01D980  50E3               	movf	plusw1,w,c
 28318  01D982  5ADE               	subwfb	postinc2,f,c
 28319  01D984  0EE9               	movlw	-23
 28320  01D986  50E3               	movf	plusw1,w,c
 28321  01D988  5ADE               	subwfb	postinc2,f,c
 28322  01D98A  0EEA               	movlw	-22
 28323  01D98C  50E3               	movf	plusw1,w,c
 28324  01D98E  5ADE               	subwfb	postinc2,f,c
 28325  01D990  0EEB               	movlw	-21
 28326  01D992  50E3               	movf	plusw1,w,c
 28327  01D994  5ADE               	subwfb	postinc2,f,c
 28328  01D996  0EEC               	movlw	-20
 28329  01D998  50E3               	movf	plusw1,w,c
 28330  01D99A  5ADE               	subwfb	postinc2,f,c
 28331  01D99C  0EED               	movlw	-19
 28332  01D99E  50E3               	movf	plusw1,w,c
 28333  01D9A0  5ADE               	subwfb	postinc2,f,c
 28334  01D9A2  0EEE               	movlw	-18
 28335  01D9A4  50E3               	movf	plusw1,w,c
 28336  01D9A6  5ADE               	subwfb	postinc2,f,c
 28337                           
 28338                           ;stkvar	_quotient @ sp[(-9)+0]
 28339  01D9A8  0EF7               	movlw	-9
 28340  01D9AA  80E3               	bsf	plusw1,0,c
 28341  01D9AC                     l10743:
 28342                           
 28343                           ;stkvar	_divisor @ sp[(-9)+-16]
 28344  01D9AC  90D8               	bcf	status,0,c
 28345  01D9AE  0EEE               	movlw	-18
 28346  01D9B0  32E3               	rrcf	plusw1,f,c
 28347  01D9B2  0EED               	movlw	-19
 28348  01D9B4  32E3               	rrcf	plusw1,f,c
 28349  01D9B6  0EEC               	movlw	-20
 28350  01D9B8  32E3               	rrcf	plusw1,f,c
 28351  01D9BA  0EEB               	movlw	-21
 28352  01D9BC  32E3               	rrcf	plusw1,f,c
 28353  01D9BE  0EEA               	movlw	-22
 28354  01D9C0  32E3               	rrcf	plusw1,f,c
 28355  01D9C2  0EE9               	movlw	-23
 28356  01D9C4  32E3               	rrcf	plusw1,f,c
 28357  01D9C6  0EE8               	movlw	-24
 28358  01D9C8  32E3               	rrcf	plusw1,f,c
 28359  01D9CA  0EE7               	movlw	-25
 28360  01D9CC  32E3               	rrcf	plusw1,f,c
 28361                           
 28362                           ;stkvar	_counter @ sp[(-9)+8]
 28363  01D9CE  0EFF               	movlw	-1
 28364  01D9D0  50E3               	movf	plusw1,w,c
 28365  01D9D2  6E01               	movwf	btemp^0,c
 28366  01D9D4  0E01               	movlw	1
 28367  01D9D6  5E01               	subwf	btemp^0,f,c
 28368  01D9D8  0EFF               	movlw	-1
 28369  01D9DA  0060  F007  FFE3   	movff	btemp,plusw1
 28370  01D9E0  A4D8               	btfss	status,2,c
 28371  01D9E2  D791               	goto	u9090
 28372  01D9E4                     u9110:
 28373                           
 28374                           ;stkvar	_quotient @ sp[(-9)+0]
 28375  01D9E4  0EF7               	movlw	247
 28376  01D9E6  24E1               	addwf	fsr1l,w,c
 28377  01D9E8  6ED9               	movwf	fsr2l,c
 28378  01D9EA  0EFF               	movlw	255
 28379  01D9EC  20E2               	addwfc	fsr1h,w,c
 28380  01D9EE  6EDA               	movwf	fsr2h,c
 28381                           
 28382                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 28383  01D9F0  0E08               	movlw	8
 28384  01D9F2  6E01               	movwf	btemp^0,c
 28385  01D9F4  0EEF               	movlw	-17
 28386  01D9F6                     us912999:
 28387  01D9F6  006F FF7B FFE3     	movff	postinc2,plusw1
 28388  01D9FC  28E8               	incf	wreg,w,c
 28389  01D9FE  2E01               	decfsz	btemp^0,f,c
 28390  01DA00  D7FA               	bra	us912999
 28391                           
 28392                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 28393  01DA02  0EF7               	movlw	247
 28394  01DA04  26E1               	addwf	fsr1l,f,c
 28395  01DA06  0EFF               	movlw	255
 28396  01DA08  22E2               	addwfc	fsr1h,f,c
 28397  01DA0A  0012               	return		;funcret
 28398  01DA0C                     __end_of___lodiv:
 28399                           	opt callstack 0
 28400                           
 28401 ;; *************** function _strncmp *****************
 28402 ;; Defined at:
 28403 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 28404 ;; Parameters:    Size  Location     Type
 28405 ;;  _l              2  [STACK] PTR const unsigned char 
 28406 ;;		 -> ct(3), STR_90(127), STR_88(3), STR_87(3), 
 28407 ;;		 -> STR_86(19), STR_85(19), STR_84(19), STR_83(19), 
 28408 ;;		 -> STR_82(19), STR_81(19), STR_80(24), STR_79(15), 
 28409 ;;		 -> STR_78(15), STR_77(15), STR_76(15), STR_75(10), 
 28410 ;;		 -> STR_74(10), STR_73(19), STR_72(19), STR_69(3), 
 28411 ;;		 -> STR_68(3), STR_67(14), STR_66(21), STR_65(21), 
 28412 ;;		 -> STR_64(21), STR_63(21), STR_62(21), STR_61(21), 
 28413 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 28414 ;;		 -> STR_56(21), STR_55(21), STR_54(20), STR_53(21), 
 28415 ;;		 -> STR_52(21), STR_51(21), STR_50(22), STR_49(22), 
 28416 ;;		 -> STR_48(22), STR_47(23), STR_46(23), STR_45(23), 
 28417 ;;		 -> STR_44(29), STR_43(23), STR_42(23), STR_41(22), 
 28418 ;;		 -> STR_40(22), STR_39(22), STR_38(22), STR_37(22), 
 28419 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 28420 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(17), 
 28421 ;;		 -> STR_28(16), STR_27(16), STR_26(21), STR_25(21), 
 28422 ;;		 -> STR_24(21), STR_23(26), STR_22(26), STR_21(22), 
 28423 ;;		 -> STR_20(21), STR_19(21), STR_18(21), STR_17(21), 
 28424 ;;		 -> STR_16(22), STR_15(22), STR_14(22), STR_13(26), 
 28425 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 28426 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 28427 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 28428 ;;  _r              2  [STACK] PTR const unsigned char 
 28429 ;;		 -> STR_124(3), STR_120(3), STR_115(3), STR_110(3), 
 28430 ;;		 -> STR_105(3), STR_101(3), 
 28431 ;;  n               2  [STACK] unsigned int 
 28432 ;; Auto vars:     Size  Location     Type
 28433 ;;  r               2  [STACK] PTR const unsigned char 
 28434 ;;		 -> STR_124(3), STR_120(3), STR_115(3), STR_110(3), 
 28435 ;;		 -> STR_105(3), STR_101(3), 
 28436 ;;  l               2  [STACK] PTR const unsigned char 
 28437 ;;		 -> ct(3), STR_90(127), STR_88(3), STR_87(3), 
 28438 ;;		 -> STR_86(19), STR_85(19), STR_84(19), STR_83(19), 
 28439 ;;		 -> STR_82(19), STR_81(19), STR_80(24), STR_79(15), 
 28440 ;;		 -> STR_78(15), STR_77(15), STR_76(15), STR_75(10), 
 28441 ;;		 -> STR_74(10), STR_73(19), STR_72(19), STR_69(3), 
 28442 ;;		 -> STR_68(3), STR_67(14), STR_66(21), STR_65(21), 
 28443 ;;		 -> STR_64(21), STR_63(21), STR_62(21), STR_61(21), 
 28444 ;;		 -> STR_60(21), STR_59(21), STR_58(21), STR_57(21), 
 28445 ;;		 -> STR_56(21), STR_55(21), STR_54(20), STR_53(21), 
 28446 ;;		 -> STR_52(21), STR_51(21), STR_50(22), STR_49(22), 
 28447 ;;		 -> STR_48(22), STR_47(23), STR_46(23), STR_45(23), 
 28448 ;;		 -> STR_44(29), STR_43(23), STR_42(23), STR_41(22), 
 28449 ;;		 -> STR_40(22), STR_39(22), STR_38(22), STR_37(22), 
 28450 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 28451 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(17), 
 28452 ;;		 -> STR_28(16), STR_27(16), STR_26(21), STR_25(21), 
 28453 ;;		 -> STR_24(21), STR_23(26), STR_22(26), STR_21(22), 
 28454 ;;		 -> STR_20(21), STR_19(21), STR_18(21), STR_17(21), 
 28455 ;;		 -> STR_16(22), STR_15(22), STR_14(22), STR_13(26), 
 28456 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
 28457 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 28458 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 28459 ;; Return value:  Size  Location     Type
 28460 ;;                  2  [STACK] int 
 28461 ;; Registers used:
 28462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 28463 ;; Tracked objects:
 28464 ;;		On entry : 0/0
 28465 ;;		On exit  : 0/0
 28466 ;;		Unchanged: 0/0
 28467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28472 ;;Total ram usage:        0 bytes
 28473 ;; Hardware stack levels used:    1
 28474 ;; Hardware stack levels required when called:   15
 28475 ;; This function calls:
 28476 ;;		Nothing
 28477 ;; This function is called by:
 28478 ;;		_vfpfcnvrt
 28479 ;; This function uses a reentrant model
 28480 ;;
 28481                           
 28482                           	psect	text99
 28483  01C4B8                     __ptext99:
 28484                           	opt callstack 0
 28485  01C4B8                     _strncmp:
 28486                           	opt callstack 0
 28487                           
 28488                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28489  01C4B8  52E6               	movf	postinc1,f,c
 28490  01C4BA  52E6               	movf	postinc1,f,c
 28491  01C4BC  52E6               	movf	postinc1,f,c
 28492  01C4BE  52E6               	movf	postinc1,f,c
 28493                           
 28494                           ;stkvar	__l @ sp[(-4)+-2]
 28495                           
 28496                           ;incstack = 0
 28497 ;; hardware stack exceeded
 28498  01C4C0  0EFA               	movlw	-6
 28499  01C4C2  006F FF8C  F00B    	movff	plusw1,btemp+10
 28500  01C4C8  0EFB               	movlw	-5
 28501  01C4CA  006F FF8C  F00C    	movff	plusw1,btemp+11
 28502                           
 28503                           ;stkvar	_l @ sp[(-4)+2]
 28504  01C4D0  0EFF               	movlw	-1
 28505  01C4D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 28506  01C4D8  0EFE               	movlw	-2
 28507  01C4DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28508                           
 28509                           ;stkvar	__r @ sp[(-4)+-4]
 28510  01C4E0  0EF8               	movlw	-8
 28511  01C4E2  006F FF8C  F00B    	movff	plusw1,btemp+10
 28512  01C4E8  0EF9               	movlw	-7
 28513  01C4EA  006F FF8C  F00C    	movff	plusw1,btemp+11
 28514                           
 28515                           ;stkvar	_r @ sp[(-4)+0]
 28516  01C4F0  0EFD               	movlw	-3
 28517  01C4F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 28518  01C4F8  0EFC               	movlw	-4
 28519  01C4FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28520                           
 28521                           ;stkvar	_n @ sp[(-4)+-6]
 28522  01C500  0EF6               	movlw	-10
 28523  01C502  006F FF8C  F001    	movff	plusw1,btemp
 28524  01C508  0E01               	movlw	1
 28525  01C50A  5E01               	subwf	btemp^0,f,c
 28526  01C50C  0EF6               	movlw	-10
 28527  01C50E  0060  F007  FFE3   	movff	btemp,plusw1
 28528  01C514  0EF7               	movlw	-9
 28529  01C516  006F FF8C  F001    	movff	plusw1,btemp
 28530  01C51C  0E00               	movlw	0
 28531  01C51E  5A01               	subwfb	btemp^0,f,c
 28532  01C520  0EF7               	movlw	-9
 28533  01C522  0060  F007  FFE3   	movff	btemp,plusw1
 28534  01C528  0EF6               	movlw	-10
 28535  01C52A  28E3               	incf	plusw1,w,c
 28536  01C52C  E13F               	bnz	l11447
 28537  01C52E  0EF7               	movlw	-9
 28538  01C530  28E3               	incf	plusw1,w,c
 28539  01C532  A4D8               	btfss	status,2,c
 28540  01C534  D03B               	goto	l11447
 28541  01C536  0E00               	movlw	0
 28542  01C538  6E01               	movwf	btemp^0,c
 28543  01C53A  0E00               	movlw	0
 28544  01C53C  6E02               	movwf	(btemp+1)^0,c
 28545  01C53E  D0C7               	goto	l3793
 28546  01C540                     l11445:
 28547                           
 28548                           ;stkvar	_l @ sp[(-4)+2]
 28549  01C540  0EFE               	movlw	-2
 28550  01C542  50E3               	movf	plusw1,w,c
 28551  01C544  0F01               	addlw	1
 28552  01C546  6E01               	movwf	btemp^0,c
 28553  01C548  0EFE               	movlw	-2
 28554  01C54A  0060  F007  FFE3   	movff	btemp,plusw1
 28555  01C550  6A01               	clrf	btemp^0,c
 28556  01C552  0EFF               	movlw	-1
 28557  01C554  50E3               	movf	plusw1,w,c
 28558  01C556  2001               	addwfc	btemp^0,w,c
 28559  01C558  6E01               	movwf	btemp^0,c
 28560  01C55A  0EFF               	movlw	-1
 28561  01C55C  0060  F007  FFE3   	movff	btemp,plusw1
 28562                           
 28563                           ;stkvar	_r @ sp[(-4)+0]
 28564  01C562  0EFC               	movlw	-4
 28565  01C564  50E3               	movf	plusw1,w,c
 28566  01C566  0F01               	addlw	1
 28567  01C568  6E01               	movwf	btemp^0,c
 28568  01C56A  0EFC               	movlw	-4
 28569  01C56C  0060  F007  FFE3   	movff	btemp,plusw1
 28570  01C572  6A01               	clrf	btemp^0,c
 28571  01C574  0EFD               	movlw	-3
 28572  01C576  50E3               	movf	plusw1,w,c
 28573  01C578  2001               	addwfc	btemp^0,w,c
 28574  01C57A  6E01               	movwf	btemp^0,c
 28575  01C57C  0EFD               	movlw	-3
 28576  01C57E  0060  F007  FFE3   	movff	btemp,plusw1
 28577                           
 28578                           ;stkvar	_n @ sp[(-4)+-6]
 28579  01C584  0EF6               	movlw	-10
 28580  01C586  006F FF8C  F001    	movff	plusw1,btemp
 28581  01C58C  0E01               	movlw	1
 28582  01C58E  5E01               	subwf	btemp^0,f,c
 28583  01C590  0EF6               	movlw	-10
 28584  01C592  0060  F007  FFE3   	movff	btemp,plusw1
 28585  01C598  0EF7               	movlw	-9
 28586  01C59A  006F FF8C  F001    	movff	plusw1,btemp
 28587  01C5A0  0E00               	movlw	0
 28588  01C5A2  5A01               	subwfb	btemp^0,f,c
 28589  01C5A4  0EF7               	movlw	-9
 28590  01C5A6  0060  F007  FFE3   	movff	btemp,plusw1
 28591  01C5AC                     l11447:
 28592                           
 28593                           ;stkvar	_l @ sp[(-4)+2]
 28594  01C5AC  0EFE               	movlw	-2
 28595  01C5AE  006F FF8F FFF6     	movff	plusw1,tblptrl
 28596  01C5B4  0EFF               	movlw	-1
 28597  01C5B6  006F FF8F FFF7     	movff	plusw1,tblptrh
 28598  01C5BC  0E00               	movlw	low (__mediumconst shr (0+16))
 28599  01C5BE  6EF8               	movwf	tblptru,c
 28600  01C5C0  0E1F               	movlw	(high __ramtop+-1)
 28601  01C5C2  64F7               	cpfsgt	tblptrh,c
 28602  01C5C4  D003               	bra	u10417
 28603  01C5C6  0008               	tblrd		*
 28604  01C5C8  50F5               	movf	tablat,w,c
 28605  01C5CA  D007               	bra	u10410
 28606  01C5CC                     u10417:
 28607  01C5CC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28608  01C5D2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28609  01C5D8  50EF               	movf	indf0,w,c
 28610  01C5DA                     u10410:
 28611  01C5DA  0900               	iorlw	0
 28612  01C5DC  B4D8               	btfsc	status,2,c
 28613  01C5DE  D04A               	goto	u10450
 28614                           
 28615                           ;stkvar	_r @ sp[(-4)+0]
 28616  01C5E0  50E1               	movf	fsr1l,w,c
 28617  01C5E2  0FFC               	addlw	-4
 28618  01C5E4  6ED9               	movwf	fsr2l,c
 28619  01C5E6  50E2               	movf	fsr1h,w,c
 28620  01C5E8  6EDA               	movwf	fsr2h,c
 28621  01C5EA  0EFF               	movlw	255
 28622  01C5EC  22DA               	addwfc	fsr2h,f,c
 28623  01C5EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 28624  01C5F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 28625  01C5FA                     	if	0	;tblptru may be non-zero
 28626  01C5FA                     	endif
 28627  01C5FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28628  01C5FA  0E00               	movlw	low (__mediumconst shr (0+16))
 28629  01C5FC  6EF8               	movwf	tblptru,c
 28630  01C5FE                     	endif
 28631  01C5FE  0008               	tblrd		*
 28632  01C600  50F5               	movf	tablat,w,c
 28633  01C602  0900               	iorlw	0
 28634  01C604  B4D8               	btfsc	status,2,c
 28635  01C606  D036               	goto	u10450
 28636                           
 28637                           ;stkvar	_n @ sp[(-4)+-6]
 28638  01C608  0EF6               	movlw	-10
 28639  01C60A  006F FF8C  F001    	movff	plusw1,btemp
 28640  01C610  0EF7               	movlw	-9
 28641  01C612  50E3               	movf	plusw1,w,c
 28642  01C614  1001               	iorwf	btemp^0,w,c
 28643  01C616  B4D8               	btfsc	status,2,c
 28644  01C618  D02D               	goto	u10450
 28645                           
 28646                           ;stkvar	_r @ sp[(-4)+0]
 28647  01C61A  50E1               	movf	fsr1l,w,c
 28648  01C61C  0FFC               	addlw	-4
 28649  01C61E  6ED9               	movwf	fsr2l,c
 28650  01C620  50E2               	movf	fsr1h,w,c
 28651  01C622  6EDA               	movwf	fsr2h,c
 28652  01C624  0EFF               	movlw	255
 28653  01C626  22DA               	addwfc	fsr2h,f,c
 28654  01C628  006F FF7B FFF6     	movff	postinc2,tblptrl
 28655  01C62E  006F FF77 FFF7     	movff	postdec2,tblptrh
 28656  01C634                     	if	0	;tblptru may be non-zero
 28657  01C634                     	endif
 28658  01C634                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28659  01C634  0E00               	movlw	low (__mediumconst shr (0+16))
 28660  01C636  6EF8               	movwf	tblptru,c
 28661  01C638                     	endif
 28662  01C638  0008               	tblrd		*
 28663  01C63A  006F FFD4  F00C    	movff	tablat,btemp+11
 28664                           
 28665                           ;stkvar	_l @ sp[(-4)+2]
 28666  01C640  0EFE               	movlw	-2
 28667  01C642  006F FF8F FFF6     	movff	plusw1,tblptrl
 28668  01C648  0EFF               	movlw	-1
 28669  01C64A  006F FF8F FFF7     	movff	plusw1,tblptrh
 28670  01C650  0E00               	movlw	low (__mediumconst shr (0+16))
 28671  01C652  6EF8               	movwf	tblptru,c
 28672  01C654  0E1F               	movlw	(high __ramtop+-1)
 28673  01C656  64F7               	cpfsgt	tblptrh,c
 28674  01C658  D003               	bra	u10457
 28675  01C65A  0008               	tblrd		*
 28676  01C65C  50F5               	movf	tablat,w,c
 28677  01C65E  D007               	bra	u10455
 28678  01C660                     u10457:
 28679  01C660  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28680  01C666  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28681  01C66C  50EF               	movf	indf0,w,c
 28682  01C66E                     u10455:
 28683  01C66E  180C               	xorwf	(btemp+11)^0,w,c
 28684  01C670  B4D8               	btfsc	status,2,c
 28685  01C672  D766               	goto	l11445
 28686  01C674                     u10450:
 28687                           
 28688                           ;stkvar	_l @ sp[(-4)+2]
 28689  01C674  0EFE               	movlw	-2
 28690  01C676  006F FF8F FFF6     	movff	plusw1,tblptrl
 28691  01C67C  0EFF               	movlw	-1
 28692  01C67E  006F FF8F FFF7     	movff	plusw1,tblptrh
 28693  01C684  0E00               	movlw	low (__mediumconst shr (0+16))
 28694  01C686  6EF8               	movwf	tblptru,c
 28695  01C688  0E1F               	movlw	(high __ramtop+-1)
 28696  01C68A  64F7               	cpfsgt	tblptrh,c
 28697  01C68C  D003               	bra	u10467
 28698  01C68E  0008               	tblrd		*
 28699  01C690  50F5               	movf	tablat,w,c
 28700  01C692  D007               	bra	u10460
 28701  01C694                     u10467:
 28702  01C694  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28703  01C69A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28704  01C6A0  50EF               	movf	indf0,w,c
 28705  01C6A2                     u10460:
 28706  01C6A2  6E01               	movwf	btemp^0,c
 28707  01C6A4  6A02               	clrf	(btemp+1)^0,c
 28708                           
 28709                           ;stkvar	_r @ sp[(-4)+0]
 28710  01C6A6  50E1               	movf	fsr1l,w,c
 28711  01C6A8  0FFC               	addlw	-4
 28712  01C6AA  6ED9               	movwf	fsr2l,c
 28713  01C6AC  50E2               	movf	fsr1h,w,c
 28714  01C6AE  6EDA               	movwf	fsr2h,c
 28715  01C6B0  0EFF               	movlw	255
 28716  01C6B2  22DA               	addwfc	fsr2h,f,c
 28717  01C6B4  006F FF7B FFF6     	movff	postinc2,tblptrl
 28718  01C6BA  006F FF77 FFF7     	movff	postdec2,tblptrh
 28719  01C6C0                     	if	0	;tblptru may be non-zero
 28720  01C6C0                     	endif
 28721  01C6C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 28722  01C6C0  0E00               	movlw	low (__mediumconst shr (0+16))
 28723  01C6C2  6EF8               	movwf	tblptru,c
 28724  01C6C4                     	endif
 28725  01C6C4  0008               	tblrd		*
 28726  01C6C6  50F5               	movf	tablat,w,c
 28727  01C6C8  5E01               	subwf	btemp^0,f,c
 28728  01C6CA  0E00               	movlw	0
 28729  01C6CC  5A02               	subwfb	(btemp+1)^0,f,c
 28730  01C6CE                     l3793:
 28731                           
 28732                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 28733  01C6CE  0EF6               	movlw	246
 28734  01C6D0  26E1               	addwf	fsr1l,f,c
 28735  01C6D2  0EFF               	movlw	255
 28736  01C6D4  22E2               	addwfc	fsr1h,f,c
 28737  01C6D6  0012               	return		;funcret
 28738  01C6D8                     __end_of_strncmp:
 28739                           	opt callstack 0
 28740                           
 28741 ;; *************** function _stoa *****************
 28742 ;; Defined at:
 28743 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 28744 ;; Parameters:    Size  Location     Type
 28745 ;;  fp              2  [STACK] PTR struct _IO_FILE
 28746 ;;		 -> f(6), NULL(0), 
 28747 ;;  s               2  [STACK] PTR unsigned char 
 28748 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), STR_71(9), 
 28749 ;;		 -> STR_70(12), D.lcd(640), D(642), T(144), 
 28750 ;;		 -> STR_3(5), V(192), 
 28751 ;; Auto vars:     Size  Location     Type
 28752 ;;  nuls            7  [STACK] unsigned char [7]
 28753 ;;  l               2  [STACK] int 
 28754 ;;  p               2  [STACK] int 
 28755 ;;  cp              2  [STACK] PTR unsigned char 
 28756 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 28757 ;;		 -> STR_71(9), STR_70(12), D.lcd(640), D(642), 
 28758 ;;		 -> T(144), STR_3(5), V(192), 
 28759 ;;  w               2  [STACK] int 
 28760 ;;  i               2  [STACK] int 
 28761 ;; Return value:  Size  Location     Type
 28762 ;;                  2  [STACK] int 
 28763 ;; Registers used:
 28764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 28765 ;; Tracked objects:
 28766 ;;		On entry : 0/0
 28767 ;;		On exit  : 0/0
 28768 ;;		Unchanged: 0/0
 28769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28774 ;;Total ram usage:        0 bytes
 28775 ;; Hardware stack levels used:    1
 28776 ;; Hardware stack levels required when called:   18
 28777 ;; This function calls:
 28778 ;;		_fputc
 28779 ;;		_strlen
 28780 ;; This function is called by:
 28781 ;;		_vfpfcnvrt
 28782 ;; This function uses a reentrant model
 28783 ;;
 28784                           
 28785                           	psect	text100
 28786  01ACC4                     __ptext100:
 28787                           	opt callstack 0
 28788  01ACC4                     _stoa:
 28789                           	opt callstack 0
 28790                           
 28791                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28792  01ACC4  0E11               	movlw	17
 28793  01ACC6  26E1               	addwf	fsr1l,f,c
 28794  01ACC8  0E00               	movlw	0
 28795  01ACCA  22E2               	addwfc	fsr1h,f,c
 28796                           
 28797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 28798                           
 28799                           ;incstack = 0
 28800 ;; hardware stack exceeded
 28801  01ACCC  EE20  F100         	lfsr	2,stoa@F1166
 28802                           
 28803                           ;stkvar	_nuls @ sp[(-17)+0]
 28804  01ACD0  0E07               	movlw	7
 28805  01ACD2  6E01               	movwf	btemp^0,c
 28806  01ACD4  0EEF               	movlw	-17
 28807  01ACD6                     us1497999:
 28808  01ACD6  006F FF7B FFE3     	movff	postinc2,plusw1
 28809  01ACDC  28E8               	incf	wreg,w,c
 28810  01ACDE  2E01               	decfsz	btemp^0,f,c
 28811  01ACE0  D7FA               	bra	us1497999
 28812                           
 28813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 28814                           ;stkvar	_s @ sp[(-17)+-4]
 28815  01ACE2  0EEB               	movlw	-21
 28816  01ACE4  006F FF8C  F00B    	movff	plusw1,btemp+10
 28817  01ACEA  0EEC               	movlw	-20
 28818  01ACEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 28819                           
 28820                           ;stkvar	_cp @ sp[(-17)+11]
 28821  01ACF2  0EFB               	movlw	-5
 28822  01ACF4  0060  F033  FFE3   	movff	btemp+11,plusw1
 28823  01ACFA  0EFA               	movlw	-6
 28824  01ACFC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28825                           
 28826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 28827                           ;stkvar	_cp @ sp[(-17)+11]
 28828  01AD02  0EFA               	movlw	-6
 28829  01AD04  006F FF8C  F001    	movff	plusw1,btemp
 28830  01AD0A  0EFB               	movlw	-5
 28831  01AD0C  50E3               	movf	plusw1,w,c
 28832  01AD0E  1001               	iorwf	btemp^0,w,c
 28833  01AD10  A4D8               	btfss	status,2,c
 28834  01AD12  D00E               	goto	l15715
 28835                           
 28836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 28837                           ;stkvar	_nuls @ sp[(-17)+0]
 28838  01AD14  0EEF               	movlw	239
 28839  01AD16  24E1               	addwf	fsr1l,w,c
 28840  01AD18  6E0B               	movwf	(btemp+10)^0,c
 28841  01AD1A  0EFF               	movlw	255
 28842  01AD1C  20E2               	addwfc	fsr1h,w,c
 28843  01AD1E  6E0C               	movwf	(btemp+11)^0,c
 28844                           
 28845                           ;stkvar	_cp @ sp[(-17)+11]
 28846  01AD20  0EFB               	movlw	-5
 28847  01AD22  0060  F033  FFE3   	movff	btemp+11,plusw1
 28848  01AD28  0EFA               	movlw	-6
 28849  01AD2A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28850  01AD30                     l15715:
 28851                           
 28852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 28853                           ;stkvar	_cp @ sp[(-17)+11]
 28854  01AD30  0EFA               	movlw	-6
 28855  01AD32  006F FF8F FFE6     	movff	plusw1,postinc1
 28856  01AD38  006F FF8F FFE6     	movff	plusw1,postinc1
 28857  01AD3E  EC57  F001         	call	_strlen	;wreg free
 28858                           
 28859                           ;stkvar	_l @ sp[(-17)+7]
 28860  01AD42  0EF6               	movlw	-10
 28861  01AD44  0060  F007  FFE3   	movff	btemp,plusw1
 28862  01AD4A  0EF7               	movlw	-9
 28863  01AD4C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 28864                           
 28865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 28866                           ;stkvar	_p @ sp[(-17)+9]
 28867  01AD52  0EF8               	movlw	-8
 28868  01AD54  0060  F0F3  FFE3   	movff	_prec,plusw1
 28869  01AD5A  0EF9               	movlw	-7
 28870  01AD5C  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 28871                           
 28872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 28873                           ;stkvar	_p @ sp[(-17)+9]
 28874  01AD62  0EF9               	movlw	-7
 28875  01AD64  BEE3               	btfsc	plusw1,7,c
 28876  01AD66  D023               	goto	l2588
 28877                           
 28878                           ;stkvar	_l @ sp[(-17)+7]
 28879                           ;stkvar	_p @ sp[(-17)+9]
 28880  01AD68  50E1               	movf	fsr1l,w,c
 28881  01AD6A  0FF8               	addlw	-8
 28882  01AD6C  6ED9               	movwf	fsr2l,c
 28883  01AD6E  50E2               	movf	fsr1h,w,c
 28884  01AD70  6EDA               	movwf	fsr2h,c
 28885  01AD72  0EFF               	movlw	255
 28886  01AD74  22DA               	addwfc	fsr2h,f,c
 28887  01AD76  0EF6               	movlw	-10
 28888  01AD78  50E3               	movf	plusw1,w,c
 28889  01AD7A  5CDE               	subwf	postinc2,w,c
 28890  01AD7C  50DE               	movf	postinc2,w,c
 28891  01AD7E  0A80               	xorlw	128
 28892  01AD80  6E01               	movwf	btemp^0,c
 28893  01AD82  0EF7               	movlw	-9
 28894  01AD84  50E3               	movf	plusw1,w,c
 28895  01AD86  0A80               	xorlw	128
 28896  01AD88  5801               	subwfb	btemp^0,w,c
 28897  01AD8A  B0D8               	btfsc	status,0,c
 28898  01AD8C  D010               	goto	l2588
 28899                           
 28900                           ;stkvar	_p @ sp[(-17)+9]
 28901                           ;stkvar	_l @ sp[(-17)+7]
 28902  01AD8E  0EF8               	movlw	-8
 28903  01AD90  006F FF8C  F001    	movff	plusw1,btemp
 28904  01AD96  0EF6               	movlw	-10
 28905  01AD98  0060  F007  FFE3   	movff	btemp,plusw1
 28906  01AD9E  0EF9               	movlw	-7
 28907  01ADA0  006F FF8C  F001    	movff	plusw1,btemp
 28908  01ADA6  0EF7               	movlw	-9
 28909  01ADA8  0060  F007  FFE3   	movff	btemp,plusw1
 28910  01ADAE                     l2588:
 28911                           
 28912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 28913                           ;stkvar	_l @ sp[(-17)+7]
 28914                           ;stkvar	_p @ sp[(-17)+9]
 28915  01ADAE  0EF6               	movlw	-10
 28916  01ADB0  006F FF8C  F001    	movff	plusw1,btemp
 28917  01ADB6  0EF8               	movlw	-8
 28918  01ADB8  0060  F007  FFE3   	movff	btemp,plusw1
 28919  01ADBE  0EF7               	movlw	-9
 28920  01ADC0  006F FF8C  F001    	movff	plusw1,btemp
 28921  01ADC6  0EF9               	movlw	-7
 28922  01ADC8  0060  F007  FFE3   	movff	btemp,plusw1
 28923                           
 28924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 28925                           ;stkvar	_w @ sp[(-17)+13]
 28926  01ADCE  0EFC               	movlw	-4
 28927  01ADD0  0060  F0EB  FFE3   	movff	_width,plusw1
 28928  01ADD6  0EFD               	movlw	-3
 28929  01ADD8  0060  F0EF  FFE3   	movff	_width+1,plusw1
 28930                           
 28931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 28932  01ADDE  A03E               	btfss	_flags^0,0,c
 28933  01ADE0  D01F               	goto	l15735
 28934  01ADE2  D031               	goto	u15020
 28935  01ADE4                     l15731:
 28936                           
 28937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 28938                           ;stkvar	_fp @ sp[(-17)+-2]
 28939  01ADE4  0EED               	movlw	-19
 28940  01ADE6  006F FF8F FFE6     	movff	plusw1,postinc1
 28941  01ADEC  006F FF8F FFE6     	movff	plusw1,postinc1
 28942  01ADF2  0E20               	movlw	32
 28943  01ADF4  6EE6               	movwf	postinc1,c
 28944  01ADF6  0E00               	movlw	0
 28945  01ADF8  6EE6               	movwf	postinc1,c
 28946  01ADFA  EC1A  F0F5         	call	_fputc	;wreg free
 28947                           
 28948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 28949                           ;stkvar	_l @ sp[(-17)+7]
 28950  01ADFE  0EF6               	movlw	-10
 28951  01AE00  50E3               	movf	plusw1,w,c
 28952  01AE02  0F01               	addlw	1
 28953  01AE04  6E01               	movwf	btemp^0,c
 28954  01AE06  0EF6               	movlw	-10
 28955  01AE08  0060  F007  FFE3   	movff	btemp,plusw1
 28956  01AE0E  6A01               	clrf	btemp^0,c
 28957  01AE10  0EF7               	movlw	-9
 28958  01AE12  50E3               	movf	plusw1,w,c
 28959  01AE14  2001               	addwfc	btemp^0,w,c
 28960  01AE16  6E01               	movwf	btemp^0,c
 28961  01AE18  0EF7               	movlw	-9
 28962  01AE1A  0060  F007  FFE3   	movff	btemp,plusw1
 28963  01AE20                     l15735:
 28964                           
 28965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 28966                           ;stkvar	_w @ sp[(-17)+13]
 28967                           ;stkvar	_l @ sp[(-17)+7]
 28968  01AE20  50E1               	movf	fsr1l,w,c
 28969  01AE22  0FF6               	addlw	-10
 28970  01AE24  6ED9               	movwf	fsr2l,c
 28971  01AE26  50E2               	movf	fsr1h,w,c
 28972  01AE28  6EDA               	movwf	fsr2h,c
 28973  01AE2A  0EFF               	movlw	255
 28974  01AE2C  22DA               	addwfc	fsr2h,f,c
 28975  01AE2E  0EFC               	movlw	-4
 28976  01AE30  50E3               	movf	plusw1,w,c
 28977  01AE32  5CDE               	subwf	postinc2,w,c
 28978  01AE34  50DE               	movf	postinc2,w,c
 28979  01AE36  0A80               	xorlw	128
 28980  01AE38  6E01               	movwf	btemp^0,c
 28981  01AE3A  0EFD               	movlw	-3
 28982  01AE3C  50E3               	movf	plusw1,w,c
 28983  01AE3E  0A80               	xorlw	128
 28984  01AE40  5801               	subwfb	btemp^0,w,c
 28985  01AE42  A0D8               	btfss	status,0,c
 28986  01AE44  D7CF               	goto	l15731
 28987  01AE46                     u15020:
 28988                           
 28989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 28990                           ;stkvar	_i @ sp[(-17)+15]
 28991  01AE46  0EFE               	movlw	-2
 28992  01AE48  6AE3               	clrf	plusw1,c
 28993  01AE4A  0EFF               	movlw	-1
 28994  01AE4C  6AE3               	clrf	plusw1,c
 28995                           
 28996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 28997  01AE4E  D045               	goto	l15745
 28998  01AE50                     l15739:
 28999                           
 29000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 29001                           ;stkvar	_fp @ sp[(-17)+-2]
 29002  01AE50  0EED               	movlw	-19
 29003  01AE52  006F FF8F FFE6     	movff	plusw1,postinc1
 29004  01AE58  006F FF8F FFE6     	movff	plusw1,postinc1
 29005                           
 29006                           ;stkvar	_cp @ sp[(-19)+11]
 29007  01AE5E  0EF8               	movlw	-8
 29008  01AE60  006F FF8F FFF6     	movff	plusw1,tblptrl
 29009  01AE66  0EF9               	movlw	-7
 29010  01AE68  006F FF8F FFF7     	movff	plusw1,tblptrh
 29011  01AE6E  0E00               	movlw	low (__mediumconst shr (0+16))
 29012  01AE70  6EF8               	movwf	tblptru,c
 29013  01AE72  0E1F               	movlw	(high __ramtop+-1)
 29014  01AE74  64F7               	cpfsgt	tblptrh,c
 29015  01AE76  D003               	bra	u15037
 29016  01AE78  0008               	tblrd		*
 29017  01AE7A  50F5               	movf	tablat,w,c
 29018  01AE7C  D007               	bra	u15030
 29019  01AE7E                     u15037:
 29020  01AE7E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 29021  01AE84  006F FFDF FFEA     	movff	tblptrh,fsr0h
 29022  01AE8A  50EF               	movf	indf0,w,c
 29023  01AE8C                     u15030:
 29024  01AE8C  6EE6               	movwf	postinc1,c
 29025  01AE8E  0E00               	movlw	0
 29026  01AE90  6EE6               	movwf	postinc1,c
 29027  01AE92  EC1A  F0F5         	call	_fputc	;wreg free
 29028                           
 29029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 29030                           ;stkvar	_cp @ sp[(-17)+11]
 29031  01AE96  0EFA               	movlw	-6
 29032  01AE98  50E3               	movf	plusw1,w,c
 29033  01AE9A  0F01               	addlw	1
 29034  01AE9C  6E01               	movwf	btemp^0,c
 29035  01AE9E  0EFA               	movlw	-6
 29036  01AEA0  0060  F007  FFE3   	movff	btemp,plusw1
 29037  01AEA6  6A01               	clrf	btemp^0,c
 29038  01AEA8  0EFB               	movlw	-5
 29039  01AEAA  50E3               	movf	plusw1,w,c
 29040  01AEAC  2001               	addwfc	btemp^0,w,c
 29041  01AEAE  6E01               	movwf	btemp^0,c
 29042  01AEB0  0EFB               	movlw	-5
 29043  01AEB2  0060  F007  FFE3   	movff	btemp,plusw1
 29044                           
 29045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 29046                           ;stkvar	_i @ sp[(-17)+15]
 29047  01AEB8  0EFE               	movlw	-2
 29048  01AEBA  50E3               	movf	plusw1,w,c
 29049  01AEBC  0F01               	addlw	1
 29050  01AEBE  6E01               	movwf	btemp^0,c
 29051  01AEC0  0EFE               	movlw	-2
 29052  01AEC2  0060  F007  FFE3   	movff	btemp,plusw1
 29053  01AEC8  6A01               	clrf	btemp^0,c
 29054  01AECA  0EFF               	movlw	-1
 29055  01AECC  50E3               	movf	plusw1,w,c
 29056  01AECE  2001               	addwfc	btemp^0,w,c
 29057  01AED0  6E01               	movwf	btemp^0,c
 29058  01AED2  0EFF               	movlw	-1
 29059  01AED4  0060  F007  FFE3   	movff	btemp,plusw1
 29060  01AEDA                     l15745:
 29061                           
 29062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 29063                           ;stkvar	_p @ sp[(-17)+9]
 29064                           ;stkvar	_i @ sp[(-17)+15]
 29065  01AEDA  50E1               	movf	fsr1l,w,c
 29066  01AEDC  0FFE               	addlw	-2
 29067  01AEDE  6ED9               	movwf	fsr2l,c
 29068  01AEE0  50E2               	movf	fsr1h,w,c
 29069  01AEE2  6EDA               	movwf	fsr2h,c
 29070  01AEE4  0EFF               	movlw	255
 29071  01AEE6  22DA               	addwfc	fsr2h,f,c
 29072  01AEE8  0EF8               	movlw	-8
 29073  01AEEA  50E3               	movf	plusw1,w,c
 29074  01AEEC  5CDE               	subwf	postinc2,w,c
 29075  01AEEE  50DE               	movf	postinc2,w,c
 29076  01AEF0  0A80               	xorlw	128
 29077  01AEF2  6E01               	movwf	btemp^0,c
 29078  01AEF4  0EF9               	movlw	-7
 29079  01AEF6  50E3               	movf	plusw1,w,c
 29080  01AEF8  0A80               	xorlw	128
 29081  01AEFA  5801               	subwfb	btemp^0,w,c
 29082  01AEFC  A0D8               	btfss	status,0,c
 29083  01AEFE  D7A8               	goto	l15739
 29084                           
 29085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 29086  01AF00  B03E               	btfsc	_flags^0,0,c
 29087  01AF02  D01F               	goto	l15753
 29088  01AF04  D031               	goto	u15060
 29089  01AF06                     l15749:
 29090                           
 29091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 29092                           ;stkvar	_fp @ sp[(-17)+-2]
 29093  01AF06  0EED               	movlw	-19
 29094  01AF08  006F FF8F FFE6     	movff	plusw1,postinc1
 29095  01AF0E  006F FF8F FFE6     	movff	plusw1,postinc1
 29096  01AF14  0E20               	movlw	32
 29097  01AF16  6EE6               	movwf	postinc1,c
 29098  01AF18  0E00               	movlw	0
 29099  01AF1A  6EE6               	movwf	postinc1,c
 29100  01AF1C  EC1A  F0F5         	call	_fputc	;wreg free
 29101                           
 29102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 29103                           ;stkvar	_l @ sp[(-17)+7]
 29104  01AF20  0EF6               	movlw	-10
 29105  01AF22  50E3               	movf	plusw1,w,c
 29106  01AF24  0F01               	addlw	1
 29107  01AF26  6E01               	movwf	btemp^0,c
 29108  01AF28  0EF6               	movlw	-10
 29109  01AF2A  0060  F007  FFE3   	movff	btemp,plusw1
 29110  01AF30  6A01               	clrf	btemp^0,c
 29111  01AF32  0EF7               	movlw	-9
 29112  01AF34  50E3               	movf	plusw1,w,c
 29113  01AF36  2001               	addwfc	btemp^0,w,c
 29114  01AF38  6E01               	movwf	btemp^0,c
 29115  01AF3A  0EF7               	movlw	-9
 29116  01AF3C  0060  F007  FFE3   	movff	btemp,plusw1
 29117  01AF42                     l15753:
 29118                           
 29119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 29120                           ;stkvar	_w @ sp[(-17)+13]
 29121                           ;stkvar	_l @ sp[(-17)+7]
 29122  01AF42  50E1               	movf	fsr1l,w,c
 29123  01AF44  0FF6               	addlw	-10
 29124  01AF46  6ED9               	movwf	fsr2l,c
 29125  01AF48  50E2               	movf	fsr1h,w,c
 29126  01AF4A  6EDA               	movwf	fsr2h,c
 29127  01AF4C  0EFF               	movlw	255
 29128  01AF4E  22DA               	addwfc	fsr2h,f,c
 29129  01AF50  0EFC               	movlw	-4
 29130  01AF52  50E3               	movf	plusw1,w,c
 29131  01AF54  5CDE               	subwf	postinc2,w,c
 29132  01AF56  50DE               	movf	postinc2,w,c
 29133  01AF58  0A80               	xorlw	128
 29134  01AF5A  6E01               	movwf	btemp^0,c
 29135  01AF5C  0EFD               	movlw	-3
 29136  01AF5E  50E3               	movf	plusw1,w,c
 29137  01AF60  0A80               	xorlw	128
 29138  01AF62  5801               	subwfb	btemp^0,w,c
 29139  01AF64  A0D8               	btfss	status,0,c
 29140  01AF66  D7CF               	goto	l15749
 29141  01AF68                     u15060:
 29142                           
 29143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 29144                           ;stkvar	_l @ sp[(-17)+7]
 29145  01AF68  0EF6               	movlw	-10
 29146  01AF6A  006F FF8C  F001    	movff	plusw1,btemp
 29147  01AF70  0EF7               	movlw	-9
 29148  01AF72  006F FF8C  F002    	movff	plusw1,btemp+1
 29149                           
 29150                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 29151  01AF78  0EEB               	movlw	235
 29152  01AF7A  26E1               	addwf	fsr1l,f,c
 29153  01AF7C  0EFF               	movlw	255
 29154  01AF7E  22E2               	addwfc	fsr1h,f,c
 29155  01AF80  0012               	return		;funcret
 29156  01AF82                     __end_of_stoa:
 29157                           	opt callstack 0
 29158                           
 29159 ;; *************** function _efgtoa *****************
 29160 ;; Defined at:
 29161 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 29162 ;; Parameters:    Size  Location     Type
 29163 ;;  fp              2  [STACK] PTR struct _IO_FILE
 29164 ;;		 -> f(6), NULL(0), 
 29165 ;;  f               4  [STACK] PTR struct _IO_FILE
 29166 ;;  c               1  [STACK] unsigned char 
 29167 ;; Auto vars:     Size  Location     Type
 29168 ;;  u               4  [STACK] unsigned char 
 29169 ;;  g               4  [STACK] unsigned char 
 29170 ;;  l               4  [STACK] unsigned char 
 29171 ;;  h               4  [STACK] unsigned char 
 29172 ;;  ou              4  [STACK] unsigned char 
 29173 ;;  n               2  [STACK] int 
 29174 ;;  e               2  [STACK] int 
 29175 ;;  i               2  [STACK] int 
 29176 ;;  w               2  [STACK] int 
 29177 ;;  p               2  [STACK] int 
 29178 ;;  sign            2  [STACK] int 
 29179 ;;  d               2  [STACK] int 
 29180 ;;  ne              2  [STACK] int 
 29181 ;;  m               2  [STACK] int 
 29182 ;;  pp              2  [STACK] int 
 29183 ;;  t               2  [STACK] int 
 29184 ;;  mode            1  [STACK] unsigned char 
 29185 ;;  nmode           1  [STACK] unsigned char 
 29186 ;; Return value:  Size  Location     Type
 29187 ;;                  2  [STACK] int 
 29188 ;; Registers used:
 29189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 29190 ;; Tracked objects:
 29191 ;;		On entry : 0/0
 29192 ;;		On exit  : 0/0
 29193 ;;		Unchanged: 0/0
 29194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29199 ;;Total ram usage:        0 bytes
 29200 ;; Hardware stack levels used:    1
 29201 ;; Hardware stack levels required when called:   20
 29202 ;; This function calls:
 29203 ;;		___awdiv
 29204 ;;		___awmod
 29205 ;;		___fladd
 29206 ;;		___fldiv
 29207 ;;		___fleq
 29208 ;;		___flge
 29209 ;;		___flmul
 29210 ;;		___flneg
 29211 ;;		___flsub
 29212 ;;		___fltol
 29213 ;;		___fpclassifyf
 29214 ;;		_floorf
 29215 ;;		_isupper
 29216 ;;		_pad
 29217 ;;		_strcpy
 29218 ;;		_tolower
 29219 ;; This function is called by:
 29220 ;;		_vfpfcnvrt
 29221 ;; This function uses a reentrant model
 29222 ;;
 29223                           
 29224                           	psect	text101
 29225  0113CE                     __ptext101:
 29226                           	opt callstack 0
 29227  0113CE                     _efgtoa:
 29228                           	opt callstack 0
 29229                           
 29230                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 29231  0113CE  0E38               	movlw	56
 29232  0113D0  26E1               	addwf	fsr1l,f,c
 29233  0113D2  0E00               	movlw	0
 29234  0113D4  22E2               	addwfc	fsr1h,f,c
 29235                           
 29236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 29237                           ;stkvar	_sign @ sp[(-56)+42]
 29238                           
 29239                           ;incstack = 0
 29240 ;; hardware stack exceeded
 29241  0113D6  0EF2               	movlw	-14
 29242  0113D8  6AE3               	clrf	plusw1,c
 29243  0113DA  0EF3               	movlw	-13
 29244  0113DC  6AE3               	clrf	plusw1,c
 29245                           
 29246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 29247                           ;stkvar	_f @ sp[(-56)+-6]
 29248  0113DE  0EC2               	movlw	-62
 29249  0113E0  006F FF8C  F009    	movff	plusw1,btemp+8
 29250  0113E6  0EC3               	movlw	-61
 29251  0113E8  006F FF8C  F00A    	movff	plusw1,btemp+9
 29252  0113EE  0EC4               	movlw	-60
 29253  0113F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 29254  0113F6  0EC5               	movlw	-59
 29255  0113F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 29256                           
 29257                           ;stkvar	_g @ sp[(-56)+16]
 29258  0113FE  0ED8               	movlw	-40
 29259  011400  0060  F027  FFE3   	movff	btemp+8,plusw1
 29260  011406  0ED9               	movlw	-39
 29261  011408  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29262  01140E  0EDA               	movlw	-38
 29263  011410  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29264  011416  0EDB               	movlw	-37
 29265  011418  0060  F033  FFE3   	movff	btemp+11,plusw1
 29266                           
 29267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 29268                           ;stkvar	_g @ sp[(-56)+16]
 29269  01141E  0EDB               	movlw	-37
 29270  011420  AEE3               	btfss	plusw1,7,c
 29271  011422  D02B               	goto	l15413
 29272                           
 29273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 29274  011424  0E01               	movlw	1
 29275  011426  6E0B               	movwf	(btemp+10)^0,c
 29276  011428  0E00               	movlw	0
 29277  01142A  6E0C               	movwf	(btemp+11)^0,c
 29278                           
 29279                           ;stkvar	_sign @ sp[(-56)+42]
 29280  01142C  0EF2               	movlw	-14
 29281  01142E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29282  011434  0EF3               	movlw	-13
 29283  011436  0060  F033  FFE3   	movff	btemp+11,plusw1
 29284                           
 29285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 29286                           ;stkvar	_g @ sp[(-56)+16]
 29287  01143C  0ED8               	movlw	-40
 29288  01143E  006F FF8F FFE6     	movff	plusw1,postinc1
 29289  011444  006F FF8F FFE6     	movff	plusw1,postinc1
 29290  01144A  006F FF8F FFE6     	movff	plusw1,postinc1
 29291  011450  006F FF8F FFE6     	movff	plusw1,postinc1
 29292  011456  EC29  F009         	call	___flneg	;wreg free
 29293                           
 29294                           ;stkvar	_g @ sp[(-56)+16]
 29295  01145A  0ED8               	movlw	-40
 29296  01145C  0060  F007  FFE3   	movff	btemp,plusw1
 29297  011462  0ED9               	movlw	-39
 29298  011464  0060  F00B  FFE3   	movff	btemp+1,plusw1
 29299  01146A  0EDA               	movlw	-38
 29300  01146C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 29301  011472  0EDB               	movlw	-37
 29302  011474  0060  F013  FFE3   	movff	btemp+3,plusw1
 29303  01147A                     l15413:
 29304                           
 29305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 29306                           ;stkvar	_n @ sp[(-56)+32]
 29307  01147A  0EE8               	movlw	-24
 29308  01147C  6AE3               	clrf	plusw1,c
 29309  01147E  0EE9               	movlw	-23
 29310  011480  6AE3               	clrf	plusw1,c
 29311                           
 29312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 29313                           ;stkvar	_w @ sp[(-56)+38]
 29314  011482  0EEE               	movlw	-18
 29315  011484  0060  F0EB  FFE3   	movff	_width,plusw1
 29316  01148A  0EEF               	movlw	-17
 29317  01148C  0060  F0EF  FFE3   	movff	_width+1,plusw1
 29318                           
 29319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 29320                           ;stkvar	_sign @ sp[(-56)+42]
 29321  011492  0EF2               	movlw	-14
 29322  011494  006F FF8C  F001    	movff	plusw1,btemp
 29323  01149A  0EF3               	movlw	-13
 29324  01149C  50E3               	movf	plusw1,w,c
 29325  01149E  1001               	iorwf	btemp^0,w,c
 29326  0114A0  A4D8               	btfss	status,2,c
 29327  0114A2  D002               	goto	u14470
 29328  0114A4  A43E               	btfss	_flags^0,2,c
 29329  0114A6  D036               	goto	l15433
 29330  0114A8                     u14470:
 29331                           
 29332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 29333                           ;stkvar	_sign @ sp[(-56)+42]
 29334  0114A8  0EF2               	movlw	-14
 29335  0114AA  006F FF8C  F001    	movff	plusw1,btemp
 29336  0114B0  0EF3               	movlw	-13
 29337  0114B2  50E3               	movf	plusw1,w,c
 29338  0114B4  1001               	iorwf	btemp^0,w,c
 29339  0114B6  A4D8               	btfss	status,2,c
 29340  0114B8  D002               	goto	l15425
 29341  0114BA  0E2B               	movlw	43
 29342  0114BC  D001               	goto	L30
 29343  0114BE                     l15425:
 29344  0114BE  0E2D               	movlw	45
 29345  0114C0                     L30:
 29346  0114C0  6E0B               	movwf	(btemp+10)^0,c
 29347  0114C2  0E00               	movlw	0
 29348  0114C4  6E0C               	movwf	(btemp+11)^0,c
 29349                           
 29350                           ;stkvar	_efgtoa$6845 @ sp[(-56)+10]
 29351  0114C6  0ED2               	movlw	-46
 29352  0114C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29353  0114CE  0ED3               	movlw	-45
 29354  0114D0  0060  F033  FFE3   	movff	btemp+11,plusw1
 29355                           
 29356                           ;stkvar	_efgtoa$6845 @ sp[(-56)+10]
 29357  0114D6  0ED2               	movlw	-46
 29358  0114D8  006F FF8C  F354    	movff	plusw1,_dbuf
 29359                           
 29360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 29361                           ;stkvar	_n @ sp[(-56)+32]
 29362  0114DE  0EE8               	movlw	-24
 29363  0114E0  50E3               	movf	plusw1,w,c
 29364  0114E2  0F01               	addlw	1
 29365  0114E4  6E01               	movwf	btemp^0,c
 29366  0114E6  0EE8               	movlw	-24
 29367  0114E8  0060  F007  FFE3   	movff	btemp,plusw1
 29368  0114EE  6A01               	clrf	btemp^0,c
 29369  0114F0  0EE9               	movlw	-23
 29370  0114F2  50E3               	movf	plusw1,w,c
 29371  0114F4  2001               	addwfc	btemp^0,w,c
 29372  0114F6  6E01               	movwf	btemp^0,c
 29373  0114F8  0EE9               	movlw	-23
 29374  0114FA  0060  F007  FFE3   	movff	btemp,plusw1
 29375                           
 29376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 29377                           ;stkvar	_w @ sp[(-56)+38]
 29378  011500  50E1               	movf	fsr1l,w,c
 29379  011502  0FEE               	addlw	-18
 29380  011504  6ED9               	movwf	fsr2l,c
 29381  011506  50E2               	movf	fsr1h,w,c
 29382  011508  6EDA               	movwf	fsr2h,c
 29383  01150A  0EFF               	movlw	255
 29384  01150C  22DA               	addwfc	fsr2h,f,c
 29385  01150E  06DE               	decf	postinc2,f,c
 29386  011510  0E00               	movlw	0
 29387  011512  5ADD               	subwfb	postdec2,f,c
 29388  011514                     l15433:
 29389                           
 29390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 29391                           ;stkvar	_g @ sp[(-56)+16]
 29392  011514  0ED8               	movlw	-40
 29393  011516  006F FF8F FFE6     	movff	plusw1,postinc1
 29394  01151C  006F FF8F FFE6     	movff	plusw1,postinc1
 29395  011522  006F FF8F FFE6     	movff	plusw1,postinc1
 29396  011528  006F FF8F FFE6     	movff	plusw1,postinc1
 29397  01152E  EC27  F0E9         	call	___fpclassifyf	;wreg free
 29398  011532  0401               	decf	btemp^0,w,c
 29399  011534  1002               	iorwf	(btemp+1)^0,w,c
 29400  011536  A4D8               	btfss	status,2,c
 29401  011538  D076               	goto	l15451
 29402  01153A  0EBF               	movlw	191
 29403  01153C  6E0B               	movwf	(btemp+10)^0,c
 29404  01153E  0EFF               	movlw	255
 29405  011540  6E0C               	movwf	(btemp+11)^0,c
 29406                           
 29407                           ;stkvar	_c @ sp[(-56)+-7]
 29408  011542  0EC1               	movlw	-63
 29409  011544  50E3               	movf	plusw1,w,c
 29410  011546  6E09               	movwf	(btemp+8)^0,c
 29411  011548  6A0A               	clrf	(btemp+9)^0,c
 29412  01154A  500B               	movf	(btemp+10)^0,w,c
 29413  01154C  2609               	addwf	(btemp+8)^0,f,c
 29414  01154E  500C               	movf	(btemp+11)^0,w,c
 29415  011550  220A               	addwfc	(btemp+9)^0,f,c
 29416  011552  500A               	movf	(btemp+9)^0,w,c
 29417  011554  E106               	bnz	u14500
 29418  011556  0E1A               	movlw	26
 29419  011558  5C09               	subwf	(btemp+8)^0,w,c
 29420  01155A  B0D8               	btfsc	status,0,c
 29421  01155C  D002               	goto	u14500
 29422  01155E  0E01               	movlw	1
 29423  011560  D001               	goto	u14510
 29424  011562                     u14500:
 29425  011562  0E00               	movlw	0
 29426  011564                     u14510:
 29427  011564  6E0B               	movwf	(btemp+10)^0,c
 29428  011566  6A0C               	clrf	(btemp+11)^0,c
 29429                           
 29430                           ;stkvar	_efgtoa$6846 @ sp[(-56)+8]
 29431  011568  0ED0               	movlw	-48
 29432  01156A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29433  011570  0ED1               	movlw	-47
 29434  011572  0060  F033  FFE3   	movff	btemp+11,plusw1
 29435                           
 29436                           ;stkvar	_efgtoa$6846 @ sp[(-56)+8]
 29437  011578  0ED0               	movlw	-48
 29438  01157A  006F FF8C  F001    	movff	plusw1,btemp
 29439  011580  0ED1               	movlw	-47
 29440  011582  50E3               	movf	plusw1,w,c
 29441  011584  1001               	iorwf	btemp^0,w,c
 29442  011586  B4D8               	btfsc	status,2,c
 29443  011588  D017               	goto	l15443
 29444                           
 29445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 29446  01158A  0ED6               	movlw	low STR_91
 29447  01158C  6EE6               	movwf	postinc1,c
 29448  01158E  0EFF               	movlw	high STR_91
 29449  011590  6EE6               	movwf	postinc1,c
 29450                           
 29451                           ;stkvar	_n @ sp[(-58)+32]
 29452  011592  0E54               	movlw	low _dbuf
 29453  011594  6E0B               	movwf	(btemp+10)^0,c
 29454  011596  0E03               	movlw	high _dbuf
 29455  011598  6E0C               	movwf	(btemp+11)^0,c
 29456  01159A  0EE6               	movlw	-26
 29457  01159C  50E3               	movf	plusw1,w,c
 29458  01159E  260B               	addwf	(btemp+10)^0,f,c
 29459  0115A0  0EE7               	movlw	-25
 29460  0115A2  50E3               	movf	plusw1,w,c
 29461  0115A4  220C               	addwfc	(btemp+11)^0,f,c
 29462  0115A6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 29463  0115AC  0060  F033  FFE6   	movff	btemp+11,postinc1
 29464  0115B2  EC0A  F0FC         	call	_strcpy	;wreg free
 29465                           
 29466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 29467  0115B6  D016               	goto	l15445
 29468  0115B8                     l15443:
 29469                           
 29470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 29471  0115B8  0EDE               	movlw	low STR_92
 29472  0115BA  6EE6               	movwf	postinc1,c
 29473  0115BC  0EFF               	movlw	high STR_92
 29474  0115BE  6EE6               	movwf	postinc1,c
 29475                           
 29476                           ;stkvar	_n @ sp[(-58)+32]
 29477  0115C0  0E54               	movlw	low _dbuf
 29478  0115C2  6E0B               	movwf	(btemp+10)^0,c
 29479  0115C4  0E03               	movlw	high _dbuf
 29480  0115C6  6E0C               	movwf	(btemp+11)^0,c
 29481  0115C8  0EE6               	movlw	-26
 29482  0115CA  50E3               	movf	plusw1,w,c
 29483  0115CC  260B               	addwf	(btemp+10)^0,f,c
 29484  0115CE  0EE7               	movlw	-25
 29485  0115D0  50E3               	movf	plusw1,w,c
 29486  0115D2  220C               	addwfc	(btemp+11)^0,f,c
 29487  0115D4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 29488  0115DA  0060  F033  FFE6   	movff	btemp+11,postinc1
 29489  0115E0  EC0A  F0FC         	call	_strcpy	;wreg free
 29490  0115E4                     l15445:
 29491                           
 29492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 29493                           ;stkvar	_w @ sp[(-56)+38]
 29494  0115E4  50E1               	movf	fsr1l,w,c
 29495  0115E6  0FEE               	addlw	-18
 29496  0115E8  6ED9               	movwf	fsr2l,c
 29497  0115EA  50E2               	movf	fsr1h,w,c
 29498  0115EC  6EDA               	movwf	fsr2h,c
 29499  0115EE  0EFF               	movlw	255
 29500  0115F0  22DA               	addwfc	fsr2h,f,c
 29501  0115F2  0EFD               	movlw	253
 29502  0115F4  26DE               	addwf	postinc2,f,c
 29503  0115F6  0EFF               	movlw	255
 29504  0115F8  22DD               	addwfc	postdec2,f,c
 29505  0115FA                     l15447:
 29506                           
 29507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 29508                           ;stkvar	_w @ sp[(-56)+38]
 29509  0115FA  0EEE               	movlw	-18
 29510  0115FC  006F FF8F FFE6     	movff	plusw1,postinc1
 29511  011602  006F FF8F FFE6     	movff	plusw1,postinc1
 29512  011608  0E54               	movlw	low _dbuf
 29513  01160A  6EE6               	movwf	postinc1,c
 29514  01160C  0E03               	movlw	high _dbuf
 29515  01160E  6EE6               	movwf	postinc1,c
 29516                           
 29517                           ;stkvar	_fp @ sp[(-60)+-2]
 29518  011610  0EC2               	movlw	-62
 29519  011612  006F FF8F FFE6     	movff	plusw1,postinc1
 29520  011618  006F FF8F FFE6     	movff	plusw1,postinc1
 29521  01161E  EC51  F0F7         	call	_pad	;wreg free
 29522  011622  EF04  F093         	goto	l2506
 29523  011626                     l15451:
 29524                           
 29525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 29526                           ;stkvar	_g @ sp[(-56)+16]
 29527  011626  0ED8               	movlw	-40
 29528  011628  006F FF8F FFE6     	movff	plusw1,postinc1
 29529  01162E  006F FF8F FFE6     	movff	plusw1,postinc1
 29530  011634  006F FF8F FFE6     	movff	plusw1,postinc1
 29531  01163A  006F FF8F FFE6     	movff	plusw1,postinc1
 29532  011640  EC27  F0E9         	call	___fpclassifyf	;wreg free
 29533  011644  5001               	movf	btemp^0,w,c
 29534  011646  1002               	iorwf	(btemp+1)^0,w,c
 29535  011648  A4D8               	btfss	status,2,c
 29536  01164A  D056               	goto	l15469
 29537  01164C  0EBF               	movlw	191
 29538  01164E  6E0B               	movwf	(btemp+10)^0,c
 29539  011650  0EFF               	movlw	255
 29540  011652  6E0C               	movwf	(btemp+11)^0,c
 29541                           
 29542                           ;stkvar	_c @ sp[(-56)+-7]
 29543  011654  0EC1               	movlw	-63
 29544  011656  50E3               	movf	plusw1,w,c
 29545  011658  6E09               	movwf	(btemp+8)^0,c
 29546  01165A  6A0A               	clrf	(btemp+9)^0,c
 29547  01165C  500B               	movf	(btemp+10)^0,w,c
 29548  01165E  2609               	addwf	(btemp+8)^0,f,c
 29549  011660  500C               	movf	(btemp+11)^0,w,c
 29550  011662  220A               	addwfc	(btemp+9)^0,f,c
 29551  011664  500A               	movf	(btemp+9)^0,w,c
 29552  011666  E106               	bnz	u14540
 29553  011668  0E1A               	movlw	26
 29554  01166A  5C09               	subwf	(btemp+8)^0,w,c
 29555  01166C  B0D8               	btfsc	status,0,c
 29556  01166E  D002               	goto	u14540
 29557  011670  0E01               	movlw	1
 29558  011672  D001               	goto	u14550
 29559  011674                     u14540:
 29560  011674  0E00               	movlw	0
 29561  011676                     u14550:
 29562  011676  6E0B               	movwf	(btemp+10)^0,c
 29563  011678  6A0C               	clrf	(btemp+11)^0,c
 29564                           
 29565                           ;stkvar	_efgtoa$6850 @ sp[(-56)+6]
 29566  01167A  0ECE               	movlw	-50
 29567  01167C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29568  011682  0ECF               	movlw	-49
 29569  011684  0060  F033  FFE3   	movff	btemp+11,plusw1
 29570                           
 29571                           ;stkvar	_efgtoa$6850 @ sp[(-56)+6]
 29572  01168A  0ECE               	movlw	-50
 29573  01168C  006F FF8C  F001    	movff	plusw1,btemp
 29574  011692  0ECF               	movlw	-49
 29575  011694  50E3               	movf	plusw1,w,c
 29576  011696  1001               	iorwf	btemp^0,w,c
 29577  011698  B4D8               	btfsc	status,2,c
 29578  01169A  D017               	goto	l15461
 29579                           
 29580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 29581  01169C  0EDA               	movlw	low STR_95
 29582  01169E  6EE6               	movwf	postinc1,c
 29583  0116A0  0EFF               	movlw	high STR_95
 29584  0116A2  6EE6               	movwf	postinc1,c
 29585                           
 29586                           ;stkvar	_n @ sp[(-58)+32]
 29587  0116A4  0E54               	movlw	low _dbuf
 29588  0116A6  6E0B               	movwf	(btemp+10)^0,c
 29589  0116A8  0E03               	movlw	high _dbuf
 29590  0116AA  6E0C               	movwf	(btemp+11)^0,c
 29591  0116AC  0EE6               	movlw	-26
 29592  0116AE  50E3               	movf	plusw1,w,c
 29593  0116B0  260B               	addwf	(btemp+10)^0,f,c
 29594  0116B2  0EE7               	movlw	-25
 29595  0116B4  50E3               	movf	plusw1,w,c
 29596  0116B6  220C               	addwfc	(btemp+11)^0,f,c
 29597  0116B8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 29598  0116BE  0060  F033  FFE6   	movff	btemp+11,postinc1
 29599  0116C4  EC0A  F0FC         	call	_strcpy	;wreg free
 29600                           
 29601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 29602  0116C8  D78D               	goto	l15445
 29603  0116CA                     l15461:
 29604                           
 29605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 29606  0116CA  0EE2               	movlw	low STR_96
 29607  0116CC  6EE6               	movwf	postinc1,c
 29608  0116CE  0EFF               	movlw	high STR_96
 29609  0116D0  6EE6               	movwf	postinc1,c
 29610                           
 29611                           ;stkvar	_n @ sp[(-58)+32]
 29612  0116D2  0E54               	movlw	low _dbuf
 29613  0116D4  6E0B               	movwf	(btemp+10)^0,c
 29614  0116D6  0E03               	movlw	high _dbuf
 29615  0116D8  6E0C               	movwf	(btemp+11)^0,c
 29616  0116DA  0EE6               	movlw	-26
 29617  0116DC  50E3               	movf	plusw1,w,c
 29618  0116DE  260B               	addwf	(btemp+10)^0,f,c
 29619  0116E0  0EE7               	movlw	-25
 29620  0116E2  50E3               	movf	plusw1,w,c
 29621  0116E4  220C               	addwfc	(btemp+11)^0,f,c
 29622  0116E6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 29623  0116EC  0060  F033  FFE6   	movff	btemp+11,postinc1
 29624  0116F2  EC0A  F0FC         	call	_strcpy	;wreg free
 29625  0116F6  D776               	goto	l15445
 29626  0116F8                     l15469:
 29627                           
 29628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 29629  0116F8  0E00               	movlw	0
 29630  0116FA  6E09               	movwf	(btemp+8)^0,c
 29631  0116FC  0E00               	movlw	0
 29632  0116FE  6E0A               	movwf	(btemp+9)^0,c
 29633  011700  0E80               	movlw	128
 29634  011702  6E0B               	movwf	(btemp+10)^0,c
 29635  011704  0E3F               	movlw	63
 29636  011706  6E0C               	movwf	(btemp+11)^0,c
 29637                           
 29638                           ;stkvar	_u @ sp[(-56)+12]
 29639  011708  0ED4               	movlw	-44
 29640  01170A  0060  F027  FFE3   	movff	btemp+8,plusw1
 29641  011710  0ED5               	movlw	-43
 29642  011712  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29643  011718  0ED6               	movlw	-42
 29644  01171A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29645  011720  0ED7               	movlw	-41
 29646  011722  0060  F033  FFE3   	movff	btemp+11,plusw1
 29647                           
 29648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 29649                           ;stkvar	_e @ sp[(-56)+34]
 29650  011728  0EEA               	movlw	-22
 29651  01172A  6AE3               	clrf	plusw1,c
 29652  01172C  0EEB               	movlw	-21
 29653  01172E  6AE3               	clrf	plusw1,c
 29654                           
 29655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 29656  011730  0E00               	movlw	0
 29657  011732  6EE6               	movwf	postinc1,c
 29658  011734  0E00               	movlw	0
 29659  011736  6EE6               	movwf	postinc1,c
 29660  011738  0E00               	movlw	0
 29661  01173A  6EE6               	movwf	postinc1,c
 29662  01173C  0E00               	movlw	0
 29663  01173E  6EE6               	movwf	postinc1,c
 29664                           
 29665                           ;stkvar	_g @ sp[(-60)+16]
 29666  011740  0ED4               	movlw	-44
 29667  011742  006F FF8F FFE6     	movff	plusw1,postinc1
 29668  011748  006F FF8F FFE6     	movff	plusw1,postinc1
 29669  01174E  006F FF8F FFE6     	movff	plusw1,postinc1
 29670  011754  006F FF8F FFE6     	movff	plusw1,postinc1
 29671  01175A  EC43  F0FD         	call	___fleq	;wreg free
 29672  01175E  A001               	btfss	btemp& (0+255),0,c
 29673  011760  D039               	goto	l15481
 29674  011762  D0BC               	goto	u14590
 29675  011764                     l15477:
 29676                           
 29677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 29678  011764  0E00               	movlw	0
 29679  011766  6EE6               	movwf	postinc1,c
 29680  011768  0E00               	movlw	0
 29681  01176A  6EE6               	movwf	postinc1,c
 29682  01176C  0E20               	movlw	32
 29683  01176E  6EE6               	movwf	postinc1,c
 29684  011770  0E41               	movlw	65
 29685  011772  6EE6               	movwf	postinc1,c
 29686                           
 29687                           ;stkvar	_u @ sp[(-60)+12]
 29688  011774  0ED0               	movlw	-48
 29689  011776  006F FF8F FFE6     	movff	plusw1,postinc1
 29690  01177C  006F FF8F FFE6     	movff	plusw1,postinc1
 29691  011782  006F FF8F FFE6     	movff	plusw1,postinc1
 29692  011788  006F FF8F FFE6     	movff	plusw1,postinc1
 29693  01178E  EC89  F0B1         	call	___flmul	;wreg free
 29694                           
 29695                           ;stkvar	_u @ sp[(-56)+12]
 29696  011792  0ED4               	movlw	-44
 29697  011794  0060  F007  FFE3   	movff	btemp,plusw1
 29698  01179A  0ED5               	movlw	-43
 29699  01179C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 29700  0117A2  0ED6               	movlw	-42
 29701  0117A4  0060  F00F  FFE3   	movff	btemp+2,plusw1
 29702  0117AA  0ED7               	movlw	-41
 29703  0117AC  0060  F013  FFE3   	movff	btemp+3,plusw1
 29704                           
 29705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 29706                           ;stkvar	_e @ sp[(-56)+34]
 29707  0117B2  0EEA               	movlw	-22
 29708  0117B4  50E3               	movf	plusw1,w,c
 29709  0117B6  0F01               	addlw	1
 29710  0117B8  6E01               	movwf	btemp^0,c
 29711  0117BA  0EEA               	movlw	-22
 29712  0117BC  0060  F007  FFE3   	movff	btemp,plusw1
 29713  0117C2  6A01               	clrf	btemp^0,c
 29714  0117C4  0EEB               	movlw	-21
 29715  0117C6  50E3               	movf	plusw1,w,c
 29716  0117C8  2001               	addwfc	btemp^0,w,c
 29717  0117CA  6E01               	movwf	btemp^0,c
 29718  0117CC  0EEB               	movlw	-21
 29719  0117CE  0060  F007  FFE3   	movff	btemp,plusw1
 29720  0117D4                     l15481:
 29721                           
 29722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 29723  0117D4  0E00               	movlw	0
 29724  0117D6  6EE6               	movwf	postinc1,c
 29725  0117D8  0E00               	movlw	0
 29726  0117DA  6EE6               	movwf	postinc1,c
 29727  0117DC  0E20               	movlw	32
 29728  0117DE  6EE6               	movwf	postinc1,c
 29729  0117E0  0E41               	movlw	65
 29730  0117E2  6EE6               	movwf	postinc1,c
 29731                           
 29732                           ;stkvar	_u @ sp[(-60)+12]
 29733  0117E4  0ED0               	movlw	-48
 29734  0117E6  006F FF8F FFE6     	movff	plusw1,postinc1
 29735  0117EC  006F FF8F FFE6     	movff	plusw1,postinc1
 29736  0117F2  006F FF8F FFE6     	movff	plusw1,postinc1
 29737  0117F8  006F FF8F FFE6     	movff	plusw1,postinc1
 29738  0117FE  EC89  F0B1         	call	___flmul	;wreg free
 29739  011802  0060  F007  FFE6   	movff	btemp,postinc1
 29740  011808  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29741  01180E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29742  011814  0060  F013  FFE6   	movff	btemp+3,postinc1
 29743                           
 29744                           ;stkvar	_g @ sp[(-60)+16]
 29745  01181A  0ED4               	movlw	-44
 29746  01181C  006F FF8F FFE6     	movff	plusw1,postinc1
 29747  011822  006F FF8F FFE6     	movff	plusw1,postinc1
 29748  011828  006F FF8F FFE6     	movff	plusw1,postinc1
 29749  01182E  006F FF8F FFE6     	movff	plusw1,postinc1
 29750  011834  EC2B  F0EF         	call	___flge	;wreg free
 29751  011838  A001               	btfss	btemp& (0+255),0,c
 29752  01183A  D032               	goto	l15487
 29753  01183C  D793               	goto	l15477
 29754  01183E                     l15483:
 29755                           
 29756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 29757  01183E  0E00               	movlw	0
 29758  011840  6EE6               	movwf	postinc1,c
 29759  011842  0E00               	movlw	0
 29760  011844  6EE6               	movwf	postinc1,c
 29761  011846  0E20               	movlw	32
 29762  011848  6EE6               	movwf	postinc1,c
 29763  01184A  0E41               	movlw	65
 29764  01184C  6EE6               	movwf	postinc1,c
 29765                           
 29766                           ;stkvar	_u @ sp[(-60)+12]
 29767  01184E  0ED0               	movlw	-48
 29768  011850  006F FF8F FFE6     	movff	plusw1,postinc1
 29769  011856  006F FF8F FFE6     	movff	plusw1,postinc1
 29770  01185C  006F FF8F FFE6     	movff	plusw1,postinc1
 29771  011862  006F FF8F FFE6     	movff	plusw1,postinc1
 29772  011868  ECDA  F0BC         	call	___fldiv	;wreg free
 29773                           
 29774                           ;stkvar	_u @ sp[(-56)+12]
 29775  01186C  0ED4               	movlw	-44
 29776  01186E  0060  F007  FFE3   	movff	btemp,plusw1
 29777  011874  0ED5               	movlw	-43
 29778  011876  0060  F00B  FFE3   	movff	btemp+1,plusw1
 29779  01187C  0ED6               	movlw	-42
 29780  01187E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 29781  011884  0ED7               	movlw	-41
 29782  011886  0060  F013  FFE3   	movff	btemp+3,plusw1
 29783                           
 29784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 29785                           ;stkvar	_e @ sp[(-56)+34]
 29786  01188C  50E1               	movf	fsr1l,w,c
 29787  01188E  0FEA               	addlw	-22
 29788  011890  6ED9               	movwf	fsr2l,c
 29789  011892  50E2               	movf	fsr1h,w,c
 29790  011894  6EDA               	movwf	fsr2h,c
 29791  011896  0EFF               	movlw	255
 29792  011898  22DA               	addwfc	fsr2h,f,c
 29793  01189A  06DE               	decf	postinc2,f,c
 29794  01189C  0E00               	movlw	0
 29795  01189E  5ADD               	subwfb	postdec2,f,c
 29796  0118A0                     l15487:
 29797                           
 29798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 29799                           ;stkvar	_u @ sp[(-56)+12]
 29800  0118A0  0ED4               	movlw	-44
 29801  0118A2  006F FF8F FFE6     	movff	plusw1,postinc1
 29802  0118A8  006F FF8F FFE6     	movff	plusw1,postinc1
 29803  0118AE  006F FF8F FFE6     	movff	plusw1,postinc1
 29804  0118B4  006F FF8F FFE6     	movff	plusw1,postinc1
 29805                           
 29806                           ;stkvar	_g @ sp[(-60)+16]
 29807  0118BA  0ED4               	movlw	-44
 29808  0118BC  006F FF8F FFE6     	movff	plusw1,postinc1
 29809  0118C2  006F FF8F FFE6     	movff	plusw1,postinc1
 29810  0118C8  006F FF8F FFE6     	movff	plusw1,postinc1
 29811  0118CE  006F FF8F FFE6     	movff	plusw1,postinc1
 29812  0118D4  EC2B  F0EF         	call	___flge	;wreg free
 29813  0118D8  A001               	btfss	btemp& (0+255),0,c
 29814  0118DA  D7B1               	goto	l15483
 29815  0118DC                     u14590:
 29816                           
 29817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 29818                           ;stkvar	_c @ sp[(-56)+-7]
 29819  0118DC  0EC1               	movlw	-63
 29820  0118DE  50E3               	movf	plusw1,w,c
 29821  0118E0  6EE6               	movwf	postinc1,c
 29822  0118E2  0E00               	movlw	0
 29823  0118E4  6EE6               	movwf	postinc1,c
 29824  0118E6  ECA7  F003         	call	_tolower	;wreg free
 29825                           
 29826                           ;stkvar	_mode @ sp[(-56)+54]
 29827  0118EA  0EFE               	movlw	-2
 29828  0118EC  0060  F007  FFE3   	movff	btemp,plusw1
 29829                           
 29830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 29831                           ;stkvar	_mode @ sp[(-56)+54]
 29832                           ;stkvar	_nmode @ sp[(-56)+55]
 29833  0118F2  0EFE               	movlw	-2
 29834  0118F4  006F FF8C  F001    	movff	plusw1,btemp
 29835  0118FA  0EFF               	movlw	-1
 29836  0118FC  0060  F007  FFE3   	movff	btemp,plusw1
 29837                           
 29838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 29839                           ;stkvar	_mode @ sp[(-56)+54]
 29840  011902  0EFE               	movlw	-2
 29841  011904  006F FF8C  F001    	movff	plusw1,btemp
 29842  01190A  0E67               	movlw	103
 29843  01190C  1801               	xorwf	btemp^0,w,c
 29844  01190E  A4D8               	btfss	status,2,c
 29845  011910  D025               	goto	l15505
 29846                           
 29847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 29848  011912  503C               	movf	_prec^0,w,c
 29849  011914  103D               	iorwf	(_prec+1)^0,w,c
 29850  011916  A4D8               	btfss	status,2,c
 29851  011918  D004               	goto	l15499
 29852                           
 29853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 29854  01191A  0E00               	movlw	0
 29855  01191C  6E3D               	movwf	(_prec+1)^0,c
 29856  01191E  0E01               	movlw	1
 29857  011920  6E3C               	movwf	_prec^0,c
 29858  011922                     l15499:
 29859                           
 29860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 29861  011922  BE3D               	btfsc	(_prec+1)^0,7,c
 29862  011924  D005               	goto	u14620
 29863  011926  503D               	movf	(_prec+1)^0,w,c
 29864  011928  E110               	bnz	l15503
 29865  01192A  043C               	decf	_prec^0,w,c
 29866  01192C  B0D8               	btfsc	status,0,c
 29867  01192E  D00D               	goto	l15503
 29868  011930                     u14620:
 29869  011930  0E06               	movlw	6
 29870  011932  6E0B               	movwf	(btemp+10)^0,c
 29871  011934  0E00               	movlw	0
 29872  011936  6E0C               	movwf	(btemp+11)^0,c
 29873                           
 29874                           ;stkvar	_p @ sp[(-56)+40]
 29875  011938  0EF0               	movlw	-16
 29876  01193A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29877  011940  0EF1               	movlw	-15
 29878  011942  0060  F033  FFE3   	movff	btemp+11,plusw1
 29879  011948  D00C               	goto	l15511
 29880  01194A                     l15503:
 29881                           
 29882                           ;stkvar	_p @ sp[(-56)+40]
 29883  01194A  0EF0               	movlw	-16
 29884  01194C  0060  F0F3  FFE3   	movff	_prec,plusw1
 29885  011952  0EF1               	movlw	-15
 29886  011954  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 29887  01195A  D003               	goto	l15511
 29888  01195C                     l15505:
 29889                           
 29890                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 29891  01195C  AE3D               	btfss	(_prec+1)^0,7,c
 29892  01195E  D7F5               	goto	l15503
 29893  011960  D7E7               	goto	u14620
 29894  011962                     l15511:
 29895                           
 29896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 29897                           ;stkvar	_mode @ sp[(-56)+54]
 29898  011962  0EFE               	movlw	-2
 29899  011964  006F FF8C  F001    	movff	plusw1,btemp
 29900  01196A  0E67               	movlw	103
 29901  01196C  1801               	xorwf	btemp^0,w,c
 29902  01196E  A4D8               	btfss	status,2,c
 29903  011970  D02F               	goto	l15521
 29904                           
 29905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 29906                           ;stkvar	_e @ sp[(-56)+34]
 29907  011972  0EEB               	movlw	-21
 29908  011974  AEE3               	btfss	plusw1,7,c
 29909  011976  D00E               	goto	u14650
 29910  011978  0EEA               	movlw	-22
 29911  01197A  006F FF8C  F001    	movff	plusw1,btemp
 29912  011980  0EFC               	movlw	252
 29913  011982  5E01               	subwf	btemp^0,f,c
 29914  011984  0EEB               	movlw	-21
 29915  011986  006F FF8C  F001    	movff	plusw1,btemp
 29916  01198C  0EFF               	movlw	255
 29917  01198E  5A01               	subwfb	btemp^0,f,c
 29918  011990  A0D8               	btfss	status,0,c
 29919  011992  D018               	goto	l15519
 29920  011994                     u14650:
 29921                           
 29922                           ;stkvar	_e @ sp[(-56)+34]
 29923                           ;stkvar	_p @ sp[(-56)+40]
 29924  011994  0EF0               	movlw	-16
 29925  011996  50E3               	movf	plusw1,w,c
 29926  011998  0FFF               	addlw	255
 29927  01199A  6E0B               	movwf	(btemp+10)^0,c
 29928  01199C  0EF1               	movlw	-15
 29929  01199E  006F FF8C  F00C    	movff	plusw1,btemp+11
 29930  0119A4  0EFF               	movlw	255
 29931  0119A6  220C               	addwfc	(btemp+11)^0,f,c
 29932  0119A8  0EEA               	movlw	-22
 29933  0119AA  50E3               	movf	plusw1,w,c
 29934  0119AC  5C0B               	subwf	(btemp+10)^0,w,c
 29935  0119AE  500C               	movf	(btemp+11)^0,w,c
 29936  0119B0  0A80               	xorlw	128
 29937  0119B2  6E01               	movwf	btemp^0,c
 29938  0119B4  0EEB               	movlw	-21
 29939  0119B6  50E3               	movf	plusw1,w,c
 29940  0119B8  0A80               	xorlw	128
 29941  0119BA  5801               	subwfb	btemp^0,w,c
 29942  0119BC  A0D8               	btfss	status,0,c
 29943  0119BE  D002               	goto	l15519
 29944                           
 29945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 29946  0119C0  0E66               	movlw	102
 29947  0119C2  D001               	goto	L31
 29948  0119C4                     l15519:
 29949                           
 29950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 29951  0119C4  0E65               	movlw	101
 29952  0119C6                     L31:
 29953  0119C6  6E0C               	movwf	(btemp+11)^0,c
 29954                           
 29955                           ;stkvar	_nmode @ sp[(-56)+55]
 29956  0119C8  0EFF               	movlw	-1
 29957  0119CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 29958  0119D0                     l15521:
 29959                           
 29960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 29961                           ;stkvar	_p @ sp[(-56)+40]
 29962                           ;stkvar	_m @ sp[(-56)+48]
 29963  0119D0  0EF0               	movlw	-16
 29964  0119D2  006F FF8C  F001    	movff	plusw1,btemp
 29965  0119D8  0EF8               	movlw	-8
 29966  0119DA  0060  F007  FFE3   	movff	btemp,plusw1
 29967  0119E0  0EF1               	movlw	-15
 29968  0119E2  006F FF8C  F001    	movff	plusw1,btemp
 29969  0119E8  0EF9               	movlw	-7
 29970  0119EA  0060  F007  FFE3   	movff	btemp,plusw1
 29971                           
 29972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 29973                           ;stkvar	_mode @ sp[(-56)+54]
 29974  0119F0  0EFE               	movlw	-2
 29975  0119F2  006F FF8C  F001    	movff	plusw1,btemp
 29976  0119F8  0E67               	movlw	103
 29977  0119FA  1801               	xorwf	btemp^0,w,c
 29978  0119FC  A4D8               	btfss	status,2,c
 29979  0119FE  D00B               	goto	u14690
 29980                           
 29981                           ;stkvar	_nmode @ sp[(-56)+55]
 29982  011A00  0EFF               	movlw	-1
 29983  011A02  006F FF8C  F001    	movff	plusw1,btemp
 29984  011A08  0E66               	movlw	102
 29985  011A0A  1801               	xorwf	btemp^0,w,c
 29986  011A0C  A4D8               	btfss	status,2,c
 29987  011A0E  D014               	goto	l2535
 29988                           
 29989                           ;stkvar	_e @ sp[(-56)+34]
 29990  011A10  0EEB               	movlw	-21
 29991  011A12  AEE3               	btfss	plusw1,7,c
 29992  011A14  D011               	goto	l2535
 29993  011A16                     u14690:
 29994                           
 29995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 29996                           ;stkvar	_m @ sp[(-56)+48]
 29997  011A16  0EF8               	movlw	-8
 29998  011A18  50E3               	movf	plusw1,w,c
 29999  011A1A  0F01               	addlw	1
 30000  011A1C  6E01               	movwf	btemp^0,c
 30001  011A1E  0EF8               	movlw	-8
 30002  011A20  0060  F007  FFE3   	movff	btemp,plusw1
 30003  011A26  6A01               	clrf	btemp^0,c
 30004  011A28  0EF9               	movlw	-7
 30005  011A2A  50E3               	movf	plusw1,w,c
 30006  011A2C  2001               	addwfc	btemp^0,w,c
 30007  011A2E  6E01               	movwf	btemp^0,c
 30008  011A30  0EF9               	movlw	-7
 30009  011A32  0060  F007  FFE3   	movff	btemp,plusw1
 30010  011A38                     l2535:
 30011                           
 30012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 30013                           ;stkvar	_nmode @ sp[(-56)+55]
 30014  011A38  0EFF               	movlw	-1
 30015  011A3A  006F FF8C  F001    	movff	plusw1,btemp
 30016  011A40  0E66               	movlw	102
 30017  011A42  1801               	xorwf	btemp^0,w,c
 30018  011A44  A4D8               	btfss	status,2,c
 30019  011A46  D03B               	goto	l15541
 30020                           
 30021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 30022                           ;stkvar	_e @ sp[(-56)+34]
 30023  011A48  0EEB               	movlw	-21
 30024  011A4A  AEE3               	btfss	plusw1,7,c
 30025  011A4C  D01C               	goto	l15537
 30026                           
 30027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 30028  011A4E  0E00               	movlw	0
 30029  011A50  6E09               	movwf	(btemp+8)^0,c
 30030  011A52  0E00               	movlw	0
 30031  011A54  6E0A               	movwf	(btemp+9)^0,c
 30032  011A56  0E80               	movlw	128
 30033  011A58  6E0B               	movwf	(btemp+10)^0,c
 30034  011A5A  0E3F               	movlw	63
 30035  011A5C  6E0C               	movwf	(btemp+11)^0,c
 30036                           
 30037                           ;stkvar	_u @ sp[(-56)+12]
 30038  011A5E  0ED4               	movlw	-44
 30039  011A60  0060  F027  FFE3   	movff	btemp+8,plusw1
 30040  011A66  0ED5               	movlw	-43
 30041  011A68  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30042  011A6E  0ED6               	movlw	-42
 30043  011A70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30044  011A76  0ED7               	movlw	-41
 30045  011A78  0060  F033  FFE3   	movff	btemp+11,plusw1
 30046                           
 30047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 30048                           ;stkvar	_e @ sp[(-56)+34]
 30049  011A7E  0EEA               	movlw	-22
 30050  011A80  6AE3               	clrf	plusw1,c
 30051  011A82  0EEB               	movlw	-21
 30052  011A84  6AE3               	clrf	plusw1,c
 30053  011A86                     l15537:
 30054                           
 30055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 30056                           ;stkvar	_mode @ sp[(-56)+54]
 30057  011A86  0EFE               	movlw	-2
 30058  011A88  006F FF8C  F001    	movff	plusw1,btemp
 30059  011A8E  0E67               	movlw	103
 30060  011A90  1801               	xorwf	btemp^0,w,c
 30061  011A92  B4D8               	btfsc	status,2,c
 30062  011A94  D014               	goto	l15541
 30063                           
 30064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 30065                           ;stkvar	_e @ sp[(-56)+34]
 30066                           ;stkvar	_m @ sp[(-56)+48]
 30067  011A96  0EF8               	movlw	-8
 30068  011A98  50E3               	movf	plusw1,w,c
 30069  011A9A  6E01               	movwf	btemp^0,c
 30070  011A9C  0EEA               	movlw	-22
 30071  011A9E  50E3               	movf	plusw1,w,c
 30072  011AA0  2601               	addwf	btemp^0,f,c
 30073  011AA2  0EF8               	movlw	-8
 30074  011AA4  0060  F007  FFE3   	movff	btemp,plusw1
 30075  011AAA  0EF9               	movlw	-7
 30076  011AAC  50E3               	movf	plusw1,w,c
 30077  011AAE  6E01               	movwf	btemp^0,c
 30078  011AB0  0EEB               	movlw	-21
 30079  011AB2  50E3               	movf	plusw1,w,c
 30080  011AB4  2201               	addwfc	btemp^0,f,c
 30081  011AB6  0EF9               	movlw	-7
 30082  011AB8  0060  F007  FFE3   	movff	btemp,plusw1
 30083  011ABE                     l15541:
 30084                           
 30085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 30086                           ;stkvar	_i @ sp[(-56)+36]
 30087  011ABE  0EEC               	movlw	-20
 30088  011AC0  6AE3               	clrf	plusw1,c
 30089  011AC2  0EED               	movlw	-19
 30090  011AC4  6AE3               	clrf	plusw1,c
 30091                           
 30092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 30093                           ;stkvar	_g @ sp[(-56)+16]
 30094  011AC6  0ED8               	movlw	-40
 30095  011AC8  006F FF8C  F009    	movff	plusw1,btemp+8
 30096  011ACE  0ED9               	movlw	-39
 30097  011AD0  006F FF8C  F00A    	movff	plusw1,btemp+9
 30098  011AD6  0EDA               	movlw	-38
 30099  011AD8  006F FF8C  F00B    	movff	plusw1,btemp+10
 30100  011ADE  0EDB               	movlw	-37
 30101  011AE0  006F FF8C  F00C    	movff	plusw1,btemp+11
 30102                           
 30103                           ;stkvar	_h @ sp[(-56)+24]
 30104  011AE6  0EE0               	movlw	-32
 30105  011AE8  0060  F027  FFE3   	movff	btemp+8,plusw1
 30106  011AEE  0EE1               	movlw	-31
 30107  011AF0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30108  011AF6  0EE2               	movlw	-30
 30109  011AF8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30110  011AFE  0EE3               	movlw	-29
 30111  011B00  0060  F033  FFE3   	movff	btemp+11,plusw1
 30112                           
 30113                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 30114                           ;stkvar	_u @ sp[(-56)+12]
 30115  011B06  0ED4               	movlw	-44
 30116  011B08  006F FF8C  F009    	movff	plusw1,btemp+8
 30117  011B0E  0ED5               	movlw	-43
 30118  011B10  006F FF8C  F00A    	movff	plusw1,btemp+9
 30119  011B16  0ED6               	movlw	-42
 30120  011B18  006F FF8C  F00B    	movff	plusw1,btemp+10
 30121  011B1E  0ED7               	movlw	-41
 30122  011B20  006F FF8C  F00C    	movff	plusw1,btemp+11
 30123                           
 30124                           ;stkvar	_ou @ sp[(-56)+28]
 30125  011B26  0EE4               	movlw	-28
 30126  011B28  0060  F027  FFE3   	movff	btemp+8,plusw1
 30127  011B2E  0EE5               	movlw	-27
 30128  011B30  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30129  011B36  0EE6               	movlw	-26
 30130  011B38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30131  011B3E  0EE7               	movlw	-25
 30132  011B40  0060  F033  FFE3   	movff	btemp+11,plusw1
 30133                           
 30134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 30135  011B46  D0D6               	goto	l15557
 30136  011B48                     l15547:
 30137                           
 30138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 30139                           ;stkvar	_u @ sp[(-56)+12]
 30140  011B48  0ED4               	movlw	-44
 30141  011B4A  006F FF8F FFE6     	movff	plusw1,postinc1
 30142  011B50  006F FF8F FFE6     	movff	plusw1,postinc1
 30143  011B56  006F FF8F FFE6     	movff	plusw1,postinc1
 30144  011B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 30145                           
 30146                           ;stkvar	_h @ sp[(-60)+24]
 30147  011B62  0EDC               	movlw	-36
 30148  011B64  006F FF8F FFE6     	movff	plusw1,postinc1
 30149  011B6A  006F FF8F FFE6     	movff	plusw1,postinc1
 30150  011B70  006F FF8F FFE6     	movff	plusw1,postinc1
 30151  011B76  006F FF8F FFE6     	movff	plusw1,postinc1
 30152  011B7C  ECDA  F0BC         	call	___fldiv	;wreg free
 30153  011B80  0060  F007  FFE6   	movff	btemp,postinc1
 30154  011B86  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30155  011B8C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30156  011B92  0060  F013  FFE6   	movff	btemp+3,postinc1
 30157  011B98  EC04  F0CD         	call	_floorf	;wreg free
 30158                           
 30159                           ;stkvar	_l @ sp[(-56)+20]
 30160  011B9C  0EDC               	movlw	-36
 30161  011B9E  0060  F007  FFE3   	movff	btemp,plusw1
 30162  011BA4  0EDD               	movlw	-35
 30163  011BA6  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30164  011BAC  0EDE               	movlw	-34
 30165  011BAE  0060  F00F  FFE3   	movff	btemp+2,plusw1
 30166  011BB4  0EDF               	movlw	-33
 30167  011BB6  0060  F013  FFE3   	movff	btemp+3,plusw1
 30168                           
 30169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 30170                           ;stkvar	_l @ sp[(-56)+20]
 30171  011BBC  0EDC               	movlw	-36
 30172  011BBE  006F FF8F FFE6     	movff	plusw1,postinc1
 30173  011BC4  006F FF8F FFE6     	movff	plusw1,postinc1
 30174  011BCA  006F FF8F FFE6     	movff	plusw1,postinc1
 30175  011BD0  006F FF8F FFE6     	movff	plusw1,postinc1
 30176  011BD6  ECBF  F0ED         	call	___fltol	;wreg free
 30177  011BDA  0060  F004  F00B   	movff	btemp,btemp+10
 30178  011BE0  0060  F008  F00C   	movff	btemp+1,btemp+11
 30179                           
 30180                           ;stkvar	_d @ sp[(-56)+44]
 30181  011BE6  0EF4               	movlw	-12
 30182  011BE8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30183  011BEE  0EF5               	movlw	-11
 30184  011BF0  0060  F033  FFE3   	movff	btemp+11,plusw1
 30185                           
 30186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 30187                           ;stkvar	_u @ sp[(-56)+12]
 30188  011BF6  0ED4               	movlw	-44
 30189  011BF8  006F FF8F FFE6     	movff	plusw1,postinc1
 30190  011BFE  006F FF8F FFE6     	movff	plusw1,postinc1
 30191  011C04  006F FF8F FFE6     	movff	plusw1,postinc1
 30192  011C0A  006F FF8F FFE6     	movff	plusw1,postinc1
 30193                           
 30194                           ;stkvar	_l @ sp[(-60)+20]
 30195  011C10  0ED8               	movlw	-40
 30196  011C12  006F FF8F FFE6     	movff	plusw1,postinc1
 30197  011C18  006F FF8F FFE6     	movff	plusw1,postinc1
 30198  011C1E  006F FF8F FFE6     	movff	plusw1,postinc1
 30199  011C24  006F FF8F FFE6     	movff	plusw1,postinc1
 30200  011C2A  EC89  F0B1         	call	___flmul	;wreg free
 30201  011C2E  0060  F007  FFE6   	movff	btemp,postinc1
 30202  011C34  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30203  011C3A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30204  011C40  0060  F013  FFE6   	movff	btemp+3,postinc1
 30205                           
 30206                           ;stkvar	_h @ sp[(-60)+24]
 30207  011C46  0EDC               	movlw	-36
 30208  011C48  006F FF8F FFE6     	movff	plusw1,postinc1
 30209  011C4E  006F FF8F FFE6     	movff	plusw1,postinc1
 30210  011C54  006F FF8F FFE6     	movff	plusw1,postinc1
 30211  011C5A  006F FF8F FFE6     	movff	plusw1,postinc1
 30212  011C60  ECDC  F009         	call	___flsub	;wreg free
 30213                           
 30214                           ;stkvar	_h @ sp[(-56)+24]
 30215  011C64  0EE0               	movlw	-32
 30216  011C66  0060  F007  FFE3   	movff	btemp,plusw1
 30217  011C6C  0EE1               	movlw	-31
 30218  011C6E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30219  011C74  0EE2               	movlw	-30
 30220  011C76  0060  F00F  FFE3   	movff	btemp+2,plusw1
 30221  011C7C  0EE3               	movlw	-29
 30222  011C7E  0060  F013  FFE3   	movff	btemp+3,plusw1
 30223                           
 30224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 30225  011C84  0E00               	movlw	0
 30226  011C86  6EE6               	movwf	postinc1,c
 30227  011C88  0E00               	movlw	0
 30228  011C8A  6EE6               	movwf	postinc1,c
 30229  011C8C  0E20               	movlw	32
 30230  011C8E  6EE6               	movwf	postinc1,c
 30231  011C90  0E41               	movlw	65
 30232  011C92  6EE6               	movwf	postinc1,c
 30233                           
 30234                           ;stkvar	_u @ sp[(-60)+12]
 30235  011C94  0ED0               	movlw	-48
 30236  011C96  006F FF8F FFE6     	movff	plusw1,postinc1
 30237  011C9C  006F FF8F FFE6     	movff	plusw1,postinc1
 30238  011CA2  006F FF8F FFE6     	movff	plusw1,postinc1
 30239  011CA8  006F FF8F FFE6     	movff	plusw1,postinc1
 30240  011CAE  ECDA  F0BC         	call	___fldiv	;wreg free
 30241                           
 30242                           ;stkvar	_u @ sp[(-56)+12]
 30243  011CB2  0ED4               	movlw	-44
 30244  011CB4  0060  F007  FFE3   	movff	btemp,plusw1
 30245  011CBA  0ED5               	movlw	-43
 30246  011CBC  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30247  011CC2  0ED6               	movlw	-42
 30248  011CC4  0060  F00F  FFE3   	movff	btemp+2,plusw1
 30249  011CCA  0ED7               	movlw	-41
 30250  011CCC  0060  F013  FFE3   	movff	btemp+3,plusw1
 30251                           
 30252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 30253                           ;stkvar	_i @ sp[(-56)+36]
 30254  011CD2  0EEC               	movlw	-20
 30255  011CD4  50E3               	movf	plusw1,w,c
 30256  011CD6  0F01               	addlw	1
 30257  011CD8  6E01               	movwf	btemp^0,c
 30258  011CDA  0EEC               	movlw	-20
 30259  011CDC  0060  F007  FFE3   	movff	btemp,plusw1
 30260  011CE2  6A01               	clrf	btemp^0,c
 30261  011CE4  0EED               	movlw	-19
 30262  011CE6  50E3               	movf	plusw1,w,c
 30263  011CE8  2001               	addwfc	btemp^0,w,c
 30264  011CEA  6E01               	movwf	btemp^0,c
 30265  011CEC  0EED               	movlw	-19
 30266  011CEE  0060  F007  FFE3   	movff	btemp,plusw1
 30267  011CF4                     l15557:
 30268                           
 30269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 30270                           ;stkvar	_m @ sp[(-56)+48]
 30271                           ;stkvar	_i @ sp[(-56)+36]
 30272  011CF4  50E1               	movf	fsr1l,w,c
 30273  011CF6  0FEC               	addlw	-20
 30274  011CF8  6ED9               	movwf	fsr2l,c
 30275  011CFA  50E2               	movf	fsr1h,w,c
 30276  011CFC  6EDA               	movwf	fsr2h,c
 30277  011CFE  0EFF               	movlw	255
 30278  011D00  22DA               	addwfc	fsr2h,f,c
 30279  011D02  0EF8               	movlw	-8
 30280  011D04  50E3               	movf	plusw1,w,c
 30281  011D06  5CDE               	subwf	postinc2,w,c
 30282  011D08  50DE               	movf	postinc2,w,c
 30283  011D0A  0A80               	xorlw	128
 30284  011D0C  6E01               	movwf	btemp^0,c
 30285  011D0E  0EF9               	movlw	-7
 30286  011D10  50E3               	movf	plusw1,w,c
 30287  011D12  0A80               	xorlw	128
 30288  011D14  5801               	subwfb	btemp^0,w,c
 30289  011D16  A0D8               	btfss	status,0,c
 30290  011D18  D717               	goto	l15547
 30291                           
 30292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 30293  011D1A  0E00               	movlw	0
 30294  011D1C  6EE6               	movwf	postinc1,c
 30295  011D1E  0E00               	movlw	0
 30296  011D20  6EE6               	movwf	postinc1,c
 30297  011D22  0EA0               	movlw	160
 30298  011D24  6EE6               	movwf	postinc1,c
 30299  011D26  0E40               	movlw	64
 30300  011D28  6EE6               	movwf	postinc1,c
 30301                           
 30302                           ;stkvar	_u @ sp[(-60)+12]
 30303  011D2A  0ED0               	movlw	-48
 30304  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
 30305  011D32  006F FF8F FFE6     	movff	plusw1,postinc1
 30306  011D38  006F FF8F FFE6     	movff	plusw1,postinc1
 30307  011D3E  006F FF8F FFE6     	movff	plusw1,postinc1
 30308  011D44  EC89  F0B1         	call	___flmul	;wreg free
 30309                           
 30310                           ;stkvar	_l @ sp[(-56)+20]
 30311  011D48  0EDC               	movlw	-36
 30312  011D4A  0060  F007  FFE3   	movff	btemp,plusw1
 30313  011D50  0EDD               	movlw	-35
 30314  011D52  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30315  011D58  0EDE               	movlw	-34
 30316  011D5A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 30317  011D60  0EDF               	movlw	-33
 30318  011D62  0060  F013  FFE3   	movff	btemp+3,plusw1
 30319                           
 30320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 30321                           ;stkvar	_l @ sp[(-56)+20]
 30322  011D68  0EDC               	movlw	-36
 30323  011D6A  006F FF8F FFE6     	movff	plusw1,postinc1
 30324  011D70  006F FF8F FFE6     	movff	plusw1,postinc1
 30325  011D76  006F FF8F FFE6     	movff	plusw1,postinc1
 30326  011D7C  006F FF8F FFE6     	movff	plusw1,postinc1
 30327                           
 30328                           ;stkvar	_h @ sp[(-60)+24]
 30329  011D82  0EDC               	movlw	-36
 30330  011D84  006F FF8F FFE6     	movff	plusw1,postinc1
 30331  011D8A  006F FF8F FFE6     	movff	plusw1,postinc1
 30332  011D90  006F FF8F FFE6     	movff	plusw1,postinc1
 30333  011D96  006F FF8F FFE6     	movff	plusw1,postinc1
 30334  011D9C  EC2B  F0EF         	call	___flge	;wreg free
 30335  011DA0  A001               	btfss	btemp& (0+255),0,c
 30336  011DA2  D021               	goto	u14760
 30337                           
 30338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 30339                           ;stkvar	_l @ sp[(-56)+20]
 30340                           
 30341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 30342                           
 30343                           ;stkvar	_l @ sp[(-56)+20]
 30344                           
 30345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 30346  011DA4  0EDC               	movlw	-36
 30347  011DA6  006F FF8F FFE6     	movff	plusw1,postinc1
 30348  011DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 30349  011DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 30350  011DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 30351                           
 30352                           ;stkvar	_h @ sp[(-60)+24]
 30353  011DBE  0EDC               	movlw	-36
 30354  011DC0  006F FF8F FFE6     	movff	plusw1,postinc1
 30355  011DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 30356  011DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 30357  011DD2  006F FF8F FFE6     	movff	plusw1,postinc1
 30358  011DD8  EC43  F0FD         	call	___fleq	;wreg free
 30359  011DDC  A001               	btfss	btemp& (0+255),0,c
 30360  011DDE  D01B               	goto	l15571
 30361                           
 30362                           ;stkvar	_d @ sp[(-56)+44]
 30363  011DE0  0EF4               	movlw	-12
 30364  011DE2  B0E3               	btfsc	plusw1,0,c
 30365  011DE4  D018               	goto	l15571
 30366  011DE6                     u14760:
 30367                           
 30368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 30369  011DE6  0E00               	movlw	0
 30370  011DE8  6E09               	movwf	(btemp+8)^0,c
 30371  011DEA  0E00               	movlw	0
 30372  011DEC  6E0A               	movwf	(btemp+9)^0,c
 30373  011DEE  0E00               	movlw	0
 30374  011DF0  6E0B               	movwf	(btemp+10)^0,c
 30375  011DF2  0E00               	movlw	0
 30376  011DF4  6E0C               	movwf	(btemp+11)^0,c
 30377                           
 30378                           ;stkvar	_l @ sp[(-56)+20]
 30379  011DF6  0EDC               	movlw	-36
 30380  011DF8  0060  F027  FFE3   	movff	btemp+8,plusw1
 30381  011DFE  0EDD               	movlw	-35
 30382  011E00  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30383  011E06  0EDE               	movlw	-34
 30384  011E08  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30385  011E0E  0EDF               	movlw	-33
 30386  011E10  0060  F033  FFE3   	movff	btemp+11,plusw1
 30387  011E16                     l15571:
 30388                           
 30389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 30390                           ;stkvar	_l @ sp[(-56)+20]
 30391  011E16  0EDC               	movlw	-36
 30392  011E18  006F FF8F FFE6     	movff	plusw1,postinc1
 30393  011E1E  006F FF8F FFE6     	movff	plusw1,postinc1
 30394  011E24  006F FF8F FFE6     	movff	plusw1,postinc1
 30395  011E2A  006F FF8F FFE6     	movff	plusw1,postinc1
 30396                           
 30397                           ;stkvar	_g @ sp[(-60)+16]
 30398  011E30  0ED4               	movlw	-44
 30399  011E32  006F FF8F FFE6     	movff	plusw1,postinc1
 30400  011E38  006F FF8F FFE6     	movff	plusw1,postinc1
 30401  011E3E  006F FF8F FFE6     	movff	plusw1,postinc1
 30402  011E44  006F FF8F FFE6     	movff	plusw1,postinc1
 30403  011E4A  EC9E  F0B5         	call	___fladd	;wreg free
 30404                           
 30405                           ;stkvar	_h @ sp[(-56)+24]
 30406  011E4E  0EE0               	movlw	-32
 30407  011E50  0060  F007  FFE3   	movff	btemp,plusw1
 30408  011E56  0EE1               	movlw	-31
 30409  011E58  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30410  011E5E  0EE2               	movlw	-30
 30411  011E60  0060  F00F  FFE3   	movff	btemp+2,plusw1
 30412  011E66  0EE3               	movlw	-29
 30413  011E68  0060  F013  FFE3   	movff	btemp+3,plusw1
 30414                           
 30415                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 30416                           ;stkvar	_ou @ sp[(-56)+28]
 30417  011E6E  0EE4               	movlw	-28
 30418  011E70  006F FF8C  F009    	movff	plusw1,btemp+8
 30419  011E76  0EE5               	movlw	-27
 30420  011E78  006F FF8C  F00A    	movff	plusw1,btemp+9
 30421  011E7E  0EE6               	movlw	-26
 30422  011E80  006F FF8C  F00B    	movff	plusw1,btemp+10
 30423  011E86  0EE7               	movlw	-25
 30424  011E88  006F FF8C  F00C    	movff	plusw1,btemp+11
 30425                           
 30426                           ;stkvar	_u @ sp[(-56)+12]
 30427  011E8E  0ED4               	movlw	-44
 30428  011E90  0060  F027  FFE3   	movff	btemp+8,plusw1
 30429  011E96  0ED5               	movlw	-43
 30430  011E98  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30431  011E9E  0ED6               	movlw	-42
 30432  011EA0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30433  011EA6  0ED7               	movlw	-41
 30434  011EA8  0060  F033  FFE3   	movff	btemp+11,plusw1
 30435                           
 30436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 30437                           ;stkvar	_nmode @ sp[(-56)+55]
 30438  011EAE  0EFF               	movlw	-1
 30439  011EB0  006F FF8C  F001    	movff	plusw1,btemp
 30440  011EB6  0E65               	movlw	101
 30441  011EB8  1801               	xorwf	btemp^0,w,c
 30442  011EBA  B4D8               	btfsc	status,2,c
 30443  011EBC  D011               	goto	l15579
 30444                           
 30445                           ;stkvar	_e @ sp[(-56)+34]
 30446                           ;stkvar	_ne @ sp[(-56)+46]
 30447  011EBE  0EEA               	movlw	-22
 30448  011EC0  006F FF8C  F001    	movff	plusw1,btemp
 30449  011EC6  0EF6               	movlw	-10
 30450  011EC8  0060  F007  FFE3   	movff	btemp,plusw1
 30451  011ECE  0EEB               	movlw	-21
 30452  011ED0  006F FF8C  F001    	movff	plusw1,btemp
 30453  011ED6  0EF7               	movlw	-9
 30454  011ED8  0060  F007  FFE3   	movff	btemp,plusw1
 30455  011EDE  D004               	goto	l2550
 30456  011EE0                     l15579:
 30457                           
 30458                           ;stkvar	_ne @ sp[(-56)+46]
 30459  011EE0  0EF6               	movlw	-10
 30460  011EE2  6AE3               	clrf	plusw1,c
 30461  011EE4  0EF7               	movlw	-9
 30462  011EE6  6AE3               	clrf	plusw1,c
 30463  011EE8                     l2550:
 30464                           
 30465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 30466                           ;stkvar	_pp @ sp[(-56)+50]
 30467  011EE8  0EFA               	movlw	-6
 30468  011EEA  6AE3               	clrf	plusw1,c
 30469  011EEC  0EFB               	movlw	-5
 30470  011EEE  6AE3               	clrf	plusw1,c
 30471                           
 30472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 30473                           ;stkvar	_t @ sp[(-56)+52]
 30474  011EF0  0EFC               	movlw	-4
 30475  011EF2  6AE3               	clrf	plusw1,c
 30476  011EF4  0EFD               	movlw	-3
 30477  011EF6  6AE3               	clrf	plusw1,c
 30478                           
 30479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 30480                           ;stkvar	_i @ sp[(-56)+36]
 30481  011EF8  0EEC               	movlw	-20
 30482  011EFA  6AE3               	clrf	plusw1,c
 30483  011EFC  0EED               	movlw	-19
 30484  011EFE  6AE3               	clrf	plusw1,c
 30485                           
 30486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 30487  011F00  D1B7               	goto	l15631
 30488  011F02                     l15581:
 30489                           
 30490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 30491                           ;stkvar	_u @ sp[(-56)+12]
 30492  011F02  0ED4               	movlw	-44
 30493  011F04  006F FF8F FFE6     	movff	plusw1,postinc1
 30494  011F0A  006F FF8F FFE6     	movff	plusw1,postinc1
 30495  011F10  006F FF8F FFE6     	movff	plusw1,postinc1
 30496  011F16  006F FF8F FFE6     	movff	plusw1,postinc1
 30497                           
 30498                           ;stkvar	_h @ sp[(-60)+24]
 30499  011F1C  0EDC               	movlw	-36
 30500  011F1E  006F FF8F FFE6     	movff	plusw1,postinc1
 30501  011F24  006F FF8F FFE6     	movff	plusw1,postinc1
 30502  011F2A  006F FF8F FFE6     	movff	plusw1,postinc1
 30503  011F30  006F FF8F FFE6     	movff	plusw1,postinc1
 30504  011F36  ECDA  F0BC         	call	___fldiv	;wreg free
 30505  011F3A  0060  F007  FFE6   	movff	btemp,postinc1
 30506  011F40  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30507  011F46  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30508  011F4C  0060  F013  FFE6   	movff	btemp+3,postinc1
 30509  011F52  EC04  F0CD         	call	_floorf	;wreg free
 30510                           
 30511                           ;stkvar	_l @ sp[(-56)+20]
 30512  011F56  0EDC               	movlw	-36
 30513  011F58  0060  F007  FFE3   	movff	btemp,plusw1
 30514  011F5E  0EDD               	movlw	-35
 30515  011F60  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30516  011F66  0EDE               	movlw	-34
 30517  011F68  0060  F00F  FFE3   	movff	btemp+2,plusw1
 30518  011F6E  0EDF               	movlw	-33
 30519  011F70  0060  F013  FFE3   	movff	btemp+3,plusw1
 30520                           
 30521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 30522                           ;stkvar	_l @ sp[(-56)+20]
 30523  011F76  0EDC               	movlw	-36
 30524  011F78  006F FF8F FFE6     	movff	plusw1,postinc1
 30525  011F7E  006F FF8F FFE6     	movff	plusw1,postinc1
 30526  011F84  006F FF8F FFE6     	movff	plusw1,postinc1
 30527  011F8A  006F FF8F FFE6     	movff	plusw1,postinc1
 30528  011F90  ECBF  F0ED         	call	___fltol	;wreg free
 30529  011F94  0060  F004  F00B   	movff	btemp,btemp+10
 30530  011F9A  0060  F008  F00C   	movff	btemp+1,btemp+11
 30531                           
 30532                           ;stkvar	_d @ sp[(-56)+44]
 30533  011FA0  0EF4               	movlw	-12
 30534  011FA2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30535  011FA8  0EF5               	movlw	-11
 30536  011FAA  0060  F033  FFE3   	movff	btemp+11,plusw1
 30537                           
 30538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 30539  011FB0  B83E               	btfsc	_flags^0,4,c
 30540  011FB2  D026               	goto	l15595
 30541                           
 30542                           ;stkvar	_d @ sp[(-56)+44]
 30543  011FB4  0EF4               	movlw	-12
 30544  011FB6  006F FF8C  F001    	movff	plusw1,btemp
 30545  011FBC  0EF5               	movlw	-11
 30546  011FBE  50E3               	movf	plusw1,w,c
 30547  011FC0  1001               	iorwf	btemp^0,w,c
 30548  011FC2  A4D8               	btfss	status,2,c
 30549  011FC4  D01D               	goto	l15595
 30550                           
 30551                           ;stkvar	_mode @ sp[(-56)+54]
 30552  011FC6  0EFE               	movlw	-2
 30553  011FC8  006F FF8C  F001    	movff	plusw1,btemp
 30554  011FCE  0E67               	movlw	103
 30555  011FD0  1801               	xorwf	btemp^0,w,c
 30556  011FD2  A4D8               	btfss	status,2,c
 30557  011FD4  D015               	goto	l15595
 30558                           
 30559                           ;stkvar	_ne @ sp[(-56)+46]
 30560  011FD6  0EF7               	movlw	-9
 30561  011FD8  AEE3               	btfss	plusw1,7,c
 30562  011FDA  D012               	goto	l15595
 30563                           
 30564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 30565                           ;stkvar	_t @ sp[(-56)+52]
 30566  011FDC  0EFC               	movlw	-4
 30567  011FDE  50E3               	movf	plusw1,w,c
 30568  011FE0  0F01               	addlw	1
 30569  011FE2  6E01               	movwf	btemp^0,c
 30570  011FE4  0EFC               	movlw	-4
 30571  011FE6  0060  F007  FFE3   	movff	btemp,plusw1
 30572  011FEC  6A01               	clrf	btemp^0,c
 30573  011FEE  0EFD               	movlw	-3
 30574  011FF0  50E3               	movf	plusw1,w,c
 30575  011FF2  2001               	addwfc	btemp^0,w,c
 30576  011FF4  6E01               	movwf	btemp^0,c
 30577  011FF6  0EFD               	movlw	-3
 30578  011FF8  0060  F007  FFE3   	movff	btemp,plusw1
 30579                           
 30580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 30581  011FFE  D0AF               	goto	l15623
 30582  012000                     l15595:
 30583                           
 30584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 30585                           ;stkvar	_pp @ sp[(-56)+50]
 30586  012000  0EFA               	movlw	-6
 30587  012002  006F FF8C  F001    	movff	plusw1,btemp
 30588  012008  0EFB               	movlw	-5
 30589  01200A  50E3               	movf	plusw1,w,c
 30590  01200C  1001               	iorwf	btemp^0,w,c
 30591  01200E  A4D8               	btfss	status,2,c
 30592  012010  D070               	goto	l15615
 30593                           
 30594                           ;stkvar	_ne @ sp[(-56)+46]
 30595  012012  0EF7               	movlw	-9
 30596  012014  AEE3               	btfss	plusw1,7,c
 30597  012016  D06D               	goto	l15615
 30598                           
 30599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 30600                           ;stkvar	_n @ sp[(-56)+32]
 30601  012018  0EE8               	movlw	-24
 30602  01201A  006F FF8C  F00B    	movff	plusw1,btemp+10
 30603  012020  0EE9               	movlw	-23
 30604  012022  006F FF8C  F00C    	movff	plusw1,btemp+11
 30605  012028  0E54               	movlw	low _dbuf
 30606  01202A  240B               	addwf	(btemp+10)^0,w,c
 30607  01202C  6ED9               	movwf	fsr2l,c
 30608  01202E  0E03               	movlw	high _dbuf
 30609  012030  200C               	addwfc	(btemp+11)^0,w,c
 30610  012032  6EDA               	movwf	fsr2h,c
 30611  012034  0E2E               	movlw	46
 30612  012036  6EDF               	movwf	indf2,c
 30613                           
 30614                           ;stkvar	_n @ sp[(-56)+32]
 30615  012038  0EE8               	movlw	-24
 30616  01203A  50E3               	movf	plusw1,w,c
 30617  01203C  0F01               	addlw	1
 30618  01203E  6E01               	movwf	btemp^0,c
 30619  012040  0EE8               	movlw	-24
 30620  012042  0060  F007  FFE3   	movff	btemp,plusw1
 30621  012048  6A01               	clrf	btemp^0,c
 30622  01204A  0EE9               	movlw	-23
 30623  01204C  50E3               	movf	plusw1,w,c
 30624  01204E  2001               	addwfc	btemp^0,w,c
 30625  012050  6E01               	movwf	btemp^0,c
 30626  012052  0EE9               	movlw	-23
 30627  012054  0060  F007  FFE3   	movff	btemp,plusw1
 30628                           
 30629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 30630                           ;stkvar	_w @ sp[(-56)+38]
 30631  01205A  50E1               	movf	fsr1l,w,c
 30632  01205C  0FEE               	addlw	-18
 30633  01205E  6ED9               	movwf	fsr2l,c
 30634  012060  50E2               	movf	fsr1h,w,c
 30635  012062  6EDA               	movwf	fsr2h,c
 30636  012064  0EFF               	movlw	255
 30637  012066  22DA               	addwfc	fsr2h,f,c
 30638  012068  06DE               	decf	postinc2,f,c
 30639  01206A  0E00               	movlw	0
 30640  01206C  5ADD               	subwfb	postdec2,f,c
 30641                           
 30642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 30643  01206E  0E01               	movlw	1
 30644  012070  6E0B               	movwf	(btemp+10)^0,c
 30645  012072  0E00               	movlw	0
 30646  012074  6E0C               	movwf	(btemp+11)^0,c
 30647                           
 30648                           ;stkvar	_pp @ sp[(-56)+50]
 30649  012076  0EFA               	movlw	-6
 30650  012078  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30651  01207E  0EFB               	movlw	-5
 30652  012080  0060  F033  FFE3   	movff	btemp+11,plusw1
 30653  012086  D035               	goto	l15615
 30654  012088                     l15607:
 30655                           
 30656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 30657                           ;stkvar	_n @ sp[(-56)+32]
 30658  012088  0EE8               	movlw	-24
 30659  01208A  006F FF8C  F00B    	movff	plusw1,btemp+10
 30660  012090  0EE9               	movlw	-23
 30661  012092  006F FF8C  F00C    	movff	plusw1,btemp+11
 30662  012098  0E54               	movlw	low _dbuf
 30663  01209A  240B               	addwf	(btemp+10)^0,w,c
 30664  01209C  6ED9               	movwf	fsr2l,c
 30665  01209E  0E03               	movlw	high _dbuf
 30666  0120A0  200C               	addwfc	(btemp+11)^0,w,c
 30667  0120A2  6EDA               	movwf	fsr2h,c
 30668  0120A4  0E30               	movlw	48
 30669  0120A6  6EDF               	movwf	indf2,c
 30670                           
 30671                           ;stkvar	_n @ sp[(-56)+32]
 30672  0120A8  0EE8               	movlw	-24
 30673  0120AA  50E3               	movf	plusw1,w,c
 30674  0120AC  0F01               	addlw	1
 30675  0120AE  6E01               	movwf	btemp^0,c
 30676  0120B0  0EE8               	movlw	-24
 30677  0120B2  0060  F007  FFE3   	movff	btemp,plusw1
 30678  0120B8  6A01               	clrf	btemp^0,c
 30679  0120BA  0EE9               	movlw	-23
 30680  0120BC  50E3               	movf	plusw1,w,c
 30681  0120BE  2001               	addwfc	btemp^0,w,c
 30682  0120C0  6E01               	movwf	btemp^0,c
 30683  0120C2  0EE9               	movlw	-23
 30684  0120C4  0060  F007  FFE3   	movff	btemp,plusw1
 30685                           
 30686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 30687                           ;stkvar	_w @ sp[(-56)+38]
 30688  0120CA  50E1               	movf	fsr1l,w,c
 30689  0120CC  0FEE               	addlw	-18
 30690  0120CE  6ED9               	movwf	fsr2l,c
 30691  0120D0  50E2               	movf	fsr1h,w,c
 30692  0120D2  6EDA               	movwf	fsr2h,c
 30693  0120D4  0EFF               	movlw	255
 30694  0120D6  22DA               	addwfc	fsr2h,f,c
 30695  0120D8  06DE               	decf	postinc2,f,c
 30696  0120DA  0E00               	movlw	0
 30697  0120DC  5ADD               	subwfb	postdec2,f,c
 30698                           
 30699                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 30700                           ;stkvar	_t @ sp[(-56)+52]
 30701  0120DE  50E1               	movf	fsr1l,w,c
 30702  0120E0  0FFC               	addlw	-4
 30703  0120E2  6ED9               	movwf	fsr2l,c
 30704  0120E4  50E2               	movf	fsr1h,w,c
 30705  0120E6  6EDA               	movwf	fsr2h,c
 30706  0120E8  0EFF               	movlw	255
 30707  0120EA  22DA               	addwfc	fsr2h,f,c
 30708  0120EC  06DE               	decf	postinc2,f,c
 30709  0120EE  0E00               	movlw	0
 30710  0120F0  5ADD               	subwfb	postdec2,f,c
 30711  0120F2                     l15615:
 30712                           
 30713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 30714                           ;stkvar	_t @ sp[(-56)+52]
 30715  0120F2  0EFC               	movlw	-4
 30716  0120F4  006F FF8C  F001    	movff	plusw1,btemp
 30717  0120FA  0EFD               	movlw	-3
 30718  0120FC  50E3               	movf	plusw1,w,c
 30719  0120FE  1001               	iorwf	btemp^0,w,c
 30720  012100  A4D8               	btfss	status,2,c
 30721  012102  D7C2               	goto	l15607
 30722                           
 30723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 30724                           ;stkvar	_n @ sp[(-56)+32]
 30725  012104  0EE8               	movlw	-24
 30726  012106  006F FF8C  F00B    	movff	plusw1,btemp+10
 30727  01210C  0EE9               	movlw	-23
 30728  01210E  006F FF8C  F00C    	movff	plusw1,btemp+11
 30729  012114  0E54               	movlw	low _dbuf
 30730  012116  240B               	addwf	(btemp+10)^0,w,c
 30731  012118  6ED9               	movwf	fsr2l,c
 30732  01211A  0E03               	movlw	high _dbuf
 30733  01211C  200C               	addwfc	(btemp+11)^0,w,c
 30734  01211E  6EDA               	movwf	fsr2h,c
 30735                           
 30736                           ;stkvar	_d @ sp[(-56)+44]
 30737  012120  0EF4               	movlw	-12
 30738  012122  50E3               	movf	plusw1,w,c
 30739  012124  0F30               	addlw	48
 30740  012126  6EDF               	movwf	indf2,c
 30741                           
 30742                           ;stkvar	_n @ sp[(-56)+32]
 30743  012128  0EE8               	movlw	-24
 30744  01212A  50E3               	movf	plusw1,w,c
 30745  01212C  0F01               	addlw	1
 30746  01212E  6E01               	movwf	btemp^0,c
 30747  012130  0EE8               	movlw	-24
 30748  012132  0060  F007  FFE3   	movff	btemp,plusw1
 30749  012138  6A01               	clrf	btemp^0,c
 30750  01213A  0EE9               	movlw	-23
 30751  01213C  50E3               	movf	plusw1,w,c
 30752  01213E  2001               	addwfc	btemp^0,w,c
 30753  012140  6E01               	movwf	btemp^0,c
 30754  012142  0EE9               	movlw	-23
 30755  012144  0060  F007  FFE3   	movff	btemp,plusw1
 30756                           
 30757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 30758                           ;stkvar	_w @ sp[(-56)+38]
 30759  01214A  50E1               	movf	fsr1l,w,c
 30760  01214C  0FEE               	addlw	-18
 30761  01214E  6ED9               	movwf	fsr2l,c
 30762  012150  50E2               	movf	fsr1h,w,c
 30763  012152  6EDA               	movwf	fsr2h,c
 30764  012154  0EFF               	movlw	255
 30765  012156  22DA               	addwfc	fsr2h,f,c
 30766  012158  06DE               	decf	postinc2,f,c
 30767  01215A  0E00               	movlw	0
 30768  01215C  5ADD               	subwfb	postdec2,f,c
 30769  01215E                     l15623:
 30770                           
 30771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 30772                           ;stkvar	_u @ sp[(-56)+12]
 30773  01215E  0ED4               	movlw	-44
 30774  012160  006F FF8F FFE6     	movff	plusw1,postinc1
 30775  012166  006F FF8F FFE6     	movff	plusw1,postinc1
 30776  01216C  006F FF8F FFE6     	movff	plusw1,postinc1
 30777  012172  006F FF8F FFE6     	movff	plusw1,postinc1
 30778                           
 30779                           ;stkvar	_l @ sp[(-60)+20]
 30780  012178  0ED8               	movlw	-40
 30781  01217A  006F FF8F FFE6     	movff	plusw1,postinc1
 30782  012180  006F FF8F FFE6     	movff	plusw1,postinc1
 30783  012186  006F FF8F FFE6     	movff	plusw1,postinc1
 30784  01218C  006F FF8F FFE6     	movff	plusw1,postinc1
 30785  012192  EC89  F0B1         	call	___flmul	;wreg free
 30786  012196  0060  F007  FFE6   	movff	btemp,postinc1
 30787  01219C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 30788  0121A2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 30789  0121A8  0060  F013  FFE6   	movff	btemp+3,postinc1
 30790                           
 30791                           ;stkvar	_h @ sp[(-60)+24]
 30792  0121AE  0EDC               	movlw	-36
 30793  0121B0  006F FF8F FFE6     	movff	plusw1,postinc1
 30794  0121B6  006F FF8F FFE6     	movff	plusw1,postinc1
 30795  0121BC  006F FF8F FFE6     	movff	plusw1,postinc1
 30796  0121C2  006F FF8F FFE6     	movff	plusw1,postinc1
 30797  0121C8  ECDC  F009         	call	___flsub	;wreg free
 30798                           
 30799                           ;stkvar	_h @ sp[(-56)+24]
 30800  0121CC  0EE0               	movlw	-32
 30801  0121CE  0060  F007  FFE3   	movff	btemp,plusw1
 30802  0121D4  0EE1               	movlw	-31
 30803  0121D6  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30804  0121DC  0EE2               	movlw	-30
 30805  0121DE  0060  F00F  FFE3   	movff	btemp+2,plusw1
 30806  0121E4  0EE3               	movlw	-29
 30807  0121E6  0060  F013  FFE3   	movff	btemp+3,plusw1
 30808                           
 30809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 30810  0121EC  0E00               	movlw	0
 30811  0121EE  6EE6               	movwf	postinc1,c
 30812  0121F0  0E00               	movlw	0
 30813  0121F2  6EE6               	movwf	postinc1,c
 30814  0121F4  0E20               	movlw	32
 30815  0121F6  6EE6               	movwf	postinc1,c
 30816  0121F8  0E41               	movlw	65
 30817  0121FA  6EE6               	movwf	postinc1,c
 30818                           
 30819                           ;stkvar	_u @ sp[(-60)+12]
 30820  0121FC  0ED0               	movlw	-48
 30821  0121FE  006F FF8F FFE6     	movff	plusw1,postinc1
 30822  012204  006F FF8F FFE6     	movff	plusw1,postinc1
 30823  01220A  006F FF8F FFE6     	movff	plusw1,postinc1
 30824  012210  006F FF8F FFE6     	movff	plusw1,postinc1
 30825  012216  ECDA  F0BC         	call	___fldiv	;wreg free
 30826                           
 30827                           ;stkvar	_u @ sp[(-56)+12]
 30828  01221A  0ED4               	movlw	-44
 30829  01221C  0060  F007  FFE3   	movff	btemp,plusw1
 30830  012222  0ED5               	movlw	-43
 30831  012224  0060  F00B  FFE3   	movff	btemp+1,plusw1
 30832  01222A  0ED6               	movlw	-42
 30833  01222C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 30834  012232  0ED7               	movlw	-41
 30835  012234  0060  F013  FFE3   	movff	btemp+3,plusw1
 30836                           
 30837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 30838                           ;stkvar	_ne @ sp[(-56)+46]
 30839  01223A  50E1               	movf	fsr1l,w,c
 30840  01223C  0FF6               	addlw	-10
 30841  01223E  6ED9               	movwf	fsr2l,c
 30842  012240  50E2               	movf	fsr1h,w,c
 30843  012242  6EDA               	movwf	fsr2h,c
 30844  012244  0EFF               	movlw	255
 30845  012246  22DA               	addwfc	fsr2h,f,c
 30846  012248  06DE               	decf	postinc2,f,c
 30847  01224A  0E00               	movlw	0
 30848  01224C  5ADD               	subwfb	postdec2,f,c
 30849                           
 30850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 30851                           ;stkvar	_i @ sp[(-56)+36]
 30852  01224E  0EEC               	movlw	-20
 30853  012250  50E3               	movf	plusw1,w,c
 30854  012252  0F01               	addlw	1
 30855  012254  6E01               	movwf	btemp^0,c
 30856  012256  0EEC               	movlw	-20
 30857  012258  0060  F007  FFE3   	movff	btemp,plusw1
 30858  01225E  6A01               	clrf	btemp^0,c
 30859  012260  0EED               	movlw	-19
 30860  012262  50E3               	movf	plusw1,w,c
 30861  012264  2001               	addwfc	btemp^0,w,c
 30862  012266  6E01               	movwf	btemp^0,c
 30863  012268  0EED               	movlw	-19
 30864  01226A  0060  F007  FFE3   	movff	btemp,plusw1
 30865  012270                     l15631:
 30866                           
 30867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 30868                           ;stkvar	_m @ sp[(-56)+48]
 30869                           ;stkvar	_i @ sp[(-56)+36]
 30870  012270  50E1               	movf	fsr1l,w,c
 30871  012272  0FEC               	addlw	-20
 30872  012274  6ED9               	movwf	fsr2l,c
 30873  012276  50E2               	movf	fsr1h,w,c
 30874  012278  6EDA               	movwf	fsr2h,c
 30875  01227A  0EFF               	movlw	255
 30876  01227C  22DA               	addwfc	fsr2h,f,c
 30877  01227E  0EF8               	movlw	-8
 30878  012280  50E3               	movf	plusw1,w,c
 30879  012282  5CDE               	subwf	postinc2,w,c
 30880  012284  50DE               	movf	postinc2,w,c
 30881  012286  0A80               	xorlw	128
 30882  012288  6E01               	movwf	btemp^0,c
 30883  01228A  0EF9               	movlw	-7
 30884  01228C  50E3               	movf	plusw1,w,c
 30885  01228E  0A80               	xorlw	128
 30886  012290  5801               	subwfb	btemp^0,w,c
 30887  012292  B0D8               	btfsc	status,0,c
 30888  012294  D00E               	goto	u14860
 30889                           
 30890                           ;stkvar	_n @ sp[(-56)+32]
 30891  012296  0EE9               	movlw	-23
 30892  012298  BEE3               	btfsc	plusw1,7,c
 30893  01229A  D633               	goto	l15581
 30894  01229C  0EE9               	movlw	-23
 30895  01229E  50E3               	movf	plusw1,w,c
 30896  0122A0  E108               	bnz	u14860
 30897  0122A2  0EE8               	movlw	-24
 30898  0122A4  006F FF8C  F001    	movff	plusw1,btemp
 30899  0122AA  0E4B               	movlw	75
 30900  0122AC  5E01               	subwf	btemp^0,f,c
 30901  0122AE  A0D8               	btfss	status,0,c
 30902  0122B0  D628               	goto	l15581
 30903  0122B2                     u14860:
 30904                           
 30905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 30906                           ;stkvar	_pp @ sp[(-56)+50]
 30907  0122B2  0EFA               	movlw	-6
 30908  0122B4  006F FF8C  F001    	movff	plusw1,btemp
 30909  0122BA  0EFB               	movlw	-5
 30910  0122BC  50E3               	movf	plusw1,w,c
 30911  0122BE  1001               	iorwf	btemp^0,w,c
 30912  0122C0  B4D8               	btfsc	status,2,c
 30913  0122C2  A83E               	btfss	_flags^0,4,c
 30914  0122C4  D021               	goto	l15643
 30915                           
 30916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 30917                           ;stkvar	_n @ sp[(-56)+32]
 30918  0122C6  0EE8               	movlw	-24
 30919  0122C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 30920  0122CE  0EE9               	movlw	-23
 30921  0122D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 30922  0122D6  0E54               	movlw	low _dbuf
 30923  0122D8  240B               	addwf	(btemp+10)^0,w,c
 30924  0122DA  6ED9               	movwf	fsr2l,c
 30925  0122DC  0E03               	movlw	high _dbuf
 30926  0122DE  200C               	addwfc	(btemp+11)^0,w,c
 30927  0122E0  6EDA               	movwf	fsr2h,c
 30928  0122E2  0E2E               	movlw	46
 30929  0122E4  6EDF               	movwf	indf2,c
 30930                           
 30931                           ;stkvar	_n @ sp[(-56)+32]
 30932  0122E6  0EE8               	movlw	-24
 30933  0122E8  50E3               	movf	plusw1,w,c
 30934  0122EA  0F01               	addlw	1
 30935  0122EC  6E01               	movwf	btemp^0,c
 30936  0122EE  0EE8               	movlw	-24
 30937  0122F0  0060  F007  FFE3   	movff	btemp,plusw1
 30938  0122F6  6A01               	clrf	btemp^0,c
 30939  0122F8  0EE9               	movlw	-23
 30940  0122FA  50E3               	movf	plusw1,w,c
 30941  0122FC  2001               	addwfc	btemp^0,w,c
 30942  0122FE  6E01               	movwf	btemp^0,c
 30943  012300  0EE9               	movlw	-23
 30944  012302  0060  F007  FFE3   	movff	btemp,plusw1
 30945  012308                     l15643:
 30946                           
 30947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 30948                           ;stkvar	_n @ sp[(-56)+32]
 30949  012308  0EE8               	movlw	-24
 30950  01230A  006F FF8C  F00B    	movff	plusw1,btemp+10
 30951  012310  0EE9               	movlw	-23
 30952  012312  006F FF8C  F00C    	movff	plusw1,btemp+11
 30953  012318  0E54               	movlw	low _dbuf
 30954  01231A  240B               	addwf	(btemp+10)^0,w,c
 30955  01231C  6ED9               	movwf	fsr2l,c
 30956  01231E  0E03               	movlw	high _dbuf
 30957  012320  200C               	addwfc	(btemp+11)^0,w,c
 30958  012322  6EDA               	movwf	fsr2h,c
 30959  012324  0E00               	movlw	0
 30960  012326  6EDF               	movwf	indf2,c
 30961                           
 30962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 30963                           ;stkvar	_nmode @ sp[(-56)+55]
 30964  012328  0EFF               	movlw	-1
 30965  01232A  006F FF8C  F001    	movff	plusw1,btemp
 30966  012330  0E65               	movlw	101
 30967  012332  1801               	xorwf	btemp^0,w,c
 30968  012334  A4D8               	btfss	status,2,c
 30969  012336  EFFD  F08A         	goto	l15447
 30970                           
 30971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 30972  01233A  0E4F               	movlw	79
 30973  01233C  6E0B               	movwf	(btemp+10)^0,c
 30974  01233E  0E00               	movlw	0
 30975  012340  6E0C               	movwf	(btemp+11)^0,c
 30976                           
 30977                           ;stkvar	_i @ sp[(-56)+36]
 30978  012342  0EEC               	movlw	-20
 30979  012344  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30980  01234A  0EED               	movlw	-19
 30981  01234C  0060  F033  FFE3   	movff	btemp+11,plusw1
 30982                           
 30983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 30984                           ;stkvar	_i @ sp[(-56)+36]
 30985  012352  0EEC               	movlw	-20
 30986  012354  006F FF8C  F00B    	movff	plusw1,btemp+10
 30987  01235A  0EED               	movlw	-19
 30988  01235C  006F FF8C  F00C    	movff	plusw1,btemp+11
 30989  012362  0E54               	movlw	low _dbuf
 30990  012364  240B               	addwf	(btemp+10)^0,w,c
 30991  012366  6ED9               	movwf	fsr2l,c
 30992  012368  0E03               	movlw	high _dbuf
 30993  01236A  200C               	addwfc	(btemp+11)^0,w,c
 30994  01236C  6EDA               	movwf	fsr2h,c
 30995  01236E  0E00               	movlw	0
 30996  012370  6EDF               	movwf	indf2,c
 30997                           
 30998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 30999                           ;stkvar	_sign @ sp[(-56)+42]
 31000  012372  0EF2               	movlw	-14
 31001  012374  6AE3               	clrf	plusw1,c
 31002  012376  0EF3               	movlw	-13
 31003  012378  6AE3               	clrf	plusw1,c
 31004                           
 31005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 31006                           ;stkvar	_e @ sp[(-56)+34]
 31007  01237A  0EEB               	movlw	-21
 31008  01237C  AEE3               	btfss	plusw1,7,c
 31009  01237E  D012               	goto	l15657
 31010                           
 31011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 31012  012380  0E01               	movlw	1
 31013  012382  6E0B               	movwf	(btemp+10)^0,c
 31014  012384  0E00               	movlw	0
 31015  012386  6E0C               	movwf	(btemp+11)^0,c
 31016                           
 31017                           ;stkvar	_sign @ sp[(-56)+42]
 31018  012388  0EF2               	movlw	-14
 31019  01238A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31020  012390  0EF3               	movlw	-13
 31021  012392  0060  F033  FFE3   	movff	btemp+11,plusw1
 31022                           
 31023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 31024                           ;stkvar	_e @ sp[(-56)+34]
 31025                           ;stkvar	_e @ sp[(-56)+34]
 31026  012398  0EEA               	movlw	-22
 31027  01239A  6CE3               	negf	plusw1,c
 31028  01239C  0EEB               	movlw	-21
 31029  01239E  1EE3               	comf	plusw1,f,c
 31030  0123A0  B0D8               	btfsc	status,0,c
 31031  0123A2  2AE3               	incf	plusw1,f,c
 31032  0123A4                     l15657:
 31033                           
 31034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 31035  0123A4  0E02               	movlw	2
 31036  0123A6  6E0B               	movwf	(btemp+10)^0,c
 31037  0123A8  0E00               	movlw	0
 31038  0123AA  6E0C               	movwf	(btemp+11)^0,c
 31039                           
 31040                           ;stkvar	_p @ sp[(-56)+40]
 31041  0123AC  0EF0               	movlw	-16
 31042  0123AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31043  0123B4  0EF1               	movlw	-15
 31044  0123B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 31045                           
 31046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 31047  0123BC  D051               	goto	l15669
 31048  0123BE                     l15659:
 31049                           
 31050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 31051                           ;stkvar	_i @ sp[(-56)+36]
 31052  0123BE  50E1               	movf	fsr1l,w,c
 31053  0123C0  0FEC               	addlw	-20
 31054  0123C2  6ED9               	movwf	fsr2l,c
 31055  0123C4  50E2               	movf	fsr1h,w,c
 31056  0123C6  6EDA               	movwf	fsr2h,c
 31057  0123C8  0EFF               	movlw	255
 31058  0123CA  22DA               	addwfc	fsr2h,f,c
 31059  0123CC  06DE               	decf	postinc2,f,c
 31060  0123CE  0E00               	movlw	0
 31061  0123D0  5ADD               	subwfb	postdec2,f,c
 31062                           
 31063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 31064                           ;stkvar	_i @ sp[(-56)+36]
 31065  0123D2  0EEC               	movlw	-20
 31066  0123D4  006F FF8C  F00B    	movff	plusw1,btemp+10
 31067  0123DA  0EED               	movlw	-19
 31068  0123DC  006F FF8C  F00C    	movff	plusw1,btemp+11
 31069  0123E2  0E54               	movlw	low _dbuf
 31070  0123E4  240B               	addwf	(btemp+10)^0,w,c
 31071  0123E6  6ED9               	movwf	fsr2l,c
 31072  0123E8  0E03               	movlw	high _dbuf
 31073  0123EA  200C               	addwfc	(btemp+11)^0,w,c
 31074  0123EC  6EDA               	movwf	fsr2h,c
 31075  0123EE  0E0A               	movlw	10
 31076  0123F0  6EE6               	movwf	postinc1,c
 31077  0123F2  0E00               	movlw	0
 31078  0123F4  6EE6               	movwf	postinc1,c
 31079                           
 31080                           ;stkvar	_e @ sp[(-58)+34]
 31081  0123F6  0EE8               	movlw	-24
 31082  0123F8  006F FF8F FFE6     	movff	plusw1,postinc1
 31083  0123FE  006F FF8F FFE6     	movff	plusw1,postinc1
 31084  012404  ECC5  F0F6         	call	___awmod	;wreg free
 31085  012408  5001               	movf	btemp^0,w,c
 31086  01240A  0F30               	addlw	48
 31087  01240C  6EDF               	movwf	indf2,c
 31088                           
 31089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 31090  01240E  0E0A               	movlw	10
 31091  012410  6EE6               	movwf	postinc1,c
 31092  012412  0E00               	movlw	0
 31093  012414  6EE6               	movwf	postinc1,c
 31094                           
 31095                           ;stkvar	_e @ sp[(-58)+34]
 31096  012416  0EE8               	movlw	-24
 31097  012418  006F FF8F FFE6     	movff	plusw1,postinc1
 31098  01241E  006F FF8F FFE6     	movff	plusw1,postinc1
 31099  012424  EC96  F0F2         	call	___awdiv	;wreg free
 31100                           
 31101                           ;stkvar	_e @ sp[(-56)+34]
 31102  012428  0EEA               	movlw	-22
 31103  01242A  0060  F007  FFE3   	movff	btemp,plusw1
 31104  012430  0EEB               	movlw	-21
 31105  012432  0060  F00B  FFE3   	movff	btemp+1,plusw1
 31106                           
 31107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 31108                           ;stkvar	_p @ sp[(-56)+40]
 31109  012438  50E1               	movf	fsr1l,w,c
 31110  01243A  0FF0               	addlw	-16
 31111  01243C  6ED9               	movwf	fsr2l,c
 31112  01243E  50E2               	movf	fsr1h,w,c
 31113  012440  6EDA               	movwf	fsr2h,c
 31114  012442  0EFF               	movlw	255
 31115  012444  22DA               	addwfc	fsr2h,f,c
 31116  012446  06DE               	decf	postinc2,f,c
 31117  012448  0E00               	movlw	0
 31118  01244A  5ADD               	subwfb	postdec2,f,c
 31119                           
 31120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 31121                           ;stkvar	_w @ sp[(-56)+38]
 31122  01244C  50E1               	movf	fsr1l,w,c
 31123  01244E  0FEE               	addlw	-18
 31124  012450  6ED9               	movwf	fsr2l,c
 31125  012452  50E2               	movf	fsr1h,w,c
 31126  012454  6EDA               	movwf	fsr2h,c
 31127  012456  0EFF               	movlw	255
 31128  012458  22DA               	addwfc	fsr2h,f,c
 31129  01245A  06DE               	decf	postinc2,f,c
 31130  01245C  0E00               	movlw	0
 31131  01245E  5ADD               	subwfb	postdec2,f,c
 31132  012460                     l15669:
 31133                           
 31134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 31135                           ;stkvar	_e @ sp[(-56)+34]
 31136  012460  0EEA               	movlw	-22
 31137  012462  006F FF8C  F001    	movff	plusw1,btemp
 31138  012468  0EEB               	movlw	-21
 31139  01246A  50E3               	movf	plusw1,w,c
 31140  01246C  1001               	iorwf	btemp^0,w,c
 31141  01246E  A4D8               	btfss	status,2,c
 31142  012470  D7A6               	goto	l15659
 31143                           
 31144                           ;stkvar	_p @ sp[(-56)+40]
 31145  012472  0EF1               	movlw	-15
 31146  012474  BEE3               	btfsc	plusw1,7,c
 31147  012476  D007               	goto	u14920
 31148  012478  0EF1               	movlw	-15
 31149  01247A  50E3               	movf	plusw1,w,c
 31150  01247C  E1A0               	bnz	l15659
 31151  01247E  0EF0               	movlw	-16
 31152  012480  04E3               	decf	plusw1,w,c
 31153  012482  B0D8               	btfsc	status,0,c
 31154  012484  D79C               	goto	l15659
 31155  012486                     u14920:
 31156                           
 31157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 31158                           ;stkvar	_i @ sp[(-56)+36]
 31159  012486  50E1               	movf	fsr1l,w,c
 31160  012488  0FEC               	addlw	-20
 31161  01248A  6ED9               	movwf	fsr2l,c
 31162  01248C  50E2               	movf	fsr1h,w,c
 31163  01248E  6EDA               	movwf	fsr2h,c
 31164  012490  0EFF               	movlw	255
 31165  012492  22DA               	addwfc	fsr2h,f,c
 31166  012494  06DE               	decf	postinc2,f,c
 31167  012496  0E00               	movlw	0
 31168  012498  5ADD               	subwfb	postdec2,f,c
 31169                           
 31170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 31171                           ;stkvar	_sign @ sp[(-56)+42]
 31172  01249A  0EF2               	movlw	-14
 31173  01249C  006F FF8C  F001    	movff	plusw1,btemp
 31174  0124A2  0EF3               	movlw	-13
 31175  0124A4  50E3               	movf	plusw1,w,c
 31176  0124A6  1001               	iorwf	btemp^0,w,c
 31177  0124A8  A4D8               	btfss	status,2,c
 31178  0124AA  D002               	goto	l15679
 31179  0124AC  0E2B               	movlw	43
 31180  0124AE  D001               	goto	L32
 31181  0124B0                     l15679:
 31182  0124B0  0E2D               	movlw	45
 31183  0124B2                     L32:
 31184  0124B2  6E0B               	movwf	(btemp+10)^0,c
 31185  0124B4  0E00               	movlw	0
 31186  0124B6  6E0C               	movwf	(btemp+11)^0,c
 31187                           
 31188                           ;stkvar	_efgtoa$6854 @ sp[(-56)+4]
 31189  0124B8  0ECC               	movlw	-52
 31190  0124BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31191  0124C0  0ECD               	movlw	-51
 31192  0124C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 31193                           
 31194                           ;stkvar	_efgtoa$6854 @ sp[(-56)+4]
 31195                           ;stkvar	_i @ sp[(-56)+36]
 31196  0124C8  0EEC               	movlw	-20
 31197  0124CA  006F FF8C  F00B    	movff	plusw1,btemp+10
 31198  0124D0  0EED               	movlw	-19
 31199  0124D2  006F FF8C  F00C    	movff	plusw1,btemp+11
 31200  0124D8  0E54               	movlw	low _dbuf
 31201  0124DA  240B               	addwf	(btemp+10)^0,w,c
 31202  0124DC  6ED9               	movwf	fsr2l,c
 31203  0124DE  0E03               	movlw	high _dbuf
 31204  0124E0  200C               	addwfc	(btemp+11)^0,w,c
 31205  0124E2  6EDA               	movwf	fsr2h,c
 31206  0124E4  0ECC               	movlw	-52
 31207  0124E6  006F FF8F FFDF     	movff	plusw1,indf2
 31208                           
 31209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 31210                           ;stkvar	_w @ sp[(-56)+38]
 31211  0124EC  50E1               	movf	fsr1l,w,c
 31212  0124EE  0FEE               	addlw	-18
 31213  0124F0  6ED9               	movwf	fsr2l,c
 31214  0124F2  50E2               	movf	fsr1h,w,c
 31215  0124F4  6EDA               	movwf	fsr2h,c
 31216  0124F6  0EFF               	movlw	255
 31217  0124F8  22DA               	addwfc	fsr2h,f,c
 31218  0124FA  06DE               	decf	postinc2,f,c
 31219  0124FC  0E00               	movlw	0
 31220  0124FE  5ADD               	subwfb	postdec2,f,c
 31221                           
 31222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 31223                           ;stkvar	_i @ sp[(-56)+36]
 31224  012500  50E1               	movf	fsr1l,w,c
 31225  012502  0FEC               	addlw	-20
 31226  012504  6ED9               	movwf	fsr2l,c
 31227  012506  50E2               	movf	fsr1h,w,c
 31228  012508  6EDA               	movwf	fsr2h,c
 31229  01250A  0EFF               	movlw	255
 31230  01250C  22DA               	addwfc	fsr2h,f,c
 31231  01250E  06DE               	decf	postinc2,f,c
 31232  012510  0E00               	movlw	0
 31233  012512  5ADD               	subwfb	postdec2,f,c
 31234  012514  0EBF               	movlw	191
 31235  012516  6E0B               	movwf	(btemp+10)^0,c
 31236  012518  0EFF               	movlw	255
 31237  01251A  6E0C               	movwf	(btemp+11)^0,c
 31238                           
 31239                           ;stkvar	_c @ sp[(-56)+-7]
 31240  01251C  0EC1               	movlw	-63
 31241  01251E  50E3               	movf	plusw1,w,c
 31242  012520  6E09               	movwf	(btemp+8)^0,c
 31243  012522  6A0A               	clrf	(btemp+9)^0,c
 31244  012524  500B               	movf	(btemp+10)^0,w,c
 31245  012526  2609               	addwf	(btemp+8)^0,f,c
 31246  012528  500C               	movf	(btemp+11)^0,w,c
 31247  01252A  220A               	addwfc	(btemp+9)^0,f,c
 31248  01252C  500A               	movf	(btemp+9)^0,w,c
 31249  01252E  E106               	bnz	u14940
 31250  012530  0E1A               	movlw	26
 31251  012532  5C09               	subwf	(btemp+8)^0,w,c
 31252  012534  B0D8               	btfsc	status,0,c
 31253  012536  D002               	goto	u14940
 31254  012538  0E01               	movlw	1
 31255  01253A  D001               	goto	u14950
 31256  01253C                     u14940:
 31257  01253C  0E00               	movlw	0
 31258  01253E                     u14950:
 31259  01253E  6E0B               	movwf	(btemp+10)^0,c
 31260  012540  6A0C               	clrf	(btemp+11)^0,c
 31261                           
 31262                           ;stkvar	_efgtoa$6856 @ sp[(-56)+0]
 31263  012542  0EC8               	movlw	-56
 31264  012544  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31265  01254A  0EC9               	movlw	-55
 31266  01254C  0060  F033  FFE3   	movff	btemp+11,plusw1
 31267                           
 31268                           ;stkvar	_efgtoa$6856 @ sp[(-56)+0]
 31269  012552  0EC8               	movlw	-56
 31270  012554  006F FF8C  F001    	movff	plusw1,btemp
 31271  01255A  0EC9               	movlw	-55
 31272  01255C  50E3               	movf	plusw1,w,c
 31273  01255E  1001               	iorwf	btemp^0,w,c
 31274  012560  A4D8               	btfss	status,2,c
 31275  012562  D002               	goto	l15695
 31276  012564  0E65               	movlw	101
 31277  012566  D001               	goto	L33
 31278  012568                     l15695:
 31279  012568  0E45               	movlw	69
 31280  01256A                     L33:
 31281  01256A  6E0B               	movwf	(btemp+10)^0,c
 31282  01256C  0E00               	movlw	0
 31283  01256E  6E0C               	movwf	(btemp+11)^0,c
 31284                           
 31285                           ;stkvar	_efgtoa$6855 @ sp[(-56)+2]
 31286  012570  0ECA               	movlw	-54
 31287  012572  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31288  012578  0ECB               	movlw	-53
 31289  01257A  0060  F033  FFE3   	movff	btemp+11,plusw1
 31290                           
 31291                           ;stkvar	_efgtoa$6855 @ sp[(-56)+2]
 31292                           ;stkvar	_i @ sp[(-56)+36]
 31293  012580  0EEC               	movlw	-20
 31294  012582  006F FF8C  F00B    	movff	plusw1,btemp+10
 31295  012588  0EED               	movlw	-19
 31296  01258A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31297  012590  0E54               	movlw	low _dbuf
 31298  012592  240B               	addwf	(btemp+10)^0,w,c
 31299  012594  6ED9               	movwf	fsr2l,c
 31300  012596  0E03               	movlw	high _dbuf
 31301  012598  200C               	addwfc	(btemp+11)^0,w,c
 31302  01259A  6EDA               	movwf	fsr2h,c
 31303  01259C  0ECA               	movlw	-54
 31304  01259E  006F FF8F FFDF     	movff	plusw1,indf2
 31305                           
 31306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 31307                           ;stkvar	_w @ sp[(-56)+38]
 31308  0125A4  50E1               	movf	fsr1l,w,c
 31309  0125A6  0FEE               	addlw	-18
 31310  0125A8  6ED9               	movwf	fsr2l,c
 31311  0125AA  50E2               	movf	fsr1h,w,c
 31312  0125AC  6EDA               	movwf	fsr2h,c
 31313  0125AE  0EFF               	movlw	255
 31314  0125B0  22DA               	addwfc	fsr2h,f,c
 31315  0125B2  06DE               	decf	postinc2,f,c
 31316  0125B4  0E00               	movlw	0
 31317  0125B6  5ADD               	subwfb	postdec2,f,c
 31318                           
 31319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 31320                           ;stkvar	_i @ sp[(-56)+36]
 31321  0125B8  0EEC               	movlw	-20
 31322  0125BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 31323  0125C0  0EED               	movlw	-19
 31324  0125C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 31325  0125C8  0E54               	movlw	low _dbuf
 31326  0125CA  240B               	addwf	(btemp+10)^0,w,c
 31327  0125CC  6E09               	movwf	(btemp+8)^0,c
 31328  0125CE  0E03               	movlw	high _dbuf
 31329  0125D0  200C               	addwfc	(btemp+11)^0,w,c
 31330  0125D2  6E0A               	movwf	(btemp+9)^0,c
 31331  0125D4  0060  F027  FFE6   	movff	btemp+8,postinc1
 31332  0125DA  0060  F02B  FFE6   	movff	btemp+9,postinc1
 31333                           
 31334                           ;stkvar	_n @ sp[(-58)+32]
 31335  0125E0  0E54               	movlw	low _dbuf
 31336  0125E2  6E0B               	movwf	(btemp+10)^0,c
 31337  0125E4  0E03               	movlw	high _dbuf
 31338  0125E6  6E0C               	movwf	(btemp+11)^0,c
 31339  0125E8  0EE6               	movlw	-26
 31340  0125EA  50E3               	movf	plusw1,w,c
 31341  0125EC  260B               	addwf	(btemp+10)^0,f,c
 31342  0125EE  0EE7               	movlw	-25
 31343  0125F0  50E3               	movf	plusw1,w,c
 31344  0125F2  220C               	addwfc	(btemp+11)^0,f,c
 31345  0125F4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 31346  0125FA  0060  F033  FFE6   	movff	btemp+11,postinc1
 31347  012600  EC0A  F0FC         	call	_strcpy	;wreg free
 31348  012604  EFFD  F08A         	goto	l15447
 31349  012608                     l2506:
 31350                           
 31351                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 31352  012608  0EC1               	movlw	193
 31353  01260A  26E1               	addwf	fsr1l,f,c
 31354  01260C  0EFF               	movlw	255
 31355  01260E  22E2               	addwfc	fsr1h,f,c
 31356  012610  0012               	return		;funcret
 31357  012612                     __end_of_efgtoa:
 31358                           	opt callstack 0
 31359                           
 31360 ;; *************** function _tolower *****************
 31361 ;; Defined at:
 31362 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 31363 ;; Parameters:    Size  Location     Type
 31364 ;;  c               2  [STACK] int 
 31365 ;; Auto vars:     Size  Location     Type
 31366 ;;		None
 31367 ;; Return value:  Size  Location     Type
 31368 ;;                  2  [STACK] int 
 31369 ;; Registers used:
 31370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 31371 ;; Tracked objects:
 31372 ;;		On entry : 0/0
 31373 ;;		On exit  : 0/0
 31374 ;;		Unchanged: 0/0
 31375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31380 ;;Total ram usage:        0 bytes
 31381 ;; Hardware stack levels used:    1
 31382 ;; Hardware stack levels required when called:   16
 31383 ;; This function calls:
 31384 ;;		_isupper
 31385 ;; This function is called by:
 31386 ;;		_efgtoa
 31387 ;;		_vfpfcnvrt
 31388 ;; This function uses a reentrant model
 31389 ;;
 31390                           
 31391                           	psect	text102
 31392  00074E                     __ptext102:
 31393                           	opt callstack 0
 31394  00074E                     _tolower:
 31395                           	opt callstack 0
 31396                           
 31397                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31398  00074E  52E6               	movf	postinc1,f,c
 31399  000750  52E6               	movf	postinc1,f,c
 31400                           
 31401                           ;stkvar	_c @ sp[(-2)+-2]
 31402                           
 31403                           ;incstack = 0
 31404 ;; hardware stack exceeded
 31405  000752  0EFC               	movlw	-4
 31406  000754  50E3               	movf	plusw1,w,c
 31407  000756  0FBF               	addlw	191
 31408  000758  6E0B               	movwf	(btemp+10)^0,c
 31409  00075A  0EFD               	movlw	-3
 31410  00075C  006F FF8C  F00C    	movff	plusw1,btemp+11
 31411  000762  0EFF               	movlw	255
 31412  000764  220C               	addwfc	(btemp+11)^0,f,c
 31413  000766  500C               	movf	(btemp+11)^0,w,c
 31414  000768  E106               	bnz	u7790
 31415  00076A  0E1A               	movlw	26
 31416  00076C  5C0B               	subwf	(btemp+10)^0,w,c
 31417  00076E  B0D8               	btfsc	status,0,c
 31418  000770  D002               	goto	u7790
 31419  000772  0E01               	movlw	1
 31420  000774  D001               	goto	u7800
 31421  000776                     u7790:
 31422  000776  0E00               	movlw	0
 31423  000778                     u7800:
 31424  000778  6E0B               	movwf	(btemp+10)^0,c
 31425  00077A  6A0C               	clrf	(btemp+11)^0,c
 31426                           
 31427                           ;stkvar	_tolower$7810 @ sp[(-2)+0]
 31428  00077C  0EFE               	movlw	-2
 31429  00077E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31430  000784  0EFF               	movlw	-1
 31431  000786  0060  F033  FFE3   	movff	btemp+11,plusw1
 31432                           
 31433                           ;stkvar	_tolower$7810 @ sp[(-2)+0]
 31434  00078C  0EFE               	movlw	-2
 31435  00078E  006F FF8C  F001    	movff	plusw1,btemp
 31436  000794  0EFF               	movlw	-1
 31437  000796  50E3               	movf	plusw1,w,c
 31438  000798  1001               	iorwf	btemp^0,w,c
 31439  00079A  B4D8               	btfsc	status,2,c
 31440  00079C  D00D               	goto	l10063
 31441                           
 31442                           ;stkvar	_c @ sp[(-2)+-2]
 31443  00079E  0EFC               	movlw	-4
 31444  0007A0  006F FF8C  F001    	movff	plusw1,btemp
 31445  0007A6  0EFD               	movlw	-3
 31446  0007A8  006F FF8C  F002    	movff	plusw1,btemp+1
 31447  0007AE  0E20               	movlw	32
 31448  0007B0  1201               	iorwf	btemp^0,f,c
 31449  0007B2  0E00               	movlw	0
 31450  0007B4  1202               	iorwf	(btemp+1)^0,f,c
 31451  0007B6  D008               	goto	l3808
 31452  0007B8                     l10063:
 31453                           
 31454                           ;stkvar	_c @ sp[(-2)+-2]
 31455  0007B8  0EFC               	movlw	-4
 31456  0007BA  006F FF8C  F001    	movff	plusw1,btemp
 31457  0007C0  0EFD               	movlw	-3
 31458  0007C2  006F FF8C  F002    	movff	plusw1,btemp+1
 31459  0007C8                     l3808:
 31460                           
 31461                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 31462  0007C8  52E5               	movf	postdec1,f,c
 31463  0007CA  52E5               	movf	postdec1,f,c
 31464  0007CC  52E5               	movf	postdec1,f,c
 31465  0007CE  52E5               	movf	postdec1,f,c
 31466  0007D0  0012               	return		;funcret
 31467  0007D2                     __end_of_tolower:
 31468                           	opt callstack 0
 31469                           
 31470 ;; *************** function _isupper *****************
 31471 ;; Defined at:
 31472 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 31473 ;; Parameters:    Size  Location     Type
 31474 ;;  c               2  [STACK] int 
 31475 ;; Auto vars:     Size  Location     Type
 31476 ;;		None
 31477 ;; Return value:  Size  Location     Type
 31478 ;;                  2  [STACK] int 
 31479 ;; Registers used:
 31480 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 31481 ;; Tracked objects:
 31482 ;;		On entry : 0/0
 31483 ;;		On exit  : 0/0
 31484 ;;		Unchanged: 0/0
 31485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31490 ;;Total ram usage:        0 bytes
 31491 ;; Hardware stack levels used:    1
 31492 ;; Hardware stack levels required when called:   15
 31493 ;; This function calls:
 31494 ;;		Nothing
 31495 ;; This function is called by:
 31496 ;;		_efgtoa
 31497 ;;		_xtoa
 31498 ;;		_vfpfcnvrt
 31499 ;;		_tolower
 31500 ;; This function uses a reentrant model
 31501 ;;
 31502                           
 31503                           	psect	text103
 31504  001880                     __ptext103:
 31505                           	opt callstack 0
 31506  001880                     _isupper:
 31507                           	opt callstack 0
 31508                           
 31509                           ;stkvar	_c @ sp[(0)+-2]
 31510                           
 31511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31512                           ;incstack = 0
 31513 ;; hardware stack exceeded
 31514  001880  0EFE               	movlw	-2
 31515  001882  50E3               	movf	plusw1,w,c
 31516  001884  0FBF               	addlw	191
 31517  001886  6E0B               	movwf	(btemp+10)^0,c
 31518  001888  0EFF               	movlw	-1
 31519  00188A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31520  001890  0EFF               	movlw	255
 31521  001892  220C               	addwfc	(btemp+11)^0,f,c
 31522  001894  500C               	movf	(btemp+11)^0,w,c
 31523  001896  E106               	bnz	u7130
 31524  001898  0E1A               	movlw	26
 31525  00189A  5C0B               	subwf	(btemp+10)^0,w,c
 31526  00189C  B0D8               	btfsc	status,0,c
 31527  00189E  D002               	goto	u7130
 31528  0018A0  0E01               	movlw	1
 31529  0018A2  D001               	goto	u7140
 31530  0018A4                     u7130:
 31531  0018A4  0E00               	movlw	0
 31532  0018A6                     u7140:
 31533  0018A6  6E01               	movwf	btemp^0,c
 31534  0018A8  6A02               	clrf	(btemp+1)^0,c
 31535                           
 31536                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 31537  0018AA  52E5               	movf	postdec1,f,c
 31538  0018AC  52E5               	movf	postdec1,f,c
 31539  0018AE  0012               	return		;funcret
 31540  0018B0                     __end_of_isupper:
 31541                           	opt callstack 0
 31542                           
 31543 ;; *************** function _strcpy *****************
 31544 ;; Defined at:
 31545 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 31546 ;; Parameters:    Size  Location     Type
 31547 ;;  dest            2  [STACK] PTR unsigned char 
 31548 ;;		 -> dbuf(80), 
 31549 ;;  src             2  [STACK] PTR const unsigned char 
 31550 ;;		 -> STR_96(4), STR_95(4), STR_92(4), STR_91(4), 
 31551 ;;		 -> dbuf(80), 
 31552 ;; Auto vars:     Size  Location     Type
 31553 ;;  d               2  [STACK] PTR unsigned char 
 31554 ;;		 -> dbuf(80), 
 31555 ;;  s               2  [STACK] PTR const unsigned char 
 31556 ;;		 -> STR_96(4), STR_95(4), STR_92(4), STR_91(4), 
 31557 ;;		 -> dbuf(80), 
 31558 ;; Return value:  Size  Location     Type
 31559 ;;                  2  [STACK] PTR unsigned char 
 31560 ;; Registers used:
 31561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 31562 ;; Tracked objects:
 31563 ;;		On entry : 0/0
 31564 ;;		On exit  : 0/0
 31565 ;;		Unchanged: 0/0
 31566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31571 ;;Total ram usage:        0 bytes
 31572 ;; Hardware stack levels used:    1
 31573 ;; Hardware stack levels required when called:   15
 31574 ;; This function calls:
 31575 ;;		Nothing
 31576 ;; This function is called by:
 31577 ;;		_efgtoa
 31578 ;; This function uses a reentrant model
 31579 ;;
 31580                           
 31581                           	psect	text104
 31582  01F814                     __ptext104:
 31583                           	opt callstack 0
 31584  01F814                     _strcpy:
 31585                           	opt callstack 0
 31586                           
 31587                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31588  01F814  52E6               	movf	postinc1,f,c
 31589  01F816  52E6               	movf	postinc1,f,c
 31590  01F818  52E6               	movf	postinc1,f,c
 31591  01F81A  52E6               	movf	postinc1,f,c
 31592                           
 31593                           ;stkvar	_src @ sp[(-4)+-4]
 31594                           
 31595                           ;incstack = 0
 31596 ;; hardware stack exceeded
 31597  01F81C  0EF8               	movlw	-8
 31598  01F81E  006F FF8C  F00B    	movff	plusw1,btemp+10
 31599  01F824  0EF9               	movlw	-7
 31600  01F826  006F FF8C  F00C    	movff	plusw1,btemp+11
 31601                           
 31602                           ;stkvar	_s @ sp[(-4)+2]
 31603  01F82C  0EFF               	movlw	-1
 31604  01F82E  0060  F033  FFE3   	movff	btemp+11,plusw1
 31605  01F834  0EFE               	movlw	-2
 31606  01F836  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31607                           
 31608                           ;stkvar	_dest @ sp[(-4)+-2]
 31609  01F83C  0EFA               	movlw	-6
 31610  01F83E  006F FF8C  F00B    	movff	plusw1,btemp+10
 31611  01F844  0EFB               	movlw	-5
 31612  01F846  006F FF8C  F00C    	movff	plusw1,btemp+11
 31613                           
 31614                           ;stkvar	_d @ sp[(-4)+0]
 31615  01F84C  0EFD               	movlw	-3
 31616  01F84E  0060  F033  FFE3   	movff	btemp+11,plusw1
 31617  01F854  0EFC               	movlw	-4
 31618  01F856  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31619  01F85C                     l15309:
 31620                           
 31621                           ;stkvar	_s @ sp[(-4)+2]
 31622  01F85C  50E1               	movf	fsr1l,w,c
 31623  01F85E  0FFE               	addlw	-2
 31624  01F860  6ED9               	movwf	fsr2l,c
 31625  01F862  50E2               	movf	fsr1h,w,c
 31626  01F864  6EDA               	movwf	fsr2h,c
 31627  01F866  0EFF               	movlw	255
 31628  01F868  22DA               	addwfc	fsr2h,f,c
 31629  01F86A  006F FF7C  F00B    	movff	indf2,btemp+10
 31630  01F870  0E01               	movlw	1
 31631  01F872  26DE               	addwf	postinc2,f,c
 31632  01F874  006F FF7C  F00C    	movff	indf2,btemp+11
 31633  01F87A  0E00               	movlw	0
 31634  01F87C  22DD               	addwfc	postdec2,f,c
 31635  01F87E  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 31636  01F884  0060  F033  FFF7   	movff	btemp+11,tblptrh
 31637  01F88A  0E00               	movlw	low (__mediumconst shr (0+16))
 31638  01F88C  6EF8               	movwf	tblptru,c
 31639                           
 31640                           ;stkvar	_d @ sp[(-4)+0]
 31641  01F88E  50E1               	movf	fsr1l,w,c
 31642  01F890  0FFC               	addlw	-4
 31643  01F892  6ED9               	movwf	fsr2l,c
 31644  01F894  50E2               	movf	fsr1h,w,c
 31645  01F896  6EDA               	movwf	fsr2h,c
 31646  01F898  0EFF               	movlw	255
 31647  01F89A  22DA               	addwfc	fsr2h,f,c
 31648  01F89C  006F FF7C  F00B    	movff	indf2,btemp+10
 31649  01F8A2  0E01               	movlw	1
 31650  01F8A4  26DE               	addwf	postinc2,f,c
 31651  01F8A6  006F FF7C  F00C    	movff	indf2,btemp+11
 31652  01F8AC  0E00               	movlw	0
 31653  01F8AE  22DD               	addwfc	postdec2,f,c
 31654  01F8B0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 31655  01F8B6  0060  F033  FFDA   	movff	btemp+11,fsr2h
 31656  01F8BC  0E1F               	movlw	(high __ramtop+-1)
 31657  01F8BE  64F7               	cpfsgt	tblptrh,c
 31658  01F8C0  D003               	bra	u14247
 31659  01F8C2  0008               	tblrd		*
 31660  01F8C4  50F5               	movf	tablat,w,c
 31661  01F8C6  D007               	bra	u14240
 31662  01F8C8                     u14247:
 31663  01F8C8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 31664  01F8CE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 31665  01F8D4  50EF               	movf	indf0,w,c
 31666  01F8D6                     u14240:
 31667  01F8D6  6EDF               	movwf	indf2,c
 31668  01F8D8  50DF               	movf	indf2,w,c
 31669  01F8DA  A4D8               	btfss	status,2,c
 31670  01F8DC  D7BF               	goto	l15309
 31671                           
 31672                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 31673  01F8DE  0EF8               	movlw	248
 31674  01F8E0  26E1               	addwf	fsr1l,f,c
 31675  01F8E2  0EFF               	movlw	255
 31676  01F8E4  22E2               	addwfc	fsr1h,f,c
 31677  01F8E6  0012               	return		;funcret
 31678  01F8E8                     __end_of_strcpy:
 31679                           	opt callstack 0
 31680                           
 31681 ;; *************** function _floorf *****************
 31682 ;; Defined at:
 31683 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 31684 ;; Parameters:    Size  Location     Type
 31685 ;;  x               4  [STACK] float 
 31686 ;; Auto vars:     Size  Location     Type
 31687 ;;  u               4  [STACK] struct .
 31688 ;;  m               4  [STACK] unsigned long 
 31689 ;;  e               2  [STACK] int 
 31690 ;; Return value:  Size  Location     Type
 31691 ;;                  4  [STACK] float 
 31692 ;; Registers used:
 31693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 31694 ;; Tracked objects:
 31695 ;;		On entry : 0/0
 31696 ;;		On exit  : 0/0
 31697 ;;		Unchanged: 0/0
 31698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31703 ;;Total ram usage:        0 bytes
 31704 ;; Hardware stack levels used:    1
 31705 ;; Hardware stack levels required when called:   15
 31706 ;; This function calls:
 31707 ;;		Nothing
 31708 ;; This function is called by:
 31709 ;;		_efgtoa
 31710 ;; This function uses a reentrant model
 31711 ;;
 31712                           
 31713                           	psect	text105
 31714  019A08                     __ptext105:
 31715                           	opt callstack 0
 31716  019A08                     _floorf:
 31717                           	opt callstack 0
 31718                           
 31719                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 31720  019A08  0E0A               	movlw	10
 31721  019A0A  26E1               	addwf	fsr1l,f,c
 31722  019A0C  0E00               	movlw	0
 31723  019A0E  22E2               	addwfc	fsr1h,f,c
 31724                           
 31725                           ;incstack = 0
 31726 ;; hardware stack exceeded
 31727  019A10  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 31728  019A16  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 31729  019A1C  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 31730  019A22  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 31731                           
 31732                           ;stkvar	_u @ sp[(-10)+0]
 31733  019A28  0EF6               	movlw	-10
 31734  019A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 31735  019A30  0EF7               	movlw	-9
 31736  019A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31737  019A38  0EF8               	movlw	-8
 31738  019A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31739  019A40  0EF9               	movlw	-7
 31740  019A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 31741                           
 31742                           ;stkvar	_x @ sp[(-10)+-4]
 31743  019A48  0EF2               	movlw	-14
 31744  019A4A  006F FF8C  F009    	movff	plusw1,btemp+8
 31745  019A50  0EF3               	movlw	-13
 31746  019A52  006F FF8C  F00A    	movff	plusw1,btemp+9
 31747  019A58  0EF4               	movlw	-12
 31748  019A5A  006F FF8C  F00B    	movff	plusw1,btemp+10
 31749  019A60  0EF5               	movlw	-11
 31750  019A62  006F FF8C  F00C    	movff	plusw1,btemp+11
 31751                           
 31752                           ;stkvar	_u @ sp[(-10)+0]
 31753  019A68  0EF6               	movlw	-10
 31754  019A6A  0060  F027  FFE3   	movff	btemp+8,plusw1
 31755  019A70  0EF7               	movlw	-9
 31756  019A72  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31757  019A78  0EF8               	movlw	-8
 31758  019A7A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31759  019A80  0EF9               	movlw	-7
 31760  019A82  0060  F033  FFE3   	movff	btemp+11,plusw1
 31761  019A88  0E81               	movlw	129
 31762  019A8A  6E0B               	movwf	(btemp+10)^0,c
 31763  019A8C  0EFF               	movlw	255
 31764  019A8E  6E0C               	movwf	(btemp+11)^0,c
 31765                           
 31766                           ;stkvar	_u @ sp[(-10)+0]
 31767  019A90  0EF6               	movlw	-10
 31768  019A92  006F FF8C  F005    	movff	plusw1,btemp+4
 31769  019A98  0EF7               	movlw	-9
 31770  019A9A  006F FF8C  F006    	movff	plusw1,btemp+5
 31771  019AA0  0EF8               	movlw	-8
 31772  019AA2  006F FF8C  F007    	movff	plusw1,btemp+6
 31773  019AA8  0EF9               	movlw	-7
 31774  019AAA  006F FF8C  F008    	movff	plusw1,btemp+7
 31775  019AB0  0E18               	movlw	24
 31776  019AB2  D005               	goto	u7820
 31777  019AB4                     u7825:
 31778  019AB4  90D8               	bcf	status,0,c
 31779  019AB6  3208               	rrcf	(btemp+7)^0,f,c
 31780  019AB8  3207               	rrcf	(btemp+6)^0,f,c
 31781  019ABA  3206               	rrcf	(btemp+5)^0,f,c
 31782  019ABC  3205               	rrcf	(btemp+4)^0,f,c
 31783  019ABE                     u7820:
 31784  019ABE  2EE8               	decfsz	wreg,f,c
 31785  019AC0  D7F9               	goto	u7825
 31786  019AC2  0060  F014  F009   	movff	btemp+4,btemp+8
 31787  019AC8  0060  F018  F00A   	movff	btemp+5,btemp+9
 31788  019ACE  0EFF               	movlw	255
 31789  019AD0  1609               	andwf	(btemp+8)^0,f,c
 31790  019AD2  0E00               	movlw	0
 31791  019AD4  160A               	andwf	(btemp+9)^0,f,c
 31792  019AD6  500B               	movf	(btemp+10)^0,w,c
 31793  019AD8  2609               	addwf	(btemp+8)^0,f,c
 31794  019ADA  500C               	movf	(btemp+11)^0,w,c
 31795  019ADC  220A               	addwfc	(btemp+9)^0,f,c
 31796                           
 31797                           ;stkvar	_e @ sp[(-10)+8]
 31798  019ADE  0EFE               	movlw	-2
 31799  019AE0  0060  F027  FFE3   	movff	btemp+8,plusw1
 31800  019AE6  0EFF               	movlw	-1
 31801  019AE8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31802                           
 31803                           ;stkvar	_e @ sp[(-10)+8]
 31804  019AEE  0EFF               	movlw	-1
 31805  019AF0  BEE3               	btfsc	plusw1,7,c
 31806  019AF2  D019               	goto	l10077
 31807  019AF4  0EFF               	movlw	-1
 31808  019AF6  50E3               	movf	plusw1,w,c
 31809  019AF8  E108               	bnz	u7830
 31810  019AFA  0EFE               	movlw	-2
 31811  019AFC  006F FF8C  F001    	movff	plusw1,btemp
 31812  019B02  0E17               	movlw	23
 31813  019B04  5E01               	subwf	btemp^0,f,c
 31814  019B06  A0D8               	btfss	status,0,c
 31815  019B08  D00E               	goto	l10077
 31816  019B0A                     u7830:
 31817                           
 31818                           ;stkvar	_x @ sp[(-10)+-4]
 31819  019B0A  0EF2               	movlw	-14
 31820  019B0C  006F FF8C  F001    	movff	plusw1,btemp
 31821  019B12  0EF3               	movlw	-13
 31822  019B14  006F FF8C  F002    	movff	plusw1,btemp+1
 31823  019B1A  0EF4               	movlw	-12
 31824  019B1C  006F FF8C  F003    	movff	plusw1,btemp+2
 31825  019B22  0EF5               	movlw	-11
 31826  019B24  D11F               	goto	L34
 31827  019B26                     l10077:
 31828                           
 31829                           ;stkvar	_e @ sp[(-10)+8]
 31830  019B26  0EFF               	movlw	-1
 31831  019B28  BEE3               	btfsc	plusw1,7,c
 31832  019B2A  D0B4               	goto	l10093
 31833                           
 31834                           ;stkvar	_e @ sp[(-10)+8]
 31835  019B2C  0EFE               	movlw	-2
 31836  019B2E  006F FF8C  F00C    	movff	plusw1,btemp+11
 31837  019B34  0EFF               	movlw	255
 31838  019B36  6E05               	movwf	(btemp+4)^0,c
 31839  019B38  0EFF               	movlw	255
 31840  019B3A  6E06               	movwf	(btemp+5)^0,c
 31841  019B3C  0E7F               	movlw	127
 31842  019B3E  6E07               	movwf	(btemp+6)^0,c
 31843  019B40  0E00               	movlw	0
 31844  019B42  6E08               	movwf	(btemp+7)^0,c
 31845  019B44                     u7855:
 31846  019B44  660C               	tstfsz	(btemp+11)^0,c
 31847  019B46  D001               	goto	u7856
 31848  019B48  D007               	goto	u7857
 31849  019B4A                     u7856:
 31850  019B4A  3408               	rlcf	(btemp+7)^0,w,c
 31851  019B4C  3208               	rrcf	(btemp+7)^0,f,c
 31852  019B4E  3207               	rrcf	(btemp+6)^0,f,c
 31853  019B50  3206               	rrcf	(btemp+5)^0,f,c
 31854  019B52  3205               	rrcf	(btemp+4)^0,f,c
 31855  019B54  2E0C               	decfsz	(btemp+11)^0,f,c
 31856  019B56  D7F6               	goto	u7855
 31857  019B58                     u7857:
 31858                           
 31859                           ;stkvar	_m @ sp[(-10)+4]
 31860  019B58  0EFA               	movlw	-6
 31861  019B5A  0060  F017  FFE3   	movff	btemp+4,plusw1
 31862  019B60  0EFB               	movlw	-5
 31863  019B62  0060  F01B  FFE3   	movff	btemp+5,plusw1
 31864  019B68  0EFC               	movlw	-4
 31865  019B6A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 31866  019B70  0EFD               	movlw	-3
 31867  019B72  0060  F023  FFE3   	movff	btemp+7,plusw1
 31868                           
 31869                           ;stkvar	_m @ sp[(-10)+4]
 31870                           ;stkvar	_u @ sp[(-10)+0]
 31871  019B78  0EF6               	movlw	-10
 31872  019B7A  006F FF8C  F009    	movff	plusw1,btemp+8
 31873  019B80  0EF7               	movlw	-9
 31874  019B82  006F FF8C  F00A    	movff	plusw1,btemp+9
 31875  019B88  0EF8               	movlw	-8
 31876  019B8A  006F FF8C  F00B    	movff	plusw1,btemp+10
 31877  019B90  0EF9               	movlw	-7
 31878  019B92  006F FF8C  F00C    	movff	plusw1,btemp+11
 31879  019B98  0EFA               	movlw	-6
 31880  019B9A  50E3               	movf	plusw1,w,c
 31881  019B9C  1609               	andwf	(btemp+8)^0,f,c
 31882  019B9E  0EFB               	movlw	-5
 31883  019BA0  50E3               	movf	plusw1,w,c
 31884  019BA2  160A               	andwf	(btemp+9)^0,f,c
 31885  019BA4  0EFC               	movlw	-4
 31886  019BA6  50E3               	movf	plusw1,w,c
 31887  019BA8  160B               	andwf	(btemp+10)^0,f,c
 31888  019BAA  0EFD               	movlw	-3
 31889  019BAC  50E3               	movf	plusw1,w,c
 31890  019BAE  160C               	andwf	(btemp+11)^0,f,c
 31891  019BB0  5009               	movf	(btemp+8)^0,w,c
 31892  019BB2  100A               	iorwf	(btemp+9)^0,w,c
 31893  019BB4  100B               	iorwf	(btemp+10)^0,w,c
 31894  019BB6  100C               	iorwf	(btemp+11)^0,w,c
 31895  019BB8  B4D8               	btfsc	status,2,c
 31896  019BBA  D7A7               	goto	u7830
 31897                           
 31898                           ;stkvar	_u @ sp[(-10)+0]
 31899  019BBC  0EF6               	movlw	-10
 31900  019BBE  006F FF8C  F009    	movff	plusw1,btemp+8
 31901  019BC4  0EF7               	movlw	-9
 31902  019BC6  006F FF8C  F00A    	movff	plusw1,btemp+9
 31903  019BCC  0EF8               	movlw	-8
 31904  019BCE  006F FF8C  F00B    	movff	plusw1,btemp+10
 31905  019BD4  0EF9               	movlw	-7
 31906  019BD6  006F FF8C  F00C    	movff	plusw1,btemp+11
 31907  019BDC  0E20               	movlw	32
 31908  019BDE  D005               	goto	u7870
 31909  019BE0                     u7875:
 31910  019BE0  90D8               	bcf	status,0,c
 31911  019BE2  320C               	rrcf	(btemp+11)^0,f,c
 31912  019BE4  320B               	rrcf	(btemp+10)^0,f,c
 31913  019BE6  320A               	rrcf	(btemp+9)^0,f,c
 31914  019BE8  3209               	rrcf	(btemp+8)^0,f,c
 31915  019BEA                     u7870:
 31916  019BEA  2EE8               	decfsz	wreg,f,c
 31917  019BEC  D7F9               	goto	u7875
 31918  019BEE  5009               	movf	(btemp+8)^0,w,c
 31919  019BF0  B4D8               	btfsc	status,2,c
 31920  019BF2  D028               	goto	l10091
 31921                           
 31922                           ;stkvar	_m @ sp[(-10)+4]
 31923                           ;stkvar	_u @ sp[(-10)+0]
 31924  019BF4  0EF6               	movlw	-10
 31925  019BF6  50E3               	movf	plusw1,w,c
 31926  019BF8  6E01               	movwf	btemp^0,c
 31927  019BFA  0EFA               	movlw	-6
 31928  019BFC  50E3               	movf	plusw1,w,c
 31929  019BFE  2601               	addwf	btemp^0,f,c
 31930  019C00  0EF6               	movlw	-10
 31931  019C02  0060  F007  FFE3   	movff	btemp,plusw1
 31932  019C08  0EF7               	movlw	-9
 31933  019C0A  50E3               	movf	plusw1,w,c
 31934  019C0C  6E01               	movwf	btemp^0,c
 31935  019C0E  0EFB               	movlw	-5
 31936  019C10  50E3               	movf	plusw1,w,c
 31937  019C12  2201               	addwfc	btemp^0,f,c
 31938  019C14  0EF7               	movlw	-9
 31939  019C16  0060  F007  FFE3   	movff	btemp,plusw1
 31940  019C1C  0EF8               	movlw	-8
 31941  019C1E  50E3               	movf	plusw1,w,c
 31942  019C20  6E01               	movwf	btemp^0,c
 31943  019C22  0EFC               	movlw	-4
 31944  019C24  50E3               	movf	plusw1,w,c
 31945  019C26  2201               	addwfc	btemp^0,f,c
 31946  019C28  0EF8               	movlw	-8
 31947  019C2A  0060  F007  FFE3   	movff	btemp,plusw1
 31948  019C30  0EF9               	movlw	-7
 31949  019C32  50E3               	movf	plusw1,w,c
 31950  019C34  6E01               	movwf	btemp^0,c
 31951  019C36  0EFD               	movlw	-3
 31952  019C38  50E3               	movf	plusw1,w,c
 31953  019C3A  2201               	addwfc	btemp^0,f,c
 31954  019C3C  0EF9               	movlw	-7
 31955  019C3E  0060  F007  FFE3   	movff	btemp,plusw1
 31956  019C44                     l10091:
 31957                           
 31958                           ;stkvar	_m @ sp[(-10)+4]
 31959  019C44  0EFA               	movlw	-6
 31960  019C46  006F FF8C  F009    	movff	plusw1,btemp+8
 31961  019C4C  0EFB               	movlw	-5
 31962  019C4E  006F FF8C  F00A    	movff	plusw1,btemp+9
 31963  019C54  0EFC               	movlw	-4
 31964  019C56  006F FF8C  F00B    	movff	plusw1,btemp+10
 31965  019C5C  0EFD               	movlw	-3
 31966  019C5E  006F FF8C  F00C    	movff	plusw1,btemp+11
 31967  019C64  1C09               	comf	(btemp+8)^0,w,c
 31968  019C66  6E05               	movwf	(btemp+4)^0,c
 31969  019C68  1C0A               	comf	(btemp+9)^0,w,c
 31970  019C6A  6E06               	movwf	(btemp+5)^0,c
 31971  019C6C  1C0B               	comf	(btemp+10)^0,w,c
 31972  019C6E  6E07               	movwf	(btemp+6)^0,c
 31973  019C70  1C0C               	comf	(btemp+11)^0,w,c
 31974  019C72  6E08               	movwf	(btemp+7)^0,c
 31975                           
 31976                           ;stkvar	_u @ sp[(-10)+0]
 31977  019C74  50E1               	movf	fsr1l,w,c
 31978  019C76  0FF6               	addlw	-10
 31979  019C78  6ED9               	movwf	fsr2l,c
 31980  019C7A  50E2               	movf	fsr1h,w,c
 31981  019C7C  6EDA               	movwf	fsr2h,c
 31982  019C7E  0EFF               	movlw	255
 31983  019C80  22DA               	addwfc	fsr2h,f,c
 31984  019C82  5005               	movf	(btemp+4)^0,w,c
 31985  019C84  16DE               	andwf	postinc2,f,c
 31986  019C86  5006               	movf	(btemp+5)^0,w,c
 31987  019C88  16DE               	andwf	postinc2,f,c
 31988  019C8A  5007               	movf	(btemp+6)^0,w,c
 31989  019C8C  16DE               	andwf	postinc2,f,c
 31990  019C8E  5008               	movf	(btemp+7)^0,w,c
 31991  019C90  16DE               	andwf	postinc2,f,c
 31992  019C92  D05B               	goto	l10101
 31993  019C94                     l10093:
 31994                           
 31995                           ;stkvar	_u @ sp[(-10)+0]
 31996  019C94  0EF6               	movlw	-10
 31997  019C96  006F FF8C  F009    	movff	plusw1,btemp+8
 31998  019C9C  0EF7               	movlw	-9
 31999  019C9E  006F FF8C  F00A    	movff	plusw1,btemp+9
 32000  019CA4  0EF8               	movlw	-8
 32001  019CA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 32002  019CAC  0EF9               	movlw	-7
 32003  019CAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 32004  019CB4  0E20               	movlw	32
 32005  019CB6  D005               	goto	u7890
 32006  019CB8                     u7895:
 32007  019CB8  90D8               	bcf	status,0,c
 32008  019CBA  320C               	rrcf	(btemp+11)^0,f,c
 32009  019CBC  320B               	rrcf	(btemp+10)^0,f,c
 32010  019CBE  320A               	rrcf	(btemp+9)^0,f,c
 32011  019CC0  3209               	rrcf	(btemp+8)^0,f,c
 32012  019CC2                     u7890:
 32013  019CC2  2EE8               	decfsz	wreg,f,c
 32014  019CC4  D7F9               	goto	u7895
 32015  019CC6  6609               	tstfsz	(btemp+8)^0,c
 32016  019CC8  D009               	goto	l10097
 32017                           
 32018                           ;stkvar	_u @ sp[(-10)+0]
 32019  019CCA  0EF6               	movlw	-10
 32020  019CCC  6AE3               	clrf	plusw1,c
 32021  019CCE  0EF7               	movlw	-9
 32022  019CD0  6AE3               	clrf	plusw1,c
 32023  019CD2  0EF8               	movlw	-8
 32024  019CD4  6AE3               	clrf	plusw1,c
 32025  019CD6  0EF9               	movlw	-7
 32026  019CD8  6AE3               	clrf	plusw1,c
 32027  019CDA  D037               	goto	l10101
 32028  019CDC                     l10097:
 32029                           
 32030                           ;stkvar	_u @ sp[(-10)+0]
 32031  019CDC  0EF6               	movlw	-10
 32032  019CDE  006F FF8C  F009    	movff	plusw1,btemp+8
 32033  019CE4  0EF7               	movlw	-9
 32034  019CE6  006F FF8C  F00A    	movff	plusw1,btemp+9
 32035  019CEC  0EF8               	movlw	-8
 32036  019CEE  006F FF8C  F00B    	movff	plusw1,btemp+10
 32037  019CF4  0EF9               	movlw	-7
 32038  019CF6  006F FF8C  F00C    	movff	plusw1,btemp+11
 32039  019CFC  90D8               	bcf	status,0,c
 32040  019CFE  3409               	rlcf	(btemp+8)^0,w,c
 32041  019D00  6E05               	movwf	(btemp+4)^0,c
 32042  019D02  340A               	rlcf	(btemp+9)^0,w,c
 32043  019D04  6E06               	movwf	(btemp+5)^0,c
 32044  019D06  340B               	rlcf	(btemp+10)^0,w,c
 32045  019D08  6E07               	movwf	(btemp+6)^0,c
 32046  019D0A  340C               	rlcf	(btemp+11)^0,w,c
 32047  019D0C  6E08               	movwf	(btemp+7)^0,c
 32048  019D0E  5005               	movf	(btemp+4)^0,w,c
 32049  019D10  1006               	iorwf	(btemp+5)^0,w,c
 32050  019D12  1007               	iorwf	(btemp+6)^0,w,c
 32051  019D14  1008               	iorwf	(btemp+7)^0,w,c
 32052  019D16  B4D8               	btfsc	status,2,c
 32053  019D18  D018               	goto	l10101
 32054  019D1A  0E00               	movlw	0
 32055  019D1C  6E09               	movwf	(btemp+8)^0,c
 32056  019D1E  0E00               	movlw	0
 32057  019D20  6E0A               	movwf	(btemp+9)^0,c
 32058  019D22  0E80               	movlw	128
 32059  019D24  6E0B               	movwf	(btemp+10)^0,c
 32060  019D26  0EBF               	movlw	191
 32061  019D28  6E0C               	movwf	(btemp+11)^0,c
 32062                           
 32063                           ;stkvar	_u @ sp[(-10)+0]
 32064  019D2A  0EF6               	movlw	-10
 32065  019D2C  0060  F027  FFE3   	movff	btemp+8,plusw1
 32066  019D32  0EF7               	movlw	-9
 32067  019D34  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32068  019D3A  0EF8               	movlw	-8
 32069  019D3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32070  019D42  0EF9               	movlw	-7
 32071  019D44  0060  F033  FFE3   	movff	btemp+11,plusw1
 32072  019D4A                     l10101:
 32073                           
 32074                           ;stkvar	_u @ sp[(-10)+0]
 32075  019D4A  0EF6               	movlw	-10
 32076  019D4C  006F FF8C  F001    	movff	plusw1,btemp
 32077  019D52  0EF7               	movlw	-9
 32078  019D54  006F FF8C  F002    	movff	plusw1,btemp+1
 32079  019D5A  0EF8               	movlw	-8
 32080  019D5C  006F FF8C  F003    	movff	plusw1,btemp+2
 32081  019D62  0EF9               	movlw	-7
 32082  019D64                     L34:
 32083  019D64  006F FF8C  F004    	movff	plusw1,btemp+3
 32084                           
 32085                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 32086  019D6A  0EF2               	movlw	242
 32087  019D6C  26E1               	addwf	fsr1l,f,c
 32088  019D6E  0EFF               	movlw	255
 32089  019D70  22E2               	addwfc	fsr1h,f,c
 32090  019D72  0012               	return		;funcret
 32091  019D74                     __end_of_floorf:
 32092                           	opt callstack 0
 32093                           
 32094 ;; *************** function ___fpclassifyf *****************
 32095 ;; Defined at:
 32096 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 32097 ;; Parameters:    Size  Location     Type
 32098 ;;  x               4  [STACK] float 
 32099 ;; Auto vars:     Size  Location     Type
 32100 ;;  u               4  [STACK] struct .
 32101 ;;  e               2  [STACK] int 
 32102 ;; Return value:  Size  Location     Type
 32103 ;;                  2  [STACK] int 
 32104 ;; Registers used:
 32105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 32106 ;; Tracked objects:
 32107 ;;		On entry : 0/0
 32108 ;;		On exit  : 0/0
 32109 ;;		Unchanged: 0/0
 32110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32115 ;;Total ram usage:        0 bytes
 32116 ;; Hardware stack levels used:    1
 32117 ;; Hardware stack levels required when called:   15
 32118 ;; This function calls:
 32119 ;;		Nothing
 32120 ;; This function is called by:
 32121 ;;		_efgtoa
 32122 ;; This function uses a reentrant model
 32123 ;;
 32124                           
 32125                           	psect	text106
 32126  01D24E                     __ptext106:
 32127                           	opt callstack 0
 32128  01D24E                     ___fpclassifyf:
 32129                           	opt callstack 0
 32130                           
 32131                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32132  01D24E  0E06               	movlw	6
 32133  01D250  26E1               	addwf	fsr1l,f,c
 32134  01D252  0E00               	movlw	0
 32135  01D254  22E2               	addwfc	fsr1h,f,c
 32136                           
 32137                           ;incstack = 0
 32138 ;; hardware stack exceeded
 32139  01D256  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 32140  01D25C  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 32141  01D262  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 32142  01D268  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 32143                           
 32144                           ;stkvar	_u @ sp[(-6)+0]
 32145  01D26E  0EFA               	movlw	-6
 32146  01D270  0060  F027  FFE3   	movff	btemp+8,plusw1
 32147  01D276  0EFB               	movlw	-5
 32148  01D278  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32149  01D27E  0EFC               	movlw	-4
 32150  01D280  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32151  01D286  0EFD               	movlw	-3
 32152  01D288  0060  F033  FFE3   	movff	btemp+11,plusw1
 32153                           
 32154                           ;stkvar	_x @ sp[(-6)+-4]
 32155  01D28E  0EF6               	movlw	-10
 32156  01D290  006F FF8C  F009    	movff	plusw1,btemp+8
 32157  01D296  0EF7               	movlw	-9
 32158  01D298  006F FF8C  F00A    	movff	plusw1,btemp+9
 32159  01D29E  0EF8               	movlw	-8
 32160  01D2A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 32161  01D2A6  0EF9               	movlw	-7
 32162  01D2A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 32163                           
 32164                           ;stkvar	_u @ sp[(-6)+0]
 32165  01D2AE  0EFA               	movlw	-6
 32166  01D2B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 32167  01D2B6  0EFB               	movlw	-5
 32168  01D2B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 32169  01D2BE  0EFC               	movlw	-4
 32170  01D2C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 32171  01D2C6  0EFD               	movlw	-3
 32172  01D2C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 32173                           
 32174                           ;stkvar	_u @ sp[(-6)+0]
 32175  01D2CE  0EFA               	movlw	-6
 32176  01D2D0  006F FF8C  F009    	movff	plusw1,btemp+8
 32177  01D2D6  0EFB               	movlw	-5
 32178  01D2D8  006F FF8C  F00A    	movff	plusw1,btemp+9
 32179  01D2DE  0EFC               	movlw	-4
 32180  01D2E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 32181  01D2E6  0EFD               	movlw	-3
 32182  01D2E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 32183  01D2EE  0E18               	movlw	24
 32184  01D2F0  D005               	goto	u7700
 32185  01D2F2                     u7705:
 32186  01D2F2  90D8               	bcf	status,0,c
 32187  01D2F4  320C               	rrcf	(btemp+11)^0,f,c
 32188  01D2F6  320B               	rrcf	(btemp+10)^0,f,c
 32189  01D2F8  320A               	rrcf	(btemp+9)^0,f,c
 32190  01D2FA  3209               	rrcf	(btemp+8)^0,f,c
 32191  01D2FC                     u7700:
 32192  01D2FC  2EE8               	decfsz	wreg,f,c
 32193  01D2FE  D7F9               	goto	u7705
 32194  01D300  0060  F024  F007   	movff	btemp+8,btemp+6
 32195  01D306  0060  F028  F008   	movff	btemp+9,btemp+7
 32196  01D30C  0EFF               	movlw	255
 32197  01D30E  1607               	andwf	(btemp+6)^0,f,c
 32198  01D310  0E00               	movlw	0
 32199  01D312  1608               	andwf	(btemp+7)^0,f,c
 32200                           
 32201                           ;stkvar	_e @ sp[(-6)+4]
 32202  01D314  0EFE               	movlw	-2
 32203  01D316  0060  F01F  FFE3   	movff	btemp+6,plusw1
 32204  01D31C  0EFF               	movlw	-1
 32205  01D31E  0060  F023  FFE3   	movff	btemp+7,plusw1
 32206                           
 32207                           ;stkvar	_e @ sp[(-6)+4]
 32208  01D324  0EFE               	movlw	-2
 32209  01D326  006F FF8C  F001    	movff	plusw1,btemp
 32210  01D32C  0EFF               	movlw	-1
 32211  01D32E  50E3               	movf	plusw1,w,c
 32212  01D330  1001               	iorwf	btemp^0,w,c
 32213  01D332  A4D8               	btfss	status,2,c
 32214  01D334  D023               	goto	l10039
 32215                           
 32216                           ;stkvar	_u @ sp[(-6)+0]
 32217  01D336  0EFA               	movlw	-6
 32218  01D338  006F FF8C  F009    	movff	plusw1,btemp+8
 32219  01D33E  0EFB               	movlw	-5
 32220  01D340  006F FF8C  F00A    	movff	plusw1,btemp+9
 32221  01D346  0EFC               	movlw	-4
 32222  01D348  006F FF8C  F00B    	movff	plusw1,btemp+10
 32223  01D34E  0EFD               	movlw	-3
 32224  01D350  006F FF8C  F00C    	movff	plusw1,btemp+11
 32225  01D356  90D8               	bcf	status,0,c
 32226  01D358  3409               	rlcf	(btemp+8)^0,w,c
 32227  01D35A  6E05               	movwf	(btemp+4)^0,c
 32228  01D35C  340A               	rlcf	(btemp+9)^0,w,c
 32229  01D35E  6E06               	movwf	(btemp+5)^0,c
 32230  01D360  340B               	rlcf	(btemp+10)^0,w,c
 32231  01D362  6E07               	movwf	(btemp+6)^0,c
 32232  01D364  340C               	rlcf	(btemp+11)^0,w,c
 32233  01D366  6E08               	movwf	(btemp+7)^0,c
 32234  01D368  5005               	movf	(btemp+4)^0,w,c
 32235  01D36A  1006               	iorwf	(btemp+5)^0,w,c
 32236  01D36C  1007               	iorwf	(btemp+6)^0,w,c
 32237  01D36E  1008               	iorwf	(btemp+7)^0,w,c
 32238  01D370  A4D8               	btfss	status,2,c
 32239  01D372  D002               	goto	l10035
 32240  01D374  0E02               	movlw	2
 32241  01D376  D02E               	goto	L35
 32242  01D378                     l10035:
 32243  01D378  0E03               	movlw	3
 32244  01D37A  D02C               	goto	L35
 32245  01D37C                     l10039:
 32246                           
 32247                           ;stkvar	_e @ sp[(-6)+4]
 32248  01D37C  0EFE               	movlw	-2
 32249  01D37E  28E3               	incf	plusw1,w,c
 32250  01D380  E128               	bnz	l10045
 32251  01D382  0EFF               	movlw	-1
 32252  01D384  50E3               	movf	plusw1,w,c
 32253  01D386  A4D8               	btfss	status,2,c
 32254  01D388  D024               	goto	l10045
 32255                           
 32256                           ;stkvar	_u @ sp[(-6)+0]
 32257  01D38A  0EFA               	movlw	-6
 32258  01D38C  006F FF8C  F009    	movff	plusw1,btemp+8
 32259  01D392  0EFB               	movlw	-5
 32260  01D394  006F FF8C  F00A    	movff	plusw1,btemp+9
 32261  01D39A  0EFC               	movlw	-4
 32262  01D39C  006F FF8C  F00B    	movff	plusw1,btemp+10
 32263  01D3A2  0EFD               	movlw	-3
 32264  01D3A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 32265  01D3AA  0E09               	movlw	9
 32266  01D3AC                     u7745:
 32267  01D3AC  90D8               	bcf	status,0,c
 32268  01D3AE  3609               	rlcf	(btemp+8)^0,f,c
 32269  01D3B0  360A               	rlcf	(btemp+9)^0,f,c
 32270  01D3B2  360B               	rlcf	(btemp+10)^0,f,c
 32271  01D3B4  360C               	rlcf	(btemp+11)^0,f,c
 32272  01D3B6  2EE8               	decfsz	wreg,f,c
 32273  01D3B8  D7F9               	goto	u7745
 32274  01D3BA  5009               	movf	(btemp+8)^0,w,c
 32275  01D3BC  100A               	iorwf	(btemp+9)^0,w,c
 32276  01D3BE  100B               	iorwf	(btemp+10)^0,w,c
 32277  01D3C0  100C               	iorwf	(btemp+11)^0,w,c
 32278  01D3C2  A4D8               	btfss	status,2,c
 32279  01D3C4  D002               	goto	u7750
 32280  01D3C6  0E01               	movlw	1
 32281  01D3C8  D001               	goto	u7760
 32282  01D3CA                     u7750:
 32283  01D3CA  0E00               	movlw	0
 32284  01D3CC                     u7760:
 32285  01D3CC  6E01               	movwf	btemp^0,c
 32286  01D3CE  6A02               	clrf	(btemp+1)^0,c
 32287  01D3D0  D004               	goto	l3388
 32288  01D3D2                     l10045:
 32289  01D3D2  0E04               	movlw	4
 32290  01D3D4                     L35:
 32291  01D3D4  6E01               	movwf	btemp^0,c
 32292  01D3D6  0E00               	movlw	0
 32293  01D3D8  6E02               	movwf	(btemp+1)^0,c
 32294  01D3DA                     l3388:
 32295                           
 32296                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 32297  01D3DA  0EF6               	movlw	246
 32298  01D3DC  26E1               	addwf	fsr1l,f,c
 32299  01D3DE  0EFF               	movlw	255
 32300  01D3E0  22E2               	addwfc	fsr1h,f,c
 32301  01D3E2  0012               	return		;funcret
 32302  01D3E4                     __end_of___fpclassifyf:
 32303                           	opt callstack 0
 32304                           
 32305 ;; *************** function ___fltol *****************
 32306 ;; Defined at:
 32307 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 32308 ;; Parameters:    Size  Location     Type
 32309 ;;  f1              4  [STACK] int 
 32310 ;; Auto vars:     Size  Location     Type
 32311 ;;  exp1            1  [STACK] unsigned char 
 32312 ;;  sign1           1  [STACK] unsigned char 
 32313 ;; Return value:  Size  Location     Type
 32314 ;;                  4  [STACK] long 
 32315 ;; Registers used:
 32316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 32317 ;; Tracked objects:
 32318 ;;		On entry : 0/0
 32319 ;;		On exit  : 0/0
 32320 ;;		Unchanged: 0/0
 32321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32326 ;;Total ram usage:        0 bytes
 32327 ;; Hardware stack levels used:    1
 32328 ;; Hardware stack levels required when called:   15
 32329 ;; This function calls:
 32330 ;;		Nothing
 32331 ;; This function is called by:
 32332 ;;		_main
 32333 ;;		_convert_dac_raw
 32334 ;;		_calc_bsoc
 32335 ;;		_init_bsoc
 32336 ;;		_efgtoa
 32337 ;; This function uses a reentrant model
 32338 ;;
 32339                           
 32340                           	psect	text107
 32341  01DB7E                     __ptext107:
 32342                           	opt callstack 0
 32343  01DB7E                     ___fltol:
 32344                           	opt callstack 0
 32345                           
 32346                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32347  01DB7E  52E6               	movf	postinc1,f,c
 32348  01DB80  52E6               	movf	postinc1,f,c
 32349                           
 32350                           ;stkvar	_f1 @ sp[(-2)+-4]
 32351                           
 32352                           ;incstack = 0
 32353 ;; hardware stack exceeded
 32354  01DB82  0EFA               	movlw	-6
 32355  01DB84  006F FF8C  F009    	movff	plusw1,btemp+8
 32356  01DB8A  0EFB               	movlw	-5
 32357  01DB8C  006F FF8C  F00A    	movff	plusw1,btemp+9
 32358  01DB92  0EFC               	movlw	-4
 32359  01DB94  006F FF8C  F00B    	movff	plusw1,btemp+10
 32360  01DB9A  0EFD               	movlw	-3
 32361  01DB9C  006F FF8C  F00C    	movff	plusw1,btemp+11
 32362  01DBA2  0E18               	movlw	24
 32363  01DBA4  D005               	goto	u8970
 32364  01DBA6                     u8975:
 32365  01DBA6  90D8               	bcf	status,0,c
 32366  01DBA8  320C               	rrcf	(btemp+11)^0,f,c
 32367  01DBAA  320B               	rrcf	(btemp+10)^0,f,c
 32368  01DBAC  320A               	rrcf	(btemp+9)^0,f,c
 32369  01DBAE  3209               	rrcf	(btemp+8)^0,f,c
 32370  01DBB0                     u8970:
 32371  01DBB0  2EE8               	decfsz	wreg,f,c
 32372  01DBB2  D7F9               	goto	u8975
 32373                           
 32374                           ;stkvar	_exp1 @ sp[(-2)+0]
 32375  01DBB4  0EFE               	movlw	-2
 32376  01DBB6  0060  F027  FFE3   	movff	btemp+8,plusw1
 32377  01DBBC  0EFE               	movlw	-2
 32378  01DBBE  50E3               	movf	plusw1,w,c
 32379  01DBC0  A4D8               	btfss	status,2,c
 32380  01DBC2  D006               	goto	l10691
 32381  01DBC4                     u8980:
 32382  01DBC4  0E00               	movlw	0
 32383  01DBC6  6E01               	movwf	btemp^0,c
 32384  01DBC8  6A02               	clrf	(btemp+1)^0,c
 32385  01DBCA  6A03               	clrf	(btemp+2)^0,c
 32386  01DBCC  6A04               	clrf	(btemp+3)^0,c
 32387  01DBCE  D08B               	goto	l3004
 32388  01DBD0                     l10691:
 32389                           
 32390                           ;stkvar	_f1 @ sp[(-2)+-4]
 32391  01DBD0  0EFA               	movlw	-6
 32392  01DBD2  006F FF8C  F009    	movff	plusw1,btemp+8
 32393  01DBD8  0EFB               	movlw	-5
 32394  01DBDA  006F FF8C  F00A    	movff	plusw1,btemp+9
 32395  01DBE0  0EFC               	movlw	-4
 32396  01DBE2  006F FF8C  F00B    	movff	plusw1,btemp+10
 32397  01DBE8  0EFD               	movlw	-3
 32398  01DBEA  006F FF8C  F00C    	movff	plusw1,btemp+11
 32399  01DBF0  0E20               	movlw	32
 32400  01DBF2  D005               	goto	u8990
 32401  01DBF4                     u8995:
 32402  01DBF4  90D8               	bcf	status,0,c
 32403  01DBF6  320C               	rrcf	(btemp+11)^0,f,c
 32404  01DBF8  320B               	rrcf	(btemp+10)^0,f,c
 32405  01DBFA  320A               	rrcf	(btemp+9)^0,f,c
 32406  01DBFC  3209               	rrcf	(btemp+8)^0,f,c
 32407  01DBFE                     u8990:
 32408  01DBFE  2EE8               	decfsz	wreg,f,c
 32409  01DC00  D7F9               	goto	u8995
 32410                           
 32411                           ;stkvar	_sign1 @ sp[(-2)+1]
 32412  01DC02  0EFF               	movlw	-1
 32413  01DC04  0060  F027  FFE3   	movff	btemp+8,plusw1
 32414                           
 32415                           ;stkvar	_f1 @ sp[(-2)+-4]
 32416  01DC0A  0EFC               	movlw	-4
 32417  01DC0C  8EE3               	bsf	plusw1,7,c
 32418                           
 32419                           ;stkvar	_f1 @ sp[(-2)+-4]
 32420  01DC0E  50E1               	movf	fsr1l,w,c
 32421  01DC10  0FFA               	addlw	-6
 32422  01DC12  6ED9               	movwf	fsr2l,c
 32423  01DC14  50E2               	movf	fsr1h,w,c
 32424  01DC16  6EDA               	movwf	fsr2h,c
 32425  01DC18  0EFF               	movlw	255
 32426  01DC1A  22DA               	addwfc	fsr2h,f,c
 32427  01DC1C  0EFF               	movlw	255
 32428  01DC1E  16DE               	andwf	postinc2,f,c
 32429  01DC20  0EFF               	movlw	255
 32430  01DC22  16DE               	andwf	postinc2,f,c
 32431  01DC24  0EFF               	movlw	255
 32432  01DC26  16DE               	andwf	postinc2,f,c
 32433  01DC28  0E00               	movlw	0
 32434  01DC2A  16DE               	andwf	postinc2,f,c
 32435                           
 32436                           ;stkvar	_exp1 @ sp[(-2)+0]
 32437  01DC2C  0EFE               	movlw	-2
 32438  01DC2E  006F FF8C  F001    	movff	plusw1,btemp
 32439  01DC34  0E96               	movlw	150
 32440  01DC36  5E01               	subwf	btemp^0,f,c
 32441  01DC38  0EFE               	movlw	-2
 32442  01DC3A  0060  F007  FFE3   	movff	btemp,plusw1
 32443                           
 32444                           ;stkvar	_exp1 @ sp[(-2)+0]
 32445  01DC40  0EFE               	movlw	-2
 32446  01DC42  AEE3               	btfss	plusw1,7,c
 32447  01DC44  D014               	goto	l10709
 32448                           
 32449                           ;stkvar	_exp1 @ sp[(-2)+0]
 32450  01DC46  0EFE               	movlw	-2
 32451  01DC48  50E3               	movf	plusw1,w,c
 32452  01DC4A  0A80               	xorlw	128
 32453  01DC4C  0F97               	addlw	151
 32454  01DC4E  A0D8               	btfss	status,0,c
 32455  01DC50  D7B9               	goto	u8980
 32456  01DC52                     l10707:
 32457                           
 32458                           ;stkvar	_f1 @ sp[(-2)+-4]
 32459  01DC52  90D8               	bcf	status,0,c
 32460  01DC54  0EFD               	movlw	-3
 32461  01DC56  32E3               	rrcf	plusw1,f,c
 32462  01DC58  0EFC               	movlw	-4
 32463  01DC5A  32E3               	rrcf	plusw1,f,c
 32464  01DC5C  0EFB               	movlw	-5
 32465  01DC5E  32E3               	rrcf	plusw1,f,c
 32466  01DC60  0EFA               	movlw	-6
 32467  01DC62  32E3               	rrcf	plusw1,f,c
 32468                           
 32469                           ;stkvar	_exp1 @ sp[(-2)+0]
 32470  01DC64  0EFE               	movlw	-2
 32471  01DC66  2AE3               	incf	plusw1,f,c
 32472  01DC68  B4D8               	btfsc	status,2,c
 32473  01DC6A  D018               	goto	u9040
 32474  01DC6C  D7F2               	goto	l10707
 32475  01DC6E                     l10709:
 32476                           
 32477                           ;stkvar	_exp1 @ sp[(-2)+0]
 32478  01DC6E  0EFE               	movlw	-2
 32479  01DC70  006F FF8C  F001    	movff	plusw1,btemp
 32480  01DC76  0E1F               	movlw	31
 32481  01DC78  6401               	cpfsgt	btemp^0,c
 32482  01DC7A  D00C               	goto	l10717
 32483  01DC7C  D7A3               	goto	u8980
 32484  01DC7E                     l10715:
 32485                           
 32486                           ;stkvar	_f1 @ sp[(-2)+-4]
 32487  01DC7E  90D8               	bcf	status,0,c
 32488  01DC80  0EFA               	movlw	-6
 32489  01DC82  36E3               	rlcf	plusw1,f,c
 32490  01DC84  0EFB               	movlw	-5
 32491  01DC86  36E3               	rlcf	plusw1,f,c
 32492  01DC88  0EFC               	movlw	-4
 32493  01DC8A  36E3               	rlcf	plusw1,f,c
 32494  01DC8C  0EFD               	movlw	-3
 32495  01DC8E  36E3               	rlcf	plusw1,f,c
 32496                           
 32497                           ;stkvar	_exp1 @ sp[(-2)+0]
 32498  01DC90  0EFE               	movlw	-2
 32499  01DC92  06E3               	decf	plusw1,f,c
 32500  01DC94                     l10717:
 32501                           
 32502                           ;stkvar	_exp1 @ sp[(-2)+0]
 32503  01DC94  0EFE               	movlw	-2
 32504  01DC96  50E3               	movf	plusw1,w,c
 32505  01DC98  A4D8               	btfss	status,2,c
 32506  01DC9A  D7F1               	goto	l10715
 32507  01DC9C                     u9040:
 32508                           
 32509                           ;stkvar	_sign1 @ sp[(-2)+1]
 32510  01DC9C  0EFF               	movlw	-1
 32511  01DC9E  50E3               	movf	plusw1,w,c
 32512  01DCA0  B4D8               	btfsc	status,2,c
 32513  01DCA2  D011               	goto	u9060
 32514                           
 32515                           ;stkvar	_f1 @ sp[(-2)+-4]
 32516                           ;stkvar	_f1 @ sp[(-2)+-4]
 32517  01DCA4  0EFA               	movlw	-6
 32518  01DCA6  6CE3               	negf	plusw1,c
 32519  01DCA8  0EFB               	movlw	-5
 32520  01DCAA  1EE3               	comf	plusw1,f,c
 32521  01DCAC  0EFC               	movlw	-4
 32522  01DCAE  1EE3               	comf	plusw1,f,c
 32523  01DCB0  0EFD               	movlw	-3
 32524  01DCB2  1EE3               	comf	plusw1,f,c
 32525  01DCB4  E308               	bnc	u9060
 32526  01DCB6  0EFB               	movlw	-5
 32527  01DCB8  2AE3               	incf	plusw1,f,c
 32528  01DCBA  E305               	bnc	u9060
 32529  01DCBC  0EFC               	movlw	-4
 32530  01DCBE  2AE3               	incf	plusw1,f,c
 32531  01DCC0  E302               	bnc	u9060
 32532  01DCC2  0EFD               	movlw	-3
 32533  01DCC4  2AE3               	incf	plusw1,f,c
 32534  01DCC6                     u9060:
 32535                           
 32536                           ;stkvar	_f1 @ sp[(-2)+-4]
 32537  01DCC6  0EFA               	movlw	-6
 32538  01DCC8  006F FF8C  F001    	movff	plusw1,btemp
 32539  01DCCE  0EFB               	movlw	-5
 32540  01DCD0  006F FF8C  F002    	movff	plusw1,btemp+1
 32541  01DCD6  0EFC               	movlw	-4
 32542  01DCD8  006F FF8C  F003    	movff	plusw1,btemp+2
 32543  01DCDE  0EFD               	movlw	-3
 32544  01DCE0  006F FF8C  F004    	movff	plusw1,btemp+3
 32545  01DCE6                     l3004:
 32546                           
 32547                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 32548  01DCE6  0EFA               	movlw	250
 32549  01DCE8  26E1               	addwf	fsr1l,f,c
 32550  01DCEA  0EFF               	movlw	255
 32551  01DCEC  22E2               	addwfc	fsr1h,f,c
 32552  01DCEE  0012               	return		;funcret
 32553  01DCF0                     __end_of___fltol:
 32554                           	opt callstack 0
 32555                           
 32556 ;; *************** function ___flneg *****************
 32557 ;; Defined at:
 32558 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 32559 ;; Parameters:    Size  Location     Type
 32560 ;;  f1              4  [STACK] long 
 32561 ;; Auto vars:     Size  Location     Type
 32562 ;;		None
 32563 ;; Return value:  Size  Location     Type
 32564 ;;                  4  [STACK] long 
 32565 ;; Registers used:
 32566 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 32567 ;; Tracked objects:
 32568 ;;		On entry : 0/0
 32569 ;;		On exit  : 0/0
 32570 ;;		Unchanged: 0/0
 32571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32576 ;;Total ram usage:        0 bytes
 32577 ;; Hardware stack levels used:    1
 32578 ;; Hardware stack levels required when called:   15
 32579 ;; This function calls:
 32580 ;;		Nothing
 32581 ;; This function is called by:
 32582 ;;		_calc_bsoc
 32583 ;;		_efgtoa
 32584 ;; This function uses a reentrant model
 32585 ;;
 32586                           
 32587                           	psect	text108
 32588  001252                     __ptext108:
 32589                           	opt callstack 0
 32590  001252                     ___flneg:
 32591                           	opt callstack 0
 32592                           
 32593                           ;stkvar	_f1 @ sp[(0)+-4]
 32594                           
 32595                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32596                           ;incstack = 0
 32597 ;; hardware stack exceeded
 32598  001252  0EFC               	movlw	-4
 32599  001254  50E3               	movf	plusw1,w,c
 32600  001256  E10A               	bnz	u8960
 32601  001258  0EFD               	movlw	-3
 32602  00125A  50E3               	movf	plusw1,w,c
 32603  00125C  E107               	bnz	u8960
 32604  00125E  0EFE               	movlw	-2
 32605  001260  50E3               	movf	plusw1,w,c
 32606  001262  E104               	bnz	u8960
 32607  001264  0EFF               	movlw	-1
 32608  001266  50E3               	movf	plusw1,w,c
 32609  001268  B4D8               	btfsc	status,2,c
 32610  00126A  D002               	goto	l10681
 32611  00126C                     u8960:
 32612                           
 32613                           ;stkvar	_f1 @ sp[(0)+-4]
 32614  00126C  0EFF               	movlw	-1
 32615  00126E  7EE3               	btg	plusw1,7,c
 32616  001270                     l10681:
 32617                           
 32618                           ;stkvar	_f1 @ sp[(0)+-4]
 32619  001270  0EFC               	movlw	-4
 32620  001272  006F FF8C  F001    	movff	plusw1,btemp
 32621  001278  0EFD               	movlw	-3
 32622  00127A  006F FF8C  F002    	movff	plusw1,btemp+1
 32623  001280  0EFE               	movlw	-2
 32624  001282  006F FF8C  F003    	movff	plusw1,btemp+2
 32625  001288  0EFF               	movlw	-1
 32626  00128A  006F FF8C  F004    	movff	plusw1,btemp+3
 32627                           
 32628                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 32629  001290  52E5               	movf	postdec1,f,c
 32630  001292  52E5               	movf	postdec1,f,c
 32631  001294  52E5               	movf	postdec1,f,c
 32632  001296  52E5               	movf	postdec1,f,c
 32633  001298  0012               	return		;funcret
 32634  00129A                     __end_of___flneg:
 32635                           	opt callstack 0
 32636                           
 32637 ;; *************** function ___fleq *****************
 32638 ;; Defined at:
 32639 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 32640 ;; Parameters:    Size  Location     Type
 32641 ;;  ff1             4  [STACK] long 
 32642 ;;  ff2             4  [STACK] long 
 32643 ;; Auto vars:     Size  Location     Type
 32644 ;;		None
 32645 ;; Return value:  Size  Location     Type
 32646 ;;		None               void
 32647 ;; Registers used:
 32648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 32649 ;; Tracked objects:
 32650 ;;		On entry : 0/0
 32651 ;;		On exit  : 0/0
 32652 ;;		Unchanged: 0/0
 32653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32658 ;;Total ram usage:        0 bytes
 32659 ;; Hardware stack levels used:    1
 32660 ;; Hardware stack levels required when called:   15
 32661 ;; This function calls:
 32662 ;;		Nothing
 32663 ;; This function is called by:
 32664 ;;		_efgtoa
 32665 ;; This function uses a reentrant model
 32666 ;;
 32667                           
 32668                           	psect	text109
 32669  01FA86                     __ptext109:
 32670                           	opt callstack 0
 32671  01FA86                     ___fleq:
 32672                           	opt callstack 0
 32673                           
 32674                           ;stkvar	_ff1 @ sp[(0)+-4]
 32675                           
 32676                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32677                           ;incstack = 0
 32678 ;; hardware stack exceeded
 32679  01FA86  50E1               	movf	fsr1l,w,c
 32680  01FA88  0FFC               	addlw	-4
 32681  01FA8A  6ED9               	movwf	fsr2l,c
 32682  01FA8C  50E2               	movf	fsr1h,w,c
 32683  01FA8E  6EDA               	movwf	fsr2h,c
 32684  01FA90  0EFF               	movlw	255
 32685  01FA92  22DA               	addwfc	fsr2h,f,c
 32686  01FA94  0E00               	movlw	0
 32687  01FA96  14DE               	andwf	postinc2,w,c
 32688  01FA98  6E09               	movwf	(btemp+8)^0,c
 32689  01FA9A  0E00               	movlw	0
 32690  01FA9C  14DE               	andwf	postinc2,w,c
 32691  01FA9E  6E0A               	movwf	(btemp+9)^0,c
 32692  01FAA0  0E80               	movlw	128
 32693  01FAA2  14DE               	andwf	postinc2,w,c
 32694  01FAA4  6E0B               	movwf	(btemp+10)^0,c
 32695  01FAA6  0E7F               	movlw	127
 32696  01FAA8  14DE               	andwf	postinc2,w,c
 32697  01FAAA  6E0C               	movwf	(btemp+11)^0,c
 32698  01FAAC  5009               	movf	(btemp+8)^0,w,c
 32699  01FAAE  100A               	iorwf	(btemp+9)^0,w,c
 32700  01FAB0  100B               	iorwf	(btemp+10)^0,w,c
 32701  01FAB2  100C               	iorwf	(btemp+11)^0,w,c
 32702  01FAB4  A4D8               	btfss	status,2,c
 32703  01FAB6  D008               	goto	l10639
 32704                           
 32705                           ;stkvar	_ff1 @ sp[(0)+-4]
 32706  01FAB8  0EFC               	movlw	-4
 32707  01FABA  6AE3               	clrf	plusw1,c
 32708  01FABC  0EFD               	movlw	-3
 32709  01FABE  6AE3               	clrf	plusw1,c
 32710  01FAC0  0EFE               	movlw	-2
 32711  01FAC2  6AE3               	clrf	plusw1,c
 32712  01FAC4  0EFF               	movlw	-1
 32713  01FAC6  6AE3               	clrf	plusw1,c
 32714  01FAC8                     l10639:
 32715                           
 32716                           ;stkvar	_ff2 @ sp[(0)+-8]
 32717  01FAC8  50E1               	movf	fsr1l,w,c
 32718  01FACA  0FF8               	addlw	-8
 32719  01FACC  6ED9               	movwf	fsr2l,c
 32720  01FACE  50E2               	movf	fsr1h,w,c
 32721  01FAD0  6EDA               	movwf	fsr2h,c
 32722  01FAD2  0EFF               	movlw	255
 32723  01FAD4  22DA               	addwfc	fsr2h,f,c
 32724  01FAD6  0E00               	movlw	0
 32725  01FAD8  14DE               	andwf	postinc2,w,c
 32726  01FADA  6E09               	movwf	(btemp+8)^0,c
 32727  01FADC  0E00               	movlw	0
 32728  01FADE  14DE               	andwf	postinc2,w,c
 32729  01FAE0  6E0A               	movwf	(btemp+9)^0,c
 32730  01FAE2  0E80               	movlw	128
 32731  01FAE4  14DE               	andwf	postinc2,w,c
 32732  01FAE6  6E0B               	movwf	(btemp+10)^0,c
 32733  01FAE8  0E7F               	movlw	127
 32734  01FAEA  14DE               	andwf	postinc2,w,c
 32735  01FAEC  6E0C               	movwf	(btemp+11)^0,c
 32736  01FAEE  5009               	movf	(btemp+8)^0,w,c
 32737  01FAF0  100A               	iorwf	(btemp+9)^0,w,c
 32738  01FAF2  100B               	iorwf	(btemp+10)^0,w,c
 32739  01FAF4  100C               	iorwf	(btemp+11)^0,w,c
 32740  01FAF6  A4D8               	btfss	status,2,c
 32741  01FAF8  D008               	goto	l10643
 32742                           
 32743                           ;stkvar	_ff2 @ sp[(0)+-8]
 32744  01FAFA  0EF8               	movlw	-8
 32745  01FAFC  6AE3               	clrf	plusw1,c
 32746  01FAFE  0EF9               	movlw	-7
 32747  01FB00  6AE3               	clrf	plusw1,c
 32748  01FB02  0EFA               	movlw	-6
 32749  01FB04  6AE3               	clrf	plusw1,c
 32750  01FB06  0EFB               	movlw	-5
 32751  01FB08  6AE3               	clrf	plusw1,c
 32752  01FB0A                     l10643:
 32753                           
 32754                           ;stkvar	_ff2 @ sp[(0)+-8]
 32755                           ;stkvar	_ff1 @ sp[(0)+-4]
 32756  01FB0A  50E1               	movf	fsr1l,w,c
 32757  01FB0C  0FFC               	addlw	-4
 32758  01FB0E  6ED9               	movwf	fsr2l,c
 32759  01FB10  50E2               	movf	fsr1h,w,c
 32760  01FB12  6EDA               	movwf	fsr2h,c
 32761  01FB14  0EFF               	movlw	255
 32762  01FB16  22DA               	addwfc	fsr2h,f,c
 32763  01FB18  0EF8               	movlw	-8
 32764  01FB1A  50E3               	movf	plusw1,w,c
 32765  01FB1C  18DE               	xorwf	postinc2,w,c
 32766  01FB1E  E10D               	bnz	u8900
 32767  01FB20  0EF9               	movlw	-7
 32768  01FB22  50E3               	movf	plusw1,w,c
 32769  01FB24  18DE               	xorwf	postinc2,w,c
 32770  01FB26  E109               	bnz	u8900
 32771  01FB28  0EFA               	movlw	-6
 32772  01FB2A  50E3               	movf	plusw1,w,c
 32773  01FB2C  18DE               	xorwf	postinc2,w,c
 32774  01FB2E  E105               	bnz	u8900
 32775  01FB30  0EFB               	movlw	-5
 32776  01FB32  50E3               	movf	plusw1,w,c
 32777  01FB34  18DE               	xorwf	postinc2,w,c
 32778  01FB36  B4D8               	btfsc	status,2,c
 32779  01FB38  D002               	goto	l10647
 32780  01FB3A                     u8900:
 32781  01FB3A  9001               	bcf	btemp& (0+255),0,c
 32782  01FB3C  D001               	goto	l2966
 32783  01FB3E                     l10647:
 32784  01FB3E  8001               	bsf	btemp& (0+255),0,c
 32785  01FB40                     l2966:
 32786                           
 32787                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 32788  01FB40  0EF8               	movlw	248
 32789  01FB42  26E1               	addwf	fsr1l,f,c
 32790  01FB44  0EFF               	movlw	255
 32791  01FB46  22E2               	addwfc	fsr1h,f,c
 32792  01FB48  0012               	return		;funcret
 32793  01FB4A                     __end_of___fleq:
 32794                           	opt callstack 0
 32795                           
 32796 ;; *************** function ___awmod *****************
 32797 ;; Defined at:
 32798 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 32799 ;; Parameters:    Size  Location     Type
 32800 ;;  dividend        2  [STACK] int 
 32801 ;;  divisor         2  [STACK] int 
 32802 ;; Auto vars:     Size  Location     Type
 32803 ;;  sign            1  [STACK] unsigned char 
 32804 ;;  counter         1  [STACK] unsigned char 
 32805 ;; Return value:  Size  Location     Type
 32806 ;;                  2  [STACK] int 
 32807 ;; Registers used:
 32808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 32809 ;; Tracked objects:
 32810 ;;		On entry : 0/3
 32811 ;;		On exit  : 0/0
 32812 ;;		Unchanged: 0/0
 32813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32818 ;;Total ram usage:        0 bytes
 32819 ;; Hardware stack levels used:    1
 32820 ;; Hardware stack levels required when called:   15
 32821 ;; This function calls:
 32822 ;;		Nothing
 32823 ;; This function is called by:
 32824 ;;		_efgtoa
 32825 ;;		_asctime
 32826 ;; This function uses a reentrant model
 32827 ;;
 32828                           
 32829                           	psect	text110
 32830  01ED8A                     __ptext110:
 32831                           	opt callstack 0
 32832  01ED8A                     ___awmod:
 32833                           	opt callstack 0
 32834                           
 32835                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32836  01ED8A  52E6               	movf	postinc1,f,c
 32837  01ED8C  52E6               	movf	postinc1,f,c
 32838                           
 32839                           ;stkvar	_sign @ sp[(-2)+0]
 32840                           
 32841                           ;incstack = 0
 32842 ;; hardware stack exceeded
 32843  01ED8E  0EFE               	movlw	-2
 32844  01ED90  6AE3               	clrf	plusw1,c
 32845                           
 32846                           ;stkvar	_dividend @ sp[(-2)+-2]
 32847  01ED92  0EFD               	movlw	-3
 32848  01ED94  AEE3               	btfss	plusw1,7,c
 32849  01ED96  D009               	goto	l10605
 32850                           
 32851                           ;stkvar	_dividend @ sp[(-2)+-2]
 32852                           ;stkvar	_dividend @ sp[(-2)+-2]
 32853  01ED98  0EFC               	movlw	-4
 32854  01ED9A  6CE3               	negf	plusw1,c
 32855  01ED9C  0EFD               	movlw	-3
 32856  01ED9E  1EE3               	comf	plusw1,f,c
 32857  01EDA0  B0D8               	btfsc	status,0,c
 32858  01EDA2  2AE3               	incf	plusw1,f,c
 32859                           
 32860                           ;stkvar	_sign @ sp[(-2)+0]
 32861  01EDA4  0EFE               	movlw	-2
 32862  01EDA6  6AE3               	clrf	plusw1,c
 32863  01EDA8  2AE3               	incf	plusw1,f,c
 32864  01EDAA                     l10605:
 32865                           
 32866                           ;stkvar	_divisor @ sp[(-2)+-4]
 32867  01EDAA  0EFB               	movlw	-5
 32868  01EDAC  AEE3               	btfss	plusw1,7,c
 32869  01EDAE  D006               	goto	l10609
 32870                           
 32871                           ;stkvar	_divisor @ sp[(-2)+-4]
 32872                           ;stkvar	_divisor @ sp[(-2)+-4]
 32873  01EDB0  0EFA               	movlw	-6
 32874  01EDB2  6CE3               	negf	plusw1,c
 32875  01EDB4  0EFB               	movlw	-5
 32876  01EDB6  1EE3               	comf	plusw1,f,c
 32877  01EDB8  B0D8               	btfsc	status,0,c
 32878  01EDBA  2AE3               	incf	plusw1,f,c
 32879  01EDBC                     l10609:
 32880                           
 32881                           ;stkvar	_divisor @ sp[(-2)+-4]
 32882  01EDBC  0EFA               	movlw	-6
 32883  01EDBE  006F FF8C  F001    	movff	plusw1,btemp
 32884  01EDC4  0EFB               	movlw	-5
 32885  01EDC6  50E3               	movf	plusw1,w,c
 32886  01EDC8  1001               	iorwf	btemp^0,w,c
 32887  01EDCA  B4D8               	btfsc	status,2,c
 32888  01EDCC  D053               	goto	u8860
 32889                           
 32890                           ;stkvar	_counter @ sp[(-2)+1]
 32891  01EDCE  0EFF               	movlw	-1
 32892  01EDD0  6AE3               	clrf	plusw1,c
 32893  01EDD2  D012               	goto	L36
 32894  01EDD4                     l10613:
 32895                           
 32896                           ;stkvar	_divisor @ sp[(-2)+-4]
 32897  01EDD4  0EFA               	movlw	-6
 32898  01EDD6  50E3               	movf	plusw1,w,c
 32899  01EDD8  90D8               	bcf	status,0,c
 32900  01EDDA  34E8               	rlcf	wreg,w,c
 32901  01EDDC  6E01               	movwf	btemp^0,c
 32902  01EDDE  0EFA               	movlw	-6
 32903  01EDE0  0060  F007  FFE3   	movff	btemp,plusw1
 32904  01EDE6  0EFB               	movlw	-5
 32905  01EDE8  50E3               	movf	plusw1,w,c
 32906  01EDEA  34E8               	rlcf	wreg,w,c
 32907  01EDEC  6E01               	movwf	btemp^0,c
 32908  01EDEE  0EFB               	movlw	-5
 32909  01EDF0  0060  F007  FFE3   	movff	btemp,plusw1
 32910                           
 32911                           ;stkvar	_counter @ sp[(-2)+1]
 32912  01EDF6  0EFF               	movlw	-1
 32913  01EDF8                     L36:
 32914  01EDF8  2AE3               	incf	plusw1,f,c
 32915                           
 32916                           ;stkvar	_divisor @ sp[(-2)+-4]
 32917  01EDFA  0EFB               	movlw	-5
 32918  01EDFC  AEE3               	btfss	plusw1,7,c
 32919  01EDFE  D7EA               	goto	l10613
 32920  01EE00                     u8840:
 32921                           
 32922                           ;stkvar	_divisor @ sp[(-2)+-4]
 32923  01EE00  0EFA               	movlw	-6
 32924  01EE02  006F FF8C  F00B    	movff	plusw1,btemp+10
 32925  01EE08  0EFB               	movlw	-5
 32926  01EE0A  006F FF8C  F00C    	movff	plusw1,btemp+11
 32927                           
 32928                           ;stkvar	_dividend @ sp[(-2)+-2]
 32929  01EE10  0EFC               	movlw	-4
 32930  01EE12  006F FF8C  F009    	movff	plusw1,btemp+8
 32931  01EE18  0EFD               	movlw	-3
 32932  01EE1A  006F FF8C  F00A    	movff	plusw1,btemp+9
 32933  01EE20  500B               	movf	(btemp+10)^0,w,c
 32934  01EE22  5C09               	subwf	(btemp+8)^0,w,c
 32935  01EE24  500C               	movf	(btemp+11)^0,w,c
 32936  01EE26  580A               	subwfb	(btemp+9)^0,w,c
 32937  01EE28  A0D8               	btfss	status,0,c
 32938  01EE2A  D014               	goto	l10623
 32939                           
 32940                           ;stkvar	_divisor @ sp[(-2)+-4]
 32941                           ;stkvar	_dividend @ sp[(-2)+-2]
 32942  01EE2C  0EFC               	movlw	-4
 32943  01EE2E  50E3               	movf	plusw1,w,c
 32944  01EE30  6E01               	movwf	btemp^0,c
 32945  01EE32  0EFA               	movlw	-6
 32946  01EE34  50E3               	movf	plusw1,w,c
 32947  01EE36  5E01               	subwf	btemp^0,f,c
 32948  01EE38  0EFC               	movlw	-4
 32949  01EE3A  0060  F007  FFE3   	movff	btemp,plusw1
 32950  01EE40  0EFD               	movlw	-3
 32951  01EE42  50E3               	movf	plusw1,w,c
 32952  01EE44  6E01               	movwf	btemp^0,c
 32953  01EE46  0EFB               	movlw	-5
 32954  01EE48  50E3               	movf	plusw1,w,c
 32955  01EE4A  5A01               	subwfb	btemp^0,f,c
 32956  01EE4C  0EFD               	movlw	-3
 32957  01EE4E  0060  F007  FFE3   	movff	btemp,plusw1
 32958  01EE54                     l10623:
 32959                           
 32960                           ;stkvar	_divisor @ sp[(-2)+-4]
 32961  01EE54  90D8               	bcf	status,0,c
 32962  01EE56  0EFB               	movlw	-5
 32963  01EE58  32E3               	rrcf	plusw1,f,c
 32964  01EE5A  0EFA               	movlw	-6
 32965  01EE5C  32E3               	rrcf	plusw1,f,c
 32966                           
 32967                           ;stkvar	_counter @ sp[(-2)+1]
 32968  01EE5E  0EFF               	movlw	-1
 32969  01EE60  50E3               	movf	plusw1,w,c
 32970  01EE62  6E01               	movwf	btemp^0,c
 32971  01EE64  0E01               	movlw	1
 32972  01EE66  5E01               	subwf	btemp^0,f,c
 32973  01EE68  0EFF               	movlw	-1
 32974  01EE6A  0060  F007  FFE3   	movff	btemp,plusw1
 32975  01EE70  A4D8               	btfss	status,2,c
 32976  01EE72  D7C6               	goto	u8840
 32977  01EE74                     u8860:
 32978                           
 32979                           ;stkvar	_sign @ sp[(-2)+0]
 32980  01EE74  0EFE               	movlw	-2
 32981  01EE76  50E3               	movf	plusw1,w,c
 32982  01EE78  B4D8               	btfsc	status,2,c
 32983  01EE7A  D006               	goto	l10631
 32984                           
 32985                           ;stkvar	_dividend @ sp[(-2)+-2]
 32986                           ;stkvar	_dividend @ sp[(-2)+-2]
 32987  01EE7C  0EFC               	movlw	-4
 32988  01EE7E  6CE3               	negf	plusw1,c
 32989  01EE80  0EFD               	movlw	-3
 32990  01EE82  1EE3               	comf	plusw1,f,c
 32991  01EE84  B0D8               	btfsc	status,0,c
 32992  01EE86  2AE3               	incf	plusw1,f,c
 32993  01EE88                     l10631:
 32994                           
 32995                           ;stkvar	_dividend @ sp[(-2)+-2]
 32996  01EE88  0EFC               	movlw	-4
 32997  01EE8A  006F FF8C  F001    	movff	plusw1,btemp
 32998  01EE90  0EFD               	movlw	-3
 32999  01EE92  006F FF8C  F002    	movff	plusw1,btemp+1
 33000                           
 33001                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33002  01EE98  0EFA               	movlw	250
 33003  01EE9A  26E1               	addwf	fsr1l,f,c
 33004  01EE9C  0EFF               	movlw	255
 33005  01EE9E  22E2               	addwfc	fsr1h,f,c
 33006  01EEA0  0012               	return		;funcret
 33007  01EEA2                     __end_of___awmod:
 33008                           	opt callstack 0
 33009                           
 33010 ;; *************** function ___awdiv *****************
 33011 ;; Defined at:
 33012 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 33013 ;; Parameters:    Size  Location     Type
 33014 ;;  dividend        2  [STACK] int 
 33015 ;;  divisor         2  [STACK] int 
 33016 ;; Auto vars:     Size  Location     Type
 33017 ;;  quotient        2  [STACK] int 
 33018 ;;  sign            1  [STACK] unsigned char 
 33019 ;;  counter         1  [STACK] unsigned char 
 33020 ;; Return value:  Size  Location     Type
 33021 ;;                  2  [STACK] int 
 33022 ;; Registers used:
 33023 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 33024 ;; Tracked objects:
 33025 ;;		On entry : 0/3
 33026 ;;		On exit  : 0/0
 33027 ;;		Unchanged: 0/0
 33028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33033 ;;Total ram usage:        0 bytes
 33034 ;; Hardware stack levels used:    1
 33035 ;; Hardware stack levels required when called:   15
 33036 ;; This function calls:
 33037 ;;		Nothing
 33038 ;; This function is called by:
 33039 ;;		_efgtoa
 33040 ;;		_put2d
 33041 ;;		_asctime
 33042 ;;		_scan_trans
 33043 ;; This function uses a reentrant model
 33044 ;;
 33045                           
 33046                           	psect	text111
 33047  01E52C                     __ptext111:
 33048                           	opt callstack 0
 33049  01E52C                     ___awdiv:
 33050                           	opt callstack 0
 33051                           
 33052                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33053  01E52C  52E6               	movf	postinc1,f,c
 33054  01E52E  52E6               	movf	postinc1,f,c
 33055  01E530  52E6               	movf	postinc1,f,c
 33056  01E532  52E6               	movf	postinc1,f,c
 33057                           
 33058                           ;stkvar	_sign @ sp[(-4)+2]
 33059                           
 33060                           ;incstack = 0
 33061 ;; hardware stack exceeded
 33062  01E534  0EFE               	movlw	-2
 33063  01E536  6AE3               	clrf	plusw1,c
 33064                           
 33065                           ;stkvar	_divisor @ sp[(-4)+-4]
 33066  01E538  0EF9               	movlw	-7
 33067  01E53A  AEE3               	btfss	plusw1,7,c
 33068  01E53C  D009               	goto	l10559
 33069                           
 33070                           ;stkvar	_divisor @ sp[(-4)+-4]
 33071                           ;stkvar	_divisor @ sp[(-4)+-4]
 33072  01E53E  0EF8               	movlw	-8
 33073  01E540  6CE3               	negf	plusw1,c
 33074  01E542  0EF9               	movlw	-7
 33075  01E544  1EE3               	comf	plusw1,f,c
 33076  01E546  B0D8               	btfsc	status,0,c
 33077  01E548  2AE3               	incf	plusw1,f,c
 33078                           
 33079                           ;stkvar	_sign @ sp[(-4)+2]
 33080  01E54A  0EFE               	movlw	-2
 33081  01E54C  6AE3               	clrf	plusw1,c
 33082  01E54E  2AE3               	incf	plusw1,f,c
 33083  01E550                     l10559:
 33084                           
 33085                           ;stkvar	_dividend @ sp[(-4)+-2]
 33086  01E550  0EFB               	movlw	-5
 33087  01E552  AEE3               	btfss	plusw1,7,c
 33088  01E554  D008               	goto	l10565
 33089                           
 33090                           ;stkvar	_dividend @ sp[(-4)+-2]
 33091                           ;stkvar	_dividend @ sp[(-4)+-2]
 33092  01E556  0EFA               	movlw	-6
 33093  01E558  6CE3               	negf	plusw1,c
 33094  01E55A  0EFB               	movlw	-5
 33095  01E55C  1EE3               	comf	plusw1,f,c
 33096  01E55E  B0D8               	btfsc	status,0,c
 33097  01E560  2AE3               	incf	plusw1,f,c
 33098                           
 33099                           ;stkvar	_sign @ sp[(-4)+2]
 33100  01E562  0EFE               	movlw	-2
 33101  01E564  70E3               	btg	plusw1,0,c
 33102  01E566                     l10565:
 33103                           
 33104                           ;stkvar	_quotient @ sp[(-4)+0]
 33105  01E566  0EFC               	movlw	-4
 33106  01E568  6AE3               	clrf	plusw1,c
 33107  01E56A  0EFD               	movlw	-3
 33108  01E56C  6AE3               	clrf	plusw1,c
 33109                           
 33110                           ;stkvar	_divisor @ sp[(-4)+-4]
 33111  01E56E  0EF8               	movlw	-8
 33112  01E570  006F FF8C  F001    	movff	plusw1,btemp
 33113  01E576  0EF9               	movlw	-7
 33114  01E578  50E3               	movf	plusw1,w,c
 33115  01E57A  1001               	iorwf	btemp^0,w,c
 33116  01E57C  B4D8               	btfsc	status,2,c
 33117  01E57E  D066               	goto	u8790
 33118                           
 33119                           ;stkvar	_counter @ sp[(-4)+3]
 33120  01E580  0EFF               	movlw	-1
 33121  01E582  6AE3               	clrf	plusw1,c
 33122  01E584  D012               	goto	L37
 33123  01E586                     l10571:
 33124                           
 33125                           ;stkvar	_divisor @ sp[(-4)+-4]
 33126  01E586  0EF8               	movlw	-8
 33127  01E588  50E3               	movf	plusw1,w,c
 33128  01E58A  90D8               	bcf	status,0,c
 33129  01E58C  34E8               	rlcf	wreg,w,c
 33130  01E58E  6E01               	movwf	btemp^0,c
 33131  01E590  0EF8               	movlw	-8
 33132  01E592  0060  F007  FFE3   	movff	btemp,plusw1
 33133  01E598  0EF9               	movlw	-7
 33134  01E59A  50E3               	movf	plusw1,w,c
 33135  01E59C  34E8               	rlcf	wreg,w,c
 33136  01E59E  6E01               	movwf	btemp^0,c
 33137  01E5A0  0EF9               	movlw	-7
 33138  01E5A2  0060  F007  FFE3   	movff	btemp,plusw1
 33139                           
 33140                           ;stkvar	_counter @ sp[(-4)+3]
 33141  01E5A8  0EFF               	movlw	-1
 33142  01E5AA                     L37:
 33143  01E5AA  2AE3               	incf	plusw1,f,c
 33144                           
 33145                           ;stkvar	_divisor @ sp[(-4)+-4]
 33146  01E5AC  0EF9               	movlw	-7
 33147  01E5AE  AEE3               	btfss	plusw1,7,c
 33148  01E5B0  D7EA               	goto	l10571
 33149  01E5B2                     u8770:
 33150                           
 33151                           ;stkvar	_quotient @ sp[(-4)+0]
 33152  01E5B2  0EFC               	movlw	-4
 33153  01E5B4  50E3               	movf	plusw1,w,c
 33154  01E5B6  90D8               	bcf	status,0,c
 33155  01E5B8  34E8               	rlcf	wreg,w,c
 33156  01E5BA  6E01               	movwf	btemp^0,c
 33157  01E5BC  0EFC               	movlw	-4
 33158  01E5BE  0060  F007  FFE3   	movff	btemp,plusw1
 33159  01E5C4  0EFD               	movlw	-3
 33160  01E5C6  50E3               	movf	plusw1,w,c
 33161  01E5C8  34E8               	rlcf	wreg,w,c
 33162  01E5CA  6E01               	movwf	btemp^0,c
 33163  01E5CC  0EFD               	movlw	-3
 33164  01E5CE  0060  F007  FFE3   	movff	btemp,plusw1
 33165                           
 33166                           ;stkvar	_divisor @ sp[(-4)+-4]
 33167  01E5D4  0EF8               	movlw	-8
 33168  01E5D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 33169  01E5DC  0EF9               	movlw	-7
 33170  01E5DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 33171                           
 33172                           ;stkvar	_dividend @ sp[(-4)+-2]
 33173  01E5E4  0EFA               	movlw	-6
 33174  01E5E6  006F FF8C  F009    	movff	plusw1,btemp+8
 33175  01E5EC  0EFB               	movlw	-5
 33176  01E5EE  006F FF8C  F00A    	movff	plusw1,btemp+9
 33177  01E5F4  500B               	movf	(btemp+10)^0,w,c
 33178  01E5F6  5C09               	subwf	(btemp+8)^0,w,c
 33179  01E5F8  500C               	movf	(btemp+11)^0,w,c
 33180  01E5FA  580A               	subwfb	(btemp+9)^0,w,c
 33181  01E5FC  A0D8               	btfss	status,0,c
 33182  01E5FE  D016               	goto	l10585
 33183                           
 33184                           ;stkvar	_divisor @ sp[(-4)+-4]
 33185                           ;stkvar	_dividend @ sp[(-4)+-2]
 33186  01E600  0EFA               	movlw	-6
 33187  01E602  50E3               	movf	plusw1,w,c
 33188  01E604  6E01               	movwf	btemp^0,c
 33189  01E606  0EF8               	movlw	-8
 33190  01E608  50E3               	movf	plusw1,w,c
 33191  01E60A  5E01               	subwf	btemp^0,f,c
 33192  01E60C  0EFA               	movlw	-6
 33193  01E60E  0060  F007  FFE3   	movff	btemp,plusw1
 33194  01E614  0EFB               	movlw	-5
 33195  01E616  50E3               	movf	plusw1,w,c
 33196  01E618  6E01               	movwf	btemp^0,c
 33197  01E61A  0EF9               	movlw	-7
 33198  01E61C  50E3               	movf	plusw1,w,c
 33199  01E61E  5A01               	subwfb	btemp^0,f,c
 33200  01E620  0EFB               	movlw	-5
 33201  01E622  0060  F007  FFE3   	movff	btemp,plusw1
 33202                           
 33203                           ;stkvar	_quotient @ sp[(-4)+0]
 33204  01E628  0EFC               	movlw	-4
 33205  01E62A  80E3               	bsf	plusw1,0,c
 33206  01E62C                     l10585:
 33207                           
 33208                           ;stkvar	_divisor @ sp[(-4)+-4]
 33209  01E62C  90D8               	bcf	status,0,c
 33210  01E62E  0EF9               	movlw	-7
 33211  01E630  32E3               	rrcf	plusw1,f,c
 33212  01E632  0EF8               	movlw	-8
 33213  01E634  32E3               	rrcf	plusw1,f,c
 33214                           
 33215                           ;stkvar	_counter @ sp[(-4)+3]
 33216  01E636  0EFF               	movlw	-1
 33217  01E638  50E3               	movf	plusw1,w,c
 33218  01E63A  6E01               	movwf	btemp^0,c
 33219  01E63C  0E01               	movlw	1
 33220  01E63E  5E01               	subwf	btemp^0,f,c
 33221  01E640  0EFF               	movlw	-1
 33222  01E642  0060  F007  FFE3   	movff	btemp,plusw1
 33223  01E648  A4D8               	btfss	status,2,c
 33224  01E64A  D7B3               	goto	u8770
 33225  01E64C                     u8790:
 33226                           
 33227                           ;stkvar	_sign @ sp[(-4)+2]
 33228  01E64C  0EFE               	movlw	-2
 33229  01E64E  50E3               	movf	plusw1,w,c
 33230  01E650  B4D8               	btfsc	status,2,c
 33231  01E652  D006               	goto	l10593
 33232                           
 33233                           ;stkvar	_quotient @ sp[(-4)+0]
 33234                           ;stkvar	_quotient @ sp[(-4)+0]
 33235  01E654  0EFC               	movlw	-4
 33236  01E656  6CE3               	negf	plusw1,c
 33237  01E658  0EFD               	movlw	-3
 33238  01E65A  1EE3               	comf	plusw1,f,c
 33239  01E65C  B0D8               	btfsc	status,0,c
 33240  01E65E  2AE3               	incf	plusw1,f,c
 33241  01E660                     l10593:
 33242                           
 33243                           ;stkvar	_quotient @ sp[(-4)+0]
 33244  01E660  0EFC               	movlw	-4
 33245  01E662  006F FF8C  F001    	movff	plusw1,btemp
 33246  01E668  0EFD               	movlw	-3
 33247  01E66A  006F FF8C  F002    	movff	plusw1,btemp+1
 33248                           
 33249                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 33250  01E670  0EF8               	movlw	248
 33251  01E672  26E1               	addwf	fsr1l,f,c
 33252  01E674  0EFF               	movlw	255
 33253  01E676  22E2               	addwfc	fsr1h,f,c
 33254  01E678  0012               	return		;funcret
 33255  01E67A                     __end_of___awdiv:
 33256                           	opt callstack 0
 33257                           
 33258 ;; *************** function _dtoa *****************
 33259 ;; Defined at:
 33260 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 33261 ;; Parameters:    Size  Location     Type
 33262 ;;  fp              2  [STACK] PTR struct _IO_FILE
 33263 ;;		 -> f(6), NULL(0), 
 33264 ;;  d               8  [STACK] long long 
 33265 ;; Auto vars:     Size  Location     Type
 33266 ;;  n               8  [STACK] long long 
 33267 ;;  i               2  [STACK] int 
 33268 ;;  s               2  [STACK] int 
 33269 ;;  w               2  [STACK] int 
 33270 ;;  p               2  [STACK] int 
 33271 ;; Return value:  Size  Location     Type
 33272 ;;                  2  [STACK] int 
 33273 ;; Registers used:
 33274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 33275 ;; Tracked objects:
 33276 ;;		On entry : 0/0
 33277 ;;		On exit  : 0/0
 33278 ;;		Unchanged: 0/0
 33279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33284 ;;Total ram usage:        0 bytes
 33285 ;; Hardware stack levels used:    1
 33286 ;; Hardware stack levels required when called:   20
 33287 ;; This function calls:
 33288 ;;		___aodiv
 33289 ;;		___aomod
 33290 ;;		_abs
 33291 ;;		_pad
 33292 ;; This function is called by:
 33293 ;;		_vfpfcnvrt
 33294 ;; This function uses a reentrant model
 33295 ;;
 33296                           
 33297                           	psect	text112
 33298  018900                     __ptext112:
 33299                           	opt callstack 0
 33300  018900                     _dtoa:
 33301                           	opt callstack 0
 33302                           
 33303                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 33304  018900  0E12               	movlw	18
 33305  018902  26E1               	addwf	fsr1l,f,c
 33306  018904  0E00               	movlw	0
 33307  018906  22E2               	addwfc	fsr1h,f,c
 33308                           
 33309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 33310                           ;stkvar	_d @ sp[(-18)+-10]
 33311                           
 33312                           ;incstack = 0
 33313 ;; hardware stack exceeded
 33314  018908  0EE4               	movlw	228
 33315  01890A  24E1               	addwf	fsr1l,w,c
 33316  01890C  6ED9               	movwf	fsr2l,c
 33317  01890E  0EFF               	movlw	255
 33318  018910  20E2               	addwfc	fsr1h,w,c
 33319  018912  6EDA               	movwf	fsr2h,c
 33320                           
 33321                           ;stkvar	_n @ sp[(-18)+2]
 33322  018914  0E08               	movlw	8
 33323  018916  6E01               	movwf	btemp^0,c
 33324  018918  0EF0               	movlw	-16
 33325  01891A                     us1428999:
 33326  01891A  006F FF7B FFE3     	movff	postinc2,plusw1
 33327  018920  28E8               	incf	wreg,w,c
 33328  018922  2E01               	decfsz	btemp^0,f,c
 33329  018924  D7FA               	bra	us1428999
 33330                           
 33331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 33332                           ;stkvar	_n @ sp[(-18)+2]
 33333  018926  0EF7               	movlw	-9
 33334  018928  AEE3               	btfss	plusw1,7,c
 33335  01892A  D002               	goto	u14290
 33336  01892C  0E01               	movlw	1
 33337  01892E  D001               	goto	u14300
 33338  018930                     u14290:
 33339  018930  0E00               	movlw	0
 33340  018932                     u14300:
 33341  018932  6E0B               	movwf	(btemp+10)^0,c
 33342  018934  6A0C               	clrf	(btemp+11)^0,c
 33343                           
 33344                           ;stkvar	_s @ sp[(-18)+12]
 33345  018936  0EFA               	movlw	-6
 33346  018938  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33347  01893E  0EFB               	movlw	-5
 33348  018940  0060  F033  FFE3   	movff	btemp+11,plusw1
 33349                           
 33350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 33351                           ;stkvar	_s @ sp[(-18)+12]
 33352  018946  0EFA               	movlw	-6
 33353  018948  006F FF8C  F001    	movff	plusw1,btemp
 33354  01894E  0EFB               	movlw	-5
 33355  018950  50E3               	movf	plusw1,w,c
 33356  018952  1001               	iorwf	btemp^0,w,c
 33357  018954  B4D8               	btfsc	status,2,c
 33358  018956  D025               	goto	u14320
 33359                           
 33360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 33361                           ;stkvar	_n @ sp[(-18)+2]
 33362                           ;stkvar	_n @ sp[(-18)+2]
 33363  018958  0EF0               	movlw	-16
 33364  01895A  6CE3               	negf	plusw1,c
 33365  01895C  0EF1               	movlw	-15
 33366  01895E  1EE3               	comf	plusw1,f,c
 33367  018960  0EF2               	movlw	-14
 33368  018962  1EE3               	comf	plusw1,f,c
 33369  018964  0EF3               	movlw	-13
 33370  018966  1EE3               	comf	plusw1,f,c
 33371  018968  0EF4               	movlw	-12
 33372  01896A  1EE3               	comf	plusw1,f,c
 33373  01896C  0EF5               	movlw	-11
 33374  01896E  1EE3               	comf	plusw1,f,c
 33375  018970  0EF6               	movlw	-10
 33376  018972  1EE3               	comf	plusw1,f,c
 33377  018974  0EF7               	movlw	-9
 33378  018976  1EE3               	comf	plusw1,f,c
 33379  018978  E314               	bnc	u14320
 33380  01897A  0EF1               	movlw	-15
 33381  01897C  2AE3               	incf	plusw1,f,c
 33382  01897E  E311               	bnc	u14320
 33383  018980  0EF2               	movlw	-14
 33384  018982  2AE3               	incf	plusw1,f,c
 33385  018984  E30E               	bnc	u14320
 33386  018986  0EF3               	movlw	-13
 33387  018988  2AE3               	incf	plusw1,f,c
 33388  01898A  E30B               	bnc	u14320
 33389  01898C  0EF4               	movlw	-12
 33390  01898E  2AE3               	incf	plusw1,f,c
 33391  018990  E308               	bnc	u14320
 33392  018992  0EF5               	movlw	-11
 33393  018994  2AE3               	incf	plusw1,f,c
 33394  018996  E305               	bnc	u14320
 33395  018998  0EF6               	movlw	-10
 33396  01899A  2AE3               	incf	plusw1,f,c
 33397  01899C  E302               	bnc	u14320
 33398  01899E  0EF7               	movlw	-9
 33399  0189A0  2AE3               	incf	plusw1,f,c
 33400  0189A2                     u14320:
 33401                           
 33402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 33403  0189A2  AE3D               	btfss	(_prec+1)^0,7,c
 33404                           
 33405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 33406  0189A4  923E               	bcf	_flags^0,1,c
 33407                           
 33408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 33409  0189A6  BE3D               	btfsc	(_prec+1)^0,7,c
 33410  0189A8  D005               	goto	u14340
 33411  0189AA  503D               	movf	(_prec+1)^0,w,c
 33412  0189AC  E110               	bnz	l15353
 33413  0189AE  043C               	decf	_prec^0,w,c
 33414  0189B0  B0D8               	btfsc	status,0,c
 33415  0189B2  D00D               	goto	l15353
 33416  0189B4                     u14340:
 33417  0189B4  0E01               	movlw	1
 33418  0189B6  6E0B               	movwf	(btemp+10)^0,c
 33419  0189B8  0E00               	movlw	0
 33420  0189BA  6E0C               	movwf	(btemp+11)^0,c
 33421                           
 33422                           ;stkvar	_p @ sp[(-18)+16]
 33423  0189BC  0EFE               	movlw	-2
 33424  0189BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33425  0189C4  0EFF               	movlw	-1
 33426  0189C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 33427  0189CC  D008               	goto	l2470
 33428  0189CE                     l15353:
 33429                           
 33430                           ;stkvar	_p @ sp[(-18)+16]
 33431  0189CE  0EFE               	movlw	-2
 33432  0189D0  0060  F0F3  FFE3   	movff	_prec,plusw1
 33433  0189D6  0EFF               	movlw	-1
 33434  0189D8  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 33435  0189DE                     l2470:
 33436                           
 33437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 33438                           ;stkvar	_w @ sp[(-18)+14]
 33439  0189DE  0EFC               	movlw	-4
 33440  0189E0  0060  F0EB  FFE3   	movff	_width,plusw1
 33441  0189E6  0EFD               	movlw	-3
 33442  0189E8  0060  F0EF  FFE3   	movff	_width+1,plusw1
 33443                           
 33444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 33445                           ;stkvar	_s @ sp[(-18)+12]
 33446  0189EE  0EFA               	movlw	-6
 33447  0189F0  006F FF8C  F001    	movff	plusw1,btemp
 33448  0189F6  0EFB               	movlw	-5
 33449  0189F8  50E3               	movf	plusw1,w,c
 33450  0189FA  1001               	iorwf	btemp^0,w,c
 33451  0189FC  A4D8               	btfss	status,2,c
 33452  0189FE  D002               	goto	u14360
 33453  018A00  A43E               	btfss	_flags^0,2,c
 33454  018A02  D00A               	goto	l15361
 33455  018A04                     u14360:
 33456                           
 33457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 33458                           ;stkvar	_w @ sp[(-18)+14]
 33459  018A04  50E1               	movf	fsr1l,w,c
 33460  018A06  0FFC               	addlw	-4
 33461  018A08  6ED9               	movwf	fsr2l,c
 33462  018A0A  50E2               	movf	fsr1h,w,c
 33463  018A0C  6EDA               	movwf	fsr2h,c
 33464  018A0E  0EFF               	movlw	255
 33465  018A10  22DA               	addwfc	fsr2h,f,c
 33466  018A12  06DE               	decf	postinc2,f,c
 33467  018A14  0E00               	movlw	0
 33468  018A16  5ADD               	subwfb	postdec2,f,c
 33469  018A18                     l15361:
 33470                           
 33471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 33472  018A18  0E4F               	movlw	79
 33473  018A1A  6E0B               	movwf	(btemp+10)^0,c
 33474  018A1C  0E00               	movlw	0
 33475  018A1E  6E0C               	movwf	(btemp+11)^0,c
 33476                           
 33477                           ;stkvar	_i @ sp[(-18)+10]
 33478  018A20  0EF8               	movlw	-8
 33479  018A22  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33480  018A28  0EF9               	movlw	-7
 33481  018A2A  0060  F033  FFE3   	movff	btemp+11,plusw1
 33482                           
 33483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 33484  018A30  0103               	movlb	3	; () banked
 33485  018A32  6BA3               	clrf	(_dbuf+79)& (0+255),b
 33486                           
 33487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 33488  018A34  D109               	goto	l15375
 33489  018A36                     l15365:
 33490                           
 33491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 33492                           ;stkvar	_i @ sp[(-18)+10]
 33493  018A36  50E1               	movf	fsr1l,w,c
 33494  018A38  0FF8               	addlw	-8
 33495  018A3A  6ED9               	movwf	fsr2l,c
 33496  018A3C  50E2               	movf	fsr1h,w,c
 33497  018A3E  6EDA               	movwf	fsr2h,c
 33498  018A40  0EFF               	movlw	255
 33499  018A42  22DA               	addwfc	fsr2h,f,c
 33500  018A44  06DE               	decf	postinc2,f,c
 33501  018A46  0E00               	movlw	0
 33502  018A48  5ADD               	subwfb	postdec2,f,c
 33503                           
 33504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 33505  018A4A  0E0A               	movlw	10
 33506  018A4C  6EE6               	movwf	postinc1,c
 33507  018A4E  0E00               	movlw	0
 33508  018A50  6EE6               	movwf	postinc1,c
 33509  018A52  0E00               	movlw	0
 33510  018A54  6EE6               	movwf	postinc1,c
 33511  018A56  0E00               	movlw	0
 33512  018A58  6EE6               	movwf	postinc1,c
 33513  018A5A  0E00               	movlw	0
 33514  018A5C  6EE6               	movwf	postinc1,c
 33515  018A5E  0E00               	movlw	0
 33516  018A60  6EE6               	movwf	postinc1,c
 33517  018A62  0E00               	movlw	0
 33518  018A64  6EE6               	movwf	postinc1,c
 33519  018A66  0E00               	movlw	0
 33520  018A68  6EE6               	movwf	postinc1,c
 33521                           
 33522                           ;stkvar	_n @ sp[(-26)+2]
 33523  018A6A  50E1               	movf	fsr1l,w,c
 33524  018A6C  0FE8               	addlw	-24
 33525  018A6E  6ED9               	movwf	fsr2l,c
 33526  018A70  50E2               	movf	fsr1h,w,c
 33527  018A72  6EDA               	movwf	fsr2h,c
 33528  018A74  0EFF               	movlw	255
 33529  018A76  22DA               	addwfc	fsr2h,f,c
 33530  018A78  006F FF7B FFE6     	movff	postinc2,postinc1
 33531  018A7E  006F FF7B FFE6     	movff	postinc2,postinc1
 33532  018A84  006F FF7B FFE6     	movff	postinc2,postinc1
 33533  018A8A  006F FF7B FFE6     	movff	postinc2,postinc1
 33534  018A90  006F FF7B FFE6     	movff	postinc2,postinc1
 33535  018A96  006F FF7B FFE6     	movff	postinc2,postinc1
 33536  018A9C  006F FF7B FFE6     	movff	postinc2,postinc1
 33537  018AA2  006F FF7B FFE6     	movff	postinc2,postinc1
 33538  018AA8  EC11  F0DF         	call	___aomod	;wreg free
 33539  018AAC  52E5               	movf	postdec1,f,c
 33540  018AAE  006F FF9C  F018    	movff	indf1,btemp+23
 33541  018AB4  52E5               	movf	postdec1,f,c
 33542  018AB6  006F FF9C  F017    	movff	indf1,btemp+22
 33543  018ABC  52E5               	movf	postdec1,f,c
 33544  018ABE  006F FF9C  F016    	movff	indf1,btemp+21
 33545  018AC4  52E5               	movf	postdec1,f,c
 33546  018AC6  006F FF9C  F015    	movff	indf1,btemp+20
 33547  018ACC  52E5               	movf	postdec1,f,c
 33548  018ACE  006F FF9C  F014    	movff	indf1,btemp+19
 33549  018AD4  52E5               	movf	postdec1,f,c
 33550  018AD6  006F FF9C  F013    	movff	indf1,btemp+18
 33551  018ADC  52E5               	movf	postdec1,f,c
 33552  018ADE  006F FF9C  F012    	movff	indf1,btemp+17
 33553  018AE4  52E5               	movf	postdec1,f,c
 33554  018AE6  006F FF9C  F011    	movff	indf1,btemp+16
 33555  018AEC  0EF8               	movlw	248
 33556  018AEE  26E1               	addwf	fsr1l,f,c
 33557  018AF0  0EFF               	movlw	255
 33558  018AF2  22E2               	addwfc	fsr1h,f,c
 33559  018AF4  0060  F044  F00B   	movff	btemp+16,btemp+10
 33560  018AFA  0060  F048  F00C   	movff	btemp+17,btemp+11
 33561  018B00  0060  F02F  FFE6   	movff	btemp+10,postinc1
 33562  018B06  0060  F033  FFE6   	movff	btemp+11,postinc1
 33563  018B0C  ECB9  F009         	call	_abs	;wreg free
 33564  018B10  0E30               	movlw	48
 33565  018B12  2601               	addwf	btemp^0,f,c
 33566                           
 33567                           ;stkvar	_i @ sp[(-18)+10]
 33568  018B14  0EF8               	movlw	-8
 33569  018B16  006F FF8C  F00B    	movff	plusw1,btemp+10
 33570  018B1C  0EF9               	movlw	-7
 33571  018B1E  006F FF8C  F00C    	movff	plusw1,btemp+11
 33572  018B24  0E54               	movlw	low _dbuf
 33573  018B26  240B               	addwf	(btemp+10)^0,w,c
 33574  018B28  6ED9               	movwf	fsr2l,c
 33575  018B2A  0E03               	movlw	high _dbuf
 33576  018B2C  200C               	addwfc	(btemp+11)^0,w,c
 33577  018B2E  6EDA               	movwf	fsr2h,c
 33578  018B30  0060  F007  FFDF   	movff	btemp,indf2
 33579                           
 33580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 33581                           ;stkvar	_p @ sp[(-18)+16]
 33582  018B36  50E1               	movf	fsr1l,w,c
 33583  018B38  0FFE               	addlw	-2
 33584  018B3A  6ED9               	movwf	fsr2l,c
 33585  018B3C  50E2               	movf	fsr1h,w,c
 33586  018B3E  6EDA               	movwf	fsr2h,c
 33587  018B40  0EFF               	movlw	255
 33588  018B42  22DA               	addwfc	fsr2h,f,c
 33589  018B44  06DE               	decf	postinc2,f,c
 33590  018B46  0E00               	movlw	0
 33591  018B48  5ADD               	subwfb	postdec2,f,c
 33592                           
 33593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 33594                           ;stkvar	_w @ sp[(-18)+14]
 33595  018B4A  50E1               	movf	fsr1l,w,c
 33596  018B4C  0FFC               	addlw	-4
 33597  018B4E  6ED9               	movwf	fsr2l,c
 33598  018B50  50E2               	movf	fsr1h,w,c
 33599  018B52  6EDA               	movwf	fsr2h,c
 33600  018B54  0EFF               	movlw	255
 33601  018B56  22DA               	addwfc	fsr2h,f,c
 33602  018B58  06DE               	decf	postinc2,f,c
 33603  018B5A  0E00               	movlw	0
 33604  018B5C  5ADD               	subwfb	postdec2,f,c
 33605                           
 33606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 33607  018B5E  0E0A               	movlw	10
 33608  018B60  6EE6               	movwf	postinc1,c
 33609  018B62  0E00               	movlw	0
 33610  018B64  6EE6               	movwf	postinc1,c
 33611  018B66  0E00               	movlw	0
 33612  018B68  6EE6               	movwf	postinc1,c
 33613  018B6A  0E00               	movlw	0
 33614  018B6C  6EE6               	movwf	postinc1,c
 33615  018B6E  0E00               	movlw	0
 33616  018B70  6EE6               	movwf	postinc1,c
 33617  018B72  0E00               	movlw	0
 33618  018B74  6EE6               	movwf	postinc1,c
 33619  018B76  0E00               	movlw	0
 33620  018B78  6EE6               	movwf	postinc1,c
 33621  018B7A  0E00               	movlw	0
 33622  018B7C  6EE6               	movwf	postinc1,c
 33623                           
 33624                           ;stkvar	_n @ sp[(-26)+2]
 33625  018B7E  50E1               	movf	fsr1l,w,c
 33626  018B80  0FE8               	addlw	-24
 33627  018B82  6ED9               	movwf	fsr2l,c
 33628  018B84  50E2               	movf	fsr1h,w,c
 33629  018B86  6EDA               	movwf	fsr2h,c
 33630  018B88  0EFF               	movlw	255
 33631  018B8A  22DA               	addwfc	fsr2h,f,c
 33632  018B8C  006F FF7B FFE6     	movff	postinc2,postinc1
 33633  018B92  006F FF7B FFE6     	movff	postinc2,postinc1
 33634  018B98  006F FF7B FFE6     	movff	postinc2,postinc1
 33635  018B9E  006F FF7B FFE6     	movff	postinc2,postinc1
 33636  018BA4  006F FF7B FFE6     	movff	postinc2,postinc1
 33637  018BAA  006F FF7B FFE6     	movff	postinc2,postinc1
 33638  018BB0  006F FF7B FFE6     	movff	postinc2,postinc1
 33639  018BB6  006F FF7B FFE6     	movff	postinc2,postinc1
 33640  018BBC  EC41  F0DA         	call	___aodiv	;wreg free
 33641  018BC0  52E5               	movf	postdec1,f,c
 33642  018BC2  006F FF9C  F018    	movff	indf1,btemp+23
 33643  018BC8  52E5               	movf	postdec1,f,c
 33644  018BCA  006F FF9C  F017    	movff	indf1,btemp+22
 33645  018BD0  52E5               	movf	postdec1,f,c
 33646  018BD2  006F FF9C  F016    	movff	indf1,btemp+21
 33647  018BD8  52E5               	movf	postdec1,f,c
 33648  018BDA  006F FF9C  F015    	movff	indf1,btemp+20
 33649  018BE0  52E5               	movf	postdec1,f,c
 33650  018BE2  006F FF9C  F014    	movff	indf1,btemp+19
 33651  018BE8  52E5               	movf	postdec1,f,c
 33652  018BEA  006F FF9C  F013    	movff	indf1,btemp+18
 33653  018BF0  52E5               	movf	postdec1,f,c
 33654  018BF2  006F FF9C  F012    	movff	indf1,btemp+17
 33655  018BF8  52E5               	movf	postdec1,f,c
 33656  018BFA  006F FF9C  F011    	movff	indf1,btemp+16
 33657  018C00  0EF8               	movlw	248
 33658  018C02  26E1               	addwf	fsr1l,f,c
 33659  018C04  0EFF               	movlw	255
 33660  018C06  22E2               	addwfc	fsr1h,f,c
 33661                           
 33662                           ;stkvar	_n @ sp[(-18)+2]
 33663  018C08  0EF0               	movlw	-16
 33664  018C0A  0060  F047  FFE3   	movff	btemp+16,plusw1
 33665  018C10  0EF1               	movlw	-15
 33666  018C12  0060  F04B  FFE3   	movff	btemp+17,plusw1
 33667  018C18  0EF2               	movlw	-14
 33668  018C1A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 33669  018C20  0EF3               	movlw	-13
 33670  018C22  0060  F053  FFE3   	movff	btemp+19,plusw1
 33671  018C28  0EF4               	movlw	-12
 33672  018C2A  0060  F057  FFE3   	movff	btemp+20,plusw1
 33673  018C30  0EF5               	movlw	-11
 33674  018C32  0060  F05B  FFE3   	movff	btemp+21,plusw1
 33675  018C38  0EF6               	movlw	-10
 33676  018C3A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 33677  018C40  0EF7               	movlw	-9
 33678  018C42  0060  F063  FFE3   	movff	btemp+23,plusw1
 33679  018C48                     l15375:
 33680                           
 33681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 33682                           ;stkvar	_i @ sp[(-18)+10]
 33683  018C48  0EF9               	movlw	-7
 33684  018C4A  BEE3               	btfsc	plusw1,7,c
 33685  018C4C  D036               	goto	u14410
 33686  018C4E  0EF9               	movlw	-7
 33687  018C50  50E3               	movf	plusw1,w,c
 33688  018C52  E104               	bnz	u14370
 33689  018C54  0EF8               	movlw	-8
 33690  018C56  04E3               	decf	plusw1,w,c
 33691  018C58  A0D8               	btfss	status,0,c
 33692  018C5A  D02F               	goto	u14410
 33693  018C5C                     u14370:
 33694                           
 33695                           ;stkvar	_n @ sp[(-18)+2]
 33696  018C5C  0EF0               	movlw	-16
 33697  018C5E  50E3               	movf	plusw1,w,c
 33698  018C60  E115               	bnz	u14381
 33699  018C62  0EF1               	movlw	-15
 33700  018C64  50E3               	movf	plusw1,w,c
 33701  018C66  E112               	bnz	u14381
 33702  018C68  0EF2               	movlw	-14
 33703  018C6A  50E3               	movf	plusw1,w,c
 33704  018C6C  E10F               	bnz	u14381
 33705  018C6E  0EF3               	movlw	-13
 33706  018C70  50E3               	movf	plusw1,w,c
 33707  018C72  E10C               	bnz	u14381
 33708  018C74  0EF4               	movlw	-12
 33709  018C76  50E3               	movf	plusw1,w,c
 33710  018C78  E109               	bnz	u14381
 33711  018C7A  0EF5               	movlw	-11
 33712  018C7C  50E3               	movf	plusw1,w,c
 33713  018C7E  E106               	bnz	u14381
 33714  018C80  0EF6               	movlw	-10
 33715  018C82  50E3               	movf	plusw1,w,c
 33716  018C84  E103               	bnz	u14381
 33717  018C86  0EF7               	movlw	-9
 33718  018C88  50E3               	movf	plusw1,w,c
 33719  018C8A  A4D8               	btfss	status,2,c
 33720  018C8C                     u14381:
 33721  018C8C  D6D4               	goto	l15365
 33722                           
 33723                           ;stkvar	_p @ sp[(-18)+16]
 33724  018C8E  0EFF               	movlw	-1
 33725  018C90  BEE3               	btfsc	plusw1,7,c
 33726  018C92  D007               	goto	u14390
 33727  018C94  0EFF               	movlw	-1
 33728  018C96  50E3               	movf	plusw1,w,c
 33729  018C98  E103               	bnz	u14391
 33730  018C9A  0EFE               	movlw	-2
 33731  018C9C  04E3               	decf	plusw1,w,c
 33732  018C9E  B0D8               	btfsc	status,0,c
 33733  018CA0                     u14391:
 33734  018CA0  D6CA               	goto	l15365
 33735  018CA2                     u14390:
 33736                           
 33737                           ;stkvar	_w @ sp[(-18)+14]
 33738  018CA2  0EFD               	movlw	-3
 33739  018CA4  BEE3               	btfsc	plusw1,7,c
 33740  018CA6  D009               	goto	u14410
 33741  018CA8  0EFD               	movlw	-3
 33742  018CAA  50E3               	movf	plusw1,w,c
 33743  018CAC  E104               	bnz	u14400
 33744  018CAE  0EFC               	movlw	-4
 33745  018CB0  04E3               	decf	plusw1,w,c
 33746  018CB2  A0D8               	btfss	status,0,c
 33747  018CB4  D002               	goto	u14410
 33748  018CB6                     u14400:
 33749  018CB6  B23E               	btfsc	_flags^0,1,c
 33750  018CB8  D6BE               	goto	l15365
 33751  018CBA                     u14410:
 33752                           
 33753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 33754                           ;stkvar	_s @ sp[(-18)+12]
 33755  018CBA  0EFA               	movlw	-6
 33756  018CBC  006F FF8C  F001    	movff	plusw1,btemp
 33757  018CC2  0EFB               	movlw	-5
 33758  018CC4  50E3               	movf	plusw1,w,c
 33759  018CC6  1001               	iorwf	btemp^0,w,c
 33760  018CC8  A4D8               	btfss	status,2,c
 33761  018CCA  D002               	goto	u14430
 33762  018CCC  A43E               	btfss	_flags^0,2,c
 33763  018CCE  D033               	goto	l15399
 33764  018CD0                     u14430:
 33765                           
 33766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 33767                           ;stkvar	_i @ sp[(-18)+10]
 33768  018CD0  50E1               	movf	fsr1l,w,c
 33769  018CD2  0FF8               	addlw	-8
 33770  018CD4  6ED9               	movwf	fsr2l,c
 33771  018CD6  50E2               	movf	fsr1h,w,c
 33772  018CD8  6EDA               	movwf	fsr2h,c
 33773  018CDA  0EFF               	movlw	255
 33774  018CDC  22DA               	addwfc	fsr2h,f,c
 33775  018CDE  06DE               	decf	postinc2,f,c
 33776  018CE0  0E00               	movlw	0
 33777  018CE2  5ADD               	subwfb	postdec2,f,c
 33778                           
 33779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 33780                           ;stkvar	_s @ sp[(-18)+12]
 33781  018CE4  0EFA               	movlw	-6
 33782  018CE6  006F FF8C  F001    	movff	plusw1,btemp
 33783  018CEC  0EFB               	movlw	-5
 33784  018CEE  50E3               	movf	plusw1,w,c
 33785  018CF0  1001               	iorwf	btemp^0,w,c
 33786  018CF2  A4D8               	btfss	status,2,c
 33787  018CF4  D002               	goto	l15395
 33788  018CF6  0E2B               	movlw	43
 33789  018CF8  D001               	goto	L38
 33790  018CFA                     l15395:
 33791  018CFA  0E2D               	movlw	45
 33792  018CFC                     L38:
 33793  018CFC  6E0B               	movwf	(btemp+10)^0,c
 33794  018CFE  0E00               	movlw	0
 33795  018D00  6E0C               	movwf	(btemp+11)^0,c
 33796                           
 33797                           ;stkvar	_dtoa$6822 @ sp[(-18)+0]
 33798  018D02  0EEE               	movlw	-18
 33799  018D04  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33800  018D0A  0EEF               	movlw	-17
 33801  018D0C  0060  F033  FFE3   	movff	btemp+11,plusw1
 33802                           
 33803                           ;stkvar	_dtoa$6822 @ sp[(-18)+0]
 33804                           ;stkvar	_i @ sp[(-18)+10]
 33805  018D12  0EF8               	movlw	-8
 33806  018D14  006F FF8C  F00B    	movff	plusw1,btemp+10
 33807  018D1A  0EF9               	movlw	-7
 33808  018D1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 33809  018D22  0E54               	movlw	low _dbuf
 33810  018D24  240B               	addwf	(btemp+10)^0,w,c
 33811  018D26  6ED9               	movwf	fsr2l,c
 33812  018D28  0E03               	movlw	high _dbuf
 33813  018D2A  200C               	addwfc	(btemp+11)^0,w,c
 33814  018D2C  6EDA               	movwf	fsr2h,c
 33815  018D2E  0EEE               	movlw	-18
 33816  018D30  006F FF8F FFDF     	movff	plusw1,indf2
 33817  018D36                     l15399:
 33818                           
 33819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 33820                           ;stkvar	_w @ sp[(-18)+14]
 33821  018D36  0EFC               	movlw	-4
 33822  018D38  006F FF8F FFE6     	movff	plusw1,postinc1
 33823  018D3E  006F FF8F FFE6     	movff	plusw1,postinc1
 33824                           
 33825                           ;stkvar	_i @ sp[(-20)+10]
 33826  018D44  0E54               	movlw	low _dbuf
 33827  018D46  6E0B               	movwf	(btemp+10)^0,c
 33828  018D48  0E03               	movlw	high _dbuf
 33829  018D4A  6E0C               	movwf	(btemp+11)^0,c
 33830  018D4C  0EF6               	movlw	-10
 33831  018D4E  50E3               	movf	plusw1,w,c
 33832  018D50  260B               	addwf	(btemp+10)^0,f,c
 33833  018D52  0EF7               	movlw	-9
 33834  018D54  50E3               	movf	plusw1,w,c
 33835  018D56  220C               	addwfc	(btemp+11)^0,f,c
 33836  018D58  0060  F02F  FFE6   	movff	btemp+10,postinc1
 33837  018D5E  0060  F033  FFE6   	movff	btemp+11,postinc1
 33838                           
 33839                           ;stkvar	_fp @ sp[(-22)+-2]
 33840  018D64  0EE8               	movlw	-24
 33841  018D66  006F FF8F FFE6     	movff	plusw1,postinc1
 33842  018D6C  006F FF8F FFE6     	movff	plusw1,postinc1
 33843  018D72  EC51  F0F7         	call	_pad	;wreg free
 33844                           
 33845                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 33846  018D76  0EE4               	movlw	228
 33847  018D78  26E1               	addwf	fsr1l,f,c
 33848  018D7A  0EFF               	movlw	255
 33849  018D7C  22E2               	addwfc	fsr1h,f,c
 33850  018D7E  0012               	return		;funcret
 33851  018D80                     __end_of_dtoa:
 33852                           	opt callstack 0
 33853                           
 33854 ;; *************** function _abs *****************
 33855 ;; Defined at:
 33856 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 33857 ;; Parameters:    Size  Location     Type
 33858 ;;  a               2  [STACK] int 
 33859 ;; Auto vars:     Size  Location     Type
 33860 ;;		None
 33861 ;; Return value:  Size  Location     Type
 33862 ;;                  2  [STACK] int 
 33863 ;; Registers used:
 33864 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 33865 ;; Tracked objects:
 33866 ;;		On entry : 0/3
 33867 ;;		On exit  : 0/0
 33868 ;;		Unchanged: 0/0
 33869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33874 ;;Total ram usage:        0 bytes
 33875 ;; Hardware stack levels used:    1
 33876 ;; Hardware stack levels required when called:   15
 33877 ;; This function calls:
 33878 ;;		Nothing
 33879 ;; This function is called by:
 33880 ;;		_dtoa
 33881 ;; This function uses a reentrant model
 33882 ;;
 33883                           
 33884                           	psect	text113
 33885  001372                     __ptext113:
 33886                           	opt callstack 0
 33887  001372                     _abs:
 33888                           	opt callstack 0
 33889                           
 33890                           ;stkvar	_a @ sp[(0)+-2]
 33891                           
 33892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33893                           ;incstack = 0
 33894 ;; hardware stack exceeded
 33895  001372  0EFF               	movlw	-1
 33896  001374  BEE3               	btfsc	plusw1,7,c
 33897  001376  D007               	goto	u7690
 33898  001378  0EFF               	movlw	-1
 33899  00137A  50E3               	movf	plusw1,w,c
 33900  00137C  E112               	bnz	l10021
 33901  00137E  0EFE               	movlw	-2
 33902  001380  04E3               	decf	plusw1,w,c
 33903  001382  B0D8               	btfsc	status,0,c
 33904  001384  D00E               	goto	l10021
 33905  001386                     u7690:
 33906                           
 33907                           ;stkvar	_a @ sp[(0)+-2]
 33908  001386  0EFE               	movlw	-2
 33909  001388  006F FF8C  F001    	movff	plusw1,btemp
 33910  00138E  1E01               	comf	btemp^0,f,c
 33911  001390  0EFF               	movlw	-1
 33912  001392  006F FF8C  F002    	movff	plusw1,btemp+1
 33913  001398  1E02               	comf	(btemp+1)^0,f,c
 33914  00139A  2A01               	incf	btemp^0,f,c
 33915  00139C  B4D8               	btfsc	status,2,c
 33916  00139E  2A02               	incf	(btemp+1)^0,f,c
 33917  0013A0  D008               	goto	l3396
 33918  0013A2                     l10021:
 33919                           
 33920                           ;stkvar	_a @ sp[(0)+-2]
 33921  0013A2  0EFE               	movlw	-2
 33922  0013A4  006F FF8C  F001    	movff	plusw1,btemp
 33923  0013AA  0EFF               	movlw	-1
 33924  0013AC  006F FF8C  F002    	movff	plusw1,btemp+1
 33925  0013B2                     l3396:
 33926                           
 33927                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 33928  0013B2  52E5               	movf	postdec1,f,c
 33929  0013B4  52E5               	movf	postdec1,f,c
 33930  0013B6  0012               	return		;funcret
 33931  0013B8                     __end_of_abs:
 33932                           	opt callstack 0
 33933                           
 33934 ;; *************** function ___aomod *****************
 33935 ;; Defined at:
 33936 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 33937 ;; Parameters:    Size  Location     Type
 33938 ;;  dividend        8  [STACK] long long 
 33939 ;;  divisor         8  [STACK] long long 
 33940 ;; Auto vars:     Size  Location     Type
 33941 ;;  sign            1  [STACK] unsigned char 
 33942 ;;  counter         1  [STACK] unsigned char 
 33943 ;; Return value:  Size  Location     Type
 33944 ;;                  8  [STACK] long long 
 33945 ;; Registers used:
 33946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 33947 ;; Tracked objects:
 33948 ;;		On entry : 0/0
 33949 ;;		On exit  : 0/0
 33950 ;;		Unchanged: 0/0
 33951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33956 ;;Total ram usage:        0 bytes
 33957 ;; Hardware stack levels used:    1
 33958 ;; Hardware stack levels required when called:   15
 33959 ;; This function calls:
 33960 ;;		Nothing
 33961 ;; This function is called by:
 33962 ;;		_dtoa
 33963 ;;		___secs_to_tm
 33964 ;;		_rule_to_secs
 33965 ;;		___year_to_secs
 33966 ;; This function uses a reentrant model
 33967 ;;
 33968                           
 33969                           	psect	text114
 33970  01BE22                     __ptext114:
 33971                           	opt callstack 0
 33972  01BE22                     ___aomod:
 33973                           	opt callstack 0
 33974                           
 33975                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 33976  01BE22  52E6               	movf	postinc1,f,c
 33977  01BE24  52E6               	movf	postinc1,f,c
 33978                           
 33979                           ;stkvar	_sign @ sp[(-2)+0]
 33980                           
 33981                           ;incstack = 0
 33982 ;; hardware stack exceeded
 33983  01BE26  0EFE               	movlw	-2
 33984  01BE28  6AE3               	clrf	plusw1,c
 33985                           
 33986                           ;stkvar	_dividend @ sp[(-2)+-8]
 33987  01BE2A  0EFD               	movlw	-3
 33988  01BE2C  AEE3               	btfss	plusw1,7,c
 33989  01BE2E  D028               	goto	l10205
 33990                           
 33991                           ;stkvar	_dividend @ sp[(-2)+-8]
 33992                           ;stkvar	_dividend @ sp[(-2)+-8]
 33993  01BE30  0EF6               	movlw	-10
 33994  01BE32  6CE3               	negf	plusw1,c
 33995  01BE34  0EF7               	movlw	-9
 33996  01BE36  1EE3               	comf	plusw1,f,c
 33997  01BE38  0EF8               	movlw	-8
 33998  01BE3A  1EE3               	comf	plusw1,f,c
 33999  01BE3C  0EF9               	movlw	-7
 34000  01BE3E  1EE3               	comf	plusw1,f,c
 34001  01BE40  0EFA               	movlw	-6
 34002  01BE42  1EE3               	comf	plusw1,f,c
 34003  01BE44  0EFB               	movlw	-5
 34004  01BE46  1EE3               	comf	plusw1,f,c
 34005  01BE48  0EFC               	movlw	-4
 34006  01BE4A  1EE3               	comf	plusw1,f,c
 34007  01BE4C  0EFD               	movlw	-3
 34008  01BE4E  1EE3               	comf	plusw1,f,c
 34009  01BE50  E314               	bnc	u8180
 34010  01BE52  0EF7               	movlw	-9
 34011  01BE54  2AE3               	incf	plusw1,f,c
 34012  01BE56  E311               	bnc	u8180
 34013  01BE58  0EF8               	movlw	-8
 34014  01BE5A  2AE3               	incf	plusw1,f,c
 34015  01BE5C  E30E               	bnc	u8180
 34016  01BE5E  0EF9               	movlw	-7
 34017  01BE60  2AE3               	incf	plusw1,f,c
 34018  01BE62  E30B               	bnc	u8180
 34019  01BE64  0EFA               	movlw	-6
 34020  01BE66  2AE3               	incf	plusw1,f,c
 34021  01BE68  E308               	bnc	u8180
 34022  01BE6A  0EFB               	movlw	-5
 34023  01BE6C  2AE3               	incf	plusw1,f,c
 34024  01BE6E  E305               	bnc	u8180
 34025  01BE70  0EFC               	movlw	-4
 34026  01BE72  2AE3               	incf	plusw1,f,c
 34027  01BE74  E302               	bnc	u8180
 34028  01BE76  0EFD               	movlw	-3
 34029  01BE78  2AE3               	incf	plusw1,f,c
 34030  01BE7A                     u8180:
 34031                           
 34032                           ;stkvar	_sign @ sp[(-2)+0]
 34033  01BE7A  0EFE               	movlw	-2
 34034  01BE7C  6AE3               	clrf	plusw1,c
 34035  01BE7E  2AE3               	incf	plusw1,f,c
 34036  01BE80                     l10205:
 34037                           
 34038                           ;stkvar	_divisor @ sp[(-2)+-16]
 34039  01BE80  0EF5               	movlw	-11
 34040  01BE82  AEE3               	btfss	plusw1,7,c
 34041  01BE84  D025               	goto	u8200
 34042                           
 34043                           ;stkvar	_divisor @ sp[(-2)+-16]
 34044                           ;stkvar	_divisor @ sp[(-2)+-16]
 34045  01BE86  0EEE               	movlw	-18
 34046  01BE88  6CE3               	negf	plusw1,c
 34047  01BE8A  0EEF               	movlw	-17
 34048  01BE8C  1EE3               	comf	plusw1,f,c
 34049  01BE8E  0EF0               	movlw	-16
 34050  01BE90  1EE3               	comf	plusw1,f,c
 34051  01BE92  0EF1               	movlw	-15
 34052  01BE94  1EE3               	comf	plusw1,f,c
 34053  01BE96  0EF2               	movlw	-14
 34054  01BE98  1EE3               	comf	plusw1,f,c
 34055  01BE9A  0EF3               	movlw	-13
 34056  01BE9C  1EE3               	comf	plusw1,f,c
 34057  01BE9E  0EF4               	movlw	-12
 34058  01BEA0  1EE3               	comf	plusw1,f,c
 34059  01BEA2  0EF5               	movlw	-11
 34060  01BEA4  1EE3               	comf	plusw1,f,c
 34061  01BEA6  E314               	bnc	u8200
 34062  01BEA8  0EEF               	movlw	-17
 34063  01BEAA  2AE3               	incf	plusw1,f,c
 34064  01BEAC  E311               	bnc	u8200
 34065  01BEAE  0EF0               	movlw	-16
 34066  01BEB0  2AE3               	incf	plusw1,f,c
 34067  01BEB2  E30E               	bnc	u8200
 34068  01BEB4  0EF1               	movlw	-15
 34069  01BEB6  2AE3               	incf	plusw1,f,c
 34070  01BEB8  E30B               	bnc	u8200
 34071  01BEBA  0EF2               	movlw	-14
 34072  01BEBC  2AE3               	incf	plusw1,f,c
 34073  01BEBE  E308               	bnc	u8200
 34074  01BEC0  0EF3               	movlw	-13
 34075  01BEC2  2AE3               	incf	plusw1,f,c
 34076  01BEC4  E305               	bnc	u8200
 34077  01BEC6  0EF4               	movlw	-12
 34078  01BEC8  2AE3               	incf	plusw1,f,c
 34079  01BECA  E302               	bnc	u8200
 34080  01BECC  0EF5               	movlw	-11
 34081  01BECE  2AE3               	incf	plusw1,f,c
 34082  01BED0                     u8200:
 34083                           
 34084                           ;stkvar	_divisor @ sp[(-2)+-16]
 34085  01BED0  0EEE               	movlw	-18
 34086  01BED2  50E3               	movf	plusw1,w,c
 34087  01BED4  E116               	bnz	u8210
 34088  01BED6  0EEF               	movlw	-17
 34089  01BED8  50E3               	movf	plusw1,w,c
 34090  01BEDA  E113               	bnz	u8210
 34091  01BEDC  0EF0               	movlw	-16
 34092  01BEDE  50E3               	movf	plusw1,w,c
 34093  01BEE0  E110               	bnz	u8210
 34094  01BEE2  0EF1               	movlw	-15
 34095  01BEE4  50E3               	movf	plusw1,w,c
 34096  01BEE6  E10D               	bnz	u8210
 34097  01BEE8  0EF2               	movlw	-14
 34098  01BEEA  50E3               	movf	plusw1,w,c
 34099  01BEEC  E10A               	bnz	u8210
 34100  01BEEE  0EF3               	movlw	-13
 34101  01BEF0  50E3               	movf	plusw1,w,c
 34102  01BEF2  E107               	bnz	u8210
 34103  01BEF4  0EF4               	movlw	-12
 34104  01BEF6  50E3               	movf	plusw1,w,c
 34105  01BEF8  E104               	bnz	u8210
 34106  01BEFA  0EF5               	movlw	-11
 34107  01BEFC  50E3               	movf	plusw1,w,c
 34108  01BEFE  B4D8               	btfsc	status,2,c
 34109  01BF00  D075               	goto	u8240
 34110  01BF02                     u8210:
 34111                           
 34112                           ;stkvar	_counter @ sp[(-2)+1]
 34113  01BF02  0EFF               	movlw	-1
 34114  01BF04  6AE3               	clrf	plusw1,c
 34115  01BF06  D012               	goto	L39
 34116  01BF08                     l10213:
 34117                           
 34118                           ;stkvar	_divisor @ sp[(-2)+-16]
 34119  01BF08  90D8               	bcf	status,0,c
 34120  01BF0A  0EEE               	movlw	-18
 34121  01BF0C  36E3               	rlcf	plusw1,f,c
 34122  01BF0E  0EEF               	movlw	-17
 34123  01BF10  36E3               	rlcf	plusw1,f,c
 34124  01BF12  0EF0               	movlw	-16
 34125  01BF14  36E3               	rlcf	plusw1,f,c
 34126  01BF16  0EF1               	movlw	-15
 34127  01BF18  36E3               	rlcf	plusw1,f,c
 34128  01BF1A  0EF2               	movlw	-14
 34129  01BF1C  36E3               	rlcf	plusw1,f,c
 34130  01BF1E  0EF3               	movlw	-13
 34131  01BF20  36E3               	rlcf	plusw1,f,c
 34132  01BF22  0EF4               	movlw	-12
 34133  01BF24  36E3               	rlcf	plusw1,f,c
 34134  01BF26  0EF5               	movlw	-11
 34135  01BF28  36E3               	rlcf	plusw1,f,c
 34136                           
 34137                           ;stkvar	_counter @ sp[(-2)+1]
 34138  01BF2A  0EFF               	movlw	-1
 34139  01BF2C                     L39:
 34140  01BF2C  2AE3               	incf	plusw1,f,c
 34141                           
 34142                           ;stkvar	_divisor @ sp[(-2)+-16]
 34143  01BF2E  0EF5               	movlw	-11
 34144  01BF30  AEE3               	btfss	plusw1,7,c
 34145  01BF32  D7EA               	goto	l10213
 34146  01BF34                     u8220:
 34147                           
 34148                           ;stkvar	_divisor @ sp[(-2)+-16]
 34149                           ;stkvar	_dividend @ sp[(-2)+-8]
 34150  01BF34  50E1               	movf	fsr1l,w,c
 34151  01BF36  0FF6               	addlw	-10
 34152  01BF38  6ED9               	movwf	fsr2l,c
 34153  01BF3A  50E2               	movf	fsr1h,w,c
 34154  01BF3C  6EDA               	movwf	fsr2h,c
 34155  01BF3E  0EFF               	movlw	255
 34156  01BF40  22DA               	addwfc	fsr2h,f,c
 34157  01BF42  0EEE               	movlw	-18
 34158  01BF44  50E3               	movf	plusw1,w,c
 34159  01BF46  5CDE               	subwf	postinc2,w,c
 34160  01BF48  0EEF               	movlw	-17
 34161  01BF4A  50E3               	movf	plusw1,w,c
 34162  01BF4C  58DE               	subwfb	postinc2,w,c
 34163  01BF4E  0EF0               	movlw	-16
 34164  01BF50  50E3               	movf	plusw1,w,c
 34165  01BF52  58DE               	subwfb	postinc2,w,c
 34166  01BF54  0EF1               	movlw	-15
 34167  01BF56  50E3               	movf	plusw1,w,c
 34168  01BF58  58DE               	subwfb	postinc2,w,c
 34169  01BF5A  0EF2               	movlw	-14
 34170  01BF5C  50E3               	movf	plusw1,w,c
 34171  01BF5E  58DE               	subwfb	postinc2,w,c
 34172  01BF60  0EF3               	movlw	-13
 34173  01BF62  50E3               	movf	plusw1,w,c
 34174  01BF64  58DE               	subwfb	postinc2,w,c
 34175  01BF66  0EF4               	movlw	-12
 34176  01BF68  50E3               	movf	plusw1,w,c
 34177  01BF6A  58DE               	subwfb	postinc2,w,c
 34178  01BF6C  0EF5               	movlw	-11
 34179  01BF6E  50E3               	movf	plusw1,w,c
 34180  01BF70  58DE               	subwfb	postinc2,w,c
 34181  01BF72  A0D8               	btfss	status,0,c
 34182  01BF74  D01F               	goto	l10221
 34183                           
 34184                           ;stkvar	_divisor @ sp[(-2)+-16]
 34185                           ;stkvar	_dividend @ sp[(-2)+-8]
 34186  01BF76  50E1               	movf	fsr1l,w,c
 34187  01BF78  0FF6               	addlw	-10
 34188  01BF7A  6ED9               	movwf	fsr2l,c
 34189  01BF7C  50E2               	movf	fsr1h,w,c
 34190  01BF7E  6EDA               	movwf	fsr2h,c
 34191  01BF80  0EFF               	movlw	255
 34192  01BF82  22DA               	addwfc	fsr2h,f,c
 34193  01BF84  0EEE               	movlw	-18
 34194  01BF86  50E3               	movf	plusw1,w,c
 34195  01BF88  5EDE               	subwf	postinc2,f,c
 34196  01BF8A  0EEF               	movlw	-17
 34197  01BF8C  50E3               	movf	plusw1,w,c
 34198  01BF8E  5ADE               	subwfb	postinc2,f,c
 34199  01BF90  0EF0               	movlw	-16
 34200  01BF92  50E3               	movf	plusw1,w,c
 34201  01BF94  5ADE               	subwfb	postinc2,f,c
 34202  01BF96  0EF1               	movlw	-15
 34203  01BF98  50E3               	movf	plusw1,w,c
 34204  01BF9A  5ADE               	subwfb	postinc2,f,c
 34205  01BF9C  0EF2               	movlw	-14
 34206  01BF9E  50E3               	movf	plusw1,w,c
 34207  01BFA0  5ADE               	subwfb	postinc2,f,c
 34208  01BFA2  0EF3               	movlw	-13
 34209  01BFA4  50E3               	movf	plusw1,w,c
 34210  01BFA6  5ADE               	subwfb	postinc2,f,c
 34211  01BFA8  0EF4               	movlw	-12
 34212  01BFAA  50E3               	movf	plusw1,w,c
 34213  01BFAC  5ADE               	subwfb	postinc2,f,c
 34214  01BFAE  0EF5               	movlw	-11
 34215  01BFB0  50E3               	movf	plusw1,w,c
 34216  01BFB2  5ADE               	subwfb	postinc2,f,c
 34217  01BFB4                     l10221:
 34218                           
 34219                           ;stkvar	_divisor @ sp[(-2)+-16]
 34220  01BFB4  90D8               	bcf	status,0,c
 34221  01BFB6  0EF5               	movlw	-11
 34222  01BFB8  32E3               	rrcf	plusw1,f,c
 34223  01BFBA  0EF4               	movlw	-12
 34224  01BFBC  32E3               	rrcf	plusw1,f,c
 34225  01BFBE  0EF3               	movlw	-13
 34226  01BFC0  32E3               	rrcf	plusw1,f,c
 34227  01BFC2  0EF2               	movlw	-14
 34228  01BFC4  32E3               	rrcf	plusw1,f,c
 34229  01BFC6  0EF1               	movlw	-15
 34230  01BFC8  32E3               	rrcf	plusw1,f,c
 34231  01BFCA  0EF0               	movlw	-16
 34232  01BFCC  32E3               	rrcf	plusw1,f,c
 34233  01BFCE  0EEF               	movlw	-17
 34234  01BFD0  32E3               	rrcf	plusw1,f,c
 34235  01BFD2  0EEE               	movlw	-18
 34236  01BFD4  32E3               	rrcf	plusw1,f,c
 34237                           
 34238                           ;stkvar	_counter @ sp[(-2)+1]
 34239  01BFD6  0EFF               	movlw	-1
 34240  01BFD8  50E3               	movf	plusw1,w,c
 34241  01BFDA  6E01               	movwf	btemp^0,c
 34242  01BFDC  0E01               	movlw	1
 34243  01BFDE  5E01               	subwf	btemp^0,f,c
 34244  01BFE0  0EFF               	movlw	-1
 34245  01BFE2  0060  F007  FFE3   	movff	btemp,plusw1
 34246  01BFE8  A4D8               	btfss	status,2,c
 34247  01BFEA  D7A4               	goto	u8220
 34248  01BFEC                     u8240:
 34249                           
 34250                           ;stkvar	_sign @ sp[(-2)+0]
 34251  01BFEC  0EFE               	movlw	-2
 34252  01BFEE  50E3               	movf	plusw1,w,c
 34253  01BFF0  B4D8               	btfsc	status,2,c
 34254  01BFF2  D025               	goto	u8260
 34255                           
 34256                           ;stkvar	_dividend @ sp[(-2)+-8]
 34257                           ;stkvar	_dividend @ sp[(-2)+-8]
 34258  01BFF4  0EF6               	movlw	-10
 34259  01BFF6  6CE3               	negf	plusw1,c
 34260  01BFF8  0EF7               	movlw	-9
 34261  01BFFA  1EE3               	comf	plusw1,f,c
 34262  01BFFC  0EF8               	movlw	-8
 34263  01BFFE  1EE3               	comf	plusw1,f,c
 34264  01C000  0EF9               	movlw	-7
 34265  01C002  1EE3               	comf	plusw1,f,c
 34266  01C004  0EFA               	movlw	-6
 34267  01C006  1EE3               	comf	plusw1,f,c
 34268  01C008  0EFB               	movlw	-5
 34269  01C00A  1EE3               	comf	plusw1,f,c
 34270  01C00C  0EFC               	movlw	-4
 34271  01C00E  1EE3               	comf	plusw1,f,c
 34272  01C010  0EFD               	movlw	-3
 34273  01C012  1EE3               	comf	plusw1,f,c
 34274  01C014  E314               	bnc	u8260
 34275  01C016  0EF7               	movlw	-9
 34276  01C018  2AE3               	incf	plusw1,f,c
 34277  01C01A  E311               	bnc	u8260
 34278  01C01C  0EF8               	movlw	-8
 34279  01C01E  2AE3               	incf	plusw1,f,c
 34280  01C020  E30E               	bnc	u8260
 34281  01C022  0EF9               	movlw	-7
 34282  01C024  2AE3               	incf	plusw1,f,c
 34283  01C026  E30B               	bnc	u8260
 34284  01C028  0EFA               	movlw	-6
 34285  01C02A  2AE3               	incf	plusw1,f,c
 34286  01C02C  E308               	bnc	u8260
 34287  01C02E  0EFB               	movlw	-5
 34288  01C030  2AE3               	incf	plusw1,f,c
 34289  01C032  E305               	bnc	u8260
 34290  01C034  0EFC               	movlw	-4
 34291  01C036  2AE3               	incf	plusw1,f,c
 34292  01C038  E302               	bnc	u8260
 34293  01C03A  0EFD               	movlw	-3
 34294  01C03C  2AE3               	incf	plusw1,f,c
 34295  01C03E                     u8260:
 34296                           
 34297                           ;stkvar	_dividend @ sp[(-2)+-8]
 34298  01C03E  0EF6               	movlw	246
 34299  01C040  24E1               	addwf	fsr1l,w,c
 34300  01C042  6ED9               	movwf	fsr2l,c
 34301  01C044  0EFF               	movlw	255
 34302  01C046  20E2               	addwfc	fsr1h,w,c
 34303  01C048  6EDA               	movwf	fsr2h,c
 34304                           
 34305                           ;stkvar	?___aomod @ sp[(-2)+-8]
 34306  01C04A  0E08               	movlw	8
 34307  01C04C  6E01               	movwf	btemp^0,c
 34308  01C04E  0EF6               	movlw	-10
 34309  01C050                     us827999:
 34310  01C050  006F FF7B FFE3     	movff	postinc2,plusw1
 34311  01C056  28E8               	incf	wreg,w,c
 34312  01C058  2E01               	decfsz	btemp^0,f,c
 34313  01C05A  D7FA               	bra	us827999
 34314                           
 34315                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 34316  01C05C  52E5               	movf	postdec1,f,c
 34317  01C05E  52E5               	movf	postdec1,f,c
 34318  01C060  0012               	return		;funcret
 34319  01C062                     __end_of___aomod:
 34320                           	opt callstack 0
 34321                           
 34322 ;; *************** function ___aodiv *****************
 34323 ;; Defined at:
 34324 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 34325 ;; Parameters:    Size  Location     Type
 34326 ;;  dividend        8  [STACK] long long 
 34327 ;;  divisor         8  [STACK] long long 
 34328 ;; Auto vars:     Size  Location     Type
 34329 ;;  quotient        8  [STACK] long long 
 34330 ;;  sign            1  [STACK] unsigned char 
 34331 ;;  counter         1  [STACK] unsigned char 
 34332 ;; Return value:  Size  Location     Type
 34333 ;;                  8  [STACK] long long 
 34334 ;; Registers used:
 34335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 34336 ;; Tracked objects:
 34337 ;;		On entry : 0/0
 34338 ;;		On exit  : 0/0
 34339 ;;		Unchanged: 0/0
 34340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34345 ;;Total ram usage:        0 bytes
 34346 ;; Hardware stack levels used:    1
 34347 ;; Hardware stack levels required when called:   15
 34348 ;; This function calls:
 34349 ;;		Nothing
 34350 ;; This function is called by:
 34351 ;;		_dtoa
 34352 ;;		___secs_to_tm
 34353 ;;		___secs_to_zone
 34354 ;;		___year_to_secs
 34355 ;; This function uses a reentrant model
 34356 ;;
 34357                           
 34358                           	psect	text115
 34359  01B482                     __ptext115:
 34360                           	opt callstack 0
 34361  01B482                     ___aodiv:
 34362                           	opt callstack 0
 34363                           
 34364                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 34365  01B482  0E0A               	movlw	10
 34366  01B484  26E1               	addwf	fsr1l,f,c
 34367  01B486  0E00               	movlw	0
 34368  01B488  22E2               	addwfc	fsr1h,f,c
 34369                           
 34370                           ;stkvar	_sign @ sp[(-10)+8]
 34371                           
 34372                           ;incstack = 0
 34373 ;; hardware stack exceeded
 34374  01B48A  0EFE               	movlw	-2
 34375  01B48C  6AE3               	clrf	plusw1,c
 34376                           
 34377                           ;stkvar	_divisor @ sp[(-10)+-16]
 34378  01B48E  0EED               	movlw	-19
 34379  01B490  AEE3               	btfss	plusw1,7,c
 34380  01B492  D028               	goto	l10161
 34381                           
 34382                           ;stkvar	_divisor @ sp[(-10)+-16]
 34383                           ;stkvar	_divisor @ sp[(-10)+-16]
 34384  01B494  0EE6               	movlw	-26
 34385  01B496  6CE3               	negf	plusw1,c
 34386  01B498  0EE7               	movlw	-25
 34387  01B49A  1EE3               	comf	plusw1,f,c
 34388  01B49C  0EE8               	movlw	-24
 34389  01B49E  1EE3               	comf	plusw1,f,c
 34390  01B4A0  0EE9               	movlw	-23
 34391  01B4A2  1EE3               	comf	plusw1,f,c
 34392  01B4A4  0EEA               	movlw	-22
 34393  01B4A6  1EE3               	comf	plusw1,f,c
 34394  01B4A8  0EEB               	movlw	-21
 34395  01B4AA  1EE3               	comf	plusw1,f,c
 34396  01B4AC  0EEC               	movlw	-20
 34397  01B4AE  1EE3               	comf	plusw1,f,c
 34398  01B4B0  0EED               	movlw	-19
 34399  01B4B2  1EE3               	comf	plusw1,f,c
 34400  01B4B4  E314               	bnc	u8060
 34401  01B4B6  0EE7               	movlw	-25
 34402  01B4B8  2AE3               	incf	plusw1,f,c
 34403  01B4BA  E311               	bnc	u8060
 34404  01B4BC  0EE8               	movlw	-24
 34405  01B4BE  2AE3               	incf	plusw1,f,c
 34406  01B4C0  E30E               	bnc	u8060
 34407  01B4C2  0EE9               	movlw	-23
 34408  01B4C4  2AE3               	incf	plusw1,f,c
 34409  01B4C6  E30B               	bnc	u8060
 34410  01B4C8  0EEA               	movlw	-22
 34411  01B4CA  2AE3               	incf	plusw1,f,c
 34412  01B4CC  E308               	bnc	u8060
 34413  01B4CE  0EEB               	movlw	-21
 34414  01B4D0  2AE3               	incf	plusw1,f,c
 34415  01B4D2  E305               	bnc	u8060
 34416  01B4D4  0EEC               	movlw	-20
 34417  01B4D6  2AE3               	incf	plusw1,f,c
 34418  01B4D8  E302               	bnc	u8060
 34419  01B4DA  0EED               	movlw	-19
 34420  01B4DC  2AE3               	incf	plusw1,f,c
 34421  01B4DE                     u8060:
 34422                           
 34423                           ;stkvar	_sign @ sp[(-10)+8]
 34424  01B4DE  0EFE               	movlw	-2
 34425  01B4E0  6AE3               	clrf	plusw1,c
 34426  01B4E2  2AE3               	incf	plusw1,f,c
 34427  01B4E4                     l10161:
 34428                           
 34429                           ;stkvar	_dividend @ sp[(-10)+-8]
 34430  01B4E4  0EF5               	movlw	-11
 34431  01B4E6  AEE3               	btfss	plusw1,7,c
 34432  01B4E8  D027               	goto	l10167
 34433                           
 34434                           ;stkvar	_dividend @ sp[(-10)+-8]
 34435                           ;stkvar	_dividend @ sp[(-10)+-8]
 34436  01B4EA  0EEE               	movlw	-18
 34437  01B4EC  6CE3               	negf	plusw1,c
 34438  01B4EE  0EEF               	movlw	-17
 34439  01B4F0  1EE3               	comf	plusw1,f,c
 34440  01B4F2  0EF0               	movlw	-16
 34441  01B4F4  1EE3               	comf	plusw1,f,c
 34442  01B4F6  0EF1               	movlw	-15
 34443  01B4F8  1EE3               	comf	plusw1,f,c
 34444  01B4FA  0EF2               	movlw	-14
 34445  01B4FC  1EE3               	comf	plusw1,f,c
 34446  01B4FE  0EF3               	movlw	-13
 34447  01B500  1EE3               	comf	plusw1,f,c
 34448  01B502  0EF4               	movlw	-12
 34449  01B504  1EE3               	comf	plusw1,f,c
 34450  01B506  0EF5               	movlw	-11
 34451  01B508  1EE3               	comf	plusw1,f,c
 34452  01B50A  E314               	bnc	u8080
 34453  01B50C  0EEF               	movlw	-17
 34454  01B50E  2AE3               	incf	plusw1,f,c
 34455  01B510  E311               	bnc	u8080
 34456  01B512  0EF0               	movlw	-16
 34457  01B514  2AE3               	incf	plusw1,f,c
 34458  01B516  E30E               	bnc	u8080
 34459  01B518  0EF1               	movlw	-15
 34460  01B51A  2AE3               	incf	plusw1,f,c
 34461  01B51C  E30B               	bnc	u8080
 34462  01B51E  0EF2               	movlw	-14
 34463  01B520  2AE3               	incf	plusw1,f,c
 34464  01B522  E308               	bnc	u8080
 34465  01B524  0EF3               	movlw	-13
 34466  01B526  2AE3               	incf	plusw1,f,c
 34467  01B528  E305               	bnc	u8080
 34468  01B52A  0EF4               	movlw	-12
 34469  01B52C  2AE3               	incf	plusw1,f,c
 34470  01B52E  E302               	bnc	u8080
 34471  01B530  0EF5               	movlw	-11
 34472  01B532  2AE3               	incf	plusw1,f,c
 34473  01B534                     u8080:
 34474                           
 34475                           ;stkvar	_sign @ sp[(-10)+8]
 34476  01B534  0EFE               	movlw	-2
 34477  01B536  70E3               	btg	plusw1,0,c
 34478  01B538                     l10167:
 34479                           
 34480                           ;stkvar	_quotient @ sp[(-10)+0]
 34481  01B538  0E07               	movlw	7
 34482  01B53A  6E01               	movwf	btemp^0,c
 34483  01B53C  0EF6               	movlw	-10
 34484  01B53E                     u8091:
 34485  01B53E  6AE3               	clrf	plusw1,c
 34486  01B540  2AE8               	incf	wreg,f,c
 34487  01B542  0601               	decf	btemp^0,f,c
 34488  01B544  E2FC               	bc	u8091
 34489                           
 34490                           ;stkvar	_divisor @ sp[(-10)+-16]
 34491  01B546  0EE6               	movlw	-26
 34492  01B548  50E3               	movf	plusw1,w,c
 34493  01B54A  E116               	bnz	u8100
 34494  01B54C  0EE7               	movlw	-25
 34495  01B54E  50E3               	movf	plusw1,w,c
 34496  01B550  E113               	bnz	u8100
 34497  01B552  0EE8               	movlw	-24
 34498  01B554  50E3               	movf	plusw1,w,c
 34499  01B556  E110               	bnz	u8100
 34500  01B558  0EE9               	movlw	-23
 34501  01B55A  50E3               	movf	plusw1,w,c
 34502  01B55C  E10D               	bnz	u8100
 34503  01B55E  0EEA               	movlw	-22
 34504  01B560  50E3               	movf	plusw1,w,c
 34505  01B562  E10A               	bnz	u8100
 34506  01B564  0EEB               	movlw	-21
 34507  01B566  50E3               	movf	plusw1,w,c
 34508  01B568  E107               	bnz	u8100
 34509  01B56A  0EEC               	movlw	-20
 34510  01B56C  50E3               	movf	plusw1,w,c
 34511  01B56E  E104               	bnz	u8100
 34512  01B570  0EED               	movlw	-19
 34513  01B572  50E3               	movf	plusw1,w,c
 34514  01B574  B4D8               	btfsc	status,2,c
 34515  01B576  D088               	goto	u8130
 34516  01B578                     u8100:
 34517                           
 34518                           ;stkvar	_counter @ sp[(-10)+9]
 34519  01B578  0EFF               	movlw	-1
 34520  01B57A  6AE3               	clrf	plusw1,c
 34521  01B57C  D012               	goto	L40
 34522  01B57E                     l10173:
 34523                           
 34524                           ;stkvar	_divisor @ sp[(-10)+-16]
 34525  01B57E  90D8               	bcf	status,0,c
 34526  01B580  0EE6               	movlw	-26
 34527  01B582  36E3               	rlcf	plusw1,f,c
 34528  01B584  0EE7               	movlw	-25
 34529  01B586  36E3               	rlcf	plusw1,f,c
 34530  01B588  0EE8               	movlw	-24
 34531  01B58A  36E3               	rlcf	plusw1,f,c
 34532  01B58C  0EE9               	movlw	-23
 34533  01B58E  36E3               	rlcf	plusw1,f,c
 34534  01B590  0EEA               	movlw	-22
 34535  01B592  36E3               	rlcf	plusw1,f,c
 34536  01B594  0EEB               	movlw	-21
 34537  01B596  36E3               	rlcf	plusw1,f,c
 34538  01B598  0EEC               	movlw	-20
 34539  01B59A  36E3               	rlcf	plusw1,f,c
 34540  01B59C  0EED               	movlw	-19
 34541  01B59E  36E3               	rlcf	plusw1,f,c
 34542                           
 34543                           ;stkvar	_counter @ sp[(-10)+9]
 34544  01B5A0  0EFF               	movlw	-1
 34545  01B5A2                     L40:
 34546  01B5A2  2AE3               	incf	plusw1,f,c
 34547                           
 34548                           ;stkvar	_divisor @ sp[(-10)+-16]
 34549  01B5A4  0EED               	movlw	-19
 34550  01B5A6  AEE3               	btfss	plusw1,7,c
 34551  01B5A8  D7EA               	goto	l10173
 34552  01B5AA                     u8110:
 34553                           
 34554                           ;stkvar	_quotient @ sp[(-10)+0]
 34555  01B5AA  90D8               	bcf	status,0,c
 34556  01B5AC  0EF6               	movlw	-10
 34557  01B5AE  36E3               	rlcf	plusw1,f,c
 34558  01B5B0  0EF7               	movlw	-9
 34559  01B5B2  36E3               	rlcf	plusw1,f,c
 34560  01B5B4  0EF8               	movlw	-8
 34561  01B5B6  36E3               	rlcf	plusw1,f,c
 34562  01B5B8  0EF9               	movlw	-7
 34563  01B5BA  36E3               	rlcf	plusw1,f,c
 34564  01B5BC  0EFA               	movlw	-6
 34565  01B5BE  36E3               	rlcf	plusw1,f,c
 34566  01B5C0  0EFB               	movlw	-5
 34567  01B5C2  36E3               	rlcf	plusw1,f,c
 34568  01B5C4  0EFC               	movlw	-4
 34569  01B5C6  36E3               	rlcf	plusw1,f,c
 34570  01B5C8  0EFD               	movlw	-3
 34571  01B5CA  36E3               	rlcf	plusw1,f,c
 34572                           
 34573                           ;stkvar	_divisor @ sp[(-10)+-16]
 34574                           ;stkvar	_dividend @ sp[(-10)+-8]
 34575  01B5CC  50E1               	movf	fsr1l,w,c
 34576  01B5CE  0FEE               	addlw	-18
 34577  01B5D0  6ED9               	movwf	fsr2l,c
 34578  01B5D2  50E2               	movf	fsr1h,w,c
 34579  01B5D4  6EDA               	movwf	fsr2h,c
 34580  01B5D6  0EFF               	movlw	255
 34581  01B5D8  22DA               	addwfc	fsr2h,f,c
 34582  01B5DA  0EE6               	movlw	-26
 34583  01B5DC  50E3               	movf	plusw1,w,c
 34584  01B5DE  5CDE               	subwf	postinc2,w,c
 34585  01B5E0  0EE7               	movlw	-25
 34586  01B5E2  50E3               	movf	plusw1,w,c
 34587  01B5E4  58DE               	subwfb	postinc2,w,c
 34588  01B5E6  0EE8               	movlw	-24
 34589  01B5E8  50E3               	movf	plusw1,w,c
 34590  01B5EA  58DE               	subwfb	postinc2,w,c
 34591  01B5EC  0EE9               	movlw	-23
 34592  01B5EE  50E3               	movf	plusw1,w,c
 34593  01B5F0  58DE               	subwfb	postinc2,w,c
 34594  01B5F2  0EEA               	movlw	-22
 34595  01B5F4  50E3               	movf	plusw1,w,c
 34596  01B5F6  58DE               	subwfb	postinc2,w,c
 34597  01B5F8  0EEB               	movlw	-21
 34598  01B5FA  50E3               	movf	plusw1,w,c
 34599  01B5FC  58DE               	subwfb	postinc2,w,c
 34600  01B5FE  0EEC               	movlw	-20
 34601  01B600  50E3               	movf	plusw1,w,c
 34602  01B602  58DE               	subwfb	postinc2,w,c
 34603  01B604  0EED               	movlw	-19
 34604  01B606  50E3               	movf	plusw1,w,c
 34605  01B608  58DE               	subwfb	postinc2,w,c
 34606  01B60A  A0D8               	btfss	status,0,c
 34607  01B60C  D021               	goto	l10185
 34608                           
 34609                           ;stkvar	_divisor @ sp[(-10)+-16]
 34610                           ;stkvar	_dividend @ sp[(-10)+-8]
 34611  01B60E  50E1               	movf	fsr1l,w,c
 34612  01B610  0FEE               	addlw	-18
 34613  01B612  6ED9               	movwf	fsr2l,c
 34614  01B614  50E2               	movf	fsr1h,w,c
 34615  01B616  6EDA               	movwf	fsr2h,c
 34616  01B618  0EFF               	movlw	255
 34617  01B61A  22DA               	addwfc	fsr2h,f,c
 34618  01B61C  0EE6               	movlw	-26
 34619  01B61E  50E3               	movf	plusw1,w,c
 34620  01B620  5EDE               	subwf	postinc2,f,c
 34621  01B622  0EE7               	movlw	-25
 34622  01B624  50E3               	movf	plusw1,w,c
 34623  01B626  5ADE               	subwfb	postinc2,f,c
 34624  01B628  0EE8               	movlw	-24
 34625  01B62A  50E3               	movf	plusw1,w,c
 34626  01B62C  5ADE               	subwfb	postinc2,f,c
 34627  01B62E  0EE9               	movlw	-23
 34628  01B630  50E3               	movf	plusw1,w,c
 34629  01B632  5ADE               	subwfb	postinc2,f,c
 34630  01B634  0EEA               	movlw	-22
 34631  01B636  50E3               	movf	plusw1,w,c
 34632  01B638  5ADE               	subwfb	postinc2,f,c
 34633  01B63A  0EEB               	movlw	-21
 34634  01B63C  50E3               	movf	plusw1,w,c
 34635  01B63E  5ADE               	subwfb	postinc2,f,c
 34636  01B640  0EEC               	movlw	-20
 34637  01B642  50E3               	movf	plusw1,w,c
 34638  01B644  5ADE               	subwfb	postinc2,f,c
 34639  01B646  0EED               	movlw	-19
 34640  01B648  50E3               	movf	plusw1,w,c
 34641  01B64A  5ADE               	subwfb	postinc2,f,c
 34642                           
 34643                           ;stkvar	_quotient @ sp[(-10)+0]
 34644  01B64C  0EF6               	movlw	-10
 34645  01B64E  80E3               	bsf	plusw1,0,c
 34646  01B650                     l10185:
 34647                           
 34648                           ;stkvar	_divisor @ sp[(-10)+-16]
 34649  01B650  90D8               	bcf	status,0,c
 34650  01B652  0EED               	movlw	-19
 34651  01B654  32E3               	rrcf	plusw1,f,c
 34652  01B656  0EEC               	movlw	-20
 34653  01B658  32E3               	rrcf	plusw1,f,c
 34654  01B65A  0EEB               	movlw	-21
 34655  01B65C  32E3               	rrcf	plusw1,f,c
 34656  01B65E  0EEA               	movlw	-22
 34657  01B660  32E3               	rrcf	plusw1,f,c
 34658  01B662  0EE9               	movlw	-23
 34659  01B664  32E3               	rrcf	plusw1,f,c
 34660  01B666  0EE8               	movlw	-24
 34661  01B668  32E3               	rrcf	plusw1,f,c
 34662  01B66A  0EE7               	movlw	-25
 34663  01B66C  32E3               	rrcf	plusw1,f,c
 34664  01B66E  0EE6               	movlw	-26
 34665  01B670  32E3               	rrcf	plusw1,f,c
 34666                           
 34667                           ;stkvar	_counter @ sp[(-10)+9]
 34668  01B672  0EFF               	movlw	-1
 34669  01B674  50E3               	movf	plusw1,w,c
 34670  01B676  6E01               	movwf	btemp^0,c
 34671  01B678  0E01               	movlw	1
 34672  01B67A  5E01               	subwf	btemp^0,f,c
 34673  01B67C  0EFF               	movlw	-1
 34674  01B67E  0060  F007  FFE3   	movff	btemp,plusw1
 34675  01B684  A4D8               	btfss	status,2,c
 34676  01B686  D791               	goto	u8110
 34677  01B688                     u8130:
 34678                           
 34679                           ;stkvar	_sign @ sp[(-10)+8]
 34680  01B688  0EFE               	movlw	-2
 34681  01B68A  50E3               	movf	plusw1,w,c
 34682  01B68C  B4D8               	btfsc	status,2,c
 34683  01B68E  D025               	goto	u8150
 34684                           
 34685                           ;stkvar	_quotient @ sp[(-10)+0]
 34686                           ;stkvar	_quotient @ sp[(-10)+0]
 34687  01B690  0EF6               	movlw	-10
 34688  01B692  6CE3               	negf	plusw1,c
 34689  01B694  0EF7               	movlw	-9
 34690  01B696  1EE3               	comf	plusw1,f,c
 34691  01B698  0EF8               	movlw	-8
 34692  01B69A  1EE3               	comf	plusw1,f,c
 34693  01B69C  0EF9               	movlw	-7
 34694  01B69E  1EE3               	comf	plusw1,f,c
 34695  01B6A0  0EFA               	movlw	-6
 34696  01B6A2  1EE3               	comf	plusw1,f,c
 34697  01B6A4  0EFB               	movlw	-5
 34698  01B6A6  1EE3               	comf	plusw1,f,c
 34699  01B6A8  0EFC               	movlw	-4
 34700  01B6AA  1EE3               	comf	plusw1,f,c
 34701  01B6AC  0EFD               	movlw	-3
 34702  01B6AE  1EE3               	comf	plusw1,f,c
 34703  01B6B0  E314               	bnc	u8150
 34704  01B6B2  0EF7               	movlw	-9
 34705  01B6B4  2AE3               	incf	plusw1,f,c
 34706  01B6B6  E311               	bnc	u8150
 34707  01B6B8  0EF8               	movlw	-8
 34708  01B6BA  2AE3               	incf	plusw1,f,c
 34709  01B6BC  E30E               	bnc	u8150
 34710  01B6BE  0EF9               	movlw	-7
 34711  01B6C0  2AE3               	incf	plusw1,f,c
 34712  01B6C2  E30B               	bnc	u8150
 34713  01B6C4  0EFA               	movlw	-6
 34714  01B6C6  2AE3               	incf	plusw1,f,c
 34715  01B6C8  E308               	bnc	u8150
 34716  01B6CA  0EFB               	movlw	-5
 34717  01B6CC  2AE3               	incf	plusw1,f,c
 34718  01B6CE  E305               	bnc	u8150
 34719  01B6D0  0EFC               	movlw	-4
 34720  01B6D2  2AE3               	incf	plusw1,f,c
 34721  01B6D4  E302               	bnc	u8150
 34722  01B6D6  0EFD               	movlw	-3
 34723  01B6D8  2AE3               	incf	plusw1,f,c
 34724  01B6DA                     u8150:
 34725                           
 34726                           ;stkvar	_quotient @ sp[(-10)+0]
 34727  01B6DA  0EF6               	movlw	246
 34728  01B6DC  24E1               	addwf	fsr1l,w,c
 34729  01B6DE  6ED9               	movwf	fsr2l,c
 34730  01B6E0  0EFF               	movlw	255
 34731  01B6E2  20E2               	addwfc	fsr1h,w,c
 34732  01B6E4  6EDA               	movwf	fsr2h,c
 34733                           
 34734                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 34735  01B6E6  0E08               	movlw	8
 34736  01B6E8  6E01               	movwf	btemp^0,c
 34737  01B6EA  0EEE               	movlw	-18
 34738  01B6EC                     us816999:
 34739  01B6EC  006F FF7B FFE3     	movff	postinc2,plusw1
 34740  01B6F2  28E8               	incf	wreg,w,c
 34741  01B6F4  2E01               	decfsz	btemp^0,f,c
 34742  01B6F6  D7FA               	bra	us816999
 34743                           
 34744                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 34745  01B6F8  0EF6               	movlw	246
 34746  01B6FA  26E1               	addwf	fsr1l,f,c
 34747  01B6FC  0EFF               	movlw	255
 34748  01B6FE  22E2               	addwfc	fsr1h,f,c
 34749  01B700  0012               	return		;funcret
 34750  01B702                     __end_of___aodiv:
 34751                           	opt callstack 0
 34752                           
 34753 ;; *************** function _ctoa *****************
 34754 ;; Defined at:
 34755 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 34756 ;; Parameters:    Size  Location     Type
 34757 ;;  fp              2  [STACK] PTR struct _IO_FILE
 34758 ;;		 -> f(6), NULL(0), 
 34759 ;;  c               1  [STACK] unsigned char 
 34760 ;; Auto vars:     Size  Location     Type
 34761 ;;  w               2  [STACK] int 
 34762 ;;  l               2    0        int 
 34763 ;; Return value:  Size  Location     Type
 34764 ;;                  2  [STACK] int 
 34765 ;; Registers used:
 34766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 34767 ;; Tracked objects:
 34768 ;;		On entry : 0/0
 34769 ;;		On exit  : 0/0
 34770 ;;		Unchanged: 0/0
 34771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34776 ;;Total ram usage:        0 bytes
 34777 ;; Hardware stack levels used:    1
 34778 ;; Hardware stack levels required when called:   20
 34779 ;; This function calls:
 34780 ;;		_pad
 34781 ;; This function is called by:
 34782 ;;		_vfpfcnvrt
 34783 ;; This function uses a reentrant model
 34784 ;;
 34785                           
 34786                           	psect	text116
 34787  01FF78                     __ptext116:
 34788                           	opt callstack 0
 34789  01FF78                     _ctoa:
 34790                           	opt callstack 0
 34791                           
 34792                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34793  01FF78  52E6               	movf	postinc1,f,c
 34794  01FF7A  52E6               	movf	postinc1,f,c
 34795                           
 34796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 34797                           
 34798                           ;incstack = 0
 34799 ;; hardware stack exceeded
 34800  01FF7C  503A               	movf	_width^0,w,c
 34801  01FF7E  103B               	iorwf	(_width+1)^0,w,c
 34802  01FF80  A4D8               	btfss	status,2,c
 34803  01FF82  D009               	goto	l15327
 34804                           
 34805                           ;stkvar	_w @ sp[(-2)+0]
 34806  01FF84  0EFE               	movlw	-2
 34807  01FF86  0060  F0EB  FFE3   	movff	_width,plusw1
 34808  01FF8C  0EFF               	movlw	-1
 34809  01FF8E  0060  F0EF  FFE3   	movff	_width+1,plusw1
 34810  01FF94  D016               	goto	l15329
 34811  01FF96                     l15327:
 34812  01FF96  0EFF               	movlw	255
 34813  01FF98  6E0B               	movwf	(btemp+10)^0,c
 34814  01FF9A  0EFF               	movlw	255
 34815  01FF9C  6E0C               	movwf	(btemp+11)^0,c
 34816  01FF9E  0060  F0E8  F009   	movff	_width,btemp+8
 34817  01FFA4  0060  F0EC  F00A   	movff	_width+1,btemp+9
 34818  01FFAA  500B               	movf	(btemp+10)^0,w,c
 34819  01FFAC  2609               	addwf	(btemp+8)^0,f,c
 34820  01FFAE  500C               	movf	(btemp+11)^0,w,c
 34821  01FFB0  220A               	addwfc	(btemp+9)^0,f,c
 34822                           
 34823                           ;stkvar	_w @ sp[(-2)+0]
 34824  01FFB2  0EFE               	movlw	-2
 34825  01FFB4  0060  F027  FFE3   	movff	btemp+8,plusw1
 34826  01FFBA  0EFF               	movlw	-1
 34827  01FFBC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 34828  01FFC2                     l15329:
 34829                           
 34830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 34831                           ;stkvar	_c @ sp[(-2)+-3]
 34832  01FFC2  0EFB               	movlw	-5
 34833  01FFC4  006F FF8C  F354    	movff	plusw1,_dbuf
 34834                           
 34835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 34836  01FFCA  0103               	movlb	3	; () banked
 34837  01FFCC  6B55               	clrf	(_dbuf+1)& (0+255),b
 34838                           
 34839                           ; BSR set to: 3
 34840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 34841                           ;stkvar	_w @ sp[(-2)+0]
 34842  01FFCE  0EFE               	movlw	-2
 34843  01FFD0  006F FF8F FFE6     	movff	plusw1,postinc1
 34844  01FFD6  006F FF8F FFE6     	movff	plusw1,postinc1
 34845  01FFDC  0E54               	movlw	low _dbuf
 34846  01FFDE  6EE6               	movwf	postinc1,c
 34847  01FFE0  0E03               	movlw	high _dbuf
 34848  01FFE2  6EE6               	movwf	postinc1,c
 34849                           
 34850                           ;stkvar	_fp @ sp[(-6)+-2]
 34851  01FFE4  0EF8               	movlw	-8
 34852  01FFE6  006F FF8F FFE6     	movff	plusw1,postinc1
 34853  01FFEC  006F FF8F FFE6     	movff	plusw1,postinc1
 34854  01FFF2  EC51  F0F7         	call	_pad	;wreg free
 34855                           
 34856                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 34857  01FFF6  0EFB               	movlw	251
 34858  01FFF8  26E1               	addwf	fsr1l,f,c
 34859  01FFFA  0EFF               	movlw	255
 34860  01FFFC  22E2               	addwfc	fsr1h,f,c
 34861  01FFFE  0012               	return		;funcret
 34862  020000                     __end_of_ctoa:
 34863                           	opt callstack 0
 34864                           
 34865 ;; *************** function _pad *****************
 34866 ;; Defined at:
 34867 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 34868 ;; Parameters:    Size  Location     Type
 34869 ;;  fp              2  [STACK] PTR struct _IO_FILE
 34870 ;;		 -> f(6), NULL(0), 
 34871 ;;  buf             2  [STACK] PTR unsigned char 
 34872 ;;		 -> dbuf(80), 
 34873 ;;  p               2  [STACK] int 
 34874 ;; Auto vars:     Size  Location     Type
 34875 ;;  w               2  [STACK] int 
 34876 ;;  i               2  [STACK] int 
 34877 ;; Return value:  Size  Location     Type
 34878 ;;                  2  [STACK] int 
 34879 ;; Registers used:
 34880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 34881 ;; Tracked objects:
 34882 ;;		On entry : 0/3
 34883 ;;		On exit  : 0/0
 34884 ;;		Unchanged: 0/0
 34885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34890 ;;Total ram usage:        0 bytes
 34891 ;; Hardware stack levels used:    1
 34892 ;; Hardware stack levels required when called:   19
 34893 ;; This function calls:
 34894 ;;		_fputc
 34895 ;;		_fputs
 34896 ;;		_strlen
 34897 ;; This function is called by:
 34898 ;;		_ctoa
 34899 ;;		_dtoa
 34900 ;;		_efgtoa
 34901 ;;		_utoa
 34902 ;;		_xtoa
 34903 ;; This function uses a reentrant model
 34904 ;;
 34905                           
 34906                           	psect	text117
 34907  01EEA2                     __ptext117:
 34908                           	opt callstack 0
 34909  01EEA2                     _pad:
 34910                           	opt callstack 0
 34911                           
 34912                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34913  01EEA2  52E6               	movf	postinc1,f,c
 34914  01EEA4  52E6               	movf	postinc1,f,c
 34915  01EEA6  52E6               	movf	postinc1,f,c
 34916  01EEA8  52E6               	movf	postinc1,f,c
 34917                           
 34918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 34919                           
 34920                           ;incstack = 0
 34921 ;; hardware stack exceeded
 34922  01EEAA  A03E               	btfss	_flags^0,0,c
 34923  01EEAC  D010               	goto	l15289
 34924                           
 34925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 34926                           ;stkvar	_fp @ sp[(-4)+-2]
 34927  01EEAE  0EFA               	movlw	-6
 34928  01EEB0  006F FF8F FFE6     	movff	plusw1,postinc1
 34929  01EEB6  006F FF8F FFE6     	movff	plusw1,postinc1
 34930                           
 34931                           ;stkvar	_buf @ sp[(-6)+-4]
 34932  01EEBC  0EF6               	movlw	-10
 34933  01EEBE  006F FF8F FFE6     	movff	plusw1,postinc1
 34934  01EEC4  006F FF8F FFE6     	movff	plusw1,postinc1
 34935  01EECA  ECF5  F001         	call	_fputs	;wreg free
 34936  01EECE                     l15289:
 34937                           
 34938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 34939                           ;stkvar	_p @ sp[(-4)+-6]
 34940  01EECE  0EF7               	movlw	-9
 34941  01EED0  BEE3               	btfsc	plusw1,7,c
 34942  01EED2  D011               	goto	l15293
 34943                           
 34944                           ;stkvar	_p @ sp[(-4)+-6]
 34945                           ;stkvar	_w @ sp[(-4)+0]
 34946  01EED4  0EF6               	movlw	-10
 34947  01EED6  006F FF8C  F001    	movff	plusw1,btemp
 34948  01EEDC  0EFC               	movlw	-4
 34949  01EEDE  0060  F007  FFE3   	movff	btemp,plusw1
 34950  01EEE4  0EF7               	movlw	-9
 34951  01EEE6  006F FF8C  F001    	movff	plusw1,btemp
 34952  01EEEC  0EFD               	movlw	-3
 34953  01EEEE  0060  F007  FFE3   	movff	btemp,plusw1
 34954  01EEF4  D004               	goto	l2450
 34955  01EEF6                     l15293:
 34956                           
 34957                           ;stkvar	_w @ sp[(-4)+0]
 34958  01EEF6  0EFC               	movlw	-4
 34959  01EEF8  6AE3               	clrf	plusw1,c
 34960  01EEFA  0EFD               	movlw	-3
 34961  01EEFC  6AE3               	clrf	plusw1,c
 34962  01EEFE                     l2450:
 34963                           
 34964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 34965                           ;stkvar	_i @ sp[(-4)+2]
 34966  01EEFE  0EFE               	movlw	-2
 34967  01EF00  6AE3               	clrf	plusw1,c
 34968  01EF02  0EFF               	movlw	-1
 34969  01EF04  6AE3               	clrf	plusw1,c
 34970                           
 34971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 34972  01EF06  D01E               	goto	l15299
 34973  01EF08                     l15295:
 34974                           
 34975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 34976                           ;stkvar	_fp @ sp[(-4)+-2]
 34977  01EF08  0EFA               	movlw	-6
 34978  01EF0A  006F FF8F FFE6     	movff	plusw1,postinc1
 34979  01EF10  006F FF8F FFE6     	movff	plusw1,postinc1
 34980  01EF16  0E20               	movlw	32
 34981  01EF18  6EE6               	movwf	postinc1,c
 34982  01EF1A  0E00               	movlw	0
 34983  01EF1C  6EE6               	movwf	postinc1,c
 34984  01EF1E  EC1A  F0F5         	call	_fputc	;wreg free
 34985                           
 34986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 34987                           ;stkvar	_i @ sp[(-4)+2]
 34988  01EF22  0EFE               	movlw	-2
 34989  01EF24  50E3               	movf	plusw1,w,c
 34990  01EF26  0F01               	addlw	1
 34991  01EF28  6E01               	movwf	btemp^0,c
 34992  01EF2A  0EFE               	movlw	-2
 34993  01EF2C  0060  F007  FFE3   	movff	btemp,plusw1
 34994  01EF32  6A01               	clrf	btemp^0,c
 34995  01EF34  0EFF               	movlw	-1
 34996  01EF36  50E3               	movf	plusw1,w,c
 34997  01EF38  2001               	addwfc	btemp^0,w,c
 34998  01EF3A  6E01               	movwf	btemp^0,c
 34999  01EF3C  0EFF               	movlw	-1
 35000  01EF3E  0060  F007  FFE3   	movff	btemp,plusw1
 35001  01EF44                     l15299:
 35002                           
 35003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 35004                           ;stkvar	_w @ sp[(-4)+0]
 35005                           ;stkvar	_i @ sp[(-4)+2]
 35006  01EF44  50E1               	movf	fsr1l,w,c
 35007  01EF46  0FFE               	addlw	-2
 35008  01EF48  6ED9               	movwf	fsr2l,c
 35009  01EF4A  50E2               	movf	fsr1h,w,c
 35010  01EF4C  6EDA               	movwf	fsr2h,c
 35011  01EF4E  0EFF               	movlw	255
 35012  01EF50  22DA               	addwfc	fsr2h,f,c
 35013  01EF52  0EFC               	movlw	-4
 35014  01EF54  50E3               	movf	plusw1,w,c
 35015  01EF56  5CDE               	subwf	postinc2,w,c
 35016  01EF58  50DE               	movf	postinc2,w,c
 35017  01EF5A  0A80               	xorlw	128
 35018  01EF5C  6E01               	movwf	btemp^0,c
 35019  01EF5E  0EFD               	movlw	-3
 35020  01EF60  50E3               	movf	plusw1,w,c
 35021  01EF62  0A80               	xorlw	128
 35022  01EF64  5801               	subwfb	btemp^0,w,c
 35023  01EF66  A0D8               	btfss	status,0,c
 35024  01EF68  D7CF               	goto	l15295
 35025                           
 35026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 35027  01EF6A  B03E               	btfsc	_flags^0,0,c
 35028  01EF6C  D010               	goto	l15303
 35029                           
 35030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 35031                           ;stkvar	_fp @ sp[(-4)+-2]
 35032  01EF6E  0EFA               	movlw	-6
 35033  01EF70  006F FF8F FFE6     	movff	plusw1,postinc1
 35034  01EF76  006F FF8F FFE6     	movff	plusw1,postinc1
 35035                           
 35036                           ;stkvar	_buf @ sp[(-6)+-4]
 35037  01EF7C  0EF6               	movlw	-10
 35038  01EF7E  006F FF8F FFE6     	movff	plusw1,postinc1
 35039  01EF84  006F FF8F FFE6     	movff	plusw1,postinc1
 35040  01EF8A  ECF5  F001         	call	_fputs	;wreg free
 35041  01EF8E                     l15303:
 35042                           
 35043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 35044                           ;stkvar	_w @ sp[(-4)+0]
 35045                           ;stkvar	_buf @ sp[(-4)+-4]
 35046  01EF8E  0EF8               	movlw	-8
 35047  01EF90  006F FF8F FFE6     	movff	plusw1,postinc1
 35048  01EF96  006F FF8F FFE6     	movff	plusw1,postinc1
 35049  01EF9C  EC57  F001         	call	_strlen	;wreg free
 35050  01EFA0  0EFC               	movlw	-4
 35051  01EFA2  50E3               	movf	plusw1,w,c
 35052  01EFA4  2601               	addwf	btemp^0,f,c
 35053  01EFA6  0EFD               	movlw	-3
 35054  01EFA8  50E3               	movf	plusw1,w,c
 35055  01EFAA  2202               	addwfc	(btemp+1)^0,f,c
 35056                           
 35057                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 35058  01EFAC  0EF6               	movlw	246
 35059  01EFAE  26E1               	addwf	fsr1l,f,c
 35060  01EFB0  0EFF               	movlw	255
 35061  01EFB2  22E2               	addwfc	fsr1h,f,c
 35062  01EFB4  0012               	return		;funcret
 35063  01EFB6                     __end_of_pad:
 35064                           	opt callstack 0
 35065                           
 35066 ;; *************** function _strlen *****************
 35067 ;; Defined at:
 35068 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 35069 ;; Parameters:    Size  Location     Type
 35070 ;;  s               2  [STACK] PTR const unsigned char 
 35071 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 35072 ;;		 -> dbuf(80), spin(120), STR_71(9), STR_70(12), 
 35073 ;;		 -> D.lcd(640), D(642), T(144), port_data(512), 
 35074 ;;		 -> STR_3(5), V(192), 
 35075 ;; Auto vars:     Size  Location     Type
 35076 ;;  a               2  [STACK] PTR const unsigned char 
 35077 ;;		 -> ?_printf(2), ?_sprintf(2), asctime@buf(27), nuls(7), 
 35078 ;;		 -> dbuf(80), spin(120), STR_71(9), STR_70(12), 
 35079 ;;		 -> D.lcd(640), D(642), T(144), port_data(512), 
 35080 ;;		 -> STR_3(5), V(192), 
 35081 ;; Return value:  Size  Location     Type
 35082 ;;                  2  [STACK] unsigned int 
 35083 ;; Registers used:
 35084 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 35085 ;; Tracked objects:
 35086 ;;		On entry : 0/0
 35087 ;;		On exit  : 0/0
 35088 ;;		Unchanged: 0/0
 35089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35094 ;;Total ram usage:        0 bytes
 35095 ;; Hardware stack levels used:    1
 35096 ;; Hardware stack levels required when called:   15
 35097 ;; This function calls:
 35098 ;;		Nothing
 35099 ;; This function is called by:
 35100 ;;		_eaDogM_WriteString
 35101 ;;		_spinners
 35102 ;;		_calc_bsoc
 35103 ;;		_pad
 35104 ;;		_stoa
 35105 ;; This function uses a reentrant model
 35106 ;;
 35107                           
 35108                           	psect	text118
 35109  0002AE                     __ptext118:
 35110                           	opt callstack 0
 35111  0002AE                     _strlen:
 35112                           	opt callstack 0
 35113                           
 35114                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35115  0002AE  52E6               	movf	postinc1,f,c
 35116  0002B0  52E6               	movf	postinc1,f,c
 35117                           
 35118                           ;stkvar	_s @ sp[(-2)+-2]
 35119                           
 35120                           ;incstack = 0
 35121 ;; hardware stack exceeded
 35122  0002B2  0EFC               	movlw	-4
 35123  0002B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 35124  0002BA  0EFD               	movlw	-3
 35125  0002BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 35126                           
 35127                           ;stkvar	_a @ sp[(-2)+0]
 35128  0002C2  0EFF               	movlw	-1
 35129  0002C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 35130  0002CA  0EFE               	movlw	-2
 35131  0002CC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35132  0002D2  D011               	goto	l9699
 35133  0002D4                     l9697:
 35134                           
 35135                           ;stkvar	_s @ sp[(-2)+-2]
 35136  0002D4  0EFC               	movlw	-4
 35137  0002D6  50E3               	movf	plusw1,w,c
 35138  0002D8  0F01               	addlw	1
 35139  0002DA  6E01               	movwf	btemp^0,c
 35140  0002DC  0EFC               	movlw	-4
 35141  0002DE  0060  F007  FFE3   	movff	btemp,plusw1
 35142  0002E4  6A01               	clrf	btemp^0,c
 35143  0002E6  0EFD               	movlw	-3
 35144  0002E8  50E3               	movf	plusw1,w,c
 35145  0002EA  2001               	addwfc	btemp^0,w,c
 35146  0002EC  6E01               	movwf	btemp^0,c
 35147  0002EE  0EFD               	movlw	-3
 35148  0002F0  0060  F007  FFE3   	movff	btemp,plusw1
 35149  0002F6                     l9699:
 35150                           
 35151                           ;stkvar	_s @ sp[(-2)+-2]
 35152  0002F6  0EFC               	movlw	-4
 35153  0002F8  006F FF8F FFF6     	movff	plusw1,tblptrl
 35154  0002FE  0EFD               	movlw	-3
 35155  000300  006F FF8F FFF7     	movff	plusw1,tblptrh
 35156  000306  0E00               	movlw	low (__mediumconst shr (0+16))
 35157  000308  6EF8               	movwf	tblptru,c
 35158  00030A  0E1F               	movlw	(high __ramtop+-1)
 35159  00030C  64F7               	cpfsgt	tblptrh,c
 35160  00030E  D003               	bra	u7107
 35161  000310  0008               	tblrd		*
 35162  000312  50F5               	movf	tablat,w,c
 35163  000314  D007               	bra	u7100
 35164  000316                     u7107:
 35165  000316  006F FFDB FFE9     	movff	tblptrl,fsr0l
 35166  00031C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 35167  000322  50EF               	movf	indf0,w,c
 35168  000324                     u7100:
 35169  000324  0900               	iorlw	0
 35170  000326  A4D8               	btfss	status,2,c
 35171  000328  D7D5               	goto	l9697
 35172                           
 35173                           ;stkvar	_a @ sp[(-2)+0]
 35174                           ;stkvar	_s @ sp[(-2)+-2]
 35175  00032A  0EFC               	movlw	-4
 35176  00032C  006F FF8C  F001    	movff	plusw1,btemp
 35177  000332  0EFD               	movlw	-3
 35178  000334  006F FF8C  F002    	movff	plusw1,btemp+1
 35179  00033A  0EFE               	movlw	-2
 35180  00033C  50E3               	movf	plusw1,w,c
 35181  00033E  5E01               	subwf	btemp^0,f,c
 35182  000340  0EFF               	movlw	-1
 35183  000342  50E3               	movf	plusw1,w,c
 35184  000344  5A02               	subwfb	(btemp+1)^0,f,c
 35185                           
 35186                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 35187  000346  52E5               	movf	postdec1,f,c
 35188  000348  52E5               	movf	postdec1,f,c
 35189  00034A  52E5               	movf	postdec1,f,c
 35190  00034C  52E5               	movf	postdec1,f,c
 35191  00034E  0012               	return		;funcret
 35192  000350                     __end_of_strlen:
 35193                           	opt callstack 0
 35194                           
 35195 ;; *************** function _fputs *****************
 35196 ;; Defined at:
 35197 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 35198 ;; Parameters:    Size  Location     Type
 35199 ;;  s               2  [STACK] PTR const unsigned char 
 35200 ;;		 -> dbuf(80), 
 35201 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35202 ;;		 -> f(6), NULL(0), 
 35203 ;; Auto vars:     Size  Location     Type
 35204 ;;  i               2  [STACK] int 
 35205 ;;  c               1  [STACK] unsigned char 
 35206 ;; Return value:  Size  Location     Type
 35207 ;;                  2  [STACK] int 
 35208 ;; Registers used:
 35209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 35210 ;; Tracked objects:
 35211 ;;		On entry : 0/3
 35212 ;;		On exit  : 0/0
 35213 ;;		Unchanged: 0/0
 35214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35219 ;;Total ram usage:        0 bytes
 35220 ;; Hardware stack levels used:    1
 35221 ;; Hardware stack levels required when called:   18
 35222 ;; This function calls:
 35223 ;;		_fputc
 35224 ;; This function is called by:
 35225 ;;		_pad
 35226 ;; This function uses a reentrant model
 35227 ;;
 35228                           
 35229                           	psect	text119
 35230  0003EA                     __ptext119:
 35231                           	opt callstack 0
 35232  0003EA                     _fputs:
 35233                           	opt callstack 0
 35234                           
 35235                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35236  0003EA  52E6               	movf	postinc1,f,c
 35237  0003EC  52E6               	movf	postinc1,f,c
 35238  0003EE  52E6               	movf	postinc1,f,c
 35239                           
 35240                           ;stkvar	_i @ sp[(-3)+0]
 35241                           
 35242                           ;incstack = 0
 35243 ;; hardware stack exceeded
 35244  0003F0  0EFD               	movlw	-3
 35245  0003F2  6AE3               	clrf	plusw1,c
 35246  0003F4  0EFE               	movlw	-2
 35247  0003F6  6AE3               	clrf	plusw1,c
 35248  0003F8  D01F               	goto	l15241
 35249  0003FA                     l15237:
 35250                           
 35251                           ;stkvar	_fp @ sp[(-3)+-4]
 35252  0003FA  0EF9               	movlw	-7
 35253  0003FC  006F FF8F FFE6     	movff	plusw1,postinc1
 35254  000402  006F FF8F FFE6     	movff	plusw1,postinc1
 35255                           
 35256                           ;stkvar	_c @ sp[(-5)+2]
 35257  000408  0EFD               	movlw	-3
 35258  00040A  50E3               	movf	plusw1,w,c
 35259  00040C  6EE6               	movwf	postinc1,c
 35260  00040E  0E00               	movlw	0
 35261  000410  6EE6               	movwf	postinc1,c
 35262  000412  EC1A  F0F5         	call	_fputc	;wreg free
 35263                           
 35264                           ;stkvar	_i @ sp[(-3)+0]
 35265  000416  0EFD               	movlw	-3
 35266  000418  50E3               	movf	plusw1,w,c
 35267  00041A  0F01               	addlw	1
 35268  00041C  6E01               	movwf	btemp^0,c
 35269  00041E  0EFD               	movlw	-3
 35270  000420  0060  F007  FFE3   	movff	btemp,plusw1
 35271  000426  6A01               	clrf	btemp^0,c
 35272  000428  0EFE               	movlw	-2
 35273  00042A  50E3               	movf	plusw1,w,c
 35274  00042C  2001               	addwfc	btemp^0,w,c
 35275  00042E  6E01               	movwf	btemp^0,c
 35276  000430  0EFE               	movlw	-2
 35277  000432  0060  F007  FFE3   	movff	btemp,plusw1
 35278  000438                     l15241:
 35279                           
 35280                           ;stkvar	_i @ sp[(-3)+0]
 35281  000438  0EFD               	movlw	-3
 35282  00043A  006F FF8C  F00B    	movff	plusw1,btemp+10
 35283  000440  0EFE               	movlw	-2
 35284  000442  006F FF8C  F00C    	movff	plusw1,btemp+11
 35285                           
 35286                           ;stkvar	_s @ sp[(-3)+-2]
 35287  000448  0EFB               	movlw	-5
 35288  00044A  006F FF8C  F009    	movff	plusw1,btemp+8
 35289  000450  0EFC               	movlw	-4
 35290  000452  006F FF8C  F00A    	movff	plusw1,btemp+9
 35291  000458  500B               	movf	(btemp+10)^0,w,c
 35292  00045A  2409               	addwf	(btemp+8)^0,w,c
 35293  00045C  6ED9               	movwf	fsr2l,c
 35294  00045E  500C               	movf	(btemp+11)^0,w,c
 35295  000460  200A               	addwfc	(btemp+9)^0,w,c
 35296  000462  6EDA               	movwf	fsr2h,c
 35297  000464  50DF               	movf	indf2,w,c
 35298  000466  6E0C               	movwf	(btemp+11)^0,c
 35299                           
 35300                           ;stkvar	_c @ sp[(-3)+2]
 35301  000468  0EFF               	movlw	-1
 35302  00046A  0060  F033  FFE3   	movff	btemp+11,plusw1
 35303  000470  0EFF               	movlw	-1
 35304  000472  50E3               	movf	plusw1,w,c
 35305  000474  A4D8               	btfss	status,2,c
 35306  000476  D7C1               	goto	l15237
 35307                           
 35308                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 35309  000478  0EF9               	movlw	249
 35310  00047A  26E1               	addwf	fsr1l,f,c
 35311  00047C  0EFF               	movlw	255
 35312  00047E  22E2               	addwfc	fsr1h,f,c
 35313  000480  0012               	return		;funcret
 35314  000482                     __end_of_fputs:
 35315                           	opt callstack 0
 35316                           
 35317 ;; *************** function _fputc *****************
 35318 ;; Defined at:
 35319 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 35320 ;; Parameters:    Size  Location     Type
 35321 ;;  c               2  [STACK] int 
 35322 ;;  fp              2  [STACK] PTR struct _IO_FILE
 35323 ;;		 -> f(6), NULL(0), 
 35324 ;; Auto vars:     Size  Location     Type
 35325 ;;		None
 35326 ;; Return value:  Size  Location     Type
 35327 ;;                  2  [STACK] int 
 35328 ;; Registers used:
 35329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 35330 ;; Tracked objects:
 35331 ;;		On entry : 0/0
 35332 ;;		On exit  : 0/0
 35333 ;;		Unchanged: 0/0
 35334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35339 ;;Total ram usage:        0 bytes
 35340 ;; Hardware stack levels used:    1
 35341 ;; Hardware stack levels required when called:   17
 35342 ;; This function calls:
 35343 ;;		_putch
 35344 ;; This function is called by:
 35345 ;;		_pad
 35346 ;;		_stoa
 35347 ;;		_vfpfcnvrt
 35348 ;;		_fputs
 35349 ;; This function uses a reentrant model
 35350 ;;
 35351                           
 35352                           	psect	text120
 35353  01EA34                     __ptext120:
 35354                           	opt callstack 0
 35355  01EA34                     _fputc:
 35356                           	opt callstack 0
 35357                           
 35358                           ;stkvar	_fp @ sp[(0)+-4]
 35359                           
 35360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35361                           ;incstack = 0
 35362 ;; hardware stack exceeded
 35363  01EA34  0EFC               	movlw	-4
 35364  01EA36  006F FF8C  F001    	movff	plusw1,btemp
 35365  01EA3C  0EFD               	movlw	-3
 35366  01EA3E  50E3               	movf	plusw1,w,c
 35367  01EA40  1001               	iorwf	btemp^0,w,c
 35368  01EA42  B4D8               	btfsc	status,2,c
 35369  01EA44  D009               	goto	u14110
 35370                           
 35371                           ;stkvar	_fp @ sp[(0)+-4]
 35372  01EA46  0EFC               	movlw	-4
 35373  01EA48  006F FF8C  F001    	movff	plusw1,btemp
 35374  01EA4E  0EFD               	movlw	-3
 35375  01EA50  50E3               	movf	plusw1,w,c
 35376  01EA52  1001               	iorwf	btemp^0,w,c
 35377  01EA54  A4D8               	btfss	status,2,c
 35378  01EA56  D006               	goto	l15225
 35379  01EA58                     u14110:
 35380                           
 35381                           ;stkvar	_c @ sp[(0)+-2]
 35382  01EA58  0EFE               	movlw	-2
 35383  01EA5A  50E3               	movf	plusw1,w,c
 35384  01EA5C  6EE6               	movwf	postinc1,c
 35385  01EA5E  EC28  F00F         	call	_putch	;wreg free
 35386  01EA62  D075               	goto	l3526
 35387  01EA64                     l15225:
 35388                           
 35389                           ;stkvar	_fp @ sp[(0)+-4]
 35390  01EA64  0EFC               	movlw	-4
 35391  01EA66  006F FF8C  F00B    	movff	plusw1,btemp+10
 35392  01EA6C  0EFD               	movlw	-3
 35393  01EA6E  006F FF8C  F00C    	movff	plusw1,btemp+11
 35394  01EA74  0E04               	movlw	4
 35395  01EA76  240B               	addwf	(btemp+10)^0,w,c
 35396  01EA78  6ED9               	movwf	fsr2l,c
 35397  01EA7A  0E00               	movlw	0
 35398  01EA7C  200C               	addwfc	(btemp+11)^0,w,c
 35399  01EA7E  6EDA               	movwf	fsr2h,c
 35400  01EA80  50DE               	movf	postinc2,w,c
 35401  01EA82  10DE               	iorwf	postinc2,w,c
 35402  01EA84  B4D8               	btfsc	status,2,c
 35403  01EA86  D026               	goto	u14130
 35404                           
 35405                           ;stkvar	_fp @ sp[(0)+-4]
 35406  01EA88  0EFC               	movlw	-4
 35407  01EA8A  006F FF8C  F00B    	movff	plusw1,btemp+10
 35408  01EA90  0EFD               	movlw	-3
 35409  01EA92  006F FF8C  F00C    	movff	plusw1,btemp+11
 35410  01EA98  0E04               	movlw	4
 35411  01EA9A  240B               	addwf	(btemp+10)^0,w,c
 35412  01EA9C  6ED9               	movwf	fsr2l,c
 35413  01EA9E  0E00               	movlw	0
 35414  01EAA0  200C               	addwfc	(btemp+11)^0,w,c
 35415  01EAA2  6EDA               	movwf	fsr2h,c
 35416                           
 35417                           ;stkvar	_fp @ sp[(0)+-4]
 35418  01EAA4  0EFC               	movlw	-4
 35419  01EAA6  006F FF8C  F00B    	movff	plusw1,btemp+10
 35420  01EAAC  0EFD               	movlw	-3
 35421  01EAAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 35422  01EAB4  0E02               	movlw	2
 35423  01EAB6  240B               	addwf	(btemp+10)^0,w,c
 35424  01EAB8  6EE9               	movwf	fsr0l,c
 35425  01EABA  0E00               	movlw	0
 35426  01EABC  200C               	addwfc	(btemp+11)^0,w,c
 35427  01EABE  6EEA               	movwf	fsr0h,c
 35428  01EAC0  50DE               	movf	postinc2,w,c
 35429  01EAC2  5CEE               	subwf	postinc0,w,c
 35430  01EAC4  50EE               	movf	postinc0,w,c
 35431  01EAC6  0A80               	xorlw	128
 35432  01EAC8  6E01               	movwf	btemp^0,c
 35433  01EACA  50DE               	movf	postinc2,w,c
 35434  01EACC  0A80               	xorlw	128
 35435  01EACE  5801               	subwfb	btemp^0,w,c
 35436  01EAD0  B0D8               	btfsc	status,0,c
 35437  01EAD2  D03D               	goto	l3526
 35438  01EAD4                     u14130:
 35439                           
 35440                           ;stkvar	_c @ sp[(0)+-2]
 35441                           ;stkvar	_fp @ sp[(0)+-4]
 35442  01EAD4  0EFC               	movlw	-4
 35443  01EAD6  006F FF8C  F00B    	movff	plusw1,btemp+10
 35444  01EADC  0EFD               	movlw	-3
 35445  01EADE  006F FF8C  F00C    	movff	plusw1,btemp+11
 35446  01EAE4  0E02               	movlw	2
 35447  01EAE6  240B               	addwf	(btemp+10)^0,w,c
 35448  01EAE8  6ED9               	movwf	fsr2l,c
 35449  01EAEA  0E00               	movlw	0
 35450  01EAEC  200C               	addwfc	(btemp+11)^0,w,c
 35451  01EAEE  6EDA               	movwf	fsr2h,c
 35452  01EAF0  006F FF78  F00B    	movff	postinc2,btemp+10
 35453  01EAF6  006F FF74  F00C    	movff	postdec2,btemp+11
 35454                           
 35455                           ;stkvar	_fp @ sp[(0)+-4]
 35456  01EAFC  0EFC               	movlw	-4
 35457  01EAFE  006F FF8F FFD9     	movff	plusw1,fsr2l
 35458  01EB04  0EFD               	movlw	-3
 35459  01EB06  006F FF8F FFDA     	movff	plusw1,fsr2h
 35460  01EB0C  006F FF78  F009    	movff	postinc2,btemp+8
 35461  01EB12  006F FF74  F00A    	movff	postdec2,btemp+9
 35462  01EB18  500B               	movf	(btemp+10)^0,w,c
 35463  01EB1A  2409               	addwf	(btemp+8)^0,w,c
 35464  01EB1C  6ED9               	movwf	fsr2l,c
 35465  01EB1E  500C               	movf	(btemp+11)^0,w,c
 35466  01EB20  200A               	addwfc	(btemp+9)^0,w,c
 35467  01EB22  6EDA               	movwf	fsr2h,c
 35468  01EB24  0EFE               	movlw	-2
 35469  01EB26  006F FF8F FFDF     	movff	plusw1,indf2
 35470                           
 35471                           ;stkvar	_fp @ sp[(0)+-4]
 35472  01EB2C  0EFC               	movlw	-4
 35473  01EB2E  006F FF8C  F00B    	movff	plusw1,btemp+10
 35474  01EB34  0EFD               	movlw	-3
 35475  01EB36  006F FF8C  F00C    	movff	plusw1,btemp+11
 35476  01EB3C  0E02               	movlw	2
 35477  01EB3E  240B               	addwf	(btemp+10)^0,w,c
 35478  01EB40  6ED9               	movwf	fsr2l,c
 35479  01EB42  0E00               	movlw	0
 35480  01EB44  200C               	addwfc	(btemp+11)^0,w,c
 35481  01EB46  6EDA               	movwf	fsr2h,c
 35482  01EB48  2ADE               	incf	postinc2,f,c
 35483  01EB4A  0E00               	movlw	0
 35484  01EB4C  22DD               	addwfc	postdec2,f,c
 35485  01EB4E                     l3526:
 35486                           
 35487                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 35488  01EB4E  52E5               	movf	postdec1,f,c
 35489  01EB50  52E5               	movf	postdec1,f,c
 35490  01EB52  52E5               	movf	postdec1,f,c
 35491  01EB54  52E5               	movf	postdec1,f,c
 35492  01EB56  0012               	return		;funcret
 35493  01EB58                     __end_of_fputc:
 35494                           	opt callstack 0
 35495                           
 35496 ;; *************** function _putch *****************
 35497 ;; Defined at:
 35498 ;;		line 421 in file "eadog.c"
 35499 ;; Parameters:    Size  Location     Type
 35500 ;;  c               1  [STACK] unsigned char 
 35501 ;; Auto vars:     Size  Location     Type
 35502 ;;		None
 35503 ;; Return value:  Size  Location     Type
 35504 ;;                  1  [STACK] void 
 35505 ;; Registers used:
 35506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 35507 ;; Tracked objects:
 35508 ;;		On entry : 0/0
 35509 ;;		On exit  : 0/0
 35510 ;;		Unchanged: 0/0
 35511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35516 ;;Total ram usage:        0 bytes
 35517 ;; Hardware stack levels used:    1
 35518 ;; Hardware stack levels required when called:   16
 35519 ;; This function calls:
 35520 ;;		_ringBufS_put_dma
 35521 ;; This function is called by:
 35522 ;;		_fputc
 35523 ;; This function uses a reentrant model
 35524 ;;
 35525                           
 35526                           	psect	text121
 35527  001E50                     __ptext121:
 35528                           	opt callstack 0
 35529  001E50                     _putch:
 35530                           	opt callstack 0
 35531                           
 35532                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 35533                           ;stkvar	_c @ sp[(0)+-1]
 35534                           
 35535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35536                           ;incstack = 0
 35537 ;; hardware stack exceeded
 35538  001E50  0EFF               	movlw	-1
 35539  001E52  50E3               	movf	plusw1,w,c
 35540  001E54  6EE6               	movwf	postinc1,c
 35541  001E56  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 35542  001E5C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 35543  001E62  EC5B  F000         	call	_ringBufS_put_dma	;wreg free
 35544                           
 35545                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 35546  001E66  52E5               	movf	postdec1,f,c
 35547  001E68  0012               	return		;funcret
 35548  001E6A                     __end_of_putch:
 35549                           	opt callstack 0
 35550                           
 35551 ;; *************** function _ringBufS_put_dma *****************
 35552 ;; Defined at:
 35553 ;;		line 67 in file "ringbufs.c"
 35554 ;; Parameters:    Size  Location     Type
 35555 ;;  _this           2  [STACK] PTR struct ringBufS_t
 35556 ;;		 -> ring_buf1(67), 
 35557 ;;  c               1  [STACK] const unsigned char 
 35558 ;; Auto vars:     Size  Location     Type
 35559 ;;		None
 35560 ;; Return value:  Size  Location     Type
 35561 ;;                  1  [STACK] void 
 35562 ;; Registers used:
 35563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 35564 ;; Tracked objects:
 35565 ;;		On entry : 0/0
 35566 ;;		On exit  : 0/0
 35567 ;;		Unchanged: 0/0
 35568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35573 ;;Total ram usage:        0 bytes
 35574 ;; Hardware stack levels used:    1
 35575 ;; Hardware stack levels required when called:   15
 35576 ;; This function calls:
 35577 ;;		Nothing
 35578 ;; This function is called by:
 35579 ;;		_putch
 35580 ;; This function uses a reentrant model
 35581 ;;
 35582                           
 35583                           	psect	text122
 35584  0000B6                     __ptext122:
 35585                           	opt callstack 0
 35586  0000B6                     _ringBufS_put_dma:
 35587                           	opt callstack 0
 35588                           
 35589                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 35590                           ;stkvar	__this @ sp[(0)+-2]
 35591                           
 35592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35593                           ;incstack = 0
 35594 ;; hardware stack exceeded
 35595  0000B6  0EFE               	movlw	-2
 35596  0000B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 35597  0000BE  0EFF               	movlw	-1
 35598  0000C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 35599  0000C6  0E42               	movlw	66
 35600  0000C8  240B               	addwf	(btemp+10)^0,w,c
 35601  0000CA  6ED9               	movwf	fsr2l,c
 35602  0000CC  0E00               	movlw	0
 35603  0000CE  200C               	addwfc	(btemp+11)^0,w,c
 35604  0000D0  6EDA               	movwf	fsr2h,c
 35605  0000D2  0E40               	movlw	64
 35606  0000D4  60DF               	cpfslt	indf2,c
 35607  0000D6  D040               	goto	l1736
 35608                           
 35609                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 35610                           ;stkvar	_c @ sp[(0)+-3]
 35611                           ;stkvar	__this @ sp[(0)+-2]
 35612  0000D8  0EFE               	movlw	-2
 35613  0000DA  006F FF8C  F00B    	movff	plusw1,btemp+10
 35614  0000E0  0EFF               	movlw	-1
 35615  0000E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 35616  0000E8  0E40               	movlw	64
 35617  0000EA  240B               	addwf	(btemp+10)^0,w,c
 35618  0000EC  6ED9               	movwf	fsr2l,c
 35619  0000EE  0E00               	movlw	0
 35620  0000F0  200C               	addwfc	(btemp+11)^0,w,c
 35621  0000F2  6EDA               	movwf	fsr2h,c
 35622  0000F4  50DF               	movf	indf2,w,c
 35623  0000F6  6E0C               	movwf	(btemp+11)^0,c
 35624                           
 35625                           ;stkvar	__this @ sp[(0)+-2]
 35626  0000F8  0EFE               	movlw	-2
 35627  0000FA  006F FF8C  F009    	movff	plusw1,btemp+8
 35628  000100  0EFF               	movlw	-1
 35629  000102  006F FF8C  F00A    	movff	plusw1,btemp+9
 35630  000108  500C               	movf	(btemp+11)^0,w,c
 35631  00010A  2409               	addwf	(btemp+8)^0,w,c
 35632  00010C  6ED9               	movwf	fsr2l,c
 35633  00010E  0E00               	movlw	0
 35634  000110  200A               	addwfc	(btemp+9)^0,w,c
 35635  000112  6EDA               	movwf	fsr2h,c
 35636  000114  0EFD               	movlw	-3
 35637  000116  006F FF8F FFDF     	movff	plusw1,indf2
 35638                           
 35639                           ;ringbufs.c: 71:   ++_this->head;
 35640                           ;stkvar	__this @ sp[(0)+-2]
 35641  00011C  0EFE               	movlw	-2
 35642  00011E  006F FF8C  F00B    	movff	plusw1,btemp+10
 35643  000124  0EFF               	movlw	-1
 35644  000126  006F FF8C  F00C    	movff	plusw1,btemp+11
 35645  00012C  0E40               	movlw	64
 35646  00012E  240B               	addwf	(btemp+10)^0,w,c
 35647  000130  6ED9               	movwf	fsr2l,c
 35648  000132  0E00               	movlw	0
 35649  000134  200C               	addwfc	(btemp+11)^0,w,c
 35650  000136  6EDA               	movwf	fsr2h,c
 35651  000138  2ADF               	incf	indf2,f,c
 35652                           
 35653                           ;ringbufs.c: 72:   ++_this->count;
 35654                           ;stkvar	__this @ sp[(0)+-2]
 35655  00013A  0EFE               	movlw	-2
 35656  00013C  006F FF8C  F00B    	movff	plusw1,btemp+10
 35657  000142  0EFF               	movlw	-1
 35658  000144  006F FF8C  F00C    	movff	plusw1,btemp+11
 35659  00014A  0E42               	movlw	66
 35660  00014C  240B               	addwf	(btemp+10)^0,w,c
 35661  00014E  6ED9               	movwf	fsr2l,c
 35662  000150  0E00               	movlw	0
 35663  000152  200C               	addwfc	(btemp+11)^0,w,c
 35664  000154  6EDA               	movwf	fsr2h,c
 35665  000156  2ADF               	incf	indf2,f,c
 35666  000158                     l1736:
 35667                           
 35668                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 35669  000158  52E5               	movf	postdec1,f,c
 35670  00015A  52E5               	movf	postdec1,f,c
 35671  00015C  52E5               	movf	postdec1,f,c
 35672  00015E  0012               	return		;funcret
 35673  000160                     __end_of_ringBufS_put_dma:
 35674                           	opt callstack 0
 35675                           
 35676 ;; *************** function _atoi *****************
 35677 ;; Defined at:
 35678 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 35679 ;; Parameters:    Size  Location     Type
 35680 ;;  s               2  [STACK] PTR const unsigned char 
 35681 ;;		 -> STR_90(127), STR_88(3), STR_87(3), STR_86(19), 
 35682 ;;		 -> STR_85(19), STR_84(19), STR_83(19), STR_82(19), 
 35683 ;;		 -> STR_81(19), STR_80(24), STR_79(15), STR_78(15), 
 35684 ;;		 -> STR_77(15), STR_76(15), STR_75(10), STR_74(10), 
 35685 ;;		 -> STR_73(19), STR_72(19), STR_69(3), STR_68(3), 
 35686 ;;		 -> STR_67(14), STR_66(21), STR_65(21), STR_64(21), 
 35687 ;;		 -> STR_63(21), STR_62(21), STR_61(21), STR_60(21), 
 35688 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 35689 ;;		 -> STR_55(21), STR_54(20), STR_53(21), STR_52(21), 
 35690 ;;		 -> STR_51(21), STR_50(22), STR_49(22), STR_48(22), 
 35691 ;;		 -> STR_47(23), STR_46(23), STR_45(23), STR_44(29), 
 35692 ;;		 -> STR_43(23), STR_42(23), STR_41(22), STR_40(22), 
 35693 ;;		 -> STR_39(22), STR_38(22), STR_37(22), STR_36(22), 
 35694 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 35695 ;;		 -> STR_31(22), STR_30(22), STR_29(17), STR_28(16), 
 35696 ;;		 -> STR_27(16), STR_26(21), STR_25(21), STR_24(21), 
 35697 ;;		 -> STR_23(26), STR_22(26), STR_21(22), STR_20(21), 
 35698 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(22), 
 35699 ;;		 -> STR_15(22), STR_14(22), STR_13(26), STR_12(21), 
 35700 ;;		 -> STR_11(21), STR_10(21), STR_9(21), STR_8(21), 
 35701 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 35702 ;;		 -> STR_2(21), STR_1(21), 
 35703 ;; Auto vars:     Size  Location     Type
 35704 ;;  n               2  [STACK] int 
 35705 ;;  neg             2  [STACK] int 
 35706 ;; Return value:  Size  Location     Type
 35707 ;;                  2  [STACK] int 
 35708 ;; Registers used:
 35709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 35710 ;; Tracked objects:
 35711 ;;		On entry : 0/0
 35712 ;;		On exit  : 0/0
 35713 ;;		Unchanged: 0/0
 35714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35719 ;;Total ram usage:        0 bytes
 35720 ;; Hardware stack levels used:    1
 35721 ;; Hardware stack levels required when called:   16
 35722 ;; This function calls:
 35723 ;;		_isdigit
 35724 ;;		_isspace
 35725 ;; This function is called by:
 35726 ;;		_vfpfcnvrt
 35727 ;; This function uses a reentrant model
 35728 ;;
 35729                           
 35730                           	psect	text123
 35731  01B702                     __ptext123:
 35732                           	opt callstack 0
 35733  01B702                     _atoi:
 35734                           	opt callstack 0
 35735                           
 35736                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35737  01B702  0E09               	movlw	9
 35738  01B704  26E1               	addwf	fsr1l,f,c
 35739  01B706  0E00               	movlw	0
 35740  01B708  22E2               	addwfc	fsr1h,f,c
 35741                           
 35742                           ;stkvar	_n @ sp[(-9)+5]
 35743                           
 35744                           ;incstack = 0
 35745 ;; hardware stack exceeded
 35746  01B70A  0EFC               	movlw	-4
 35747  01B70C  6AE3               	clrf	plusw1,c
 35748  01B70E  0EFD               	movlw	-3
 35749  01B710  6AE3               	clrf	plusw1,c
 35750                           
 35751                           ;stkvar	_neg @ sp[(-9)+7]
 35752  01B712  0EFE               	movlw	-2
 35753  01B714  6AE3               	clrf	plusw1,c
 35754  01B716  0EFF               	movlw	-1
 35755  01B718  6AE3               	clrf	plusw1,c
 35756  01B71A  D011               	goto	l11395
 35757  01B71C                     l11393:
 35758                           
 35759                           ;stkvar	_s @ sp[(-9)+-2]
 35760  01B71C  0EF5               	movlw	-11
 35761  01B71E  50E3               	movf	plusw1,w,c
 35762  01B720  0F01               	addlw	1
 35763  01B722  6E01               	movwf	btemp^0,c
 35764  01B724  0EF5               	movlw	-11
 35765  01B726  0060  F007  FFE3   	movff	btemp,plusw1
 35766  01B72C  6A01               	clrf	btemp^0,c
 35767  01B72E  0EF6               	movlw	-10
 35768  01B730  50E3               	movf	plusw1,w,c
 35769  01B732  2001               	addwfc	btemp^0,w,c
 35770  01B734  6E01               	movwf	btemp^0,c
 35771  01B736  0EF6               	movlw	-10
 35772  01B738  0060  F007  FFE3   	movff	btemp,plusw1
 35773  01B73E                     l11395:
 35774                           
 35775                           ;stkvar	_atoi$7441 @ sp[(-9)+4]
 35776  01B73E  0EFB               	movlw	-5
 35777  01B740  6AE3               	clrf	plusw1,c
 35778  01B742  2AE3               	incf	plusw1,f,c
 35779                           
 35780                           ;stkvar	_s @ sp[(-9)+-2]
 35781  01B744  50E1               	movf	fsr1l,w,c
 35782  01B746  0FF5               	addlw	-11
 35783  01B748  6ED9               	movwf	fsr2l,c
 35784  01B74A  50E2               	movf	fsr1h,w,c
 35785  01B74C  6EDA               	movwf	fsr2h,c
 35786  01B74E  0EFF               	movlw	255
 35787  01B750  22DA               	addwfc	fsr2h,f,c
 35788  01B752  006F FF7B FFF6     	movff	postinc2,tblptrl
 35789  01B758  006F FF77 FFF7     	movff	postdec2,tblptrh
 35790  01B75E                     	if	0	;tblptru may be non-zero
 35791  01B75E                     	endif
 35792  01B75E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35793  01B75E  0E00               	movlw	low (__mediumconst shr (0+16))
 35794  01B760  6EF8               	movwf	tblptru,c
 35795  01B762                     	endif
 35796  01B762  0008               	tblrd		*
 35797  01B764  50F5               	movf	tablat,w,c
 35798  01B766  0A20               	xorlw	32
 35799  01B768  B4D8               	btfsc	status,2,c
 35800  01B76A  D023               	goto	l11403
 35801  01B76C  0EF7               	movlw	247
 35802  01B76E  6E0B               	movwf	(btemp+10)^0,c
 35803  01B770  0EFF               	movlw	255
 35804  01B772  6E0C               	movwf	(btemp+11)^0,c
 35805                           
 35806                           ;stkvar	_s @ sp[(-9)+-2]
 35807  01B774  50E1               	movf	fsr1l,w,c
 35808  01B776  0FF5               	addlw	-11
 35809  01B778  6ED9               	movwf	fsr2l,c
 35810  01B77A  50E2               	movf	fsr1h,w,c
 35811  01B77C  6EDA               	movwf	fsr2h,c
 35812  01B77E  0EFF               	movlw	255
 35813  01B780  22DA               	addwfc	fsr2h,f,c
 35814  01B782  006F FF7B FFF6     	movff	postinc2,tblptrl
 35815  01B788  006F FF77 FFF7     	movff	postdec2,tblptrh
 35816  01B78E                     	if	0	;tblptru may be non-zero
 35817  01B78E                     	endif
 35818  01B78E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35819  01B78E  0E00               	movlw	low (__mediumconst shr (0+16))
 35820  01B790  6EF8               	movwf	tblptru,c
 35821  01B792                     	endif
 35822  01B792  0008               	tblrd		*
 35823  01B794  50F5               	movf	tablat,w,c
 35824  01B796  6E09               	movwf	(btemp+8)^0,c
 35825  01B798  6A0A               	clrf	(btemp+9)^0,c
 35826  01B79A  500B               	movf	(btemp+10)^0,w,c
 35827  01B79C  2609               	addwf	(btemp+8)^0,f,c
 35828  01B79E  500C               	movf	(btemp+11)^0,w,c
 35829  01B7A0  220A               	addwfc	(btemp+9)^0,f,c
 35830  01B7A2  500A               	movf	(btemp+9)^0,w,c
 35831  01B7A4  E104               	bnz	u10340
 35832  01B7A6  0E05               	movlw	5
 35833  01B7A8  5C09               	subwf	(btemp+8)^0,w,c
 35834  01B7AA  A0D8               	btfss	status,0,c
 35835  01B7AC  D002               	goto	l11403
 35836  01B7AE                     u10340:
 35837                           
 35838                           ;stkvar	_atoi$7441 @ sp[(-9)+4]
 35839  01B7AE  0EFB               	movlw	-5
 35840  01B7B0  6AE3               	clrf	plusw1,c
 35841  01B7B2                     l11403:
 35842                           
 35843                           ;stkvar	_atoi$7441 @ sp[(-9)+4]
 35844  01B7B2  0EFB               	movlw	-5
 35845  01B7B4  50E3               	movf	plusw1,w,c
 35846  01B7B6  6E0B               	movwf	(btemp+10)^0,c
 35847  01B7B8  6A0C               	clrf	(btemp+11)^0,c
 35848                           
 35849                           ;stkvar	_atoi$7440 @ sp[(-9)+2]
 35850  01B7BA  0EF9               	movlw	-7
 35851  01B7BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35852  01B7C2  0EFA               	movlw	-6
 35853  01B7C4  0060  F033  FFE3   	movff	btemp+11,plusw1
 35854                           
 35855                           ;stkvar	_atoi$7440 @ sp[(-9)+2]
 35856  01B7CA  0EF9               	movlw	-7
 35857  01B7CC  006F FF8C  F001    	movff	plusw1,btemp
 35858  01B7D2  0EFA               	movlw	-6
 35859  01B7D4  50E3               	movf	plusw1,w,c
 35860  01B7D6  1001               	iorwf	btemp^0,w,c
 35861  01B7D8  B4D8               	btfsc	status,2,c
 35862  01B7DA  D01F               	goto	l11413
 35863  01B7DC  D79F               	goto	l11393
 35864  01B7DE                     l11409:
 35865  01B7DE  0E01               	movlw	1
 35866  01B7E0  6E0B               	movwf	(btemp+10)^0,c
 35867  01B7E2  0E00               	movlw	0
 35868  01B7E4  6E0C               	movwf	(btemp+11)^0,c
 35869                           
 35870                           ;stkvar	_neg @ sp[(-9)+7]
 35871  01B7E6  0EFE               	movlw	-2
 35872  01B7E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 35873  01B7EE  0EFF               	movlw	-1
 35874  01B7F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 35875  01B7F6                     l11411:
 35876                           
 35877                           ;stkvar	_s @ sp[(-9)+-2]
 35878  01B7F6  0EF5               	movlw	-11
 35879  01B7F8  50E3               	movf	plusw1,w,c
 35880  01B7FA  0F01               	addlw	1
 35881  01B7FC  6E01               	movwf	btemp^0,c
 35882  01B7FE  0EF5               	movlw	-11
 35883  01B800  0060  F007  FFE3   	movff	btemp,plusw1
 35884  01B806  6A01               	clrf	btemp^0,c
 35885  01B808  0EF6               	movlw	-10
 35886  01B80A  50E3               	movf	plusw1,w,c
 35887  01B80C  2001               	addwfc	btemp^0,w,c
 35888  01B80E  6E01               	movwf	btemp^0,c
 35889  01B810  0EF6               	movlw	-10
 35890  01B812  0060  F007  FFE3   	movff	btemp,plusw1
 35891  01B818  D053               	goto	l11419
 35892  01B81A                     l11413:
 35893                           
 35894                           ;stkvar	_s @ sp[(-9)+-2]
 35895  01B81A  50E1               	movf	fsr1l,w,c
 35896  01B81C  0FF5               	addlw	-11
 35897  01B81E  6ED9               	movwf	fsr2l,c
 35898  01B820  50E2               	movf	fsr1h,w,c
 35899  01B822  6EDA               	movwf	fsr2h,c
 35900  01B824  0EFF               	movlw	255
 35901  01B826  22DA               	addwfc	fsr2h,f,c
 35902  01B828  006F FF7B FFF6     	movff	postinc2,tblptrl
 35903  01B82E  006F FF77 FFF7     	movff	postdec2,tblptrh
 35904  01B834                     	if	0	;tblptru may be non-zero
 35905  01B834                     	endif
 35906  01B834                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35907  01B834  0E00               	movlw	low (__mediumconst shr (0+16))
 35908  01B836  6EF8               	movwf	tblptru,c
 35909  01B838                     	endif
 35910  01B838  0008               	tblrd		*
 35911  01B83A  50F5               	movf	tablat,w,c
 35912  01B83C  6E0B               	movwf	(btemp+10)^0,c
 35913  01B83E  6A0C               	clrf	(btemp+11)^0,c
 35914                           
 35915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35916                           ; Switch size 1, requested type "simple"
 35917                           ; Number of cases is 1, Range of values is 0 to 0
 35918                           ; switch strategies available:
 35919                           ; Name         Instructions Cycles
 35920                           ; simple_byte            4     3 (average)
 35921                           ;	Chosen strategy is simple_byte
 35922  01B840  500C               	movf	(btemp+11)^0,w,c
 35923  01B842  0A00               	xorlw	0	; case 0
 35924  01B844  A4D8               	btfss	status,2,c
 35925  01B846  D03C               	goto	l11419
 35926                           
 35927                           ; Switch size 1, requested type "simple"
 35928                           ; Number of cases is 2, Range of values is 43 to 45
 35929                           ; switch strategies available:
 35930                           ; Name         Instructions Cycles
 35931                           ; simple_byte            7     4 (average)
 35932                           ;	Chosen strategy is simple_byte
 35933  01B848  500B               	movf	(btemp+10)^0,w,c
 35934  01B84A  0A2B               	xorlw	43	; case 43
 35935  01B84C  B4D8               	btfsc	status,2,c
 35936  01B84E  D7D3               	goto	l11411
 35937  01B850  0A06               	xorlw	6	; case 45
 35938  01B852  B4D8               	btfsc	status,2,c
 35939  01B854  D7C4               	goto	l11409
 35940  01B856  D034               	goto	l11419
 35941  01B858                     l11415:
 35942                           
 35943                           ;stkvar	_n @ sp[(-9)+5]
 35944  01B858  0EFC               	movlw	-4
 35945  01B85A  006F FF8C  F00B    	movff	plusw1,btemp+10
 35946  01B860  0EFD               	movlw	-3
 35947  01B862  006F FF8C  F00C    	movff	plusw1,btemp+11
 35948  01B868  0E0A               	movlw	10
 35949  01B86A  020B               	mulwf	(btemp+10)^0,c
 35950  01B86C  006F FFCC  F009    	movff	prodl,btemp+8
 35951  01B872  006F FFD0  F00A    	movff	prodh,btemp+9
 35952  01B878  020C               	mulwf	(btemp+11)^0,c
 35953  01B87A  50F3               	movf	prodl,w,c
 35954  01B87C  260A               	addwf	(btemp+9)^0,f,c
 35955                           
 35956                           ;stkvar	_s @ sp[(-9)+-2]
 35957  01B87E  50E1               	movf	fsr1l,w,c
 35958  01B880  0FF5               	addlw	-11
 35959  01B882  6ED9               	movwf	fsr2l,c
 35960  01B884  50E2               	movf	fsr1h,w,c
 35961  01B886  6EDA               	movwf	fsr2h,c
 35962  01B888  0EFF               	movlw	255
 35963  01B88A  22DA               	addwfc	fsr2h,f,c
 35964  01B88C  006F FF7B FFF6     	movff	postinc2,tblptrl
 35965  01B892  006F FF77 FFF7     	movff	postdec2,tblptrh
 35966  01B898                     	if	0	;tblptru may be non-zero
 35967  01B898                     	endif
 35968  01B898                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 35969  01B898  0E00               	movlw	low (__mediumconst shr (0+16))
 35970  01B89A  6EF8               	movwf	tblptru,c
 35971  01B89C                     	endif
 35972  01B89C  0008               	tblrd		*
 35973  01B89E  50F5               	movf	tablat,w,c
 35974  01B8A0  5E09               	subwf	(btemp+8)^0,f,c
 35975  01B8A2  0E00               	movlw	0
 35976  01B8A4  5A0A               	subwfb	(btemp+9)^0,f,c
 35977  01B8A6  0E30               	movlw	48
 35978  01B8A8  2609               	addwf	(btemp+8)^0,f,c
 35979  01B8AA  0E00               	movlw	0
 35980  01B8AC  220A               	addwfc	(btemp+9)^0,f,c
 35981                           
 35982                           ;stkvar	_n @ sp[(-9)+5]
 35983  01B8AE  0EFC               	movlw	-4
 35984  01B8B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 35985  01B8B6  0EFD               	movlw	-3
 35986  01B8B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 35987  01B8BE  D79B               	goto	l11411
 35988  01B8C0                     l11419:
 35989  01B8C0  0ED0               	movlw	208
 35990  01B8C2  6E0B               	movwf	(btemp+10)^0,c
 35991  01B8C4  0EFF               	movlw	255
 35992  01B8C6  6E0C               	movwf	(btemp+11)^0,c
 35993                           
 35994                           ;stkvar	_s @ sp[(-9)+-2]
 35995  01B8C8  50E1               	movf	fsr1l,w,c
 35996  01B8CA  0FF5               	addlw	-11
 35997  01B8CC  6ED9               	movwf	fsr2l,c
 35998  01B8CE  50E2               	movf	fsr1h,w,c
 35999  01B8D0  6EDA               	movwf	fsr2h,c
 36000  01B8D2  0EFF               	movlw	255
 36001  01B8D4  22DA               	addwfc	fsr2h,f,c
 36002  01B8D6  006F FF7B FFF6     	movff	postinc2,tblptrl
 36003  01B8DC  006F FF77 FFF7     	movff	postdec2,tblptrh
 36004  01B8E2                     	if	0	;tblptru may be non-zero
 36005  01B8E2                     	endif
 36006  01B8E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 36007  01B8E2  0E00               	movlw	low (__mediumconst shr (0+16))
 36008  01B8E4  6EF8               	movwf	tblptru,c
 36009  01B8E6                     	endif
 36010  01B8E6  0008               	tblrd		*
 36011  01B8E8  50F5               	movf	tablat,w,c
 36012  01B8EA  6E09               	movwf	(btemp+8)^0,c
 36013  01B8EC  6A0A               	clrf	(btemp+9)^0,c
 36014  01B8EE  500B               	movf	(btemp+10)^0,w,c
 36015  01B8F0  2609               	addwf	(btemp+8)^0,f,c
 36016  01B8F2  500C               	movf	(btemp+11)^0,w,c
 36017  01B8F4  220A               	addwfc	(btemp+9)^0,f,c
 36018  01B8F6  500A               	movf	(btemp+9)^0,w,c
 36019  01B8F8  E106               	bnz	u10360
 36020  01B8FA  0E0A               	movlw	10
 36021  01B8FC  5C09               	subwf	(btemp+8)^0,w,c
 36022  01B8FE  B0D8               	btfsc	status,0,c
 36023  01B900  D002               	goto	u10360
 36024  01B902  0E01               	movlw	1
 36025  01B904  D001               	goto	u10370
 36026  01B906                     u10360:
 36027  01B906  0E00               	movlw	0
 36028  01B908                     u10370:
 36029  01B908  6E0B               	movwf	(btemp+10)^0,c
 36030  01B90A  6A0C               	clrf	(btemp+11)^0,c
 36031                           
 36032                           ;stkvar	_atoi$7442 @ sp[(-9)+0]
 36033  01B90C  0EF7               	movlw	-9
 36034  01B90E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 36035  01B914  0EF8               	movlw	-8
 36036  01B916  0060  F033  FFE3   	movff	btemp+11,plusw1
 36037                           
 36038                           ;stkvar	_atoi$7442 @ sp[(-9)+0]
 36039  01B91C  0EF7               	movlw	-9
 36040  01B91E  006F FF8C  F001    	movff	plusw1,btemp
 36041  01B924  0EF8               	movlw	-8
 36042  01B926  50E3               	movf	plusw1,w,c
 36043  01B928  1001               	iorwf	btemp^0,w,c
 36044  01B92A  A4D8               	btfss	status,2,c
 36045  01B92C  D795               	goto	l11415
 36046                           
 36047                           ;stkvar	_neg @ sp[(-9)+7]
 36048  01B92E  0EFE               	movlw	-2
 36049  01B930  006F FF8C  F001    	movff	plusw1,btemp
 36050  01B936  0EFF               	movlw	-1
 36051  01B938  50E3               	movf	plusw1,w,c
 36052  01B93A  1001               	iorwf	btemp^0,w,c
 36053  01B93C  A4D8               	btfss	status,2,c
 36054  01B93E  D00E               	goto	l11429
 36055                           
 36056                           ;stkvar	_n @ sp[(-9)+5]
 36057  01B940  0EFC               	movlw	-4
 36058  01B942  006F FF8C  F001    	movff	plusw1,btemp
 36059  01B948  1E01               	comf	btemp^0,f,c
 36060  01B94A  0EFD               	movlw	-3
 36061  01B94C  006F FF8C  F002    	movff	plusw1,btemp+1
 36062  01B952  1E02               	comf	(btemp+1)^0,f,c
 36063  01B954  2A01               	incf	btemp^0,f,c
 36064  01B956  B4D8               	btfsc	status,2,c
 36065  01B958  2A02               	incf	(btemp+1)^0,f,c
 36066  01B95A  D008               	goto	l3437
 36067  01B95C                     l11429:
 36068                           
 36069                           ;stkvar	_n @ sp[(-9)+5]
 36070  01B95C  0EFC               	movlw	-4
 36071  01B95E  006F FF8C  F001    	movff	plusw1,btemp
 36072  01B964  0EFD               	movlw	-3
 36073  01B966  006F FF8C  F002    	movff	plusw1,btemp+1
 36074  01B96C                     l3437:
 36075                           
 36076                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 36077  01B96C  0EF5               	movlw	245
 36078  01B96E  26E1               	addwf	fsr1l,f,c
 36079  01B970  0EFF               	movlw	255
 36080  01B972  22E2               	addwfc	fsr1h,f,c
 36081  01B974  0012               	return		;funcret
 36082  01B976                     __end_of_atoi:
 36083                           	opt callstack 0
 36084                           
 36085 ;; *************** function _isspace *****************
 36086 ;; Defined at:
 36087 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 36088 ;; Parameters:    Size  Location     Type
 36089 ;;  c               2  [STACK] int 
 36090 ;; Auto vars:     Size  Location     Type
 36091 ;;		None
 36092 ;; Return value:  Size  Location     Type
 36093 ;;                  2  [STACK] int 
 36094 ;; Registers used:
 36095 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 36096 ;; Tracked objects:
 36097 ;;		On entry : 0/0
 36098 ;;		On exit  : 0/0
 36099 ;;		Unchanged: 0/0
 36100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36105 ;;Total ram usage:        0 bytes
 36106 ;; Hardware stack levels used:    1
 36107 ;; Hardware stack levels required when called:   15
 36108 ;; This function calls:
 36109 ;;		Nothing
 36110 ;; This function is called by:
 36111 ;;		_atoi
 36112 ;; This function uses a reentrant model
 36113 ;;
 36114                           
 36115                           	psect	text124
 36116  0010C8                     __ptext124:
 36117                           	opt callstack 0
 36118  0010C8                     _isspace:
 36119                           	opt callstack 0
 36120                           
 36121                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36122  0010C8  52E6               	movf	postinc1,f,c
 36123                           
 36124                           ;stkvar	_isspace$7491 @ sp[(-1)+0]
 36125                           
 36126                           ;incstack = 0
 36127 ;; hardware stack exceeded
 36128  0010CA  0EFF               	movlw	-1
 36129  0010CC  6AE3               	clrf	plusw1,c
 36130  0010CE  2AE3               	incf	plusw1,f,c
 36131                           
 36132                           ;stkvar	_c @ sp[(-1)+-2]
 36133  0010D0  0EFD               	movlw	-3
 36134  0010D2  006F FF8C  F001    	movff	plusw1,btemp
 36135  0010D8  0E20               	movlw	32
 36136  0010DA  1801               	xorwf	btemp^0,w,c
 36137  0010DC  E104               	bnz	u9180
 36138  0010DE  0EFE               	movlw	-2
 36139  0010E0  50E3               	movf	plusw1,w,c
 36140  0010E2  B4D8               	btfsc	status,2,c
 36141  0010E4  D012               	goto	l10779
 36142  0010E6                     u9180:
 36143                           
 36144                           ;stkvar	_c @ sp[(-1)+-2]
 36145  0010E6  0EFD               	movlw	-3
 36146  0010E8  50E3               	movf	plusw1,w,c
 36147  0010EA  0FF7               	addlw	247
 36148  0010EC  6E0B               	movwf	(btemp+10)^0,c
 36149  0010EE  0EFE               	movlw	-2
 36150  0010F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 36151  0010F6  0EFF               	movlw	255
 36152  0010F8  220C               	addwfc	(btemp+11)^0,f,c
 36153  0010FA  500C               	movf	(btemp+11)^0,w,c
 36154  0010FC  E104               	bnz	u9190
 36155  0010FE  0E05               	movlw	5
 36156  001100  5C0B               	subwf	(btemp+10)^0,w,c
 36157  001102  A0D8               	btfss	status,0,c
 36158  001104  D002               	goto	l10779
 36159  001106                     u9190:
 36160                           
 36161                           ;stkvar	_isspace$7491 @ sp[(-1)+0]
 36162  001106  0EFF               	movlw	-1
 36163  001108  6AE3               	clrf	plusw1,c
 36164  00110A                     l10779:
 36165                           
 36166                           ;stkvar	_isspace$7491 @ sp[(-1)+0]
 36167  00110A  0EFF               	movlw	-1
 36168  00110C  50E3               	movf	plusw1,w,c
 36169  00110E  6E01               	movwf	btemp^0,c
 36170  001110  6A02               	clrf	(btemp+1)^0,c
 36171                           
 36172                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 36173  001112  52E5               	movf	postdec1,f,c
 36174  001114  52E5               	movf	postdec1,f,c
 36175  001116  52E5               	movf	postdec1,f,c
 36176  001118  0012               	return		;funcret
 36177  00111A                     __end_of_isspace:
 36178                           	opt callstack 0
 36179                           
 36180 ;; *************** function _isdigit *****************
 36181 ;; Defined at:
 36182 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 36183 ;; Parameters:    Size  Location     Type
 36184 ;;  c               2  [STACK] int 
 36185 ;; Auto vars:     Size  Location     Type
 36186 ;;		None
 36187 ;; Return value:  Size  Location     Type
 36188 ;;                  2  [STACK] int 
 36189 ;; Registers used:
 36190 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 36191 ;; Tracked objects:
 36192 ;;		On entry : 0/0
 36193 ;;		On exit  : 0/0
 36194 ;;		Unchanged: 0/0
 36195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36200 ;;Total ram usage:        0 bytes
 36201 ;; Hardware stack levels used:    1
 36202 ;; Hardware stack levels required when called:   15
 36203 ;; This function calls:
 36204 ;;		Nothing
 36205 ;; This function is called by:
 36206 ;;		_vfpfcnvrt
 36207 ;;		_atoi
 36208 ;; This function uses a reentrant model
 36209 ;;
 36210                           
 36211                           	psect	text125
 36212  0018B0                     __ptext125:
 36213                           	opt callstack 0
 36214  0018B0                     _isdigit:
 36215                           	opt callstack 0
 36216                           
 36217                           ;stkvar	_c @ sp[(0)+-2]
 36218                           
 36219                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36220                           ;incstack = 0
 36221 ;; hardware stack exceeded
 36222  0018B0  0EFE               	movlw	-2
 36223  0018B2  50E3               	movf	plusw1,w,c
 36224  0018B4  0FD0               	addlw	208
 36225  0018B6  6E0B               	movwf	(btemp+10)^0,c
 36226  0018B8  0EFF               	movlw	-1
 36227  0018BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 36228  0018C0  0EFF               	movlw	255
 36229  0018C2  220C               	addwfc	(btemp+11)^0,f,c
 36230  0018C4  500C               	movf	(btemp+11)^0,w,c
 36231  0018C6  E106               	bnz	u7970
 36232  0018C8  0E0A               	movlw	10
 36233  0018CA  5C0B               	subwf	(btemp+10)^0,w,c
 36234  0018CC  B0D8               	btfsc	status,0,c
 36235  0018CE  D002               	goto	u7970
 36236  0018D0  0E01               	movlw	1
 36237  0018D2  D001               	goto	u7980
 36238  0018D4                     u7970:
 36239  0018D4  0E00               	movlw	0
 36240  0018D6                     u7980:
 36241  0018D6  6E01               	movwf	btemp^0,c
 36242  0018D8  6A02               	clrf	(btemp+1)^0,c
 36243                           
 36244                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 36245  0018DA  52E5               	movf	postdec1,f,c
 36246  0018DC  52E5               	movf	postdec1,f,c
 36247  0018DE  0012               	return		;funcret
 36248  0018E0                     __end_of_isdigit:
 36249                           	opt callstack 0
 36250                           
 36251 ;; *************** function _set_vterm *****************
 36252 ;; Defined at:
 36253 ;;		line 110 in file "mconfig.c"
 36254 ;; Parameters:    Size  Location     Type
 36255 ;;  vterm           1  [STACK] const unsigned char 
 36256 ;; Auto vars:     Size  Location     Type
 36257 ;;		None
 36258 ;; Return value:  Size  Location     Type
 36259 ;;                  1  [STACK] unsigned char 
 36260 ;; Registers used:
 36261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 36262 ;; Tracked objects:
 36263 ;;		On entry : 0/2
 36264 ;;		On exit  : 0/0
 36265 ;;		Unchanged: 0/0
 36266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36271 ;;Total ram usage:        0 bytes
 36272 ;; Hardware stack levels used:    1
 36273 ;; Hardware stack levels required when called:   15
 36274 ;; This function calls:
 36275 ;;		Nothing
 36276 ;; This function is called by:
 36277 ;;		_main
 36278 ;;		_check_help
 36279 ;; This function uses a reentrant model
 36280 ;;
 36281                           
 36282                           	psect	text126
 36283  001E14                     __ptext126:
 36284                           	opt callstack 0
 36285  001E14                     _set_vterm:
 36286                           	opt callstack 15
 36287                           
 36288                           ;mconfig.c: 110: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 111: {;mconfig.c: 112
      +                          :  D.vterm = vterm & 0x03;
 36289                           ;stkvar	_vterm @ sp[(0)+-1]
 36290                           
 36291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36292                           ;incstack = 0
 36293  001E14  0EFF               	movlw	-1
 36294  001E16  006F FF8C  F00C    	movff	plusw1,btemp+11
 36295  001E1C  0E03               	movlw	3
 36296  001E1E  160C               	andwf	(btemp+11)^0,f,c
 36297  001E20  EE23  F0CF         	lfsr	2,_D+640
 36298  001E24  50DF               	movf	223,w,c
 36299  001E26  180C               	xorwf	(btemp+11)^0,w,c
 36300  001E28  0BFE               	andlw	-2
 36301  001E2A  180C               	xorwf	(btemp+11)^0,w,c
 36302  001E2C  6EDF               	movwf	223,c
 36303                           
 36304                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 36305  001E2E  52E5               	movf	postdec1,f,c
 36306  001E30  0012               	return		;funcret
 36307  001E32                     __end_of_set_vterm:
 36308                           	opt callstack 0
 36309                           
 36310 ;; *************** function _set_temp_display_help *****************
 36311 ;; Defined at:
 36312 ;;		line 217 in file "mconfig.c"
 36313 ;; Parameters:    Size  Location     Type
 36314 ;;  new_response    1  [STACK] const enum E16677
 36315 ;; Auto vars:     Size  Location     Type
 36316 ;;		None
 36317 ;; Return value:  Size  Location     Type
 36318 ;;                  1  [STACK] enum E16677
 36319 ;; Registers used:
 36320 ;;		wreg, fsr1l, fsr1h
 36321 ;; Tracked objects:
 36322 ;;		On entry : 0/1
 36323 ;;		On exit  : 3F/1
 36324 ;;		Unchanged: 0/0
 36325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36330 ;;Total ram usage:        0 bytes
 36331 ;; Hardware stack levels used:    1
 36332 ;; Hardware stack levels required when called:   15
 36333 ;; This function calls:
 36334 ;;		Nothing
 36335 ;; This function is called by:
 36336 ;;		_check_help
 36337 ;; This function uses a reentrant model
 36338 ;;
 36339                           
 36340                           	psect	text127
 36341  001F78                     __ptext127:
 36342                           	opt callstack 0
 36343  001F78                     _set_temp_display_help:
 36344                           	opt callstack 14
 36345                           
 36346                           ;mconfig.c: 217: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 218: {;mconfig.c: 219:  static D_CODES old_info;;mconfig.c: 221:  old_info = V.respon
      +                          se.help_temp;
 36347                           
 36348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36349                           ;incstack = 0
 36350  001F78  0101               	movlb	1	; () banked
 36351  001F7A  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 36352                           
 36353                           ; BSR set to: 1
 36354                           ;mconfig.c: 222:  V.response.help_temp = new_response_info;
 36355                           ;stkvar	_new_response_info @ sp[(0)+-1]
 36356  001F7C  0EFF               	movlw	-1
 36357  001F7E  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 36358                           
 36359                           ; BSR set to: 1
 36360                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 36361  001F84  52E5               	movf	postdec1,f,c
 36362  001F86  0012               	return		;funcret
 36363  001F88                     __end_of_set_temp_display_help:
 36364                           	opt callstack 0
 36365                           
 36366 ;; *************** function _set_display_info *****************
 36367 ;; Defined at:
 36368 ;;		line 206 in file "mconfig.c"
 36369 ;; Parameters:    Size  Location     Type
 36370 ;;  new_response    1  [STACK] const enum E16677
 36371 ;; Auto vars:     Size  Location     Type
 36372 ;;		None
 36373 ;; Return value:  Size  Location     Type
 36374 ;;                  1  [STACK] enum E17160
 36375 ;; Registers used:
 36376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36377 ;; Tracked objects:
 36378 ;;		On entry : 0/1
 36379 ;;		On exit  : 0/0
 36380 ;;		Unchanged: 0/0
 36381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36386 ;;Total ram usage:        0 bytes
 36387 ;; Hardware stack levels used:    1
 36388 ;; Hardware stack levels required when called:   16
 36389 ;; This function calls:
 36390 ;;		_TimerDone
 36391 ;; This function is called by:
 36392 ;;		_main
 36393 ;;		_check_help
 36394 ;; This function uses a reentrant model
 36395 ;;
 36396                           
 36397                           	psect	text128
 36398  001E32                     __ptext128:
 36399                           	opt callstack 0
 36400  001E32                     _set_display_info:
 36401                           	opt callstack 14
 36402                           
 36403                           ;mconfig.c: 206: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          7: {;mconfig.c: 208:  static D_CODES old_info = DIS_STR;;mconfig.c: 210:  if (TimerDone(
      +                          TMR_INFO)) {
 36404                           
 36405                           ; BSR set to: 1
 36406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36407                           ;incstack = 0
 36408  001E32  0E07               	movlw	7
 36409  001E34  6EE6               	movwf	postinc1,c
 36410  001E36  ECF3  F00C         	call	_TimerDone	;wreg free
 36411  001E3A  5001               	movf	btemp^0,w,c
 36412  001E3C  B4D8               	btfsc	status,2,c
 36413  001E3E  D006               	goto	l1871
 36414                           
 36415                           ;mconfig.c: 211:   old_info = V.response.info;
 36416  001E40  0101               	movlb	1	; () banked
 36417  001E42  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 36418                           
 36419                           ; BSR set to: 1
 36420                           ;mconfig.c: 212:   V.response.info = new_response_info;
 36421                           ;stkvar	_new_response_info @ sp[(0)+-1]
 36422  001E44  0EFF               	movlw	-1
 36423  001E46  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 36424  001E4C                     l1871:
 36425                           
 36426                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 36427  001E4C  52E5               	movf	postdec1,f,c
 36428  001E4E  0012               	return		;funcret
 36429  001E50                     __end_of_set_display_info:
 36430                           	opt callstack 0
 36431                           
 36432 ;; *************** function _mode_lamp_dim *****************
 36433 ;; Defined at:
 36434 ;;		line 13 in file "mconfig.c"
 36435 ;; Parameters:    Size  Location     Type
 36436 ;;  level           2  [STACK] const unsigned short 
 36437 ;; Auto vars:     Size  Location     Type
 36438 ;;		None
 36439 ;; Return value:  Size  Location     Type
 36440 ;;                  1  [STACK] void 
 36441 ;; Registers used:
 36442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 36443 ;; Tracked objects:
 36444 ;;		On entry : 0/1
 36445 ;;		On exit  : 0/0
 36446 ;;		Unchanged: 0/0
 36447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36452 ;;Total ram usage:        0 bytes
 36453 ;; Hardware stack levels used:    1
 36454 ;; Hardware stack levels required when called:   16
 36455 ;; This function calls:
 36456 ;;		_PWM8_LoadDutyValue
 36457 ;; This function is called by:
 36458 ;;		_main
 36459 ;;		_check_help
 36460 ;; This function uses a reentrant model
 36461 ;;
 36462                           
 36463                           	psect	text129
 36464  001E9E                     __ptext129:
 36465                           	opt callstack 0
 36466  001E9E                     _mode_lamp_dim:
 36467                           	opt callstack 14
 36468                           
 36469                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 36470                           ;stkvar	_level @ sp[(0)+-2]
 36471                           
 36472                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36473                           ;incstack = 0
 36474  001E9E  0EFE               	movlw	-2
 36475  001EA0  006F FF8F FFE6     	movff	plusw1,postinc1
 36476  001EA6  006F FF8F FFE6     	movff	plusw1,postinc1
 36477  001EAC  EC21  F00A         	call	_PWM8_LoadDutyValue	;wreg free
 36478                           
 36479                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 36480  001EB0  52E5               	movf	postdec1,f,c
 36481  001EB2  52E5               	movf	postdec1,f,c
 36482  001EB4  0012               	return		;funcret
 36483  001EB6                     __end_of_mode_lamp_dim:
 36484                           	opt callstack 0
 36485                           
 36486 ;; *************** function _mode_lamp_bright *****************
 36487 ;; Defined at:
 36488 ;;		line 18 in file "mconfig.c"
 36489 ;; Parameters:    Size  Location     Type
 36490 ;;		None
 36491 ;; Auto vars:     Size  Location     Type
 36492 ;;		None
 36493 ;; Return value:  Size  Location     Type
 36494 ;;                  1  [STACK] void 
 36495 ;; Registers used:
 36496 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 36497 ;; Tracked objects:
 36498 ;;		On entry : 0/0
 36499 ;;		On exit  : 0/0
 36500 ;;		Unchanged: 0/0
 36501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36506 ;;Total ram usage:        0 bytes
 36507 ;; Hardware stack levels used:    1
 36508 ;; Hardware stack levels required when called:   16
 36509 ;; This function calls:
 36510 ;;		_PWM8_LoadDutyValue
 36511 ;; This function is called by:
 36512 ;;		_check_help
 36513 ;; This function uses a reentrant model
 36514 ;;
 36515                           
 36516                           	psect	text130
 36517  001FA6                     __ptext130:
 36518                           	opt callstack 0
 36519  001FA6                     _mode_lamp_bright:
 36520                           	opt callstack 13
 36521                           
 36522                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 36523                           
 36524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36525                           ;incstack = 0
 36526  001FA6  0E2C               	movlw	44
 36527  001FA8  6EE6               	movwf	postinc1,c
 36528  001FAA  0E01               	movlw	1
 36529  001FAC  6EE6               	movwf	postinc1,c
 36530  001FAE  EC21  F00A         	call	_PWM8_LoadDutyValue	;wreg free
 36531                           
 36532                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 36533  001FB2  0012               	return		;funcret
 36534  001FB4                     __end_of_mode_lamp_bright:
 36535                           	opt callstack 0
 36536                           
 36537 ;; *************** function _PWM8_LoadDutyValue *****************
 36538 ;; Defined at:
 36539 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 36540 ;; Parameters:    Size  Location     Type
 36541 ;;  dutyValue       2  [STACK] unsigned short 
 36542 ;; Auto vars:     Size  Location     Type
 36543 ;;		None
 36544 ;; Return value:  Size  Location     Type
 36545 ;;                  1  [STACK] void 
 36546 ;; Registers used:
 36547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 36548 ;; Tracked objects:
 36549 ;;		On entry : 0/1
 36550 ;;		On exit  : 0/0
 36551 ;;		Unchanged: 0/0
 36552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36557 ;;Total ram usage:        0 bytes
 36558 ;; Hardware stack levels used:    1
 36559 ;; Hardware stack levels required when called:   15
 36560 ;; This function calls:
 36561 ;;		Nothing
 36562 ;; This function is called by:
 36563 ;;		_mode_lamp_dim
 36564 ;;		_mode_lamp_bright
 36565 ;; This function uses a reentrant model
 36566 ;;
 36567                           
 36568                           	psect	text131
 36569  001442                     __ptext131:
 36570                           	opt callstack 0
 36571  001442                     _PWM8_LoadDutyValue:
 36572                           	opt callstack 14
 36573                           
 36574                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 36575                           ;stkvar	_dutyValue @ sp[(0)+-2]
 36576                           
 36577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36578                           ;incstack = 0
 36579  001442  0EFE               	movlw	-2
 36580  001444  006F FF8C  F00B    	movff	plusw1,btemp+10
 36581  00144A  0EFF               	movlw	-1
 36582  00144C  006F FF8C  F00C    	movff	plusw1,btemp+11
 36583  001452  90D8               	bcf	status,0,c
 36584  001454  320C               	rrcf	(btemp+11)^0,f,c
 36585  001456  320B               	rrcf	(btemp+10)^0,f,c
 36586  001458  90D8               	bcf	status,0,c
 36587  00145A  320C               	rrcf	(btemp+11)^0,f,c
 36588  00145C  320B               	rrcf	(btemp+10)^0,f,c
 36589  00145E  500B               	movf	(btemp+10)^0,w,c
 36590  001460  6E61               	movwf	97,c	;volatile
 36591                           
 36592                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 36593                           ;stkvar	_dutyValue @ sp[(0)+-2]
 36594  001462  0EFE               	movlw	-2
 36595  001464  006F FF8C  F00C    	movff	plusw1,btemp+11
 36596  00146A  0E03               	movlw	3
 36597  00146C  160C               	andwf	(btemp+11)^0,f,c
 36598  00146E  0E06               	movlw	6
 36599  001470  6E01               	movwf	btemp^0,c
 36600  001472                     u12165:
 36601  001472  90D8               	bcf	status,0,c
 36602  001474  360C               	rlcf	(btemp+11)^0,f,c
 36603  001476  2E01               	decfsz	btemp^0,f,c
 36604  001478  D7FC               	goto	u12165
 36605  00147A  500C               	movf	(btemp+11)^0,w,c
 36606  00147C  6E60               	movwf	96,c	;volatile
 36607                           
 36608                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 36609  00147E  52E5               	movf	postdec1,f,c
 36610  001480  52E5               	movf	postdec1,f,c
 36611  001482  0012               	return		;funcret
 36612  001484                     __end_of_PWM8_LoadDutyValue:
 36613                           	opt callstack 0
 36614                           
 36615 ;; *************** function _help_button *****************
 36616 ;; Defined at:
 36617 ;;		line 26 in file "mconfig.c"
 36618 ;; Parameters:    Size  Location     Type
 36619 ;;		None
 36620 ;; Auto vars:     Size  Location     Type
 36621 ;;		None
 36622 ;; Return value:  Size  Location     Type
 36623 ;;                  1  [STACK] _Bool 
 36624 ;; Registers used:
 36625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36626 ;; Tracked objects:
 36627 ;;		On entry : 0/1
 36628 ;;		On exit  : 0/0
 36629 ;;		Unchanged: 0/0
 36630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36635 ;;Total ram usage:        0 bytes
 36636 ;; Hardware stack levels used:    1
 36637 ;; Hardware stack levels required when called:   16
 36638 ;; This function calls:
 36639 ;;		_StartTimer
 36640 ;;		_TimerDone
 36641 ;; This function is called by:
 36642 ;;		_check_help
 36643 ;; This function uses a reentrant model
 36644 ;;
 36645                           
 36646                           	psect	text132
 36647  001678                     __ptext132:
 36648                           	opt callstack 0
 36649  001678                     _help_button:
 36650                           	opt callstack 13
 36651                           
 36652                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 36653                           
 36654                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36655                           ;incstack = 0
 36656  001678  B0CB               	btfsc	203,0,c	;volatile
 36657  00167A  D00C               	goto	l1814
 36658                           
 36659                           ;mconfig.c: 29:   V.help = 1;
 36660  00167C  0101               	movlb	1	; () banked
 36661  00167E  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 36662                           
 36663                           ; BSR set to: 1
 36664                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 36665  001680  0E08               	movlw	8
 36666  001682  6EE6               	movwf	postinc1,c
 36667  001684  ECF3  F00C         	call	_TimerDone	;wreg free
 36668  001688  5001               	movf	btemp^0,w,c
 36669  00168A  B4D8               	btfsc	status,2,c
 36670  00168C  D003               	goto	l1814
 36671                           
 36672                           ;mconfig.c: 31:    return 1;
 36673  00168E  0E01               	movlw	1
 36674  001690  6E01               	movwf	btemp^0,c
 36675  001692  0012               	return	
 36676  001694                     l1814:
 36677                           
 36678                           ;mconfig.c: 34:  if (!V.help)
 36679  001694  0101               	movlb	1	; () banked
 36680  001696  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 36681  001698  D008               	goto	l13535
 36682                           
 36683                           ; BSR set to: 1
 36684                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 36685  00169A  0E2C               	movlw	44
 36686  00169C  6EE6               	movwf	postinc1,c
 36687  00169E  0E01               	movlw	1
 36688  0016A0  6EE6               	movwf	postinc1,c
 36689  0016A2  0E08               	movlw	8
 36690  0016A4  6EE6               	movwf	postinc1,c
 36691  0016A6  EC82  F00A         	call	_StartTimer	;wreg free
 36692  0016AA                     l13535:
 36693                           
 36694                           ;mconfig.c: 37:  return 0;
 36695  0016AA  0E00               	movlw	0
 36696  0016AC  6E01               	movwf	btemp^0,c
 36697                           
 36698                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 36699  0016AE  0012               	return		;funcret
 36700  0016B0                     __end_of_help_button:
 36701                           	opt callstack 0
 36702                           
 36703 ;; *************** function _TimerDone *****************
 36704 ;; Defined at:
 36705 ;;		line 20 in file "timers.c"
 36706 ;; Parameters:    Size  Location     Type
 36707 ;;  timer           1  [STACK] const unsigned char 
 36708 ;; Auto vars:     Size  Location     Type
 36709 ;;		None
 36710 ;; Return value:  Size  Location     Type
 36711 ;;                  1  [STACK] _Bool 
 36712 ;; Registers used:
 36713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 36714 ;; Tracked objects:
 36715 ;;		On entry : 0/1
 36716 ;;		On exit  : 0/0
 36717 ;;		Unchanged: 0/0
 36718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36723 ;;Total ram usage:        0 bytes
 36724 ;; Hardware stack levels used:    1
 36725 ;; Hardware stack levels required when called:   15
 36726 ;; This function calls:
 36727 ;;		Nothing
 36728 ;; This function is called by:
 36729 ;;		_main
 36730 ;;		_WaitMs
 36731 ;;		_help_button
 36732 ;;		_check_help
 36733 ;;		_set_display_info
 36734 ;;		_update_adc_result
 36735 ;;		_esr_check
 36736 ;; This function uses a reentrant model
 36737 ;;
 36738                           
 36739                           	psect	text133
 36740  0019E6                     __ptext133:
 36741                           	opt callstack 0
 36742  0019E6                     _TimerDone:
 36743                           	opt callstack 14
 36744                           
 36745                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36746                           ;incstack = 0
 36747  0019E6  0004               	clrwdt		;# 
 36748                           
 36749                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 36750                           ;stkvar	_timer @ sp[(0)+-1]
 36751  0019E8  0EFF               	movlw	-1
 36752  0019EA  50E3               	movf	plusw1,w,c
 36753  0019EC  0D02               	mullw	2
 36754  0019EE  0ED4               	movlw	low _tickCount
 36755  0019F0  24F3               	addwf	243,w,c
 36756  0019F2  6ED9               	movwf	fsr2l,c
 36757  0019F4  0E02               	movlw	high _tickCount
 36758  0019F6  20F4               	addwfc	prodh,w,c
 36759  0019F8  6EDA               	movwf	fsr2h,c
 36760  0019FA  50DE               	movf	postinc2,w,c
 36761  0019FC  10DE               	iorwf	postinc2,w,c
 36762  0019FE  A4D8               	btfss	status,2,c
 36763  001A00  D002               	goto	l12291
 36764                           
 36765                           ;timers.c: 24:   return 1;
 36766  001A02  0E01               	movlw	1
 36767  001A04  D001               	goto	L41
 36768  001A06                     l12291:
 36769                           
 36770                           ;timers.c: 26:  return 0;
 36771  001A06  0E00               	movlw	0
 36772  001A08                     L41:
 36773  001A08  6E01               	movwf	btemp^0,c
 36774                           
 36775                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 36776  001A0A  52E5               	movf	postdec1,f,c
 36777  001A0C  0012               	return		;funcret
 36778  001A0E                     __end_of_TimerDone:
 36779                           	opt callstack 0
 36780                           
 36781 ;; *************** function _StartTimer *****************
 36782 ;; Defined at:
 36783 ;;		line 12 in file "timers.c"
 36784 ;; Parameters:    Size  Location     Type
 36785 ;;  timer           1  [STACK] const unsigned char 
 36786 ;;  count           2  [STACK] const unsigned short 
 36787 ;; Auto vars:     Size  Location     Type
 36788 ;;		None
 36789 ;; Return value:  Size  Location     Type
 36790 ;;                  1  [STACK] void 
 36791 ;; Registers used:
 36792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 36793 ;; Tracked objects:
 36794 ;;		On entry : 0/0
 36795 ;;		On exit  : 0/0
 36796 ;;		Unchanged: 0/0
 36797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36802 ;;Total ram usage:        0 bytes
 36803 ;; Hardware stack levels used:    1
 36804 ;; Hardware stack levels required when called:   15
 36805 ;; This function calls:
 36806 ;;		Nothing
 36807 ;; This function is called by:
 36808 ;;		_main
 36809 ;;		_WaitMs
 36810 ;;		_help_button
 36811 ;;		_check_help
 36812 ;;		_update_adc_result
 36813 ;;		_calc_bsoc
 36814 ;;		_esr_check
 36815 ;; This function uses a reentrant model
 36816 ;;
 36817                           
 36818                           	psect	text134
 36819  001504                     __ptext134:
 36820                           	opt callstack 0
 36821  001504                     _StartTimer:
 36822                           	opt callstack 0
 36823                           
 36824                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 36825                           ;stkvar	_count @ sp[(0)+-3]
 36826                           
 36827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36828                           ;incstack = 0
 36829 ;; hardware stack exceeded
 36830  001504  0EFD               	movlw	-3
 36831  001506  006F FF8C  F00B    	movff	plusw1,btemp+10
 36832  00150C  0EFE               	movlw	-2
 36833  00150E  006F FF8C  F00C    	movff	plusw1,btemp+11
 36834  001514  90D8               	bcf	status,0,c
 36835  001516  340B               	rlcf	(btemp+10)^0,w,c
 36836  001518  6E09               	movwf	(btemp+8)^0,c
 36837  00151A  340C               	rlcf	(btemp+11)^0,w,c
 36838  00151C  6E0A               	movwf	(btemp+9)^0,c
 36839                           
 36840                           ;stkvar	_timer @ sp[(0)+-1]
 36841  00151E  0EFF               	movlw	-1
 36842  001520  50E3               	movf	plusw1,w,c
 36843  001522  0D02               	mullw	2
 36844  001524  0ED4               	movlw	low _tickCount
 36845  001526  24F3               	addwf	243,w,c
 36846  001528  6ED9               	movwf	fsr2l,c
 36847  00152A  0E02               	movlw	high _tickCount
 36848  00152C  20F4               	addwfc	prodh,w,c
 36849  00152E  6EDA               	movwf	fsr2h,c
 36850  001530  0060  F027  FFDE   	movff	btemp+8,postinc2
 36851  001536  0060  F02B  FFDD   	movff	btemp+9,postdec2
 36852                           
 36853                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 36854  00153C  52E5               	movf	postdec1,f,c
 36855  00153E  52E5               	movf	postdec1,f,c
 36856  001540  52E5               	movf	postdec1,f,c
 36857  001542  0012               	return		;funcret
 36858  001544                     __end_of_StartTimer:
 36859                           	opt callstack 0
 36860                           
 36861 ;; *************** function _display_info *****************
 36862 ;; Defined at:
 36863 ;;		line 196 in file "mconfig.c"
 36864 ;; Parameters:    Size  Location     Type
 36865 ;;		None
 36866 ;; Auto vars:     Size  Location     Type
 36867 ;;		None
 36868 ;; Return value:  Size  Location     Type
 36869 ;;                  1  [STACK] enum E16677
 36870 ;; Registers used:
 36871 ;;		btemp
 36872 ;; Tracked objects:
 36873 ;;		On entry : 0/1
 36874 ;;		On exit  : 0/0
 36875 ;;		Unchanged: 0/0
 36876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36881 ;;Total ram usage:        0 bytes
 36882 ;; Hardware stack levels used:    1
 36883 ;; Hardware stack levels required when called:   15
 36884 ;; This function calls:
 36885 ;;		Nothing
 36886 ;; This function is called by:
 36887 ;;		_check_help
 36888 ;; This function uses a reentrant model
 36889 ;;
 36890                           
 36891                           	psect	text135
 36892  00202A                     __ptext135:
 36893                           	opt callstack 0
 36894  00202A                     _display_info:
 36895                           	opt callstack 14
 36896                           
 36897                           ;mconfig.c: 198:  return V.response.info;
 36898                           
 36899                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36900                           ;incstack = 0
 36901  00202A  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 36902                           
 36903                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 36904  002030  0012               	return		;funcret
 36905  002032                     __end_of_display_info:
 36906                           	opt callstack 0
 36907                           
 36908 ;; *************** function _display_help *****************
 36909 ;; Defined at:
 36910 ;;		line 201 in file "mconfig.c"
 36911 ;; Parameters:    Size  Location     Type
 36912 ;;		None
 36913 ;; Auto vars:     Size  Location     Type
 36914 ;;		None
 36915 ;; Return value:  Size  Location     Type
 36916 ;;                  1  [STACK] enum E16677
 36917 ;; Registers used:
 36918 ;;		btemp
 36919 ;; Tracked objects:
 36920 ;;		On entry : 3F/1
 36921 ;;		On exit  : 0/0
 36922 ;;		Unchanged: 0/0
 36923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36928 ;;Total ram usage:        0 bytes
 36929 ;; Hardware stack levels used:    1
 36930 ;; Hardware stack levels required when called:   15
 36931 ;; This function calls:
 36932 ;;		Nothing
 36933 ;; This function is called by:
 36934 ;;		_check_help
 36935 ;; This function uses a reentrant model
 36936 ;;
 36937                           
 36938                           	psect	text136
 36939  002032                     __ptext136:
 36940                           	opt callstack 0
 36941  002032                     _display_help:
 36942                           	opt callstack 14
 36943                           
 36944                           ;mconfig.c: 203:  return V.response.help_temp;
 36945                           
 36946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36947                           ;incstack = 0
 36948  002032  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 36949                           
 36950                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 36951  002038  0012               	return		;funcret
 36952  00203A                     __end_of_display_help:
 36953                           	opt callstack 0
 36954                           
 36955 ;; *************** function _check_enter_button *****************
 36956 ;; Defined at:
 36957 ;;		line 49 in file "hid.c"
 36958 ;; Parameters:    Size  Location     Type
 36959 ;;  h               2  [STACK] PTR struct H_data
 36960 ;;		 -> H(9), 
 36961 ;; Auto vars:     Size  Location     Type
 36962 ;;		None
 36963 ;; Return value:  Size  Location     Type
 36964 ;;                  1  [STACK] _Bool 
 36965 ;; Registers used:
 36966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 36967 ;; Tracked objects:
 36968 ;;		On entry : 0/0
 36969 ;;		On exit  : 0/0
 36970 ;;		Unchanged: 0/0
 36971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36976 ;;Total ram usage:        0 bytes
 36977 ;; Hardware stack levels used:    1
 36978 ;; Hardware stack levels required when called:   15
 36979 ;; This function calls:
 36980 ;;		Nothing
 36981 ;; This function is called by:
 36982 ;;		_main
 36983 ;; This function uses a reentrant model
 36984 ;;
 36985                           
 36986                           	psect	text137
 36987  0009C6                     __ptext137:
 36988                           	opt callstack 0
 36989  0009C6                     _check_enter_button:
 36990                           	opt callstack 15
 36991                           
 36992                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 36993                           ;stkvar	_h @ sp[(0)+-2]
 36994                           
 36995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36996                           ;incstack = 0
 36997  0009C6  0EFE               	movlw	-2
 36998  0009C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 36999  0009CE  0EFF               	movlw	-1
 37000  0009D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 37001  0009D6  0E04               	movlw	4
 37002  0009D8  240B               	addwf	(btemp+10)^0,w,c
 37003  0009DA  6ED9               	movwf	fsr2l,c
 37004  0009DC  0E00               	movlw	0
 37005  0009DE  200C               	addwfc	(btemp+11)^0,w,c
 37006  0009E0  6EDA               	movwf	fsr2h,c
 37007  0009E2  50DF               	movf	indf2,w,c
 37008  0009E4  A4D8               	btfss	status,2,c
 37009  0009E6  D023               	goto	l16939
 37010                           
 37011                           ;stkvar	_h @ sp[(0)+-2]
 37012  0009E8  0EFE               	movlw	-2
 37013  0009EA  006F FF8C  F00B    	movff	plusw1,btemp+10
 37014  0009F0  0EFF               	movlw	-1
 37015  0009F2  006F FF8C  F00C    	movff	plusw1,btemp+11
 37016  0009F8  0E05               	movlw	5
 37017  0009FA  240B               	addwf	(btemp+10)^0,w,c
 37018  0009FC  6ED9               	movwf	fsr2l,c
 37019  0009FE  0E00               	movlw	0
 37020  000A00  200C               	addwfc	(btemp+11)^0,w,c
 37021  000A02  6EDA               	movwf	fsr2h,c
 37022  000A04  50DF               	movf	indf2,w,c
 37023  000A06  A4D8               	btfss	status,2,c
 37024  000A08  D012               	goto	l16939
 37025                           
 37026                           ;hid.c: 52:   h->wait_enter = 1;
 37027                           ;stkvar	_h @ sp[(0)+-2]
 37028  000A0A  0EFE               	movlw	-2
 37029  000A0C  006F FF8C  F00B    	movff	plusw1,btemp+10
 37030  000A12  0EFF               	movlw	-1
 37031  000A14  006F FF8C  F00C    	movff	plusw1,btemp+11
 37032  000A1A  0E04               	movlw	4
 37033  000A1C  240B               	addwf	(btemp+10)^0,w,c
 37034  000A1E  6ED9               	movwf	fsr2l,c
 37035  000A20  0E00               	movlw	0
 37036  000A22  200C               	addwfc	(btemp+11)^0,w,c
 37037  000A24  6EDA               	movwf	fsr2h,c
 37038  000A26  0E01               	movlw	1
 37039  000A28  6EDF               	movwf	indf2,c
 37040                           
 37041                           ;hid.c: 53:   return 1;
 37042  000A2A  0E01               	movlw	1
 37043  000A2C  D001               	goto	L42
 37044  000A2E                     l16939:
 37045                           
 37046                           ;hid.c: 55:  return 0;
 37047  000A2E  0E00               	movlw	0
 37048  000A30                     L42:
 37049  000A30  6E01               	movwf	btemp^0,c
 37050                           
 37051                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 37052  000A32  52E5               	movf	postdec1,f,c
 37053  000A34  52E5               	movf	postdec1,f,c
 37054  000A36  0012               	return		;funcret
 37055  000A38                     __end_of_check_enter_button:
 37056                           	opt callstack 0
 37057                           
 37058 ;; *************** function _calc_ror_data *****************
 37059 ;; Defined at:
 37060 ;;		line 103 in file "mbmc.c"
 37061 ;; Parameters:    Size  Location     Type
 37062 ;;		None
 37063 ;; Auto vars:     Size  Location     Type
 37064 ;;		None
 37065 ;; Return value:  Size  Location     Type
 37066 ;;                  1  [STACK] void 
 37067 ;; Registers used:
 37068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37069 ;; Tracked objects:
 37070 ;;		On entry : 0/0
 37071 ;;		On exit  : 0/0
 37072 ;;		Unchanged: 0/0
 37073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37078 ;;Total ram usage:        0 bytes
 37079 ;; Hardware stack levels used:    1
 37080 ;; Hardware stack levels required when called:   18
 37081 ;; This function calls:
 37082 ;;		___flge
 37083 ;;		___flsub
 37084 ;;		_conv_raw_result
 37085 ;;		_fabsf
 37086 ;; This function is called by:
 37087 ;;		_main
 37088 ;; This function uses a reentrant model
 37089 ;;
 37090                           
 37091                           	psect	text138
 37092  01D706                     __ptext138:
 37093                           	opt callstack 0
 37094  01D706                     _calc_ror_data:
 37095                           	opt callstack 12
 37096                           
 37097                           ;mbmc.c: 105:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 107:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 37098                           
 37099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37100                           ;incstack = 0
 37101  01D706  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 37102  01D70C  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 37103  01D712  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 37104  01D718  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 37105  01D71E  0E00               	movlw	0
 37106  01D720  6EE6               	movwf	postinc1,c
 37107  01D722  0E00               	movlw	0
 37108  01D724  6EE6               	movwf	postinc1,c
 37109  01D726  EC22  F0C2         	call	_conv_raw_result	;wreg free
 37110  01D72A  0060  F007  FFE6   	movff	btemp,postinc1
 37111  01D730  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37112  01D736  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37113  01D73C  0060  F013  FFE6   	movff	btemp+3,postinc1
 37114  01D742  ECDC  F009         	call	___flsub	;wreg free
 37115  01D746  0060  F007  FFE6   	movff	btemp,postinc1
 37116  01D74C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37117  01D752  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37118  01D758  0060  F013  FFE6   	movff	btemp+3,postinc1
 37119  01D75E  ECB9  F0FE         	call	_fabsf	;wreg free
 37120  01D762  0060  F004  F96F   	movff	btemp,_C+112	;volatile
 37121  01D768  0060  F008  F970   	movff	btemp+1,_C+113	;volatile
 37122  01D76E  0060  F00C  F971   	movff	btemp+2,_C+114	;volatile
 37123  01D774  0060  F010  F972   	movff	btemp+3,_C+115	;volatile
 37124                           
 37125                           ;mbmc.c: 108:  bcror = conv_raw_result(C_BATT, CONV);
 37126  01D77A  0E00               	movlw	0
 37127  01D77C  6EE6               	movwf	postinc1,c
 37128  01D77E  0E00               	movlw	0
 37129  01D780  6EE6               	movwf	postinc1,c
 37130  01D782  EC22  F0C2         	call	_conv_raw_result	;wreg free
 37131  01D786  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 37132  01D78C  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 37133  01D792  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 37134  01D798  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 37135                           
 37136                           ;mbmc.c: 109:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 37137  01D79E  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 37138  01D7A4  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 37139  01D7AA  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 37140  01D7B0  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 37141  01D7B6  0E00               	movlw	0
 37142  01D7B8  6EE6               	movwf	postinc1,c
 37143  01D7BA  0E04               	movlw	4
 37144  01D7BC  6EE6               	movwf	postinc1,c
 37145  01D7BE  EC22  F0C2         	call	_conv_raw_result	;wreg free
 37146  01D7C2  0060  F007  FFE6   	movff	btemp,postinc1
 37147  01D7C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37148  01D7CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37149  01D7D4  0060  F013  FFE6   	movff	btemp+3,postinc1
 37150  01D7DA  ECDC  F009         	call	___flsub	;wreg free
 37151  01D7DE  0060  F007  FFE6   	movff	btemp,postinc1
 37152  01D7E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37153  01D7EA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37154  01D7F0  0060  F013  FFE6   	movff	btemp+3,postinc1
 37155  01D7F6  ECB9  F0FE         	call	_fabsf	;wreg free
 37156  01D7FA  0060  F004  F96B   	movff	btemp,_C+108	;volatile
 37157  01D800  0060  F008  F96C   	movff	btemp+1,_C+109	;volatile
 37158  01D806  0060  F00C  F96D   	movff	btemp+2,_C+110	;volatile
 37159  01D80C  0060  F010  F96E   	movff	btemp+3,_C+111	;volatile
 37160                           
 37161                           ;mbmc.c: 110:  if (C.bv_ror < 0.0051)
 37162  01D812  0EE7               	movlw	231
 37163  01D814  6EE6               	movwf	postinc1,c
 37164  01D816  0E1D               	movlw	29
 37165  01D818  6EE6               	movwf	postinc1,c
 37166  01D81A  0EA7               	movlw	167
 37167  01D81C  6EE6               	movwf	postinc1,c
 37168  01D81E  0E3B               	movlw	59
 37169  01D820  6EE6               	movwf	postinc1,c
 37170  01D822  EE22  F16B         	lfsr	2,_C+108	;volatile
 37171  01D826  006F FF7B FFE6     	movff	postinc2,postinc1
 37172  01D82C  006F FF7B FFE6     	movff	postinc2,postinc1
 37173  01D832  006F FF7B FFE6     	movff	postinc2,postinc1
 37174  01D838  006F FF7B FFE6     	movff	postinc2,postinc1
 37175  01D83E  EC2B  F0EF         	call	___flge	;wreg free
 37176  01D842  B001               	btfsc	btemp& (0+255),0,c
 37177  01D844  D010               	goto	l14115
 37178                           
 37179                           ;mbmc.c: 111:   C.bv_ror = 0.0140 + 0.0001;
 37180  01D846  0EB0               	movlw	176
 37181  01D848  006F FFA0  F96B    	movff	wreg,_C+108	;volatile
 37182  01D84E  0E03               	movlw	3
 37183  01D850  006F FFA0  F96C    	movff	wreg,_C+109	;volatile
 37184  01D856  0E67               	movlw	103
 37185  01D858  006F FFA0  F96D    	movff	wreg,_C+110	;volatile
 37186  01D85E  0E3C               	movlw	60
 37187  01D860  006F FFA0  F96E    	movff	wreg,_C+111	;volatile
 37188  01D866                     l14115:
 37189                           
 37190                           ;mbmc.c: 112:  bvror = conv_raw_result(V_BAT, CONV);
 37191  01D866  0E00               	movlw	0
 37192  01D868  6EE6               	movwf	postinc1,c
 37193  01D86A  0E04               	movlw	4
 37194  01D86C  6EE6               	movwf	postinc1,c
 37195  01D86E  EC22  F0C2         	call	_conv_raw_result	;wreg free
 37196  01D872  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 37197  01D878  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 37198  01D87E  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 37199  01D884  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 37200                           
 37201                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 37202  01D88A  0012               	return		;funcret
 37203  01D88C                     __end_of_calc_ror_data:
 37204                           	opt callstack 0
 37205                           
 37206 ;; *************** function _fabsf *****************
 37207 ;; Defined at:
 37208 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 37209 ;; Parameters:    Size  Location     Type
 37210 ;;  x               4  [STACK] float 
 37211 ;; Auto vars:     Size  Location     Type
 37212 ;;  u               4  [STACK] struct .
 37213 ;; Return value:  Size  Location     Type
 37214 ;;                  4  [STACK] float 
 37215 ;; Registers used:
 37216 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 37217 ;; Tracked objects:
 37218 ;;		On entry : 0/0
 37219 ;;		On exit  : 0/0
 37220 ;;		Unchanged: 0/0
 37221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37226 ;;Total ram usage:        0 bytes
 37227 ;; Hardware stack levels used:    1
 37228 ;; Hardware stack levels required when called:   15
 37229 ;; This function calls:
 37230 ;;		Nothing
 37231 ;; This function is called by:
 37232 ;;		_main
 37233 ;;		_calc_ror_data
 37234 ;;		_calc_bsoc
 37235 ;;		_esr_check
 37236 ;; This function uses a reentrant model
 37237 ;;
 37238                           
 37239                           	psect	text139
 37240  01FD72                     __ptext139:
 37241                           	opt callstack 0
 37242  01FD72                     _fabsf:
 37243                           	opt callstack 0
 37244                           
 37245                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37246  01FD72  52E6               	movf	postinc1,f,c
 37247  01FD74  52E6               	movf	postinc1,f,c
 37248  01FD76  52E6               	movf	postinc1,f,c
 37249  01FD78  52E6               	movf	postinc1,f,c
 37250                           
 37251                           ;incstack = 0
 37252 ;; hardware stack exceeded
 37253  01FD7A  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 37254  01FD80  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 37255  01FD86  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 37256  01FD8C  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 37257                           
 37258                           ;stkvar	_u @ sp[(-4)+0]
 37259  01FD92  0EFC               	movlw	-4
 37260  01FD94  0060  F027  FFE3   	movff	btemp+8,plusw1
 37261  01FD9A  0EFD               	movlw	-3
 37262  01FD9C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37263  01FDA2  0EFE               	movlw	-2
 37264  01FDA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37265  01FDAA  0EFF               	movlw	-1
 37266  01FDAC  0060  F033  FFE3   	movff	btemp+11,plusw1
 37267                           
 37268                           ;stkvar	_x @ sp[(-4)+-4]
 37269  01FDB2  0EF8               	movlw	-8
 37270  01FDB4  006F FF8C  F009    	movff	plusw1,btemp+8
 37271  01FDBA  0EF9               	movlw	-7
 37272  01FDBC  006F FF8C  F00A    	movff	plusw1,btemp+9
 37273  01FDC2  0EFA               	movlw	-6
 37274  01FDC4  006F FF8C  F00B    	movff	plusw1,btemp+10
 37275  01FDCA  0EFB               	movlw	-5
 37276  01FDCC  006F FF8C  F00C    	movff	plusw1,btemp+11
 37277                           
 37278                           ;stkvar	_u @ sp[(-4)+0]
 37279  01FDD2  0EFC               	movlw	-4
 37280  01FDD4  0060  F027  FFE3   	movff	btemp+8,plusw1
 37281  01FDDA  0EFD               	movlw	-3
 37282  01FDDC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37283  01FDE2  0EFE               	movlw	-2
 37284  01FDE4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37285  01FDEA  0EFF               	movlw	-1
 37286  01FDEC  0060  F033  FFE3   	movff	btemp+11,plusw1
 37287                           
 37288                           ;stkvar	_u @ sp[(-4)+0]
 37289  01FDF2  0EFF               	movlw	-1
 37290  01FDF4  9EE3               	bcf	plusw1,7,c
 37291                           
 37292                           ;stkvar	_u @ sp[(-4)+0]
 37293  01FDF6  0EFC               	movlw	-4
 37294  01FDF8  006F FF8C  F001    	movff	plusw1,btemp
 37295  01FDFE  0EFD               	movlw	-3
 37296  01FE00  006F FF8C  F002    	movff	plusw1,btemp+1
 37297  01FE06  0EFE               	movlw	-2
 37298  01FE08  006F FF8C  F003    	movff	plusw1,btemp+2
 37299  01FE0E  0EFF               	movlw	-1
 37300  01FE10  006F FF8C  F004    	movff	plusw1,btemp+3
 37301                           
 37302                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 37303  01FE16  0EF8               	movlw	248
 37304  01FE18  26E1               	addwf	fsr1l,f,c
 37305  01FE1A  0EFF               	movlw	255
 37306  01FE1C  22E2               	addwfc	fsr1h,f,c
 37307  01FE1E  0012               	return		;funcret
 37308  01FE20                     __end_of_fabsf:
 37309                           	opt callstack 0
 37310                           
 37311 ;; *************** function _conv_raw_result *****************
 37312 ;; Defined at:
 37313 ;;		line 133 in file "daq.c"
 37314 ;; Parameters:    Size  Location     Type
 37315 ;;  chan            1  [STACK] const enum E16605
 37316 ;;  to_what         1  [STACK] const enum E16998
 37317 ;; Auto vars:     Size  Location     Type
 37318 ;;		None
 37319 ;; Return value:  Size  Location     Type
 37320 ;;                  4  [STACK] float 
 37321 ;; Registers used:
 37322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 37323 ;; Tracked objects:
 37324 ;;		On entry : 0/0
 37325 ;;		On exit  : 0/0
 37326 ;;		Unchanged: 0/0
 37327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37332 ;;Total ram usage:        0 bytes
 37333 ;; Hardware stack levels used:    1
 37334 ;; Hardware stack levels required when called:   17
 37335 ;; This function calls:
 37336 ;;		___fldiv
 37337 ;;		___flmul
 37338 ;;		___flsub
 37339 ;;		___xxtofl
 37340 ;;		_get_raw_result
 37341 ;;		_nanf
 37342 ;; This function is called by:
 37343 ;;		_main
 37344 ;;		_convert_adc_data
 37345 ;;		_calc_ror_data
 37346 ;;		_check_day_time
 37347 ;;		_init_bsoc
 37348 ;;		_esr_check
 37349 ;; This function uses a reentrant model
 37350 ;;
 37351                           
 37352                           	psect	text140
 37353  018444                     __ptext140:
 37354                           	opt callstack 0
 37355  018444                     _conv_raw_result:
 37356                           	opt callstack 0
 37357                           
 37358                           ;daq.c: 133: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 134: {;daq.c: 136:  switch (to_what) {
 37359                           
 37360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37361                           ;incstack = 0
 37362 ;; hardware stack exceeded
 37363  018444  D24A               	goto	l12273
 37364  018446                     l12219:
 37365                           
 37366                           ;daq.c: 138:   if (!(0b0011110001110111 >> chan & 0x1))
 37367                           ;stkvar	_chan @ sp[(0)+-1]
 37368  018446  0EFF               	movlw	-1
 37369  018448  006F FF8C  F00C    	movff	plusw1,btemp+11
 37370  01844E  0E77               	movlw	119
 37371  018450  6E09               	movwf	(btemp+8)^0,c
 37372  018452  0E3C               	movlw	60
 37373  018454  6E0A               	movwf	(btemp+9)^0,c
 37374  018456  2A0C               	incf	(btemp+11)^0,f,c
 37375  018458  D003               	goto	u11534
 37376  01845A                     u11535:
 37377  01845A  340A               	rlcf	(btemp+9)^0,w,c
 37378  01845C  320A               	rrcf	(btemp+9)^0,f,c
 37379  01845E  3209               	rrcf	(btemp+8)^0,f,c
 37380  018460                     u11534:
 37381  018460  2E0C               	decfsz	(btemp+11)^0,f,c
 37382  018462  D7FB               	goto	u11535
 37383  018464  B009               	btfsc	(btemp+8)^0,0,c
 37384  018466  D007               	goto	l12225
 37385                           
 37386                           ;daq.c: 139:    return nanf("");
 37387  018468  0EBD               	movlw	low (STR_90+126)
 37388  01846A  6EE6               	movwf	postinc1,c
 37389  01846C  0EFA               	movlw	high (STR_90+126)
 37390  01846E  6EE6               	movwf	postinc1,c
 37391  018470  EC22  F007         	call	_nanf	;wreg free
 37392  018474  D242               	goto	l1971
 37393  018476                     l12225:
 37394                           
 37395                           ;daq.c: 141:   if (0b0000000000000011 >> chan & 0x1) {
 37396                           ;stkvar	_chan @ sp[(0)+-1]
 37397  018476  0EFF               	movlw	-1
 37398  018478  006F FF8C  F00C    	movff	plusw1,btemp+11
 37399  01847E  0E03               	movlw	3
 37400  018480  6E09               	movwf	(btemp+8)^0,c
 37401  018482  0E00               	movlw	0
 37402  018484  6E0A               	movwf	(btemp+9)^0,c
 37403  018486  2A0C               	incf	(btemp+11)^0,f,c
 37404  018488  D003               	goto	u11554
 37405  01848A                     u11555:
 37406  01848A  340A               	rlcf	(btemp+9)^0,w,c
 37407  01848C  320A               	rrcf	(btemp+9)^0,f,c
 37408  01848E  3209               	rrcf	(btemp+8)^0,f,c
 37409  018490                     u11554:
 37410  018490  2E0C               	decfsz	(btemp+11)^0,f,c
 37411  018492  D7FB               	goto	u11555
 37412  018494  A009               	btfss	(btemp+8)^0,0,c
 37413  018496  D0F3               	goto	l12239
 37414                           
 37415                           ;daq.c: 142:    if (0b0000000000000001 >> chan & 0x1) {
 37416                           ;stkvar	_chan @ sp[(0)+-1]
 37417  018498  0EFF               	movlw	-1
 37418  01849A  006F FF8C  F00C    	movff	plusw1,btemp+11
 37419  0184A0  0E01               	movlw	1
 37420  0184A2  6E09               	movwf	(btemp+8)^0,c
 37421  0184A4  0E00               	movlw	0
 37422  0184A6  6E0A               	movwf	(btemp+9)^0,c
 37423  0184A8  2A0C               	incf	(btemp+11)^0,f,c
 37424  0184AA  D003               	goto	u11574
 37425  0184AC                     u11575:
 37426  0184AC  340A               	rlcf	(btemp+9)^0,w,c
 37427  0184AE  320A               	rrcf	(btemp+9)^0,f,c
 37428  0184B0  3209               	rrcf	(btemp+8)^0,f,c
 37429  0184B2                     u11574:
 37430  0184B2  2E0C               	decfsz	(btemp+11)^0,f,c
 37431  0184B4  D7FB               	goto	u11575
 37432  0184B6  A009               	btfss	(btemp+8)^0,0,c
 37433  0184B8  D071               	goto	l12235
 37434                           
 37435                           ;daq.c: 143:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 37436  0184BA  0060  F8AB  FFE6   	movff	_R+42,postinc1
 37437  0184C0  0060  F8AF  FFE6   	movff	_R+43,postinc1
 37438  0184C6  0060  F8B3  FFE6   	movff	_R+44,postinc1
 37439  0184CC  0060  F8B7  FFE6   	movff	_R+45,postinc1
 37440  0184D2  0060  F898  F009   	movff	_R+38,btemp+8	;volatile
 37441  0184D8  0060  F89C  F00A   	movff	_R+39,btemp+9	;volatile
 37442  0184DE  0E00               	movlw	0
 37443  0184E0  BE0A               	btfsc	(btemp+9)^0,7,c
 37444  0184E2  0EFF               	movlw	255
 37445  0184E4  6E0B               	movwf	(btemp+10)^0,c
 37446  0184E6  6E0C               	movwf	(btemp+11)^0,c
 37447  0184E8  0060  F027  FFE6   	movff	btemp+8,postinc1
 37448  0184EE  0060  F02B  FFE6   	movff	btemp+9,postinc1
 37449  0184F4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 37450  0184FA  0060  F033  FFE6   	movff	btemp+11,postinc1
 37451  018500  0E01               	movlw	1
 37452  018502  6EE6               	movwf	postinc1,c
 37453  018504  EC83  F0E5         	call	___xxtofl	;wreg free
 37454  018508  0060  F007  FFE6   	movff	btemp,postinc1
 37455  01850E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37456  018514  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37457  01851A  0060  F013  FFE6   	movff	btemp+3,postinc1
 37458                           
 37459                           ;stkvar	_chan @ sp[(-8)+-1]
 37460  018520  0EF7               	movlw	-9
 37461  018522  50E3               	movf	plusw1,w,c
 37462  018524  6EE6               	movwf	postinc1,c
 37463  018526  EC89  F00E         	call	_get_raw_result	;wreg free
 37464  01852A  0060  F004  F00B   	movff	btemp,btemp+10
 37465  018530  0060  F008  F00C   	movff	btemp+1,btemp+11
 37466  018536  500B               	movf	(btemp+10)^0,w,c
 37467  018538  6E05               	movwf	(btemp+4)^0,c
 37468  01853A  500C               	movf	(btemp+11)^0,w,c
 37469  01853C  6E06               	movwf	(btemp+5)^0,c
 37470  01853E  6A07               	clrf	(btemp+6)^0,c
 37471  018540  6A08               	clrf	(btemp+7)^0,c
 37472  018542  0060  F017  FFE6   	movff	btemp+4,postinc1
 37473  018548  0060  F01B  FFE6   	movff	btemp+5,postinc1
 37474  01854E  0060  F01F  FFE6   	movff	btemp+6,postinc1
 37475  018554  0060  F023  FFE6   	movff	btemp+7,postinc1
 37476  01855A  0E00               	movlw	0
 37477  01855C  6EE6               	movwf	postinc1,c
 37478  01855E  EC83  F0E5         	call	___xxtofl	;wreg free
 37479  018562  0060  F007  FFE6   	movff	btemp,postinc1
 37480  018568  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37481  01856E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37482  018574  0060  F013  FFE6   	movff	btemp+3,postinc1
 37483  01857A  ECDC  F009         	call	___flsub	;wreg free
 37484  01857E  0060  F007  FFE6   	movff	btemp,postinc1
 37485  018584  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37486  01858A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37487  018590  0060  F013  FFE6   	movff	btemp+3,postinc1
 37488  018596  EC89  F0B1         	call	___flmul	;wreg free
 37489  01859A  D1AF               	goto	l1971
 37490  01859C                     l12235:
 37491                           
 37492                           ;daq.c: 145:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 37493  01859C  0060  F8BB  FFE6   	movff	_R+46,postinc1
 37494  0185A2  0060  F8BF  FFE6   	movff	_R+47,postinc1
 37495  0185A8  0060  F8C3  FFE6   	movff	_R+48,postinc1
 37496  0185AE  0060  F8C7  FFE6   	movff	_R+49,postinc1
 37497  0185B4  0060  F8A0  F009   	movff	_R+40,btemp+8	;volatile
 37498  0185BA  0060  F8A4  F00A   	movff	_R+41,btemp+9	;volatile
 37499  0185C0  0E00               	movlw	0
 37500  0185C2  BE0A               	btfsc	(btemp+9)^0,7,c
 37501  0185C4  0EFF               	movlw	255
 37502  0185C6  6E0B               	movwf	(btemp+10)^0,c
 37503  0185C8  6E0C               	movwf	(btemp+11)^0,c
 37504  0185CA  0060  F027  FFE6   	movff	btemp+8,postinc1
 37505  0185D0  0060  F02B  FFE6   	movff	btemp+9,postinc1
 37506  0185D6  0060  F02F  FFE6   	movff	btemp+10,postinc1
 37507  0185DC  0060  F033  FFE6   	movff	btemp+11,postinc1
 37508  0185E2  0E01               	movlw	1
 37509  0185E4  6EE6               	movwf	postinc1,c
 37510  0185E6  EC83  F0E5         	call	___xxtofl	;wreg free
 37511  0185EA  0060  F007  FFE6   	movff	btemp,postinc1
 37512  0185F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37513  0185F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37514  0185FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 37515                           
 37516                           ;stkvar	_chan @ sp[(-8)+-1]
 37517  018602  0EF7               	movlw	-9
 37518  018604  50E3               	movf	plusw1,w,c
 37519  018606  6EE6               	movwf	postinc1,c
 37520  018608  EC89  F00E         	call	_get_raw_result	;wreg free
 37521  01860C  0060  F004  F00B   	movff	btemp,btemp+10
 37522  018612  0060  F008  F00C   	movff	btemp+1,btemp+11
 37523  018618  500B               	movf	(btemp+10)^0,w,c
 37524  01861A  6E05               	movwf	(btemp+4)^0,c
 37525  01861C  500C               	movf	(btemp+11)^0,w,c
 37526  01861E  6E06               	movwf	(btemp+5)^0,c
 37527  018620  6A07               	clrf	(btemp+6)^0,c
 37528  018622  6A08               	clrf	(btemp+7)^0,c
 37529  018624  0060  F017  FFE6   	movff	btemp+4,postinc1
 37530  01862A  0060  F01B  FFE6   	movff	btemp+5,postinc1
 37531  018630  0060  F01F  FFE6   	movff	btemp+6,postinc1
 37532  018636  0060  F023  FFE6   	movff	btemp+7,postinc1
 37533  01863C  0E00               	movlw	0
 37534  01863E  6EE6               	movwf	postinc1,c
 37535  018640  EC83  F0E5         	call	___xxtofl	;wreg free
 37536  018644  0060  F007  FFE6   	movff	btemp,postinc1
 37537  01864A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37538  018650  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37539  018656  0060  F013  FFE6   	movff	btemp+3,postinc1
 37540  01865C  ECDC  F009         	call	___flsub	;wreg free
 37541  018660  0060  F007  FFE6   	movff	btemp,postinc1
 37542  018666  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37543  01866C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37544  018672  0060  F013  FFE6   	movff	btemp+3,postinc1
 37545  018678  EC89  F0B1         	call	___flmul	;wreg free
 37546  01867C  D13E               	goto	l1971
 37547  01867E                     l12239:
 37548                           
 37549                           ;daq.c: 148:    if (0b0000100000000000 >> chan & 0x1) {
 37550                           ;stkvar	_chan @ sp[(0)+-1]
 37551  01867E  0EFF               	movlw	-1
 37552  018680  006F FF8C  F00C    	movff	plusw1,btemp+11
 37553  018686  0E00               	movlw	0
 37554  018688  6E09               	movwf	(btemp+8)^0,c
 37555  01868A  0E08               	movlw	8
 37556  01868C  6E0A               	movwf	(btemp+9)^0,c
 37557  01868E  2A0C               	incf	(btemp+11)^0,f,c
 37558  018690  D003               	goto	u11594
 37559  018692                     u11595:
 37560  018692  340A               	rlcf	(btemp+9)^0,w,c
 37561  018694  320A               	rrcf	(btemp+9)^0,f,c
 37562  018696  3209               	rrcf	(btemp+8)^0,f,c
 37563  018698                     u11594:
 37564  018698  2E0C               	decfsz	(btemp+11)^0,f,c
 37565  01869A  D7FB               	goto	u11595
 37566  01869C  A009               	btfss	(btemp+8)^0,0,c
 37567  01869E  D008               	goto	l12247
 37568                           
 37569                           ;daq.c: 149:     return 25.0;
 37570  0186A0  0E00               	movlw	0
 37571  0186A2  6E01               	movwf	btemp^0,c
 37572  0186A4  0E00               	movlw	0
 37573  0186A6  6E02               	movwf	(btemp+1)^0,c
 37574  0186A8  0EC8               	movlw	200
 37575  0186AA  6E03               	movwf	(btemp+2)^0,c
 37576  0186AC  0E41               	movlw	65
 37577  0186AE  D113               	goto	L43
 37578  0186B0                     l12247:
 37579                           
 37580                           ;daq.c: 151:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 37581  0186B0  0E00               	movlw	0
 37582  0186B2  6EE6               	movwf	postinc1,c
 37583  0186B4  0E00               	movlw	0
 37584  0186B6  6EE6               	movwf	postinc1,c
 37585  0186B8  0E7A               	movlw	122
 37586  0186BA  6EE6               	movwf	postinc1,c
 37587  0186BC  0E44               	movlw	68
 37588  0186BE  6EE6               	movwf	postinc1,c
 37589  0186C0  0E61               	movlw	97
 37590  0186C2  6EE6               	movwf	postinc1,c
 37591  0186C4  0E03               	movlw	3
 37592  0186C6  6EE6               	movwf	postinc1,c
 37593  0186C8  0E84               	movlw	132
 37594  0186CA  6EE6               	movwf	postinc1,c
 37595  0186CC  0E40               	movlw	64
 37596  0186CE  6EE6               	movwf	postinc1,c
 37597                           
 37598                           ;stkvar	_chan @ sp[(-8)+-1]
 37599  0186D0  0EF7               	movlw	-9
 37600  0186D2  50E3               	movf	plusw1,w,c
 37601  0186D4  6EE6               	movwf	postinc1,c
 37602  0186D6  EC89  F00E         	call	_get_raw_result	;wreg free
 37603  0186DA  0060  F004  F00B   	movff	btemp,btemp+10
 37604  0186E0  0060  F008  F00C   	movff	btemp+1,btemp+11
 37605  0186E6  500B               	movf	(btemp+10)^0,w,c
 37606  0186E8  6E05               	movwf	(btemp+4)^0,c
 37607  0186EA  500C               	movf	(btemp+11)^0,w,c
 37608  0186EC  6E06               	movwf	(btemp+5)^0,c
 37609  0186EE  6A07               	clrf	(btemp+6)^0,c
 37610  0186F0  6A08               	clrf	(btemp+7)^0,c
 37611  0186F2  0060  F017  FFE6   	movff	btemp+4,postinc1
 37612  0186F8  0060  F01B  FFE6   	movff	btemp+5,postinc1
 37613  0186FE  0060  F01F  FFE6   	movff	btemp+6,postinc1
 37614  018704  0060  F023  FFE6   	movff	btemp+7,postinc1
 37615  01870A  0E00               	movlw	0
 37616  01870C  6EE6               	movwf	postinc1,c
 37617  01870E  EC83  F0E5         	call	___xxtofl	;wreg free
 37618  018712  0060  F007  FFE6   	movff	btemp,postinc1
 37619  018718  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37620  01871E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37621  018724  0060  F013  FFE6   	movff	btemp+3,postinc1
 37622  01872A  EC89  F0B1         	call	___flmul	;wreg free
 37623  01872E  0060  F007  FFE6   	movff	btemp,postinc1
 37624  018734  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37625  01873A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37626  018740  0060  F013  FFE6   	movff	btemp+3,postinc1
 37627  018746  ECDA  F0BC         	call	___fldiv	;wreg free
 37628  01874A  D0D7               	goto	l1971
 37629  01874C                     l12251:
 37630                           
 37631                           ;daq.c: 156:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 37632                           ;stkvar	_chan @ sp[(0)+-1]
 37633  01874C  0EFF               	movlw	-1
 37634  01874E  006F FF8C  F00C    	movff	plusw1,btemp+11
 37635  018754  0E03               	movlw	3
 37636  018756  6E09               	movwf	(btemp+8)^0,c
 37637  018758  0E00               	movlw	0
 37638  01875A  6E0A               	movwf	(btemp+9)^0,c
 37639  01875C  2A0C               	incf	(btemp+11)^0,f,c
 37640  01875E  D003               	goto	u11614
 37641  018760                     u11615:
 37642  018760  340A               	rlcf	(btemp+9)^0,w,c
 37643  018762  320A               	rrcf	(btemp+9)^0,f,c
 37644  018764  3209               	rrcf	(btemp+8)^0,f,c
 37645  018766                     u11614:
 37646  018766  2E0C               	decfsz	(btemp+11)^0,f,c
 37647  018768  D7FB               	goto	u11615
 37648  01876A  B009               	btfsc	(btemp+8)^0,0,c
 37649  01876C  D011               	goto	u11640
 37650                           
 37651                           ;stkvar	_chan @ sp[(0)+-1]
 37652  01876E  0EFF               	movlw	-1
 37653  018770  006F FF8C  F00C    	movff	plusw1,btemp+11
 37654  018776  0E00               	movlw	0
 37655  018778  6E09               	movwf	(btemp+8)^0,c
 37656  01877A  0E08               	movlw	8
 37657  01877C  6E0A               	movwf	(btemp+9)^0,c
 37658  01877E  2A0C               	incf	(btemp+11)^0,f,c
 37659  018780  D003               	goto	u11634
 37660  018782                     u11635:
 37661  018782  340A               	rlcf	(btemp+9)^0,w,c
 37662  018784  320A               	rrcf	(btemp+9)^0,f,c
 37663  018786  3209               	rrcf	(btemp+8)^0,f,c
 37664  018788                     u11634:
 37665  018788  2E0C               	decfsz	(btemp+11)^0,f,c
 37666  01878A  D7FB               	goto	u11635
 37667  01878C  A009               	btfss	(btemp+8)^0,0,c
 37668  01878E  D04E               	goto	l12259
 37669  018790                     u11640:
 37670                           
 37671                           ;daq.c: 157:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 37672  018790  0E00               	movlw	0
 37673  018792  6EE6               	movwf	postinc1,c
 37674  018794  0E00               	movlw	0
 37675  018796  6EE6               	movwf	postinc1,c
 37676  018798  0E7A               	movlw	122
 37677  01879A  6EE6               	movwf	postinc1,c
 37678  01879C  0E44               	movlw	68
 37679  01879E  6EE6               	movwf	postinc1,c
 37680  0187A0  0E00               	movlw	0
 37681  0187A2  6EE6               	movwf	postinc1,c
 37682  0187A4  0E00               	movlw	0
 37683  0187A6  6EE6               	movwf	postinc1,c
 37684  0187A8  0E20               	movlw	32
 37685  0187AA  6EE6               	movwf	postinc1,c
 37686  0187AC  0E3F               	movlw	63
 37687  0187AE  6EE6               	movwf	postinc1,c
 37688                           
 37689                           ;stkvar	_chan @ sp[(-8)+-1]
 37690  0187B0  0EF7               	movlw	-9
 37691  0187B2  50E3               	movf	plusw1,w,c
 37692  0187B4  6EE6               	movwf	postinc1,c
 37693  0187B6  EC89  F00E         	call	_get_raw_result	;wreg free
 37694  0187BA  0060  F004  F00B   	movff	btemp,btemp+10
 37695  0187C0  0060  F008  F00C   	movff	btemp+1,btemp+11
 37696  0187C6  500B               	movf	(btemp+10)^0,w,c
 37697  0187C8  6E05               	movwf	(btemp+4)^0,c
 37698  0187CA  500C               	movf	(btemp+11)^0,w,c
 37699  0187CC  6E06               	movwf	(btemp+5)^0,c
 37700  0187CE  6A07               	clrf	(btemp+6)^0,c
 37701  0187D0  6A08               	clrf	(btemp+7)^0,c
 37702  0187D2  0060  F017  FFE6   	movff	btemp+4,postinc1
 37703  0187D8  0060  F01B  FFE6   	movff	btemp+5,postinc1
 37704  0187DE  0060  F01F  FFE6   	movff	btemp+6,postinc1
 37705  0187E4  0060  F023  FFE6   	movff	btemp+7,postinc1
 37706  0187EA  0E00               	movlw	0
 37707  0187EC  6EE6               	movwf	postinc1,c
 37708  0187EE  EC83  F0E5         	call	___xxtofl	;wreg free
 37709  0187F2  0060  F007  FFE6   	movff	btemp,postinc1
 37710  0187F8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37711  0187FE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37712  018804  0060  F013  FFE6   	movff	btemp+3,postinc1
 37713  01880A  EC89  F0B1         	call	___flmul	;wreg free
 37714  01880E  0060  F007  FFE6   	movff	btemp,postinc1
 37715  018814  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37716  01881A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37717  018820  0060  F013  FFE6   	movff	btemp+3,postinc1
 37718  018826  ECDA  F0BC         	call	___fldiv	;wreg free
 37719  01882A  D067               	goto	l1971
 37720  01882C                     l12259:
 37721                           
 37722                           ;daq.c: 159:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 37723  01882C  0E00               	movlw	0
 37724  01882E  6EE6               	movwf	postinc1,c
 37725  018830  0E00               	movlw	0
 37726  018832  6EE6               	movwf	postinc1,c
 37727  018834  0E7A               	movlw	122
 37728  018836  6EE6               	movwf	postinc1,c
 37729  018838  0E44               	movlw	68
 37730  01883A  6EE6               	movwf	postinc1,c
 37731  01883C  0E61               	movlw	97
 37732  01883E  6EE6               	movwf	postinc1,c
 37733  018840  0E03               	movlw	3
 37734  018842  6EE6               	movwf	postinc1,c
 37735  018844  0E84               	movlw	132
 37736  018846  6EE6               	movwf	postinc1,c
 37737  018848  0E40               	movlw	64
 37738  01884A  6EE6               	movwf	postinc1,c
 37739                           
 37740                           ;stkvar	_chan @ sp[(-8)+-1]
 37741  01884C  0EF7               	movlw	-9
 37742  01884E  50E3               	movf	plusw1,w,c
 37743  018850  6EE6               	movwf	postinc1,c
 37744  018852  EC89  F00E         	call	_get_raw_result	;wreg free
 37745  018856  0060  F004  F00B   	movff	btemp,btemp+10
 37746  01885C  0060  F008  F00C   	movff	btemp+1,btemp+11
 37747  018862  500B               	movf	(btemp+10)^0,w,c
 37748  018864  6E05               	movwf	(btemp+4)^0,c
 37749  018866  500C               	movf	(btemp+11)^0,w,c
 37750  018868  6E06               	movwf	(btemp+5)^0,c
 37751  01886A  6A07               	clrf	(btemp+6)^0,c
 37752  01886C  6A08               	clrf	(btemp+7)^0,c
 37753  01886E  0060  F017  FFE6   	movff	btemp+4,postinc1
 37754  018874  0060  F01B  FFE6   	movff	btemp+5,postinc1
 37755  01887A  0060  F01F  FFE6   	movff	btemp+6,postinc1
 37756  018880  0060  F023  FFE6   	movff	btemp+7,postinc1
 37757  018886  0E00               	movlw	0
 37758  018888  6EE6               	movwf	postinc1,c
 37759  01888A  EC83  F0E5         	call	___xxtofl	;wreg free
 37760  01888E  0060  F007  FFE6   	movff	btemp,postinc1
 37761  018894  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37762  01889A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37763  0188A0  0060  F013  FFE6   	movff	btemp+3,postinc1
 37764  0188A6  EC89  F0B1         	call	___flmul	;wreg free
 37765  0188AA  0060  F007  FFE6   	movff	btemp,postinc1
 37766  0188B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37767  0188B6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 37768  0188BC  0060  F013  FFE6   	movff	btemp+3,postinc1
 37769  0188C2  ECDA  F0BC         	call	___fldiv	;wreg free
 37770  0188C6  D019               	goto	l1971
 37771  0188C8                     l12265:
 37772                           
 37773                           ;daq.c: 162:   return 0.0;
 37774  0188C8  0E00               	movlw	0
 37775  0188CA  6E01               	movwf	btemp^0,c
 37776  0188CC  0E00               	movlw	0
 37777  0188CE  6E02               	movwf	(btemp+1)^0,c
 37778  0188D0  0E00               	movlw	0
 37779  0188D2  6E03               	movwf	(btemp+2)^0,c
 37780  0188D4  0E00               	movlw	0
 37781  0188D6                     L43:
 37782  0188D6  6E04               	movwf	(btemp+3)^0,c
 37783  0188D8  D010               	goto	l1971
 37784  0188DA                     l12273:
 37785                           
 37786                           ;stkvar	_to_what @ sp[(0)+-2]
 37787  0188DA  0EFE               	movlw	-2
 37788  0188DC  50E3               	movf	plusw1,w,c
 37789  0188DE  6E0B               	movwf	(btemp+10)^0,c
 37790  0188E0  6A0C               	clrf	(btemp+11)^0,c
 37791                           
 37792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 37793                           ; Switch size 1, requested type "simple"
 37794                           ; Number of cases is 1, Range of values is 0 to 0
 37795                           ; switch strategies available:
 37796                           ; Name         Instructions Cycles
 37797                           ; simple_byte            4     3 (average)
 37798                           ;	Chosen strategy is simple_byte
 37799  0188E2  500C               	movf	(btemp+11)^0,w,c
 37800  0188E4  0A00               	xorlw	0	; case 0
 37801  0188E6  A4D8               	btfss	status,2,c
 37802  0188E8  D7EF               	goto	l12265
 37803                           
 37804                           ; Switch size 1, requested type "simple"
 37805                           ; Number of cases is 2, Range of values is 0 to 1
 37806                           ; switch strategies available:
 37807                           ; Name         Instructions Cycles
 37808                           ; simple_byte            7     4 (average)
 37809                           ;	Chosen strategy is simple_byte
 37810  0188EA  500B               	movf	(btemp+10)^0,w,c
 37811  0188EC  0A00               	xorlw	0	; case 0
 37812  0188EE  B4D8               	btfsc	status,2,c
 37813  0188F0  D5AA               	goto	l12219
 37814  0188F2  0A01               	xorlw	1	; case 1
 37815  0188F4  B4D8               	btfsc	status,2,c
 37816  0188F6  D72A               	goto	l12251
 37817  0188F8  D7E7               	goto	l12265
 37818  0188FA                     l1971:
 37819                           
 37820                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 37821  0188FA  52E5               	movf	postdec1,f,c
 37822  0188FC  52E5               	movf	postdec1,f,c
 37823  0188FE  0012               	return		;funcret
 37824  018900                     __end_of_conv_raw_result:
 37825                           	opt callstack 0
 37826                           
 37827 ;; *************** function _nanf *****************
 37828 ;; Defined at:
 37829 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 37830 ;; Parameters:    Size  Location     Type
 37831 ;;  s               2  [STACK] PTR const unsigned char 
 37832 ;;		 -> STR_129(1), STR_89(1), 
 37833 ;; Auto vars:     Size  Location     Type
 37834 ;;  u               4  [STACK] struct .
 37835 ;; Return value:  Size  Location     Type
 37836 ;;                  4  [STACK] float 
 37837 ;; Registers used:
 37838 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 37839 ;; Tracked objects:
 37840 ;;		On entry : 0/0
 37841 ;;		On exit  : 0/0
 37842 ;;		Unchanged: 0/0
 37843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37848 ;;Total ram usage:        0 bytes
 37849 ;; Hardware stack levels used:    1
 37850 ;; Hardware stack levels required when called:   15
 37851 ;; This function calls:
 37852 ;;		Nothing
 37853 ;; This function is called by:
 37854 ;;		_conv_raw_result
 37855 ;; This function uses a reentrant model
 37856 ;;
 37857                           
 37858                           	psect	text141
 37859  000E44                     __ptext141:
 37860                           	opt callstack 0
 37861  000E44                     _nanf:
 37862                           	opt callstack 0
 37863                           
 37864                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37865  000E44  52E6               	movf	postinc1,f,c
 37866  000E46  52E6               	movf	postinc1,f,c
 37867  000E48  52E6               	movf	postinc1,f,c
 37868  000E4A  52E6               	movf	postinc1,f,c
 37869                           
 37870                           ;incstack = 0
 37871 ;; hardware stack exceeded
 37872  000E4C  0EFF               	movlw	255
 37873  000E4E  6E09               	movwf	(btemp+8)^0,c
 37874  000E50  0EFF               	movlw	255
 37875  000E52  6E0A               	movwf	(btemp+9)^0,c
 37876  000E54  0EFF               	movlw	255
 37877  000E56  6E0B               	movwf	(btemp+10)^0,c
 37878  000E58  0E7F               	movlw	127
 37879  000E5A  6E0C               	movwf	(btemp+11)^0,c
 37880                           
 37881                           ;stkvar	_u @ sp[(-4)+0]
 37882  000E5C  0EFC               	movlw	-4
 37883  000E5E  0060  F027  FFE3   	movff	btemp+8,plusw1
 37884  000E64  0EFD               	movlw	-3
 37885  000E66  0060  F02B  FFE3   	movff	btemp+9,plusw1
 37886  000E6C  0EFE               	movlw	-2
 37887  000E6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37888  000E74  0EFF               	movlw	-1
 37889  000E76  0060  F033  FFE3   	movff	btemp+11,plusw1
 37890                           
 37891                           ;stkvar	_u @ sp[(-4)+0]
 37892  000E7C  0EFC               	movlw	-4
 37893  000E7E  006F FF8C  F001    	movff	plusw1,btemp
 37894  000E84  0EFD               	movlw	-3
 37895  000E86  006F FF8C  F002    	movff	plusw1,btemp+1
 37896  000E8C  0EFE               	movlw	-2
 37897  000E8E  006F FF8C  F003    	movff	plusw1,btemp+2
 37898  000E94  0EFF               	movlw	-1
 37899  000E96  006F FF8C  F004    	movff	plusw1,btemp+3
 37900                           
 37901                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 37902  000E9C  0EFA               	movlw	250
 37903  000E9E  26E1               	addwf	fsr1l,f,c
 37904  000EA0  0EFF               	movlw	255
 37905  000EA2  22E2               	addwfc	fsr1h,f,c
 37906  000EA4  0012               	return		;funcret
 37907  000EA6                     __end_of_nanf:
 37908                           	opt callstack 0
 37909                           
 37910 ;; *************** function _get_raw_result *****************
 37911 ;; Defined at:
 37912 ;;		line 125 in file "daq.c"
 37913 ;; Parameters:    Size  Location     Type
 37914 ;;  index           1  [STACK] const enum E16605
 37915 ;; Auto vars:     Size  Location     Type
 37916 ;;		None
 37917 ;; Return value:  Size  Location     Type
 37918 ;;                  2  [STACK] unsigned short 
 37919 ;; Registers used:
 37920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 37921 ;; Tracked objects:
 37922 ;;		On entry : 0/1
 37923 ;;		On exit  : 0/0
 37924 ;;		Unchanged: 0/0
 37925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37930 ;;Total ram usage:        0 bytes
 37931 ;; Hardware stack levels used:    1
 37932 ;; Hardware stack levels required when called:   15
 37933 ;; This function calls:
 37934 ;;		Nothing
 37935 ;; This function is called by:
 37936 ;;		_main
 37937 ;;		_current_sensor_cal
 37938 ;;		_conv_raw_result
 37939 ;; This function uses a reentrant model
 37940 ;;
 37941                           
 37942                           	psect	text142
 37943  001D12                     __ptext142:
 37944                           	opt callstack 0
 37945  001D12                     _get_raw_result:
 37946                           	opt callstack 0
 37947                           
 37948                           ;daq.c: 125: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 126: {;daq.c
      +                          : 127:  return R.raw_adc[index];
 37949                           ;stkvar	_index @ sp[(0)+-1]
 37950                           
 37951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37952                           ;incstack = 0
 37953 ;; hardware stack exceeded
 37954  001D12  0EFF               	movlw	-1
 37955  001D14  50E3               	movf	plusw1,w,c
 37956  001D16  0D02               	mullw	2
 37957  001D18  0E00               	movlw	low _R
 37958  001D1A  24F3               	addwf	243,w,c
 37959  001D1C  6ED9               	movwf	fsr2l,c
 37960  001D1E  0E02               	movlw	high _R
 37961  001D20  20F4               	addwfc	prodh,w,c
 37962  001D22  6EDA               	movwf	fsr2h,c
 37963  001D24  006F FF78  F001    	movff	postinc2,btemp
 37964  001D2A  006F FF74  F002    	movff	postdec2,btemp+1
 37965                           
 37966                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 37967  001D30  52E5               	movf	postdec1,f,c
 37968  001D32  0012               	return		;funcret
 37969  001D34                     __end_of_get_raw_result:
 37970                           	opt callstack 0
 37971                           
 37972 ;; *************** function ___xxtofl *****************
 37973 ;; Defined at:
 37974 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 37975 ;; Parameters:    Size  Location     Type
 37976 ;;  sign            1  [STACK] unsigned char 
 37977 ;;  val             4  [STACK] long 
 37978 ;; Auto vars:     Size  Location     Type
 37979 ;;  arg             4  [STACK] unsigned long 
 37980 ;;  exp             1  [STACK] unsigned char 
 37981 ;; Return value:  Size  Location     Type
 37982 ;;                  4  [STACK] unsigned char 
 37983 ;; Registers used:
 37984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 37985 ;; Tracked objects:
 37986 ;;		On entry : 0/2
 37987 ;;		On exit  : 0/0
 37988 ;;		Unchanged: 0/0
 37989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37994 ;;Total ram usage:        0 bytes
 37995 ;; Hardware stack levels used:    1
 37996 ;; Hardware stack levels required when called:   15
 37997 ;; This function calls:
 37998 ;;		Nothing
 37999 ;; This function is called by:
 38000 ;;		_conv_raw_result
 38001 ;;		_init_bsoc
 38002 ;; This function uses a reentrant model
 38003 ;;
 38004                           
 38005                           	psect	text143
 38006  01CB06                     __ptext143:
 38007                           	opt callstack 0
 38008  01CB06                     ___xxtofl:
 38009                           	opt callstack 0
 38010                           
 38011                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38012  01CB06  0E05               	movlw	5
 38013  01CB08  26E1               	addwf	fsr1l,f,c
 38014  01CB0A  0E00               	movlw	0
 38015  01CB0C  22E2               	addwfc	fsr1h,f,c
 38016                           
 38017                           ;stkvar	_sign @ sp[(-5)+-1]
 38018                           
 38019                           ;incstack = 0
 38020 ;; hardware stack exceeded
 38021  01CB0E  0EFA               	movlw	-6
 38022  01CB10  50E3               	movf	plusw1,w,c
 38023  01CB12  B4D8               	btfsc	status,2,c
 38024  01CB14  D01D               	goto	l11955
 38025                           
 38026                           ;stkvar	_val @ sp[(-5)+-5]
 38027  01CB16  0EF9               	movlw	-7
 38028  01CB18  AEE3               	btfss	plusw1,7,c
 38029  01CB1A  D01A               	goto	l11955
 38030                           
 38031                           ;stkvar	_val @ sp[(-5)+-5]
 38032  01CB1C  0EF6               	movlw	-10
 38033  01CB1E  006F FF8C  F009    	movff	plusw1,btemp+8
 38034  01CB24  0EF7               	movlw	-9
 38035  01CB26  006F FF8C  F00A    	movff	plusw1,btemp+9
 38036  01CB2C  0EF8               	movlw	-8
 38037  01CB2E  006F FF8C  F00B    	movff	plusw1,btemp+10
 38038  01CB34  0EF9               	movlw	-7
 38039  01CB36  006F FF8C  F00C    	movff	plusw1,btemp+11
 38040  01CB3C  1E09               	comf	(btemp+8)^0,f,c
 38041  01CB3E  1E0A               	comf	(btemp+9)^0,f,c
 38042  01CB40  1E0B               	comf	(btemp+10)^0,f,c
 38043  01CB42  1E0C               	comf	(btemp+11)^0,f,c
 38044  01CB44  2A09               	incf	(btemp+8)^0,f,c
 38045  01CB46  0E00               	movlw	0
 38046  01CB48  220A               	addwfc	(btemp+9)^0,f,c
 38047  01CB4A  220B               	addwfc	(btemp+10)^0,f,c
 38048  01CB4C  220C               	addwfc	(btemp+11)^0,f,c
 38049  01CB4E  D010               	goto	L44
 38050  01CB50                     l11955:
 38051                           
 38052                           ;stkvar	_val @ sp[(-5)+-5]
 38053  01CB50  0EF6               	movlw	-10
 38054  01CB52  006F FF8C  F009    	movff	plusw1,btemp+8
 38055  01CB58  0EF7               	movlw	-9
 38056  01CB5A  006F FF8C  F00A    	movff	plusw1,btemp+9
 38057  01CB60  0EF8               	movlw	-8
 38058  01CB62  006F FF8C  F00B    	movff	plusw1,btemp+10
 38059  01CB68  0EF9               	movlw	-7
 38060  01CB6A  006F FF8C  F00C    	movff	plusw1,btemp+11
 38061  01CB70                     L44:
 38062                           
 38063                           ;stkvar	_arg @ sp[(-5)+0]
 38064  01CB70  0EFB               	movlw	-5
 38065  01CB72  0060  F027  FFE3   	movff	btemp+8,plusw1
 38066  01CB78  0EFC               	movlw	-4
 38067  01CB7A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38068  01CB80  0EFD               	movlw	-3
 38069  01CB82  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38070  01CB88  0EFE               	movlw	-2
 38071  01CB8A  0060  F033  FFE3   	movff	btemp+11,plusw1
 38072                           
 38073                           ;stkvar	_val @ sp[(-5)+-5]
 38074  01CB90  0EF6               	movlw	-10
 38075  01CB92  50E3               	movf	plusw1,w,c
 38076  01CB94  E113               	bnz	l11963
 38077  01CB96  0EF7               	movlw	-9
 38078  01CB98  50E3               	movf	plusw1,w,c
 38079  01CB9A  E110               	bnz	l11963
 38080  01CB9C  0EF8               	movlw	-8
 38081  01CB9E  50E3               	movf	plusw1,w,c
 38082  01CBA0  E10D               	bnz	l11963
 38083  01CBA2  0EF9               	movlw	-7
 38084  01CBA4  50E3               	movf	plusw1,w,c
 38085  01CBA6  A4D8               	btfss	status,2,c
 38086  01CBA8  D009               	goto	l11963
 38087  01CBAA  0E00               	movlw	0
 38088  01CBAC  6E01               	movwf	btemp^0,c
 38089  01CBAE  0E00               	movlw	0
 38090  01CBB0  6E02               	movwf	(btemp+1)^0,c
 38091  01CBB2  0E00               	movlw	0
 38092  01CBB4  6E03               	movwf	(btemp+2)^0,c
 38093  01CBB6  0E00               	movlw	0
 38094  01CBB8  6E04               	movwf	(btemp+3)^0,c
 38095  01CBBA  D0A2               	goto	l3365
 38096  01CBBC                     l11963:
 38097  01CBBC  0E96               	movlw	150
 38098  01CBBE  6E0C               	movwf	(btemp+11)^0,c
 38099                           
 38100                           ;stkvar	_exp @ sp[(-5)+4]
 38101  01CBC0  0EFF               	movlw	-1
 38102  01CBC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 38103  01CBC8  D00B               	goto	l11967
 38104  01CBCA                     l11965:
 38105                           
 38106                           ;stkvar	_exp @ sp[(-5)+4]
 38107  01CBCA  0EFF               	movlw	-1
 38108  01CBCC  2AE3               	incf	plusw1,f,c
 38109                           
 38110                           ;stkvar	_arg @ sp[(-5)+0]
 38111  01CBCE  90D8               	bcf	status,0,c
 38112  01CBD0  0EFE               	movlw	-2
 38113  01CBD2  32E3               	rrcf	plusw1,f,c
 38114  01CBD4  0EFD               	movlw	-3
 38115  01CBD6  32E3               	rrcf	plusw1,f,c
 38116  01CBD8  0EFC               	movlw	-4
 38117  01CBDA  32E3               	rrcf	plusw1,f,c
 38118  01CBDC  0EFB               	movlw	-5
 38119  01CBDE  32E3               	rrcf	plusw1,f,c
 38120  01CBE0                     l11967:
 38121                           
 38122                           ;stkvar	_arg @ sp[(-5)+0]
 38123  01CBE0  50E1               	movf	fsr1l,w,c
 38124  01CBE2  0FFB               	addlw	-5
 38125  01CBE4  6ED9               	movwf	fsr2l,c
 38126  01CBE6  50E2               	movf	fsr1h,w,c
 38127  01CBE8  6EDA               	movwf	fsr2h,c
 38128  01CBEA  0EFF               	movlw	255
 38129  01CBEC  22DA               	addwfc	fsr2h,f,c
 38130  01CBEE  52DE               	movf	postinc2,f,c
 38131  01CBF0  52DE               	movf	postinc2,f,c
 38132  01CBF2  52DE               	movf	postinc2,f,c
 38133  01CBF4  0EFE               	movlw	254
 38134  01CBF6  14DD               	andwf	postdec2,w,c
 38135  01CBF8  B4D8               	btfsc	status,2,c
 38136  01CBFA  D018               	goto	l11975
 38137  01CBFC  D7E6               	goto	l11965
 38138  01CBFE                     l11969:
 38139                           
 38140                           ;stkvar	_exp @ sp[(-5)+4]
 38141  01CBFE  0EFF               	movlw	-1
 38142  01CC00  2AE3               	incf	plusw1,f,c
 38143                           
 38144                           ;stkvar	_arg @ sp[(-5)+0]
 38145  01CC02  50E1               	movf	fsr1l,w,c
 38146  01CC04  0FFB               	addlw	-5
 38147  01CC06  6ED9               	movwf	fsr2l,c
 38148  01CC08  50E2               	movf	fsr1h,w,c
 38149  01CC0A  6EDA               	movwf	fsr2h,c
 38150  01CC0C  0EFF               	movlw	255
 38151  01CC0E  22DA               	addwfc	fsr2h,f,c
 38152  01CC10  2ADE               	incf	postinc2,f,c
 38153  01CC12  0E00               	movlw	0
 38154  01CC14  22DE               	addwfc	postinc2,f,c
 38155  01CC16  22DE               	addwfc	postinc2,f,c
 38156  01CC18  22DE               	addwfc	postinc2,f,c
 38157                           
 38158                           ;stkvar	_arg @ sp[(-5)+0]
 38159  01CC1A  90D8               	bcf	status,0,c
 38160  01CC1C  0EFE               	movlw	-2
 38161  01CC1E  32E3               	rrcf	plusw1,f,c
 38162  01CC20  0EFD               	movlw	-3
 38163  01CC22  32E3               	rrcf	plusw1,f,c
 38164  01CC24  0EFC               	movlw	-4
 38165  01CC26  32E3               	rrcf	plusw1,f,c
 38166  01CC28  0EFB               	movlw	-5
 38167  01CC2A  32E3               	rrcf	plusw1,f,c
 38168  01CC2C                     l11975:
 38169                           
 38170                           ;stkvar	_arg @ sp[(-5)+0]
 38171  01CC2C  50E1               	movf	fsr1l,w,c
 38172  01CC2E  0FFB               	addlw	-5
 38173  01CC30  6ED9               	movwf	fsr2l,c
 38174  01CC32  50E2               	movf	fsr1h,w,c
 38175  01CC34  6EDA               	movwf	fsr2h,c
 38176  01CC36  0EFF               	movlw	255
 38177  01CC38  22DA               	addwfc	fsr2h,f,c
 38178  01CC3A  52DE               	movf	postinc2,f,c
 38179  01CC3C  52DE               	movf	postinc2,f,c
 38180  01CC3E  52DE               	movf	postinc2,f,c
 38181  01CC40  0EFF               	movlw	255
 38182  01CC42  14DD               	andwf	postdec2,w,c
 38183  01CC44  B4D8               	btfsc	status,2,c
 38184  01CC46  D00C               	goto	l11979
 38185  01CC48  D7DA               	goto	l11969
 38186  01CC4A                     l11977:
 38187                           
 38188                           ;stkvar	_exp @ sp[(-5)+4]
 38189  01CC4A  0EFF               	movlw	-1
 38190  01CC4C  06E3               	decf	plusw1,f,c
 38191                           
 38192                           ;stkvar	_arg @ sp[(-5)+0]
 38193  01CC4E  90D8               	bcf	status,0,c
 38194  01CC50  0EFB               	movlw	-5
 38195  01CC52  36E3               	rlcf	plusw1,f,c
 38196  01CC54  0EFC               	movlw	-4
 38197  01CC56  36E3               	rlcf	plusw1,f,c
 38198  01CC58  0EFD               	movlw	-3
 38199  01CC5A  36E3               	rlcf	plusw1,f,c
 38200  01CC5C  0EFE               	movlw	-2
 38201  01CC5E  36E3               	rlcf	plusw1,f,c
 38202  01CC60                     l11979:
 38203                           
 38204                           ;stkvar	_arg @ sp[(-5)+0]
 38205  01CC60  0EFD               	movlw	-3
 38206  01CC62  BEE3               	btfsc	plusw1,7,c
 38207  01CC64  D007               	goto	u11310
 38208                           
 38209                           ;stkvar	_exp @ sp[(-5)+4]
 38210  01CC66  0EFF               	movlw	-1
 38211  01CC68  006F FF8C  F001    	movff	plusw1,btemp
 38212  01CC6E  0E02               	movlw	2
 38213  01CC70  6001               	cpfslt	btemp^0,c
 38214  01CC72  D7EB               	goto	l11977
 38215  01CC74                     u11310:
 38216                           
 38217                           ;stkvar	_exp @ sp[(-5)+4]
 38218  01CC74  0EFF               	movlw	-1
 38219  01CC76  B0E3               	btfsc	plusw1,0,c
 38220  01CC78  D002               	goto	l11987
 38221                           
 38222                           ;stkvar	_arg @ sp[(-5)+0]
 38223  01CC7A  0EFD               	movlw	-3
 38224  01CC7C  9EE3               	bcf	plusw1,7,c
 38225  01CC7E                     l11987:
 38226                           
 38227                           ;stkvar	_exp @ sp[(-5)+4]
 38228  01CC7E  50E1               	movf	fsr1l,w,c
 38229  01CC80  0FFF               	addlw	-1
 38230  01CC82  6ED9               	movwf	fsr2l,c
 38231  01CC84  50E2               	movf	fsr1h,w,c
 38232  01CC86  6EDA               	movwf	fsr2h,c
 38233  01CC88  0EFF               	movlw	255
 38234  01CC8A  22DA               	addwfc	fsr2h,f,c
 38235  01CC8C  90D8               	bcf	status,0,c
 38236  01CC8E  32DF               	rrcf	indf2,f,c
 38237                           
 38238                           ;stkvar	_exp @ sp[(-5)+4]
 38239  01CC90  0EFF               	movlw	-1
 38240  01CC92  006F FF8C  F00C    	movff	plusw1,btemp+11
 38241  01CC98  0060  F030  F005   	movff	btemp+11,btemp+4
 38242  01CC9E  6A06               	clrf	(btemp+5)^0,c
 38243  01CCA0  6A07               	clrf	(btemp+6)^0,c
 38244  01CCA2  6A08               	clrf	(btemp+7)^0,c
 38245  01CCA4  0060  F014  F008   	movff	btemp+4,btemp+7
 38246  01CCAA  6A07               	clrf	(btemp+6)^0,c
 38247  01CCAC  6A06               	clrf	(btemp+5)^0,c
 38248  01CCAE  6A05               	clrf	(btemp+4)^0,c
 38249                           
 38250                           ;stkvar	_arg @ sp[(-5)+0]
 38251  01CCB0  50E1               	movf	fsr1l,w,c
 38252  01CCB2  0FFB               	addlw	-5
 38253  01CCB4  6ED9               	movwf	fsr2l,c
 38254  01CCB6  50E2               	movf	fsr1h,w,c
 38255  01CCB8  6EDA               	movwf	fsr2h,c
 38256  01CCBA  0EFF               	movlw	255
 38257  01CCBC  22DA               	addwfc	fsr2h,f,c
 38258  01CCBE  5005               	movf	(btemp+4)^0,w,c
 38259  01CCC0  12DE               	iorwf	postinc2,f,c
 38260  01CCC2  5006               	movf	(btemp+5)^0,w,c
 38261  01CCC4  12DE               	iorwf	postinc2,f,c
 38262  01CCC6  5007               	movf	(btemp+6)^0,w,c
 38263  01CCC8  12DE               	iorwf	postinc2,f,c
 38264  01CCCA  5008               	movf	(btemp+7)^0,w,c
 38265  01CCCC  12DE               	iorwf	postinc2,f,c
 38266                           
 38267                           ;stkvar	_sign @ sp[(-5)+-1]
 38268  01CCCE  0EFA               	movlw	-6
 38269  01CCD0  50E3               	movf	plusw1,w,c
 38270  01CCD2  B4D8               	btfsc	status,2,c
 38271  01CCD4  D005               	goto	l11997
 38272                           
 38273                           ;stkvar	_val @ sp[(-5)+-5]
 38274  01CCD6  0EF9               	movlw	-7
 38275  01CCD8  AEE3               	btfss	plusw1,7,c
 38276  01CCDA  D002               	goto	l11997
 38277                           
 38278                           ;stkvar	_arg @ sp[(-5)+0]
 38279  01CCDC  0EFE               	movlw	-2
 38280  01CCDE  8EE3               	bsf	plusw1,7,c
 38281  01CCE0                     l11997:
 38282                           
 38283                           ;stkvar	_arg @ sp[(-5)+0]
 38284  01CCE0  0EFB               	movlw	-5
 38285  01CCE2  006F FF8C  F001    	movff	plusw1,btemp
 38286  01CCE8  0EFC               	movlw	-4
 38287  01CCEA  006F FF8C  F002    	movff	plusw1,btemp+1
 38288  01CCF0  0EFD               	movlw	-3
 38289  01CCF2  006F FF8C  F003    	movff	plusw1,btemp+2
 38290  01CCF8  0EFE               	movlw	-2
 38291  01CCFA  006F FF8C  F004    	movff	plusw1,btemp+3
 38292  01CD00                     l3365:
 38293                           
 38294                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 38295  01CD00  0EF6               	movlw	246
 38296  01CD02  26E1               	addwf	fsr1l,f,c
 38297  01CD04  0EFF               	movlw	255
 38298  01CD06  22E2               	addwfc	fsr1h,f,c
 38299  01CD08  0012               	return		;funcret
 38300  01CD0A                     __end_of___xxtofl:
 38301                           	opt callstack 0
 38302                           
 38303 ;; *************** function ___fldiv *****************
 38304 ;; Defined at:
 38305 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 38306 ;; Parameters:    Size  Location     Type
 38307 ;;  b               4  [STACK] unsigned char 
 38308 ;;  a               4  [STACK] unsigned char 
 38309 ;; Auto vars:     Size  Location     Type
 38310 ;;  grs             4  [STACK] unsigned long 
 38311 ;;  rem             4  [STACK] unsigned long 
 38312 ;;  new_exp         2  [STACK] short 
 38313 ;;  aexp            1  [STACK] unsigned char 
 38314 ;;  bexp            1  [STACK] unsigned char 
 38315 ;;  sign            1  [STACK] unsigned char 
 38316 ;; Return value:  Size  Location     Type
 38317 ;;                  4  [STACK] unsigned char 
 38318 ;; Registers used:
 38319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 38320 ;; Tracked objects:
 38321 ;;		On entry : 0/0
 38322 ;;		On exit  : 0/0
 38323 ;;		Unchanged: 0/0
 38324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38329 ;;Total ram usage:        0 bytes
 38330 ;; Hardware stack levels used:    1
 38331 ;; Hardware stack levels required when called:   15
 38332 ;; This function calls:
 38333 ;;		Nothing
 38334 ;; This function is called by:
 38335 ;;		_conv_raw_result
 38336 ;;		_convert_dac_raw
 38337 ;;		_calc_bsoc
 38338 ;;		_init_bsoc
 38339 ;;		_esr_check
 38340 ;;		_efgtoa
 38341 ;; This function uses a reentrant model
 38342 ;;
 38343                           
 38344                           	psect	text144
 38345  0179B4                     __ptext144:
 38346                           	opt callstack 0
 38347  0179B4                     ___fldiv:
 38348                           	opt callstack 0
 38349                           
 38350                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 38351  0179B4  0E0D               	movlw	13
 38352  0179B6  26E1               	addwf	fsr1l,f,c
 38353  0179B8  0E00               	movlw	0
 38354  0179BA  22E2               	addwfc	fsr1h,f,c
 38355                           
 38356                           ;stkvar	_b @ sp[(-13)+-4]
 38357                           
 38358                           ;incstack = 0
 38359 ;; hardware stack exceeded
 38360  0179BC  0EF2               	movlw	242
 38361  0179BE  24E1               	addwf	fsr1l,w,c
 38362  0179C0  6ED9               	movwf	fsr2l,c
 38363  0179C2  0EFF               	movlw	255
 38364  0179C4  20E2               	addwfc	fsr1h,w,c
 38365  0179C6  6EDA               	movwf	fsr2h,c
 38366  0179C8  50DF               	movf	indf2,w,c
 38367  0179CA  6E0C               	movwf	(btemp+11)^0,c
 38368  0179CC  0E80               	movlw	128
 38369  0179CE  160C               	andwf	(btemp+11)^0,f,c
 38370                           
 38371                           ;stkvar	_sign @ sp[(-13)+12]
 38372  0179D0  0EFF               	movlw	-1
 38373  0179D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 38374                           
 38375                           ;stkvar	_b @ sp[(-13)+-4]
 38376  0179D8  0EF2               	movlw	242
 38377  0179DA  24E1               	addwf	fsr1l,w,c
 38378  0179DC  6ED9               	movwf	fsr2l,c
 38379  0179DE  0EFF               	movlw	255
 38380  0179E0  20E2               	addwfc	fsr1h,w,c
 38381  0179E2  6EDA               	movwf	fsr2h,c
 38382  0179E4  50DF               	movf	indf2,w,c
 38383  0179E6  6E0C               	movwf	(btemp+11)^0,c
 38384  0179E8  90D8               	bcf	status,0,c
 38385  0179EA  340C               	rlcf	(btemp+11)^0,w,c
 38386  0179EC  6E0B               	movwf	(btemp+10)^0,c
 38387                           
 38388                           ;stkvar	_bexp @ sp[(-13)+11]
 38389  0179EE  0EFE               	movlw	-2
 38390  0179F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38391                           
 38392                           ;stkvar	_b @ sp[(-13)+-4]
 38393  0179F6  0EF1               	movlw	241
 38394  0179F8  24E1               	addwf	fsr1l,w,c
 38395  0179FA  6ED9               	movwf	fsr2l,c
 38396  0179FC  0EFF               	movlw	255
 38397  0179FE  20E2               	addwfc	fsr1h,w,c
 38398  017A00  6EDA               	movwf	fsr2h,c
 38399  017A02  AEDF               	btfss	indf2,7,c
 38400  017A04  D002               	goto	l10241
 38401                           
 38402                           ;stkvar	_bexp @ sp[(-13)+11]
 38403  017A06  0EFE               	movlw	-2
 38404  017A08  80E3               	bsf	plusw1,0,c
 38405  017A0A                     l10241:
 38406                           
 38407                           ;stkvar	_bexp @ sp[(-13)+11]
 38408  017A0A  0EFE               	movlw	-2
 38409  017A0C  50E3               	movf	plusw1,w,c
 38410  017A0E  B4D8               	btfsc	status,2,c
 38411  017A10  D027               	goto	l10251
 38412                           
 38413                           ;stkvar	_bexp @ sp[(-13)+11]
 38414  017A12  0EFE               	movlw	-2
 38415  017A14  28E3               	incf	plusw1,w,c
 38416  017A16  A4D8               	btfss	status,2,c
 38417  017A18  D018               	goto	l10247
 38418  017A1A  0E00               	movlw	0
 38419  017A1C  6E09               	movwf	(btemp+8)^0,c
 38420  017A1E  0E00               	movlw	0
 38421  017A20  6E0A               	movwf	(btemp+9)^0,c
 38422  017A22  0E00               	movlw	0
 38423  017A24  6E0B               	movwf	(btemp+10)^0,c
 38424  017A26  0E00               	movlw	0
 38425  017A28  6E0C               	movwf	(btemp+11)^0,c
 38426                           
 38427                           ;stkvar	_b @ sp[(-13)+-4]
 38428  017A2A  0EEF               	movlw	-17
 38429  017A2C  0060  F027  FFE3   	movff	btemp+8,plusw1
 38430  017A32  0EF0               	movlw	-16
 38431  017A34  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38432  017A3A  0EF1               	movlw	-15
 38433  017A3C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38434  017A42  0EF2               	movlw	-14
 38435  017A44  0060  F033  FFE3   	movff	btemp+11,plusw1
 38436  017A4A                     l10247:
 38437                           
 38438                           ;stkvar	_b @ sp[(-13)+-4]
 38439  017A4A  0EF1               	movlw	-15
 38440  017A4C  8EE3               	bsf	plusw1,7,c
 38441                           
 38442                           ;stkvar	_b @ sp[(-13)+-4]
 38443  017A4E  0EF2               	movlw	242
 38444  017A50  24E1               	addwf	fsr1l,w,c
 38445  017A52  6ED9               	movwf	fsr2l,c
 38446  017A54  0EFF               	movlw	255
 38447  017A56  20E2               	addwfc	fsr1h,w,c
 38448  017A58  6EDA               	movwf	fsr2h,c
 38449  017A5A  0E00               	movlw	0
 38450  017A5C  6EDF               	movwf	indf2,c
 38451  017A5E  D018               	goto	l10253
 38452  017A60                     l10251:
 38453  017A60  0E00               	movlw	0
 38454  017A62  6E09               	movwf	(btemp+8)^0,c
 38455  017A64  0E00               	movlw	0
 38456  017A66  6E0A               	movwf	(btemp+9)^0,c
 38457  017A68  0E00               	movlw	0
 38458  017A6A  6E0B               	movwf	(btemp+10)^0,c
 38459  017A6C  0E00               	movlw	0
 38460  017A6E  6E0C               	movwf	(btemp+11)^0,c
 38461                           
 38462                           ;stkvar	_b @ sp[(-13)+-4]
 38463  017A70  0EEF               	movlw	-17
 38464  017A72  0060  F027  FFE3   	movff	btemp+8,plusw1
 38465  017A78  0EF0               	movlw	-16
 38466  017A7A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38467  017A80  0EF1               	movlw	-15
 38468  017A82  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38469  017A88  0EF2               	movlw	-14
 38470  017A8A  0060  F033  FFE3   	movff	btemp+11,plusw1
 38471  017A90                     l10253:
 38472                           
 38473                           ;stkvar	_a @ sp[(-13)+-8]
 38474  017A90  0EEE               	movlw	238
 38475  017A92  24E1               	addwf	fsr1l,w,c
 38476  017A94  6ED9               	movwf	fsr2l,c
 38477  017A96  0EFF               	movlw	255
 38478  017A98  20E2               	addwfc	fsr1h,w,c
 38479  017A9A  6EDA               	movwf	fsr2h,c
 38480  017A9C  50DF               	movf	indf2,w,c
 38481  017A9E  6E0C               	movwf	(btemp+11)^0,c
 38482  017AA0  0E80               	movlw	128
 38483  017AA2  160C               	andwf	(btemp+11)^0,f,c
 38484                           
 38485                           ;stkvar	_sign @ sp[(-13)+12]
 38486  017AA4  50E1               	movf	fsr1l,w,c
 38487  017AA6  0FFF               	addlw	-1
 38488  017AA8  6ED9               	movwf	fsr2l,c
 38489  017AAA  50E2               	movf	fsr1h,w,c
 38490  017AAC  6EDA               	movwf	fsr2h,c
 38491  017AAE  0EFF               	movlw	255
 38492  017AB0  22DA               	addwfc	fsr2h,f,c
 38493  017AB2  500C               	movf	(btemp+11)^0,w,c
 38494  017AB4  1ADF               	xorwf	indf2,f,c
 38495                           
 38496                           ;stkvar	_a @ sp[(-13)+-8]
 38497  017AB6  0EEE               	movlw	238
 38498  017AB8  24E1               	addwf	fsr1l,w,c
 38499  017ABA  6ED9               	movwf	fsr2l,c
 38500  017ABC  0EFF               	movlw	255
 38501  017ABE  20E2               	addwfc	fsr1h,w,c
 38502  017AC0  6EDA               	movwf	fsr2h,c
 38503  017AC2  50DF               	movf	indf2,w,c
 38504  017AC4  6E0C               	movwf	(btemp+11)^0,c
 38505  017AC6  90D8               	bcf	status,0,c
 38506  017AC8  340C               	rlcf	(btemp+11)^0,w,c
 38507  017ACA  6E0B               	movwf	(btemp+10)^0,c
 38508                           
 38509                           ;stkvar	_aexp @ sp[(-13)+10]
 38510  017ACC  0EFD               	movlw	-3
 38511  017ACE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38512                           
 38513                           ;stkvar	_a @ sp[(-13)+-8]
 38514  017AD4  0EED               	movlw	237
 38515  017AD6  24E1               	addwf	fsr1l,w,c
 38516  017AD8  6ED9               	movwf	fsr2l,c
 38517  017ADA  0EFF               	movlw	255
 38518  017ADC  20E2               	addwfc	fsr1h,w,c
 38519  017ADE  6EDA               	movwf	fsr2h,c
 38520  017AE0  AEDF               	btfss	indf2,7,c
 38521  017AE2  D002               	goto	l10261
 38522                           
 38523                           ;stkvar	_aexp @ sp[(-13)+10]
 38524  017AE4  0EFD               	movlw	-3
 38525  017AE6  80E3               	bsf	plusw1,0,c
 38526  017AE8                     l10261:
 38527                           
 38528                           ;stkvar	_aexp @ sp[(-13)+10]
 38529  017AE8  0EFD               	movlw	-3
 38530  017AEA  50E3               	movf	plusw1,w,c
 38531  017AEC  B4D8               	btfsc	status,2,c
 38532  017AEE  D027               	goto	l10271
 38533                           
 38534                           ;stkvar	_aexp @ sp[(-13)+10]
 38535  017AF0  0EFD               	movlw	-3
 38536  017AF2  28E3               	incf	plusw1,w,c
 38537  017AF4  A4D8               	btfss	status,2,c
 38538  017AF6  D018               	goto	l10267
 38539  017AF8  0E00               	movlw	0
 38540  017AFA  6E09               	movwf	(btemp+8)^0,c
 38541  017AFC  0E00               	movlw	0
 38542  017AFE  6E0A               	movwf	(btemp+9)^0,c
 38543  017B00  0E00               	movlw	0
 38544  017B02  6E0B               	movwf	(btemp+10)^0,c
 38545  017B04  0E00               	movlw	0
 38546  017B06  6E0C               	movwf	(btemp+11)^0,c
 38547                           
 38548                           ;stkvar	_a @ sp[(-13)+-8]
 38549  017B08  0EEB               	movlw	-21
 38550  017B0A  0060  F027  FFE3   	movff	btemp+8,plusw1
 38551  017B10  0EEC               	movlw	-20
 38552  017B12  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38553  017B18  0EED               	movlw	-19
 38554  017B1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38555  017B20  0EEE               	movlw	-18
 38556  017B22  0060  F033  FFE3   	movff	btemp+11,plusw1
 38557  017B28                     l10267:
 38558                           
 38559                           ;stkvar	_a @ sp[(-13)+-8]
 38560  017B28  0EED               	movlw	-19
 38561  017B2A  8EE3               	bsf	plusw1,7,c
 38562                           
 38563                           ;stkvar	_a @ sp[(-13)+-8]
 38564  017B2C  0EEE               	movlw	238
 38565  017B2E  24E1               	addwf	fsr1l,w,c
 38566  017B30  6ED9               	movwf	fsr2l,c
 38567  017B32  0EFF               	movlw	255
 38568  017B34  20E2               	addwfc	fsr1h,w,c
 38569  017B36  6EDA               	movwf	fsr2h,c
 38570  017B38  0E00               	movlw	0
 38571  017B3A  6EDF               	movwf	indf2,c
 38572  017B3C  D018               	goto	l10273
 38573  017B3E                     l10271:
 38574  017B3E  0E00               	movlw	0
 38575  017B40  6E09               	movwf	(btemp+8)^0,c
 38576  017B42  0E00               	movlw	0
 38577  017B44  6E0A               	movwf	(btemp+9)^0,c
 38578  017B46  0E00               	movlw	0
 38579  017B48  6E0B               	movwf	(btemp+10)^0,c
 38580  017B4A  0E00               	movlw	0
 38581  017B4C  6E0C               	movwf	(btemp+11)^0,c
 38582                           
 38583                           ;stkvar	_a @ sp[(-13)+-8]
 38584  017B4E  0EEB               	movlw	-21
 38585  017B50  0060  F027  FFE3   	movff	btemp+8,plusw1
 38586  017B56  0EEC               	movlw	-20
 38587  017B58  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38588  017B5E  0EED               	movlw	-19
 38589  017B60  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38590  017B66  0EEE               	movlw	-18
 38591  017B68  0060  F033  FFE3   	movff	btemp+11,plusw1
 38592  017B6E                     l10273:
 38593                           
 38594                           ;stkvar	_a @ sp[(-13)+-8]
 38595  017B6E  0EEB               	movlw	-21
 38596  017B70  50E3               	movf	plusw1,w,c
 38597  017B72  E139               	bnz	l10285
 38598  017B74  0EEC               	movlw	-20
 38599  017B76  50E3               	movf	plusw1,w,c
 38600  017B78  E136               	bnz	l10285
 38601  017B7A  0EED               	movlw	-19
 38602  017B7C  50E3               	movf	plusw1,w,c
 38603  017B7E  E133               	bnz	l10285
 38604  017B80  0EEE               	movlw	-18
 38605  017B82  50E3               	movf	plusw1,w,c
 38606  017B84  A4D8               	btfss	status,2,c
 38607  017B86  D02F               	goto	l10285
 38608                           
 38609                           ;stkvar	_b @ sp[(-13)+-4]
 38610  017B88  0EEF               	movlw	-17
 38611  017B8A  6AE3               	clrf	plusw1,c
 38612  017B8C  0EF0               	movlw	-16
 38613  017B8E  6AE3               	clrf	plusw1,c
 38614  017B90  0EF1               	movlw	-15
 38615  017B92  6AE3               	clrf	plusw1,c
 38616  017B94  0EF2               	movlw	-14
 38617  017B96  6AE3               	clrf	plusw1,c
 38618                           
 38619                           ;stkvar	_b @ sp[(-13)+-4]
 38620  017B98  0EF1               	movlw	241
 38621  017B9A  24E1               	addwf	fsr1l,w,c
 38622  017B9C  6ED9               	movwf	fsr2l,c
 38623  017B9E  0EFF               	movlw	255
 38624  017BA0  20E2               	addwfc	fsr1h,w,c
 38625  017BA2  6EDA               	movwf	fsr2h,c
 38626  017BA4  0E80               	movlw	128
 38627  017BA6  12DE               	iorwf	postinc2,f,c
 38628  017BA8  0E7F               	movlw	127
 38629  017BAA  12DD               	iorwf	postdec2,f,c
 38630  017BAC                     l10279:
 38631                           
 38632                           ;stkvar	_sign @ sp[(-13)+12]
 38633  017BAC  0EFF               	movlw	-1
 38634  017BAE  006F FF8C  F00C    	movff	plusw1,btemp+11
 38635                           
 38636                           ;stkvar	_b @ sp[(-13)+-4]
 38637  017BB4  0EF2               	movlw	242
 38638  017BB6  24E1               	addwf	fsr1l,w,c
 38639  017BB8  6ED9               	movwf	fsr2l,c
 38640  017BBA  0EFF               	movlw	255
 38641  017BBC  20E2               	addwfc	fsr1h,w,c
 38642  017BBE  6EDA               	movwf	fsr2h,c
 38643  017BC0  500C               	movf	(btemp+11)^0,w,c
 38644  017BC2  12DF               	iorwf	indf2,f,c
 38645                           
 38646                           ;stkvar	_b @ sp[(-13)+-4]
 38647  017BC4  0EEF               	movlw	-17
 38648  017BC6  006F FF8C  F001    	movff	plusw1,btemp
 38649  017BCC  0EF0               	movlw	-16
 38650  017BCE  006F FF8C  F002    	movff	plusw1,btemp+1
 38651  017BD4  0EF1               	movlw	-15
 38652  017BD6  006F FF8C  F003    	movff	plusw1,btemp+2
 38653  017BDC  0EF2               	movlw	-14
 38654  017BDE  006F FF8C  F004    	movff	plusw1,btemp+3
 38655  017BE4  D19F               	goto	l3289
 38656  017BE6                     l10285:
 38657                           
 38658                           ;stkvar	_bexp @ sp[(-13)+11]
 38659  017BE6  0EFE               	movlw	-2
 38660  017BE8  50E3               	movf	plusw1,w,c
 38661  017BEA  A4D8               	btfss	status,2,c
 38662  017BEC  D009               	goto	l10293
 38663  017BEE  0E00               	movlw	0
 38664  017BF0  6E01               	movwf	btemp^0,c
 38665  017BF2  0E00               	movlw	0
 38666  017BF4  6E02               	movwf	(btemp+1)^0,c
 38667  017BF6  0E00               	movlw	0
 38668  017BF8  6E03               	movwf	(btemp+2)^0,c
 38669  017BFA  0E00               	movlw	0
 38670  017BFC  6E04               	movwf	(btemp+3)^0,c
 38671  017BFE  D192               	goto	l3289
 38672  017C00                     l10293:
 38673                           
 38674                           ;stkvar	_bexp @ sp[(-13)+11]
 38675  017C00  0EFE               	movlw	-2
 38676  017C02  50E3               	movf	plusw1,w,c
 38677  017C04  6E0B               	movwf	(btemp+10)^0,c
 38678  017C06  6A0C               	clrf	(btemp+11)^0,c
 38679                           
 38680                           ;stkvar	_aexp @ sp[(-13)+10]
 38681  017C08  0EFD               	movlw	-3
 38682  017C0A  50E3               	movf	plusw1,w,c
 38683  017C0C  5E0B               	subwf	(btemp+10)^0,f,c
 38684  017C0E  0E00               	movlw	0
 38685  017C10  5A0C               	subwfb	(btemp+11)^0,f,c
 38686  017C12  0E7F               	movlw	127
 38687  017C14  260B               	addwf	(btemp+10)^0,f,c
 38688  017C16  0E00               	movlw	0
 38689  017C18  220C               	addwfc	(btemp+11)^0,f,c
 38690                           
 38691                           ;stkvar	_new_exp @ sp[(-13)+8]
 38692  017C1A  0EFB               	movlw	-5
 38693  017C1C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38694  017C22  0EFC               	movlw	-4
 38695  017C24  0060  F033  FFE3   	movff	btemp+11,plusw1
 38696                           
 38697                           ;stkvar	_b @ sp[(-13)+-4]
 38698  017C2A  0EEF               	movlw	-17
 38699  017C2C  006F FF8C  F009    	movff	plusw1,btemp+8
 38700  017C32  0EF0               	movlw	-16
 38701  017C34  006F FF8C  F00A    	movff	plusw1,btemp+9
 38702  017C3A  0EF1               	movlw	-15
 38703  017C3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 38704  017C42  0EF2               	movlw	-14
 38705  017C44  006F FF8C  F00C    	movff	plusw1,btemp+11
 38706                           
 38707                           ;stkvar	_rem @ sp[(-13)+4]
 38708  017C4A  0EF7               	movlw	-9
 38709  017C4C  0060  F027  FFE3   	movff	btemp+8,plusw1
 38710  017C52  0EF8               	movlw	-8
 38711  017C54  0060  F02B  FFE3   	movff	btemp+9,plusw1
 38712  017C5A  0EF9               	movlw	-7
 38713  017C5C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 38714  017C62  0EFA               	movlw	-6
 38715  017C64  0060  F033  FFE3   	movff	btemp+11,plusw1
 38716                           
 38717                           ;stkvar	_b @ sp[(-13)+-4]
 38718  017C6A  0EEF               	movlw	-17
 38719  017C6C  6AE3               	clrf	plusw1,c
 38720  017C6E  0EF0               	movlw	-16
 38721  017C70  6AE3               	clrf	plusw1,c
 38722  017C72  0EF1               	movlw	-15
 38723  017C74  6AE3               	clrf	plusw1,c
 38724  017C76  0EF2               	movlw	-14
 38725  017C78  6AE3               	clrf	plusw1,c
 38726                           
 38727                           ;stkvar	_grs @ sp[(-13)+0]
 38728  017C7A  0EF3               	movlw	-13
 38729  017C7C  6AE3               	clrf	plusw1,c
 38730  017C7E  0EF4               	movlw	-12
 38731  017C80  6AE3               	clrf	plusw1,c
 38732  017C82  0EF5               	movlw	-11
 38733  017C84  6AE3               	clrf	plusw1,c
 38734  017C86  0EF6               	movlw	-10
 38735  017C88  6AE3               	clrf	plusw1,c
 38736                           
 38737                           ;stkvar	_aexp @ sp[(-13)+10]
 38738  017C8A  0EFD               	movlw	-3
 38739  017C8C  6AE3               	clrf	plusw1,c
 38740  017C8E  D050               	goto	l10321
 38741  017C90                     l10303:
 38742                           
 38743                           ;stkvar	_aexp @ sp[(-13)+10]
 38744  017C90  0EFD               	movlw	-3
 38745  017C92  50E3               	movf	plusw1,w,c
 38746  017C94  B4D8               	btfsc	status,2,c
 38747  017C96  D020               	goto	l10313
 38748                           
 38749                           ;stkvar	_rem @ sp[(-13)+4]
 38750  017C98  90D8               	bcf	status,0,c
 38751  017C9A  0EF7               	movlw	-9
 38752  017C9C  36E3               	rlcf	plusw1,f,c
 38753  017C9E  0EF8               	movlw	-8
 38754  017CA0  36E3               	rlcf	plusw1,f,c
 38755  017CA2  0EF9               	movlw	-7
 38756  017CA4  36E3               	rlcf	plusw1,f,c
 38757  017CA6  0EFA               	movlw	-6
 38758  017CA8  36E3               	rlcf	plusw1,f,c
 38759                           
 38760                           ;stkvar	_b @ sp[(-13)+-4]
 38761  017CAA  90D8               	bcf	status,0,c
 38762  017CAC  0EEF               	movlw	-17
 38763  017CAE  36E3               	rlcf	plusw1,f,c
 38764  017CB0  0EF0               	movlw	-16
 38765  017CB2  36E3               	rlcf	plusw1,f,c
 38766  017CB4  0EF1               	movlw	-15
 38767  017CB6  36E3               	rlcf	plusw1,f,c
 38768  017CB8  0EF2               	movlw	-14
 38769  017CBA  36E3               	rlcf	plusw1,f,c
 38770                           
 38771                           ;stkvar	_grs @ sp[(-13)+0]
 38772  017CBC  0EF6               	movlw	-10
 38773  017CBE  AEE3               	btfss	plusw1,7,c
 38774  017CC0  D002               	goto	l10311
 38775                           
 38776                           ;stkvar	_b @ sp[(-13)+-4]
 38777  017CC2  0EEF               	movlw	-17
 38778  017CC4  80E3               	bsf	plusw1,0,c
 38779  017CC6                     l10311:
 38780                           
 38781                           ;stkvar	_grs @ sp[(-13)+0]
 38782  017CC6  90D8               	bcf	status,0,c
 38783  017CC8  0EF3               	movlw	-13
 38784  017CCA  36E3               	rlcf	plusw1,f,c
 38785  017CCC  0EF4               	movlw	-12
 38786  017CCE  36E3               	rlcf	plusw1,f,c
 38787  017CD0  0EF5               	movlw	-11
 38788  017CD2  36E3               	rlcf	plusw1,f,c
 38789  017CD4  0EF6               	movlw	-10
 38790  017CD6  36E3               	rlcf	plusw1,f,c
 38791  017CD8                     l10313:
 38792                           
 38793                           ;stkvar	_a @ sp[(-13)+-8]
 38794                           ;stkvar	_rem @ sp[(-13)+4]
 38795  017CD8  50E1               	movf	fsr1l,w,c
 38796  017CDA  0FF7               	addlw	-9
 38797  017CDC  6ED9               	movwf	fsr2l,c
 38798  017CDE  50E2               	movf	fsr1h,w,c
 38799  017CE0  6EDA               	movwf	fsr2h,c
 38800  017CE2  0EFF               	movlw	255
 38801  017CE4  22DA               	addwfc	fsr2h,f,c
 38802  017CE6  0EEB               	movlw	-21
 38803  017CE8  50E3               	movf	plusw1,w,c
 38804  017CEA  5CDE               	subwf	postinc2,w,c
 38805  017CEC  0EEC               	movlw	-20
 38806  017CEE  50E3               	movf	plusw1,w,c
 38807  017CF0  58DE               	subwfb	postinc2,w,c
 38808  017CF2  0EED               	movlw	-19
 38809  017CF4  50E3               	movf	plusw1,w,c
 38810  017CF6  58DE               	subwfb	postinc2,w,c
 38811  017CF8  0EEE               	movlw	-18
 38812  017CFA  50E3               	movf	plusw1,w,c
 38813  017CFC  58DE               	subwfb	postinc2,w,c
 38814  017CFE  A0D8               	btfss	status,0,c
 38815  017D00  D015               	goto	l10319
 38816                           
 38817                           ;stkvar	_grs @ sp[(-13)+0]
 38818  017D02  0EF6               	movlw	-10
 38819  017D04  8CE3               	bsf	plusw1,6,c
 38820                           
 38821                           ;stkvar	_a @ sp[(-13)+-8]
 38822                           ;stkvar	_rem @ sp[(-13)+4]
 38823  017D06  50E1               	movf	fsr1l,w,c
 38824  017D08  0FF7               	addlw	-9
 38825  017D0A  6ED9               	movwf	fsr2l,c
 38826  017D0C  50E2               	movf	fsr1h,w,c
 38827  017D0E  6EDA               	movwf	fsr2h,c
 38828  017D10  0EFF               	movlw	255
 38829  017D12  22DA               	addwfc	fsr2h,f,c
 38830  017D14  0EEB               	movlw	-21
 38831  017D16  50E3               	movf	plusw1,w,c
 38832  017D18  5EDE               	subwf	postinc2,f,c
 38833  017D1A  0EEC               	movlw	-20
 38834  017D1C  50E3               	movf	plusw1,w,c
 38835  017D1E  5ADE               	subwfb	postinc2,f,c
 38836  017D20  0EED               	movlw	-19
 38837  017D22  50E3               	movf	plusw1,w,c
 38838  017D24  5ADE               	subwfb	postinc2,f,c
 38839  017D26  0EEE               	movlw	-18
 38840  017D28  50E3               	movf	plusw1,w,c
 38841  017D2A  5ADE               	subwfb	postinc2,f,c
 38842  017D2C                     l10319:
 38843                           
 38844                           ;stkvar	_aexp @ sp[(-13)+10]
 38845  017D2C  0EFD               	movlw	-3
 38846  017D2E  2AE3               	incf	plusw1,f,c
 38847  017D30                     l10321:
 38848                           
 38849                           ;stkvar	_aexp @ sp[(-13)+10]
 38850  017D30  0EFD               	movlw	-3
 38851  017D32  006F FF8C  F001    	movff	plusw1,btemp
 38852  017D38  0E19               	movlw	25
 38853  017D3A  6401               	cpfsgt	btemp^0,c
 38854  017D3C  D7A9               	goto	l10303
 38855                           
 38856                           ;stkvar	_rem @ sp[(-13)+4]
 38857  017D3E  0EF7               	movlw	-9
 38858  017D40  50E3               	movf	plusw1,w,c
 38859  017D42  E10A               	bnz	u8400
 38860  017D44  0EF8               	movlw	-8
 38861  017D46  50E3               	movf	plusw1,w,c
 38862  017D48  E107               	bnz	u8400
 38863  017D4A  0EF9               	movlw	-7
 38864  017D4C  50E3               	movf	plusw1,w,c
 38865  017D4E  E104               	bnz	u8400
 38866  017D50  0EFA               	movlw	-6
 38867  017D52  50E3               	movf	plusw1,w,c
 38868  017D54  B4D8               	btfsc	status,2,c
 38869  017D56  D024               	goto	l10337
 38870  017D58                     u8400:
 38871                           
 38872                           ;stkvar	_grs @ sp[(-13)+0]
 38873  017D58  0EF3               	movlw	-13
 38874  017D5A  80E3               	bsf	plusw1,0,c
 38875  017D5C  D021               	goto	l10337
 38876  017D5E                     l10327:
 38877                           
 38878                           ;stkvar	_b @ sp[(-13)+-4]
 38879  017D5E  90D8               	bcf	status,0,c
 38880  017D60  0EEF               	movlw	-17
 38881  017D62  36E3               	rlcf	plusw1,f,c
 38882  017D64  0EF0               	movlw	-16
 38883  017D66  36E3               	rlcf	plusw1,f,c
 38884  017D68  0EF1               	movlw	-15
 38885  017D6A  36E3               	rlcf	plusw1,f,c
 38886  017D6C  0EF2               	movlw	-14
 38887  017D6E  36E3               	rlcf	plusw1,f,c
 38888                           
 38889                           ;stkvar	_grs @ sp[(-13)+0]
 38890  017D70  0EF6               	movlw	-10
 38891  017D72  AEE3               	btfss	plusw1,7,c
 38892  017D74  D002               	goto	l10333
 38893                           
 38894                           ;stkvar	_b @ sp[(-13)+-4]
 38895  017D76  0EEF               	movlw	-17
 38896  017D78  80E3               	bsf	plusw1,0,c
 38897  017D7A                     l10333:
 38898                           
 38899                           ;stkvar	_grs @ sp[(-13)+0]
 38900  017D7A  90D8               	bcf	status,0,c
 38901  017D7C  0EF3               	movlw	-13
 38902  017D7E  36E3               	rlcf	plusw1,f,c
 38903  017D80  0EF4               	movlw	-12
 38904  017D82  36E3               	rlcf	plusw1,f,c
 38905  017D84  0EF5               	movlw	-11
 38906  017D86  36E3               	rlcf	plusw1,f,c
 38907  017D88  0EF6               	movlw	-10
 38908  017D8A  36E3               	rlcf	plusw1,f,c
 38909                           
 38910                           ;stkvar	_new_exp @ sp[(-13)+8]
 38911  017D8C  50E1               	movf	fsr1l,w,c
 38912  017D8E  0FFB               	addlw	-5
 38913  017D90  6ED9               	movwf	fsr2l,c
 38914  017D92  50E2               	movf	fsr1h,w,c
 38915  017D94  6EDA               	movwf	fsr2h,c
 38916  017D96  0EFF               	movlw	255
 38917  017D98  22DA               	addwfc	fsr2h,f,c
 38918  017D9A  06DE               	decf	postinc2,f,c
 38919  017D9C  0E00               	movlw	0
 38920  017D9E  5ADD               	subwfb	postdec2,f,c
 38921  017DA0                     l10337:
 38922                           
 38923                           ;stkvar	_b @ sp[(-13)+-4]
 38924  017DA0  0EF1               	movlw	-15
 38925  017DA2  AEE3               	btfss	plusw1,7,c
 38926  017DA4  D7DC               	goto	l10327
 38927                           
 38928                           ;stkvar	_aexp @ sp[(-13)+10]
 38929  017DA6  0EFD               	movlw	-3
 38930  017DA8  6AE3               	clrf	plusw1,c
 38931                           
 38932                           ;stkvar	_grs @ sp[(-13)+0]
 38933  017DAA  0EF6               	movlw	-10
 38934  017DAC  AEE3               	btfss	plusw1,7,c
 38935  017DAE  D020               	goto	l10351
 38936                           
 38937                           ;stkvar	_grs @ sp[(-13)+0]
 38938  017DB0  50E1               	movf	fsr1l,w,c
 38939  017DB2  0FF3               	addlw	-13
 38940  017DB4  6ED9               	movwf	fsr2l,c
 38941  017DB6  50E2               	movf	fsr1h,w,c
 38942  017DB8  6EDA               	movwf	fsr2h,c
 38943  017DBA  0EFF               	movlw	255
 38944  017DBC  22DA               	addwfc	fsr2h,f,c
 38945  017DBE  0EFF               	movlw	255
 38946  017DC0  14DE               	andwf	postinc2,w,c
 38947  017DC2  6E09               	movwf	(btemp+8)^0,c
 38948  017DC4  0EFF               	movlw	255
 38949  017DC6  14DE               	andwf	postinc2,w,c
 38950  017DC8  6E0A               	movwf	(btemp+9)^0,c
 38951  017DCA  0EFF               	movlw	255
 38952  017DCC  14DE               	andwf	postinc2,w,c
 38953  017DCE  6E0B               	movwf	(btemp+10)^0,c
 38954  017DD0  0E7F               	movlw	127
 38955  017DD2  14DE               	andwf	postinc2,w,c
 38956  017DD4  6E0C               	movwf	(btemp+11)^0,c
 38957  017DD6  5009               	movf	(btemp+8)^0,w,c
 38958  017DD8  100A               	iorwf	(btemp+9)^0,w,c
 38959  017DDA  100B               	iorwf	(btemp+10)^0,w,c
 38960  017DDC  100C               	iorwf	(btemp+11)^0,w,c
 38961  017DDE  B4D8               	btfsc	status,2,c
 38962  017DE0  D004               	goto	l10347
 38963  017DE2                     u8440:
 38964                           
 38965                           ;stkvar	_aexp @ sp[(-13)+10]
 38966  017DE2  0EFD               	movlw	-3
 38967  017DE4  6AE3               	clrf	plusw1,c
 38968  017DE6  2AE3               	incf	plusw1,f,c
 38969  017DE8  D003               	goto	l10351
 38970  017DEA                     l10347:
 38971                           
 38972                           ;stkvar	_b @ sp[(-13)+-4]
 38973  017DEA  0EEF               	movlw	-17
 38974  017DEC  B0E3               	btfsc	plusw1,0,c
 38975  017DEE  D7F9               	goto	u8440
 38976  017DF0                     l10351:
 38977                           
 38978                           ;stkvar	_aexp @ sp[(-13)+10]
 38979  017DF0  0EFD               	movlw	-3
 38980  017DF2  50E3               	movf	plusw1,w,c
 38981  017DF4  B4D8               	btfsc	status,2,c
 38982  017DF6  D036               	goto	l10361
 38983                           
 38984                           ;stkvar	_b @ sp[(-13)+-4]
 38985  017DF8  50E1               	movf	fsr1l,w,c
 38986  017DFA  0FEF               	addlw	-17
 38987  017DFC  6ED9               	movwf	fsr2l,c
 38988  017DFE  50E2               	movf	fsr1h,w,c
 38989  017E00  6EDA               	movwf	fsr2h,c
 38990  017E02  0EFF               	movlw	255
 38991  017E04  22DA               	addwfc	fsr2h,f,c
 38992  017E06  2ADE               	incf	postinc2,f,c
 38993  017E08  0E00               	movlw	0
 38994  017E0A  22DE               	addwfc	postinc2,f,c
 38995  017E0C  22DE               	addwfc	postinc2,f,c
 38996  017E0E  22DE               	addwfc	postinc2,f,c
 38997                           
 38998                           ;stkvar	_b @ sp[(-13)+-4]
 38999  017E10  0EF2               	movlw	-14
 39000  017E12  A0E3               	btfss	plusw1,0,c
 39001  017E14  D027               	goto	l10361
 39002  017E16  0E01               	movlw	1
 39003  017E18  6E0C               	movwf	(btemp+11)^0,c
 39004                           
 39005                           ;stkvar	_b @ sp[(-13)+-4]
 39006  017E1A  50E1               	movf	fsr1l,w,c
 39007  017E1C  0FEF               	addlw	-17
 39008  017E1E  6ED9               	movwf	fsr2l,c
 39009  017E20  50E2               	movf	fsr1h,w,c
 39010  017E22  6EDA               	movwf	fsr2h,c
 39011  017E24  0EFF               	movlw	255
 39012  017E26  22DA               	addwfc	fsr2h,f,c
 39013  017E28  280C               	incf	(btemp+11)^0,w,c
 39014  017E2A  52DE               	movf	postinc2,f,c
 39015  017E2C  D008               	goto	u8480
 39016  017E2E                     u8485:
 39017  017E2E  52DE               	movf	postinc2,f,c
 39018  017E30  90D8               	bcf	status,0,c
 39019  017E32  BEDC               	btfsc	preinc2,7,c
 39020  017E34  80D8               	bsf	status,0,c
 39021  017E36  32DD               	rrcf	postdec2,f,c
 39022  017E38  32DD               	rrcf	postdec2,f,c
 39023  017E3A  32DD               	rrcf	postdec2,f,c
 39024  017E3C  32DE               	rrcf	postinc2,f,c
 39025  017E3E                     u8480:
 39026  017E3E  2EE8               	decfsz	wreg,f,c
 39027  017E40  D7F6               	goto	u8485
 39028                           
 39029                           ;stkvar	_new_exp @ sp[(-13)+8]
 39030  017E42  0EFB               	movlw	-5
 39031  017E44  50E3               	movf	plusw1,w,c
 39032  017E46  0F01               	addlw	1
 39033  017E48  6E01               	movwf	btemp^0,c
 39034  017E4A  0EFB               	movlw	-5
 39035  017E4C  0060  F007  FFE3   	movff	btemp,plusw1
 39036  017E52  6A01               	clrf	btemp^0,c
 39037  017E54  0EFC               	movlw	-4
 39038  017E56  50E3               	movf	plusw1,w,c
 39039  017E58  2001               	addwfc	btemp^0,w,c
 39040  017E5A  6E01               	movwf	btemp^0,c
 39041  017E5C  0EFC               	movlw	-4
 39042  017E5E  0060  F007  FFE3   	movff	btemp,plusw1
 39043  017E64                     l10361:
 39044                           
 39045                           ;stkvar	_new_exp @ sp[(-13)+8]
 39046  017E64  0EFC               	movlw	-4
 39047  017E66  BEE3               	btfsc	plusw1,7,c
 39048  017E68  D01B               	goto	l10367
 39049  017E6A  0EFC               	movlw	-4
 39050  017E6C  50E3               	movf	plusw1,w,c
 39051  017E6E  E104               	bnz	u8490
 39052  017E70  0EFB               	movlw	-5
 39053  017E72  28E3               	incf	plusw1,w,c
 39054  017E74  A0D8               	btfss	status,0,c
 39055  017E76  D014               	goto	l10367
 39056  017E78                     u8490:
 39057  017E78  0EFF               	movlw	255
 39058  017E7A  6E0B               	movwf	(btemp+10)^0,c
 39059  017E7C  0E00               	movlw	0
 39060  017E7E  6E0C               	movwf	(btemp+11)^0,c
 39061                           
 39062                           ;stkvar	_new_exp @ sp[(-13)+8]
 39063  017E80  0EFB               	movlw	-5
 39064  017E82  0060  F02F  FFE3   	movff	btemp+10,plusw1
 39065  017E88  0EFC               	movlw	-4
 39066  017E8A  0060  F033  FFE3   	movff	btemp+11,plusw1
 39067                           
 39068                           ;stkvar	_b @ sp[(-13)+-4]
 39069  017E90  0EEF               	movlw	-17
 39070  017E92  6AE3               	clrf	plusw1,c
 39071  017E94  0EF0               	movlw	-16
 39072  017E96  6AE3               	clrf	plusw1,c
 39073  017E98  0EF1               	movlw	-15
 39074  017E9A  6AE3               	clrf	plusw1,c
 39075  017E9C  0EF2               	movlw	-14
 39076  017E9E  6AE3               	clrf	plusw1,c
 39077  017EA0                     l10367:
 39078                           
 39079                           ;stkvar	_new_exp @ sp[(-13)+8]
 39080  017EA0  0EFC               	movlw	-4
 39081  017EA2  BEE3               	btfsc	plusw1,7,c
 39082  017EA4  D007               	goto	u8500
 39083  017EA6  0EFC               	movlw	-4
 39084  017EA8  50E3               	movf	plusw1,w,c
 39085  017EAA  E112               	bnz	l10373
 39086  017EAC  0EFB               	movlw	-5
 39087  017EAE  04E3               	decf	plusw1,w,c
 39088  017EB0  B0D8               	btfsc	status,0,c
 39089  017EB2  D00E               	goto	l10373
 39090  017EB4                     u8500:
 39091                           
 39092                           ;stkvar	_new_exp @ sp[(-13)+8]
 39093  017EB4  0EFB               	movlw	-5
 39094  017EB6  6AE3               	clrf	plusw1,c
 39095  017EB8  0EFC               	movlw	-4
 39096  017EBA  6AE3               	clrf	plusw1,c
 39097                           
 39098                           ;stkvar	_b @ sp[(-13)+-4]
 39099  017EBC  0EEF               	movlw	-17
 39100  017EBE  6AE3               	clrf	plusw1,c
 39101  017EC0  0EF0               	movlw	-16
 39102  017EC2  6AE3               	clrf	plusw1,c
 39103  017EC4  0EF1               	movlw	-15
 39104  017EC6  6AE3               	clrf	plusw1,c
 39105  017EC8  0EF2               	movlw	-14
 39106  017ECA  6AE3               	clrf	plusw1,c
 39107                           
 39108                           ;stkvar	_sign @ sp[(-13)+12]
 39109  017ECC  0EFF               	movlw	-1
 39110  017ECE  6AE3               	clrf	plusw1,c
 39111  017ED0                     l10373:
 39112                           
 39113                           ;stkvar	_new_exp @ sp[(-13)+8]
 39114                           ;stkvar	_bexp @ sp[(-13)+11]
 39115  017ED0  0EFB               	movlw	-5
 39116  017ED2  006F FF8C  F001    	movff	plusw1,btemp
 39117  017ED8  0EFE               	movlw	-2
 39118  017EDA  0060  F007  FFE3   	movff	btemp,plusw1
 39119                           
 39120                           ;stkvar	_bexp @ sp[(-13)+11]
 39121  017EE0  0EFE               	movlw	-2
 39122  017EE2  A0E3               	btfss	plusw1,0,c
 39123  017EE4  D009               	goto	l10379
 39124                           
 39125                           ;stkvar	_b @ sp[(-13)+-4]
 39126  017EE6  0EF1               	movlw	241
 39127  017EE8  24E1               	addwf	fsr1l,w,c
 39128  017EEA  6ED9               	movwf	fsr2l,c
 39129  017EEC  0EFF               	movlw	255
 39130  017EEE  20E2               	addwfc	fsr1h,w,c
 39131  017EF0  6EDA               	movwf	fsr2h,c
 39132  017EF2  0E00               	movlw	0
 39133  017EF4  8EDB               	bsf	plusw2,7,c
 39134  017EF6  D008               	goto	l10381
 39135  017EF8                     l10379:
 39136                           
 39137                           ;stkvar	_b @ sp[(-13)+-4]
 39138  017EF8  0EF1               	movlw	241
 39139  017EFA  24E1               	addwf	fsr1l,w,c
 39140  017EFC  6ED9               	movwf	fsr2l,c
 39141  017EFE  0EFF               	movlw	255
 39142  017F00  20E2               	addwfc	fsr1h,w,c
 39143  017F02  6EDA               	movwf	fsr2h,c
 39144  017F04  0E7F               	movlw	127
 39145  017F06  16DF               	andwf	indf2,f,c
 39146  017F08                     l10381:
 39147                           
 39148                           ;stkvar	_b @ sp[(-13)+-4]
 39149  017F08  0EF2               	movlw	242
 39150  017F0A  24E1               	addwf	fsr1l,w,c
 39151  017F0C  6ED9               	movwf	fsr2l,c
 39152  017F0E  0EFF               	movlw	255
 39153  017F10  20E2               	addwfc	fsr1h,w,c
 39154  017F12  6EDA               	movwf	fsr2h,c
 39155                           
 39156                           ;stkvar	_bexp @ sp[(-13)+11]
 39157  017F14  0EFE               	movlw	-2
 39158  017F16  006F FF8C  F00C    	movff	plusw1,btemp+11
 39159  017F1C  90D8               	bcf	status,0,c
 39160  017F1E  300C               	rrcf	(btemp+11)^0,w,c
 39161  017F20  6EDF               	movwf	indf2,c
 39162  017F22  D644               	goto	l10279
 39163  017F24                     l3289:
 39164                           
 39165                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 39166  017F24  0EEB               	movlw	235
 39167  017F26  26E1               	addwf	fsr1l,f,c
 39168  017F28  0EFF               	movlw	255
 39169  017F2A  22E2               	addwfc	fsr1h,f,c
 39170  017F2C  0012               	return		;funcret
 39171  017F2E                     __end_of___fldiv:
 39172                           	opt callstack 0
 39173                           
 39174 ;; *************** function ___flge *****************
 39175 ;; Defined at:
 39176 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 39177 ;; Parameters:    Size  Location     Type
 39178 ;;  ff1             4  [STACK] unsigned char 
 39179 ;;  ff2             4  [STACK] unsigned char 
 39180 ;; Auto vars:     Size  Location     Type
 39181 ;;		None
 39182 ;; Return value:  Size  Location     Type
 39183 ;;		None               void
 39184 ;; Registers used:
 39185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 39186 ;; Tracked objects:
 39187 ;;		On entry : 0/2
 39188 ;;		On exit  : 0/0
 39189 ;;		Unchanged: 0/0
 39190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39195 ;;Total ram usage:        0 bytes
 39196 ;; Hardware stack levels used:    1
 39197 ;; Hardware stack levels required when called:   15
 39198 ;; This function calls:
 39199 ;;		Nothing
 39200 ;; This function is called by:
 39201 ;;		_main
 39202 ;;		_convert_dac_raw
 39203 ;;		_calc_ror_data
 39204 ;;		_check_day_time
 39205 ;;		_calc_bsoc
 39206 ;;		_efgtoa
 39207 ;; This function uses a reentrant model
 39208 ;;
 39209                           
 39210                           	psect	text145
 39211  01DE56                     __ptext145:
 39212                           	opt callstack 0
 39213  01DE56                     ___flge:
 39214                           	opt callstack 0
 39215                           
 39216                           ;stkvar	_ff1 @ sp[(0)+-4]
 39217                           
 39218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39219                           ;incstack = 0
 39220 ;; hardware stack exceeded
 39221  01DE56  50E1               	movf	fsr1l,w,c
 39222  01DE58  0FFC               	addlw	-4
 39223  01DE5A  6ED9               	movwf	fsr2l,c
 39224  01DE5C  50E2               	movf	fsr1h,w,c
 39225  01DE5E  6EDA               	movwf	fsr2h,c
 39226  01DE60  0EFF               	movlw	255
 39227  01DE62  22DA               	addwfc	fsr2h,f,c
 39228  01DE64  0E00               	movlw	0
 39229  01DE66  14DE               	andwf	postinc2,w,c
 39230  01DE68  6E09               	movwf	(btemp+8)^0,c
 39231  01DE6A  0E00               	movlw	0
 39232  01DE6C  14DE               	andwf	postinc2,w,c
 39233  01DE6E  6E0A               	movwf	(btemp+9)^0,c
 39234  01DE70  0E80               	movlw	128
 39235  01DE72  14DE               	andwf	postinc2,w,c
 39236  01DE74  6E0B               	movwf	(btemp+10)^0,c
 39237  01DE76  0E7F               	movlw	127
 39238  01DE78  14DE               	andwf	postinc2,w,c
 39239  01DE7A  6E0C               	movwf	(btemp+11)^0,c
 39240  01DE7C  5009               	movf	(btemp+8)^0,w,c
 39241  01DE7E  100A               	iorwf	(btemp+9)^0,w,c
 39242  01DE80  100B               	iorwf	(btemp+10)^0,w,c
 39243  01DE82  100C               	iorwf	(btemp+11)^0,w,c
 39244  01DE84  A4D8               	btfss	status,2,c
 39245  01DE86  D008               	goto	l10655
 39246                           
 39247                           ;stkvar	_ff1 @ sp[(0)+-4]
 39248  01DE88  0EFC               	movlw	-4
 39249  01DE8A  6AE3               	clrf	plusw1,c
 39250  01DE8C  0EFD               	movlw	-3
 39251  01DE8E  6AE3               	clrf	plusw1,c
 39252  01DE90  0EFE               	movlw	-2
 39253  01DE92  6AE3               	clrf	plusw1,c
 39254  01DE94  0EFF               	movlw	-1
 39255  01DE96  6AE3               	clrf	plusw1,c
 39256  01DE98                     l10655:
 39257                           
 39258                           ;stkvar	_ff2 @ sp[(0)+-8]
 39259  01DE98  50E1               	movf	fsr1l,w,c
 39260  01DE9A  0FF8               	addlw	-8
 39261  01DE9C  6ED9               	movwf	fsr2l,c
 39262  01DE9E  50E2               	movf	fsr1h,w,c
 39263  01DEA0  6EDA               	movwf	fsr2h,c
 39264  01DEA2  0EFF               	movlw	255
 39265  01DEA4  22DA               	addwfc	fsr2h,f,c
 39266  01DEA6  0E00               	movlw	0
 39267  01DEA8  14DE               	andwf	postinc2,w,c
 39268  01DEAA  6E09               	movwf	(btemp+8)^0,c
 39269  01DEAC  0E00               	movlw	0
 39270  01DEAE  14DE               	andwf	postinc2,w,c
 39271  01DEB0  6E0A               	movwf	(btemp+9)^0,c
 39272  01DEB2  0E80               	movlw	128
 39273  01DEB4  14DE               	andwf	postinc2,w,c
 39274  01DEB6  6E0B               	movwf	(btemp+10)^0,c
 39275  01DEB8  0E7F               	movlw	127
 39276  01DEBA  14DE               	andwf	postinc2,w,c
 39277  01DEBC  6E0C               	movwf	(btemp+11)^0,c
 39278  01DEBE  5009               	movf	(btemp+8)^0,w,c
 39279  01DEC0  100A               	iorwf	(btemp+9)^0,w,c
 39280  01DEC2  100B               	iorwf	(btemp+10)^0,w,c
 39281  01DEC4  100C               	iorwf	(btemp+11)^0,w,c
 39282  01DEC6  A4D8               	btfss	status,2,c
 39283  01DEC8  D008               	goto	l2970
 39284                           
 39285                           ;stkvar	_ff2 @ sp[(0)+-8]
 39286  01DECA  0EF8               	movlw	-8
 39287  01DECC  6AE3               	clrf	plusw1,c
 39288  01DECE  0EF9               	movlw	-7
 39289  01DED0  6AE3               	clrf	plusw1,c
 39290  01DED2  0EFA               	movlw	-6
 39291  01DED4  6AE3               	clrf	plusw1,c
 39292  01DED6  0EFB               	movlw	-5
 39293  01DED8  6AE3               	clrf	plusw1,c
 39294  01DEDA                     l2970:
 39295                           
 39296                           ;stkvar	_ff1 @ sp[(0)+-4]
 39297  01DEDA  0EFF               	movlw	-1
 39298  01DEDC  AEE3               	btfss	plusw1,7,c
 39299  01DEDE  D024               	goto	l10661
 39300                           
 39301                           ;stkvar	_ff1 @ sp[(0)+-4]
 39302  01DEE0  0E00               	movlw	0
 39303  01DEE2  6E09               	movwf	(btemp+8)^0,c
 39304  01DEE4  0E00               	movlw	0
 39305  01DEE6  6E0A               	movwf	(btemp+9)^0,c
 39306  01DEE8  0E00               	movlw	0
 39307  01DEEA  6E0B               	movwf	(btemp+10)^0,c
 39308  01DEEC  0E80               	movlw	128
 39309  01DEEE  6E0C               	movwf	(btemp+11)^0,c
 39310  01DEF0  0EFC               	movlw	-4
 39311  01DEF2  50E3               	movf	plusw1,w,c
 39312  01DEF4  5E09               	subwf	(btemp+8)^0,f,c
 39313  01DEF6  0EFD               	movlw	-3
 39314  01DEF8  50E3               	movf	plusw1,w,c
 39315  01DEFA  5A0A               	subwfb	(btemp+9)^0,f,c
 39316  01DEFC  0EFE               	movlw	-2
 39317  01DEFE  50E3               	movf	plusw1,w,c
 39318  01DF00  5A0B               	subwfb	(btemp+10)^0,f,c
 39319  01DF02  0EFF               	movlw	-1
 39320  01DF04  50E3               	movf	plusw1,w,c
 39321  01DF06  5A0C               	subwfb	(btemp+11)^0,f,c
 39322                           
 39323                           ;stkvar	_ff1 @ sp[(0)+-4]
 39324  01DF08  0EFC               	movlw	-4
 39325  01DF0A  0060  F027  FFE3   	movff	btemp+8,plusw1
 39326  01DF10  0EFD               	movlw	-3
 39327  01DF12  0060  F02B  FFE3   	movff	btemp+9,plusw1
 39328  01DF18  0EFE               	movlw	-2
 39329  01DF1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 39330  01DF20  0EFF               	movlw	-1
 39331  01DF22  0060  F033  FFE3   	movff	btemp+11,plusw1
 39332  01DF28                     l10661:
 39333                           
 39334                           ;stkvar	_ff2 @ sp[(0)+-8]
 39335  01DF28  0EFB               	movlw	-5
 39336  01DF2A  AEE3               	btfss	plusw1,7,c
 39337  01DF2C  D024               	goto	l10665
 39338                           
 39339                           ;stkvar	_ff2 @ sp[(0)+-8]
 39340  01DF2E  0E00               	movlw	0
 39341  01DF30  6E09               	movwf	(btemp+8)^0,c
 39342  01DF32  0E00               	movlw	0
 39343  01DF34  6E0A               	movwf	(btemp+9)^0,c
 39344  01DF36  0E00               	movlw	0
 39345  01DF38  6E0B               	movwf	(btemp+10)^0,c
 39346  01DF3A  0E80               	movlw	128
 39347  01DF3C  6E0C               	movwf	(btemp+11)^0,c
 39348  01DF3E  0EF8               	movlw	-8
 39349  01DF40  50E3               	movf	plusw1,w,c
 39350  01DF42  5E09               	subwf	(btemp+8)^0,f,c
 39351  01DF44  0EF9               	movlw	-7
 39352  01DF46  50E3               	movf	plusw1,w,c
 39353  01DF48  5A0A               	subwfb	(btemp+9)^0,f,c
 39354  01DF4A  0EFA               	movlw	-6
 39355  01DF4C  50E3               	movf	plusw1,w,c
 39356  01DF4E  5A0B               	subwfb	(btemp+10)^0,f,c
 39357  01DF50  0EFB               	movlw	-5
 39358  01DF52  50E3               	movf	plusw1,w,c
 39359  01DF54  5A0C               	subwfb	(btemp+11)^0,f,c
 39360                           
 39361                           ;stkvar	_ff2 @ sp[(0)+-8]
 39362  01DF56  0EF8               	movlw	-8
 39363  01DF58  0060  F027  FFE3   	movff	btemp+8,plusw1
 39364  01DF5E  0EF9               	movlw	-7
 39365  01DF60  0060  F02B  FFE3   	movff	btemp+9,plusw1
 39366  01DF66  0EFA               	movlw	-6
 39367  01DF68  0060  F02F  FFE3   	movff	btemp+10,plusw1
 39368  01DF6E  0EFB               	movlw	-5
 39369  01DF70  0060  F033  FFE3   	movff	btemp+11,plusw1
 39370  01DF76                     l10665:
 39371                           
 39372                           ;stkvar	_ff1 @ sp[(0)+-4]
 39373  01DF76  0EFF               	movlw	-1
 39374  01DF78  7EE3               	btg	plusw1,7,c
 39375                           
 39376                           ;stkvar	_ff2 @ sp[(0)+-8]
 39377  01DF7A  0EFB               	movlw	-5
 39378  01DF7C  7EE3               	btg	plusw1,7,c
 39379                           
 39380                           ;stkvar	_ff2 @ sp[(0)+-8]
 39381                           ;stkvar	_ff1 @ sp[(0)+-4]
 39382  01DF7E  50E1               	movf	fsr1l,w,c
 39383  01DF80  0FFC               	addlw	-4
 39384  01DF82  6ED9               	movwf	fsr2l,c
 39385  01DF84  50E2               	movf	fsr1h,w,c
 39386  01DF86  6EDA               	movwf	fsr2h,c
 39387  01DF88  0EFF               	movlw	255
 39388  01DF8A  22DA               	addwfc	fsr2h,f,c
 39389  01DF8C  0EF8               	movlw	-8
 39390  01DF8E  50E3               	movf	plusw1,w,c
 39391  01DF90  5CDE               	subwf	postinc2,w,c
 39392  01DF92  0EF9               	movlw	-7
 39393  01DF94  50E3               	movf	plusw1,w,c
 39394  01DF96  58DE               	subwfb	postinc2,w,c
 39395  01DF98  0EFA               	movlw	-6
 39396  01DF9A  50E3               	movf	plusw1,w,c
 39397  01DF9C  58DE               	subwfb	postinc2,w,c
 39398  01DF9E  0EFB               	movlw	-5
 39399  01DFA0  50E3               	movf	plusw1,w,c
 39400  01DFA2  58DE               	subwfb	postinc2,w,c
 39401  01DFA4  B0D8               	btfsc	status,0,c
 39402  01DFA6  D002               	goto	l10673
 39403  01DFA8  9001               	bcf	btemp& (0+255),0,c
 39404  01DFAA  D001               	goto	l2977
 39405  01DFAC                     l10673:
 39406  01DFAC  8001               	bsf	btemp& (0+255),0,c
 39407  01DFAE                     l2977:
 39408                           
 39409                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 39410  01DFAE  0EF8               	movlw	248
 39411  01DFB0  26E1               	addwf	fsr1l,f,c
 39412  01DFB2  0EFF               	movlw	255
 39413  01DFB4  22E2               	addwfc	fsr1h,f,c
 39414  01DFB6  0012               	return		;funcret
 39415  01DFB8                     __end_of___flge:
 39416                           	opt callstack 0
 39417                           
 39418 ;; *************** function _calc_model_data *****************
 39419 ;; Defined at:
 39420 ;;		line 67 in file "mbmc.c"
 39421 ;; Parameters:    Size  Location     Type
 39422 ;;		None
 39423 ;; Auto vars:     Size  Location     Type
 39424 ;;		None
 39425 ;; Return value:  Size  Location     Type
 39426 ;;                  1  [STACK] void 
 39427 ;; Registers used:
 39428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 39429 ;; Tracked objects:
 39430 ;;		On entry : 0/1
 39431 ;;		On exit  : 3F/39
 39432 ;;		Unchanged: 0/0
 39433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39438 ;;Total ram usage:        0 bytes
 39439 ;; Hardware stack levels used:    1
 39440 ;; Hardware stack levels required when called:   18
 39441 ;; This function calls:
 39442 ;;		___fladd
 39443 ;;		___flmul
 39444 ;;		___flsub
 39445 ;;		_lp_filter
 39446 ;;		_start_bsoc
 39447 ;;		_stop_bsoc
 39448 ;; This function is called by:
 39449 ;;		_main
 39450 ;; This function uses a reentrant model
 39451 ;;
 39452                           
 39453                           	psect	text146
 39454  0191F4                     __ptext146:
 39455                           	opt callstack 0
 39456  0191F4                     _calc_model_data:
 39457                           	opt callstack 12
 39458                           
 39459                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 39460                           
 39461                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39462                           ;incstack = 0
 39463  0191F4  EC2D  F010         	call	_stop_bsoc	;wreg free
 39464                           
 39465                           ; BSR set to: 57
 39466                           ;mbmc.c: 72:  if (!V.calib) {
 39467  0191F8  0101               	movlb	1	; () banked
 39468  0191FA  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 39469  0191FC  A4D8               	btfss	status,2,c
 39470  0191FE  D220               	goto	l14339
 39471                           
 39472                           ; BSR set to: 1
 39473                           ;mbmc.c: 73:   C.updates++;
 39474  019200  EE22  F24B         	lfsr	2,_C+332	;volatile
 39475  019204  2ADE               	incf	postinc2,f,c
 39476  019206  0E00               	movlw	0
 39477  019208  22DE               	addwfc	postinc2,f,c
 39478  01920A  22DE               	addwfc	postinc2,f,c
 39479  01920C  22DE               	addwfc	postinc2,f,c
 39480                           
 39481                           ; BSR set to: 1
 39482                           ;mbmc.c: 74:   C.c_bat = C.calc[C_BATT];
 39483  01920E  EE22  F0FF         	lfsr	2,_C
 39484  019212  006F FF78  F943    	movff	postinc2,_C+68	;volatile
 39485  019218  006F FF78  F944    	movff	postinc2,_C+69	;volatile
 39486  01921E  006F FF78  F945    	movff	postinc2,_C+70	;volatile
 39487  019224  006F FF74  F946    	movff	postdec2,_C+71	;volatile
 39488                           
 39489                           ; BSR set to: 1
 39490                           ;mbmc.c: 75:   C.bc_ror = C.c_bat - bcror;
 39491  01922A  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 39492  019230  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 39493  019236  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 39494  01923C  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 39495  019242  EE22  F143         	lfsr	2,_C+68	;volatile
 39496  019246  006F FF7B FFE6     	movff	postinc2,postinc1
 39497  01924C  006F FF7B FFE6     	movff	postinc2,postinc1
 39498  019252  006F FF7B FFE6     	movff	postinc2,postinc1
 39499  019258  006F FF7B FFE6     	movff	postinc2,postinc1
 39500  01925E  ECDC  F009         	call	___flsub	;wreg free
 39501  019262  0060  F004  F96F   	movff	btemp,_C+112	;volatile
 39502  019268  0060  F008  F970   	movff	btemp+1,_C+113	;volatile
 39503  01926E  0060  F00C  F971   	movff	btemp+2,_C+114	;volatile
 39504  019274  0060  F010  F972   	movff	btemp+3,_C+115	;volatile
 39505                           
 39506                           ;mbmc.c: 76:   bcror = C.c_bat;
 39507  01927A  C943  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 39508  01927E  C944  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 39509  019282  C945  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 39510  019286  C946  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 39511                           
 39512                           ;mbmc.c: 77:   C.c_pv = C.calc[C_PV];
 39513  01928A  EE22  F103         	lfsr	2,_C+4	;volatile
 39514  01928E  006F FF78  F947    	movff	postinc2,_C+72	;volatile
 39515  019294  006F FF78  F948    	movff	postinc2,_C+73	;volatile
 39516  01929A  006F FF78  F949    	movff	postinc2,_C+74	;volatile
 39517  0192A0  006F FF74  F94A    	movff	postdec2,_C+75	;volatile
 39518                           
 39519                           ;mbmc.c: 78:   C.v_bat = C.calc[V_BAT];
 39520  0192A6  EE22  F10F         	lfsr	2,_C+16	;volatile
 39521  0192AA  006F FF78  F953    	movff	postinc2,_C+84	;volatile
 39522  0192B0  006F FF78  F954    	movff	postinc2,_C+85	;volatile
 39523  0192B6  006F FF78  F955    	movff	postinc2,_C+86	;volatile
 39524  0192BC  006F FF74  F956    	movff	postdec2,_C+87	;volatile
 39525                           
 39526                           ;mbmc.c: 79:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 39527  0192C2  EE22  F133         	lfsr	2,_C+52	;volatile
 39528  0192C6  006F FF78  F967    	movff	postinc2,_C+104	;volatile
 39529  0192CC  006F FF78  F968    	movff	postinc2,_C+105	;volatile
 39530  0192D2  006F FF78  F969    	movff	postinc2,_C+106	;volatile
 39531  0192D8  006F FF74  F96A    	movff	postdec2,_C+107	;volatile
 39532                           
 39533                           ;mbmc.c: 80:   C.bv_ror = C.v_bat - bvror;
 39534  0192DE  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 39535  0192E4  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 39536  0192EA  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 39537  0192F0  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 39538  0192F6  EE22  F153         	lfsr	2,_C+84	;volatile
 39539  0192FA  006F FF7B FFE6     	movff	postinc2,postinc1
 39540  019300  006F FF7B FFE6     	movff	postinc2,postinc1
 39541  019306  006F FF7B FFE6     	movff	postinc2,postinc1
 39542  01930C  006F FF7B FFE6     	movff	postinc2,postinc1
 39543  019312  ECDC  F009         	call	___flsub	;wreg free
 39544  019316  0060  F004  F96B   	movff	btemp,_C+108	;volatile
 39545  01931C  0060  F008  F96C   	movff	btemp+1,_C+109	;volatile
 39546  019322  0060  F00C  F96D   	movff	btemp+2,_C+110	;volatile
 39547  019328  0060  F010  F96E   	movff	btemp+3,_C+111	;volatile
 39548                           
 39549                           ;mbmc.c: 81:   bvror = C.v_bat;
 39550  01932E  C953  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 39551  019332  C954  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 39552  019336  C955  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 39553  01933A  C956  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 39554                           
 39555                           ;mbmc.c: 82:   C.v_pv = C.calc[V_PV];
 39556  01933E  EE22  F113         	lfsr	2,_C+20	;volatile
 39557  019342  006F FF78  F94F    	movff	postinc2,_C+80	;volatile
 39558  019348  006F FF78  F950    	movff	postinc2,_C+81	;volatile
 39559  01934E  006F FF78  F951    	movff	postinc2,_C+82	;volatile
 39560  019354  006F FF74  F952    	movff	postdec2,_C+83	;volatile
 39561                           
 39562                           ;mbmc.c: 83:   C.v_cc = C.calc[V_CC];
 39563  01935A  EE22  F107         	lfsr	2,_C+8	;volatile
 39564  01935E  006F FF78  F94B    	movff	postinc2,_C+76	;volatile
 39565  019364  006F FF78  F94C    	movff	postinc2,_C+77	;volatile
 39566  01936A  006F FF78  F94D    	movff	postinc2,_C+78	;volatile
 39567  019370  006F FF74  F94E    	movff	postdec2,_C+79	;volatile
 39568                           
 39569                           ;mbmc.c: 84:   C.v_inverter = C.calc[V_INVERTER];
 39570  019376  EE22  F12F         	lfsr	2,_C+48	;volatile
 39571  01937A  006F FF78  F963    	movff	postinc2,_C+100	;volatile
 39572  019380  006F FF78  F964    	movff	postinc2,_C+101	;volatile
 39573  019386  006F FF78  F965    	movff	postinc2,_C+102	;volatile
 39574  01938C  006F FF74  F966    	movff	postdec2,_C+103	;volatile
 39575                           
 39576                           ;mbmc.c: 85:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 39577  019392  0E01               	movlw	1
 39578  019394  6EE6               	movwf	postinc1,c
 39579  019396  0E10               	movlw	16
 39580  019398  6EE6               	movwf	postinc1,c
 39581  01939A  EE22  F0FF         	lfsr	2,_C
 39582  01939E  006F FF7B FFE6     	movff	postinc2,postinc1
 39583  0193A4  006F FF7B FFE6     	movff	postinc2,postinc1
 39584  0193AA  006F FF7B FFE6     	movff	postinc2,postinc1
 39585  0193B0  006F FF7B FFE6     	movff	postinc2,postinc1
 39586  0193B6  EE22  F103         	lfsr	2,_C+4	;volatile
 39587  0193BA  006F FF7B FFE6     	movff	postinc2,postinc1
 39588  0193C0  006F FF7B FFE6     	movff	postinc2,postinc1
 39589  0193C6  006F FF7B FFE6     	movff	postinc2,postinc1
 39590  0193CC  006F FF7B FFE6     	movff	postinc2,postinc1
 39591  0193D2  ECDC  F009         	call	___flsub	;wreg free
 39592  0193D6  0060  F007  FFE6   	movff	btemp,postinc1
 39593  0193DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39594  0193E2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39595  0193E8  0060  F013  FFE6   	movff	btemp+3,postinc1
 39596  0193EE  EC49  F0E8         	call	_lp_filter	;wreg free
 39597  0193F2  0060  F004  F93F   	movff	btemp,_C+64	;volatile
 39598  0193F8  0060  F008  F940   	movff	btemp+1,_C+65	;volatile
 39599  0193FE  0060  F00C  F941   	movff	btemp+2,_C+66	;volatile
 39600  019404  0060  F010  F942   	movff	btemp+3,_C+67	;volatile
 39601                           
 39602                           ;mbmc.c: 86:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 39603  01940A  0E01               	movlw	1
 39604  01940C  6EE6               	movwf	postinc1,c
 39605  01940E  0E11               	movlw	17
 39606  019410  6EE6               	movwf	postinc1,c
 39607  019412  EE22  F153         	lfsr	2,_C+84	;volatile
 39608  019416  006F FF7B FFE6     	movff	postinc2,postinc1
 39609  01941C  006F FF7B FFE6     	movff	postinc2,postinc1
 39610  019422  006F FF7B FFE6     	movff	postinc2,postinc1
 39611  019428  006F FF7B FFE6     	movff	postinc2,postinc1
 39612  01942E  EE22  F13F         	lfsr	2,_C+64	;volatile
 39613  019432  006F FF7B FFE6     	movff	postinc2,postinc1
 39614  019438  006F FF7B FFE6     	movff	postinc2,postinc1
 39615  01943E  006F FF7B FFE6     	movff	postinc2,postinc1
 39616  019444  006F FF7B FFE6     	movff	postinc2,postinc1
 39617  01944A  EC89  F0B1         	call	___flmul	;wreg free
 39618  01944E  0060  F007  FFE6   	movff	btemp,postinc1
 39619  019454  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39620  01945A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39621  019460  0060  F013  FFE6   	movff	btemp+3,postinc1
 39622  019466  EC49  F0E8         	call	_lp_filter	;wreg free
 39623  01946A  0060  F004  F973   	movff	btemp,_C+116	;volatile
 39624  019470  0060  F008  F974   	movff	btemp+1,_C+117	;volatile
 39625  019476  0060  F00C  F975   	movff	btemp+2,_C+118	;volatile
 39626  01947C  0060  F010  F976   	movff	btemp+3,_C+119	;volatile
 39627                           
 39628                           ;mbmc.c: 87:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 39629  019482  0E01               	movlw	1
 39630  019484  6EE6               	movwf	postinc1,c
 39631  019486  0E12               	movlw	18
 39632  019488  6EE6               	movwf	postinc1,c
 39633  01948A  EE22  F14F         	lfsr	2,_C+80	;volatile
 39634  01948E  006F FF7B FFE6     	movff	postinc2,postinc1
 39635  019494  006F FF7B FFE6     	movff	postinc2,postinc1
 39636  01949A  006F FF7B FFE6     	movff	postinc2,postinc1
 39637  0194A0  006F FF7B FFE6     	movff	postinc2,postinc1
 39638  0194A6  EE22  F147         	lfsr	2,_C+72	;volatile
 39639  0194AA  006F FF7B FFE6     	movff	postinc2,postinc1
 39640  0194B0  006F FF7B FFE6     	movff	postinc2,postinc1
 39641  0194B6  006F FF7B FFE6     	movff	postinc2,postinc1
 39642  0194BC  006F FF7B FFE6     	movff	postinc2,postinc1
 39643  0194C2  EC89  F0B1         	call	___flmul	;wreg free
 39644  0194C6  0060  F007  FFE6   	movff	btemp,postinc1
 39645  0194CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39646  0194D2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39647  0194D8  0060  F013  FFE6   	movff	btemp+3,postinc1
 39648  0194DE  EC49  F0E8         	call	_lp_filter	;wreg free
 39649  0194E2  0060  F004  F97B   	movff	btemp,_C+124	;volatile
 39650  0194E8  0060  F008  F97C   	movff	btemp+1,_C+125	;volatile
 39651  0194EE  0060  F00C  F97D   	movff	btemp+2,_C+126	;volatile
 39652  0194F4  0060  F010  F97E   	movff	btemp+3,_C+127	;volatile
 39653                           
 39654                           ;mbmc.c: 88:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 39655  0194FA  0E01               	movlw	1
 39656  0194FC  6EE6               	movwf	postinc1,c
 39657  0194FE  0E13               	movlw	19
 39658  019500  6EE6               	movwf	postinc1,c
 39659  019502  0E00               	movlw	0
 39660  019504  6EE6               	movwf	postinc1,c
 39661  019506  0E00               	movlw	0
 39662  019508  6EE6               	movwf	postinc1,c
 39663  01950A  0E60               	movlw	96
 39664  01950C  6EE6               	movwf	postinc1,c
 39665  01950E  0EC1               	movlw	193
 39666  019510  6EE6               	movwf	postinc1,c
 39667  019512  EE22  F163         	lfsr	2,_C+100	;volatile
 39668  019516  006F FF7B FFE6     	movff	postinc2,postinc1
 39669  01951C  006F FF7B FFE6     	movff	postinc2,postinc1
 39670  019522  006F FF7B FFE6     	movff	postinc2,postinc1
 39671  019528  006F FF7B FFE6     	movff	postinc2,postinc1
 39672  01952E  EE22  F13F         	lfsr	2,_C+64	;volatile
 39673  019532  006F FF7B FFE6     	movff	postinc2,postinc1
 39674  019538  006F FF7B FFE6     	movff	postinc2,postinc1
 39675  01953E  006F FF7B FFE6     	movff	postinc2,postinc1
 39676  019544  006F FF7B FFE6     	movff	postinc2,postinc1
 39677  01954A  EC89  F0B1         	call	___flmul	;wreg free
 39678  01954E  0060  F007  FFE6   	movff	btemp,postinc1
 39679  019554  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39680  01955A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39681  019560  0060  F013  FFE6   	movff	btemp+3,postinc1
 39682  019566  EC9E  F0B5         	call	___fladd	;wreg free
 39683  01956A  0060  F007  FFE6   	movff	btemp,postinc1
 39684  019570  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39685  019576  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39686  01957C  0060  F013  FFE6   	movff	btemp+3,postinc1
 39687  019582  EC49  F0E8         	call	_lp_filter	;wreg free
 39688  019586  0060  F004  F977   	movff	btemp,_C+120	;volatile
 39689  01958C  0060  F008  F978   	movff	btemp+1,_C+121	;volatile
 39690  019592  0060  F00C  F979   	movff	btemp+2,_C+122	;volatile
 39691  019598  0060  F010  F97A   	movff	btemp+3,_C+123	;volatile
 39692                           
 39693                           ;mbmc.c: 89:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 39694  01959E  0E01               	movlw	1
 39695  0195A0  6EE6               	movwf	postinc1,c
 39696  0195A2  0E14               	movlw	20
 39697  0195A4  6EE6               	movwf	postinc1,c
 39698  0195A6  EE22  F153         	lfsr	2,_C+84	;volatile
 39699  0195AA  006F FF7B FFE6     	movff	postinc2,postinc1
 39700  0195B0  006F FF7B FFE6     	movff	postinc2,postinc1
 39701  0195B6  006F FF7B FFE6     	movff	postinc2,postinc1
 39702  0195BC  006F FF7B FFE6     	movff	postinc2,postinc1
 39703  0195C2  EE22  F143         	lfsr	2,_C+68	;volatile
 39704  0195C6  006F FF7B FFE6     	movff	postinc2,postinc1
 39705  0195CC  006F FF7B FFE6     	movff	postinc2,postinc1
 39706  0195D2  006F FF7B FFE6     	movff	postinc2,postinc1
 39707  0195D8  006F FF7B FFE6     	movff	postinc2,postinc1
 39708  0195DE  EC89  F0B1         	call	___flmul	;wreg free
 39709  0195E2  0060  F007  FFE6   	movff	btemp,postinc1
 39710  0195E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 39711  0195EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 39712  0195F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 39713  0195FA  EC49  F0E8         	call	_lp_filter	;wreg free
 39714  0195FE  0060  F004  F97F   	movff	btemp,_C+128	;volatile
 39715  019604  0060  F008  F980   	movff	btemp+1,_C+129	;volatile
 39716  01960A  0060  F00C  F981   	movff	btemp+2,_C+130	;volatile
 39717  019610  0060  F010  F982   	movff	btemp+3,_C+131	;volatile
 39718                           
 39719                           ;mbmc.c: 93:   if (C.p_inverter < 0.0)
 39720  019616  EE22  F177         	lfsr	2,_C+120	;volatile
 39721  01961A  0E03               	movlw	3
 39722  01961C  AEDB               	btfss	plusw2,7,c
 39723  01961E  D010               	goto	l14339
 39724                           
 39725                           ;mbmc.c: 94:    C.p_inverter = 0.0001;
 39726  019620  0E17               	movlw	23
 39727  019622  006F FFA0  F977    	movff	wreg,_C+120	;volatile
 39728  019628  0EB7               	movlw	183
 39729  01962A  006F FFA0  F978    	movff	wreg,_C+121	;volatile
 39730  019630  0ED1               	movlw	209
 39731  019632  006F FFA0  F979    	movff	wreg,_C+122	;volatile
 39732  019638  0E38               	movlw	56
 39733  01963A  006F FFA0  F97A    	movff	wreg,_C+123	;volatile
 39734  019640                     l14339:
 39735                           
 39736                           ;mbmc.c: 96:  start_bsoc();
 39737  019640  EC9A  F00E         	call	_start_bsoc	;wreg free
 39738                           
 39739                           ; BSR set to: 57
 39740                           ;mbmc.c: 97:  C.update = 1;
 39741  019644  0E01               	movlw	1
 39742  019646  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 39743                           
 39744                           ; BSR set to: 57
 39745                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 39746  01964C  0012               	return		;funcret
 39747  01964E                     __end_of_calc_model_data:
 39748                           	opt callstack 0
 39749                           
 39750 ;; *************** function _stop_bsoc *****************
 39751 ;; Defined at:
 39752 ;;		line 130 in file "bsoc.c"
 39753 ;; Parameters:    Size  Location     Type
 39754 ;;		None
 39755 ;; Auto vars:     Size  Location     Type
 39756 ;;		None
 39757 ;; Return value:  Size  Location     Type
 39758 ;;                  1  [STACK] void 
 39759 ;; Registers used:
 39760 ;;		None
 39761 ;; Tracked objects:
 39762 ;;		On entry : 0/39
 39763 ;;		On exit  : 3F/39
 39764 ;;		Unchanged: 0/0
 39765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39770 ;;Total ram usage:        0 bytes
 39771 ;; Hardware stack levels used:    1
 39772 ;; Hardware stack levels required when called:   15
 39773 ;; This function calls:
 39774 ;;		Nothing
 39775 ;; This function is called by:
 39776 ;;		_calc_model_data
 39777 ;;		_load_hist_data
 39778 ;; This function uses a reentrant model
 39779 ;;
 39780                           
 39781                           	psect	text147
 39782  00205A                     __ptext147:
 39783                           	opt callstack 0
 39784  00205A                     _stop_bsoc:
 39785                           	opt callstack 14
 39786                           
 39787                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 39788                           
 39789                           ; BSR set to: 57
 39790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39791                           ;incstack = 0
 39792  00205A  0139               	movlb	57	; () banked
 39793  00205C  9D96               	bcf	150,6,b	;volatile
 39794                           
 39795                           ; BSR set to: 57
 39796                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 39797  00205E  0012               	return		;funcret
 39798  002060                     __end_of_stop_bsoc:
 39799                           	opt callstack 0
 39800                           
 39801 ;; *************** function _start_bsoc *****************
 39802 ;; Defined at:
 39803 ;;		line 121 in file "bsoc.c"
 39804 ;; Parameters:    Size  Location     Type
 39805 ;;		None
 39806 ;; Auto vars:     Size  Location     Type
 39807 ;;		None
 39808 ;; Return value:  Size  Location     Type
 39809 ;;                  1  [STACK] void 
 39810 ;; Registers used:
 39811 ;;		wreg, status,2, status,0, btemp+11
 39812 ;; Tracked objects:
 39813 ;;		On entry : 0/39
 39814 ;;		On exit  : 3F/39
 39815 ;;		Unchanged: 0/0
 39816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39821 ;;Total ram usage:        0 bytes
 39822 ;; Hardware stack levels used:    1
 39823 ;; Hardware stack levels required when called:   15
 39824 ;; This function calls:
 39825 ;;		Nothing
 39826 ;; This function is called by:
 39827 ;;		_calc_model_data
 39828 ;;		_load_hist_data
 39829 ;; This function uses a reentrant model
 39830 ;;
 39831                           
 39832                           	psect	text148
 39833  001D34                     __ptext148:
 39834                           	opt callstack 0
 39835  001D34                     _start_bsoc:
 39836                           	opt callstack 14
 39837                           
 39838                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 39839                           
 39840                           ; BSR set to: 57
 39841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39842                           ;incstack = 0
 39843  001D34  0139               	movlb	57	; () banked
 39844  001D36  8D96               	bsf	150,6,b	;volatile
 39845                           
 39846                           ; BSR set to: 57
 39847  001D38  A4BE               	btfss	190,2,c	;volatile
 39848  001D3A  D002               	goto	u12710
 39849  001D3C  0E01               	movlw	1
 39850  001D3E  D001               	goto	u12716
 39851  001D40                     u12710:
 39852  001D40  0E00               	movlw	0
 39853  001D42                     u12716:
 39854  001D42  0AFF               	xorlw	255
 39855  001D44  6E0C               	movwf	(btemp+11)^0,c
 39856  001D46  460C               	rlncf	(btemp+11)^0,f,c
 39857  001D48  460C               	rlncf	(btemp+11)^0,f,c
 39858  001D4A  50BE               	movf	190,w,c	;volatile
 39859  001D4C  180C               	xorwf	(btemp+11)^0,w,c
 39860  001D4E  0BFB               	andlw	-5
 39861  001D50  180C               	xorwf	(btemp+11)^0,w,c
 39862  001D52  6EBE               	movwf	190,c	;volatile
 39863                           
 39864                           ; BSR set to: 57
 39865                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 39866  001D54  0012               	return		;funcret
 39867  001D56                     __end_of_start_bsoc:
 39868                           	opt callstack 0
 39869                           
 39870 ;; *************** function _lp_filter *****************
 39871 ;; Defined at:
 39872 ;;		line 29 in file "mbmc.c"
 39873 ;; Parameters:    Size  Location     Type
 39874 ;;  new             4  [STACK] const float 
 39875 ;;  bn              1  [STACK] const unsigned char 
 39876 ;;  slow            1  [STACK] const char 
 39877 ;; Auto vars:     Size  Location     Type
 39878 ;;  lp_speed        4  [STACK] float 
 39879 ;; Return value:  Size  Location     Type
 39880 ;;                  4  [STACK] float 
 39881 ;; Registers used:
 39882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 39883 ;; Tracked objects:
 39884 ;;		On entry : 0/1
 39885 ;;		On exit  : 0/0
 39886 ;;		Unchanged: 0/0
 39887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 39888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 39892 ;;Total ram usage:        0 bytes
 39893 ;; Hardware stack levels used:    1
 39894 ;; Hardware stack levels required when called:   17
 39895 ;; This function calls:
 39896 ;;		___fladd
 39897 ;;		___flmul
 39898 ;;		___flsub
 39899 ;; This function is called by:
 39900 ;;		_main
 39901 ;;		_convert_adc_data
 39902 ;;		_calc_model_data
 39903 ;; This function uses a reentrant model
 39904 ;;
 39905                           
 39906                           	psect	text149
 39907  01D092                     __ptext149:
 39908                           	opt callstack 0
 39909  01D092                     _lp_filter:
 39910                           	opt callstack 0
 39911                           
 39912                           ; BSR set to: 57
 39913                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 39914  01D092  52E6               	movf	postinc1,f,c
 39915  01D094  52E6               	movf	postinc1,f,c
 39916  01D096  52E6               	movf	postinc1,f,c
 39917  01D098  52E6               	movf	postinc1,f,c
 39918                           
 39919                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 39920                           ;stkvar	_bn @ sp[(-4)+-5]
 39921                           
 39922                           ;incstack = 0
 39923  01D09A  0EF7               	movlw	-9
 39924  01D09C  006F FF8C  F001    	movff	plusw1,btemp
 39925  01D0A2  0E14               	movlw	20
 39926  01D0A4  6401               	cpfsgt	btemp^0,c
 39927  01D0A6  D011               	goto	l13383
 39928  01D0A8                     u12520:
 39929                           
 39930                           ;mbmc.c: 35:   return new;
 39931                           ;stkvar	_new @ sp[(-4)+-4]
 39932  01D0A8  0EF8               	movlw	-8
 39933  01D0AA  006F FF8C  F001    	movff	plusw1,btemp
 39934  01D0B0  0EF9               	movlw	-7
 39935  01D0B2  006F FF8C  F002    	movff	plusw1,btemp+1
 39936  01D0B8  0EFA               	movlw	-6
 39937  01D0BA  006F FF8C  F003    	movff	plusw1,btemp+2
 39938  01D0C0  0EFB               	movlw	-5
 39939  01D0C2  006F FF8C  F004    	movff	plusw1,btemp+3
 39940  01D0C8  D0BD               	goto	l2125
 39941  01D0CA                     l13383:
 39942                           
 39943                           ;mbmc.c: 37:  if (slow == (-1)) {
 39944                           ;stkvar	_slow @ sp[(-4)+-6]
 39945  01D0CA  0EF6               	movlw	-10
 39946  01D0CC  28E3               	incf	plusw1,w,c
 39947  01D0CE  A4D8               	btfss	status,2,c
 39948  01D0D0  D012               	goto	l13391
 39949                           
 39950                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 39951                           ;stkvar	_bn @ sp[(-4)+-5]
 39952  01D0D2  0EF7               	movlw	-9
 39953  01D0D4  50E3               	movf	plusw1,w,c
 39954  01D0D6  0D04               	mullw	4
 39955  01D0D8  0E00               	movlw	low lp_filter@smooth
 39956  01D0DA  24F3               	addwf	243,w,c
 39957  01D0DC  6ED9               	movwf	fsr2l,c
 39958  01D0DE  0E03               	movlw	high lp_filter@smooth
 39959  01D0E0  20F4               	addwfc	prodh,w,c
 39960  01D0E2  6EDA               	movwf	fsr2h,c
 39961  01D0E4  0E00               	movlw	0
 39962  01D0E6  6EDE               	movwf	postinc2,c
 39963  01D0E8  0E00               	movlw	0
 39964  01D0EA  6EDE               	movwf	postinc2,c
 39965  01D0EC  0E00               	movlw	0
 39966  01D0EE  6EDE               	movwf	postinc2,c
 39967  01D0F0  0E00               	movlw	0
 39968  01D0F2  6EDD               	movwf	postdec2,c
 39969  01D0F4  D7D9               	goto	u12520
 39970  01D0F6                     l13391:
 39971                           
 39972                           ;mbmc.c: 42:  if (slow) {
 39973                           ;stkvar	_slow @ sp[(-4)+-6]
 39974  01D0F6  0EF6               	movlw	-10
 39975  01D0F8  50E3               	movf	plusw1,w,c
 39976  01D0FA  B4D8               	btfsc	status,2,c
 39977  01D0FC  D006               	goto	l13395
 39978                           
 39979                           ;mbmc.c: 43:   lp_speed = 0.033;
 39980  01D0FE  0E02               	movlw	2
 39981  01D100  6E09               	movwf	(btemp+8)^0,c
 39982  01D102  0E2B               	movlw	43
 39983  01D104  6E0A               	movwf	(btemp+9)^0,c
 39984  01D106  0E07               	movlw	7
 39985  01D108  D005               	goto	L45
 39986  01D10A                     l13395:
 39987                           
 39988                           ;mbmc.c: 45:   lp_speed = 0.066;
 39989  01D10A  0E02               	movlw	2
 39990  01D10C  6E09               	movwf	(btemp+8)^0,c
 39991  01D10E  0E2B               	movlw	43
 39992  01D110  6E0A               	movwf	(btemp+9)^0,c
 39993  01D112  0E87               	movlw	135
 39994  01D114                     L45:
 39995  01D114  6E0B               	movwf	(btemp+10)^0,c
 39996  01D116  0E3D               	movlw	61
 39997  01D118  6E0C               	movwf	(btemp+11)^0,c
 39998                           
 39999                           ;stkvar	_lp_speed @ sp[(-4)+0]
 40000  01D11A  0EFC               	movlw	-4
 40001  01D11C  0060  F027  FFE3   	movff	btemp+8,plusw1
 40002  01D122  0EFD               	movlw	-3
 40003  01D124  0060  F02B  FFE3   	movff	btemp+9,plusw1
 40004  01D12A  0EFE               	movlw	-2
 40005  01D12C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 40006  01D132  0EFF               	movlw	-1
 40007  01D134  0060  F033  FFE3   	movff	btemp+11,plusw1
 40008                           
 40009                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 40010                           ;stkvar	_bn @ sp[(-4)+-5]
 40011  01D13A  0EF7               	movlw	-9
 40012  01D13C  50E3               	movf	plusw1,w,c
 40013  01D13E  0D04               	mullw	4
 40014  01D140  0E00               	movlw	low lp_filter@smooth
 40015  01D142  24F3               	addwf	243,w,c
 40016  01D144  6ED9               	movwf	fsr2l,c
 40017  01D146  0E03               	movlw	high lp_filter@smooth
 40018  01D148  20F4               	addwfc	prodh,w,c
 40019  01D14A  6EDA               	movwf	fsr2h,c
 40020  01D14C  006F FF7B FFE6     	movff	postinc2,postinc1
 40021  01D152  006F FF7B FFE6     	movff	postinc2,postinc1
 40022  01D158  006F FF7B FFE6     	movff	postinc2,postinc1
 40023  01D15E  006F FF7B FFE6     	movff	postinc2,postinc1
 40024                           
 40025                           ;stkvar	_lp_speed @ sp[(-8)+0]
 40026  01D164  0EF8               	movlw	-8
 40027  01D166  006F FF8F FFE6     	movff	plusw1,postinc1
 40028  01D16C  006F FF8F FFE6     	movff	plusw1,postinc1
 40029  01D172  006F FF8F FFE6     	movff	plusw1,postinc1
 40030  01D178  006F FF8F FFE6     	movff	plusw1,postinc1
 40031                           
 40032                           ;stkvar	_bn @ sp[(-12)+-5]
 40033  01D17E  0EEF               	movlw	-17
 40034  01D180  50E3               	movf	plusw1,w,c
 40035  01D182  0D04               	mullw	4
 40036  01D184  0E00               	movlw	low lp_filter@smooth
 40037  01D186  24F3               	addwf	243,w,c
 40038  01D188  6ED9               	movwf	fsr2l,c
 40039  01D18A  0E03               	movlw	high lp_filter@smooth
 40040  01D18C  20F4               	addwfc	prodh,w,c
 40041  01D18E  6EDA               	movwf	fsr2h,c
 40042  01D190  006F FF7B FFE6     	movff	postinc2,postinc1
 40043  01D196  006F FF7B FFE6     	movff	postinc2,postinc1
 40044  01D19C  006F FF7B FFE6     	movff	postinc2,postinc1
 40045  01D1A2  006F FF7B FFE6     	movff	postinc2,postinc1
 40046                           
 40047                           ;stkvar	_new @ sp[(-16)+-4]
 40048  01D1A8  0EEC               	movlw	-20
 40049  01D1AA  006F FF8F FFE6     	movff	plusw1,postinc1
 40050  01D1B0  006F FF8F FFE6     	movff	plusw1,postinc1
 40051  01D1B6  006F FF8F FFE6     	movff	plusw1,postinc1
 40052  01D1BC  006F FF8F FFE6     	movff	plusw1,postinc1
 40053  01D1C2  ECDC  F009         	call	___flsub	;wreg free
 40054  01D1C6  0060  F007  FFE6   	movff	btemp,postinc1
 40055  01D1CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 40056  01D1D2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 40057  01D1D8  0060  F013  FFE6   	movff	btemp+3,postinc1
 40058  01D1DE  EC89  F0B1         	call	___flmul	;wreg free
 40059  01D1E2  0060  F007  FFE6   	movff	btemp,postinc1
 40060  01D1E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 40061  01D1EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 40062  01D1F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 40063  01D1FA  EC9E  F0B5         	call	___fladd	;wreg free
 40064                           
 40065                           ;stkvar	_bn @ sp[(-4)+-5]
 40066  01D1FE  0EF7               	movlw	-9
 40067  01D200  50E3               	movf	plusw1,w,c
 40068  01D202  0D04               	mullw	4
 40069  01D204  0E00               	movlw	low lp_filter@smooth
 40070  01D206  24F3               	addwf	243,w,c
 40071  01D208  6ED9               	movwf	fsr2l,c
 40072  01D20A  0E03               	movlw	high lp_filter@smooth
 40073  01D20C  20F4               	addwfc	prodh,w,c
 40074  01D20E  6EDA               	movwf	fsr2h,c
 40075  01D210  0060  F007  FFDE   	movff	btemp,postinc2
 40076  01D216  0060  F00B  FFDE   	movff	btemp+1,postinc2
 40077  01D21C  0060  F00F  FFDE   	movff	btemp+2,postinc2
 40078  01D222  0060  F013  FFDD   	movff	btemp+3,postdec2
 40079  01D228  52DD               	movf	postdec2,f,c
 40080  01D22A  52DD               	movf	postdec2,f,c
 40081  01D22C  006F FF78  F001    	movff	postinc2,btemp
 40082  01D232  006F FF78  F002    	movff	postinc2,btemp+1
 40083  01D238  006F FF78  F003    	movff	postinc2,btemp+2
 40084  01D23E  006F FF78  F004    	movff	postinc2,btemp+3
 40085  01D244                     l2125:
 40086                           
 40087                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 40088  01D244  0EF6               	movlw	246
 40089  01D246  26E1               	addwf	fsr1l,f,c
 40090  01D248  0EFF               	movlw	255
 40091  01D24A  22E2               	addwfc	fsr1h,f,c
 40092  01D24C  0012               	return		;funcret
 40093  01D24E                     __end_of_lp_filter:
 40094                           	opt callstack 0
 40095                           
 40096 ;; *************** function ___flsub *****************
 40097 ;; Defined at:
 40098 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 40099 ;; Parameters:    Size  Location     Type
 40100 ;;  b               4  [STACK] float 
 40101 ;;  a               4  [STACK] float 
 40102 ;; Auto vars:     Size  Location     Type
 40103 ;;		None
 40104 ;; Return value:  Size  Location     Type
 40105 ;;                  4  [STACK] float 
 40106 ;; Registers used:
 40107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 40108 ;; Tracked objects:
 40109 ;;		On entry : 0/0
 40110 ;;		On exit  : 0/0
 40111 ;;		Unchanged: 0/0
 40112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40117 ;;Total ram usage:        0 bytes
 40118 ;; Hardware stack levels used:    1
 40119 ;; Hardware stack levels required when called:   16
 40120 ;; This function calls:
 40121 ;;		___fladd
 40122 ;; This function is called by:
 40123 ;;		_conv_raw_result
 40124 ;;		_lp_filter
 40125 ;;		_calc_model_data
 40126 ;;		_calc_ror_data
 40127 ;;		_esr_check
 40128 ;;		_efgtoa
 40129 ;; This function uses a reentrant model
 40130 ;;
 40131                           
 40132                           	psect	text150
 40133  0013B8                     __ptext150:
 40134                           	opt callstack 0
 40135  0013B8                     ___flsub:
 40136                           	opt callstack 0
 40137                           
 40138                           ;stkvar	_a @ sp[(0)+-8]
 40139                           
 40140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40141                           ;incstack = 0
 40142 ;; hardware stack exceeded
 40143  0013B8  0EFB               	movlw	-5
 40144  0013BA  7EE3               	btg	plusw1,7,c
 40145                           
 40146                           ;stkvar	_a @ sp[(0)+-8]
 40147  0013BC  0EF8               	movlw	-8
 40148  0013BE  006F FF8F FFE6     	movff	plusw1,postinc1
 40149  0013C4  006F FF8F FFE6     	movff	plusw1,postinc1
 40150  0013CA  006F FF8F FFE6     	movff	plusw1,postinc1
 40151  0013D0  006F FF8F FFE6     	movff	plusw1,postinc1
 40152                           
 40153                           ;stkvar	_b @ sp[(-4)+-4]
 40154  0013D6  0EF8               	movlw	-8
 40155  0013D8  006F FF8F FFE6     	movff	plusw1,postinc1
 40156  0013DE  006F FF8F FFE6     	movff	plusw1,postinc1
 40157  0013E4  006F FF8F FFE6     	movff	plusw1,postinc1
 40158  0013EA  006F FF8F FFE6     	movff	plusw1,postinc1
 40159  0013F0  EC9E  F0B5         	call	___fladd	;wreg free
 40160                           
 40161                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 40162  0013F4  0EF8               	movlw	248
 40163  0013F6  26E1               	addwf	fsr1l,f,c
 40164  0013F8  0EFF               	movlw	255
 40165  0013FA  22E2               	addwfc	fsr1h,f,c
 40166  0013FC  0012               	return		;funcret
 40167  0013FE                     __end_of___flsub:
 40168                           	opt callstack 0
 40169                           
 40170 ;; *************** function ___fladd *****************
 40171 ;; Defined at:
 40172 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 40173 ;; Parameters:    Size  Location     Type
 40174 ;;  b               4  [STACK] float 
 40175 ;;  a               4  [STACK] float 
 40176 ;; Auto vars:     Size  Location     Type
 40177 ;;  grs             1  [STACK] unsigned char 
 40178 ;;  bexp            1  [STACK] unsigned char 
 40179 ;;  aexp            1  [STACK] unsigned char 
 40180 ;;  signs           1  [STACK] unsigned char 
 40181 ;; Return value:  Size  Location     Type
 40182 ;;                  4  [STACK] unsigned char 
 40183 ;; Registers used:
 40184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 40185 ;; Tracked objects:
 40186 ;;		On entry : 0/0
 40187 ;;		On exit  : 0/0
 40188 ;;		Unchanged: 0/0
 40189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 40190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 40194 ;;Total ram usage:        0 bytes
 40195 ;; Hardware stack levels used:    1
 40196 ;; Hardware stack levels required when called:   15
 40197 ;; This function calls:
 40198 ;;		Nothing
 40199 ;; This function is called by:
 40200 ;;		_main
 40201 ;;		_lp_filter
 40202 ;;		_calc_model_data
 40203 ;;		_efgtoa
 40204 ;;		___asfladd
 40205 ;;		___flsub
 40206 ;; This function uses a reentrant model
 40207 ;;
 40208                           
 40209                           	psect	text151
 40210  016B3C                     __ptext151:
 40211                           	opt callstack 0
 40212  016B3C                     ___fladd:
 40213                           	opt callstack 0
 40214                           
 40215                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 40216  016B3C  52E6               	movf	postinc1,f,c
 40217  016B3E  52E6               	movf	postinc1,f,c
 40218  016B40  52E6               	movf	postinc1,f,c
 40219  016B42  52E6               	movf	postinc1,f,c
 40220                           
 40221                           ;stkvar	_b @ sp[(-4)+-4]
 40222                           
 40223                           ;incstack = 0
 40224 ;; hardware stack exceeded
 40225  016B44  0EFB               	movlw	251
 40226  016B46  24E1               	addwf	fsr1l,w,c
 40227  016B48  6ED9               	movwf	fsr2l,c
 40228  016B4A  0EFF               	movlw	255
 40229  016B4C  20E2               	addwfc	fsr1h,w,c
 40230  016B4E  6EDA               	movwf	fsr2h,c
 40231  016B50  50DF               	movf	indf2,w,c
 40232  016B52  6E0C               	movwf	(btemp+11)^0,c
 40233  016B54  0E80               	movlw	128
 40234  016B56  160C               	andwf	(btemp+11)^0,f,c
 40235                           
 40236                           ;stkvar	_signs @ sp[(-4)+3]
 40237  016B58  0EFF               	movlw	-1
 40238  016B5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 40239                           
 40240                           ;stkvar	_b @ sp[(-4)+-4]
 40241  016B60  0EFB               	movlw	251
 40242  016B62  24E1               	addwf	fsr1l,w,c
 40243  016B64  6ED9               	movwf	fsr2l,c
 40244  016B66  0EFF               	movlw	255
 40245  016B68  20E2               	addwfc	fsr1h,w,c
 40246  016B6A  6EDA               	movwf	fsr2h,c
 40247  016B6C  50DF               	movf	indf2,w,c
 40248  016B6E  6E0C               	movwf	(btemp+11)^0,c
 40249  016B70  90D8               	bcf	status,0,c
 40250  016B72  340C               	rlcf	(btemp+11)^0,w,c
 40251  016B74  6E0B               	movwf	(btemp+10)^0,c
 40252                           
 40253                           ;stkvar	_bexp @ sp[(-4)+1]
 40254  016B76  0EFD               	movlw	-3
 40255  016B78  0060  F02F  FFE3   	movff	btemp+10,plusw1
 40256                           
 40257                           ;stkvar	_b @ sp[(-4)+-4]
 40258  016B7E  0EFA               	movlw	250
 40259  016B80  24E1               	addwf	fsr1l,w,c
 40260  016B82  6ED9               	movwf	fsr2l,c
 40261  016B84  0EFF               	movlw	255
 40262  016B86  20E2               	addwfc	fsr1h,w,c
 40263  016B88  6EDA               	movwf	fsr2h,c
 40264  016B8A  AEDF               	btfss	indf2,7,c
 40265  016B8C  D002               	goto	l9725
 40266                           
 40267                           ;stkvar	_bexp @ sp[(-4)+1]
 40268  016B8E  0EFD               	movlw	-3
 40269  016B90  80E3               	bsf	plusw1,0,c
 40270  016B92                     l9725:
 40271                           
 40272                           ;stkvar	_bexp @ sp[(-4)+1]
 40273  016B92  0EFD               	movlw	-3
 40274  016B94  50E3               	movf	plusw1,w,c
 40275  016B96  B4D8               	btfsc	status,2,c
 40276  016B98  D027               	goto	l9735
 40277                           
 40278                           ;stkvar	_bexp @ sp[(-4)+1]
 40279  016B9A  0EFD               	movlw	-3
 40280  016B9C  28E3               	incf	plusw1,w,c
 40281  016B9E  A4D8               	btfss	status,2,c
 40282  016BA0  D018               	goto	l9731
 40283  016BA2  0E00               	movlw	0
 40284  016BA4  6E09               	movwf	(btemp+8)^0,c
 40285  016BA6  0E00               	movlw	0
 40286  016BA8  6E0A               	movwf	(btemp+9)^0,c
 40287  016BAA  0E00               	movlw	0
 40288  016BAC  6E0B               	movwf	(btemp+10)^0,c
 40289  016BAE  0E00               	movlw	0
 40290  016BB0  6E0C               	movwf	(btemp+11)^0,c
 40291                           
 40292                           ;stkvar	_b @ sp[(-4)+-4]
 40293  016BB2  0EF8               	movlw	-8
 40294  016BB4  0060  F027  FFE3   	movff	btemp+8,plusw1
 40295  016BBA  0EF9               	movlw	-7
 40296  016BBC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 40297  016BC2  0EFA               	movlw	-6
 40298  016BC4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 40299  016BCA  0EFB               	movlw	-5
 40300  016BCC  0060  F033  FFE3   	movff	btemp+11,plusw1
 40301  016BD2                     l9731:
 40302                           
 40303                           ;stkvar	_b @ sp[(-4)+-4]
 40304  016BD2  0EFA               	movlw	-6
 40305  016BD4  8EE3               	bsf	plusw1,7,c
 40306                           
 40307                           ;stkvar	_b @ sp[(-4)+-4]
 40308  016BD6  0EFB               	movlw	251
 40309  016BD8  24E1               	addwf	fsr1l,w,c
 40310  016BDA  6ED9               	movwf	fsr2l,c
 40311  016BDC  0EFF               	movlw	255
 40312  016BDE  20E2               	addwfc	fsr1h,w,c
 40313  016BE0  6EDA               	movwf	fsr2h,c
 40314  016BE2  0E00               	movlw	0
 40315  016BE4  6EDF               	movwf	indf2,c
 40316  016BE6  D018               	goto	l9737
 40317  016BE8                     l9735:
 40318  016BE8  0E00               	movlw	0
 40319  016BEA  6E09               	movwf	(btemp+8)^0,c
 40320  016BEC  0E00               	movlw	0
 40321  016BEE  6E0A               	movwf	(btemp+9)^0,c
 40322  016BF0  0E00               	movlw	0
 40323  016BF2  6E0B               	movwf	(btemp+10)^0,c
 40324  016BF4  0E00               	movlw	0
 40325  016BF6  6E0C               	movwf	(btemp+11)^0,c
 40326                           
 40327                           ;stkvar	_b @ sp[(-4)+-4]
 40328  016BF8  0EF8               	movlw	-8
 40329  016BFA  0060  F027  FFE3   	movff	btemp+8,plusw1
 40330  016C00  0EF9               	movlw	-7
 40331  016C02  0060  F02B  FFE3   	movff	btemp+9,plusw1
 40332  016C08  0EFA               	movlw	-6
 40333  016C0A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 40334  016C10  0EFB               	movlw	-5
 40335  016C12  0060  F033  FFE3   	movff	btemp+11,plusw1
 40336  016C18                     l9737:
 40337                           
 40338                           ;stkvar	_a @ sp[(-4)+-8]
 40339  016C18  0EF7               	movlw	247
 40340  016C1A  24E1               	addwf	fsr1l,w,c
 40341  016C1C  6ED9               	movwf	fsr2l,c
 40342  016C1E  0EFF               	movlw	255
 40343  016C20  20E2               	addwfc	fsr1h,w,c
 40344  016C22  6EDA               	movwf	fsr2h,c
 40345  016C24  50DF               	movf	indf2,w,c
 40346  016C26  6E0C               	movwf	(btemp+11)^0,c
 40347  016C28  0E80               	movlw	128
 40348  016C2A  160C               	andwf	(btemp+11)^0,f,c
 40349                           
 40350                           ;stkvar	_aexp @ sp[(-4)+2]
 40351  016C2C  0EFE               	movlw	-2
 40352  016C2E  0060  F033  FFE3   	movff	btemp+11,plusw1
 40353                           
 40354                           ;stkvar	_signs @ sp[(-4)+3]
 40355                           ;stkvar	_aexp @ sp[(-4)+2]
 40356  016C34  50E1               	movf	fsr1l,w,c
 40357  016C36  0FFE               	addlw	-2
 40358  016C38  6ED9               	movwf	fsr2l,c
 40359  016C3A  50E2               	movf	fsr1h,w,c
 40360  016C3C  6EDA               	movwf	fsr2h,c
 40361  016C3E  0EFF               	movlw	255
 40362  016C40  22DA               	addwfc	fsr2h,f,c
 40363  016C42  0EFF               	movlw	-1
 40364  016C44  50E3               	movf	plusw1,w,c
 40365  016C46  18DE               	xorwf	postinc2,w,c
 40366  016C48  B4D8               	btfsc	status,2,c
 40367  016C4A  D002               	goto	l9743
 40368                           
 40369                           ;stkvar	_signs @ sp[(-4)+3]
 40370  016C4C  0EFF               	movlw	-1
 40371  016C4E  8CE3               	bsf	plusw1,6,c
 40372  016C50                     l9743:
 40373                           
 40374                           ;stkvar	_a @ sp[(-4)+-8]
 40375  016C50  0EF7               	movlw	247
 40376  016C52  24E1               	addwf	fsr1l,w,c
 40377  016C54  6ED9               	movwf	fsr2l,c
 40378  016C56  0EFF               	movlw	255
 40379  016C58  20E2               	addwfc	fsr1h,w,c
 40380  016C5A  6EDA               	movwf	fsr2h,c
 40381  016C5C  50DF               	movf	indf2,w,c
 40382  016C5E  6E0C               	movwf	(btemp+11)^0,c
 40383  016C60  90D8               	bcf	status,0,c
 40384  016C62  340C               	rlcf	(btemp+11)^0,w,c
 40385  016C64  6E0B               	movwf	(btemp+10)^0,c
 40386                           
 40387                           ;stkvar	_aexp @ sp[(-4)+2]
 40388  016C66  0EFE               	movlw	-2
 40389  016C68  0060  F02F  FFE3   	movff	btemp+10,plusw1
 40390                           
 40391                           ;stkvar	_a @ sp[(-4)+-8]
 40392  016C6E  0EF6               	movlw	246
 40393  016C70  24E1               	addwf	fsr1l,w,c
 40394  016C72  6ED9               	movwf	fsr2l,c
 40395  016C74  0EFF               	movlw	255
 40396  016C76  20E2               	addwfc	fsr1h,w,c
 40397  016C78  6EDA               	movwf	fsr2h,c
 40398  016C7A  AEDF               	btfss	indf2,7,c
 40399  016C7C  D002               	goto	l9749
 40400                           
 40401                           ;stkvar	_aexp @ sp[(-4)+2]
 40402  016C7E  0EFE               	movlw	-2
 40403  016C80  80E3               	bsf	plusw1,0,c
 40404  016C82                     l9749:
 40405                           
 40406                           ;stkvar	_aexp @ sp[(-4)+2]
 40407  016C82  0EFE               	movlw	-2
 40408  016C84  50E3               	movf	plusw1,w,c
 40409  016C86  B4D8               	btfsc	status,2,c
 40410  016C88  D027               	goto	l9759
 40411                           
 40412                           ;stkvar	_aexp @ sp[(-4)+2]
 40413  016C8A  0EFE               	movlw	-2
 40414  016C8C  28E3               	incf	plusw1,w,c
 40415  016C8E  A4D8               	btfss	status,2,c
 40416  016C90  D018               	goto	l9755
 40417  016C92  0E00               	movlw	0
 40418  016C94  6E09               	movwf	(btemp+8)^0,c
 40419  016C96  0E00               	movlw	0
 40420  016C98  6E0A               	movwf	(btemp+9)^0,c
 40421  016C9A  0E00               	movlw	0
 40422  016C9C  6E0B               	movwf	(btemp+10)^0,c
 40423  016C9E  0E00               	movlw	0
 40424  016CA0  6E0C               	movwf	(btemp+11)^0,c
 40425                           
 40426                           ;stkvar	_a @ sp[(-4)+-8]
 40427  016CA2  0EF4               	movlw	-12
 40428  016CA4  0060  F027  FFE3   	movff	btemp+8,plusw1
 40429  016CAA  0EF5               	movlw	-11
 40430  016CAC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 40431  016CB2  0EF6               	movlw	-10
 40432  016CB4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 40433  016CBA  0EF7               	movlw	-9
 40434  016CBC  0060  F033  FFE3   	movff	btemp+11,plusw1
 40435  016CC2                     l9755:
 40436                           
 40437                           ;stkvar	_a @ sp[(-4)+-8]
 40438  016CC2  0EF6               	movlw	-10
 40439  016CC4  8EE3               	bsf	plusw1,7,c
 40440                           
 40441                           ;stkvar	_a @ sp[(-4)+-8]
 40442  016CC6  0EF7               	movlw	247
 40443  016CC8  24E1               	addwf	fsr1l,w,c
 40444  016CCA  6ED9               	movwf	fsr2l,c
 40445  016CCC  0EFF               	movlw	255
 40446  016CCE  20E2               	addwfc	fsr1h,w,c
 40447  016CD0  6EDA               	movwf	fsr2h,c
 40448  016CD2  0E00               	movlw	0
 40449  016CD4  6EDF               	movwf	indf2,c
 40450  016CD6  D018               	goto	l9761
 40451  016CD8                     l9759:
 40452  016CD8  0E00               	movlw	0
 40453  016CDA  6E09               	movwf	(btemp+8)^0,c
 40454  016CDC  0E00               	movlw	0
 40455  016CDE  6E0A               	movwf	(btemp+9)^0,c
 40456  016CE0  0E00               	movlw	0
 40457  016CE2  6E0B               	movwf	(btemp+10)^0,c
 40458  016CE4  0E00               	movlw	0
 40459  016CE6  6E0C               	movwf	(btemp+11)^0,c
 40460                           
 40461                           ;stkvar	_a @ sp[(-4)+-8]
 40462  016CE8  0EF4               	movlw	-12
 40463  016CEA  0060  F027  FFE3   	movff	btemp+8,plusw1
 40464  016CF0  0EF5               	movlw	-11
 40465  016CF2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 40466  016CF8  0EF6               	movlw	-10
 40467  016CFA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 40468  016D00  0EF7               	movlw	-9
 40469  016D02  0060  F033  FFE3   	movff	btemp+11,plusw1
 40470  016D08                     l9761:
 40471                           
 40472                           ;stkvar	_bexp @ sp[(-4)+1]
 40473                           ;stkvar	_aexp @ sp[(-4)+2]
 40474  016D08  50E1               	movf	fsr1l,w,c
 40475  016D0A  0FFE               	addlw	-2
 40476  016D0C  6ED9               	movwf	fsr2l,c
 40477  016D0E  50E2               	movf	fsr1h,w,c
 40478  016D10  6EDA               	movwf	fsr2h,c
 40479  016D12  0EFF               	movlw	255
 40480  016D14  22DA               	addwfc	fsr2h,f,c
 40481  016D16  0EFD               	movlw	-3
 40482  016D18  50E3               	movf	plusw1,w,c
 40483  016D1A  5CDE               	subwf	postinc2,w,c
 40484  016D1C  B0D8               	btfsc	status,0,c
 40485  016D1E  D0A4               	goto	l9797
 40486                           
 40487                           ;stkvar	_signs @ sp[(-4)+3]
 40488  016D20  0EFF               	movlw	-1
 40489  016D22  ACE3               	btfss	plusw1,6,c
 40490  016D24  D002               	goto	l9767
 40491                           
 40492                           ;stkvar	_signs @ sp[(-4)+3]
 40493  016D26  0EFF               	movlw	-1
 40494  016D28  7EE3               	btg	plusw1,7,c
 40495  016D2A                     l9767:
 40496                           
 40497                           ;stkvar	_bexp @ sp[(-4)+1]
 40498                           ;stkvar	_grs @ sp[(-4)+0]
 40499  016D2A  0EFD               	movlw	-3
 40500  016D2C  006F FF8C  F001    	movff	plusw1,btemp
 40501  016D32  0EFC               	movlw	-4
 40502  016D34  0060  F007  FFE3   	movff	btemp,plusw1
 40503                           
 40504                           ;stkvar	_aexp @ sp[(-4)+2]
 40505                           ;stkvar	_bexp @ sp[(-4)+1]
 40506  016D3A  0EFE               	movlw	-2
 40507  016D3C  006F FF8C  F001    	movff	plusw1,btemp
 40508  016D42  0EFD               	movlw	-3
 40509  016D44  0060  F007  FFE3   	movff	btemp,plusw1
 40510                           
 40511                           ;stkvar	_grs @ sp[(-4)+0]
 40512                           ;stkvar	_aexp @ sp[(-4)+2]
 40513  016D4A  0EFC               	movlw	-4
 40514  016D4C  006F FF8C  F001    	movff	plusw1,btemp
 40515  016D52  0EFE               	movlw	-2
 40516  016D54  0060  F007  FFE3   	movff	btemp,plusw1
 40517                           
 40518                           ;stkvar	_b @ sp[(-4)+-4]
 40519                           ;stkvar	_grs @ sp[(-4)+0]
 40520  016D5A  0EF8               	movlw	-8
 40521  016D5C  006F FF8C  F001    	movff	plusw1,btemp
 40522  016D62  0EFC               	movlw	-4
 40523  016D64  0060  F007  FFE3   	movff	btemp,plusw1
 40524                           
 40525                           ;stkvar	_a @ sp[(-4)+-8]
 40526                           ;stkvar	_b @ sp[(-4)+-4]
 40527  016D6A  0EF4               	movlw	-12
 40528  016D6C  006F FF8C  F001    	movff	plusw1,btemp
 40529  016D72  0EF8               	movlw	-8
 40530  016D74  0060  F007  FFE3   	movff	btemp,plusw1
 40531                           
 40532                           ;stkvar	_grs @ sp[(-4)+0]
 40533                           ;stkvar	_a @ sp[(-4)+-8]
 40534  016D7A  0EFC               	movlw	-4
 40535  016D7C  006F FF8C  F001    	movff	plusw1,btemp
 40536  016D82  0EF4               	movlw	-12
 40537  016D84  0060  F007  FFE3   	movff	btemp,plusw1
 40538                           
 40539                           ;stkvar	_b @ sp[(-4)+-4]
 40540  016D8A  0EF9               	movlw	249
 40541  016D8C  24E1               	addwf	fsr1l,w,c
 40542  016D8E  6ED9               	movwf	fsr2l,c
 40543  016D90  0EFF               	movlw	255
 40544  016D92  20E2               	addwfc	fsr1h,w,c
 40545  016D94  6EDA               	movwf	fsr2h,c
 40546  016D96  50DF               	movf	indf2,w,c
 40547  016D98  6E0C               	movwf	(btemp+11)^0,c
 40548                           
 40549                           ;stkvar	_grs @ sp[(-4)+0]
 40550  016D9A  0EFC               	movlw	-4
 40551  016D9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 40552                           
 40553                           ;stkvar	_a @ sp[(-4)+-8]
 40554  016DA2  0EF5               	movlw	245
 40555  016DA4  24E1               	addwf	fsr1l,w,c
 40556  016DA6  6ED9               	movwf	fsr2l,c
 40557  016DA8  0EFF               	movlw	255
 40558  016DAA  20E2               	addwfc	fsr1h,w,c
 40559  016DAC  6EDA               	movwf	fsr2h,c
 40560                           
 40561                           ;stkvar	_b @ sp[(-4)+-4]
 40562  016DAE  0EF9               	movlw	249
 40563  016DB0  24E1               	addwf	fsr1l,w,c
 40564  016DB2  6EE9               	movwf	fsr0l,c
 40565  016DB4  0EFF               	movlw	255
 40566  016DB6  20E2               	addwfc	fsr1h,w,c
 40567  016DB8  6EEA               	movwf	fsr0h,c
 40568  016DBA  006F FF7F FFEF     	movff	indf2,indf0
 40569                           
 40570                           ;stkvar	_grs @ sp[(-4)+0]
 40571                           ;stkvar	_a @ sp[(-4)+-8]
 40572  016DC0  0EF5               	movlw	245
 40573  016DC2  24E1               	addwf	fsr1l,w,c
 40574  016DC4  6ED9               	movwf	fsr2l,c
 40575  016DC6  0EFF               	movlw	255
 40576  016DC8  20E2               	addwfc	fsr1h,w,c
 40577  016DCA  6EDA               	movwf	fsr2h,c
 40578  016DCC  0EFC               	movlw	-4
 40579  016DCE  006F FF8F FFDF     	movff	plusw1,indf2
 40580                           
 40581                           ;stkvar	_b @ sp[(-4)+-4]
 40582  016DD4  0EFA               	movlw	250
 40583  016DD6  24E1               	addwf	fsr1l,w,c
 40584  016DD8  6ED9               	movwf	fsr2l,c
 40585  016DDA  0EFF               	movlw	255
 40586  016DDC  20E2               	addwfc	fsr1h,w,c
 40587  016DDE  6EDA               	movwf	fsr2h,c
 40588  016DE0  50DF               	movf	indf2,w,c
 40589  016DE2  6E0C               	movwf	(btemp+11)^0,c
 40590                           
 40591                           ;stkvar	_grs @ sp[(-4)+0]
 40592  016DE4  0EFC               	movlw	-4
 40593  016DE6  0060  F033  FFE3   	movff	btemp+11,plusw1
 40594                           
 40595                           ;stkvar	_a @ sp[(-4)+-8]
 40596  016DEC  0EF6               	movlw	246
 40597  016DEE  24E1               	addwf	fsr1l,w,c
 40598  016DF0  6ED9               	movwf	fsr2l,c
 40599  016DF2  0EFF               	movlw	255
 40600  016DF4  20E2               	addwfc	fsr1h,w,c
 40601  016DF6  6EDA               	movwf	fsr2h,c
 40602                           
 40603                           ;stkvar	_b @ sp[(-4)+-4]
 40604  016DF8  0EFA               	movlw	250
 40605  016DFA  24E1               	addwf	fsr1l,w,c
 40606  016DFC  6EE9               	movwf	fsr0l,c
 40607  016DFE  0EFF               	movlw	255
 40608  016E00  20E2               	addwfc	fsr1h,w,c
 40609  016E02  6EEA               	movwf	fsr0h,c
 40610  016E04  006F FF7F FFEF     	movff	indf2,indf0
 40611                           
 40612                           ;stkvar	_grs @ sp[(-4)+0]
 40613                           ;stkvar	_a @ sp[(-4)+-8]
 40614  016E0A  0EF6               	movlw	246
 40615  016E0C  24E1               	addwf	fsr1l,w,c
 40616  016E0E  6ED9               	movwf	fsr2l,c
 40617  016E10  0EFF               	movlw	255
 40618  016E12  20E2               	addwfc	fsr1h,w,c
 40619  016E14  6EDA               	movwf	fsr2h,c
 40620  016E16  0EFC               	movlw	-4
 40621  016E18  006F FF8F FFDF     	movff	plusw1,indf2
 40622                           
 40623                           ;stkvar	_b @ sp[(-4)+-4]
 40624  016E1E  0EFB               	movlw	251
 40625  016E20  24E1               	addwf	fsr1l,w,c
 40626  016E22  6ED9               	movwf	fsr2l,c
 40627  016E24  0EFF               	movlw	255
 40628  016E26  20E2               	addwfc	fsr1h,w,c
 40629  016E28  6EDA               	movwf	fsr2h,c
 40630  016E2A  50DF               	movf	indf2,w,c
 40631  016E2C  6E0C               	movwf	(btemp+11)^0,c
 40632                           
 40633                           ;stkvar	_grs @ sp[(-4)+0]
 40634  016E2E  0EFC               	movlw	-4
 40635  016E30  0060  F033  FFE3   	movff	btemp+11,plusw1
 40636                           
 40637                           ;stkvar	_a @ sp[(-4)+-8]
 40638  016E36  0EF7               	movlw	247
 40639  016E38  24E1               	addwf	fsr1l,w,c
 40640  016E3A  6ED9               	movwf	fsr2l,c
 40641  016E3C  0EFF               	movlw	255
 40642  016E3E  20E2               	addwfc	fsr1h,w,c
 40643  016E40  6EDA               	movwf	fsr2h,c
 40644                           
 40645                           ;stkvar	_b @ sp[(-4)+-4]
 40646  016E42  0EFB               	movlw	251
 40647  016E44  24E1               	addwf	fsr1l,w,c
 40648  016E46  6EE9               	movwf	fsr0l,c
 40649  016E48  0EFF               	movlw	255
 40650  016E4A  20E2               	addwfc	fsr1h,w,c
 40651  016E4C  6EEA               	movwf	fsr0h,c
 40652  016E4E  006F FF7F FFEF     	movff	indf2,indf0
 40653                           
 40654                           ;stkvar	_grs @ sp[(-4)+0]
 40655                           ;stkvar	_a @ sp[(-4)+-8]
 40656  016E54  0EF7               	movlw	247
 40657  016E56  24E1               	addwf	fsr1l,w,c
 40658  016E58  6ED9               	movwf	fsr2l,c
 40659  016E5A  0EFF               	movlw	255
 40660  016E5C  20E2               	addwfc	fsr1h,w,c
 40661  016E5E  6EDA               	movwf	fsr2h,c
 40662  016E60  0EFC               	movlw	-4
 40663  016E62  006F FF8F FFDF     	movff	plusw1,indf2
 40664  016E68                     l9797:
 40665                           
 40666                           ;stkvar	_grs @ sp[(-4)+0]
 40667  016E68  0EFC               	movlw	-4
 40668  016E6A  6AE3               	clrf	plusw1,c
 40669                           
 40670                           ;stkvar	_aexp @ sp[(-4)+2]
 40671  016E6C  0EFE               	movlw	-2
 40672  016E6E  50E3               	movf	plusw1,w,c
 40673  016E70  6E0B               	movwf	(btemp+10)^0,c
 40674  016E72  6A0C               	clrf	(btemp+11)^0,c
 40675                           
 40676                           ;stkvar	_bexp @ sp[(-4)+1]
 40677  016E74  0EFD               	movlw	-3
 40678  016E76  50E3               	movf	plusw1,w,c
 40679  016E78  5E0B               	subwf	(btemp+10)^0,f,c
 40680  016E7A  0E00               	movlw	0
 40681  016E7C  5A0C               	subwfb	(btemp+11)^0,f,c
 40682  016E7E  BE0C               	btfsc	(btemp+11)^0,7,c
 40683  016E80  D062               	goto	l9821
 40684  016E82  500C               	movf	(btemp+11)^0,w,c
 40685  016E84  E104               	bnz	u7240
 40686  016E86  0E1A               	movlw	26
 40687  016E88  5C0B               	subwf	(btemp+10)^0,w,c
 40688  016E8A  A0D8               	btfss	status,0,c
 40689  016E8C  D05C               	goto	l9821
 40690  016E8E                     u7240:
 40691                           
 40692                           ;stkvar	_b @ sp[(-4)+-4]
 40693  016E8E  0EF8               	movlw	-8
 40694  016E90  50E3               	movf	plusw1,w,c
 40695  016E92  E10A               	bnz	u7251
 40696  016E94  0EF9               	movlw	-7
 40697  016E96  50E3               	movf	plusw1,w,c
 40698  016E98  E107               	bnz	u7251
 40699  016E9A  0EFA               	movlw	-6
 40700  016E9C  50E3               	movf	plusw1,w,c
 40701  016E9E  E104               	bnz	u7251
 40702  016EA0  0EFB               	movlw	-5
 40703  016EA2  50E3               	movf	plusw1,w,c
 40704  016EA4  B4D8               	btfsc	status,2,c
 40705  016EA6  D003               	goto	u7250
 40706  016EA8                     u7251:
 40707  016EA8  6A0C               	clrf	(btemp+11)^0,c
 40708  016EAA  2A0C               	incf	(btemp+11)^0,f,c
 40709  016EAC  D001               	goto	u7268
 40710  016EAE                     u7250:
 40711  016EAE  6A0C               	clrf	(btemp+11)^0,c
 40712  016EB0                     u7268:
 40713                           
 40714                           ;stkvar	_grs @ sp[(-4)+0]
 40715  016EB0  0EFC               	movlw	-4
 40716  016EB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 40717                           
 40718                           ;stkvar	_b @ sp[(-4)+-4]
 40719  016EB8  0EF8               	movlw	-8
 40720  016EBA  6AE3               	clrf	plusw1,c
 40721  016EBC  0EF9               	movlw	-7
 40722  016EBE  6AE3               	clrf	plusw1,c
 40723  016EC0  0EFA               	movlw	-6
 40724  016EC2  6AE3               	clrf	plusw1,c
 40725  016EC4  0EFB               	movlw	-5
 40726  016EC6  6AE3               	clrf	plusw1,c
 40727                           
 40728                           ;stkvar	_aexp @ sp[(-4)+2]
 40729                           ;stkvar	_bexp @ sp[(-4)+1]
 40730  016EC8  0EFE               	movlw	-2
 40731  016ECA  006F FF8C  F001    	movff	plusw1,btemp
 40732  016ED0  0EFD               	movlw	-3
 40733  016ED2  0060  F007  FFE3   	movff	btemp,plusw1
 40734  016ED8  D042               	goto	u7300
 40735  016EDA                     l9807:
 40736                           
 40737                           ;stkvar	_grs @ sp[(-4)+0]
 40738  016EDA  0EFC               	movlw	-4
 40739  016EDC  A0E3               	btfss	plusw1,0,c
 40740  016EDE  D00D               	goto	l9811
 40741                           
 40742                           ;stkvar	_grs @ sp[(-4)+0]
 40743  016EE0  0EFC               	movlw	-4
 40744  016EE2  006F FF8C  F00C    	movff	plusw1,btemp+11
 40745  016EE8  90D8               	bcf	status,0,c
 40746  016EEA  320C               	rrcf	(btemp+11)^0,f,c
 40747  016EEC  0E01               	movlw	1
 40748  016EEE  120C               	iorwf	(btemp+11)^0,f,c
 40749                           
 40750                           ;stkvar	_grs @ sp[(-4)+0]
 40751  016EF0  0EFC               	movlw	-4
 40752  016EF2  0060  F033  FFE3   	movff	btemp+11,plusw1
 40753  016EF8  D009               	goto	l9813
 40754  016EFA                     l9811:
 40755                           
 40756                           ;stkvar	_grs @ sp[(-4)+0]
 40757  016EFA  50E1               	movf	fsr1l,w,c
 40758  016EFC  0FFC               	addlw	-4
 40759  016EFE  6ED9               	movwf	fsr2l,c
 40760  016F00  50E2               	movf	fsr1h,w,c
 40761  016F02  6EDA               	movwf	fsr2h,c
 40762  016F04  0EFF               	movlw	255
 40763  016F06  22DA               	addwfc	fsr2h,f,c
 40764  016F08  90D8               	bcf	status,0,c
 40765  016F0A  32DF               	rrcf	indf2,f,c
 40766  016F0C                     l9813:
 40767                           
 40768                           ;stkvar	_b @ sp[(-4)+-4]
 40769  016F0C  0EF8               	movlw	-8
 40770  016F0E  A0E3               	btfss	plusw1,0,c
 40771  016F10  D002               	goto	l9817
 40772                           
 40773                           ;stkvar	_grs @ sp[(-4)+0]
 40774  016F12  0EFC               	movlw	-4
 40775  016F14  8EE3               	bsf	plusw1,7,c
 40776  016F16                     l9817:
 40777  016F16  0E01               	movlw	1
 40778  016F18  6E0C               	movwf	(btemp+11)^0,c
 40779                           
 40780                           ;stkvar	_b @ sp[(-4)+-4]
 40781  016F1A  50E1               	movf	fsr1l,w,c
 40782  016F1C  0FF8               	addlw	-8
 40783  016F1E  6ED9               	movwf	fsr2l,c
 40784  016F20  50E2               	movf	fsr1h,w,c
 40785  016F22  6EDA               	movwf	fsr2h,c
 40786  016F24  0EFF               	movlw	255
 40787  016F26  22DA               	addwfc	fsr2h,f,c
 40788  016F28  280C               	incf	(btemp+11)^0,w,c
 40789  016F2A  52DE               	movf	postinc2,f,c
 40790  016F2C  D008               	goto	u7290
 40791  016F2E                     u7295:
 40792  016F2E  52DE               	movf	postinc2,f,c
 40793  016F30  90D8               	bcf	status,0,c
 40794  016F32  BEDC               	btfsc	preinc2,7,c
 40795  016F34  80D8               	bsf	status,0,c
 40796  016F36  32DD               	rrcf	postdec2,f,c
 40797  016F38  32DD               	rrcf	postdec2,f,c
 40798  016F3A  32DD               	rrcf	postdec2,f,c
 40799  016F3C  32DE               	rrcf	postinc2,f,c
 40800  016F3E                     u7290:
 40801  016F3E  2EE8               	decfsz	wreg,f,c
 40802  016F40  D7F6               	goto	u7295
 40803                           
 40804                           ;stkvar	_bexp @ sp[(-4)+1]
 40805  016F42  0EFD               	movlw	-3
 40806  016F44  2AE3               	incf	plusw1,f,c
 40807  016F46                     l9821:
 40808                           
 40809                           ;stkvar	_aexp @ sp[(-4)+2]
 40810                           ;stkvar	_bexp @ sp[(-4)+1]
 40811  016F46  50E1               	movf	fsr1l,w,c
 40812  016F48  0FFD               	addlw	-3
 40813  016F4A  6ED9               	movwf	fsr2l,c
 40814  016F4C  50E2               	movf	fsr1h,w,c
 40815  016F4E  6EDA               	movwf	fsr2h,c
 40816  016F50  0EFF               	movlw	255
 40817  016F52  22DA               	addwfc	fsr2h,f,c
 40818  016F54  0EFE               	movlw	-2
 40819  016F56  50E3               	movf	plusw1,w,c
 40820  016F58  5CDE               	subwf	postinc2,w,c
 40821  016F5A  A0D8               	btfss	status,0,c
 40822  016F5C  D7BE               	goto	l9807
 40823  016F5E                     u7300:
 40824                           
 40825                           ;stkvar	_signs @ sp[(-4)+3]
 40826  016F5E  0EFF               	movlw	-1
 40827  016F60  BCE3               	btfsc	plusw1,6,c
 40828  016F62  D066               	goto	l9849
 40829                           
 40830                           ;stkvar	_bexp @ sp[(-4)+1]
 40831  016F64  0EFD               	movlw	-3
 40832  016F66  50E3               	movf	plusw1,w,c
 40833  016F68  B4D8               	btfsc	status,2,c
 40834  016F6A  D0F2               	goto	u7400
 40835                           
 40836                           ;stkvar	_a @ sp[(-4)+-8]
 40837                           ;stkvar	_b @ sp[(-4)+-4]
 40838  016F6C  0EF8               	movlw	-8
 40839  016F6E  50E3               	movf	plusw1,w,c
 40840  016F70  6E01               	movwf	btemp^0,c
 40841  016F72  0EF4               	movlw	-12
 40842  016F74  50E3               	movf	plusw1,w,c
 40843  016F76  2601               	addwf	btemp^0,f,c
 40844  016F78  0EF8               	movlw	-8
 40845  016F7A  0060  F007  FFE3   	movff	btemp,plusw1
 40846  016F80  0EF9               	movlw	-7
 40847  016F82  50E3               	movf	plusw1,w,c
 40848  016F84  6E01               	movwf	btemp^0,c
 40849  016F86  0EF5               	movlw	-11
 40850  016F88  50E3               	movf	plusw1,w,c
 40851  016F8A  2201               	addwfc	btemp^0,f,c
 40852  016F8C  0EF9               	movlw	-7
 40853  016F8E  0060  F007  FFE3   	movff	btemp,plusw1
 40854  016F94  0EFA               	movlw	-6
 40855  016F96  50E3               	movf	plusw1,w,c
 40856  016F98  6E01               	movwf	btemp^0,c
 40857  016F9A  0EF6               	movlw	-10
 40858  016F9C  50E3               	movf	plusw1,w,c
 40859  016F9E  2201               	addwfc	btemp^0,f,c
 40860  016FA0  0EFA               	movlw	-6
 40861  016FA2  0060  F007  FFE3   	movff	btemp,plusw1
 40862  016FA8  0EFB               	movlw	-5
 40863  016FAA  50E3               	movf	plusw1,w,c
 40864  016FAC  6E01               	movwf	btemp^0,c
 40865  016FAE  0EF7               	movlw	-9
 40866  016FB0  50E3               	movf	plusw1,w,c
 40867  016FB2  2201               	addwfc	btemp^0,f,c
 40868  016FB4  0EFB               	movlw	-5
 40869  016FB6  0060  F007  FFE3   	movff	btemp,plusw1
 40870                           
 40871                           ;stkvar	_b @ sp[(-4)+-4]
 40872  016FBC  0EFB               	movlw	-5
 40873  016FBE  A0E3               	btfss	plusw1,0,c
 40874  016FC0  D101               	goto	u7440
 40875                           
 40876                           ;stkvar	_grs @ sp[(-4)+0]
 40877  016FC2  0EFC               	movlw	-4
 40878  016FC4  A0E3               	btfss	plusw1,0,c
 40879  016FC6  D00D               	goto	l9839
 40880                           
 40881                           ;stkvar	_grs @ sp[(-4)+0]
 40882  016FC8  0EFC               	movlw	-4
 40883  016FCA  006F FF8C  F00C    	movff	plusw1,btemp+11
 40884  016FD0  90D8               	bcf	status,0,c
 40885  016FD2  320C               	rrcf	(btemp+11)^0,f,c
 40886  016FD4  0E01               	movlw	1
 40887  016FD6  120C               	iorwf	(btemp+11)^0,f,c
 40888                           
 40889                           ;stkvar	_grs @ sp[(-4)+0]
 40890  016FD8  0EFC               	movlw	-4
 40891  016FDA  0060  F033  FFE3   	movff	btemp+11,plusw1
 40892  016FE0  D009               	goto	l9841
 40893  016FE2                     l9839:
 40894                           
 40895                           ;stkvar	_grs @ sp[(-4)+0]
 40896  016FE2  50E1               	movf	fsr1l,w,c
 40897  016FE4  0FFC               	addlw	-4
 40898  016FE6  6ED9               	movwf	fsr2l,c
 40899  016FE8  50E2               	movf	fsr1h,w,c
 40900  016FEA  6EDA               	movwf	fsr2h,c
 40901  016FEC  0EFF               	movlw	255
 40902  016FEE  22DA               	addwfc	fsr2h,f,c
 40903  016FF0  90D8               	bcf	status,0,c
 40904  016FF2  32DF               	rrcf	indf2,f,c
 40905  016FF4                     l9841:
 40906                           
 40907                           ;stkvar	_b @ sp[(-4)+-4]
 40908  016FF4  0EF8               	movlw	-8
 40909  016FF6  A0E3               	btfss	plusw1,0,c
 40910  016FF8  D002               	goto	l9845
 40911                           
 40912                           ;stkvar	_grs @ sp[(-4)+0]
 40913  016FFA  0EFC               	movlw	-4
 40914  016FFC  8EE3               	bsf	plusw1,7,c
 40915  016FFE                     l9845:
 40916  016FFE  0E01               	movlw	1
 40917  017000  6E0C               	movwf	(btemp+11)^0,c
 40918                           
 40919                           ;stkvar	_b @ sp[(-4)+-4]
 40920  017002  50E1               	movf	fsr1l,w,c
 40921  017004  0FF8               	addlw	-8
 40922  017006  6ED9               	movwf	fsr2l,c
 40923  017008  50E2               	movf	fsr1h,w,c
 40924  01700A  6EDA               	movwf	fsr2h,c
 40925  01700C  0EFF               	movlw	255
 40926  01700E  22DA               	addwfc	fsr2h,f,c
 40927  017010  280C               	incf	(btemp+11)^0,w,c
 40928  017012  52DE               	movf	postinc2,f,c
 40929  017014  D008               	goto	u7360
 40930  017016                     u7365:
 40931  017016  52DE               	movf	postinc2,f,c
 40932  017018  90D8               	bcf	status,0,c
 40933  01701A  BEDC               	btfsc	preinc2,7,c
 40934  01701C  80D8               	bsf	status,0,c
 40935  01701E  32DD               	rrcf	postdec2,f,c
 40936  017020  32DD               	rrcf	postdec2,f,c
 40937  017022  32DD               	rrcf	postdec2,f,c
 40938  017024  32DE               	rrcf	postinc2,f,c
 40939  017026                     u7360:
 40940  017026  2EE8               	decfsz	wreg,f,c
 40941  017028  D7F6               	goto	u7365
 40942                           
 40943                           ;stkvar	_bexp @ sp[(-4)+1]
 40944  01702A  0EFD               	movlw	-3
 40945  01702C  2AE3               	incf	plusw1,f,c
 40946  01702E  D0CA               	goto	u7440
 40947  017030                     l9849:
 40948                           
 40949                           ;stkvar	_a @ sp[(-4)+-8]
 40950                           ;stkvar	_b @ sp[(-4)+-4]
 40951  017030  50E1               	movf	fsr1l,w,c
 40952  017032  0FF8               	addlw	-8
 40953  017034  6ED9               	movwf	fsr2l,c
 40954  017036  50E2               	movf	fsr1h,w,c
 40955  017038  6EDA               	movwf	fsr2h,c
 40956  01703A  0EFF               	movlw	255
 40957  01703C  22DA               	addwfc	fsr2h,f,c
 40958  01703E  0EF4               	movlw	-12
 40959  017040  50E3               	movf	plusw1,w,c
 40960  017042  5CDE               	subwf	postinc2,w,c
 40961  017044  0EF5               	movlw	-11
 40962  017046  50E3               	movf	plusw1,w,c
 40963  017048  58DE               	subwfb	postinc2,w,c
 40964  01704A  0EF6               	movlw	-10
 40965  01704C  50E3               	movf	plusw1,w,c
 40966  01704E  58DE               	subwfb	postinc2,w,c
 40967  017050  50DE               	movf	postinc2,w,c
 40968  017052  0A80               	xorlw	128
 40969  017054  6E01               	movwf	btemp^0,c
 40970  017056  0EF7               	movlw	-9
 40971  017058  50E3               	movf	plusw1,w,c
 40972  01705A  0A80               	xorlw	128
 40973  01705C  5801               	subwfb	btemp^0,w,c
 40974  01705E  B0D8               	btfsc	status,0,c
 40975  017060  D053               	goto	l9861
 40976                           
 40977                           ;stkvar	_b @ sp[(-4)+-4]
 40978                           ;stkvar	_a @ sp[(-4)+-8]
 40979  017062  0EF4               	movlw	-12
 40980  017064  006F FF8C  F009    	movff	plusw1,btemp+8
 40981  01706A  0EF5               	movlw	-11
 40982  01706C  006F FF8C  F00A    	movff	plusw1,btemp+9
 40983  017072  0EF6               	movlw	-10
 40984  017074  006F FF8C  F00B    	movff	plusw1,btemp+10
 40985  01707A  0EF7               	movlw	-9
 40986  01707C  006F FF8C  F00C    	movff	plusw1,btemp+11
 40987  017082  0EF8               	movlw	-8
 40988  017084  50E3               	movf	plusw1,w,c
 40989  017086  5E09               	subwf	(btemp+8)^0,f,c
 40990  017088  0EF9               	movlw	-7
 40991  01708A  50E3               	movf	plusw1,w,c
 40992  01708C  5A0A               	subwfb	(btemp+9)^0,f,c
 40993  01708E  0EFA               	movlw	-6
 40994  017090  50E3               	movf	plusw1,w,c
 40995  017092  5A0B               	subwfb	(btemp+10)^0,f,c
 40996  017094  0EFB               	movlw	-5
 40997  017096  50E3               	movf	plusw1,w,c
 40998  017098  5A0C               	subwfb	(btemp+11)^0,f,c
 40999  01709A  0EFF               	movlw	255
 41000  01709C  2409               	addwf	(btemp+8)^0,w,c
 41001  01709E  6E05               	movwf	(btemp+4)^0,c
 41002  0170A0  0EFF               	movlw	255
 41003  0170A2  200A               	addwfc	(btemp+9)^0,w,c
 41004  0170A4  6E06               	movwf	(btemp+5)^0,c
 41005  0170A6  0EFF               	movlw	255
 41006  0170A8  200B               	addwfc	(btemp+10)^0,w,c
 41007  0170AA  6E07               	movwf	(btemp+6)^0,c
 41008  0170AC  0EFF               	movlw	255
 41009  0170AE  200C               	addwfc	(btemp+11)^0,w,c
 41010  0170B0  6E08               	movwf	(btemp+7)^0,c
 41011                           
 41012                           ;stkvar	_b @ sp[(-4)+-4]
 41013  0170B2  0EF8               	movlw	-8
 41014  0170B4  0060  F017  FFE3   	movff	btemp+4,plusw1
 41015  0170BA  0EF9               	movlw	-7
 41016  0170BC  0060  F01B  FFE3   	movff	btemp+5,plusw1
 41017  0170C2  0EFA               	movlw	-6
 41018  0170C4  0060  F01F  FFE3   	movff	btemp+6,plusw1
 41019  0170CA  0EFB               	movlw	-5
 41020  0170CC  0060  F023  FFE3   	movff	btemp+7,plusw1
 41021                           
 41022                           ;stkvar	_signs @ sp[(-4)+3]
 41023  0170D2  0EFF               	movlw	-1
 41024  0170D4  7EE3               	btg	plusw1,7,c
 41025                           
 41026                           ;stkvar	_grs @ sp[(-4)+0]
 41027  0170D6  0EFC               	movlw	-4
 41028  0170D8  50E3               	movf	plusw1,w,c
 41029  0170DA  0800               	sublw	0
 41030  0170DC  6E0C               	movwf	(btemp+11)^0,c
 41031                           
 41032                           ;stkvar	_grs @ sp[(-4)+0]
 41033  0170DE  0EFC               	movlw	-4
 41034  0170E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 41035                           
 41036                           ;stkvar	_grs @ sp[(-4)+0]
 41037  0170E6  0EFC               	movlw	-4
 41038  0170E8  50E3               	movf	plusw1,w,c
 41039  0170EA  A4D8               	btfss	status,2,c
 41040  0170EC  D020               	goto	l9863
 41041                           
 41042                           ;stkvar	_b @ sp[(-4)+-4]
 41043  0170EE  50E1               	movf	fsr1l,w,c
 41044  0170F0  0FF8               	addlw	-8
 41045  0170F2  6ED9               	movwf	fsr2l,c
 41046  0170F4  50E2               	movf	fsr1h,w,c
 41047  0170F6  6EDA               	movwf	fsr2h,c
 41048  0170F8  0EFF               	movlw	255
 41049  0170FA  22DA               	addwfc	fsr2h,f,c
 41050  0170FC  2ADE               	incf	postinc2,f,c
 41051  0170FE  0E00               	movlw	0
 41052  017100  22DE               	addwfc	postinc2,f,c
 41053  017102  22DE               	addwfc	postinc2,f,c
 41054  017104  22DE               	addwfc	postinc2,f,c
 41055  017106  D013               	goto	l9863
 41056  017108                     l9861:
 41057                           
 41058                           ;stkvar	_a @ sp[(-4)+-8]
 41059                           ;stkvar	_b @ sp[(-4)+-4]
 41060  017108  50E1               	movf	fsr1l,w,c
 41061  01710A  0FF8               	addlw	-8
 41062  01710C  6ED9               	movwf	fsr2l,c
 41063  01710E  50E2               	movf	fsr1h,w,c
 41064  017110  6EDA               	movwf	fsr2h,c
 41065  017112  0EFF               	movlw	255
 41066  017114  22DA               	addwfc	fsr2h,f,c
 41067  017116  0EF4               	movlw	-12
 41068  017118  50E3               	movf	plusw1,w,c
 41069  01711A  5EDE               	subwf	postinc2,f,c
 41070  01711C  0EF5               	movlw	-11
 41071  01711E  50E3               	movf	plusw1,w,c
 41072  017120  5ADE               	subwfb	postinc2,f,c
 41073  017122  0EF6               	movlw	-10
 41074  017124  50E3               	movf	plusw1,w,c
 41075  017126  5ADE               	subwfb	postinc2,f,c
 41076  017128  0EF7               	movlw	-9
 41077  01712A  50E3               	movf	plusw1,w,c
 41078  01712C  5ADE               	subwfb	postinc2,f,c
 41079  01712E                     l9863:
 41080                           
 41081                           ;stkvar	_b @ sp[(-4)+-4]
 41082  01712E  0EF8               	movlw	-8
 41083  017130  50E3               	movf	plusw1,w,c
 41084  017132  E145               	bnz	l9885
 41085  017134  0EF9               	movlw	-7
 41086  017136  50E3               	movf	plusw1,w,c
 41087  017138  E142               	bnz	l9885
 41088  01713A  0EFA               	movlw	-6
 41089  01713C  50E3               	movf	plusw1,w,c
 41090  01713E  E13F               	bnz	l9885
 41091  017140  0EFB               	movlw	-5
 41092  017142  50E3               	movf	plusw1,w,c
 41093  017144  A4D8               	btfss	status,2,c
 41094  017146  D03B               	goto	l9885
 41095                           
 41096                           ;stkvar	_grs @ sp[(-4)+0]
 41097  017148  0EFC               	movlw	-4
 41098  01714A  50E3               	movf	plusw1,w,c
 41099  01714C  A4D8               	btfss	status,2,c
 41100  01714E  D037               	goto	l9885
 41101  017150                     u7400:
 41102  017150  0E00               	movlw	0
 41103  017152  6E01               	movwf	btemp^0,c
 41104  017154  0E00               	movlw	0
 41105  017156  6E02               	movwf	(btemp+1)^0,c
 41106  017158  0E00               	movlw	0
 41107  01715A  6E03               	movwf	(btemp+2)^0,c
 41108  01715C  0E00               	movlw	0
 41109  01715E  6E04               	movwf	(btemp+3)^0,c
 41110  017160  D0C6               	goto	l3244
 41111  017162                     l9871:
 41112                           
 41113                           ;stkvar	_b @ sp[(-4)+-4]
 41114  017162  90D8               	bcf	status,0,c
 41115  017164  0EF8               	movlw	-8
 41116  017166  36E3               	rlcf	plusw1,f,c
 41117  017168  0EF9               	movlw	-7
 41118  01716A  36E3               	rlcf	plusw1,f,c
 41119  01716C  0EFA               	movlw	-6
 41120  01716E  36E3               	rlcf	plusw1,f,c
 41121  017170  0EFB               	movlw	-5
 41122  017172  36E3               	rlcf	plusw1,f,c
 41123                           
 41124                           ;stkvar	_grs @ sp[(-4)+0]
 41125  017174  0EFC               	movlw	-4
 41126  017176  AEE3               	btfss	plusw1,7,c
 41127  017178  D002               	goto	l3256
 41128                           
 41129                           ;stkvar	_b @ sp[(-4)+-4]
 41130  01717A  0EF8               	movlw	-8
 41131  01717C  80E3               	bsf	plusw1,0,c
 41132  01717E                     l3256:
 41133                           
 41134                           ;stkvar	_grs @ sp[(-4)+0]
 41135  01717E  0EFC               	movlw	-4
 41136  017180  A0E3               	btfss	plusw1,0,c
 41137  017182  D00E               	goto	l9879
 41138                           
 41139                           ;stkvar	_grs @ sp[(-4)+0]
 41140  017184  0EFC               	movlw	-4
 41141  017186  006F FF8C  F00C    	movff	plusw1,btemp+11
 41142  01718C  90D8               	bcf	status,0,c
 41143  01718E  340C               	rlcf	(btemp+11)^0,w,c
 41144  017190  6E0B               	movwf	(btemp+10)^0,c
 41145  017192  0E01               	movlw	1
 41146  017194  120B               	iorwf	(btemp+10)^0,f,c
 41147                           
 41148                           ;stkvar	_grs @ sp[(-4)+0]
 41149  017196  0EFC               	movlw	-4
 41150  017198  0060  F02F  FFE3   	movff	btemp+10,plusw1
 41151  01719E  D009               	goto	l9881
 41152  0171A0                     l9879:
 41153                           
 41154                           ;stkvar	_grs @ sp[(-4)+0]
 41155  0171A0  50E1               	movf	fsr1l,w,c
 41156  0171A2  0FFC               	addlw	-4
 41157  0171A4  6ED9               	movwf	fsr2l,c
 41158  0171A6  50E2               	movf	fsr1h,w,c
 41159  0171A8  6EDA               	movwf	fsr2h,c
 41160  0171AA  0EFF               	movlw	255
 41161  0171AC  22DA               	addwfc	fsr2h,f,c
 41162  0171AE  90D8               	bcf	status,0,c
 41163  0171B0  36DF               	rlcf	indf2,f,c
 41164  0171B2                     l9881:
 41165                           
 41166                           ;stkvar	_bexp @ sp[(-4)+1]
 41167  0171B2  0EFD               	movlw	-3
 41168  0171B4  50E3               	movf	plusw1,w,c
 41169  0171B6  B4D8               	btfsc	status,2,c
 41170  0171B8  D002               	goto	l9885
 41171                           
 41172                           ;stkvar	_bexp @ sp[(-4)+1]
 41173  0171BA  0EFD               	movlw	-3
 41174  0171BC  06E3               	decf	plusw1,f,c
 41175  0171BE                     l9885:
 41176                           
 41177                           ;stkvar	_b @ sp[(-4)+-4]
 41178  0171BE  0EFA               	movlw	-6
 41179  0171C0  AEE3               	btfss	plusw1,7,c
 41180  0171C2  D7CF               	goto	l9871
 41181  0171C4                     u7440:
 41182                           
 41183                           ;stkvar	_aexp @ sp[(-4)+2]
 41184  0171C4  0EFE               	movlw	-2
 41185  0171C6  6AE3               	clrf	plusw1,c
 41186                           
 41187                           ;stkvar	_grs @ sp[(-4)+0]
 41188  0171C8  0EFC               	movlw	-4
 41189  0171CA  AEE3               	btfss	plusw1,7,c
 41190  0171CC  D00F               	goto	l9899
 41191                           
 41192                           ;stkvar	_grs @ sp[(-4)+0]
 41193  0171CE  0EFC               	movlw	-4
 41194  0171D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 41195  0171D6  0E7F               	movlw	127
 41196  0171D8  160C               	andwf	(btemp+11)^0,f,c
 41197  0171DA  B4D8               	btfsc	status,2,c
 41198  0171DC  D004               	goto	l9895
 41199  0171DE                     u7460:
 41200                           
 41201                           ;stkvar	_aexp @ sp[(-4)+2]
 41202  0171DE  0EFE               	movlw	-2
 41203  0171E0  6AE3               	clrf	plusw1,c
 41204  0171E2  2AE3               	incf	plusw1,f,c
 41205  0171E4  D003               	goto	l9899
 41206  0171E6                     l9895:
 41207                           
 41208                           ;stkvar	_b @ sp[(-4)+-4]
 41209  0171E6  0EF8               	movlw	-8
 41210  0171E8  B0E3               	btfsc	plusw1,0,c
 41211  0171EA  D7F9               	goto	u7460
 41212  0171EC                     l9899:
 41213                           
 41214                           ;stkvar	_aexp @ sp[(-4)+2]
 41215  0171EC  0EFE               	movlw	-2
 41216  0171EE  50E3               	movf	plusw1,w,c
 41217  0171F0  B4D8               	btfsc	status,2,c
 41218  0171F2  D02B               	goto	l9911
 41219                           
 41220                           ;stkvar	_b @ sp[(-4)+-4]
 41221  0171F4  50E1               	movf	fsr1l,w,c
 41222  0171F6  0FF8               	addlw	-8
 41223  0171F8  6ED9               	movwf	fsr2l,c
 41224  0171FA  50E2               	movf	fsr1h,w,c
 41225  0171FC  6EDA               	movwf	fsr2h,c
 41226  0171FE  0EFF               	movlw	255
 41227  017200  22DA               	addwfc	fsr2h,f,c
 41228  017202  2ADE               	incf	postinc2,f,c
 41229  017204  0E00               	movlw	0
 41230  017206  22DE               	addwfc	postinc2,f,c
 41231  017208  22DE               	addwfc	postinc2,f,c
 41232  01720A  22DE               	addwfc	postinc2,f,c
 41233                           
 41234                           ;stkvar	_b @ sp[(-4)+-4]
 41235  01720C  0EFB               	movlw	-5
 41236  01720E  A0E3               	btfss	plusw1,0,c
 41237  017210  D01C               	goto	l9911
 41238  017212  0E01               	movlw	1
 41239  017214  6E0C               	movwf	(btemp+11)^0,c
 41240                           
 41241                           ;stkvar	_b @ sp[(-4)+-4]
 41242  017216  50E1               	movf	fsr1l,w,c
 41243  017218  0FF8               	addlw	-8
 41244  01721A  6ED9               	movwf	fsr2l,c
 41245  01721C  50E2               	movf	fsr1h,w,c
 41246  01721E  6EDA               	movwf	fsr2h,c
 41247  017220  0EFF               	movlw	255
 41248  017222  22DA               	addwfc	fsr2h,f,c
 41249  017224  280C               	incf	(btemp+11)^0,w,c
 41250  017226  52DE               	movf	postinc2,f,c
 41251  017228  D008               	goto	u7500
 41252  01722A                     u7505:
 41253  01722A  52DE               	movf	postinc2,f,c
 41254  01722C  90D8               	bcf	status,0,c
 41255  01722E  BEDC               	btfsc	preinc2,7,c
 41256  017230  80D8               	bsf	status,0,c
 41257  017232  32DD               	rrcf	postdec2,f,c
 41258  017234  32DD               	rrcf	postdec2,f,c
 41259  017236  32DD               	rrcf	postdec2,f,c
 41260  017238  32DE               	rrcf	postinc2,f,c
 41261  01723A                     u7500:
 41262  01723A  2EE8               	decfsz	wreg,f,c
 41263  01723C  D7F6               	goto	u7505
 41264                           
 41265                           ;stkvar	_bexp @ sp[(-4)+1]
 41266  01723E  0EFD               	movlw	-3
 41267  017240  28E3               	incf	plusw1,w,c
 41268  017242  B4D8               	btfsc	status,2,c
 41269  017244  D002               	goto	l9911
 41270                           
 41271                           ;stkvar	_bexp @ sp[(-4)+1]
 41272  017246  0EFD               	movlw	-3
 41273  017248  2AE3               	incf	plusw1,f,c
 41274  01724A                     l9911:
 41275                           
 41276                           ;stkvar	_bexp @ sp[(-4)+1]
 41277  01724A  0EFD               	movlw	-3
 41278  01724C  28E3               	incf	plusw1,w,c
 41279  01724E  B4D8               	btfsc	status,2,c
 41280  017250  D004               	goto	u7530
 41281                           
 41282                           ;stkvar	_bexp @ sp[(-4)+1]
 41283  017252  0EFD               	movlw	-3
 41284  017254  50E3               	movf	plusw1,w,c
 41285  017256  A4D8               	btfss	status,2,c
 41286  017258  D00E               	goto	l9921
 41287  01725A                     u7530:
 41288                           
 41289                           ;stkvar	_b @ sp[(-4)+-4]
 41290  01725A  0EF8               	movlw	-8
 41291  01725C  6AE3               	clrf	plusw1,c
 41292  01725E  0EF9               	movlw	-7
 41293  017260  6AE3               	clrf	plusw1,c
 41294  017262  0EFA               	movlw	-6
 41295  017264  6AE3               	clrf	plusw1,c
 41296  017266  0EFB               	movlw	-5
 41297  017268  6AE3               	clrf	plusw1,c
 41298                           
 41299                           ;stkvar	_bexp @ sp[(-4)+1]
 41300  01726A  0EFD               	movlw	-3
 41301  01726C  50E3               	movf	plusw1,w,c
 41302  01726E  A4D8               	btfss	status,2,c
 41303  017270  D002               	goto	l9921
 41304                           
 41305                           ;stkvar	_signs @ sp[(-4)+3]
 41306  017272  0EFF               	movlw	-1
 41307  017274  6AE3               	clrf	plusw1,c
 41308  017276                     l9921:
 41309                           
 41310                           ;stkvar	_bexp @ sp[(-4)+1]
 41311  017276  0EFD               	movlw	-3
 41312  017278  A0E3               	btfss	plusw1,0,c
 41313  01727A  D009               	goto	l9925
 41314                           
 41315                           ;stkvar	_b @ sp[(-4)+-4]
 41316  01727C  0EFA               	movlw	250
 41317  01727E  24E1               	addwf	fsr1l,w,c
 41318  017280  6ED9               	movwf	fsr2l,c
 41319  017282  0EFF               	movlw	255
 41320  017284  20E2               	addwfc	fsr1h,w,c
 41321  017286  6EDA               	movwf	fsr2h,c
 41322  017288  0E00               	movlw	0
 41323  01728A  8EDB               	bsf	plusw2,7,c
 41324  01728C  D008               	goto	l9927
 41325  01728E                     l9925:
 41326                           
 41327                           ;stkvar	_b @ sp[(-4)+-4]
 41328  01728E  0EFA               	movlw	250
 41329  017290  24E1               	addwf	fsr1l,w,c
 41330  017292  6ED9               	movwf	fsr2l,c
 41331  017294  0EFF               	movlw	255
 41332  017296  20E2               	addwfc	fsr1h,w,c
 41333  017298  6EDA               	movwf	fsr2h,c
 41334  01729A  0E7F               	movlw	127
 41335  01729C  16DF               	andwf	indf2,f,c
 41336  01729E                     l9927:
 41337                           
 41338                           ;stkvar	_b @ sp[(-4)+-4]
 41339  01729E  0EFB               	movlw	251
 41340  0172A0  24E1               	addwf	fsr1l,w,c
 41341  0172A2  6ED9               	movwf	fsr2l,c
 41342  0172A4  0EFF               	movlw	255
 41343  0172A6  20E2               	addwfc	fsr1h,w,c
 41344  0172A8  6EDA               	movwf	fsr2h,c
 41345                           
 41346                           ;stkvar	_bexp @ sp[(-4)+1]
 41347  0172AA  0EFD               	movlw	-3
 41348  0172AC  006F FF8C  F00C    	movff	plusw1,btemp+11
 41349  0172B2  90D8               	bcf	status,0,c
 41350  0172B4  300C               	rrcf	(btemp+11)^0,w,c
 41351  0172B6  6EDF               	movwf	indf2,c
 41352                           
 41353                           ;stkvar	_signs @ sp[(-4)+3]
 41354  0172B8  0EFF               	movlw	-1
 41355  0172BA  AEE3               	btfss	plusw1,7,c
 41356  0172BC  D008               	goto	l9933
 41357                           
 41358                           ;stkvar	_b @ sp[(-4)+-4]
 41359  0172BE  0EFB               	movlw	251
 41360  0172C0  24E1               	addwf	fsr1l,w,c
 41361  0172C2  6ED9               	movwf	fsr2l,c
 41362  0172C4  0EFF               	movlw	255
 41363  0172C6  20E2               	addwfc	fsr1h,w,c
 41364  0172C8  6EDA               	movwf	fsr2h,c
 41365  0172CA  0E00               	movlw	0
 41366  0172CC  8EDB               	bsf	plusw2,7,c
 41367  0172CE                     l9933:
 41368                           
 41369                           ;stkvar	_b @ sp[(-4)+-4]
 41370  0172CE  0EF8               	movlw	-8
 41371  0172D0  006F FF8C  F001    	movff	plusw1,btemp
 41372  0172D6  0EF9               	movlw	-7
 41373  0172D8  006F FF8C  F002    	movff	plusw1,btemp+1
 41374  0172DE  0EFA               	movlw	-6
 41375  0172E0  006F FF8C  F003    	movff	plusw1,btemp+2
 41376  0172E6  0EFB               	movlw	-5
 41377  0172E8  006F FF8C  F004    	movff	plusw1,btemp+3
 41378  0172EE                     l3244:
 41379                           
 41380                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 41381  0172EE  0EF4               	movlw	244
 41382  0172F0  26E1               	addwf	fsr1l,f,c
 41383  0172F2  0EFF               	movlw	255
 41384  0172F4  22E2               	addwfc	fsr1h,f,c
 41385  0172F6  0012               	return		;funcret
 41386  0172F8                     __end_of___fladd:
 41387                           	opt callstack 0
 41388                           
 41389 ;; *************** function ___flmul *****************
 41390 ;; Defined at:
 41391 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 41392 ;; Parameters:    Size  Location     Type
 41393 ;;  b               4  [STACK] unsigned char 
 41394 ;;  a               4  [STACK] unsigned char 
 41395 ;; Auto vars:     Size  Location     Type
 41396 ;;  prod            4  [STACK] struct .
 41397 ;;  grs             4  [STACK] unsigned long 
 41398 ;;  temp            2  [STACK] struct .
 41399 ;;  bexp            1  [STACK] unsigned char 
 41400 ;;  aexp            1  [STACK] unsigned char 
 41401 ;;  sign            1  [STACK] unsigned char 
 41402 ;; Return value:  Size  Location     Type
 41403 ;;                  4  [STACK] unsigned char 
 41404 ;; Registers used:
 41405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 41406 ;; Tracked objects:
 41407 ;;		On entry : 0/2
 41408 ;;		On exit  : 0/0
 41409 ;;		Unchanged: 0/0
 41410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 41411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 41415 ;;Total ram usage:        0 bytes
 41416 ;; Hardware stack levels used:    1
 41417 ;; Hardware stack levels required when called:   15
 41418 ;; This function calls:
 41419 ;;		Nothing
 41420 ;; This function is called by:
 41421 ;;		_conv_raw_result
 41422 ;;		_lp_filter
 41423 ;;		_calc_model_data
 41424 ;;		_calc_bsoc
 41425 ;;		_init_bsoc
 41426 ;;		_efgtoa
 41427 ;; This function uses a reentrant model
 41428 ;;
 41429                           
 41430                           	psect	text152
 41431  016312                     __ptext152:
 41432                           	opt callstack 0
 41433  016312                     ___flmul:
 41434                           	opt callstack 0
 41435                           
 41436                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 41437  016312  0E0D               	movlw	13
 41438  016314  26E1               	addwf	fsr1l,f,c
 41439  016316  0E00               	movlw	0
 41440  016318  22E2               	addwfc	fsr1h,f,c
 41441                           
 41442                           ;stkvar	_b @ sp[(-13)+-4]
 41443                           
 41444                           ;incstack = 0
 41445 ;; hardware stack exceeded
 41446  01631A  0EF2               	movlw	242
 41447  01631C  24E1               	addwf	fsr1l,w,c
 41448  01631E  6ED9               	movwf	fsr2l,c
 41449  016320  0EFF               	movlw	255
 41450  016322  20E2               	addwfc	fsr1h,w,c
 41451  016324  6EDA               	movwf	fsr2h,c
 41452  016326  50DF               	movf	indf2,w,c
 41453  016328  6E0C               	movwf	(btemp+11)^0,c
 41454  01632A  0E80               	movlw	128
 41455  01632C  160C               	andwf	(btemp+11)^0,f,c
 41456                           
 41457                           ;stkvar	_sign @ sp[(-13)+12]
 41458  01632E  0EFF               	movlw	-1
 41459  016330  0060  F033  FFE3   	movff	btemp+11,plusw1
 41460                           
 41461                           ;stkvar	_b @ sp[(-13)+-4]
 41462  016336  0EF2               	movlw	242
 41463  016338  24E1               	addwf	fsr1l,w,c
 41464  01633A  6ED9               	movwf	fsr2l,c
 41465  01633C  0EFF               	movlw	255
 41466  01633E  20E2               	addwfc	fsr1h,w,c
 41467  016340  6EDA               	movwf	fsr2h,c
 41468  016342  50DF               	movf	indf2,w,c
 41469  016344  6E0C               	movwf	(btemp+11)^0,c
 41470  016346  90D8               	bcf	status,0,c
 41471  016348  340C               	rlcf	(btemp+11)^0,w,c
 41472  01634A  6E0B               	movwf	(btemp+10)^0,c
 41473                           
 41474                           ;stkvar	_bexp @ sp[(-13)+10]
 41475  01634C  0EFD               	movlw	-3
 41476  01634E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 41477                           
 41478                           ;stkvar	_b @ sp[(-13)+-4]
 41479  016354  0EF1               	movlw	241
 41480  016356  24E1               	addwf	fsr1l,w,c
 41481  016358  6ED9               	movwf	fsr2l,c
 41482  01635A  0EFF               	movlw	255
 41483  01635C  20E2               	addwfc	fsr1h,w,c
 41484  01635E  6EDA               	movwf	fsr2h,c
 41485  016360  AEDF               	btfss	indf2,7,c
 41486  016362  D002               	goto	l10397
 41487                           
 41488                           ;stkvar	_bexp @ sp[(-13)+10]
 41489  016364  0EFD               	movlw	-3
 41490  016366  80E3               	bsf	plusw1,0,c
 41491  016368                     l10397:
 41492                           
 41493                           ;stkvar	_bexp @ sp[(-13)+10]
 41494  016368  0EFD               	movlw	-3
 41495  01636A  50E3               	movf	plusw1,w,c
 41496  01636C  B4D8               	btfsc	status,2,c
 41497  01636E  D01F               	goto	l10405
 41498                           
 41499                           ;stkvar	_bexp @ sp[(-13)+10]
 41500  016370  0EFD               	movlw	-3
 41501  016372  28E3               	incf	plusw1,w,c
 41502  016374  A4D8               	btfss	status,2,c
 41503  016376  D018               	goto	l10403
 41504  016378  0E00               	movlw	0
 41505  01637A  6E09               	movwf	(btemp+8)^0,c
 41506  01637C  0E00               	movlw	0
 41507  01637E  6E0A               	movwf	(btemp+9)^0,c
 41508  016380  0E00               	movlw	0
 41509  016382  6E0B               	movwf	(btemp+10)^0,c
 41510  016384  0E00               	movlw	0
 41511  016386  6E0C               	movwf	(btemp+11)^0,c
 41512                           
 41513                           ;stkvar	_b @ sp[(-13)+-4]
 41514  016388  0EEF               	movlw	-17
 41515  01638A  0060  F027  FFE3   	movff	btemp+8,plusw1
 41516  016390  0EF0               	movlw	-16
 41517  016392  0060  F02B  FFE3   	movff	btemp+9,plusw1
 41518  016398  0EF1               	movlw	-15
 41519  01639A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 41520  0163A0  0EF2               	movlw	-14
 41521  0163A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 41522  0163A8                     l10403:
 41523                           
 41524                           ;stkvar	_b @ sp[(-13)+-4]
 41525  0163A8  0EF1               	movlw	-15
 41526  0163AA  8EE3               	bsf	plusw1,7,c
 41527  0163AC  D018               	goto	l10407
 41528  0163AE                     l10405:
 41529  0163AE  0E00               	movlw	0
 41530  0163B0  6E09               	movwf	(btemp+8)^0,c
 41531  0163B2  0E00               	movlw	0
 41532  0163B4  6E0A               	movwf	(btemp+9)^0,c
 41533  0163B6  0E00               	movlw	0
 41534  0163B8  6E0B               	movwf	(btemp+10)^0,c
 41535  0163BA  0E00               	movlw	0
 41536  0163BC  6E0C               	movwf	(btemp+11)^0,c
 41537                           
 41538                           ;stkvar	_b @ sp[(-13)+-4]
 41539  0163BE  0EEF               	movlw	-17
 41540  0163C0  0060  F027  FFE3   	movff	btemp+8,plusw1
 41541  0163C6  0EF0               	movlw	-16
 41542  0163C8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 41543  0163CE  0EF1               	movlw	-15
 41544  0163D0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 41545  0163D6  0EF2               	movlw	-14
 41546  0163D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 41547  0163DE                     l10407:
 41548                           
 41549                           ;stkvar	_a @ sp[(-13)+-8]
 41550  0163DE  0EEE               	movlw	238
 41551  0163E0  24E1               	addwf	fsr1l,w,c
 41552  0163E2  6ED9               	movwf	fsr2l,c
 41553  0163E4  0EFF               	movlw	255
 41554  0163E6  20E2               	addwfc	fsr1h,w,c
 41555  0163E8  6EDA               	movwf	fsr2h,c
 41556  0163EA  50DF               	movf	indf2,w,c
 41557  0163EC  6E0C               	movwf	(btemp+11)^0,c
 41558  0163EE  0E80               	movlw	128
 41559  0163F0  160C               	andwf	(btemp+11)^0,f,c
 41560                           
 41561                           ;stkvar	_sign @ sp[(-13)+12]
 41562  0163F2  50E1               	movf	fsr1l,w,c
 41563  0163F4  0FFF               	addlw	-1
 41564  0163F6  6ED9               	movwf	fsr2l,c
 41565  0163F8  50E2               	movf	fsr1h,w,c
 41566  0163FA  6EDA               	movwf	fsr2h,c
 41567  0163FC  0EFF               	movlw	255
 41568  0163FE  22DA               	addwfc	fsr2h,f,c
 41569  016400  500C               	movf	(btemp+11)^0,w,c
 41570  016402  1ADF               	xorwf	indf2,f,c
 41571                           
 41572                           ;stkvar	_a @ sp[(-13)+-8]
 41573  016404  0EEE               	movlw	238
 41574  016406  24E1               	addwf	fsr1l,w,c
 41575  016408  6ED9               	movwf	fsr2l,c
 41576  01640A  0EFF               	movlw	255
 41577  01640C  20E2               	addwfc	fsr1h,w,c
 41578  01640E  6EDA               	movwf	fsr2h,c
 41579  016410  50DF               	movf	indf2,w,c
 41580  016412  6E0C               	movwf	(btemp+11)^0,c
 41581  016414  90D8               	bcf	status,0,c
 41582  016416  340C               	rlcf	(btemp+11)^0,w,c
 41583  016418  6E0B               	movwf	(btemp+10)^0,c
 41584                           
 41585                           ;stkvar	_aexp @ sp[(-13)+11]
 41586  01641A  0EFE               	movlw	-2
 41587  01641C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 41588                           
 41589                           ;stkvar	_a @ sp[(-13)+-8]
 41590  016422  0EED               	movlw	237
 41591  016424  24E1               	addwf	fsr1l,w,c
 41592  016426  6ED9               	movwf	fsr2l,c
 41593  016428  0EFF               	movlw	255
 41594  01642A  20E2               	addwfc	fsr1h,w,c
 41595  01642C  6EDA               	movwf	fsr2h,c
 41596  01642E  AEDF               	btfss	indf2,7,c
 41597  016430  D002               	goto	l10415
 41598                           
 41599                           ;stkvar	_aexp @ sp[(-13)+11]
 41600  016432  0EFE               	movlw	-2
 41601  016434  80E3               	bsf	plusw1,0,c
 41602  016436                     l10415:
 41603                           
 41604                           ;stkvar	_aexp @ sp[(-13)+11]
 41605  016436  0EFE               	movlw	-2
 41606  016438  50E3               	movf	plusw1,w,c
 41607  01643A  B4D8               	btfsc	status,2,c
 41608  01643C  D01F               	goto	l10423
 41609                           
 41610                           ;stkvar	_aexp @ sp[(-13)+11]
 41611  01643E  0EFE               	movlw	-2
 41612  016440  28E3               	incf	plusw1,w,c
 41613  016442  A4D8               	btfss	status,2,c
 41614  016444  D018               	goto	l10421
 41615  016446  0E00               	movlw	0
 41616  016448  6E09               	movwf	(btemp+8)^0,c
 41617  01644A  0E00               	movlw	0
 41618  01644C  6E0A               	movwf	(btemp+9)^0,c
 41619  01644E  0E00               	movlw	0
 41620  016450  6E0B               	movwf	(btemp+10)^0,c
 41621  016452  0E00               	movlw	0
 41622  016454  6E0C               	movwf	(btemp+11)^0,c
 41623                           
 41624                           ;stkvar	_a @ sp[(-13)+-8]
 41625  016456  0EEB               	movlw	-21
 41626  016458  0060  F027  FFE3   	movff	btemp+8,plusw1
 41627  01645E  0EEC               	movlw	-20
 41628  016460  0060  F02B  FFE3   	movff	btemp+9,plusw1
 41629  016466  0EED               	movlw	-19
 41630  016468  0060  F02F  FFE3   	movff	btemp+10,plusw1
 41631  01646E  0EEE               	movlw	-18
 41632  016470  0060  F033  FFE3   	movff	btemp+11,plusw1
 41633  016476                     l10421:
 41634                           
 41635                           ;stkvar	_a @ sp[(-13)+-8]
 41636  016476  0EED               	movlw	-19
 41637  016478  8EE3               	bsf	plusw1,7,c
 41638  01647A  D018               	goto	l10425
 41639  01647C                     l10423:
 41640  01647C  0E00               	movlw	0
 41641  01647E  6E09               	movwf	(btemp+8)^0,c
 41642  016480  0E00               	movlw	0
 41643  016482  6E0A               	movwf	(btemp+9)^0,c
 41644  016484  0E00               	movlw	0
 41645  016486  6E0B               	movwf	(btemp+10)^0,c
 41646  016488  0E00               	movlw	0
 41647  01648A  6E0C               	movwf	(btemp+11)^0,c
 41648                           
 41649                           ;stkvar	_a @ sp[(-13)+-8]
 41650  01648C  0EEB               	movlw	-21
 41651  01648E  0060  F027  FFE3   	movff	btemp+8,plusw1
 41652  016494  0EEC               	movlw	-20
 41653  016496  0060  F02B  FFE3   	movff	btemp+9,plusw1
 41654  01649C  0EED               	movlw	-19
 41655  01649E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 41656  0164A4  0EEE               	movlw	-18
 41657  0164A6  0060  F033  FFE3   	movff	btemp+11,plusw1
 41658  0164AC                     l10425:
 41659                           
 41660                           ;stkvar	_aexp @ sp[(-13)+11]
 41661  0164AC  0EFE               	movlw	-2
 41662  0164AE  50E3               	movf	plusw1,w,c
 41663  0164B0  B4D8               	btfsc	status,2,c
 41664  0164B2  D004               	goto	u8590
 41665                           
 41666                           ;stkvar	_bexp @ sp[(-13)+10]
 41667  0164B4  0EFD               	movlw	-3
 41668  0164B6  50E3               	movf	plusw1,w,c
 41669  0164B8  A4D8               	btfss	status,2,c
 41670  0164BA  D009               	goto	l10433
 41671  0164BC                     u8590:
 41672  0164BC  0E00               	movlw	0
 41673  0164BE  6E01               	movwf	btemp^0,c
 41674  0164C0  0E00               	movlw	0
 41675  0164C2  6E02               	movwf	(btemp+1)^0,c
 41676  0164C4  0E00               	movlw	0
 41677  0164C6  6E03               	movwf	(btemp+2)^0,c
 41678  0164C8  0E00               	movlw	0
 41679  0164CA  6E04               	movwf	(btemp+3)^0,c
 41680  0164CC  D332               	goto	l3325
 41681  0164CE                     l10433:
 41682                           
 41683                           ;stkvar	_b @ sp[(-13)+-4]
 41684  0164CE  0EEF               	movlw	-17
 41685  0164D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 41686                           
 41687                           ;stkvar	_a @ sp[(-13)+-8]
 41688  0164D6  0EED               	movlw	237
 41689  0164D8  24E1               	addwf	fsr1l,w,c
 41690  0164DA  6ED9               	movwf	fsr2l,c
 41691  0164DC  0EFF               	movlw	255
 41692  0164DE  20E2               	addwfc	fsr1h,w,c
 41693  0164E0  6EDA               	movwf	fsr2h,c
 41694  0164E2  50DF               	movf	indf2,w,c
 41695  0164E4  020C               	mulwf	(btemp+11)^0,c
 41696                           
 41697                           ;stkvar	_temp @ sp[(-13)+8]
 41698  0164E6  0EFB               	movlw	-5
 41699  0164E8  006F FFCF FFE3     	movff	prodl,plusw1
 41700  0164EE  0EFC               	movlw	-4
 41701  0164F0  006F FFD3 FFE3     	movff	prodh,plusw1
 41702                           
 41703                           ;stkvar	_temp @ sp[(-13)+8]
 41704  0164F6  0EFB               	movlw	-5
 41705  0164F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 41706  0164FE  0060  F030  F005   	movff	btemp+11,btemp+4
 41707  016504  6A06               	clrf	(btemp+5)^0,c
 41708  016506  6A07               	clrf	(btemp+6)^0,c
 41709  016508  6A08               	clrf	(btemp+7)^0,c
 41710                           
 41711                           ;stkvar	_grs @ sp[(-13)+4]
 41712  01650A  0EF7               	movlw	-9
 41713  01650C  0060  F017  FFE3   	movff	btemp+4,plusw1
 41714  016512  0EF8               	movlw	-8
 41715  016514  0060  F01B  FFE3   	movff	btemp+5,plusw1
 41716  01651A  0EF9               	movlw	-7
 41717  01651C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 41718  016522  0EFA               	movlw	-6
 41719  016524  0060  F023  FFE3   	movff	btemp+7,plusw1
 41720                           
 41721                           ;stkvar	_temp @ sp[(-13)+8]
 41722  01652A  0EFC               	movlw	252
 41723  01652C  24E1               	addwf	fsr1l,w,c
 41724  01652E  6ED9               	movwf	fsr2l,c
 41725  016530  0EFF               	movlw	255
 41726  016532  20E2               	addwfc	fsr1h,w,c
 41727  016534  6EDA               	movwf	fsr2h,c
 41728  016536  50DF               	movf	indf2,w,c
 41729  016538  6E0C               	movwf	(btemp+11)^0,c
 41730  01653A  0060  F030  F005   	movff	btemp+11,btemp+4
 41731  016540  6A06               	clrf	(btemp+5)^0,c
 41732  016542  6A07               	clrf	(btemp+6)^0,c
 41733  016544  6A08               	clrf	(btemp+7)^0,c
 41734                           
 41735                           ;stkvar	_prod @ sp[(-13)+0]
 41736  016546  0EF3               	movlw	-13
 41737  016548  0060  F017  FFE3   	movff	btemp+4,plusw1
 41738  01654E  0EF4               	movlw	-12
 41739  016550  0060  F01B  FFE3   	movff	btemp+5,plusw1
 41740  016556  0EF5               	movlw	-11
 41741  016558  0060  F01F  FFE3   	movff	btemp+6,plusw1
 41742  01655E  0EF6               	movlw	-10
 41743  016560  0060  F023  FFE3   	movff	btemp+7,plusw1
 41744                           
 41745                           ;stkvar	_b @ sp[(-13)+-4]
 41746  016566  0EF0               	movlw	240
 41747  016568  24E1               	addwf	fsr1l,w,c
 41748  01656A  6ED9               	movwf	fsr2l,c
 41749  01656C  0EFF               	movlw	255
 41750  01656E  20E2               	addwfc	fsr1h,w,c
 41751  016570  6EDA               	movwf	fsr2h,c
 41752  016572  50DF               	movf	indf2,w,c
 41753  016574  6E0C               	movwf	(btemp+11)^0,c
 41754                           
 41755                           ;stkvar	_a @ sp[(-13)+-8]
 41756  016576  0EEC               	movlw	236
 41757  016578  24E1               	addwf	fsr1l,w,c
 41758  01657A  6ED9               	movwf	fsr2l,c
 41759  01657C  0EFF               	movlw	255
 41760  01657E  20E2               	addwfc	fsr1h,w,c
 41761  016580  6EDA               	movwf	fsr2h,c
 41762  016582  50DF               	movf	indf2,w,c
 41763  016584  020C               	mulwf	(btemp+11)^0,c
 41764                           
 41765                           ;stkvar	_temp @ sp[(-13)+8]
 41766  016586  0EFB               	movlw	-5
 41767  016588  006F FFCF FFE3     	movff	prodl,plusw1
 41768  01658E  0EFC               	movlw	-4
 41769  016590  006F FFD3 FFE3     	movff	prodh,plusw1
 41770                           
 41771                           ;stkvar	_grs @ sp[(-13)+4]
 41772  016596  50E1               	movf	fsr1l,w,c
 41773  016598  0FF7               	addlw	-9
 41774  01659A  6ED9               	movwf	fsr2l,c
 41775  01659C  50E2               	movf	fsr1h,w,c
 41776  01659E  6EDA               	movwf	fsr2h,c
 41777  0165A0  0EFF               	movlw	255
 41778  0165A2  22DA               	addwfc	fsr2h,f,c
 41779                           
 41780                           ;stkvar	_temp @ sp[(-13)+8]
 41781  0165A4  0EFB               	movlw	-5
 41782  0165A6  50E3               	movf	plusw1,w,c
 41783  0165A8  26DE               	addwf	postinc2,f,c
 41784  0165AA  0E00               	movlw	0
 41785  0165AC  22DE               	addwfc	postinc2,f,c
 41786  0165AE  22DE               	addwfc	postinc2,f,c
 41787  0165B0  22DE               	addwfc	postinc2,f,c
 41788                           
 41789                           ;stkvar	_prod @ sp[(-13)+0]
 41790  0165B2  50E1               	movf	fsr1l,w,c
 41791  0165B4  0FF3               	addlw	-13
 41792  0165B6  6ED9               	movwf	fsr2l,c
 41793  0165B8  50E2               	movf	fsr1h,w,c
 41794  0165BA  6EDA               	movwf	fsr2h,c
 41795  0165BC  0EFF               	movlw	255
 41796  0165BE  22DA               	addwfc	fsr2h,f,c
 41797                           
 41798                           ;stkvar	_temp @ sp[(-13)+8]
 41799  0165C0  0EFC               	movlw	252
 41800  0165C2  24E1               	addwf	fsr1l,w,c
 41801  0165C4  6EE9               	movwf	fsr0l,c
 41802  0165C6  0EFF               	movlw	255
 41803  0165C8  20E2               	addwfc	fsr1h,w,c
 41804  0165CA  6EEA               	movwf	fsr0h,c
 41805  0165CC  50EF               	movf	indf0,w,c
 41806  0165CE  26DE               	addwf	postinc2,f,c
 41807  0165D0  0E00               	movlw	0
 41808  0165D2  22DE               	addwfc	postinc2,f,c
 41809  0165D4  22DE               	addwfc	postinc2,f,c
 41810  0165D6  22DE               	addwfc	postinc2,f,c
 41811                           
 41812                           ;stkvar	_b @ sp[(-13)+-4]
 41813  0165D8  0EF1               	movlw	241
 41814  0165DA  24E1               	addwf	fsr1l,w,c
 41815  0165DC  6ED9               	movwf	fsr2l,c
 41816  0165DE  0EFF               	movlw	255
 41817  0165E0  20E2               	addwfc	fsr1h,w,c
 41818  0165E2  6EDA               	movwf	fsr2h,c
 41819  0165E4  50DF               	movf	indf2,w,c
 41820  0165E6  6E0C               	movwf	(btemp+11)^0,c
 41821                           
 41822                           ;stkvar	_a @ sp[(-13)+-8]
 41823  0165E8  0EEB               	movlw	-21
 41824  0165EA  50E3               	movf	plusw1,w,c
 41825  0165EC  020C               	mulwf	(btemp+11)^0,c
 41826                           
 41827                           ;stkvar	_temp @ sp[(-13)+8]
 41828  0165EE  0EFB               	movlw	-5
 41829  0165F0  006F FFCF FFE3     	movff	prodl,plusw1
 41830  0165F6  0EFC               	movlw	-4
 41831  0165F8  006F FFD3 FFE3     	movff	prodh,plusw1
 41832                           
 41833                           ;stkvar	_grs @ sp[(-13)+4]
 41834  0165FE  50E1               	movf	fsr1l,w,c
 41835  016600  0FF7               	addlw	-9
 41836  016602  6ED9               	movwf	fsr2l,c
 41837  016604  50E2               	movf	fsr1h,w,c
 41838  016606  6EDA               	movwf	fsr2h,c
 41839  016608  0EFF               	movlw	255
 41840  01660A  22DA               	addwfc	fsr2h,f,c
 41841                           
 41842                           ;stkvar	_temp @ sp[(-13)+8]
 41843  01660C  0EFB               	movlw	-5
 41844  01660E  50E3               	movf	plusw1,w,c
 41845  016610  26DE               	addwf	postinc2,f,c
 41846  016612  0E00               	movlw	0
 41847  016614  22DE               	addwfc	postinc2,f,c
 41848  016616  22DE               	addwfc	postinc2,f,c
 41849  016618  22DE               	addwfc	postinc2,f,c
 41850                           
 41851                           ;stkvar	_prod @ sp[(-13)+0]
 41852  01661A  50E1               	movf	fsr1l,w,c
 41853  01661C  0FF3               	addlw	-13
 41854  01661E  6ED9               	movwf	fsr2l,c
 41855  016620  50E2               	movf	fsr1h,w,c
 41856  016622  6EDA               	movwf	fsr2h,c
 41857  016624  0EFF               	movlw	255
 41858  016626  22DA               	addwfc	fsr2h,f,c
 41859                           
 41860                           ;stkvar	_temp @ sp[(-13)+8]
 41861  016628  0EFC               	movlw	252
 41862  01662A  24E1               	addwf	fsr1l,w,c
 41863  01662C  6EE9               	movwf	fsr0l,c
 41864  01662E  0EFF               	movlw	255
 41865  016630  20E2               	addwfc	fsr1h,w,c
 41866  016632  6EEA               	movwf	fsr0h,c
 41867  016634  50EF               	movf	indf0,w,c
 41868  016636  26DE               	addwf	postinc2,f,c
 41869  016638  0E00               	movlw	0
 41870  01663A  22DE               	addwfc	postinc2,f,c
 41871  01663C  22DE               	addwfc	postinc2,f,c
 41872  01663E  22DE               	addwfc	postinc2,f,c
 41873                           
 41874                           ;stkvar	_grs @ sp[(-13)+4]
 41875  016640  50E1               	movf	fsr1l,w,c
 41876  016642  0FF7               	addlw	-9
 41877  016644  6ED9               	movwf	fsr2l,c
 41878  016646  50E2               	movf	fsr1h,w,c
 41879  016648  6EDA               	movwf	fsr2h,c
 41880  01664A  0EFF               	movlw	255
 41881  01664C  22DA               	addwfc	fsr2h,f,c
 41882  01664E  0E08               	movlw	8
 41883  016650                     u8605:
 41884  016650  90D8               	bcf	status,0,c
 41885  016652  36DE               	rlcf	postinc2,f,c
 41886  016654  36DE               	rlcf	postinc2,f,c
 41887  016656  36DE               	rlcf	postinc2,f,c
 41888  016658  36DD               	rlcf	postdec2,f,c
 41889  01665A  52DD               	movf	postdec2,f,c
 41890  01665C  52DD               	movf	postdec2,f,c
 41891  01665E  2EE8               	decfsz	wreg,f,c
 41892  016660  D7F7               	goto	u8605
 41893                           
 41894                           ;stkvar	_b @ sp[(-13)+-4]
 41895  016662  0EF0               	movlw	240
 41896  016664  24E1               	addwf	fsr1l,w,c
 41897  016666  6ED9               	movwf	fsr2l,c
 41898  016668  0EFF               	movlw	255
 41899  01666A  20E2               	addwfc	fsr1h,w,c
 41900  01666C  6EDA               	movwf	fsr2h,c
 41901  01666E  50DF               	movf	indf2,w,c
 41902  016670  6E0C               	movwf	(btemp+11)^0,c
 41903                           
 41904                           ;stkvar	_a @ sp[(-13)+-8]
 41905  016672  0EEB               	movlw	-21
 41906  016674  50E3               	movf	plusw1,w,c
 41907  016676  020C               	mulwf	(btemp+11)^0,c
 41908                           
 41909                           ;stkvar	_temp @ sp[(-13)+8]
 41910  016678  0EFB               	movlw	-5
 41911  01667A  006F FFCF FFE3     	movff	prodl,plusw1
 41912  016680  0EFC               	movlw	-4
 41913  016682  006F FFD3 FFE3     	movff	prodh,plusw1
 41914                           
 41915                           ;stkvar	_temp @ sp[(-13)+8]
 41916  016688  0EFB               	movlw	-5
 41917  01668A  006F FF8C  F00B    	movff	plusw1,btemp+10
 41918  016690  0EFC               	movlw	-4
 41919  016692  006F FF8C  F00C    	movff	plusw1,btemp+11
 41920                           
 41921                           ;stkvar	_grs @ sp[(-13)+4]
 41922  016698  50E1               	movf	fsr1l,w,c
 41923  01669A  0FF7               	addlw	-9
 41924  01669C  6ED9               	movwf	fsr2l,c
 41925  01669E  50E2               	movf	fsr1h,w,c
 41926  0166A0  6EDA               	movwf	fsr2h,c
 41927  0166A2  0EFF               	movlw	255
 41928  0166A4  22DA               	addwfc	fsr2h,f,c
 41929  0166A6  500B               	movf	(btemp+10)^0,w,c
 41930  0166A8  26DE               	addwf	postinc2,f,c
 41931  0166AA  500C               	movf	(btemp+11)^0,w,c
 41932  0166AC  22DE               	addwfc	postinc2,f,c
 41933  0166AE  0E00               	movlw	0
 41934  0166B0  22DE               	addwfc	postinc2,f,c
 41935  0166B2  22DE               	addwfc	postinc2,f,c
 41936                           
 41937                           ;stkvar	_b @ sp[(-13)+-4]
 41938  0166B4  0EEF               	movlw	-17
 41939  0166B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 41940                           
 41941                           ;stkvar	_a @ sp[(-13)+-8]
 41942  0166BC  0EEC               	movlw	236
 41943  0166BE  24E1               	addwf	fsr1l,w,c
 41944  0166C0  6ED9               	movwf	fsr2l,c
 41945  0166C2  0EFF               	movlw	255
 41946  0166C4  20E2               	addwfc	fsr1h,w,c
 41947  0166C6  6EDA               	movwf	fsr2h,c
 41948  0166C8  50DF               	movf	indf2,w,c
 41949  0166CA  020C               	mulwf	(btemp+11)^0,c
 41950                           
 41951                           ;stkvar	_temp @ sp[(-13)+8]
 41952  0166CC  0EFB               	movlw	-5
 41953  0166CE  006F FFCF FFE3     	movff	prodl,plusw1
 41954  0166D4  0EFC               	movlw	-4
 41955  0166D6  006F FFD3 FFE3     	movff	prodh,plusw1
 41956                           
 41957                           ;stkvar	_temp @ sp[(-13)+8]
 41958  0166DC  0EFB               	movlw	-5
 41959  0166DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 41960  0166E4  0EFC               	movlw	-4
 41961  0166E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 41962                           
 41963                           ;stkvar	_grs @ sp[(-13)+4]
 41964  0166EC  50E1               	movf	fsr1l,w,c
 41965  0166EE  0FF7               	addlw	-9
 41966  0166F0  6ED9               	movwf	fsr2l,c
 41967  0166F2  50E2               	movf	fsr1h,w,c
 41968  0166F4  6EDA               	movwf	fsr2h,c
 41969  0166F6  0EFF               	movlw	255
 41970  0166F8  22DA               	addwfc	fsr2h,f,c
 41971  0166FA  500B               	movf	(btemp+10)^0,w,c
 41972  0166FC  26DE               	addwf	postinc2,f,c
 41973  0166FE  500C               	movf	(btemp+11)^0,w,c
 41974  016700  22DE               	addwfc	postinc2,f,c
 41975  016702  0E00               	movlw	0
 41976  016704  22DE               	addwfc	postinc2,f,c
 41977  016706  22DE               	addwfc	postinc2,f,c
 41978                           
 41979                           ;stkvar	_grs @ sp[(-13)+4]
 41980  016708  50E1               	movf	fsr1l,w,c
 41981  01670A  0FF7               	addlw	-9
 41982  01670C  6ED9               	movwf	fsr2l,c
 41983  01670E  50E2               	movf	fsr1h,w,c
 41984  016710  6EDA               	movwf	fsr2h,c
 41985  016712  0EFF               	movlw	255
 41986  016714  22DA               	addwfc	fsr2h,f,c
 41987  016716  0E08               	movlw	8
 41988  016718                     u8615:
 41989  016718  90D8               	bcf	status,0,c
 41990  01671A  36DE               	rlcf	postinc2,f,c
 41991  01671C  36DE               	rlcf	postinc2,f,c
 41992  01671E  36DE               	rlcf	postinc2,f,c
 41993  016720  36DD               	rlcf	postdec2,f,c
 41994  016722  52DD               	movf	postdec2,f,c
 41995  016724  52DD               	movf	postdec2,f,c
 41996  016726  2EE8               	decfsz	wreg,f,c
 41997  016728  D7F7               	goto	u8615
 41998                           
 41999                           ;stkvar	_b @ sp[(-13)+-4]
 42000  01672A  0EEF               	movlw	-17
 42001  01672C  006F FF8C  F00C    	movff	plusw1,btemp+11
 42002                           
 42003                           ;stkvar	_a @ sp[(-13)+-8]
 42004  016732  0EEB               	movlw	-21
 42005  016734  50E3               	movf	plusw1,w,c
 42006  016736  020C               	mulwf	(btemp+11)^0,c
 42007                           
 42008                           ;stkvar	_temp @ sp[(-13)+8]
 42009  016738  0EFB               	movlw	-5
 42010  01673A  006F FFCF FFE3     	movff	prodl,plusw1
 42011  016740  0EFC               	movlw	-4
 42012  016742  006F FFD3 FFE3     	movff	prodh,plusw1
 42013                           
 42014                           ;stkvar	_temp @ sp[(-13)+8]
 42015  016748  0EFB               	movlw	-5
 42016  01674A  006F FF8C  F00B    	movff	plusw1,btemp+10
 42017  016750  0EFC               	movlw	-4
 42018  016752  006F FF8C  F00C    	movff	plusw1,btemp+11
 42019                           
 42020                           ;stkvar	_grs @ sp[(-13)+4]
 42021  016758  50E1               	movf	fsr1l,w,c
 42022  01675A  0FF7               	addlw	-9
 42023  01675C  6ED9               	movwf	fsr2l,c
 42024  01675E  50E2               	movf	fsr1h,w,c
 42025  016760  6EDA               	movwf	fsr2h,c
 42026  016762  0EFF               	movlw	255
 42027  016764  22DA               	addwfc	fsr2h,f,c
 42028  016766  500B               	movf	(btemp+10)^0,w,c
 42029  016768  26DE               	addwf	postinc2,f,c
 42030  01676A  500C               	movf	(btemp+11)^0,w,c
 42031  01676C  22DE               	addwfc	postinc2,f,c
 42032  01676E  0E00               	movlw	0
 42033  016770  22DE               	addwfc	postinc2,f,c
 42034  016772  22DE               	addwfc	postinc2,f,c
 42035                           
 42036                           ;stkvar	_b @ sp[(-13)+-4]
 42037  016774  0EF0               	movlw	240
 42038  016776  24E1               	addwf	fsr1l,w,c
 42039  016778  6ED9               	movwf	fsr2l,c
 42040  01677A  0EFF               	movlw	255
 42041  01677C  20E2               	addwfc	fsr1h,w,c
 42042  01677E  6EDA               	movwf	fsr2h,c
 42043  016780  50DF               	movf	indf2,w,c
 42044  016782  6E0C               	movwf	(btemp+11)^0,c
 42045                           
 42046                           ;stkvar	_a @ sp[(-13)+-8]
 42047  016784  0EED               	movlw	237
 42048  016786  24E1               	addwf	fsr1l,w,c
 42049  016788  6ED9               	movwf	fsr2l,c
 42050  01678A  0EFF               	movlw	255
 42051  01678C  20E2               	addwfc	fsr1h,w,c
 42052  01678E  6EDA               	movwf	fsr2h,c
 42053  016790  50DF               	movf	indf2,w,c
 42054  016792  020C               	mulwf	(btemp+11)^0,c
 42055                           
 42056                           ;stkvar	_temp @ sp[(-13)+8]
 42057  016794  0EFB               	movlw	-5
 42058  016796  006F FFCF FFE3     	movff	prodl,plusw1
 42059  01679C  0EFC               	movlw	-4
 42060  01679E  006F FFD3 FFE3     	movff	prodh,plusw1
 42061                           
 42062                           ;stkvar	_temp @ sp[(-13)+8]
 42063  0167A4  0EFB               	movlw	-5
 42064  0167A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 42065  0167AC  0EFC               	movlw	-4
 42066  0167AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 42067                           
 42068                           ;stkvar	_prod @ sp[(-13)+0]
 42069  0167B4  50E1               	movf	fsr1l,w,c
 42070  0167B6  0FF3               	addlw	-13
 42071  0167B8  6ED9               	movwf	fsr2l,c
 42072  0167BA  50E2               	movf	fsr1h,w,c
 42073  0167BC  6EDA               	movwf	fsr2h,c
 42074  0167BE  0EFF               	movlw	255
 42075  0167C0  22DA               	addwfc	fsr2h,f,c
 42076  0167C2  500B               	movf	(btemp+10)^0,w,c
 42077  0167C4  26DE               	addwf	postinc2,f,c
 42078  0167C6  500C               	movf	(btemp+11)^0,w,c
 42079  0167C8  22DE               	addwfc	postinc2,f,c
 42080  0167CA  0E00               	movlw	0
 42081  0167CC  22DE               	addwfc	postinc2,f,c
 42082  0167CE  22DE               	addwfc	postinc2,f,c
 42083                           
 42084                           ;stkvar	_b @ sp[(-13)+-4]
 42085  0167D0  0EF1               	movlw	241
 42086  0167D2  24E1               	addwf	fsr1l,w,c
 42087  0167D4  6ED9               	movwf	fsr2l,c
 42088  0167D6  0EFF               	movlw	255
 42089  0167D8  20E2               	addwfc	fsr1h,w,c
 42090  0167DA  6EDA               	movwf	fsr2h,c
 42091  0167DC  50DF               	movf	indf2,w,c
 42092  0167DE  6E0C               	movwf	(btemp+11)^0,c
 42093                           
 42094                           ;stkvar	_a @ sp[(-13)+-8]
 42095  0167E0  0EEC               	movlw	236
 42096  0167E2  24E1               	addwf	fsr1l,w,c
 42097  0167E4  6ED9               	movwf	fsr2l,c
 42098  0167E6  0EFF               	movlw	255
 42099  0167E8  20E2               	addwfc	fsr1h,w,c
 42100  0167EA  6EDA               	movwf	fsr2h,c
 42101  0167EC  50DF               	movf	indf2,w,c
 42102  0167EE  020C               	mulwf	(btemp+11)^0,c
 42103                           
 42104                           ;stkvar	_temp @ sp[(-13)+8]
 42105  0167F0  0EFB               	movlw	-5
 42106  0167F2  006F FFCF FFE3     	movff	prodl,plusw1
 42107  0167F8  0EFC               	movlw	-4
 42108  0167FA  006F FFD3 FFE3     	movff	prodh,plusw1
 42109                           
 42110                           ;stkvar	_temp @ sp[(-13)+8]
 42111  016800  0EFB               	movlw	-5
 42112  016802  006F FF8C  F00B    	movff	plusw1,btemp+10
 42113  016808  0EFC               	movlw	-4
 42114  01680A  006F FF8C  F00C    	movff	plusw1,btemp+11
 42115                           
 42116                           ;stkvar	_prod @ sp[(-13)+0]
 42117  016810  50E1               	movf	fsr1l,w,c
 42118  016812  0FF3               	addlw	-13
 42119  016814  6ED9               	movwf	fsr2l,c
 42120  016816  50E2               	movf	fsr1h,w,c
 42121  016818  6EDA               	movwf	fsr2h,c
 42122  01681A  0EFF               	movlw	255
 42123  01681C  22DA               	addwfc	fsr2h,f,c
 42124  01681E  500B               	movf	(btemp+10)^0,w,c
 42125  016820  26DE               	addwf	postinc2,f,c
 42126  016822  500C               	movf	(btemp+11)^0,w,c
 42127  016824  22DE               	addwfc	postinc2,f,c
 42128  016826  0E00               	movlw	0
 42129  016828  22DE               	addwfc	postinc2,f,c
 42130  01682A  22DE               	addwfc	postinc2,f,c
 42131                           
 42132                           ;stkvar	_b @ sp[(-13)+-4]
 42133  01682C  0EF1               	movlw	241
 42134  01682E  24E1               	addwf	fsr1l,w,c
 42135  016830  6ED9               	movwf	fsr2l,c
 42136  016832  0EFF               	movlw	255
 42137  016834  20E2               	addwfc	fsr1h,w,c
 42138  016836  6EDA               	movwf	fsr2h,c
 42139  016838  50DF               	movf	indf2,w,c
 42140  01683A  6E0C               	movwf	(btemp+11)^0,c
 42141                           
 42142                           ;stkvar	_a @ sp[(-13)+-8]
 42143  01683C  0EED               	movlw	237
 42144  01683E  24E1               	addwf	fsr1l,w,c
 42145  016840  6ED9               	movwf	fsr2l,c
 42146  016842  0EFF               	movlw	255
 42147  016844  20E2               	addwfc	fsr1h,w,c
 42148  016846  6EDA               	movwf	fsr2h,c
 42149  016848  50DF               	movf	indf2,w,c
 42150  01684A  020C               	mulwf	(btemp+11)^0,c
 42151                           
 42152                           ;stkvar	_temp @ sp[(-13)+8]
 42153  01684C  0EFB               	movlw	-5
 42154  01684E  006F FFCF FFE3     	movff	prodl,plusw1
 42155  016854  0EFC               	movlw	-4
 42156  016856  006F FFD3 FFE3     	movff	prodh,plusw1
 42157                           
 42158                           ;stkvar	_temp @ sp[(-13)+8]
 42159  01685C  0EFB               	movlw	-5
 42160  01685E  006F FF8C  F00B    	movff	plusw1,btemp+10
 42161  016864  0EFC               	movlw	-4
 42162  016866  006F FF8C  F00C    	movff	plusw1,btemp+11
 42163  01686C  500B               	movf	(btemp+10)^0,w,c
 42164  01686E  6E05               	movwf	(btemp+4)^0,c
 42165  016870  500C               	movf	(btemp+11)^0,w,c
 42166  016872  6E06               	movwf	(btemp+5)^0,c
 42167  016874  6A07               	clrf	(btemp+6)^0,c
 42168  016876  6A08               	clrf	(btemp+7)^0,c
 42169  016878  0060  F01C  F008   	movff	btemp+6,btemp+7
 42170  01687E  0060  F018  F007   	movff	btemp+5,btemp+6
 42171  016884  0060  F014  F006   	movff	btemp+4,btemp+5
 42172  01688A  6A05               	clrf	(btemp+4)^0,c
 42173                           
 42174                           ;stkvar	_prod @ sp[(-13)+0]
 42175  01688C  50E1               	movf	fsr1l,w,c
 42176  01688E  0FF3               	addlw	-13
 42177  016890  6ED9               	movwf	fsr2l,c
 42178  016892  50E2               	movf	fsr1h,w,c
 42179  016894  6EDA               	movwf	fsr2h,c
 42180  016896  0EFF               	movlw	255
 42181  016898  22DA               	addwfc	fsr2h,f,c
 42182  01689A  5005               	movf	(btemp+4)^0,w,c
 42183  01689C  26DE               	addwf	postinc2,f,c
 42184  01689E  5006               	movf	(btemp+5)^0,w,c
 42185  0168A0  22DE               	addwfc	postinc2,f,c
 42186  0168A2  5007               	movf	(btemp+6)^0,w,c
 42187  0168A4  22DE               	addwfc	postinc2,f,c
 42188  0168A6  5008               	movf	(btemp+7)^0,w,c
 42189  0168A8  22DE               	addwfc	postinc2,f,c
 42190                           
 42191                           ;stkvar	_prod @ sp[(-13)+0]
 42192  0168AA  50E1               	movf	fsr1l,w,c
 42193  0168AC  0FF3               	addlw	-13
 42194  0168AE  6ED9               	movwf	fsr2l,c
 42195  0168B0  50E2               	movf	fsr1h,w,c
 42196  0168B2  6EDA               	movwf	fsr2h,c
 42197  0168B4  0EFF               	movlw	255
 42198  0168B6  22DA               	addwfc	fsr2h,f,c
 42199                           
 42200                           ;stkvar	_grs @ sp[(-13)+4]
 42201  0168B8  0EFA               	movlw	250
 42202  0168BA  24E1               	addwf	fsr1l,w,c
 42203  0168BC  6EE9               	movwf	fsr0l,c
 42204  0168BE  0EFF               	movlw	255
 42205  0168C0  20E2               	addwfc	fsr1h,w,c
 42206  0168C2  6EEA               	movwf	fsr0h,c
 42207  0168C4  50EF               	movf	indf0,w,c
 42208  0168C6  26DE               	addwf	postinc2,f,c
 42209  0168C8  0E00               	movlw	0
 42210  0168CA  22DE               	addwfc	postinc2,f,c
 42211  0168CC  22DE               	addwfc	postinc2,f,c
 42212  0168CE  22DE               	addwfc	postinc2,f,c
 42213                           
 42214                           ;stkvar	_grs @ sp[(-13)+4]
 42215  0168D0  50E1               	movf	fsr1l,w,c
 42216  0168D2  0FF7               	addlw	-9
 42217  0168D4  6ED9               	movwf	fsr2l,c
 42218  0168D6  50E2               	movf	fsr1h,w,c
 42219  0168D8  6EDA               	movwf	fsr2h,c
 42220  0168DA  0EFF               	movlw	255
 42221  0168DC  22DA               	addwfc	fsr2h,f,c
 42222  0168DE  0E08               	movlw	8
 42223  0168E0                     u8625:
 42224  0168E0  90D8               	bcf	status,0,c
 42225  0168E2  36DE               	rlcf	postinc2,f,c
 42226  0168E4  36DE               	rlcf	postinc2,f,c
 42227  0168E6  36DE               	rlcf	postinc2,f,c
 42228  0168E8  36DD               	rlcf	postdec2,f,c
 42229  0168EA  52DD               	movf	postdec2,f,c
 42230  0168EC  52DD               	movf	postdec2,f,c
 42231  0168EE  2EE8               	decfsz	wreg,f,c
 42232  0168F0  D7F7               	goto	u8625
 42233  0168F2  0E82               	movlw	130
 42234  0168F4  6E0B               	movwf	(btemp+10)^0,c
 42235  0168F6  0EFF               	movlw	255
 42236  0168F8  6E0C               	movwf	(btemp+11)^0,c
 42237                           
 42238                           ;stkvar	_bexp @ sp[(-13)+10]
 42239  0168FA  0EFD               	movlw	-3
 42240  0168FC  50E3               	movf	plusw1,w,c
 42241  0168FE  6E09               	movwf	(btemp+8)^0,c
 42242  016900  6A0A               	clrf	(btemp+9)^0,c
 42243                           
 42244                           ;stkvar	_aexp @ sp[(-13)+11]
 42245  016902  0EFE               	movlw	-2
 42246  016904  50E3               	movf	plusw1,w,c
 42247  016906  2609               	addwf	(btemp+8)^0,f,c
 42248  016908  0E00               	movlw	0
 42249  01690A  220A               	addwfc	(btemp+9)^0,f,c
 42250  01690C  500B               	movf	(btemp+10)^0,w,c
 42251  01690E  2609               	addwf	(btemp+8)^0,f,c
 42252  016910  500C               	movf	(btemp+11)^0,w,c
 42253  016912  220A               	addwfc	(btemp+9)^0,f,c
 42254                           
 42255                           ;stkvar	_temp @ sp[(-13)+8]
 42256  016914  0EFB               	movlw	-5
 42257  016916  0060  F027  FFE3   	movff	btemp+8,plusw1
 42258  01691C  0EFC               	movlw	-4
 42259  01691E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 42260  016924  D021               	goto	l10495
 42261  016926                     l10485:
 42262                           
 42263                           ;stkvar	_prod @ sp[(-13)+0]
 42264  016926  90D8               	bcf	status,0,c
 42265  016928  0EF3               	movlw	-13
 42266  01692A  36E3               	rlcf	plusw1,f,c
 42267  01692C  0EF4               	movlw	-12
 42268  01692E  36E3               	rlcf	plusw1,f,c
 42269  016930  0EF5               	movlw	-11
 42270  016932  36E3               	rlcf	plusw1,f,c
 42271  016934  0EF6               	movlw	-10
 42272  016936  36E3               	rlcf	plusw1,f,c
 42273                           
 42274                           ;stkvar	_grs @ sp[(-13)+4]
 42275  016938  0EFA               	movlw	-6
 42276  01693A  AEE3               	btfss	plusw1,7,c
 42277  01693C  D002               	goto	l10491
 42278                           
 42279                           ;stkvar	_prod @ sp[(-13)+0]
 42280  01693E  0EF3               	movlw	-13
 42281  016940  80E3               	bsf	plusw1,0,c
 42282  016942                     l10491:
 42283                           
 42284                           ;stkvar	_grs @ sp[(-13)+4]
 42285  016942  90D8               	bcf	status,0,c
 42286  016944  0EF7               	movlw	-9
 42287  016946  36E3               	rlcf	plusw1,f,c
 42288  016948  0EF8               	movlw	-8
 42289  01694A  36E3               	rlcf	plusw1,f,c
 42290  01694C  0EF9               	movlw	-7
 42291  01694E  36E3               	rlcf	plusw1,f,c
 42292  016950  0EFA               	movlw	-6
 42293  016952  36E3               	rlcf	plusw1,f,c
 42294                           
 42295                           ;stkvar	_temp @ sp[(-13)+8]
 42296  016954  50E1               	movf	fsr1l,w,c
 42297  016956  0FFB               	addlw	-5
 42298  016958  6ED9               	movwf	fsr2l,c
 42299  01695A  50E2               	movf	fsr1h,w,c
 42300  01695C  6EDA               	movwf	fsr2h,c
 42301  01695E  0EFF               	movlw	255
 42302  016960  22DA               	addwfc	fsr2h,f,c
 42303  016962  06DE               	decf	postinc2,f,c
 42304  016964  0E00               	movlw	0
 42305  016966  5ADD               	subwfb	postdec2,f,c
 42306  016968                     l10495:
 42307                           
 42308                           ;stkvar	_prod @ sp[(-13)+0]
 42309  016968  0EF5               	movlw	-11
 42310  01696A  AEE3               	btfss	plusw1,7,c
 42311  01696C  D7DC               	goto	l10485
 42312                           
 42313                           ;stkvar	_aexp @ sp[(-13)+11]
 42314  01696E  0EFE               	movlw	-2
 42315  016970  6AE3               	clrf	plusw1,c
 42316                           
 42317                           ;stkvar	_grs @ sp[(-13)+4]
 42318  016972  0EFA               	movlw	-6
 42319  016974  AEE3               	btfss	plusw1,7,c
 42320  016976  D020               	goto	l10509
 42321                           
 42322                           ;stkvar	_grs @ sp[(-13)+4]
 42323  016978  50E1               	movf	fsr1l,w,c
 42324  01697A  0FF7               	addlw	-9
 42325  01697C  6ED9               	movwf	fsr2l,c
 42326  01697E  50E2               	movf	fsr1h,w,c
 42327  016980  6EDA               	movwf	fsr2h,c
 42328  016982  0EFF               	movlw	255
 42329  016984  22DA               	addwfc	fsr2h,f,c
 42330  016986  0EFF               	movlw	255
 42331  016988  14DE               	andwf	postinc2,w,c
 42332  01698A  6E09               	movwf	(btemp+8)^0,c
 42333  01698C  0EFF               	movlw	255
 42334  01698E  14DE               	andwf	postinc2,w,c
 42335  016990  6E0A               	movwf	(btemp+9)^0,c
 42336  016992  0EFF               	movlw	255
 42337  016994  14DE               	andwf	postinc2,w,c
 42338  016996  6E0B               	movwf	(btemp+10)^0,c
 42339  016998  0E7F               	movlw	127
 42340  01699A  14DE               	andwf	postinc2,w,c
 42341  01699C  6E0C               	movwf	(btemp+11)^0,c
 42342  01699E  5009               	movf	(btemp+8)^0,w,c
 42343  0169A0  100A               	iorwf	(btemp+9)^0,w,c
 42344  0169A2  100B               	iorwf	(btemp+10)^0,w,c
 42345  0169A4  100C               	iorwf	(btemp+11)^0,w,c
 42346  0169A6  B4D8               	btfsc	status,2,c
 42347  0169A8  D004               	goto	l10505
 42348  0169AA                     u8660:
 42349                           
 42350                           ;stkvar	_aexp @ sp[(-13)+11]
 42351  0169AA  0EFE               	movlw	-2
 42352  0169AC  6AE3               	clrf	plusw1,c
 42353  0169AE  2AE3               	incf	plusw1,f,c
 42354  0169B0  D003               	goto	l10509
 42355  0169B2                     l10505:
 42356                           
 42357                           ;stkvar	_prod @ sp[(-13)+0]
 42358  0169B2  0EF3               	movlw	-13
 42359  0169B4  B0E3               	btfsc	plusw1,0,c
 42360  0169B6  D7F9               	goto	u8660
 42361  0169B8                     l10509:
 42362                           
 42363                           ;stkvar	_aexp @ sp[(-13)+11]
 42364  0169B8  0EFE               	movlw	-2
 42365  0169BA  50E3               	movf	plusw1,w,c
 42366  0169BC  B4D8               	btfsc	status,2,c
 42367  0169BE  D036               	goto	l10519
 42368                           
 42369                           ;stkvar	_prod @ sp[(-13)+0]
 42370  0169C0  50E1               	movf	fsr1l,w,c
 42371  0169C2  0FF3               	addlw	-13
 42372  0169C4  6ED9               	movwf	fsr2l,c
 42373  0169C6  50E2               	movf	fsr1h,w,c
 42374  0169C8  6EDA               	movwf	fsr2h,c
 42375  0169CA  0EFF               	movlw	255
 42376  0169CC  22DA               	addwfc	fsr2h,f,c
 42377  0169CE  2ADE               	incf	postinc2,f,c
 42378  0169D0  0E00               	movlw	0
 42379  0169D2  22DE               	addwfc	postinc2,f,c
 42380  0169D4  22DE               	addwfc	postinc2,f,c
 42381  0169D6  22DE               	addwfc	postinc2,f,c
 42382                           
 42383                           ;stkvar	_prod @ sp[(-13)+0]
 42384  0169D8  0EF6               	movlw	-10
 42385  0169DA  A0E3               	btfss	plusw1,0,c
 42386  0169DC  D027               	goto	l10519
 42387  0169DE  0E01               	movlw	1
 42388  0169E0  6E0C               	movwf	(btemp+11)^0,c
 42389                           
 42390                           ;stkvar	_prod @ sp[(-13)+0]
 42391  0169E2  50E1               	movf	fsr1l,w,c
 42392  0169E4  0FF3               	addlw	-13
 42393  0169E6  6ED9               	movwf	fsr2l,c
 42394  0169E8  50E2               	movf	fsr1h,w,c
 42395  0169EA  6EDA               	movwf	fsr2h,c
 42396  0169EC  0EFF               	movlw	255
 42397  0169EE  22DA               	addwfc	fsr2h,f,c
 42398  0169F0  280C               	incf	(btemp+11)^0,w,c
 42399  0169F2  52DE               	movf	postinc2,f,c
 42400  0169F4  D008               	goto	u8700
 42401  0169F6                     u8705:
 42402  0169F6  52DE               	movf	postinc2,f,c
 42403  0169F8  90D8               	bcf	status,0,c
 42404  0169FA  BEDC               	btfsc	preinc2,7,c
 42405  0169FC  80D8               	bsf	status,0,c
 42406  0169FE  32DD               	rrcf	postdec2,f,c
 42407  016A00  32DD               	rrcf	postdec2,f,c
 42408  016A02  32DD               	rrcf	postdec2,f,c
 42409  016A04  32DE               	rrcf	postinc2,f,c
 42410  016A06                     u8700:
 42411  016A06  2EE8               	decfsz	wreg,f,c
 42412  016A08  D7F6               	goto	u8705
 42413                           
 42414                           ;stkvar	_temp @ sp[(-13)+8]
 42415  016A0A  0EFB               	movlw	-5
 42416  016A0C  50E3               	movf	plusw1,w,c
 42417  016A0E  0F01               	addlw	1
 42418  016A10  6E01               	movwf	btemp^0,c
 42419  016A12  0EFB               	movlw	-5
 42420  016A14  0060  F007  FFE3   	movff	btemp,plusw1
 42421  016A1A  6A01               	clrf	btemp^0,c
 42422  016A1C  0EFC               	movlw	-4
 42423  016A1E  50E3               	movf	plusw1,w,c
 42424  016A20  2001               	addwfc	btemp^0,w,c
 42425  016A22  6E01               	movwf	btemp^0,c
 42426  016A24  0EFC               	movlw	-4
 42427  016A26  0060  F007  FFE3   	movff	btemp,plusw1
 42428  016A2C                     l10519:
 42429                           
 42430                           ;stkvar	_temp @ sp[(-13)+8]
 42431  016A2C  0EFC               	movlw	-4
 42432  016A2E  BEE3               	btfsc	plusw1,7,c
 42433  016A30  D020               	goto	l10523
 42434  016A32  0EFC               	movlw	-4
 42435  016A34  50E3               	movf	plusw1,w,c
 42436  016A36  E104               	bnz	u8710
 42437  016A38  0EFB               	movlw	-5
 42438  016A3A  28E3               	incf	plusw1,w,c
 42439  016A3C  A0D8               	btfss	status,0,c
 42440  016A3E  D019               	goto	l10523
 42441  016A40                     u8710:
 42442  016A40  0E00               	movlw	0
 42443  016A42  6E09               	movwf	(btemp+8)^0,c
 42444  016A44  0E00               	movlw	0
 42445  016A46  6E0A               	movwf	(btemp+9)^0,c
 42446  016A48  0E80               	movlw	128
 42447  016A4A  6E0B               	movwf	(btemp+10)^0,c
 42448  016A4C  0E7F               	movlw	127
 42449  016A4E  6E0C               	movwf	(btemp+11)^0,c
 42450                           
 42451                           ;stkvar	_prod @ sp[(-13)+0]
 42452  016A50  0EF3               	movlw	-13
 42453  016A52  0060  F027  FFE3   	movff	btemp+8,plusw1
 42454  016A58  0EF4               	movlw	-12
 42455  016A5A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 42456  016A60  0EF5               	movlw	-11
 42457  016A62  0060  F02F  FFE3   	movff	btemp+10,plusw1
 42458  016A68  0EF6               	movlw	-10
 42459  016A6A  0060  F033  FFE3   	movff	btemp+11,plusw1
 42460  016A70  D044               	goto	l10539
 42461  016A72                     l10523:
 42462                           
 42463                           ;stkvar	_temp @ sp[(-13)+8]
 42464  016A72  0EFC               	movlw	-4
 42465  016A74  BEE3               	btfsc	plusw1,7,c
 42466  016A76  D007               	goto	u8720
 42467  016A78  0EFC               	movlw	-4
 42468  016A7A  50E3               	movf	plusw1,w,c
 42469  016A7C  E10F               	bnz	l10529
 42470  016A7E  0EFB               	movlw	-5
 42471  016A80  04E3               	decf	plusw1,w,c
 42472  016A82  B0D8               	btfsc	status,0,c
 42473  016A84  D00B               	goto	l10529
 42474  016A86                     u8720:
 42475                           
 42476                           ;stkvar	_prod @ sp[(-13)+0]
 42477  016A86  0EF3               	movlw	-13
 42478  016A88  6AE3               	clrf	plusw1,c
 42479  016A8A  0EF4               	movlw	-12
 42480  016A8C  6AE3               	clrf	plusw1,c
 42481  016A8E  0EF5               	movlw	-11
 42482  016A90  6AE3               	clrf	plusw1,c
 42483  016A92  0EF6               	movlw	-10
 42484  016A94  6AE3               	clrf	plusw1,c
 42485                           
 42486                           ;stkvar	_sign @ sp[(-13)+12]
 42487  016A96  0EFF               	movlw	-1
 42488  016A98  6AE3               	clrf	plusw1,c
 42489  016A9A  D02F               	goto	l10539
 42490  016A9C                     l10529:
 42491                           
 42492                           ;stkvar	_temp @ sp[(-13)+8]
 42493                           ;stkvar	_bexp @ sp[(-13)+10]
 42494  016A9C  0EFB               	movlw	-5
 42495  016A9E  006F FF8C  F001    	movff	plusw1,btemp
 42496  016AA4  0EFD               	movlw	-3
 42497  016AA6  0060  F007  FFE3   	movff	btemp,plusw1
 42498                           
 42499                           ;stkvar	_prod @ sp[(-13)+0]
 42500  016AAC  50E1               	movf	fsr1l,w,c
 42501  016AAE  0FF3               	addlw	-13
 42502  016AB0  6ED9               	movwf	fsr2l,c
 42503  016AB2  50E2               	movf	fsr1h,w,c
 42504  016AB4  6EDA               	movwf	fsr2h,c
 42505  016AB6  0EFF               	movlw	255
 42506  016AB8  22DA               	addwfc	fsr2h,f,c
 42507  016ABA  0EFF               	movlw	255
 42508  016ABC  16DE               	andwf	postinc2,f,c
 42509  016ABE  0EFF               	movlw	255
 42510  016AC0  16DE               	andwf	postinc2,f,c
 42511  016AC2  0E7F               	movlw	127
 42512  016AC4  16DE               	andwf	postinc2,f,c
 42513  016AC6  0E00               	movlw	0
 42514  016AC8  16DE               	andwf	postinc2,f,c
 42515                           
 42516                           ;stkvar	_bexp @ sp[(-13)+10]
 42517  016ACA  0EFD               	movlw	-3
 42518  016ACC  A0E3               	btfss	plusw1,0,c
 42519  016ACE  D008               	goto	l10537
 42520                           
 42521                           ;stkvar	_prod @ sp[(-13)+0]
 42522  016AD0  0EF5               	movlw	245
 42523  016AD2  24E1               	addwf	fsr1l,w,c
 42524  016AD4  6ED9               	movwf	fsr2l,c
 42525  016AD6  0EFF               	movlw	255
 42526  016AD8  20E2               	addwfc	fsr1h,w,c
 42527  016ADA  6EDA               	movwf	fsr2h,c
 42528  016ADC  0E00               	movlw	0
 42529  016ADE  8EDB               	bsf	plusw2,7,c
 42530  016AE0                     l10537:
 42531                           
 42532                           ;stkvar	_prod @ sp[(-13)+0]
 42533  016AE0  0EF6               	movlw	246
 42534  016AE2  24E1               	addwf	fsr1l,w,c
 42535  016AE4  6ED9               	movwf	fsr2l,c
 42536  016AE6  0EFF               	movlw	255
 42537  016AE8  20E2               	addwfc	fsr1h,w,c
 42538  016AEA  6EDA               	movwf	fsr2h,c
 42539                           
 42540                           ;stkvar	_bexp @ sp[(-13)+10]
 42541  016AEC  0EFD               	movlw	-3
 42542  016AEE  006F FF8C  F00C    	movff	plusw1,btemp+11
 42543  016AF4  90D8               	bcf	status,0,c
 42544  016AF6  300C               	rrcf	(btemp+11)^0,w,c
 42545  016AF8  6EDF               	movwf	indf2,c
 42546  016AFA                     l10539:
 42547                           
 42548                           ;stkvar	_sign @ sp[(-13)+12]
 42549  016AFA  0EFF               	movlw	-1
 42550  016AFC  006F FF8C  F00C    	movff	plusw1,btemp+11
 42551                           
 42552                           ;stkvar	_prod @ sp[(-13)+0]
 42553  016B02  0EF6               	movlw	246
 42554  016B04  24E1               	addwf	fsr1l,w,c
 42555  016B06  6ED9               	movwf	fsr2l,c
 42556  016B08  0EFF               	movlw	255
 42557  016B0A  20E2               	addwfc	fsr1h,w,c
 42558  016B0C  6EDA               	movwf	fsr2h,c
 42559  016B0E  500C               	movf	(btemp+11)^0,w,c
 42560  016B10  12DF               	iorwf	indf2,f,c
 42561                           
 42562                           ;stkvar	_prod @ sp[(-13)+0]
 42563  016B12  0EF3               	movlw	-13
 42564  016B14  006F FF8C  F001    	movff	plusw1,btemp
 42565  016B1A  0EF4               	movlw	-12
 42566  016B1C  006F FF8C  F002    	movff	plusw1,btemp+1
 42567  016B22  0EF5               	movlw	-11
 42568  016B24  006F FF8C  F003    	movff	plusw1,btemp+2
 42569  016B2A  0EF6               	movlw	-10
 42570  016B2C  006F FF8C  F004    	movff	plusw1,btemp+3
 42571  016B32                     l3325:
 42572                           
 42573                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 42574  016B32  0EEB               	movlw	235
 42575  016B34  26E1               	addwf	fsr1l,f,c
 42576  016B36  0EFF               	movlw	255
 42577  016B38  22E2               	addwfc	fsr1h,f,c
 42578  016B3A  0012               	return		;funcret
 42579  016B3C                     __end_of___flmul:
 42580                           	opt callstack 0
 42581                           
 42582 ;; *************** function _SYSTEM_Initialize *****************
 42583 ;; Defined at:
 42584 ;;		line 50 in file "mcc_generated_files/mcc.c"
 42585 ;; Parameters:    Size  Location     Type
 42586 ;;		None
 42587 ;; Auto vars:     Size  Location     Type
 42588 ;;		None
 42589 ;; Return value:  Size  Location     Type
 42590 ;;                  1  [STACK] void 
 42591 ;; Registers used:
 42592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 42593 ;; Tracked objects:
 42594 ;;		On entry : 0/0
 42595 ;;		On exit  : 3F/3C
 42596 ;;		Unchanged: 0/0
 42597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42602 ;;Total ram usage:        0 bytes
 42603 ;; Hardware stack levels used:    1
 42604 ;; Hardware stack levels required when called:   17
 42605 ;; This function calls:
 42606 ;;		_ADCC_Initialize
 42607 ;;		_CLKREF_Initialize
 42608 ;;		_CRC_Initialize
 42609 ;;		_DMA1_Initialize
 42610 ;;		_DMA2_Initialize
 42611 ;;		_EXT_INT_Initialize
 42612 ;;		_FVR_Initialize
 42613 ;;		_INTERRUPT_Initialize
 42614 ;;		_OSCILLATOR_Initialize
 42615 ;;		_PIN_MANAGER_Initialize
 42616 ;;		_PMD_Initialize
 42617 ;;		_PWM8_Initialize
 42618 ;;		_SPI1_Initialize
 42619 ;;		_TMR2_Initialize
 42620 ;;		_TMR3_Initialize
 42621 ;;		_TMR5_Initialize
 42622 ;;		_TMR6_Initialize
 42623 ;;		_UART1_Initialize
 42624 ;;		_UART2_Initialize
 42625 ;; This function is called by:
 42626 ;;		_main
 42627 ;; This function uses a reentrant model
 42628 ;;
 42629                           
 42630                           	psect	text153
 42631  00116C                     __ptext153:
 42632                           	opt callstack 0
 42633  00116C                     _SYSTEM_Initialize:
 42634                           	opt callstack 13
 42635                           
 42636                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 42637                           
 42638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42639                           ;incstack = 0
 42640  00116C  EC5A  F006         	call	_INTERRUPT_Initialize	;wreg free
 42641                           
 42642                           ; BSR set to: 57
 42643                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 42644  001170  EC88  F00F         	call	_PMD_Initialize	;wreg free
 42645                           
 42646                           ; BSR set to: 57
 42647                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 42648  001174  ECD3  F002         	call	_PIN_MANAGER_Initialize	;wreg free
 42649                           
 42650                           ; BSR set to: 58
 42651                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 42652  001178  EC7D  F00F         	call	_OSCILLATOR_Initialize	;wreg free
 42653                           
 42654                           ; BSR set to: 57
 42655                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 42656  00117C  EC1D  F010         	call	_FVR_Initialize	;wreg free
 42657                           
 42658                           ; BSR set to: 62
 42659                           ;mcc_generated_files/mcc.c: 57:     CRC_Initialize();
 42660  001180  EC1C  F003         	call	_CRC_Initialize	;wreg free
 42661                           
 42662                           ; BSR set to: 0
 42663                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
 42664  001184  EC88  F005         	call	_ADCC_Initialize	;wreg free
 42665                           
 42666                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 42667  001188  EC5B  F00F         	call	_TMR2_Initialize	;wreg free
 42668                           
 42669                           ; BSR set to: 57
 42670                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 42671  00118C  EC72  F00F         	call	_PWM8_Initialize	;wreg free
 42672                           
 42673                           ; BSR set to: 63
 42674                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
 42675  001190  ECDD  F00B         	call	_EXT_INT_Initialize	;wreg free
 42676                           
 42677                           ; BSR set to: 57
 42678                           ;mcc_generated_files/mcc.c: 62:     TMR6_Initialize();
 42679  001194  ECCA  F00C         	call	_TMR6_Initialize	;wreg free
 42680                           
 42681                           ;mcc_generated_files/mcc.c: 63:     TMR3_Initialize();
 42682  001198  EC95  F009         	call	_TMR3_Initialize	;wreg free
 42683                           
 42684                           ;mcc_generated_files/mcc.c: 64:     TMR5_Initialize();
 42685  00119C  EC71  F009         	call	_TMR5_Initialize	;wreg free
 42686                           
 42687                           ;mcc_generated_files/mcc.c: 65:     UART1_Initialize();
 42688  0011A0  EC4D  F009         	call	_UART1_Initialize	;wreg free
 42689                           
 42690                           ; BSR set to: 57
 42691                           ;mcc_generated_files/mcc.c: 66:     UART2_Initialize();
 42692  0011A4  EC53  F007         	call	_UART2_Initialize	;wreg free
 42693                           
 42694                           ; BSR set to: 57
 42695                           ;mcc_generated_files/mcc.c: 67:     SPI1_Initialize();
 42696  0011A8  EC67  F00F         	call	_SPI1_Initialize	;wreg free
 42697                           
 42698                           ; BSR set to: 61
 42699                           ;mcc_generated_files/mcc.c: 68:     DMA2_Initialize();
 42700  0011AC  EC0C  F008         	call	_DMA2_Initialize	;wreg free
 42701                           
 42702                           ; BSR set to: 59
 42703                           ;mcc_generated_files/mcc.c: 69:     DMA1_Initialize();
 42704  0011B0  EC53  F005         	call	_DMA1_Initialize	;wreg free
 42705                           
 42706                           ; BSR set to: 59
 42707                           ;mcc_generated_files/mcc.c: 70:     CLKREF_Initialize();
 42708  0011B4  ECF1  F00F         	call	_CLKREF_Initialize	;wreg free
 42709                           
 42710                           ; BSR set to: 60
 42711                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 42712  0011B8  0012               	return		;funcret
 42713  0011BA                     __end_of_SYSTEM_Initialize:
 42714                           	opt callstack 0
 42715                           
 42716 ;; *************** function _UART2_Initialize *****************
 42717 ;; Defined at:
 42718 ;;		line 78 in file "mcc_generated_files/uart2.c"
 42719 ;; Parameters:    Size  Location     Type
 42720 ;;		None
 42721 ;; Auto vars:     Size  Location     Type
 42722 ;;		None
 42723 ;; Return value:  Size  Location     Type
 42724 ;;                  1  [STACK] void 
 42725 ;; Registers used:
 42726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 42727 ;; Tracked objects:
 42728 ;;		On entry : 3F/39
 42729 ;;		On exit  : 3F/39
 42730 ;;		Unchanged: 0/0
 42731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42736 ;;Total ram usage:        0 bytes
 42737 ;; Hardware stack levels used:    1
 42738 ;; Hardware stack levels required when called:   16
 42739 ;; This function calls:
 42740 ;;		_UART2_SetRxInterruptHandler
 42741 ;;		_UART2_SetTxInterruptHandler
 42742 ;; This function is called by:
 42743 ;;		_SYSTEM_Initialize
 42744 ;; This function uses a reentrant model
 42745 ;;
 42746                           
 42747                           	psect	text154
 42748  000EA6                     __ptext154:
 42749                           	opt callstack 0
 42750  000EA6                     _UART2_Initialize:
 42751                           	opt callstack 13
 42752                           
 42753                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 42754                           
 42755                           ; BSR set to: 60
 42756                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42757                           ;incstack = 0
 42758  000EA6  0139               	movlb	57	; () banked
 42759  000EA8  9596               	bcf	150,2,b	;volatile
 42760                           
 42761                           ; BSR set to: 57
 42762                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 42763  000EAA  0EB8               	movlw	low _UART2_Receive_ISR
 42764  000EAC  6EE6               	movwf	postinc1,c
 42765  000EAE  0E1D               	movlw	high _UART2_Receive_ISR
 42766  000EB0  6EE6               	movwf	postinc1,c
 42767  000EB2  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 42768  000EB4  6EE6               	movwf	postinc1,c
 42769  000EB6  EC1B  F00D         	call	_UART2_SetRxInterruptHandler	;wreg free
 42770                           
 42771                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 42772  000EBA  0139               	movlb	57	; () banked
 42773  000EBC  9796               	bcf	150,3,b	;volatile
 42774                           
 42775                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 42776  000EBE  0E68               	movlw	low _UART2_Transmit_ISR
 42777  000EC0  6EE6               	movwf	postinc1,c
 42778  000EC2  0E19               	movlw	high _UART2_Transmit_ISR
 42779  000EC4  6EE6               	movwf	postinc1,c
 42780  000EC6  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 42781  000EC8  6EE6               	movwf	postinc1,c
 42782  000ECA  EC07  F00D         	call	_UART2_SetTxInterruptHandler	;wreg free
 42783                           
 42784                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 42785  000ECE  013D               	movlb	61	; () banked
 42786  000ED0  6BD4               	clrf	212,b	;volatile
 42787                           
 42788                           ; BSR set to: 61
 42789                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 42790  000ED2  6BD6               	clrf	214,b	;volatile
 42791                           
 42792                           ; BSR set to: 61
 42793                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 42794  000ED4  6BD8               	clrf	216,b	;volatile
 42795                           
 42796                           ; BSR set to: 61
 42797                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 42798  000ED6  0EB0               	movlw	176
 42799  000ED8  6FDA               	movwf	218,b	;volatile
 42800                           
 42801                           ; BSR set to: 61
 42802                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 42803  000EDA  0E80               	movlw	128
 42804  000EDC  6FDB               	movwf	219,b	;volatile
 42805                           
 42806                           ; BSR set to: 61
 42807                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 42808  000EDE  6BDC               	clrf	220,b	;volatile
 42809                           
 42810                           ; BSR set to: 61
 42811                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 42812  000EE0  0E82               	movlw	130
 42813  000EE2  6FDD               	movwf	221,b	;volatile
 42814                           
 42815                           ; BSR set to: 61
 42816                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 42817  000EE4  0E06               	movlw	6
 42818  000EE6  6FDE               	movwf	222,b	;volatile
 42819                           
 42820                           ; BSR set to: 61
 42821                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 42822  000EE8  6BDF               	clrf	223,b	;volatile
 42823                           
 42824                           ; BSR set to: 61
 42825                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 42826  000EEA  6BE0               	clrf	224,b	;volatile
 42827                           
 42828                           ; BSR set to: 61
 42829                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 42830  000EEC  6BE1               	clrf	225,b	;volatile
 42831                           
 42832                           ; BSR set to: 61
 42833                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 42834  000EEE  6BE2               	clrf	226,b	;volatile
 42835                           
 42836                           ; BSR set to: 61
 42837                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 42838  000EF0  0100               	movlb	0	; () banked
 42839  000EF2  6BD9               	clrf	_uart2TxHead& (0+255),b	;volatile
 42840                           
 42841                           ; BSR set to: 0
 42842                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 42843  000EF4  6A46               	clrf	_uart2TxTail^0,c	;volatile
 42844                           
 42845                           ; BSR set to: 0
 42846                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 42847  000EF6  0E40               	movlw	64
 42848  000EF8  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 42849                           
 42850                           ; BSR set to: 0
 42851                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 42852  000EFA  6A44               	clrf	_uart2RxHead^0,c	;volatile
 42853                           
 42854                           ; BSR set to: 0
 42855                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 42856  000EFC  6BD8               	clrf	_uart2RxTail& (0+255),b	;volatile
 42857                           
 42858                           ; BSR set to: 0
 42859                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 42860  000EFE  6BD7               	clrf	_uart2RxCount& (0+255),b	;volatile
 42861                           
 42862                           ; BSR set to: 0
 42863                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 42864  000F00  0139               	movlb	57	; () banked
 42865  000F02  8596               	bsf	150,2,b	;volatile
 42866                           
 42867                           ; BSR set to: 57
 42868                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 42869  000F04  0012               	return		;funcret
 42870  000F06                     __end_of_UART2_Initialize:
 42871                           	opt callstack 0
 42872                           
 42873 ;; *************** function _UART2_SetTxInterruptHandler *****************
 42874 ;; Defined at:
 42875 ;;		line 252 in file "mcc_generated_files/uart2.c"
 42876 ;; Parameters:    Size  Location     Type
 42877 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 42878 ;;		 -> UART2_Transmit_ISR(1), 
 42879 ;; Auto vars:     Size  Location     Type
 42880 ;;		None
 42881 ;; Return value:  Size  Location     Type
 42882 ;;                  1  [STACK] void 
 42883 ;; Registers used:
 42884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 42885 ;; Tracked objects:
 42886 ;;		On entry : 3F/39
 42887 ;;		On exit  : 0/0
 42888 ;;		Unchanged: 0/0
 42889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42894 ;;Total ram usage:        0 bytes
 42895 ;; Hardware stack levels used:    1
 42896 ;; Hardware stack levels required when called:   15
 42897 ;; This function calls:
 42898 ;;		Nothing
 42899 ;; This function is called by:
 42900 ;;		_UART2_Initialize
 42901 ;; This function uses a reentrant model
 42902 ;;
 42903                           
 42904                           	psect	text155
 42905  001A0E                     __ptext155:
 42906                           	opt callstack 0
 42907  001A0E                     _UART2_SetTxInterruptHandler:
 42908                           	opt callstack 13
 42909                           
 42910                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 42911                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 42912                           
 42913                           ; BSR set to: 57
 42914                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42915                           ;incstack = 0
 42916  001A0E  50E1               	movf	fsr1l,w,c
 42917  001A10  0FFD               	addlw	-3
 42918  001A12  6ED9               	movwf	fsr2l,c
 42919  001A14  50E2               	movf	fsr1h,w,c
 42920  001A16  6EDA               	movwf	fsr2h,c
 42921  001A18  0EFF               	movlw	255
 42922  001A1A  22DA               	addwfc	fsr2h,f,c
 42923  001A1C  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 42924  001A22  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 42925  001A28  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 42926                           
 42927                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 42928  001A2E  52E5               	movf	postdec1,f,c
 42929  001A30  52E5               	movf	postdec1,f,c
 42930  001A32  52E5               	movf	postdec1,f,c
 42931  001A34  0012               	return		;funcret
 42932  001A36                     __end_of_UART2_SetTxInterruptHandler:
 42933                           	opt callstack 0
 42934                           
 42935 ;; *************** function _UART2_SetRxInterruptHandler *****************
 42936 ;; Defined at:
 42937 ;;		line 248 in file "mcc_generated_files/uart2.c"
 42938 ;; Parameters:    Size  Location     Type
 42939 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 42940 ;;		 -> UART2_Receive_ISR(1), 
 42941 ;; Auto vars:     Size  Location     Type
 42942 ;;		None
 42943 ;; Return value:  Size  Location     Type
 42944 ;;                  1  [STACK] void 
 42945 ;; Registers used:
 42946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 42947 ;; Tracked objects:
 42948 ;;		On entry : 3F/39
 42949 ;;		On exit  : 0/0
 42950 ;;		Unchanged: 0/0
 42951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 42952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 42956 ;;Total ram usage:        0 bytes
 42957 ;; Hardware stack levels used:    1
 42958 ;; Hardware stack levels required when called:   15
 42959 ;; This function calls:
 42960 ;;		Nothing
 42961 ;; This function is called by:
 42962 ;;		_UART2_Initialize
 42963 ;; This function uses a reentrant model
 42964 ;;
 42965                           
 42966                           	psect	text156
 42967  001A36                     __ptext156:
 42968                           	opt callstack 0
 42969  001A36                     _UART2_SetRxInterruptHandler:
 42970                           	opt callstack 13
 42971                           
 42972                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 42973                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 42974                           
 42975                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 42976                           ;incstack = 0
 42977  001A36  50E1               	movf	fsr1l,w,c
 42978  001A38  0FFD               	addlw	-3
 42979  001A3A  6ED9               	movwf	fsr2l,c
 42980  001A3C  50E2               	movf	fsr1h,w,c
 42981  001A3E  6EDA               	movwf	fsr2h,c
 42982  001A40  0EFF               	movlw	255
 42983  001A42  22DA               	addwfc	fsr2h,f,c
 42984  001A44  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 42985  001A4A  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 42986  001A50  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 42987                           
 42988                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 42989  001A56  52E5               	movf	postdec1,f,c
 42990  001A58  52E5               	movf	postdec1,f,c
 42991  001A5A  52E5               	movf	postdec1,f,c
 42992  001A5C  0012               	return		;funcret
 42993  001A5E                     __end_of_UART2_SetRxInterruptHandler:
 42994                           	opt callstack 0
 42995                           
 42996 ;; *************** function _UART1_Initialize *****************
 42997 ;; Defined at:
 42998 ;;		line 75 in file "mcc_generated_files/uart1.c"
 42999 ;; Parameters:    Size  Location     Type
 43000 ;;		None
 43001 ;; Auto vars:     Size  Location     Type
 43002 ;;		None
 43003 ;; Return value:  Size  Location     Type
 43004 ;;                  1  [STACK] void 
 43005 ;; Registers used:
 43006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43007 ;; Tracked objects:
 43008 ;;		On entry : 0/39
 43009 ;;		On exit  : 3F/39
 43010 ;;		Unchanged: 0/0
 43011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43016 ;;Total ram usage:        0 bytes
 43017 ;; Hardware stack levels used:    1
 43018 ;; Hardware stack levels required when called:   16
 43019 ;; This function calls:
 43020 ;;		_UART1_SetRxInterruptHandler
 43021 ;; This function is called by:
 43022 ;;		_SYSTEM_Initialize
 43023 ;; This function uses a reentrant model
 43024 ;;
 43025                           
 43026                           	psect	text157
 43027  00129A                     __ptext157:
 43028                           	opt callstack 0
 43029  00129A                     _UART1_Initialize:
 43030                           	opt callstack 13
 43031                           
 43032                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 43033                           
 43034                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43035                           ;incstack = 0
 43036  00129A  0139               	movlb	57	; () banked
 43037  00129C  9793               	bcf	147,3,b	;volatile
 43038                           
 43039                           ; BSR set to: 57
 43040                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 43041  00129E  0E56               	movlw	low _UART1_Receive_ISR
 43042  0012A0  6EE6               	movwf	postinc1,c
 43043  0012A2  0E1D               	movlw	high _UART1_Receive_ISR
 43044  0012A4  6EE6               	movwf	postinc1,c
 43045  0012A6  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 43046  0012A8  6EE6               	movwf	postinc1,c
 43047  0012AA  EC2F  F00D         	call	_UART1_SetRxInterruptHandler	;wreg free
 43048                           
 43049                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 43050  0012AE  013D               	movlb	61	; () banked
 43051  0012B0  6BEC               	clrf	236,b	;volatile
 43052                           
 43053                           ; BSR set to: 61
 43054                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 43055  0012B2  6BED               	clrf	237,b	;volatile
 43056                           
 43057                           ; BSR set to: 61
 43058                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 43059  0012B4  6BEE               	clrf	238,b	;volatile
 43060                           
 43061                           ; BSR set to: 61
 43062                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 43063  0012B6  6BEF               	clrf	239,b	;volatile
 43064                           
 43065                           ; BSR set to: 61
 43066                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 43067  0012B8  6BF0               	clrf	240,b	;volatile
 43068                           
 43069                           ; BSR set to: 61
 43070                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 43071  0012BA  6BF1               	clrf	241,b	;volatile
 43072                           
 43073                           ; BSR set to: 61
 43074                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 43075  0012BC  0EB0               	movlw	176
 43076  0012BE  6FF2               	movwf	242,b	;volatile
 43077                           
 43078                           ; BSR set to: 61
 43079                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 43080  0012C0  0E80               	movlw	128
 43081  0012C2  6FF3               	movwf	243,b	;volatile
 43082                           
 43083                           ; BSR set to: 61
 43084                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 43085  0012C4  6BF4               	clrf	244,b	;volatile
 43086                           
 43087                           ; BSR set to: 61
 43088                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 43089  0012C6  0E8A               	movlw	138
 43090  0012C8  6FF5               	movwf	245,b	;volatile
 43091                           
 43092                           ; BSR set to: 61
 43093                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 43094  0012CA  6BF6               	clrf	246,b	;volatile
 43095                           
 43096                           ; BSR set to: 61
 43097                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 43098  0012CC  6BF7               	clrf	247,b	;volatile
 43099                           
 43100                           ; BSR set to: 61
 43101                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 43102  0012CE  6BF8               	clrf	248,b	;volatile
 43103                           
 43104                           ; BSR set to: 61
 43105                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 43106  0012D0  6BF9               	clrf	249,b	;volatile
 43107                           
 43108                           ; BSR set to: 61
 43109                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 43110  0012D2  6BFA               	clrf	250,b	;volatile
 43111                           
 43112                           ; BSR set to: 61
 43113                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 43114  0012D4  6A47               	clrf	_uart1RxHead^0,c	;volatile
 43115                           
 43116                           ; BSR set to: 61
 43117                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 43118  0012D6  0100               	movlb	0	; () banked
 43119  0012D8  6BDB               	clrf	_uart1RxTail& (0+255),b	;volatile
 43120                           
 43121                           ; BSR set to: 0
 43122                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 43123  0012DA  6BDA               	clrf	_uart1RxCount& (0+255),b	;volatile
 43124                           
 43125                           ; BSR set to: 0
 43126                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 43127  0012DC  0139               	movlb	57	; () banked
 43128  0012DE  8793               	bsf	147,3,b	;volatile
 43129                           
 43130                           ; BSR set to: 57
 43131                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 43132  0012E0  0012               	return		;funcret
 43133  0012E2                     __end_of_UART1_Initialize:
 43134                           	opt callstack 0
 43135                           
 43136 ;; *************** function _UART1_SetRxInterruptHandler *****************
 43137 ;; Defined at:
 43138 ;;		line 207 in file "mcc_generated_files/uart1.c"
 43139 ;; Parameters:    Size  Location     Type
 43140 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43141 ;;		 -> UART1_Receive_ISR(1), 
 43142 ;; Auto vars:     Size  Location     Type
 43143 ;;		None
 43144 ;; Return value:  Size  Location     Type
 43145 ;;                  1  [STACK] void 
 43146 ;; Registers used:
 43147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43148 ;; Tracked objects:
 43149 ;;		On entry : 3F/39
 43150 ;;		On exit  : 0/0
 43151 ;;		Unchanged: 0/0
 43152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43157 ;;Total ram usage:        0 bytes
 43158 ;; Hardware stack levels used:    1
 43159 ;; Hardware stack levels required when called:   15
 43160 ;; This function calls:
 43161 ;;		Nothing
 43162 ;; This function is called by:
 43163 ;;		_UART1_Initialize
 43164 ;; This function uses a reentrant model
 43165 ;;
 43166                           
 43167                           	psect	text158
 43168  001A5E                     __ptext158:
 43169                           	opt callstack 0
 43170  001A5E                     _UART1_SetRxInterruptHandler:
 43171                           	opt callstack 13
 43172                           
 43173                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 43174                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43175                           
 43176                           ; BSR set to: 57
 43177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43178                           ;incstack = 0
 43179  001A5E  50E1               	movf	fsr1l,w,c
 43180  001A60  0FFD               	addlw	-3
 43181  001A62  6ED9               	movwf	fsr2l,c
 43182  001A64  50E2               	movf	fsr1h,w,c
 43183  001A66  6EDA               	movwf	fsr2h,c
 43184  001A68  0EFF               	movlw	255
 43185  001A6A  22DA               	addwfc	fsr2h,f,c
 43186  001A6C  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 43187  001A72  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 43188  001A78  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 43189                           
 43190                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 43191  001A7E  52E5               	movf	postdec1,f,c
 43192  001A80  52E5               	movf	postdec1,f,c
 43193  001A82  52E5               	movf	postdec1,f,c
 43194  001A84  0012               	return		;funcret
 43195  001A86                     __end_of_UART1_SetRxInterruptHandler:
 43196                           	opt callstack 0
 43197                           
 43198 ;; *************** function _TMR6_Initialize *****************
 43199 ;; Defined at:
 43200 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 43201 ;; Parameters:    Size  Location     Type
 43202 ;;		None
 43203 ;; Auto vars:     Size  Location     Type
 43204 ;;		None
 43205 ;; Return value:  Size  Location     Type
 43206 ;;                  1  [STACK] void 
 43207 ;; Registers used:
 43208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 43209 ;; Tracked objects:
 43210 ;;		On entry : 3F/39
 43211 ;;		On exit  : 0/0
 43212 ;;		Unchanged: 0/0
 43213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43218 ;;Total ram usage:        0 bytes
 43219 ;; Hardware stack levels used:    1
 43220 ;; Hardware stack levels required when called:   16
 43221 ;; This function calls:
 43222 ;;		_TMR6_SetInterruptHandler
 43223 ;; This function is called by:
 43224 ;;		_SYSTEM_Initialize
 43225 ;; This function uses a reentrant model
 43226 ;;
 43227                           
 43228                           	psect	text159
 43229  001994                     __ptext159:
 43230                           	opt callstack 0
 43231  001994                     _TMR6_Initialize:
 43232                           	opt callstack 13
 43233                           
 43234                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 43235                           
 43236                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43237                           ;incstack = 0
 43238  001994  0E01               	movlw	1
 43239  001996  6E96               	movwf	150,c	;volatile
 43240                           
 43241                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 43242  001998  6A95               	clrf	149,c	;volatile
 43243                           
 43244                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 43245  00199A  6A97               	clrf	151,c	;volatile
 43246                           
 43247                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 43248  00199C  0E7C               	movlw	124
 43249  00199E  6E93               	movwf	147,c	;volatile
 43250                           
 43251                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 43252  0019A0  6A92               	clrf	146,c	;volatile
 43253                           
 43254                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 43255  0019A2  0139               	movlb	57	; () banked
 43256  0019A4  91A9               	bcf	169,0,b	;volatile
 43257                           
 43258                           ; BSR set to: 57
 43259                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 43260  0019A6  8199               	bsf	153,0,b	;volatile
 43261                           
 43262                           ; BSR set to: 57
 43263                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 43264  0019A8  0EBA               	movlw	low _TMR6_DefaultInterruptHandler
 43265  0019AA  6EE6               	movwf	postinc1,c
 43266  0019AC  0E11               	movlw	high _TMR6_DefaultInterruptHandler
 43267  0019AE  6EE6               	movwf	postinc1,c
 43268  0019B0  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 43269  0019B2  6EE6               	movwf	postinc1,c
 43270  0019B4  EC43  F00D         	call	_TMR6_SetInterruptHandler	;wreg free
 43271                           
 43272                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 43273  0019B8  0EE0               	movlw	224
 43274  0019BA  6E94               	movwf	148,c	;volatile
 43275                           
 43276                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43277  0019BC  0012               	return		;funcret
 43278  0019BE                     __end_of_TMR6_Initialize:
 43279                           	opt callstack 0
 43280                           
 43281 ;; *************** function _TMR6_SetInterruptHandler *****************
 43282 ;; Defined at:
 43283 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 43284 ;; Parameters:    Size  Location     Type
 43285 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43286 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 43287 ;; Auto vars:     Size  Location     Type
 43288 ;;		None
 43289 ;; Return value:  Size  Location     Type
 43290 ;;                  1  [STACK] void 
 43291 ;; Registers used:
 43292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43293 ;; Tracked objects:
 43294 ;;		On entry : 3F/39
 43295 ;;		On exit  : 0/0
 43296 ;;		Unchanged: 0/0
 43297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43302 ;;Total ram usage:        0 bytes
 43303 ;; Hardware stack levels used:    1
 43304 ;; Hardware stack levels required when called:   15
 43305 ;; This function calls:
 43306 ;;		Nothing
 43307 ;; This function is called by:
 43308 ;;		_TMR6_Initialize
 43309 ;; This function uses a reentrant model
 43310 ;;
 43311                           
 43312                           	psect	text160
 43313  001A86                     __ptext160:
 43314                           	opt callstack 0
 43315  001A86                     _TMR6_SetInterruptHandler:
 43316                           	opt callstack 13
 43317                           
 43318                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 43319                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43320                           
 43321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43322                           ;incstack = 0
 43323  001A86  50E1               	movf	fsr1l,w,c
 43324  001A88  0FFD               	addlw	-3
 43325  001A8A  6ED9               	movwf	fsr2l,c
 43326  001A8C  50E2               	movf	fsr1h,w,c
 43327  001A8E  6EDA               	movwf	fsr2h,c
 43328  001A90  0EFF               	movlw	255
 43329  001A92  22DA               	addwfc	fsr2h,f,c
 43330  001A94  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 43331  001A9A  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 43332  001AA0  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 43333                           
 43334                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 43335  001AA6  52E5               	movf	postdec1,f,c
 43336  001AA8  52E5               	movf	postdec1,f,c
 43337  001AAA  52E5               	movf	postdec1,f,c
 43338  001AAC  0012               	return		;funcret
 43339  001AAE                     __end_of_TMR6_SetInterruptHandler:
 43340                           	opt callstack 0
 43341                           
 43342 ;; *************** function _TMR5_Initialize *****************
 43343 ;; Defined at:
 43344 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 43345 ;; Parameters:    Size  Location     Type
 43346 ;;		None
 43347 ;; Auto vars:     Size  Location     Type
 43348 ;;		None
 43349 ;; Return value:  Size  Location     Type
 43350 ;;                  1  [STACK] void 
 43351 ;; Registers used:
 43352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 43353 ;; Tracked objects:
 43354 ;;		On entry : 0/39
 43355 ;;		On exit  : 0/0
 43356 ;;		Unchanged: 0/0
 43357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43362 ;;Total ram usage:        0 bytes
 43363 ;; Hardware stack levels used:    1
 43364 ;; Hardware stack levels required when called:   16
 43365 ;; This function calls:
 43366 ;;		_TMR5_SetInterruptHandler
 43367 ;; This function is called by:
 43368 ;;		_SYSTEM_Initialize
 43369 ;; This function uses a reentrant model
 43370 ;;
 43371                           
 43372                           	psect	text161
 43373  0012E2                     __ptext161:
 43374                           	opt callstack 0
 43375  0012E2                     _TMR5_Initialize:
 43376                           	opt callstack 13
 43377                           
 43378                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 43379                           
 43380                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43381                           ;incstack = 0
 43382  0012E2  6A9B               	clrf	155,c	;volatile
 43383                           
 43384                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 43385  0012E4  6A9C               	clrf	156,c	;volatile
 43386                           
 43387                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 43388  0012E6  0E01               	movlw	1
 43389  0012E8  6E9D               	movwf	157,c	;volatile
 43390                           
 43391                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 43392  0012EA  0E63               	movlw	99
 43393  0012EC  6E99               	movwf	153,c	;volatile
 43394                           
 43395                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 43396  0012EE  0EC0               	movlw	192
 43397  0012F0  6E98               	movwf	152,c	;volatile
 43398                           
 43399                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 43400  0012F2  5098               	movf	152,w,c	;volatile
 43401  0012F4  006F FE64  F001    	movff	16281,btemp	;volatile
 43402  0012FA  6A02               	clrf	(btemp+1)^0,c
 43403  0012FC  0060  F004  F002   	movff	btemp,btemp+1
 43404  001302  6A01               	clrf	btemp^0,c
 43405  001304  1001               	iorwf	btemp^0,w,c
 43406  001306  0100               	movlb	0	; () banked
 43407  001308  6FCE               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 43408  00130A  5002               	movf	(btemp+1)^0,w,c
 43409  00130C  6FCF               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 43410                           
 43411                           ; BSR set to: 0
 43412                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 43413  00130E  0139               	movlb	57	; () banked
 43414  001310  9DA8               	bcf	168,6,b	;volatile
 43415                           
 43416                           ; BSR set to: 57
 43417                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 43418  001312  8D98               	bsf	152,6,b	;volatile
 43419                           
 43420                           ; BSR set to: 57
 43421                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 43422  001314  0EB0               	movlw	low _TMR5_DefaultInterruptHandler
 43423  001316  6EE6               	movwf	postinc1,c
 43424  001318  0E16               	movlw	high _TMR5_DefaultInterruptHandler
 43425  00131A  6EE6               	movwf	postinc1,c
 43426  00131C  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 43427  00131E  6EE6               	movwf	postinc1,c
 43428  001320  EC57  F00D         	call	_TMR5_SetInterruptHandler	;wreg free
 43429                           
 43430                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 43431  001324  0E31               	movlw	49
 43432  001326  6E9A               	movwf	154,c	;volatile
 43433                           
 43434                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43435  001328  0012               	return		;funcret
 43436  00132A                     __end_of_TMR5_Initialize:
 43437                           	opt callstack 0
 43438                           
 43439 ;; *************** function _TMR5_SetInterruptHandler *****************
 43440 ;; Defined at:
 43441 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 43442 ;; Parameters:    Size  Location     Type
 43443 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43444 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 43445 ;; Auto vars:     Size  Location     Type
 43446 ;;		None
 43447 ;; Return value:  Size  Location     Type
 43448 ;;                  1  [STACK] void 
 43449 ;; Registers used:
 43450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43451 ;; Tracked objects:
 43452 ;;		On entry : 3F/39
 43453 ;;		On exit  : 0/0
 43454 ;;		Unchanged: 0/0
 43455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43460 ;;Total ram usage:        0 bytes
 43461 ;; Hardware stack levels used:    1
 43462 ;; Hardware stack levels required when called:   15
 43463 ;; This function calls:
 43464 ;;		Nothing
 43465 ;; This function is called by:
 43466 ;;		_TMR5_Initialize
 43467 ;; This function uses a reentrant model
 43468 ;;
 43469                           
 43470                           	psect	text162
 43471  001AAE                     __ptext162:
 43472                           	opt callstack 0
 43473  001AAE                     _TMR5_SetInterruptHandler:
 43474                           	opt callstack 13
 43475                           
 43476                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 43477                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43478                           
 43479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43480                           ;incstack = 0
 43481  001AAE  50E1               	movf	fsr1l,w,c
 43482  001AB0  0FFD               	addlw	-3
 43483  001AB2  6ED9               	movwf	fsr2l,c
 43484  001AB4  50E2               	movf	fsr1h,w,c
 43485  001AB6  6EDA               	movwf	fsr2h,c
 43486  001AB8  0EFF               	movlw	255
 43487  001ABA  22DA               	addwfc	fsr2h,f,c
 43488  001ABC  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 43489  001AC2  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 43490  001AC8  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 43491                           
 43492                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 43493  001ACE  52E5               	movf	postdec1,f,c
 43494  001AD0  52E5               	movf	postdec1,f,c
 43495  001AD2  52E5               	movf	postdec1,f,c
 43496  001AD4  0012               	return		;funcret
 43497  001AD6                     __end_of_TMR5_SetInterruptHandler:
 43498                           	opt callstack 0
 43499                           
 43500 ;; *************** function _TMR3_Initialize *****************
 43501 ;; Defined at:
 43502 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 43503 ;; Parameters:    Size  Location     Type
 43504 ;;		None
 43505 ;; Auto vars:     Size  Location     Type
 43506 ;;		None
 43507 ;; Return value:  Size  Location     Type
 43508 ;;                  1  [STACK] void 
 43509 ;; Registers used:
 43510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 43511 ;; Tracked objects:
 43512 ;;		On entry : 0/39
 43513 ;;		On exit  : 0/0
 43514 ;;		Unchanged: 0/0
 43515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43520 ;;Total ram usage:        0 bytes
 43521 ;; Hardware stack levels used:    1
 43522 ;; Hardware stack levels required when called:   16
 43523 ;; This function calls:
 43524 ;;		_TMR3_SetInterruptHandler
 43525 ;; This function is called by:
 43526 ;;		_SYSTEM_Initialize
 43527 ;; This function uses a reentrant model
 43528 ;;
 43529                           
 43530                           	psect	text163
 43531  00132A                     __ptext163:
 43532                           	opt callstack 0
 43533  00132A                     _TMR3_Initialize:
 43534                           	opt callstack 13
 43535                           
 43536                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 43537                           
 43538                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43539                           ;incstack = 0
 43540  00132A  6AA7               	clrf	167,c	;volatile
 43541                           
 43542                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 43543  00132C  6AA8               	clrf	168,c	;volatile
 43544                           
 43545                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 43546  00132E  0E01               	movlw	1
 43547  001330  6EA9               	movwf	169,c	;volatile
 43548                           
 43549                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 43550  001332  0E3C               	movlw	60
 43551  001334  6EA5               	movwf	165,c	;volatile
 43552                           
 43553                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 43554  001336  0EB0               	movlw	176
 43555  001338  6EA4               	movwf	164,c	;volatile
 43556                           
 43557                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 43558  00133A  50A4               	movf	164,w,c	;volatile
 43559  00133C  006F FE94  F001    	movff	16293,btemp	;volatile
 43560  001342  6A02               	clrf	(btemp+1)^0,c
 43561  001344  0060  F004  F002   	movff	btemp,btemp+1
 43562  00134A  6A01               	clrf	btemp^0,c
 43563  00134C  1001               	iorwf	btemp^0,w,c
 43564  00134E  0100               	movlb	0	; () banked
 43565  001350  6FCA               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 43566  001352  5002               	movf	(btemp+1)^0,w,c
 43567  001354  6FCB               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 43568                           
 43569                           ; BSR set to: 0
 43570                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 43571  001356  0139               	movlb	57	; () banked
 43572  001358  9DA6               	bcf	166,6,b	;volatile
 43573                           
 43574                           ; BSR set to: 57
 43575                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 43576  00135A  8D96               	bsf	150,6,b	;volatile
 43577                           
 43578                           ; BSR set to: 57
 43579                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 43580  00135C  0E68               	movlw	low _TMR3_DefaultInterruptHandler
 43581  00135E  6EE6               	movwf	postinc1,c
 43582  001360  0E20               	movlw	high _TMR3_DefaultInterruptHandler
 43583  001362  6EE6               	movwf	postinc1,c
 43584  001364  0E00               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 43585  001366  6EE6               	movwf	postinc1,c
 43586  001368  EC6B  F00D         	call	_TMR3_SetInterruptHandler	;wreg free
 43587                           
 43588                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 43589  00136C  0E31               	movlw	49
 43590  00136E  6EA6               	movwf	166,c	;volatile
 43591                           
 43592                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43593  001370  0012               	return		;funcret
 43594  001372                     __end_of_TMR3_Initialize:
 43595                           	opt callstack 0
 43596                           
 43597 ;; *************** function _TMR3_SetInterruptHandler *****************
 43598 ;; Defined at:
 43599 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 43600 ;; Parameters:    Size  Location     Type
 43601 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 43602 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 43603 ;; Auto vars:     Size  Location     Type
 43604 ;;		None
 43605 ;; Return value:  Size  Location     Type
 43606 ;;                  1  [STACK] void 
 43607 ;; Registers used:
 43608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 43609 ;; Tracked objects:
 43610 ;;		On entry : 0/2
 43611 ;;		On exit  : 0/0
 43612 ;;		Unchanged: 0/0
 43613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43618 ;;Total ram usage:        0 bytes
 43619 ;; Hardware stack levels used:    1
 43620 ;; Hardware stack levels required when called:   15
 43621 ;; This function calls:
 43622 ;;		Nothing
 43623 ;; This function is called by:
 43624 ;;		_TMR3_Initialize
 43625 ;;		_init_bsoc
 43626 ;; This function uses a reentrant model
 43627 ;;
 43628                           
 43629                           	psect	text164
 43630  001AD6                     __ptext164:
 43631                           	opt callstack 0
 43632  001AD6                     _TMR3_SetInterruptHandler:
 43633                           	opt callstack 14
 43634                           
 43635                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 43636                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 43637                           
 43638                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43639                           ;incstack = 0
 43640  001AD6  50E1               	movf	fsr1l,w,c
 43641  001AD8  0FFD               	addlw	-3
 43642  001ADA  6ED9               	movwf	fsr2l,c
 43643  001ADC  50E2               	movf	fsr1h,w,c
 43644  001ADE  6EDA               	movwf	fsr2h,c
 43645  001AE0  0EFF               	movlw	255
 43646  001AE2  22DA               	addwfc	fsr2h,f,c
 43647  001AE4  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 43648  001AEA  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 43649  001AF0  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 43650                           
 43651                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 43652  001AF6  52E5               	movf	postdec1,f,c
 43653  001AF8  52E5               	movf	postdec1,f,c
 43654  001AFA  52E5               	movf	postdec1,f,c
 43655  001AFC  0012               	return		;funcret
 43656  001AFE                     __end_of_TMR3_SetInterruptHandler:
 43657                           	opt callstack 0
 43658                           
 43659 ;; *************** function _TMR2_Initialize *****************
 43660 ;; Defined at:
 43661 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 43662 ;; Parameters:    Size  Location     Type
 43663 ;;		None
 43664 ;; Auto vars:     Size  Location     Type
 43665 ;;		None
 43666 ;; Return value:  Size  Location     Type
 43667 ;;                  1  [STACK] void 
 43668 ;; Registers used:
 43669 ;;		wreg, status,2
 43670 ;; Tracked objects:
 43671 ;;		On entry : 0/0
 43672 ;;		On exit  : 3F/39
 43673 ;;		Unchanged: 0/0
 43674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43679 ;;Total ram usage:        0 bytes
 43680 ;; Hardware stack levels used:    1
 43681 ;; Hardware stack levels required when called:   15
 43682 ;; This function calls:
 43683 ;;		Nothing
 43684 ;; This function is called by:
 43685 ;;		_SYSTEM_Initialize
 43686 ;; This function uses a reentrant model
 43687 ;;
 43688                           
 43689                           	psect	text165
 43690  001EB6                     __ptext165:
 43691                           	opt callstack 0
 43692  001EB6                     _TMR2_Initialize:
 43693                           	opt callstack 14
 43694                           
 43695                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 43696                           
 43697                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43698                           ;incstack = 0
 43699  001EB6  0E01               	movlw	1
 43700  001EB8  6EAE               	movwf	174,c	;volatile
 43701                           
 43702                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 43703  001EBA  6AAD               	clrf	173,c	;volatile
 43704                           
 43705                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 43706  001EBC  6AAF               	clrf	175,c	;volatile
 43707                           
 43708                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 43709  001EBE  0E63               	movlw	99
 43710  001EC0  6EAB               	movwf	171,c	;volatile
 43711                           
 43712                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 43713  001EC2  6AAA               	clrf	170,c	;volatile
 43714                           
 43715                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 43716  001EC4  0139               	movlb	57	; () banked
 43717  001EC6  95A4               	bcf	164,2,b	;volatile
 43718                           
 43719                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 43720  001EC8  0EC0               	movlw	192
 43721  001ECA  6EAC               	movwf	172,c	;volatile
 43722                           
 43723                           ; BSR set to: 57
 43724                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43725  001ECC  0012               	return		;funcret
 43726  001ECE                     __end_of_TMR2_Initialize:
 43727                           	opt callstack 0
 43728                           
 43729 ;; *************** function _SPI1_Initialize *****************
 43730 ;; Defined at:
 43731 ;;		line 64 in file "mcc_generated_files/spi1.c"
 43732 ;; Parameters:    Size  Location     Type
 43733 ;;		None
 43734 ;; Auto vars:     Size  Location     Type
 43735 ;;		None
 43736 ;; Return value:  Size  Location     Type
 43737 ;;                  1  [STACK] void 
 43738 ;; Registers used:
 43739 ;;		wreg, status,2
 43740 ;; Tracked objects:
 43741 ;;		On entry : 3F/39
 43742 ;;		On exit  : 3F/3D
 43743 ;;		Unchanged: 0/0
 43744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43749 ;;Total ram usage:        0 bytes
 43750 ;; Hardware stack levels used:    1
 43751 ;; Hardware stack levels required when called:   15
 43752 ;; This function calls:
 43753 ;;		Nothing
 43754 ;; This function is called by:
 43755 ;;		_SYSTEM_Initialize
 43756 ;; This function uses a reentrant model
 43757 ;;
 43758                           
 43759                           	psect	text166
 43760  001ECE                     __ptext166:
 43761                           	opt callstack 0
 43762  001ECE                     _SPI1_Initialize:
 43763                           	opt callstack 14
 43764                           
 43765                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 43766                           
 43767                           ; BSR set to: 57
 43768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43769                           ;incstack = 0
 43770  001ECE  0E40               	movlw	64
 43771  001ED0  013D               	movlb	61	; () banked
 43772  001ED2  6F15               	movwf	21,b	;volatile
 43773                           
 43774                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 43775  001ED4  0E03               	movlw	3
 43776  001ED6  6F16               	movwf	22,b	;volatile
 43777                           
 43778                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 43779  001ED8  0E4F               	movlw	79
 43780  001EDA  6F19               	movwf	25,b	;volatile
 43781                           
 43782                           ; BSR set to: 61
 43783                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 43784  001EDC  6B1C               	clrf	28,b	;volatile
 43785                           
 43786                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 43787  001EDE  0E83               	movlw	131
 43788  001EE0  6F14               	movwf	20,b	;volatile
 43789                           
 43790                           ; BSR set to: 61
 43791                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43792  001EE2  0012               	return		;funcret
 43793  001EE4                     __end_of_SPI1_Initialize:
 43794                           	opt callstack 0
 43795                           
 43796 ;; *************** function _PWM8_Initialize *****************
 43797 ;; Defined at:
 43798 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 43799 ;; Parameters:    Size  Location     Type
 43800 ;;		None
 43801 ;; Auto vars:     Size  Location     Type
 43802 ;;		None
 43803 ;; Return value:  Size  Location     Type
 43804 ;;                  1  [STACK] void 
 43805 ;; Registers used:
 43806 ;;		wreg, status,2
 43807 ;; Tracked objects:
 43808 ;;		On entry : 3F/39
 43809 ;;		On exit  : 3F/3F
 43810 ;;		Unchanged: 0/0
 43811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43816 ;;Total ram usage:        0 bytes
 43817 ;; Hardware stack levels used:    1
 43818 ;; Hardware stack levels required when called:   15
 43819 ;; This function calls:
 43820 ;;		Nothing
 43821 ;; This function is called by:
 43822 ;;		_SYSTEM_Initialize
 43823 ;; This function uses a reentrant model
 43824 ;;
 43825                           
 43826                           	psect	text167
 43827  001EE4                     __ptext167:
 43828                           	opt callstack 0
 43829  001EE4                     _PWM8_Initialize:
 43830                           	opt callstack 14
 43831                           
 43832                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 43833                           
 43834                           ; BSR set to: 61
 43835                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43836                           ;incstack = 0
 43837  001EE4  0E80               	movlw	128
 43838  001EE6  6E62               	movwf	98,c	;volatile
 43839                           
 43840                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 43841  001EE8  6A61               	clrf	97,c	;volatile
 43842                           
 43843                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 43844  001EEA  0E40               	movlw	64
 43845  001EEC  6E60               	movwf	96,c	;volatile
 43846                           
 43847                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 43848  001EEE  013F               	movlb	63	; () banked
 43849  001EF0  515F               	movf	95,w,b	;volatile
 43850  001EF2  0B3F               	andlw	-193
 43851  001EF4  0940               	iorlw	64
 43852  001EF6  6F5F               	movwf	95,b	;volatile
 43853                           
 43854                           ; BSR set to: 63
 43855                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 43856  001EF8  0012               	return		;funcret
 43857  001EFA                     __end_of_PWM8_Initialize:
 43858                           	opt callstack 0
 43859                           
 43860 ;; *************** function _PMD_Initialize *****************
 43861 ;; Defined at:
 43862 ;;		line 91 in file "mcc_generated_files/mcc.c"
 43863 ;; Parameters:    Size  Location     Type
 43864 ;;		None
 43865 ;; Auto vars:     Size  Location     Type
 43866 ;;		None
 43867 ;; Return value:  Size  Location     Type
 43868 ;;                  1  [STACK] void 
 43869 ;; Registers used:
 43870 ;;		None
 43871 ;; Tracked objects:
 43872 ;;		On entry : 3F/39
 43873 ;;		On exit  : 3F/39
 43874 ;;		Unchanged: 0/0
 43875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43880 ;;Total ram usage:        0 bytes
 43881 ;; Hardware stack levels used:    1
 43882 ;; Hardware stack levels required when called:   15
 43883 ;; This function calls:
 43884 ;;		Nothing
 43885 ;; This function is called by:
 43886 ;;		_SYSTEM_Initialize
 43887 ;; This function uses a reentrant model
 43888 ;;
 43889                           
 43890                           	psect	text168
 43891  001F10                     __ptext168:
 43892                           	opt callstack 0
 43893  001F10                     _PMD_Initialize:
 43894                           	opt callstack 14
 43895                           
 43896                           ;mcc_generated_files/mcc.c: 94:     PMD0 = 0x00;
 43897                           
 43898                           ; BSR set to: 63
 43899                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43900                           ;incstack = 0
 43901  001F10  0139               	movlb	57	; () banked
 43902  001F12  6BC0               	clrf	192,b	;volatile
 43903                           
 43904                           ;mcc_generated_files/mcc.c: 96:     PMD1 = 0x00;
 43905  001F14  6BC1               	clrf	193,b	;volatile
 43906                           
 43907                           ;mcc_generated_files/mcc.c: 98:     PMD2 = 0x00;
 43908  001F16  6BC2               	clrf	194,b	;volatile
 43909                           
 43910                           ;mcc_generated_files/mcc.c: 100:     PMD3 = 0x00;
 43911  001F18  6BC3               	clrf	195,b	;volatile
 43912                           
 43913                           ;mcc_generated_files/mcc.c: 102:     PMD4 = 0x00;
 43914  001F1A  6BC4               	clrf	196,b	;volatile
 43915                           
 43916                           ;mcc_generated_files/mcc.c: 104:     PMD5 = 0x00;
 43917  001F1C  6BC5               	clrf	197,b	;volatile
 43918                           
 43919                           ;mcc_generated_files/mcc.c: 106:     PMD6 = 0x00;
 43920  001F1E  6BC6               	clrf	198,b	;volatile
 43921                           
 43922                           ;mcc_generated_files/mcc.c: 108:     PMD7 = 0x00;
 43923  001F20  6BC7               	clrf	199,b	;volatile
 43924                           
 43925                           ; BSR set to: 57
 43926                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 43927  001F22  0012               	return		;funcret
 43928  001F24                     __end_of_PMD_Initialize:
 43929                           	opt callstack 0
 43930                           
 43931 ;; *************** function _PIN_MANAGER_Initialize *****************
 43932 ;; Defined at:
 43933 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 43934 ;; Parameters:    Size  Location     Type
 43935 ;;		None
 43936 ;; Auto vars:     Size  Location     Type
 43937 ;;		None
 43938 ;; Return value:  Size  Location     Type
 43939 ;;                  1  [STACK] void 
 43940 ;; Registers used:
 43941 ;;		wreg, status,2
 43942 ;; Tracked objects:
 43943 ;;		On entry : 3F/39
 43944 ;;		On exit  : 3F/3A
 43945 ;;		Unchanged: 0/0
 43946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 43947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 43951 ;;Total ram usage:        0 bytes
 43952 ;; Hardware stack levels used:    1
 43953 ;; Hardware stack levels required when called:   15
 43954 ;; This function calls:
 43955 ;;		Nothing
 43956 ;; This function is called by:
 43957 ;;		_SYSTEM_Initialize
 43958 ;; This function uses a reentrant model
 43959 ;;
 43960                           
 43961                           	psect	text169
 43962  0005A6                     __ptext169:
 43963                           	opt callstack 0
 43964  0005A6                     _PIN_MANAGER_Initialize:
 43965                           	opt callstack 14
 43966                           
 43967                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 43968                           
 43969                           ; BSR set to: 57
 43970                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 43971                           ;incstack = 0
 43972  0005A6  0E07               	movlw	7
 43973  0005A8  6EBE               	movwf	190,c	;volatile
 43974                           
 43975                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 43976  0005AA  6ABD               	clrf	189,c	;volatile
 43977                           
 43978                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 43979  0005AC  6ABA               	clrf	186,c	;volatile
 43980                           
 43981                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 43982  0005AE  0E23               	movlw	35
 43983  0005B0  6EBF               	movwf	191,c	;volatile
 43984                           
 43985                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 43986  0005B2  6ABB               	clrf	187,c	;volatile
 43987                           
 43988                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 43989  0005B4  0E07               	movlw	7
 43990  0005B6  6EBC               	movwf	188,c	;volatile
 43991                           
 43992                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 43993  0005B8  6AC6               	clrf	198,c	;volatile
 43994                           
 43995                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 43996  0005BA  0E0C               	movlw	12
 43997  0005BC  6EC7               	movwf	199,c	;volatile
 43998                           
 43999                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 44000  0005BE  68C2               	setf	194,c	;volatile
 44001                           
 44002                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 44003  0005C0  0EBF               	movlw	191
 44004  0005C2  6EC3               	movwf	195,c	;volatile
 44005                           
 44006                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 44007  0005C4  0E90               	movlw	144
 44008  0005C6  6EC4               	movwf	196,c	;volatile
 44009                           
 44010                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 44011  0005C8  0E0C               	movlw	12
 44012  0005CA  6EC5               	movwf	197,c	;volatile
 44013                           
 44014                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 44015  0005CC  013A               	movlb	58	; () banked
 44016  0005CE  6B70               	clrf	112,b	;volatile
 44017                           
 44018                           ; BSR set to: 58
 44019                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 44020  0005D0  6B60               	clrf	96,b	;volatile
 44021                           
 44022                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 44023  0005D2  0E3C               	movlw	60
 44024  0005D4  6F50               	movwf	80,b	;volatile
 44025                           
 44026                           ; BSR set to: 58
 44027                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 44028  0005D6  6B80               	clrf	128,b	;volatile
 44029                           
 44030                           ; BSR set to: 58
 44031                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 44032  0005D8  6B90               	clrf	144,b	;volatile
 44033                           
 44034                           ; BSR set to: 58
 44035                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 44036  0005DA  6940               	setf	64,b	;volatile
 44037                           
 44038                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 44039  0005DC  0E0C               	movlw	12
 44040  0005DE  6F71               	movwf	113,b	;volatile
 44041                           
 44042                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 44043  0005E0  0E0C               	movlw	12
 44044  0005E2  6F91               	movwf	145,b	;volatile
 44045                           
 44046                           ; BSR set to: 58
 44047                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 44048  0005E4  6B81               	clrf	129,b	;volatile
 44049                           
 44050                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 44051  0005E6  0E83               	movlw	131
 44052  0005E8  6F51               	movwf	81,b	;volatile
 44053                           
 44054                           ; BSR set to: 58
 44055                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 44056  0005EA  6B41               	clrf	65,b	;volatile
 44057                           
 44058                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 44059  0005EC  0E97               	movlw	151
 44060  0005EE  6F61               	movwf	97,b	;volatile
 44061                           
 44062                           ; BSR set to: 58
 44063                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 44064  0005F0  6B82               	clrf	130,b	;volatile
 44065                           
 44066                           ; BSR set to: 58
 44067                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 44068  0005F2  6B92               	clrf	146,b	;volatile
 44069                           
 44070                           ; BSR set to: 58
 44071                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 44072  0005F4  6B42               	clrf	66,b	;volatile
 44073                           
 44074                           ; BSR set to: 58
 44075                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 44076  0005F6  6B52               	clrf	82,b	;volatile
 44077                           
 44078                           ; BSR set to: 58
 44079                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 44080  0005F8  6B62               	clrf	98,b	;volatile
 44081                           
 44082                           ; BSR set to: 58
 44083                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 44084  0005FA  6B72               	clrf	114,b	;volatile
 44085                           
 44086                           ; BSR set to: 58
 44087                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 44088  0005FC  6943               	setf	67,b	;volatile
 44089                           
 44090                           ; BSR set to: 58
 44091                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 44092  0005FE  6953               	setf	83,b	;volatile
 44093                           
 44094                           ; BSR set to: 58
 44095                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 44096  000600  6963               	setf	99,b	;volatile
 44097                           
 44098                           ; BSR set to: 58
 44099                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 44100  000602  6973               	setf	115,b	;volatile
 44101                           
 44102                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 44103  000604  0E07               	movlw	7
 44104  000606  6F83               	movwf	131,b	;volatile
 44105                           
 44106                           ; BSR set to: 58
 44107                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 44108  000608  6993               	setf	147,b	;volatile
 44109                           
 44110                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 44111  00060A  0E0F               	movlw	15
 44112  00060C  6FE8               	movwf	232,b	;volatile
 44113                           
 44114                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 44115  00060E  0E13               	movlw	19
 44116  000610  6FDE               	movwf	222,b	;volatile
 44117                           
 44118                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 44119  000612  0E16               	movlw	22
 44120  000614  6F0E               	movwf	14,b	;volatile
 44121                           
 44122                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 44123  000616  0E1E               	movlw	30
 44124  000618  6F13               	movwf	19,b	;volatile
 44125                           
 44126                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 44127  00061A  0E08               	movlw	8
 44128  00061C  6FC0               	movwf	192,b	;volatile
 44129                           
 44130                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 44131  00061E  0E10               	movlw	16
 44132  000620  6F19               	movwf	25,b	;volatile
 44133                           
 44134                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 44135  000622  0E09               	movlw	9
 44136  000624  6FC1               	movwf	193,b	;volatile
 44137                           
 44138                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 44139  000626  0E1F               	movlw	31
 44140  000628  6F15               	movwf	21,b	;volatile
 44141                           
 44142                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 44143  00062A  0E13               	movlw	19
 44144  00062C  6F16               	movwf	22,b	;volatile
 44145                           
 44146                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 44147  00062E  0E17               	movlw	23
 44148  000630  6FE5               	movwf	229,b	;volatile
 44149                           
 44150                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 44151  000632  0E14               	movlw	20
 44152  000634  6FDF               	movwf	223,b	;volatile
 44153                           
 44154                           ; BSR set to: 58
 44155                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 44156  000636  0012               	return		;funcret
 44157  000638                     __end_of_PIN_MANAGER_Initialize:
 44158                           	opt callstack 0
 44159                           
 44160 ;; *************** function _OSCILLATOR_Initialize *****************
 44161 ;; Defined at:
 44162 ;;		line 73 in file "mcc_generated_files/mcc.c"
 44163 ;; Parameters:    Size  Location     Type
 44164 ;;		None
 44165 ;; Auto vars:     Size  Location     Type
 44166 ;;		None
 44167 ;; Return value:  Size  Location     Type
 44168 ;;                  1  [STACK] void 
 44169 ;; Registers used:
 44170 ;;		wreg, status,2
 44171 ;; Tracked objects:
 44172 ;;		On entry : 3F/3A
 44173 ;;		On exit  : 3F/39
 44174 ;;		Unchanged: 0/0
 44175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44180 ;;Total ram usage:        0 bytes
 44181 ;; Hardware stack levels used:    1
 44182 ;; Hardware stack levels required when called:   15
 44183 ;; This function calls:
 44184 ;;		Nothing
 44185 ;; This function is called by:
 44186 ;;		_SYSTEM_Initialize
 44187 ;; This function uses a reentrant model
 44188 ;;
 44189                           
 44190                           	psect	text170
 44191  001EFA                     __ptext170:
 44192                           	opt callstack 0
 44193  001EFA                     _OSCILLATOR_Initialize:
 44194                           	opt callstack 14
 44195                           
 44196                           ;mcc_generated_files/mcc.c: 76:     OSCCON1 = 0x20;
 44197                           
 44198                           ; BSR set to: 58
 44199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44200                           ;incstack = 0
 44201  001EFA  0E20               	movlw	32
 44202  001EFC  0139               	movlb	57	; () banked
 44203  001EFE  6FD9               	movwf	217,b	;volatile
 44204                           
 44205                           ; BSR set to: 57
 44206                           ;mcc_generated_files/mcc.c: 78:     OSCCON3 = 0x00;
 44207  001F00  6BDB               	clrf	219,b	;volatile
 44208                           
 44209                           ; BSR set to: 57
 44210                           ;mcc_generated_files/mcc.c: 80:     OSCEN = 0x00;
 44211  001F02  6BDD               	clrf	221,b	;volatile
 44212                           
 44213                           ;mcc_generated_files/mcc.c: 82:     OSCFRQ = 0x02;
 44214  001F04  0E02               	movlw	2
 44215  001F06  6FDF               	movwf	223,b	;volatile
 44216                           
 44217                           ; BSR set to: 57
 44218                           ;mcc_generated_files/mcc.c: 84:     OSCTUNE = 0x00;
 44219  001F08  6BDE               	clrf	222,b	;volatile
 44220  001F0A                     l171:
 44221                           
 44222                           ; BSR set to: 57
 44223                           ;mcc_generated_files/mcc.c: 86:     while(PLLR == 0)
 44224  001F0A  B1DC               	btfsc	220,0,b	;volatile
 44225  001F0C  0012               	return	
 44226  001F0E  D7FD               	goto	l171
 44227  001F10                     __end_of_OSCILLATOR_Initialize:
 44228                           	opt callstack 0
 44229                           
 44230 ;; *************** function _INTERRUPT_Initialize *****************
 44231 ;; Defined at:
 44232 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 44233 ;; Parameters:    Size  Location     Type
 44234 ;;		None
 44235 ;; Auto vars:     Size  Location     Type
 44236 ;;  state           1  [STACK] _Bool 
 44237 ;; Return value:  Size  Location     Type
 44238 ;;                  1  [STACK] void 
 44239 ;; Registers used:
 44240 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 44241 ;; Tracked objects:
 44242 ;;		On entry : 0/0
 44243 ;;		On exit  : 3F/39
 44244 ;;		Unchanged: 0/0
 44245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44250 ;;Total ram usage:        0 bytes
 44251 ;; Hardware stack levels used:    1
 44252 ;; Hardware stack levels required when called:   15
 44253 ;; This function calls:
 44254 ;;		Nothing
 44255 ;; This function is called by:
 44256 ;;		_SYSTEM_Initialize
 44257 ;; This function uses a reentrant model
 44258 ;;
 44259                           
 44260                           	psect	text171
 44261  000CB4                     __ptext171:
 44262                           	opt callstack 0
 44263  000CB4                     _INTERRUPT_Initialize:
 44264                           	opt callstack 0
 44265                           
 44266                           ; BSR set to: 57
 44267                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44268  000CB4  52E6               	movf	postinc1,f,c
 44269                           
 44270                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 44271                           
 44272                           ;incstack = 0
 44273  000CB6  8AD2               	bsf	210,5,c	;volatile
 44274                           
 44275                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 44276  000CB8  AED2               	btfss	16338,7,c	;volatile
 44277  000CBA  D003               	goto	u12350
 44278  000CBC  6A0C               	clrf	(btemp+11)^0,c
 44279  000CBE  2A0C               	incf	(btemp+11)^0,f,c
 44280  000CC0  D001               	goto	u12368
 44281  000CC2                     u12350:
 44282  000CC2  6A0C               	clrf	(btemp+11)^0,c
 44283  000CC4                     u12368:
 44284                           
 44285                           ;stkvar	_state @ sp[(-1)+0]
 44286  000CC4  0EFF               	movlw	-1
 44287  000CC6  0060  F033  FFE3   	movff	btemp+11,plusw1
 44288                           
 44289                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 44290  000CCC  9ED2               	bcf	16338,7,c	;volatile
 44291                           
 44292                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 44293  000CCE  0E55               	movlw	85
 44294  000CD0  6ED4               	movwf	212,c	;volatile
 44295                           
 44296                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 44297  000CD2  0EAA               	movlw	170
 44298  000CD4  6ED4               	movwf	212,c	;volatile
 44299                           
 44300                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 44301  000CD6  90D4               	bcf	212,0,c	;volatile
 44302                           
 44303                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 44304  000CD8  0138               	movlb	56	; () banked
 44305  000CDA  6B9F               	clrf	159,b	;volatile
 44306                           
 44307                           ; BSR set to: 56
 44308                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 44309  000CDC  6B9E               	clrf	158,b	;volatile
 44310                           
 44311                           ; BSR set to: 56
 44312                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 44313  000CDE  0E08               	movlw	8
 44314  000CE0  6F9D               	movwf	157,b	;volatile
 44315                           
 44316                           ; BSR set to: 56
 44317                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 44318  000CE2  0E55               	movlw	85
 44319  000CE4  6ED4               	movwf	212,c	;volatile
 44320                           
 44321                           ; BSR set to: 56
 44322                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 44323  000CE6  0EAA               	movlw	170
 44324  000CE8  6ED4               	movwf	212,c	;volatile
 44325                           
 44326                           ; BSR set to: 56
 44327                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 44328  000CEA  80D4               	bsf	212,0,c	;volatile
 44329                           
 44330                           ; BSR set to: 56
 44331                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 44332                           ;stkvar	_state @ sp[(-1)+0]
 44333  000CEC  0EFF               	movlw	-1
 44334  000CEE  B0E3               	btfsc	plusw1,0,c
 44335  000CF0  D002               	bra	u12375
 44336  000CF2  9ED2               	bcf	16338,7,c	;volatile
 44337  000CF4  D001               	bra	u12376
 44338  000CF6                     u12375:
 44339  000CF6  8ED2               	bsf	16338,7,c	;volatile
 44340  000CF8                     u12376:
 44341                           
 44342                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 44343  000CF8  0139               	movlb	57	; () banked
 44344  000CFA  8782               	bsf	130,3,b	;volatile
 44345                           
 44346                           ; BSR set to: 57
 44347                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 44348  000CFC  8382               	bsf	130,1,b	;volatile
 44349                           
 44350                           ; BSR set to: 57
 44351                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 44352  000CFE  8182               	bsf	130,0,b	;volatile
 44353                           
 44354                           ; BSR set to: 57
 44355                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 44356  000D00  8582               	bsf	130,2,b	;volatile
 44357                           
 44358                           ; BSR set to: 57
 44359                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 44360  000D02  8786               	bsf	134,3,b	;volatile
 44361                           
 44362                           ; BSR set to: 57
 44363                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 44364  000D04  8586               	bsf	134,2,b	;volatile
 44365                           
 44366                           ; BSR set to: 57
 44367                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 44368  000D06  8783               	bsf	131,3,b	;volatile
 44369                           
 44370                           ; BSR set to: 57
 44371                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 44372  000D08  8181               	bsf	129,0,b	;volatile
 44373                           
 44374                           ; BSR set to: 57
 44375                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 44376  000D0A  9185               	bcf	133,0,b	;volatile
 44377                           
 44378                           ; BSR set to: 57
 44379                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 44380  000D0C  8189               	bsf	137,0,b	;volatile
 44381                           
 44382                           ; BSR set to: 57
 44383                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 44384  000D0E  9D88               	bcf	136,6,b	;volatile
 44385                           
 44386                           ; BSR set to: 57
 44387                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 44388  000D10  8581               	bsf	129,2,b	;volatile
 44389                           
 44390                           ; BSR set to: 57
 44391                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 44392  000D12  8781               	bsf	129,3,b	;volatile
 44393                           
 44394                           ; BSR set to: 57
 44395                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 44396  000D14  9D86               	bcf	134,6,b	;volatile
 44397                           
 44398                           ; BSR set to: 57
 44399                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 44400  000D16  52E5               	movf	postdec1,f,c
 44401  000D18  0012               	return		;funcret
 44402  000D1A                     __end_of_INTERRUPT_Initialize:
 44403                           	opt callstack 0
 44404                           
 44405 ;; *************** function _FVR_Initialize *****************
 44406 ;; Defined at:
 44407 ;;		line 58 in file "mcc_generated_files/fvr.c"
 44408 ;; Parameters:    Size  Location     Type
 44409 ;;		None
 44410 ;; Auto vars:     Size  Location     Type
 44411 ;;		None
 44412 ;; Return value:  Size  Location     Type
 44413 ;;                  1  [STACK] void 
 44414 ;; Registers used:
 44415 ;;		wreg, status,2
 44416 ;; Tracked objects:
 44417 ;;		On entry : 3F/39
 44418 ;;		On exit  : 3F/3E
 44419 ;;		Unchanged: 0/0
 44420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44425 ;;Total ram usage:        0 bytes
 44426 ;; Hardware stack levels used:    1
 44427 ;; Hardware stack levels required when called:   15
 44428 ;; This function calls:
 44429 ;;		Nothing
 44430 ;; This function is called by:
 44431 ;;		_SYSTEM_Initialize
 44432 ;; This function uses a reentrant model
 44433 ;;
 44434                           
 44435                           	psect	text172
 44436  00203A                     __ptext172:
 44437                           	opt callstack 0
 44438  00203A                     _FVR_Initialize:
 44439                           	opt callstack 14
 44440                           
 44441                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 44442                           
 44443                           ; BSR set to: 57
 44444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44445                           ;incstack = 0
 44446  00203A  0EAF               	movlw	175
 44447  00203C  013E               	movlb	62	; () banked
 44448  00203E  6FC1               	movwf	193,b	;volatile
 44449                           
 44450                           ; BSR set to: 62
 44451                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 44452  002040  0012               	return		;funcret
 44453  002042                     __end_of_FVR_Initialize:
 44454                           	opt callstack 0
 44455                           
 44456 ;; *************** function _EXT_INT_Initialize *****************
 44457 ;; Defined at:
 44458 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 44459 ;; Parameters:    Size  Location     Type
 44460 ;;		None
 44461 ;; Auto vars:     Size  Location     Type
 44462 ;;		None
 44463 ;; Return value:  Size  Location     Type
 44464 ;;                  1  [STACK] void 
 44465 ;; Registers used:
 44466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44467 ;; Tracked objects:
 44468 ;;		On entry : 3F/3F
 44469 ;;		On exit  : 3F/39
 44470 ;;		Unchanged: 0/0
 44471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44476 ;;Total ram usage:        0 bytes
 44477 ;; Hardware stack levels used:    1
 44478 ;; Hardware stack levels required when called:   16
 44479 ;; This function calls:
 44480 ;;		_INT0_SetInterruptHandler
 44481 ;;		_INT1_SetInterruptHandler
 44482 ;; This function is called by:
 44483 ;;		_SYSTEM_Initialize
 44484 ;; This function uses a reentrant model
 44485 ;;
 44486                           
 44487                           	psect	text173
 44488  0017BA                     __ptext173:
 44489                           	opt callstack 0
 44490  0017BA                     _EXT_INT_Initialize:
 44491                           	opt callstack 13
 44492                           
 44493                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 44494                           
 44495                           ; BSR set to: 62
 44496                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44497                           ;incstack = 0
 44498  0017BA  0139               	movlb	57	; () banked
 44499  0017BC  91A1               	bcf	161,0,b	;volatile
 44500                           
 44501                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 44502  0017BE  90D2               	bcf	210,0,c	;volatile
 44503                           
 44504                           ; BSR set to: 57
 44505                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 44506  0017C0  0E6A               	movlw	low _INT0_DefaultInterruptHandler
 44507  0017C2  6EE6               	movwf	postinc1,c
 44508  0017C4  0E20               	movlw	high _INT0_DefaultInterruptHandler
 44509  0017C6  6EE6               	movwf	postinc1,c
 44510  0017C8  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 44511  0017CA  6EE6               	movwf	postinc1,c
 44512  0017CC  EC93  F00D         	call	_INT0_SetInterruptHandler	;wreg free
 44513                           
 44514                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 44515  0017D0  0139               	movlb	57	; () banked
 44516  0017D2  8191               	bsf	145,0,b	;volatile
 44517                           
 44518                           ; BSR set to: 57
 44519                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 44520  0017D4  91A5               	bcf	165,0,b	;volatile
 44521                           
 44522                           ; BSR set to: 57
 44523                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 44524  0017D6  92D2               	bcf	210,1,c	;volatile
 44525                           
 44526                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 44527  0017D8  0E66               	movlw	low _INT1_DefaultInterruptHandler
 44528  0017DA  6EE6               	movwf	postinc1,c
 44529  0017DC  0E20               	movlw	high _INT1_DefaultInterruptHandler
 44530  0017DE  6EE6               	movwf	postinc1,c
 44531  0017E0  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 44532  0017E2  6EE6               	movwf	postinc1,c
 44533  0017E4  EC7F  F00D         	call	_INT1_SetInterruptHandler	;wreg free
 44534                           
 44535                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 44536  0017E8  0139               	movlb	57	; () banked
 44537  0017EA  8195               	bsf	149,0,b	;volatile
 44538                           
 44539                           ; BSR set to: 57
 44540                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 44541  0017EC  0012               	return		;funcret
 44542  0017EE                     __end_of_EXT_INT_Initialize:
 44543                           	opt callstack 0
 44544                           
 44545 ;; *************** function _INT1_SetInterruptHandler *****************
 44546 ;; Defined at:
 44547 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 44548 ;; Parameters:    Size  Location     Type
 44549 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44550 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 44551 ;; Auto vars:     Size  Location     Type
 44552 ;;		None
 44553 ;; Return value:  Size  Location     Type
 44554 ;;                  1  [STACK] void 
 44555 ;; Registers used:
 44556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44557 ;; Tracked objects:
 44558 ;;		On entry : 3F/39
 44559 ;;		On exit  : 0/0
 44560 ;;		Unchanged: 0/0
 44561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44566 ;;Total ram usage:        0 bytes
 44567 ;; Hardware stack levels used:    1
 44568 ;; Hardware stack levels required when called:   15
 44569 ;; This function calls:
 44570 ;;		Nothing
 44571 ;; This function is called by:
 44572 ;;		_EXT_INT_Initialize
 44573 ;;		_start_switch_handler
 44574 ;; This function uses a reentrant model
 44575 ;;
 44576                           
 44577                           	psect	text174
 44578  001AFE                     __ptext174:
 44579                           	opt callstack 0
 44580  001AFE                     _INT1_SetInterruptHandler:
 44581                           	opt callstack 14
 44582                           
 44583                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 44584                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44585                           
 44586                           ; BSR set to: 57
 44587                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44588                           ;incstack = 0
 44589  001AFE  50E1               	movf	fsr1l,w,c
 44590  001B00  0FFD               	addlw	-3
 44591  001B02  6ED9               	movwf	fsr2l,c
 44592  001B04  50E2               	movf	fsr1h,w,c
 44593  001B06  6EDA               	movwf	fsr2h,c
 44594  001B08  0EFF               	movlw	255
 44595  001B0A  22DA               	addwfc	fsr2h,f,c
 44596  001B0C  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 44597  001B12  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 44598  001B18  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 44599                           
 44600                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44601  001B1E  52E5               	movf	postdec1,f,c
 44602  001B20  52E5               	movf	postdec1,f,c
 44603  001B22  52E5               	movf	postdec1,f,c
 44604  001B24  0012               	return		;funcret
 44605  001B26                     __end_of_INT1_SetInterruptHandler:
 44606                           	opt callstack 0
 44607                           
 44608 ;; *************** function _INT0_SetInterruptHandler *****************
 44609 ;; Defined at:
 44610 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 44611 ;; Parameters:    Size  Location     Type
 44612 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 44613 ;;		 -> INT0_DefaultInterruptHandler(1), 
 44614 ;; Auto vars:     Size  Location     Type
 44615 ;;		None
 44616 ;; Return value:  Size  Location     Type
 44617 ;;                  1  [STACK] void 
 44618 ;; Registers used:
 44619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 44620 ;; Tracked objects:
 44621 ;;		On entry : 3F/39
 44622 ;;		On exit  : 0/0
 44623 ;;		Unchanged: 0/0
 44624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44629 ;;Total ram usage:        0 bytes
 44630 ;; Hardware stack levels used:    1
 44631 ;; Hardware stack levels required when called:   15
 44632 ;; This function calls:
 44633 ;;		Nothing
 44634 ;; This function is called by:
 44635 ;;		_EXT_INT_Initialize
 44636 ;; This function uses a reentrant model
 44637 ;;
 44638                           
 44639                           	psect	text175
 44640  001B26                     __ptext175:
 44641                           	opt callstack 0
 44642  001B26                     _INT0_SetInterruptHandler:
 44643                           	opt callstack 13
 44644                           
 44645                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 44646                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 44647                           
 44648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44649                           ;incstack = 0
 44650  001B26  50E1               	movf	fsr1l,w,c
 44651  001B28  0FFD               	addlw	-3
 44652  001B2A  6ED9               	movwf	fsr2l,c
 44653  001B2C  50E2               	movf	fsr1h,w,c
 44654  001B2E  6EDA               	movwf	fsr2h,c
 44655  001B30  0EFF               	movlw	255
 44656  001B32  22DA               	addwfc	fsr2h,f,c
 44657  001B34  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 44658  001B3A  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 44659  001B40  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 44660                           
 44661                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 44662  001B46  52E5               	movf	postdec1,f,c
 44663  001B48  52E5               	movf	postdec1,f,c
 44664  001B4A  52E5               	movf	postdec1,f,c
 44665  001B4C  0012               	return		;funcret
 44666  001B4E                     __end_of_INT0_SetInterruptHandler:
 44667                           	opt callstack 0
 44668                           
 44669 ;; *************** function _DMA2_Initialize *****************
 44670 ;; Defined at:
 44671 ;;		line 61 in file "mcc_generated_files/dma2.c"
 44672 ;; Parameters:    Size  Location     Type
 44673 ;;		None
 44674 ;; Auto vars:     Size  Location     Type
 44675 ;;		None
 44676 ;; Return value:  Size  Location     Type
 44677 ;;                  1  [STACK] void 
 44678 ;; Registers used:
 44679 ;;		wreg, status,2
 44680 ;; Tracked objects:
 44681 ;;		On entry : 3F/3D
 44682 ;;		On exit  : 3F/3B
 44683 ;;		Unchanged: 0/0
 44684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44689 ;;Total ram usage:        0 bytes
 44690 ;; Hardware stack levels used:    1
 44691 ;; Hardware stack levels required when called:   15
 44692 ;; This function calls:
 44693 ;;		Nothing
 44694 ;; This function is called by:
 44695 ;;		_SYSTEM_Initialize
 44696 ;; This function uses a reentrant model
 44697 ;;
 44698                           
 44699                           	psect	text176
 44700  001018                     __ptext176:
 44701                           	opt callstack 0
 44702  001018                     _DMA2_Initialize:
 44703                           	opt callstack 14
 44704                           
 44705                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 44706                           
 44707                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44708                           ;incstack = 0
 44709  001018  0E00               	movlw	0
 44710  00101A  013B               	movlb	59	; () banked
 44711  00101C  6FD9               	movwf	217,b	;volatile
 44712  00101E  0E10               	movlw	16
 44713  001020  6FDA               	movwf	218,b	;volatile
 44714  001022  0E00               	movlw	0
 44715  001024  6FDB               	movwf	219,b	;volatile
 44716                           
 44717                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 44718  001026  0E3F               	movlw	63
 44719  001028  6FD1               	movwf	209,b	;volatile
 44720  00102A  0EBB               	movlw	187
 44721  00102C  6FD0               	movwf	208,b	;volatile
 44722                           
 44723                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 44724  00102E  0E03               	movlw	3
 44725  001030  6FDD               	movwf	221,b	;volatile
 44726                           
 44727                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 44728  001032  0E00               	movlw	0
 44729  001034  6FD8               	movwf	216,b	;volatile
 44730  001036  0E01               	movlw	1
 44731  001038  6FD7               	movwf	215,b	;volatile
 44732                           
 44733                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 44734  00103A  0E00               	movlw	0
 44735  00103C  6FCF               	movwf	207,b	;volatile
 44736  00103E  0E01               	movlw	1
 44737  001040  6FCE               	movwf	206,b	;volatile
 44738                           
 44739                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 44740  001042  0E1C               	movlw	28
 44741  001044  6FDF               	movwf	223,b	;volatile
 44742                           
 44743                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 44744  001046  0E3D               	movlw	61
 44745  001048  6FDE               	movwf	222,b	;volatile
 44746                           
 44747                           ; BSR set to: 59
 44748                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 44749  00104A  0139               	movlb	57	; () banked
 44750  00104C  97A5               	bcf	165,3,b	;volatile
 44751                           
 44752                           ; BSR set to: 57
 44753                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 44754  00104E  95A5               	bcf	165,2,b	;volatile
 44755                           
 44756                           ; BSR set to: 57
 44757                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 44758  001050  9BA5               	bcf	165,5,b	;volatile
 44759                           
 44760                           ; BSR set to: 57
 44761                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 44762  001052  99A5               	bcf	165,4,b	;volatile
 44763                           
 44764                           ; BSR set to: 57
 44765                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 44766  001054  9795               	bcf	149,3,b	;volatile
 44767                           
 44768                           ; BSR set to: 57
 44769                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 44770  001056  9595               	bcf	149,2,b	;volatile
 44771                           
 44772                           ; BSR set to: 57
 44773                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 44774  001058  9B95               	bcf	149,5,b	;volatile
 44775                           
 44776                           ; BSR set to: 57
 44777                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 44778  00105A  9995               	bcf	149,4,b	;volatile
 44779  00105C  9ED2               	bcf	16338,7,c	;# 
 44780  00105E  0139               	banksel	14831	;# 
 44781  001060  0E55               	movlw	85	;# 
 44782  001062  6FEF               	movwf	14831,b	;# 
 44783  001064  0EAA               	movlw	170	;# 
 44784  001066  6FEF               	movwf	14831,b	;# 
 44785  001068  81EF               	bsf	14831,0,b	;# 
 44786  00106A  8ED2               	bsf	16338,7,c	;# 
 44787                           
 44788                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 44789  00106C  013B               	movlb	59	; () banked
 44790  00106E  6BDC               	clrf	220,b	;volatile
 44791                           
 44792                           ; BSR set to: 59
 44793                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44794  001070  0012               	return		;funcret
 44795  001072                     __end_of_DMA2_Initialize:
 44796                           	opt callstack 0
 44797                           
 44798 ;; *************** function _DMA1_Initialize *****************
 44799 ;; Defined at:
 44800 ;;		line 86 in file "mcc_generated_files/dma1.c"
 44801 ;; Parameters:    Size  Location     Type
 44802 ;;		None
 44803 ;; Auto vars:     Size  Location     Type
 44804 ;;		None
 44805 ;; Return value:  Size  Location     Type
 44806 ;;                  1  [STACK] void 
 44807 ;; Registers used:
 44808 ;;		wreg, status,2
 44809 ;; Tracked objects:
 44810 ;;		On entry : 3F/3B
 44811 ;;		On exit  : 3F/3B
 44812 ;;		Unchanged: 0/0
 44813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44818 ;;Total ram usage:        0 bytes
 44819 ;; Hardware stack levels used:    1
 44820 ;; Hardware stack levels required when called:   15
 44821 ;; This function calls:
 44822 ;;		Nothing
 44823 ;; This function is called by:
 44824 ;;		_SYSTEM_Initialize
 44825 ;; This function uses a reentrant model
 44826 ;;
 44827                           
 44828                           	psect	text177
 44829  000AA6                     __ptext177:
 44830                           	opt callstack 0
 44831  000AA6                     _DMA1_Initialize:
 44832                           	opt callstack 14
 44833                           
 44834                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 44835                           
 44836                           ; BSR set to: 59
 44837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44838                           ;incstack = 0
 44839  000AA6  0E00               	movlw	0
 44840  000AA8  013B               	movlb	59	; () banked
 44841  000AAA  6FF9               	movwf	249,b	;volatile
 44842  000AAC  0E10               	movlw	16
 44843  000AAE  6FFA               	movwf	250,b	;volatile
 44844  000AB0  0E00               	movlw	0
 44845  000AB2  6FFB               	movwf	251,b	;volatile
 44846                           
 44847                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 44848  000AB4  0E3D               	movlw	61
 44849  000AB6  6FF1               	movwf	241,b	;volatile
 44850  000AB8  0E11               	movlw	17
 44851  000ABA  6FF0               	movwf	240,b	;volatile
 44852                           
 44853                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 44854  000ABC  0E03               	movlw	3
 44855  000ABE  6FFD               	movwf	253,b	;volatile
 44856                           
 44857                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 44858  000AC0  0E00               	movlw	0
 44859  000AC2  6FF8               	movwf	248,b	;volatile
 44860  000AC4  0E01               	movlw	1
 44861  000AC6  6FF7               	movwf	247,b	;volatile
 44862                           
 44863                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 44864  000AC8  0E00               	movlw	0
 44865  000ACA  6FEF               	movwf	239,b	;volatile
 44866  000ACC  0E01               	movlw	1
 44867  000ACE  6FEE               	movwf	238,b	;volatile
 44868                           
 44869                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 44870  000AD0  0E15               	movlw	21
 44871  000AD2  6FFF               	movwf	255,b	;volatile
 44872                           
 44873                           ; BSR set to: 59
 44874                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 44875  000AD4  6BFE               	clrf	254,b	;volatile
 44876                           
 44877                           ; BSR set to: 59
 44878                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 44879  000AD6  0139               	movlb	57	; () banked
 44880  000AD8  93A2               	bcf	162,1,b	;volatile
 44881                           
 44882                           ; BSR set to: 57
 44883                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 44884  000ADA  91A2               	bcf	162,0,b	;volatile
 44885                           
 44886                           ; BSR set to: 57
 44887                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 44888  000ADC  97A2               	bcf	162,3,b	;volatile
 44889                           
 44890                           ; BSR set to: 57
 44891                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 44892  000ADE  95A2               	bcf	162,2,b	;volatile
 44893                           
 44894                           ; BSR set to: 57
 44895                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 44896  000AE0  8392               	bsf	146,1,b	;volatile
 44897                           
 44898                           ; BSR set to: 57
 44899                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 44900  000AE2  8192               	bsf	146,0,b	;volatile
 44901                           
 44902                           ; BSR set to: 57
 44903                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 44904  000AE4  8792               	bsf	146,3,b	;volatile
 44905                           
 44906                           ; BSR set to: 57
 44907                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 44908  000AE6  8592               	bsf	146,2,b	;volatile
 44909                           
 44910                           ; BSR set to: 57
 44911                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 44912  000AE8  6BF1               	clrf	241,b	;volatile
 44913                           
 44914                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 44915  000AEA  0E01               	movlw	1
 44916  000AEC  6FF2               	movwf	242,b	;volatile
 44917                           
 44918                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 44919  000AEE  0E04               	movlw	4
 44920  000AF0  6FF3               	movwf	243,b	;volatile
 44921                           
 44922                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 44923  000AF2  0E02               	movlw	2
 44924  000AF4  6FF4               	movwf	244,b	;volatile
 44925                           
 44926                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 44927  000AF6  0E03               	movlw	3
 44928  000AF8  6FF7               	movwf	247,b	;volatile
 44929  000AFA  9ED2               	bcf	16338,7,c	;# 
 44930  000AFC  0139               	banksel	14831	;# 
 44931  000AFE  0E55               	movlw	85	;# 
 44932  000B00  6FEF               	movwf	14831,b	;# 
 44933  000B02  0EAA               	movlw	170	;# 
 44934  000B04  6FEF               	movwf	14831,b	;# 
 44935  000B06  81EF               	bsf	14831,0,b	;# 
 44936  000B08  8ED2               	bsf	16338,7,c	;# 
 44937                           
 44938                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 44939  000B0A  013B               	movlb	59	; () banked
 44940  000B0C  6BFC               	clrf	252,b	;volatile
 44941                           
 44942                           ; BSR set to: 59
 44943                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 44944  000B0E  0012               	return		;funcret
 44945  000B10                     __end_of_DMA1_Initialize:
 44946                           	opt callstack 0
 44947                           
 44948 ;; *************** function _CRC_Initialize *****************
 44949 ;; Defined at:
 44950 ;;		line 76 in file "mcc_generated_files/crc.c"
 44951 ;; Parameters:    Size  Location     Type
 44952 ;;		None
 44953 ;; Auto vars:     Size  Location     Type
 44954 ;;  seed            2  [STACK] unsigned short 
 44955 ;;  poly            2  [STACK] unsigned short 
 44956 ;; Return value:  Size  Location     Type
 44957 ;;                  1  [STACK] void 
 44958 ;; Registers used:
 44959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 44960 ;; Tracked objects:
 44961 ;;		On entry : 0/39
 44962 ;;		On exit  : 3F/0
 44963 ;;		Unchanged: 0/0
 44964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 44965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 44969 ;;Total ram usage:        0 bytes
 44970 ;; Hardware stack levels used:    1
 44971 ;; Hardware stack levels required when called:   15
 44972 ;; This function calls:
 44973 ;;		Nothing
 44974 ;; This function is called by:
 44975 ;;		_SYSTEM_Initialize
 44976 ;;		_read_cal_data
 44977 ;;		_write_cal_data
 44978 ;; This function uses a reentrant model
 44979 ;;
 44980                           
 44981                           	psect	text178
 44982  000638                     __ptext178:
 44983                           	opt callstack 0
 44984  000638                     _CRC_Initialize:
 44985                           	opt callstack 0
 44986                           
 44987                           ; BSR set to: 59
 44988                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 44989  000638  52E6               	movf	postinc1,f,c
 44990  00063A  52E6               	movf	postinc1,f,c
 44991  00063C  52E6               	movf	postinc1,f,c
 44992  00063E  52E6               	movf	postinc1,f,c
 44993                           
 44994                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 44995                           
 44996                           ;incstack = 0
 44997  000640  0E80               	movlw	128
 44998  000642  0139               	movlb	57	; () banked
 44999  000644  6F68               	movwf	104,b	;volatile
 45000                           
 45001                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (0 << 4) | (7);
 45002  000646  0E07               	movlw	7
 45003  000648  6F69               	movwf	105,b	;volatile
 45004                           
 45005                           ; BSR set to: 57
 45006                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 45007  00064A  6B62               	clrf	98,b	;volatile
 45008                           
 45009                           ; BSR set to: 57
 45010                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 45011  00064C  6B63               	clrf	99,b	;volatile
 45012                           
 45013                           ; BSR set to: 57
 45014                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 45015  00064E  6B7C               	clrf	124,b	;volatile
 45016                           
 45017                           ; BSR set to: 57
 45018                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 45019  000650  6B78               	clrf	120,b	;volatile
 45020                           
 45021                           ; BSR set to: 57
 45022                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 45023  000652  6B77               	clrf	119,b	;volatile
 45024                           
 45025                           ; BSR set to: 57
 45026                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 45027  000654  6B76               	clrf	118,b	;volatile
 45028                           
 45029                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 45030  000656  0E3F               	movlw	63
 45031  000658  6F7B               	movwf	123,b	;volatile
 45032                           
 45033                           ; BSR set to: 57
 45034                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 45035  00065A  697A               	setf	122,b	;volatile
 45036                           
 45037                           ; BSR set to: 57
 45038                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 45039  00065C  6979               	setf	121,b	;volatile
 45040                           
 45041                           ; BSR set to: 57
 45042                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 45043  00065E  6B7D               	clrf	125,b	;volatile
 45044                           
 45045                           ; BSR set to: 57
 45046                           ;mcc_generated_files/crc.c: 106:     poly = 213;
 45047  000660  0ED5               	movlw	213
 45048  000662  6E0B               	movwf	(btemp+10)^0,c
 45049  000664  0E00               	movlw	0
 45050  000666  6E0C               	movwf	(btemp+11)^0,c
 45051                           
 45052                           ;stkvar	_poly @ sp[(-4)+2]
 45053  000668  0EFE               	movlw	-2
 45054  00066A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 45055  000670  0EFF               	movlw	-1
 45056  000672  0060  F033  FFE3   	movff	btemp+11,plusw1
 45057                           
 45058                           ; BSR set to: 57
 45059                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 45060                           ;stkvar	_poly @ sp[(-4)+2]
 45061  000678  0EFF               	movlw	255
 45062  00067A  24E1               	addwf	fsr1l,w,c
 45063  00067C  6ED9               	movwf	fsr2l,c
 45064  00067E  0EFF               	movlw	255
 45065  000680  20E2               	addwfc	fsr1h,w,c
 45066  000682  6EDA               	movwf	fsr2h,c
 45067  000684  50DF               	movf	indf2,w,c
 45068  000686  6F67               	movwf	103,b	;volatile
 45069                           
 45070                           ; BSR set to: 57
 45071                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 45072  000688  0ED5               	movlw	213
 45073  00068A  6F66               	movwf	102,b	;volatile
 45074                           
 45075                           ; BSR set to: 57
 45076                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 45077                           ;stkvar	_seed @ sp[(-4)+0]
 45078  00068C  0EFC               	movlw	-4
 45079  00068E  6AE3               	clrf	plusw1,c
 45080  000690  0EFD               	movlw	-3
 45081  000692  6AE3               	clrf	plusw1,c
 45082                           
 45083                           ; BSR set to: 57
 45084                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 45085                           ;stkvar	_seed @ sp[(-4)+0]
 45086  000694  0EFD               	movlw	253
 45087  000696  24E1               	addwf	fsr1l,w,c
 45088  000698  6ED9               	movwf	fsr2l,c
 45089  00069A  0EFF               	movlw	255
 45090  00069C  20E2               	addwfc	fsr1h,w,c
 45091  00069E  6EDA               	movwf	fsr2h,c
 45092  0006A0  50DF               	movf	indf2,w,c
 45093  0006A2  6F63               	movwf	99,b	;volatile
 45094                           
 45095                           ; BSR set to: 57
 45096                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 45097  0006A4  6B62               	clrf	98,b	;volatile
 45098                           
 45099                           ; BSR set to: 57
 45100                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 45101  0006A6  3969               	swapf	105,w,b	;volatile
 45102  0006A8  0B0F               	andlw	15
 45103  0006AA  6E0C               	movwf	(btemp+11)^0,c
 45104  0006AC  280C               	incf	(btemp+11)^0,w,c
 45105  0006AE  0100               	movlb	0	; () banked
 45106  0006B0  6FE4               	movwf	_crcObj& (0+255),b
 45107                           
 45108                           ; BSR set to: 0
 45109                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 45110  0006B2  0139               	movlb	57	; () banked
 45111  0006B4  5169               	movf	105,w,b	;volatile
 45112  0006B6  0B0F               	andlw	15
 45113  0006B8  6E0C               	movwf	(btemp+11)^0,c
 45114  0006BA  280C               	incf	(btemp+11)^0,w,c
 45115  0006BC  0100               	movlb	0	; () banked
 45116  0006BE  6FE5               	movwf	(_crcObj+1)& (0+255),b
 45117                           
 45118                           ; BSR set to: 0
 45119                           ; _CRC_Initialize: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45120  0006C0  52E5               	movf	postdec1,f,c
 45121  0006C2  52E5               	movf	postdec1,f,c
 45122  0006C4  52E5               	movf	postdec1,f,c
 45123  0006C6  52E5               	movf	postdec1,f,c
 45124  0006C8  0012               	return		;funcret
 45125  0006CA                     __end_of_CRC_Initialize:
 45126                           	opt callstack 0
 45127                           
 45128 ;; *************** function _CLKREF_Initialize *****************
 45129 ;; Defined at:
 45130 ;;		line 58 in file "mcc_generated_files/clkref.c"
 45131 ;; Parameters:    Size  Location     Type
 45132 ;;		None
 45133 ;; Auto vars:     Size  Location     Type
 45134 ;;		None
 45135 ;; Return value:  Size  Location     Type
 45136 ;;                  1  [STACK] void 
 45137 ;; Registers used:
 45138 ;;		wreg, status,2
 45139 ;; Tracked objects:
 45140 ;;		On entry : 3F/3B
 45141 ;;		On exit  : 3F/3C
 45142 ;;		Unchanged: 0/0
 45143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45148 ;;Total ram usage:        0 bytes
 45149 ;; Hardware stack levels used:    1
 45150 ;; Hardware stack levels required when called:   15
 45151 ;; This function calls:
 45152 ;;		Nothing
 45153 ;; This function is called by:
 45154 ;;		_SYSTEM_Initialize
 45155 ;; This function uses a reentrant model
 45156 ;;
 45157                           
 45158                           	psect	text179
 45159  001FE2                     __ptext179:
 45160                           	opt callstack 0
 45161  001FE2                     _CLKREF_Initialize:
 45162                           	opt callstack 14
 45163                           
 45164                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 45165                           
 45166                           ; BSR set to: 0
 45167                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45168                           ;incstack = 0
 45169  001FE2  013C               	movlb	60	; () banked
 45170  001FE4  6BE6               	clrf	230,b	;volatile
 45171                           
 45172                           ; BSR set to: 60
 45173                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 45174  001FE6  0E94               	movlw	148
 45175  001FE8  6FE5               	movwf	229,b	;volatile
 45176                           
 45177                           ; BSR set to: 60
 45178                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 45179  001FEA  0012               	return		;funcret
 45180  001FEC                     __end_of_CLKREF_Initialize:
 45181                           	opt callstack 0
 45182                           
 45183 ;; *************** function _ADCC_Initialize *****************
 45184 ;; Defined at:
 45185 ;;		line 65 in file "mcc_generated_files/adcc.c"
 45186 ;; Parameters:    Size  Location     Type
 45187 ;;		None
 45188 ;; Auto vars:     Size  Location     Type
 45189 ;;		None
 45190 ;; Return value:  Size  Location     Type
 45191 ;;                  1  [STACK] void 
 45192 ;; Registers used:
 45193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 45194 ;; Tracked objects:
 45195 ;;		On entry : 3F/0
 45196 ;;		On exit  : 0/0
 45197 ;;		Unchanged: 0/0
 45198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45203 ;;Total ram usage:        0 bytes
 45204 ;; Hardware stack levels used:    1
 45205 ;; Hardware stack levels required when called:   16
 45206 ;; This function calls:
 45207 ;;		_ADCC_SetADIInterruptHandler
 45208 ;;		_ADCC_SetADTIInterruptHandler
 45209 ;; This function is called by:
 45210 ;;		_SYSTEM_Initialize
 45211 ;; This function uses a reentrant model
 45212 ;;
 45213                           
 45214                           	psect	text180
 45215  000B10                     __ptext180:
 45216                           	opt callstack 0
 45217  000B10                     _ADCC_Initialize:
 45218                           	opt callstack 13
 45219                           
 45220                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 45221                           
 45222                           ; BSR set to: 60
 45223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45224                           ;incstack = 0
 45225  000B10  013E               	movlb	62	; () banked
 45226  000B12  6BDE               	clrf	222,b	;volatile
 45227                           
 45228                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 45229  000B14  6BDF               	clrf	223,b	;volatile
 45230                           
 45231                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 45232  000B16  6BE0               	clrf	224,b	;volatile
 45233                           
 45234                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 45235  000B18  6BE1               	clrf	225,b	;volatile
 45236                           
 45237                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 45238  000B1A  6BE4               	clrf	228,b	;volatile
 45239                           
 45240                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 45241  000B1C  6BE5               	clrf	229,b	;volatile
 45242                           
 45243                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 45244  000B1E  6BEA               	clrf	234,b	;volatile
 45245                           
 45246                           ; BSR set to: 62
 45247                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 45248  000B20  0E40               	movlw	64
 45249  000B22  6FEC               	movwf	236,b	;volatile
 45250                           
 45251                           ; BSR set to: 62
 45252                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 45253  000B24  6BF1               	clrf	241,b	;volatile
 45254                           
 45255                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 45256  000B26  0E20               	movlw	32
 45257  000B28  6FF3               	movwf	243,b	;volatile
 45258                           
 45259                           ; BSR set to: 62
 45260                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 45261  000B2A  6BF4               	clrf	244,b	;volatile
 45262                           
 45263                           ; BSR set to: 62
 45264                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 45265  000B2C  6BF5               	clrf	245,b	;volatile
 45266                           
 45267                           ; BSR set to: 62
 45268                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 45269  000B2E  6BF6               	clrf	246,b	;volatile
 45270                           
 45271                           ; BSR set to: 62
 45272                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 45273  000B30  6BF7               	clrf	247,b	;volatile
 45274                           
 45275                           ; BSR set to: 62
 45276                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 45277  000B32  6BF9               	clrf	249,b	;volatile
 45278                           
 45279                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 45280  000B34  0E5B               	movlw	91
 45281  000B36  6FFA               	movwf	250,b	;volatile
 45282                           
 45283                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 45284  000B38  0E27               	movlw	39
 45285  000B3A  6FFB               	movwf	251,b	;volatile
 45286                           
 45287                           ; BSR set to: 62
 45288                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 45289  000B3C  6BFC               	clrf	252,b	;volatile
 45290                           
 45291                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 45292  000B3E  0E02               	movlw	2
 45293  000B40  6FFD               	movwf	253,b	;volatile
 45294                           
 45295                           ; BSR set to: 62
 45296                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 45297  000B42  6BFE               	clrf	254,b	;volatile
 45298                           
 45299                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 45300  000B44  0E07               	movlw	7
 45301  000B46  6FFF               	movwf	255,b	;volatile
 45302                           
 45303                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 45304  000B48  0E84               	movlw	132
 45305  000B4A  6FF8               	movwf	248,b	;volatile
 45306                           
 45307                           ; BSR set to: 62
 45308                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 45309  000B4C  0139               	movlb	57	; () banked
 45310  000B4E  95A1               	bcf	161,2,b	;volatile
 45311                           
 45312                           ; BSR set to: 57
 45313                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 45314  000B50  8591               	bsf	145,2,b	;volatile
 45315                           
 45316                           ; BSR set to: 57
 45317                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 45318  000B52  0E6C               	movlw	low _ADCC_DefaultInterruptHandler
 45319  000B54  6EE6               	movwf	postinc1,c
 45320  000B56  0E20               	movlw	high _ADCC_DefaultInterruptHandler
 45321  000B58  6EE6               	movwf	postinc1,c
 45322  000B5A  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 45323  000B5C  6EE6               	movwf	postinc1,c
 45324  000B5E  ECBB  F00D         	call	_ADCC_SetADIInterruptHandler	;wreg free
 45325                           
 45326                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 45327  000B62  0139               	movlb	57	; () banked
 45328  000B64  97A1               	bcf	161,3,b	;volatile
 45329                           
 45330                           ; BSR set to: 57
 45331                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 45332  000B66  8791               	bsf	145,3,b	;volatile
 45333                           
 45334                           ; BSR set to: 57
 45335                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 45336  000B68  0E6C               	movlw	low _ADCC_DefaultInterruptHandler
 45337  000B6A  6EE6               	movwf	postinc1,c
 45338  000B6C  0E20               	movlw	high _ADCC_DefaultInterruptHandler
 45339  000B6E  6EE6               	movwf	postinc1,c
 45340  000B70  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 45341  000B72  6EE6               	movwf	postinc1,c
 45342  000B74  ECA7  F00D         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 45343                           
 45344                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 45345  000B78  0012               	return		;funcret
 45346  000B7A                     __end_of_ADCC_Initialize:
 45347                           	opt callstack 0
 45348                           
 45349 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 45350 ;; Defined at:
 45351 ;;		line 336 in file "mcc_generated_files/adcc.c"
 45352 ;; Parameters:    Size  Location     Type
 45353 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45354 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 45355 ;; Auto vars:     Size  Location     Type
 45356 ;;		None
 45357 ;; Return value:  Size  Location     Type
 45358 ;;                  1  [STACK] void 
 45359 ;; Registers used:
 45360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45361 ;; Tracked objects:
 45362 ;;		On entry : 0/2
 45363 ;;		On exit  : 0/0
 45364 ;;		Unchanged: 0/0
 45365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45370 ;;Total ram usage:        0 bytes
 45371 ;; Hardware stack levels used:    1
 45372 ;; Hardware stack levels required when called:   15
 45373 ;; This function calls:
 45374 ;;		Nothing
 45375 ;; This function is called by:
 45376 ;;		_ADCC_Initialize
 45377 ;;		_start_adc_scan
 45378 ;; This function uses a reentrant model
 45379 ;;
 45380                           
 45381                           	psect	text181
 45382  001B4E                     __ptext181:
 45383                           	opt callstack 0
 45384  001B4E                     _ADCC_SetADTIInterruptHandler:
 45385                           	opt callstack 14
 45386                           
 45387                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 45388                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45389                           
 45390                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45391                           ;incstack = 0
 45392  001B4E  50E1               	movf	fsr1l,w,c
 45393  001B50  0FFD               	addlw	-3
 45394  001B52  6ED9               	movwf	fsr2l,c
 45395  001B54  50E2               	movf	fsr1h,w,c
 45396  001B56  6EDA               	movwf	fsr2h,c
 45397  001B58  0EFF               	movlw	255
 45398  001B5A  22DA               	addwfc	fsr2h,f,c
 45399  001B5C  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 45400  001B62  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 45401  001B68  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 45402                           
 45403                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 45404  001B6E  52E5               	movf	postdec1,f,c
 45405  001B70  52E5               	movf	postdec1,f,c
 45406  001B72  52E5               	movf	postdec1,f,c
 45407  001B74  0012               	return		;funcret
 45408  001B76                     __end_of_ADCC_SetADTIInterruptHandler:
 45409                           	opt callstack 0
 45410                           
 45411 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 45412 ;; Defined at:
 45413 ;;		line 323 in file "mcc_generated_files/adcc.c"
 45414 ;; Parameters:    Size  Location     Type
 45415 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 45416 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 45417 ;; Auto vars:     Size  Location     Type
 45418 ;;		None
 45419 ;; Return value:  Size  Location     Type
 45420 ;;                  1  [STACK] void 
 45421 ;; Registers used:
 45422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 45423 ;; Tracked objects:
 45424 ;;		On entry : 4/2
 45425 ;;		On exit  : 0/0
 45426 ;;		Unchanged: 0/0
 45427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45432 ;;Total ram usage:        0 bytes
 45433 ;; Hardware stack levels used:    1
 45434 ;; Hardware stack levels required when called:   15
 45435 ;; This function calls:
 45436 ;;		Nothing
 45437 ;; This function is called by:
 45438 ;;		_ADCC_Initialize
 45439 ;;		_start_adc_scan
 45440 ;; This function uses a reentrant model
 45441 ;;
 45442                           
 45443                           	psect	text182
 45444  001B76                     __ptext182:
 45445                           	opt callstack 0
 45446  001B76                     _ADCC_SetADIInterruptHandler:
 45447                           	opt callstack 14
 45448                           
 45449                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 45450                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 45451                           
 45452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45453                           ;incstack = 0
 45454  001B76  50E1               	movf	fsr1l,w,c
 45455  001B78  0FFD               	addlw	-3
 45456  001B7A  6ED9               	movwf	fsr2l,c
 45457  001B7C  50E2               	movf	fsr1h,w,c
 45458  001B7E  6EDA               	movwf	fsr2h,c
 45459  001B80  0EFF               	movlw	255
 45460  001B82  22DA               	addwfc	fsr2h,f,c
 45461  001B84  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 45462  001B8A  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 45463  001B90  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 45464                           
 45465                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 45466  001B96  52E5               	movf	postdec1,f,c
 45467  001B98  52E5               	movf	postdec1,f,c
 45468  001B9A  52E5               	movf	postdec1,f,c
 45469  001B9C  0012               	return		;funcret
 45470  001B9E                     __end_of_ADCC_SetADIInterruptHandler:
 45471                           	opt callstack 0
 45472                           
 45473 ;; *************** function _INT1_ISR *****************
 45474 ;; Defined at:
 45475 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 45476 ;; Parameters:    Size  Location     Type
 45477 ;;		None
 45478 ;; Auto vars:     Size  Location     Type
 45479 ;;		None
 45480 ;; Return value:  Size  Location     Type
 45481 ;;                  1    wreg      void 
 45482 ;; Registers used:
 45483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 45484 ;; Tracked objects:
 45485 ;;		On entry : 0/0
 45486 ;;		On exit  : 0/0
 45487 ;;		Unchanged: 0/0
 45488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45491 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45492 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45493 ;;Total ram usage:        4 bytes
 45494 ;; Hardware stack levels used:    1
 45495 ;; Hardware stack levels required when called:    5
 45496 ;; This function calls:
 45497 ;;		_INT1_CallBack
 45498 ;; This function is called by:
 45499 ;;		Interrupt level 1
 45500 ;; This function uses a non-reentrant model
 45501 ;;
 45502                           
 45503                           	psect	text183
 45504  0015C4                     __ptext183:
 45505                           	opt callstack 0
 45506  0015C4                     _INT1_ISR:
 45507                           	opt callstack 11
 45508                           
 45509                           ;incstack = 0
 45510  0015C4  006F FF60  F027    	movff	status,??_INT1_ISR
 45511  0015CA  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 45512  0015D0  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 45513  0015D6  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 45514  0015DC  EE16  F19B         	lfsr	1,___intlo_sp
 45515                           
 45516                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 45517  0015E0  0139               	movlb	57	; () banked
 45518  0015E2  91A5               	bcf	165,0,b	;volatile
 45519                           
 45520                           ; BSR set to: 57
 45521                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 45522  0015E4  EC1E  F00E         	call	_INT1_CallBack	;wreg free
 45523  0015E8  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 45524  0015EE  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 45525  0015F4  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 45526  0015FA  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 45527  001600  0011               	retfie		f
 45528  001602                     __end_of_INT1_ISR:
 45529                           	opt callstack 0
 45530                           
 45531 ;; *************** function _INT1_CallBack *****************
 45532 ;; Defined at:
 45533 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 45534 ;; Parameters:    Size  Location     Type
 45535 ;;		None
 45536 ;; Auto vars:     Size  Location     Type
 45537 ;;		None
 45538 ;; Return value:  Size  Location     Type
 45539 ;;                  1  [STACK] void 
 45540 ;; Registers used:
 45541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 45542 ;; Tracked objects:
 45543 ;;		On entry : 3F/39
 45544 ;;		On exit  : 0/0
 45545 ;;		Unchanged: 0/0
 45546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45551 ;;Total ram usage:        0 bytes
 45552 ;; Hardware stack levels used:    1
 45553 ;; Hardware stack levels required when called:    4
 45554 ;; This function calls:
 45555 ;;		Absolute function
 45556 ;;		_INT1_DefaultInterruptHandler
 45557 ;;		_switch_handler
 45558 ;; This function is called by:
 45559 ;;		_INT1_ISR
 45560 ;; This function uses a reentrant model
 45561 ;;
 45562                           
 45563                           	psect	text184
 45564  001C3C                     __ptext184:
 45565                           	opt callstack 0
 45566  001C3C                     _INT1_CallBack:
 45567                           	opt callstack 11
 45568                           
 45569                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 45570                           
 45571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45572                           ;incstack = 0
 45573  001C3C  0100               	movlb	0	; () banked
 45574  001C3E  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 45575  001C40  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 45576  001C42  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 45577  001C44  B4D8               	btfsc	status,2,c
 45578  001C46  0012               	return	
 45579                           
 45580                           ; BSR set to: 0
 45581                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 45582  001C48  D801               	call	u1308_28
 45583  001C4A  0012               	return	
 45584  001C4C                     u1308_28:
 45585  001C4C  0005               	push	
 45586  001C4E  6EFA               	movwf	pclath,c
 45587  001C50  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 45588  001C52  6EFD               	movwf	tosl,c
 45589  001C54  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 45590  001C56  6EFE               	movwf	tosh,c
 45591  001C58  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 45592  001C5A  6EFF               	movwf	tosu,c
 45593  001C5C  50FA               	movf	pclath,w,c
 45594  001C5E  0012               	return		;indir
 45595  001C60                     __end_of_INT1_CallBack:
 45596                           	opt callstack 0
 45597                           
 45598 ;; *************** function _INT1_DefaultInterruptHandler *****************
 45599 ;; Defined at:
 45600 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 45601 ;; Parameters:    Size  Location     Type
 45602 ;;		None
 45603 ;; Auto vars:     Size  Location     Type
 45604 ;;		None
 45605 ;; Return value:  Size  Location     Type
 45606 ;;                  1  [STACK] void 
 45607 ;; Registers used:
 45608 ;;		None
 45609 ;; Tracked objects:
 45610 ;;		On entry : 3F/0
 45611 ;;		On exit  : 0/0
 45612 ;;		Unchanged: 0/0
 45613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45618 ;;Total ram usage:        0 bytes
 45619 ;; Hardware stack levels used:    1
 45620 ;; Hardware stack levels required when called:    3
 45621 ;; This function calls:
 45622 ;;		Nothing
 45623 ;; This function is called by:
 45624 ;;		_EXT_INT_Initialize
 45625 ;;		_INT1_CallBack
 45626 ;; This function uses a reentrant model
 45627 ;;
 45628                           
 45629                           	psect	text185
 45630  002066                     __ptext185:
 45631                           	opt callstack 0
 45632  002066                     _INT1_DefaultInterruptHandler:
 45633                           	opt callstack 11
 45634                           
 45635                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 45636                           
 45637                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45638                           ;incstack = 0
 45639  002066  0012               	return		;funcret
 45640  002068                     __end_of_INT1_DefaultInterruptHandler:
 45641                           	opt callstack 0
 45642                           
 45643 ;; *************** function _switch_handler *****************
 45644 ;; Defined at:
 45645 ;;		line 58 in file "dio.c"
 45646 ;; Parameters:    Size  Location     Type
 45647 ;;		None
 45648 ;; Auto vars:     Size  Location     Type
 45649 ;;  i               1  [STACK] unsigned char 
 45650 ;;  sw_value        1  [STACK] unsigned char 
 45651 ;; Return value:  Size  Location     Type
 45652 ;;                  1  [STACK] void 
 45653 ;; Registers used:
 45654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 45655 ;; Tracked objects:
 45656 ;;		On entry : 3F/0
 45657 ;;		On exit  : 0/0
 45658 ;;		Unchanged: 0/0
 45659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45664 ;;Total ram usage:        0 bytes
 45665 ;; Hardware stack levels used:    1
 45666 ;; Hardware stack levels required when called:    3
 45667 ;; This function calls:
 45668 ;;		Nothing
 45669 ;; This function is called by:
 45670 ;;		_start_switch_handler
 45671 ;;		_INT1_CallBack
 45672 ;; This function uses a reentrant model
 45673 ;;
 45674                           
 45675                           	psect	text186
 45676  01E67A                     __ptext186:
 45677                           	opt callstack 0
 45678  01E67A                     _switch_handler:
 45679                           	opt callstack 0
 45680                           
 45681                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45682  01E67A  52E6               	movf	postinc1,f,c
 45683  01E67C  52E6               	movf	postinc1,f,c
 45684                           
 45685                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 45686                           ;stkvar	_i @ sp[(-2)+0]
 45687                           
 45688                           ;incstack = 0
 45689  01E67E  0EFE               	movlw	-2
 45690  01E680  6AE3               	clrf	plusw1,c
 45691  01E682  9ABF               	bcf	191,5,c	;volatile
 45692                           
 45693                           ;dio.c: 72:  __nop();
 45694  01E684  F000               	nop	
 45695                           
 45696                           ;dio.c: 73:  __nop();
 45697  01E686  F000               	nop	
 45698                           
 45699                           ;dio.c: 74:  __nop();
 45700  01E688  F000               	nop	
 45701                           
 45702                           ;dio.c: 75:  __nop();
 45703  01E68A  F000               	nop	
 45704                           
 45705                           ;dio.c: 76:  __nop();
 45706  01E68C  F000               	nop	
 45707                           
 45708                           ;dio.c: 77:  __nop();
 45709  01E68E  F000               	nop	
 45710  01E690  D016               	goto	l13669
 45711  01E692                     l13655:
 45712                           
 45713                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 45714  01E692  A6CF               	btfss	207,3,c	;volatile
 45715  01E694  D00E               	goto	u1274_20
 45716  01E696  D00A               	goto	u1274_21
 45717  01E698                     u1272_28:
 45718                           
 45719                           ;stkvar	_sw_value @ sp[(-2)+1]
 45720  01E698  0EFF               	movlw	-1
 45721  01E69A  0060  F033  FFE3   	movff	btemp+11,plusw1
 45722                           
 45723                           ;dio.c: 83:    break;
 45724  01E6A0  D027               	goto	l13671
 45725  01E6A2                     l13657:
 45726                           
 45727                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 45728  01E6A2  A4CF               	btfss	207,2,c	;volatile
 45729  01E6A4  D006               	goto	u1274_20
 45730  01E6A6  D002               	goto	u1274_21
 45731  01E6A8                     l13659:
 45732                           
 45733                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 45734  01E6A8  A6CD               	btfss	205,3,c	;volatile
 45735  01E6AA  D003               	goto	u1274_20
 45736  01E6AC                     u1274_21:
 45737  01E6AC  6A0C               	clrf	(btemp+11)^0,c
 45738  01E6AE  2A0C               	incf	(btemp+11)^0,f,c
 45739  01E6B0  D7F3               	goto	u1272_28
 45740  01E6B2                     u1274_20:
 45741  01E6B2  6A0C               	clrf	(btemp+11)^0,c
 45742  01E6B4  D7F1               	goto	u1272_28
 45743  01E6B6                     l13661:
 45744                           
 45745                           ;dio.c: 91:    sw_value = 1;
 45746                           ;stkvar	_sw_value @ sp[(-2)+1]
 45747  01E6B6  0EFF               	movlw	-1
 45748  01E6B8  6AE3               	clrf	plusw1,c
 45749  01E6BA  2AE3               	incf	plusw1,f,c
 45750                           
 45751                           ;dio.c: 92:    break;
 45752  01E6BC  D019               	goto	l13671
 45753  01E6BE                     l13669:
 45754                           
 45755                           ;stkvar	_i @ sp[(-2)+0]
 45756  01E6BE  0EFE               	movlw	-2
 45757  01E6C0  50E3               	movf	plusw1,w,c
 45758  01E6C2  6E0B               	movwf	(btemp+10)^0,c
 45759  01E6C4  6A0C               	clrf	(btemp+11)^0,c
 45760                           
 45761                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 45762                           ; Switch size 1, requested type "simple"
 45763                           ; Number of cases is 1, Range of values is 0 to 0
 45764                           ; switch strategies available:
 45765                           ; Name         Instructions Cycles
 45766                           ; simple_byte            4     3 (average)
 45767                           ;	Chosen strategy is simple_byte
 45768  01E6C6  500C               	movf	(btemp+11)^0,w,c
 45769  01E6C8  0A00               	xorlw	0	; case 0
 45770  01E6CA  A4D8               	btfss	status,2,c
 45771  01E6CC  D7F4               	goto	l13661
 45772                           
 45773                           ; Switch size 1, requested type "simple"
 45774                           ; Number of cases is 5, Range of values is 0 to 4
 45775                           ; switch strategies available:
 45776                           ; Name         Instructions Cycles
 45777                           ; simple_byte           16     9 (average)
 45778                           ;	Chosen strategy is simple_byte
 45779  01E6CE  500B               	movf	(btemp+10)^0,w,c
 45780  01E6D0  0A00               	xorlw	0	; case 0
 45781  01E6D2  B4D8               	btfsc	status,2,c
 45782  01E6D4  D7F0               	goto	l13661
 45783  01E6D6  0A01               	xorlw	1	; case 1
 45784  01E6D8  B4D8               	btfsc	status,2,c
 45785  01E6DA  D7ED               	goto	l13661
 45786  01E6DC  0A03               	xorlw	3	; case 2
 45787  01E6DE  B4D8               	btfsc	status,2,c
 45788  01E6E0  D7E0               	goto	l13657
 45789  01E6E2  0A01               	xorlw	1	; case 3
 45790  01E6E4  B4D8               	btfsc	status,2,c
 45791  01E6E6  D7D5               	goto	l13655
 45792  01E6E8  0A07               	xorlw	7	; case 4
 45793  01E6EA  B4D8               	btfsc	status,2,c
 45794  01E6EC  D7DD               	goto	l13659
 45795  01E6EE  D7E3               	goto	l13661
 45796  01E6F0                     l13671:
 45797                           
 45798                           ;dio.c: 102:   if (sw_value) {
 45799                           ;stkvar	_sw_value @ sp[(-2)+1]
 45800  01E6F0  0EFF               	movlw	-1
 45801  01E6F2  50E3               	movf	plusw1,w,c
 45802  01E6F4  B4D8               	btfsc	status,2,c
 45803  01E6F6  D018               	goto	l13677
 45804                           
 45805                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 45806                           ;stkvar	_i @ sp[(-2)+0]
 45807  01E6F8  0EFE               	movlw	-2
 45808  01E6FA  50E3               	movf	plusw1,w,c
 45809  01E6FC  0D05               	mullw	5
 45810  01E6FE  0EAB               	movlw	low _S
 45811  01E700  24F3               	addwf	243,w,c
 45812  01E702  6ED9               	movwf	fsr2l,c
 45813  01E704  0E02               	movlw	high _S
 45814  01E706  20F4               	addwfc	prodh,w,c
 45815  01E708  6EDA               	movwf	fsr2h,c
 45816  01E70A  04DE               	decf	postinc2,w,c
 45817  01E70C  A4D8               	btfss	status,2,c
 45818  01E70E  D049               	goto	l13685
 45819                           
 45820                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 45821                           ;stkvar	_i @ sp[(-2)+0]
 45822  01E710  0EFE               	movlw	-2
 45823  01E712  50E3               	movf	plusw1,w,c
 45824  01E714  0D05               	mullw	5
 45825  01E716  0EAB               	movlw	low _S
 45826  01E718  24F3               	addwf	243,w,c
 45827  01E71A  6ED9               	movwf	fsr2l,c
 45828  01E71C  0E02               	movlw	high _S
 45829  01E71E  20F4               	addwfc	prodh,w,c
 45830  01E720  6EDA               	movwf	fsr2h,c
 45831  01E722  0E00               	movlw	0
 45832  01E724  6EDF               	movwf	indf2,c
 45833  01E726  D03D               	goto	l13685
 45834  01E728                     l13677:
 45835                           
 45836                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 45837                           ;stkvar	_i @ sp[(-2)+0]
 45838  01E728  0EFE               	movlw	-2
 45839  01E72A  50E3               	movf	plusw1,w,c
 45840  01E72C  0D05               	mullw	5
 45841  01E72E  0EAB               	movlw	low _S
 45842  01E730  24F3               	addwf	243,w,c
 45843  01E732  6ED9               	movwf	fsr2l,c
 45844  01E734  0E02               	movlw	high _S
 45845  01E736  20F4               	addwfc	prodh,w,c
 45846  01E738  6EDA               	movwf	fsr2h,c
 45847  01E73A  50DF               	movf	indf2,w,c
 45848  01E73C  A4D8               	btfss	status,2,c
 45849  01E73E  D031               	goto	l13685
 45850                           
 45851                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 45852                           ;stkvar	_i @ sp[(-2)+0]
 45853  01E740  0EFE               	movlw	-2
 45854  01E742  50E3               	movf	plusw1,w,c
 45855  01E744  0D05               	mullw	5
 45856  01E746  0EAB               	movlw	low _S
 45857  01E748  24F3               	addwf	243,w,c
 45858  01E74A  6ED9               	movwf	fsr2l,c
 45859  01E74C  0E02               	movlw	high _S
 45860  01E74E  20F4               	addwfc	prodh,w,c
 45861  01E750  6EDA               	movwf	fsr2h,c
 45862  01E752  0E01               	movlw	1
 45863  01E754  6EDF               	movwf	indf2,c
 45864                           
 45865                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 45866  01E756  EE20  F1C3         	lfsr	2,_V+188	;volatile
 45867                           
 45868                           ;stkvar	_i @ sp[(-2)+0]
 45869  01E75A  0EFE               	movlw	-2
 45870  01E75C  50E3               	movf	plusw1,w,c
 45871  01E75E  0D05               	mullw	5
 45872  01E760  0EAC               	movlw	low (_S+1)
 45873  01E762  24F3               	addwf	243,w,c
 45874  01E764  6EE9               	movwf	fsr0l,c
 45875  01E766  0E02               	movlw	high (_S+1)
 45876  01E768  20F4               	addwfc	prodh,w,c
 45877  01E76A  6EEA               	movwf	fsr0h,c
 45878  01E76C  006F FF7B FFEE     	movff	postinc2,postinc0
 45879  01E772  006F FF7B FFEE     	movff	postinc2,postinc0
 45880  01E778  006F FF7B FFEE     	movff	postinc2,postinc0
 45881  01E77E  006F FF7B FFEE     	movff	postinc2,postinc0
 45882                           
 45883                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 45884                           ;stkvar	_i @ sp[(-2)+0]
 45885  01E784  0EFE               	movlw	-2
 45886  01E786  006F FF8C  F00C    	movff	plusw1,btemp+11
 45887  01E78C  0E01               	movlw	1
 45888  01E78E  6E0B               	movwf	(btemp+10)^0,c
 45889  01E790  2A0C               	incf	(btemp+11)^0,f,c
 45890  01E792  D002               	goto	u1278_24
 45891  01E794                     u1278_25:
 45892  01E794  90D8               	bcf	status,0,c
 45893  01E796  360B               	rlcf	(btemp+10)^0,f,c
 45894  01E798                     u1278_24:
 45895  01E798  2E0C               	decfsz	(btemp+11)^0,f,c
 45896  01E79A  D7FC               	goto	u1278_25
 45897  01E79C  500B               	movf	(btemp+10)^0,w,c
 45898  01E79E  0102               	movlb	2	; () banked
 45899  01E7A0  13D3               	iorwf	(_S+40)& (0+255),f,b	;volatile
 45900  01E7A2                     l13685:
 45901                           
 45902                           ;dio.c: 113:  } while (++i < 6);
 45903                           ;stkvar	_i @ sp[(-2)+0]
 45904  01E7A2  0EFE               	movlw	-2
 45905  01E7A4  2AE3               	incf	plusw1,f,c
 45906  01E7A6  0EFE               	movlw	-2
 45907  01E7A8  006F FF8C  F001    	movff	plusw1,btemp
 45908  01E7AE  0E05               	movlw	5
 45909  01E7B0  6401               	cpfsgt	btemp^0,c
 45910  01E7B2  D785               	goto	l13669
 45911                           
 45912                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 45913  01E7B4  8ABF               	bsf	191,5,c	;volatile
 45914                           
 45915                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 45916  01E7B6  52E5               	movf	postdec1,f,c
 45917  01E7B8  52E5               	movf	postdec1,f,c
 45918  01E7BA  0012               	return		;funcret
 45919  01E7BC                     __end_of_switch_handler:
 45920                           	opt callstack 0
 45921                           
 45922 ;; *************** function _TMR5_ISR *****************
 45923 ;; Defined at:
 45924 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 45925 ;; Parameters:    Size  Location     Type
 45926 ;;		None
 45927 ;; Auto vars:     Size  Location     Type
 45928 ;;		None
 45929 ;; Return value:  Size  Location     Type
 45930 ;;                  1    wreg      void 
 45931 ;; Registers used:
 45932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 45933 ;; Tracked objects:
 45934 ;;		On entry : 0/0
 45935 ;;		On exit  : 3F/0
 45936 ;;		Unchanged: 0/0
 45937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 45938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45940 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45941 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 45942 ;;Total ram usage:       15 bytes
 45943 ;; Hardware stack levels used:    1
 45944 ;; Hardware stack levels required when called:    9
 45945 ;; This function calls:
 45946 ;;		_TMR5_CallBack
 45947 ;;		_TMR5_WriteTimer
 45948 ;; This function is called by:
 45949 ;;		Interrupt level 1
 45950 ;; This function uses a non-reentrant model
 45951 ;;
 45952                           
 45953                           	psect	text187
 45954  01F65C                     __ptext187:
 45955                           	opt callstack 0
 45956  01F65C                     _TMR5_ISR:
 45957                           	opt callstack 7
 45958                           
 45959                           ;incstack = 0
 45960  01F65C  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 45961  01F662  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 45962  01F668  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 45963  01F66E  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 45964  01F674  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 45965  01F67A  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 45966  01F680  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 45967  01F686  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 45968  01F68C  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 45969  01F692  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 45970  01F698  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 45971  01F69E  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 45972  01F6A4  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 45973  01F6AA  EE16  F19B         	lfsr	1,___intlo_sp
 45974                           
 45975                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 45976  01F6AE  0139               	movlb	57	; () banked
 45977  01F6B0  9DA8               	bcf	168,6,b	;volatile
 45978                           
 45979                           ; BSR set to: 57
 45980                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 45981  01F6B2  0060  F33B  FFE6   	movff	_timer5ReloadVal,postinc1
 45982  01F6B8  0060  F33F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 45983  01F6BE  ECA2  F00A         	call	_TMR5_WriteTimer	;wreg free
 45984                           
 45985                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 45986  01F6C2  0101               	movlb	1	; () banked
 45987  01F6C4  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 45988  01F6C6  6E2B               	movwf	??_TMR5_ISR^0,c
 45989  01F6C8  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 45990  01F6CA  0E05               	movlw	5
 45991  01F6CC  262B               	addwf	??_TMR5_ISR^0,f,c
 45992  01F6CE  0E00               	movlw	0
 45993  01F6D0  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 45994  01F6D2  0100               	movlb	0	; () banked
 45995  01F6D4  4BCC               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 45996  01F6D6  2BCD               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 45997  01F6D8  502B               	movf	??_TMR5_ISR^0,w,c
 45998  01F6DA  5DCC               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 45999  01F6DC  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 46000  01F6DE  59CD               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 46001  01F6E0  A0D8               	btfss	status,0,c
 46002  01F6E2  D005               	goto	i1l1021
 46003                           
 46004                           ; BSR set to: 0
 46005                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 46006  01F6E4  EC30  F00E         	call	_TMR5_CallBack	;wreg free
 46007                           
 46008                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 46009  01F6E8  0100               	movlb	0	; () banked
 46010  01F6EA  6BCC               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 46011  01F6EC  6BCD               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 46012  01F6EE                     i1l1021:
 46013                           
 46014                           ; BSR set to: 0
 46015  01F6EE  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 46016  01F6F4  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 46017  01F6FA  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 46018  01F700  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 46019  01F706  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 46020  01F70C  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 46021  01F712  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 46022  01F718  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 46023  01F71E  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 46024  01F724  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 46025  01F72A  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 46026  01F730  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 46027  01F736  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 46028  01F73C  0011               	retfie		f
 46029  01F73E                     __end_of_TMR5_ISR:
 46030                           	opt callstack 0
 46031                           
 46032 ;; *************** function _TMR5_WriteTimer *****************
 46033 ;; Defined at:
 46034 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 46035 ;; Parameters:    Size  Location     Type
 46036 ;;  timerVal        2  [STACK] unsigned short 
 46037 ;; Auto vars:     Size  Location     Type
 46038 ;;		None
 46039 ;; Return value:  Size  Location     Type
 46040 ;;                  1  [STACK] void 
 46041 ;; Registers used:
 46042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 46043 ;; Tracked objects:
 46044 ;;		On entry : 3F/39
 46045 ;;		On exit  : 0/0
 46046 ;;		Unchanged: 0/0
 46047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46052 ;;Total ram usage:        0 bytes
 46053 ;; Hardware stack levels used:    1
 46054 ;; Hardware stack levels required when called:    3
 46055 ;; This function calls:
 46056 ;;		Nothing
 46057 ;; This function is called by:
 46058 ;;		_TMR5_ISR
 46059 ;; This function uses a reentrant model
 46060 ;;
 46061                           
 46062                           	psect	text188
 46063  001544                     __ptext188:
 46064                           	opt callstack 0
 46065  001544                     _TMR5_WriteTimer:
 46066                           	opt callstack 12
 46067                           
 46068                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 46069                           
 46070                           ; BSR set to: 0
 46071                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46072                           ;incstack = 0
 46073  001544  A49A               	btfss	154,2,c	;volatile
 46074  001546  D00F               	goto	l13897
 46075                           
 46076                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 46077  001548  909A               	bcf	154,0,c	;volatile
 46078                           
 46079                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 46080                           ;stkvar	_timerVal @ sp[(0)+-2]
 46081  00154A  0EFF               	movlw	255
 46082  00154C  24E1               	addwf	fsr1l,w,c
 46083  00154E  6ED9               	movwf	fsr2l,c
 46084  001550  0EFF               	movlw	255
 46085  001552  20E2               	addwfc	fsr1h,w,c
 46086  001554  6EDA               	movwf	fsr2h,c
 46087  001556  50DF               	movf	indf2,w,c
 46088  001558  6E99               	movwf	153,c	;volatile
 46089                           
 46090                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 46091                           ;stkvar	_timerVal @ sp[(0)+-2]
 46092  00155A  0EFE               	movlw	-2
 46093  00155C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 46094                           
 46095                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 46096  001562  809A               	bsf	154,0,c	;volatile
 46097                           
 46098                           ;mcc_generated_files/tmr5.c: 144:  } else {
 46099  001564  D00C               	goto	l1004
 46100  001566                     l13897:
 46101                           
 46102                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 46103                           ;stkvar	_timerVal @ sp[(0)+-2]
 46104  001566  0EFF               	movlw	255
 46105  001568  24E1               	addwf	fsr1l,w,c
 46106  00156A  6ED9               	movwf	fsr2l,c
 46107  00156C  0EFF               	movlw	255
 46108  00156E  20E2               	addwfc	fsr1h,w,c
 46109  001570  6EDA               	movwf	fsr2h,c
 46110  001572  50DF               	movf	indf2,w,c
 46111  001574  6E99               	movwf	153,c	;volatile
 46112                           
 46113                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 46114                           ;stkvar	_timerVal @ sp[(0)+-2]
 46115  001576  0EFE               	movlw	-2
 46116  001578  006F FF8F FF98     	movff	plusw1,16280	;volatile
 46117  00157E                     l1004:
 46118                           
 46119                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 46120  00157E  52E5               	movf	postdec1,f,c
 46121  001580  52E5               	movf	postdec1,f,c
 46122  001582  0012               	return		;funcret
 46123  001584                     __end_of_TMR5_WriteTimer:
 46124                           	opt callstack 0
 46125                           
 46126 ;; *************** function _TMR5_CallBack *****************
 46127 ;; Defined at:
 46128 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 46129 ;; Parameters:    Size  Location     Type
 46130 ;;		None
 46131 ;; Auto vars:     Size  Location     Type
 46132 ;;		None
 46133 ;; Return value:  Size  Location     Type
 46134 ;;                  1  [STACK] void 
 46135 ;; Registers used:
 46136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 46137 ;; Tracked objects:
 46138 ;;		On entry : 3F/0
 46139 ;;		On exit  : 0/0
 46140 ;;		Unchanged: 0/0
 46141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46146 ;;Total ram usage:        0 bytes
 46147 ;; Hardware stack levels used:    1
 46148 ;; Hardware stack levels required when called:    8
 46149 ;; This function calls:
 46150 ;;		Absolute function
 46151 ;;		_TMR5_DefaultInterruptHandler
 46152 ;; This function is called by:
 46153 ;;		_TMR5_ISR
 46154 ;; This function uses a reentrant model
 46155 ;;
 46156                           
 46157                           	psect	text189
 46158  001C60                     __ptext189:
 46159                           	opt callstack 0
 46160  001C60                     _TMR5_CallBack:
 46161                           	opt callstack 7
 46162                           
 46163                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 46164                           
 46165                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46166                           ;incstack = 0
 46167  001C60  0100               	movlb	0	; () banked
 46168  001C62  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 46169  001C64  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 46170  001C66  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 46171  001C68  B4D8               	btfsc	status,2,c
 46172  001C6A  0012               	return	
 46173                           
 46174                           ; BSR set to: 0
 46175                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 46176  001C6C  D801               	call	u1317_28
 46177  001C6E  0012               	return	
 46178  001C70                     u1317_28:
 46179  001C70  0005               	push	
 46180  001C72  6EFA               	movwf	pclath,c
 46181  001C74  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 46182  001C76  6EFD               	movwf	tosl,c
 46183  001C78  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 46184  001C7A  6EFE               	movwf	tosh,c
 46185  001C7C  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 46186  001C7E  6EFF               	movwf	tosu,c
 46187  001C80  50FA               	movf	pclath,w,c
 46188  001C82  0012               	return		;indir
 46189  001C84                     __end_of_TMR5_CallBack:
 46190                           	opt callstack 0
 46191                           
 46192 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 46193 ;; Defined at:
 46194 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 46195 ;; Parameters:    Size  Location     Type
 46196 ;;		None
 46197 ;; Auto vars:     Size  Location     Type
 46198 ;;		None
 46199 ;; Return value:  Size  Location     Type
 46200 ;;                  1  [STACK] void 
 46201 ;; Registers used:
 46202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 46203 ;; Tracked objects:
 46204 ;;		On entry : 3F/0
 46205 ;;		On exit  : 0/0
 46206 ;;		Unchanged: 0/0
 46207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46212 ;;Total ram usage:        0 bytes
 46213 ;; Hardware stack levels used:    1
 46214 ;; Hardware stack levels required when called:    7
 46215 ;; This function calls:
 46216 ;;		_check_day_time
 46217 ;; This function is called by:
 46218 ;;		_TMR5_Initialize
 46219 ;;		_TMR5_CallBack
 46220 ;; This function uses a reentrant model
 46221 ;;
 46222                           
 46223                           	psect	text190
 46224  0016B0                     __ptext190:
 46225                           	opt callstack 0
 46226  0016B0                     _TMR5_DefaultInterruptHandler:
 46227                           	opt callstack 7
 46228                           
 46229                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 46230                           
 46231                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46232                           ;incstack = 0
 46233  0016B0  A0BE               	btfss	190,0,c	;volatile
 46234  0016B2  D002               	goto	u1241_20
 46235  0016B4  0E01               	movlw	1
 46236  0016B6  D001               	goto	u1241_26
 46237  0016B8                     u1241_20:
 46238  0016B8  0E00               	movlw	0
 46239  0016BA                     u1241_26:
 46240  0016BA  0AFF               	xorlw	255
 46241  0016BC  6E0C               	movwf	(btemp+11)^0,c
 46242  0016BE  50BE               	movf	190,w,c	;volatile
 46243  0016C0  180C               	xorwf	(btemp+11)^0,w,c
 46244  0016C2  0BFE               	andlw	-2
 46245  0016C4  180C               	xorwf	(btemp+11)^0,w,c
 46246  0016C6  6EBE               	movwf	190,c	;volatile
 46247                           
 46248                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 46249  0016C8  0E01               	movlw	1
 46250  0016CA  0101               	movlb	1	; () banked
 46251  0016CC  27C3               	addwf	(_V+188)& (0+255),f,b	;volatile
 46252  0016CE  0E00               	movlw	0
 46253  0016D0  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 46254  0016D2  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 46255  0016D4  23C6               	addwfc	(_V+191)& (0+255),f,b	;volatile
 46256                           
 46257                           ; BSR set to: 1
 46258                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 46259  0016D6  0E01               	movlw	1
 46260  0016D8  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 46261  0016DA  0E00               	movlw	0
 46262  0016DC  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 46263  0016DE  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 46264  0016E0  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 46265                           
 46266                           ; BSR set to: 1
 46267                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 46268  0016E2  EC49  F0E1         	call	_check_day_time	;wreg free
 46269                           
 46270                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 46271  0016E6  0012               	return		;funcret
 46272  0016E8                     __end_of_TMR5_DefaultInterruptHandler:
 46273                           	opt callstack 0
 46274                           
 46275 ;; *************** function _check_day_time *****************
 46276 ;; Defined at:
 46277 ;;		line 167 in file "mbmc.c"
 46278 ;; Parameters:    Size  Location     Type
 46279 ;;		None
 46280 ;; Auto vars:     Size  Location     Type
 46281 ;;  light           4  [STACK] float 
 46282 ;; Return value:  Size  Location     Type
 46283 ;;                  1  [STACK] _Bool 
 46284 ;; Registers used:
 46285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 46286 ;; Tracked objects:
 46287 ;;		On entry : 3F/1
 46288 ;;		On exit  : 0/0
 46289 ;;		Unchanged: 0/0
 46290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46295 ;;Total ram usage:        0 bytes
 46296 ;; Hardware stack levels used:    1
 46297 ;; Hardware stack levels required when called:    6
 46298 ;; This function calls:
 46299 ;;		___flge
 46300 ;;		_conv_raw_result
 46301 ;;		_get_ac_charger_relay
 46302 ;;		_set_ac_charger_relay
 46303 ;; This function is called by:
 46304 ;;		_TMR5_DefaultInterruptHandler
 46305 ;; This function uses a reentrant model
 46306 ;;
 46307                           
 46308                           	psect	text191
 46309  01C292                     __ptext191:
 46310                           	opt callstack 0
 46311  01C292                     _check_day_time:
 46312                           	opt callstack 0
 46313                           
 46314                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46315  01C292  52E6               	movf	postinc1,f,c
 46316  01C294  52E6               	movf	postinc1,f,c
 46317  01C296  52E6               	movf	postinc1,f,c
 46318  01C298  52E6               	movf	postinc1,f,c
 46319                           
 46320                           ;mbmc.c: 169:  static uint8_t day_delay = 0;;mbmc.c: 170:  float light;;mbmc.c: 172:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 46321                           
 46322                           ;incstack = 0
 46323  01C29A  0E00               	movlw	0
 46324  01C29C  6EE6               	movwf	postinc1,c
 46325  01C29E  0E0D               	movlw	13
 46326  01C2A0  6EE6               	movwf	postinc1,c
 46327  01C2A2  EC22  F0C2         	call	_conv_raw_result	;wreg free
 46328                           
 46329                           ;stkvar	_light @ sp[(-4)+0]
 46330  01C2A6  0EFC               	movlw	-4
 46331  01C2A8  0060  F007  FFE3   	movff	btemp,plusw1
 46332  01C2AE  0EFD               	movlw	-3
 46333  01C2B0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 46334  01C2B6  0EFE               	movlw	-2
 46335  01C2B8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 46336  01C2BE  0EFF               	movlw	-1
 46337  01C2C0  0060  F013  FFE3   	movff	btemp+3,plusw1
 46338                           
 46339                           ;mbmc.c: 176:  if (C.day_update) {
 46340  01C2C6  EE22  F247         	lfsr	2,_C+328	;volatile
 46341  01C2CA  50DE               	movf	postinc2,w,c
 46342  01C2CC  10DE               	iorwf	postinc2,w,c
 46343  01C2CE  10DE               	iorwf	postinc2,w,c
 46344  01C2D0  10DE               	iorwf	postinc2,w,c
 46345  01C2D2  B4D8               	btfsc	status,2,c
 46346  01C2D4  D021               	goto	l12635
 46347                           
 46348                           ;mbmc.c: 177:   if (V.ticks >= C.day_update) {
 46349  01C2D6  EE22  F247         	lfsr	2,_C+328	;volatile
 46350  01C2DA  50DE               	movf	postinc2,w,c
 46351  01C2DC  0101               	movlb	1	; () banked
 46352  01C2DE  5D88               	subwf	(_V+129)& (0+255),w,b	;volatile
 46353  01C2E0  50DE               	movf	postinc2,w,c
 46354  01C2E2  5989               	subwfb	(_V+130)& (0+255),w,b	;volatile
 46355  01C2E4  50DE               	movf	postinc2,w,c
 46356  01C2E6  598A               	subwfb	(_V+131)& (0+255),w,b	;volatile
 46357  01C2E8  50DE               	movf	postinc2,w,c
 46358  01C2EA  598B               	subwfb	(_V+132)& (0+255),w,b	;volatile
 46359  01C2EC  A0D8               	btfss	status,0,c
 46360  01C2EE  D014               	goto	l12635
 46361                           
 46362                           ; BSR set to: 1
 46363                           ;mbmc.c: 178:    C.day_update = 0;
 46364  01C2F0  0E00               	movlw	0
 46365  01C2F2  006F FFA0  FA47    	movff	wreg,_C+328	;volatile
 46366  01C2F8  0E00               	movlw	0
 46367  01C2FA  006F FFA0  FA48    	movff	wreg,_C+329	;volatile
 46368  01C300  0E00               	movlw	0
 46369  01C302  006F FFA0  FA49    	movff	wreg,_C+330	;volatile
 46370  01C308  0E00               	movlw	0
 46371  01C30A  006F FFA0  FA4A    	movff	wreg,_C+331	;volatile
 46372                           
 46373                           ;mbmc.c: 179:    C.dupdate = 1;
 46374  01C310  0E01               	movlw	1
 46375  01C312  006F FFA0  FA3E    	movff	wreg,_C+319	;volatile
 46376  01C318                     l12635:
 46377                           
 46378                           ;mbmc.c: 183:  if (!day_delay++ && V.system_stable) {
 46379  01C318  2A41               	incf	check_day_time@day_delay^0,f,c
 46380  01C31A  0441               	decf	check_day_time@day_delay^0,w,c
 46381  01C31C  A4D8               	btfss	status,2,c
 46382  01C31E  D0C3               	goto	l2191
 46383  01C320  0101               	movlb	1	; () banked
 46384  01C322  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 46385  01C324  B4D8               	btfsc	status,2,c
 46386  01C326  D0BF               	goto	l2191
 46387                           
 46388                           ; BSR set to: 1
 46389                           ;mbmc.c: 184:   if (C.soc > 3) {
 46390  01C328  EE22  F1B5         	lfsr	2,_C+182	;volatile
 46391  01C32C  0E01               	movlw	1
 46392  01C32E  50DB               	movf	plusw2,w,c
 46393  01C330  E104               	bnz	u1207_20
 46394  01C332  0E04               	movlw	4
 46395  01C334  5CDE               	subwf	postinc2,w,c
 46396  01C336  A0D8               	btfss	status,0,c
 46397  01C338  D08D               	goto	l12669
 46398  01C33A                     u1207_20:
 46399                           
 46400                           ; BSR set to: 1
 46401                           ;mbmc.c: 185:    if (!C.day) {
 46402  01C33A  EE22  F23D         	lfsr	2,_C+318	;volatile
 46403  01C33E  50DF               	movf	indf2,w,c
 46404  01C340  A4D8               	btfss	status,2,c
 46405  01C342  D035               	goto	l12655
 46406                           
 46407                           ; BSR set to: 1
 46408                           ;mbmc.c: 186:     if (light > 22.0) {
 46409                           ;stkvar	_light @ sp[(-4)+0]
 46410  01C344  0EFC               	movlw	-4
 46411  01C346  006F FF8F FFE6     	movff	plusw1,postinc1
 46412  01C34C  006F FF8F FFE6     	movff	plusw1,postinc1
 46413  01C352  006F FF8F FFE6     	movff	plusw1,postinc1
 46414  01C358  006F FF8F FFE6     	movff	plusw1,postinc1
 46415  01C35E  0E00               	movlw	0
 46416  01C360  6EE6               	movwf	postinc1,c
 46417  01C362  0E00               	movlw	0
 46418  01C364  6EE6               	movwf	postinc1,c
 46419  01C366  0EB0               	movlw	176
 46420  01C368  6EE6               	movwf	postinc1,c
 46421  01C36A  0E41               	movlw	65
 46422  01C36C  6EE6               	movwf	postinc1,c
 46423  01C36E  EC2B  F0EF         	call	___flge	;wreg free
 46424  01C372  B001               	btfsc	btemp& (0+255),0,c
 46425  01C374  D098               	goto	l2191
 46426                           
 46427                           ;mbmc.c: 187:      C.day = 1;
 46428  01C376  0E01               	movlw	1
 46429  01C378  006F FFA0  FA3D    	movff	wreg,_C+318	;volatile
 46430                           
 46431                           ;mbmc.c: 188:      C.day_start = V.ticks;
 46432  01C37E  EE20  F188         	lfsr	2,_V+129	;volatile
 46433  01C382  006F FF78  FA3F    	movff	postinc2,_C+320	;volatile
 46434  01C388  006F FF78  FA40    	movff	postinc2,_C+321	;volatile
 46435  01C38E  006F FF78  FA41    	movff	postinc2,_C+322	;volatile
 46436  01C394  006F FF74  FA42    	movff	postdec2,_C+323	;volatile
 46437                           
 46438                           ;mbmc.c: 189:      if (get_ac_charger_relay()) {
 46439  01C39A  ECDA  F00F         	call	_get_ac_charger_relay	;wreg free
 46440  01C39E  5001               	movf	btemp^0,w,c
 46441  01C3A0  B4D8               	btfsc	status,2,c
 46442  01C3A2  D085               	goto	l2187
 46443                           
 46444                           ;mbmc.c: 190:       set_ac_charger_relay(0);
 46445  01C3A4  0E00               	movlw	0
 46446  01C3A6  6EE6               	movwf	postinc1,c
 46447  01C3A8  ECC4  F00F         	call	_set_ac_charger_relay	;wreg free
 46448  01C3AC  D080               	goto	l2187
 46449  01C3AE                     l12655:
 46450                           
 46451                           ; BSR set to: 1
 46452                           ;mbmc.c: 195:     if (light < 12.0) {
 46453  01C3AE  0E00               	movlw	0
 46454  01C3B0  6EE6               	movwf	postinc1,c
 46455  01C3B2  0E00               	movlw	0
 46456  01C3B4  6EE6               	movwf	postinc1,c
 46457  01C3B6  0E40               	movlw	64
 46458  01C3B8  6EE6               	movwf	postinc1,c
 46459  01C3BA  0E41               	movlw	65
 46460  01C3BC  6EE6               	movwf	postinc1,c
 46461                           
 46462                           ;stkvar	_light @ sp[(-8)+0]
 46463  01C3BE  0EF8               	movlw	-8
 46464  01C3C0  006F FF8F FFE6     	movff	plusw1,postinc1
 46465  01C3C6  006F FF8F FFE6     	movff	plusw1,postinc1
 46466  01C3CC  006F FF8F FFE6     	movff	plusw1,postinc1
 46467  01C3D2  006F FF8F FFE6     	movff	plusw1,postinc1
 46468  01C3D8  EC2B  F0EF         	call	___flge	;wreg free
 46469  01C3DC  B001               	btfsc	btemp& (0+255),0,c
 46470  01C3DE  D063               	goto	l2191
 46471                           
 46472                           ;mbmc.c: 196:      C.day = 0;
 46473  01C3E0  0E00               	movlw	0
 46474  01C3E2  006F FFA0  FA3D    	movff	wreg,_C+318	;volatile
 46475                           
 46476                           ;mbmc.c: 197:      C.day_end = V.ticks;
 46477  01C3E8  EE20  F188         	lfsr	2,_V+129	;volatile
 46478  01C3EC  006F FF78  FA43    	movff	postinc2,_C+324	;volatile
 46479  01C3F2  006F FF78  FA44    	movff	postinc2,_C+325	;volatile
 46480  01C3F8  006F FF78  FA45    	movff	postinc2,_C+326	;volatile
 46481  01C3FE  006F FF74  FA46    	movff	postdec2,_C+327	;volatile
 46482                           
 46483                           ;mbmc.c: 198:      C.day_update = C.day_end + 14400;
 46484  01C404  EE22  F243         	lfsr	2,_C+324	;volatile
 46485  01C408  0E40               	movlw	64
 46486  01C40A  24DE               	addwf	postinc2,w,c
 46487  01C40C  6E09               	movwf	(btemp+8)^0,c
 46488  01C40E  0E38               	movlw	56
 46489  01C410  20DE               	addwfc	postinc2,w,c
 46490  01C412  6E0A               	movwf	(btemp+9)^0,c
 46491  01C414  0E00               	movlw	0
 46492  01C416  20DE               	addwfc	postinc2,w,c
 46493  01C418  6E0B               	movwf	(btemp+10)^0,c
 46494  01C41A  0E00               	movlw	0
 46495  01C41C  20DE               	addwfc	postinc2,w,c
 46496  01C41E  6E0C               	movwf	(btemp+11)^0,c
 46497  01C420  0060  F024  FA47   	movff	btemp+8,_C+328	;volatile
 46498  01C426  0060  F028  FA48   	movff	btemp+9,_C+329	;volatile
 46499  01C42C  0060  F02C  FA49   	movff	btemp+10,_C+330	;volatile
 46500  01C432  0060  F030  FA4A   	movff	btemp+11,_C+331	;volatile
 46501                           
 46502                           ;mbmc.c: 202:      if ((C.soc < 20)) {
 46503  01C438  EE22  F1B5         	lfsr	2,_C+182	;volatile
 46504  01C43C  0E01               	movlw	1
 46505  01C43E  50DB               	movf	plusw2,w,c
 46506  01C440  E136               	bnz	l2187
 46507  01C442  0E14               	movlw	20
 46508  01C444  5CDE               	subwf	postinc2,w,c
 46509  01C446  B0D8               	btfsc	status,0,c
 46510  01C448  D032               	goto	l2187
 46511                           
 46512                           ;mbmc.c: 203:       set_ac_charger_relay(1);
 46513  01C44A  0E01               	movlw	1
 46514  01C44C  6EE6               	movwf	postinc1,c
 46515  01C44E  ECC4  F00F         	call	_set_ac_charger_relay	;wreg free
 46516  01C452  D02D               	goto	l2187
 46517  01C454                     l12669:
 46518                           
 46519                           ; BSR set to: 1
 46520                           ;mbmc.c: 209:    if (C.p_pv < C.p_inverter) {
 46521  01C454  EE22  F177         	lfsr	2,_C+120	;volatile
 46522  01C458  006F FF7B FFE6     	movff	postinc2,postinc1
 46523  01C45E  006F FF7B FFE6     	movff	postinc2,postinc1
 46524  01C464  006F FF7B FFE6     	movff	postinc2,postinc1
 46525  01C46A  006F FF7B FFE6     	movff	postinc2,postinc1
 46526  01C470  EE22  F17B         	lfsr	2,_C+124	;volatile
 46527  01C474  006F FF7B FFE6     	movff	postinc2,postinc1
 46528  01C47A  006F FF7B FFE6     	movff	postinc2,postinc1
 46529  01C480  006F FF7B FFE6     	movff	postinc2,postinc1
 46530  01C486  006F FF7B FFE6     	movff	postinc2,postinc1
 46531  01C48C  EC2B  F0EF         	call	___flge	;wreg free
 46532  01C490  B001               	btfsc	btemp& (0+255),0,c
 46533  01C492  D009               	goto	l2191
 46534                           
 46535                           ;mbmc.c: 210:     if (!get_ac_charger_relay()) {
 46536  01C494  ECDA  F00F         	call	_get_ac_charger_relay	;wreg free
 46537  01C498  5001               	movf	btemp^0,w,c
 46538  01C49A  A4D8               	btfss	status,2,c
 46539  01C49C  D004               	goto	l2191
 46540                           
 46541                           ;mbmc.c: 211:      set_ac_charger_relay(1);
 46542  01C49E  0E01               	movlw	1
 46543  01C4A0  6EE6               	movwf	postinc1,c
 46544  01C4A2  ECC4  F00F         	call	_set_ac_charger_relay	;wreg free
 46545  01C4A6                     l2191:
 46546                           
 46547                           ;mbmc.c: 216:  if (day_delay >= 240)
 46548  01C4A6  0EEF               	movlw	239
 46549  01C4A8  6441               	cpfsgt	check_day_time@day_delay^0,c
 46550  01C4AA  D001               	goto	l2187
 46551                           
 46552                           ;mbmc.c: 217:   day_delay = 0;
 46553  01C4AC  6A41               	clrf	check_day_time@day_delay^0,c
 46554  01C4AE                     l2187:
 46555                           
 46556                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 46557  01C4AE  52E5               	movf	postdec1,f,c
 46558  01C4B0  52E5               	movf	postdec1,f,c
 46559  01C4B2  52E5               	movf	postdec1,f,c
 46560  01C4B4  52E5               	movf	postdec1,f,c
 46561  01C4B6  0012               	return		;funcret
 46562  01C4B8                     __end_of_check_day_time:
 46563                           	opt callstack 0
 46564                           
 46565 ;; *************** function _set_ac_charger_relay *****************
 46566 ;; Defined at:
 46567 ;;		line 136 in file "mbmc.c"
 46568 ;; Parameters:    Size  Location     Type
 46569 ;;  mode            1  [STACK] const _Bool 
 46570 ;; Auto vars:     Size  Location     Type
 46571 ;;		None
 46572 ;; Return value:  Size  Location     Type
 46573 ;;                  1  [STACK] void 
 46574 ;; Registers used:
 46575 ;;		wreg, fsr1l, fsr1h
 46576 ;; Tracked objects:
 46577 ;;		On entry : 0/1
 46578 ;;		On exit  : 0/0
 46579 ;;		Unchanged: 0/0
 46580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46585 ;;Total ram usage:        0 bytes
 46586 ;; Hardware stack levels used:    1
 46587 ;; Hardware stack levels required when called:    3
 46588 ;; This function calls:
 46589 ;;		Nothing
 46590 ;; This function is called by:
 46591 ;;		_check_day_time
 46592 ;; This function uses a reentrant model
 46593 ;;
 46594                           
 46595                           	psect	text192
 46596  001F88                     __ptext192:
 46597                           	opt callstack 0
 46598  001F88                     _set_ac_charger_relay:
 46599                           	opt callstack 9
 46600                           
 46601                           ;mbmc.c: 136: void set_ac_charger_relay(const _Bool mode);mbmc.c: 137: {;mbmc.c: 138:  L
      +                          ATDbits.LATD6 = mode;
 46602                           ;stkvar	_mode @ sp[(0)+-1]
 46603                           
 46604                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46605                           ;incstack = 0
 46606  001F88  0EFF               	movlw	-1
 46607  001F8A  B0E3               	btfsc	plusw1,0,c
 46608  001F8C  D002               	bra	u1167_25
 46609  001F8E  9CBD               	bcf	189,6,c	;volatile
 46610  001F90  D001               	bra	u1167_26
 46611  001F92                     u1167_25:
 46612  001F92  8CBD               	bsf	189,6,c	;volatile
 46613  001F94                     u1167_26:
 46614                           
 46615                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 46616  001F94  52E5               	movf	postdec1,f,c
 46617  001F96  0012               	return		;funcret
 46618  001F98                     __end_of_set_ac_charger_relay:
 46619                           	opt callstack 0
 46620                           
 46621 ;; *************** function _get_ac_charger_relay *****************
 46622 ;; Defined at:
 46623 ;;		line 141 in file "mbmc.c"
 46624 ;; Parameters:    Size  Location     Type
 46625 ;;		None
 46626 ;; Auto vars:     Size  Location     Type
 46627 ;;		None
 46628 ;; Return value:  Size  Location     Type
 46629 ;;                  1  [STACK] _Bool 
 46630 ;; Registers used:
 46631 ;;		btemp
 46632 ;; Tracked objects:
 46633 ;;		On entry : 0/1
 46634 ;;		On exit  : 0/0
 46635 ;;		Unchanged: 0/0
 46636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46641 ;;Total ram usage:        0 bytes
 46642 ;; Hardware stack levels used:    1
 46643 ;; Hardware stack levels required when called:    3
 46644 ;; This function calls:
 46645 ;;		Nothing
 46646 ;; This function is called by:
 46647 ;;		_check_day_time
 46648 ;;		_calc_bsoc
 46649 ;; This function uses a reentrant model
 46650 ;;
 46651                           
 46652                           	psect	text193
 46653  001FB4                     __ptext193:
 46654                           	opt callstack 0
 46655  001FB4                     _get_ac_charger_relay:
 46656                           	opt callstack 10
 46657                           
 46658                           ;mbmc.c: 143:  return LATDbits.LATD6;
 46659                           
 46660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46661                           ;incstack = 0
 46662  001FB4  ACBD               	btfss	189,6,c	;volatile
 46663  001FB6  D003               	goto	u1230_20
 46664  001FB8  6A01               	clrf	btemp^0,c
 46665  001FBA  2A01               	incf	btemp^0,f,c
 46666  001FBC  0012               	return	
 46667  001FBE                     u1230_20:
 46668  001FBE  6A01               	clrf	btemp^0,c
 46669                           
 46670                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 46671  001FC0  0012               	return		;funcret
 46672  001FC2                     __end_of_get_ac_charger_relay:
 46673                           	opt callstack 0
 46674                           
 46675 ;; *************** function _TMR3_ISR *****************
 46676 ;; Defined at:
 46677 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 46678 ;; Parameters:    Size  Location     Type
 46679 ;;		None
 46680 ;; Auto vars:     Size  Location     Type
 46681 ;;		None
 46682 ;; Return value:  Size  Location     Type
 46683 ;;                  1    wreg      void 
 46684 ;; Registers used:
 46685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 46686 ;; Tracked objects:
 46687 ;;		On entry : 0/0
 46688 ;;		On exit  : 3F/0
 46689 ;;		Unchanged: 0/0
 46690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46693 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46694 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46695 ;;Total ram usage:       25 bytes
 46696 ;; Hardware stack levels used:    1
 46697 ;; Hardware stack levels required when called:   14
 46698 ;; This function calls:
 46699 ;;		_TMR3_CallBack
 46700 ;;		_TMR3_WriteTimer
 46701 ;; This function is called by:
 46702 ;;		Interrupt level 1
 46703 ;; This function uses a non-reentrant model
 46704 ;;
 46705                           
 46706                           	psect	text194
 46707  01DFB8                     __ptext194:
 46708                           	opt callstack 0
 46709  01DFB8                     _TMR3_ISR:
 46710                           	opt callstack 2
 46711                           
 46712                           ;incstack = 0
 46713  01DFB8  006F FF60  F0E7    	movff	status,??_TMR3_ISR
 46714  01DFBE  006F FFD8  F0E8    	movff	tblptrl,??_TMR3_ISR+1
 46715  01DFC4  006F FFDC  F0E9    	movff	tblptrh,??_TMR3_ISR+2
 46716  01DFCA  006F FFE0  F0EA    	movff	tblptru,??_TMR3_ISR+3
 46717  01DFD0  006F FFD4  F0EB    	movff	tablat,??_TMR3_ISR+4
 46718  01DFD6  0060  F004  F0EC   	movff	btemp,??_TMR3_ISR+5
 46719  01DFDC  0060  F008  F0ED   	movff	btemp+1,??_TMR3_ISR+6
 46720  01DFE2  0060  F00C  F0EE   	movff	btemp+2,??_TMR3_ISR+7
 46721  01DFE8  0060  F010  F0EF   	movff	btemp+3,??_TMR3_ISR+8
 46722  01DFEE  0060  F014  F0F0   	movff	btemp+4,??_TMR3_ISR+9
 46723  01DFF4  0060  F018  F0F1   	movff	btemp+5,??_TMR3_ISR+10
 46724  01DFFA  0060  F01C  F0F2   	movff	btemp+6,??_TMR3_ISR+11
 46725  01E000  0060  F020  F0F3   	movff	btemp+7,??_TMR3_ISR+12
 46726  01E006  0060  F024  F0F4   	movff	btemp+8,??_TMR3_ISR+13
 46727  01E00C  0060  F028  F0F5   	movff	btemp+9,??_TMR3_ISR+14
 46728  01E012  0060  F02C  F0F6   	movff	btemp+10,??_TMR3_ISR+15
 46729  01E018  0060  F030  F0F7   	movff	btemp+11,??_TMR3_ISR+16
 46730  01E01E  0060  F044  F0F8   	movff	btemp+16,??_TMR3_ISR+17
 46731  01E024  0060  F048  F0F9   	movff	btemp+17,??_TMR3_ISR+18
 46732  01E02A  0060  F04C  F0FA   	movff	btemp+18,??_TMR3_ISR+19
 46733  01E030  0060  F050  F0FB   	movff	btemp+19,??_TMR3_ISR+20
 46734  01E036  0060  F054  F0FC   	movff	btemp+20,??_TMR3_ISR+21
 46735  01E03C  0060  F058  F0FD   	movff	btemp+21,??_TMR3_ISR+22
 46736  01E042  0060  F05C  F0FE   	movff	btemp+22,??_TMR3_ISR+23
 46737  01E048  0060  F060  F0FF   	movff	btemp+23,??_TMR3_ISR+24
 46738  01E04E  EE16  F19B         	lfsr	1,___intlo_sp
 46739                           
 46740                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 46741  01E052  0139               	movlb	57	; () banked
 46742  01E054  9DA6               	bcf	166,6,b	;volatile
 46743                           
 46744                           ; BSR set to: 57
 46745                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 46746  01E056  0060  F32B  FFE6   	movff	_timer3ReloadVal,postinc1
 46747  01E05C  0060  F32F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 46748  01E062  ECC2  F00A         	call	_TMR3_WriteTimer	;wreg free
 46749                           
 46750                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 46751  01E066  0100               	movlb	0	; () banked
 46752  01E068  4BC8               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 46753  01E06A  2BC9               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 46754  01E06C  51C9               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 46755  01E06E  E104               	bnz	i1u1668_20
 46756  01E070  0E28               	movlw	40
 46757  01E072  5DC8               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 46758  01E074  A0D8               	btfss	status,0,c
 46759  01E076  D005               	goto	i1l1209
 46760  01E078                     i1u1668_20:
 46761                           
 46762                           ; BSR set to: 0
 46763                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 46764  01E078  EC42  F00E         	call	_TMR3_CallBack	;wreg free
 46765                           
 46766                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 46767  01E07C  0100               	movlb	0	; () banked
 46768  01E07E  6BC8               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 46769  01E080  6BC9               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 46770  01E082                     i1l1209:
 46771                           
 46772                           ; BSR set to: 0
 46773  01E082  0060  F3FC  F018   	movff	??_TMR3_ISR+24,btemp+23
 46774  01E088  0060  F3F8  F017   	movff	??_TMR3_ISR+23,btemp+22
 46775  01E08E  0060  F3F4  F016   	movff	??_TMR3_ISR+22,btemp+21
 46776  01E094  0060  F3F0  F015   	movff	??_TMR3_ISR+21,btemp+20
 46777  01E09A  0060  F3EC  F014   	movff	??_TMR3_ISR+20,btemp+19
 46778  01E0A0  0060  F3E8  F013   	movff	??_TMR3_ISR+19,btemp+18
 46779  01E0A6  0060  F3E4  F012   	movff	??_TMR3_ISR+18,btemp+17
 46780  01E0AC  0060  F3E0  F011   	movff	??_TMR3_ISR+17,btemp+16
 46781  01E0B2  0060  F3DC  F00C   	movff	??_TMR3_ISR+16,btemp+11
 46782  01E0B8  0060  F3D8  F00B   	movff	??_TMR3_ISR+15,btemp+10
 46783  01E0BE  0060  F3D4  F00A   	movff	??_TMR3_ISR+14,btemp+9
 46784  01E0C4  0060  F3D0  F009   	movff	??_TMR3_ISR+13,btemp+8
 46785  01E0CA  0060  F3CC  F008   	movff	??_TMR3_ISR+12,btemp+7
 46786  01E0D0  0060  F3C8  F007   	movff	??_TMR3_ISR+11,btemp+6
 46787  01E0D6  0060  F3C4  F006   	movff	??_TMR3_ISR+10,btemp+5
 46788  01E0DC  0060  F3C0  F005   	movff	??_TMR3_ISR+9,btemp+4
 46789  01E0E2  0060  F3BC  F004   	movff	??_TMR3_ISR+8,btemp+3
 46790  01E0E8  0060  F3B8  F003   	movff	??_TMR3_ISR+7,btemp+2
 46791  01E0EE  0060  F3B4  F002   	movff	??_TMR3_ISR+6,btemp+1
 46792  01E0F4  0060  F3B0  F001   	movff	??_TMR3_ISR+5,btemp
 46793  01E0FA  0060  F3AF  FFF5   	movff	??_TMR3_ISR+4,tablat
 46794  01E100  0060  F3AB  FFF8   	movff	??_TMR3_ISR+3,tblptru
 46795  01E106  0060  F3A7  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 46796  01E10C  0060  F3A3  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 46797  01E112  0060  F39F  FFD8   	movff	??_TMR3_ISR,status
 46798  01E118  0011               	retfie		f
 46799  01E11A                     __end_of_TMR3_ISR:
 46800                           	opt callstack 0
 46801                           
 46802 ;; *************** function _TMR3_WriteTimer *****************
 46803 ;; Defined at:
 46804 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 46805 ;; Parameters:    Size  Location     Type
 46806 ;;  timerVal        2  [STACK] unsigned short 
 46807 ;; Auto vars:     Size  Location     Type
 46808 ;;		None
 46809 ;; Return value:  Size  Location     Type
 46810 ;;                  1  [STACK] void 
 46811 ;; Registers used:
 46812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 46813 ;; Tracked objects:
 46814 ;;		On entry : 3F/39
 46815 ;;		On exit  : 0/0
 46816 ;;		Unchanged: 0/0
 46817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46822 ;;Total ram usage:        0 bytes
 46823 ;; Hardware stack levels used:    1
 46824 ;; Hardware stack levels required when called:    3
 46825 ;; This function calls:
 46826 ;;		Nothing
 46827 ;; This function is called by:
 46828 ;;		_TMR3_ISR
 46829 ;; This function uses a reentrant model
 46830 ;;
 46831                           
 46832                           	psect	text195
 46833  001584                     __ptext195:
 46834                           	opt callstack 0
 46835  001584                     _TMR3_WriteTimer:
 46836                           	opt callstack 12
 46837                           
 46838                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 46839                           
 46840                           ; BSR set to: 0
 46841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46842                           ;incstack = 0
 46843  001584  A4A6               	btfss	166,2,c	;volatile
 46844  001586  D00F               	goto	l13915
 46845                           
 46846                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 46847  001588  90A6               	bcf	166,0,c	;volatile
 46848                           
 46849                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 46850                           ;stkvar	_timerVal @ sp[(0)+-2]
 46851  00158A  0EFF               	movlw	255
 46852  00158C  24E1               	addwf	fsr1l,w,c
 46853  00158E  6ED9               	movwf	fsr2l,c
 46854  001590  0EFF               	movlw	255
 46855  001592  20E2               	addwfc	fsr1h,w,c
 46856  001594  6EDA               	movwf	fsr2h,c
 46857  001596  50DF               	movf	indf2,w,c
 46858  001598  6EA5               	movwf	165,c	;volatile
 46859                           
 46860                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 46861                           ;stkvar	_timerVal @ sp[(0)+-2]
 46862  00159A  0EFE               	movlw	-2
 46863  00159C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 46864                           
 46865                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 46866  0015A2  80A6               	bsf	166,0,c	;volatile
 46867                           
 46868                           ;mcc_generated_files/tmr3.c: 141:     }
 46869  0015A4  D00C               	goto	l1192
 46870  0015A6                     l13915:
 46871                           
 46872                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 46873                           ;stkvar	_timerVal @ sp[(0)+-2]
 46874  0015A6  0EFF               	movlw	255
 46875  0015A8  24E1               	addwf	fsr1l,w,c
 46876  0015AA  6ED9               	movwf	fsr2l,c
 46877  0015AC  0EFF               	movlw	255
 46878  0015AE  20E2               	addwfc	fsr1h,w,c
 46879  0015B0  6EDA               	movwf	fsr2h,c
 46880  0015B2  50DF               	movf	indf2,w,c
 46881  0015B4  6EA5               	movwf	165,c	;volatile
 46882                           
 46883                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 46884                           ;stkvar	_timerVal @ sp[(0)+-2]
 46885  0015B6  0EFE               	movlw	-2
 46886  0015B8  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 46887  0015BE                     l1192:
 46888                           
 46889                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 46890  0015BE  52E5               	movf	postdec1,f,c
 46891  0015C0  52E5               	movf	postdec1,f,c
 46892  0015C2  0012               	return		;funcret
 46893  0015C4                     __end_of_TMR3_WriteTimer:
 46894                           	opt callstack 0
 46895                           
 46896 ;; *************** function _TMR3_CallBack *****************
 46897 ;; Defined at:
 46898 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 46899 ;; Parameters:    Size  Location     Type
 46900 ;;		None
 46901 ;; Auto vars:     Size  Location     Type
 46902 ;;		None
 46903 ;; Return value:  Size  Location     Type
 46904 ;;                  1  [STACK] void 
 46905 ;; Registers used:
 46906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 46907 ;; Tracked objects:
 46908 ;;		On entry : 3F/0
 46909 ;;		On exit  : 0/0
 46910 ;;		Unchanged: 0/0
 46911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46916 ;;Total ram usage:        0 bytes
 46917 ;; Hardware stack levels used:    1
 46918 ;; Hardware stack levels required when called:   13
 46919 ;; This function calls:
 46920 ;;		Absolute function
 46921 ;;		_TMR3_DefaultInterruptHandler
 46922 ;;		_calc_bsoc
 46923 ;; This function is called by:
 46924 ;;		_TMR3_ISR
 46925 ;; This function uses a reentrant model
 46926 ;;
 46927                           
 46928                           	psect	text196
 46929  001C84                     __ptext196:
 46930                           	opt callstack 0
 46931  001C84                     _TMR3_CallBack:
 46932                           	opt callstack 2
 46933                           
 46934                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 46935                           
 46936                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 46937                           ;incstack = 0
 46938  001C84  0100               	movlb	0	; () banked
 46939  001C86  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 46940  001C88  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 46941  001C8A  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 46942  001C8C  B4D8               	btfsc	status,2,c
 46943  001C8E  0012               	return	
 46944                           
 46945                           ; BSR set to: 0
 46946                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 46947  001C90  D801               	call	u1646_28
 46948  001C92  0012               	return	
 46949  001C94                     u1646_28:
 46950  001C94  0005               	push	
 46951  001C96  6EFA               	movwf	pclath,c
 46952  001C98  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 46953  001C9A  6EFD               	movwf	tosl,c
 46954  001C9C  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 46955  001C9E  6EFE               	movwf	tosh,c
 46956  001CA0  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 46957  001CA2  6EFF               	movwf	tosu,c
 46958  001CA4  50FA               	movf	pclath,w,c
 46959  001CA6  0012               	return		;indir
 46960  001CA8                     __end_of_TMR3_CallBack:
 46961                           	opt callstack 0
 46962                           
 46963 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 46964 ;; Defined at:
 46965 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 46966 ;; Parameters:    Size  Location     Type
 46967 ;;		None
 46968 ;; Auto vars:     Size  Location     Type
 46969 ;;		None
 46970 ;; Return value:  Size  Location     Type
 46971 ;;                  1  [STACK] void 
 46972 ;; Registers used:
 46973 ;;		None
 46974 ;; Tracked objects:
 46975 ;;		On entry : 3F/0
 46976 ;;		On exit  : 0/0
 46977 ;;		Unchanged: 0/0
 46978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 46979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 46983 ;;Total ram usage:        0 bytes
 46984 ;; Hardware stack levels used:    1
 46985 ;; Hardware stack levels required when called:    3
 46986 ;; This function calls:
 46987 ;;		Nothing
 46988 ;; This function is called by:
 46989 ;;		_TMR3_Initialize
 46990 ;;		_TMR3_CallBack
 46991 ;; This function uses a reentrant model
 46992 ;;
 46993                           
 46994                           	psect	text197
 46995  002068                     __ptext197:
 46996                           	opt callstack 0
 46997  002068                     _TMR3_DefaultInterruptHandler:
 46998                           	opt callstack 11
 46999                           
 47000                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 47001                           
 47002                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47003                           ;incstack = 0
 47004  002068  0012               	return		;funcret
 47005  00206A                     __end_of_TMR3_DefaultInterruptHandler:
 47006                           	opt callstack 0
 47007                           
 47008 ;; *************** function _calc_bsoc *****************
 47009 ;; Defined at:
 47010 ;;		line 39 in file "bsoc.c"
 47011 ;; Parameters:    Size  Location     Type
 47012 ;;		None
 47013 ;; Auto vars:     Size  Location     Type
 47014 ;;  adj             4  [STACK] float 
 47015 ;;  log_ptr         2  [STACK] PTR unsigned char 
 47016 ;;		 -> port_data(512), 
 47017 ;; Return value:  Size  Location     Type
 47018 ;;                  1  [STACK] void 
 47019 ;; Registers used:
 47020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 47021 ;; Tracked objects:
 47022 ;;		On entry : 3F/0
 47023 ;;		On exit  : 5/1
 47024 ;;		Unchanged: 0/0
 47025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47030 ;;Total ram usage:        0 bytes
 47031 ;; Hardware stack levels used:    1
 47032 ;; Hardware stack levels required when called:   12
 47033 ;; This function calls:
 47034 ;;		_StartTimer
 47035 ;;		___asfladd
 47036 ;;		___fldiv
 47037 ;;		___flge
 47038 ;;		___flmul
 47039 ;;		___flneg
 47040 ;;		___fltol
 47041 ;;		_fabsf
 47042 ;;		_get_ac_charger_relay
 47043 ;;		_port_data_dma_ptr
 47044 ;;		_send_port_data_dma
 47045 ;;		_sprintf
 47046 ;;		_strlen
 47047 ;; This function is called by:
 47048 ;;		_init_bsoc
 47049 ;;		_TMR3_CallBack
 47050 ;; This function uses a reentrant model
 47051 ;;
 47052                           
 47053                           	psect	text198
 47054  014690                     __ptext198:
 47055                           	opt callstack 0
 47056  014690                     _calc_bsoc:
 47057                           	opt callstack 0
 47058                           
 47059                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47060  014690  0E06               	movlw	6
 47061  014692  26E1               	addwf	fsr1l,f,c
 47062  014694  0E00               	movlw	0
 47063  014696  22E2               	addwfc	fsr1h,f,c
 47064                           
 47065                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 47066                           
 47067                           ;incstack = 0
 47068  014698  0E00               	movlw	0
 47069  01469A  6E09               	movwf	(btemp+8)^0,c
 47070  01469C  0E00               	movlw	0
 47071  01469E  6E0A               	movwf	(btemp+9)^0,c
 47072  0146A0  0E80               	movlw	128
 47073  0146A2  6E0B               	movwf	(btemp+10)^0,c
 47074  0146A4  0E3F               	movlw	63
 47075  0146A6  6E0C               	movwf	(btemp+11)^0,c
 47076                           
 47077                           ;stkvar	_adj @ sp[(-6)+0]
 47078  0146A8  0EFA               	movlw	-6
 47079  0146AA  0060  F027  FFE3   	movff	btemp+8,plusw1
 47080  0146B0  0EFB               	movlw	-5
 47081  0146B2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 47082  0146B8  0EFC               	movlw	-4
 47083  0146BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 47084  0146C0  0EFD               	movlw	-3
 47085  0146C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 47086  0146C8  82BE               	bsf	190,1,c	;volatile
 47087                           
 47088                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 47089  0146CA  0E00               	movlw	0
 47090  0146CC  6EE6               	movwf	postinc1,c
 47091  0146CE  0E00               	movlw	0
 47092  0146D0  6EE6               	movwf	postinc1,c
 47093  0146D2  0E61               	movlw	97
 47094  0146D4  6EE6               	movwf	postinc1,c
 47095  0146D6  0E45               	movlw	69
 47096  0146D8  6EE6               	movwf	postinc1,c
 47097  0146DA  EE22  F143         	lfsr	2,_C+68	;volatile
 47098  0146DE  006F FF7B FFE6     	movff	postinc2,postinc1
 47099  0146E4  006F FF7B FFE6     	movff	postinc2,postinc1
 47100  0146EA  006F FF7B FFE6     	movff	postinc2,postinc1
 47101  0146F0  006F FF7B FFE6     	movff	postinc2,postinc1
 47102  0146F6  ECDA  F0BC         	call	___fldiv	;wreg free
 47103  0146FA  0060  F007  FFE6   	movff	btemp,postinc1
 47104  014700  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47105  014706  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47106  01470C  0060  F013  FFE6   	movff	btemp+3,postinc1
 47107  014712  0E8F               	movlw	low (_C+144)
 47108  014714  6EE6               	movwf	postinc1,c
 47109  014716  0E09               	movlw	high (_C+144)
 47110  014718  6EE6               	movwf	postinc1,c
 47111  01471A  ECA7  F004         	call	___asfladd	;wreg free
 47112                           
 47113                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 47114  01471E  EE22  F18F         	lfsr	2,_C+144	;volatile
 47115  014722  006F FF7B FFE6     	movff	postinc2,postinc1
 47116  014728  006F FF7B FFE6     	movff	postinc2,postinc1
 47117  01472E  006F FF7B FFE6     	movff	postinc2,postinc1
 47118  014734  006F FF7B FFE6     	movff	postinc2,postinc1
 47119  01473A  EE22  F18B         	lfsr	2,_C+140	;volatile
 47120  01473E  006F FF7B FFE6     	movff	postinc2,postinc1
 47121  014744  006F FF7B FFE6     	movff	postinc2,postinc1
 47122  01474A  006F FF7B FFE6     	movff	postinc2,postinc1
 47123  014750  006F FF7B FFE6     	movff	postinc2,postinc1
 47124  014756  EC2B  F0EF         	call	___flge	;wreg free
 47125  01475A  B001               	btfsc	btemp& (0+255),0,c
 47126  01475C  D00E               	goto	l16681
 47127                           
 47128                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 47129  01475E  EE22  F18B         	lfsr	2,_C+140	;volatile
 47130  014762  006F FF78  F98F    	movff	postinc2,_C+144	;volatile
 47131  014768  006F FF78  F990    	movff	postinc2,_C+145	;volatile
 47132  01476E  006F FF78  F991    	movff	postinc2,_C+146	;volatile
 47133  014774  006F FF74  F992    	movff	postdec2,_C+147	;volatile
 47134  01477A                     l16681:
 47135                           
 47136                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 47137  01477A  0ECD               	movlw	205
 47138  01477C  6EE6               	movwf	postinc1,c
 47139  01477E  0ECC               	movlw	204
 47140  014780  6EE6               	movwf	postinc1,c
 47141  014782  0ECC               	movlw	204
 47142  014784  6EE6               	movwf	postinc1,c
 47143  014786  0E3D               	movlw	61
 47144  014788  6EE6               	movwf	postinc1,c
 47145  01478A  EE22  F18F         	lfsr	2,_C+144	;volatile
 47146  01478E  006F FF7B FFE6     	movff	postinc2,postinc1
 47147  014794  006F FF7B FFE6     	movff	postinc2,postinc1
 47148  01479A  006F FF7B FFE6     	movff	postinc2,postinc1
 47149  0147A0  006F FF7B FFE6     	movff	postinc2,postinc1
 47150  0147A6  EC2B  F0EF         	call	___flge	;wreg free
 47151  0147AA  B001               	btfsc	btemp& (0+255),0,c
 47152  0147AC  D010               	goto	l16685
 47153                           
 47154                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 47155  0147AE  0ECD               	movlw	205
 47156  0147B0  006F FFA0  F98F    	movff	wreg,_C+144	;volatile
 47157  0147B6  0ECC               	movlw	204
 47158  0147B8  006F FFA0  F990    	movff	wreg,_C+145	;volatile
 47159  0147BE  0ECC               	movlw	204
 47160  0147C0  006F FFA0  F991    	movff	wreg,_C+146	;volatile
 47161  0147C6  0E3D               	movlw	61
 47162  0147C8  006F FFA0  F992    	movff	wreg,_C+147	;volatile
 47163  0147CE                     l16685:
 47164                           
 47165                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 47166  0147CE  EE22  F143         	lfsr	2,_C+68	;volatile
 47167  0147D2  006F FF7B FFE6     	movff	postinc2,postinc1
 47168  0147D8  006F FF7B FFE6     	movff	postinc2,postinc1
 47169  0147DE  006F FF7B FFE6     	movff	postinc2,postinc1
 47170  0147E4  006F FF7B FFE6     	movff	postinc2,postinc1
 47171  0147EA  0E0A               	movlw	10
 47172  0147EC  6EE6               	movwf	postinc1,c
 47173  0147EE  0ED7               	movlw	215
 47174  0147F0  6EE6               	movwf	postinc1,c
 47175  0147F2  0E23               	movlw	35
 47176  0147F4  6EE6               	movwf	postinc1,c
 47177  0147F6  0E3C               	movlw	60
 47178  0147F8  6EE6               	movwf	postinc1,c
 47179  0147FA  EC2B  F0EF         	call	___flge	;wreg free
 47180  0147FE  B001               	btfsc	btemp& (0+255),0,c
 47181  014800  D01C               	goto	l16689
 47182                           
 47183                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 47184  014802  0062  F754  F009   	movff	_C+214,btemp+8	;volatile
 47185  014808  0062  F758  F00A   	movff	_C+215,btemp+9	;volatile
 47186  01480E  0062  F75C  F00B   	movff	_C+216,btemp+10	;volatile
 47187  014814  0062  F760  F00C   	movff	_C+217,btemp+11	;volatile
 47188                           
 47189                           ;stkvar	_adj @ sp[(-6)+0]
 47190  01481A  0EFA               	movlw	-6
 47191  01481C  0060  F027  FFE3   	movff	btemp+8,plusw1
 47192  014822  0EFB               	movlw	-5
 47193  014824  0060  F02B  FFE3   	movff	btemp+9,plusw1
 47194  01482A  0EFC               	movlw	-4
 47195  01482C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 47196  014832  0EFD               	movlw	-3
 47197  014834  0060  F033  FFE3   	movff	btemp+11,plusw1
 47198  01483A                     l16689:
 47199                           
 47200                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 47201  01483A  0E0A               	movlw	10
 47202  01483C  6EE6               	movwf	postinc1,c
 47203  01483E  0ED7               	movlw	215
 47204  014840  6EE6               	movwf	postinc1,c
 47205  014842  0E23               	movlw	35
 47206  014844  6EE6               	movwf	postinc1,c
 47207  014846  0E3C               	movlw	60
 47208  014848  6EE6               	movwf	postinc1,c
 47209  01484A  EE22  F143         	lfsr	2,_C+68	;volatile
 47210  01484E  006F FF7B FFE6     	movff	postinc2,postinc1
 47211  014854  006F FF7B FFE6     	movff	postinc2,postinc1
 47212  01485A  006F FF7B FFE6     	movff	postinc2,postinc1
 47213  014860  006F FF7B FFE6     	movff	postinc2,postinc1
 47214  014866  EC2B  F0EF         	call	___flge	;wreg free
 47215  01486A  B001               	btfsc	btemp& (0+255),0,c
 47216  01486C  D01C               	goto	l16693
 47217                           
 47218                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 47219  01486E  0062  F744  F009   	movff	_C+210,btemp+8	;volatile
 47220  014874  0062  F748  F00A   	movff	_C+211,btemp+9	;volatile
 47221  01487A  0062  F74C  F00B   	movff	_C+212,btemp+10	;volatile
 47222  014880  0062  F750  F00C   	movff	_C+213,btemp+11	;volatile
 47223                           
 47224                           ;stkvar	_adj @ sp[(-6)+0]
 47225  014886  0EFA               	movlw	-6
 47226  014888  0060  F027  FFE3   	movff	btemp+8,plusw1
 47227  01488E  0EFB               	movlw	-5
 47228  014890  0060  F02B  FFE3   	movff	btemp+9,plusw1
 47229  014896  0EFC               	movlw	-4
 47230  014898  0060  F02F  FFE3   	movff	btemp+10,plusw1
 47231  01489E  0EFD               	movlw	-3
 47232  0148A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 47233  0148A6                     l16693:
 47234                           
 47235                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 47236  0148A6  0E00               	movlw	0
 47237  0148A8  6EE6               	movwf	postinc1,c
 47238  0148AA  0E00               	movlw	0
 47239  0148AC  6EE6               	movwf	postinc1,c
 47240  0148AE  0E61               	movlw	97
 47241  0148B0  6EE6               	movwf	postinc1,c
 47242  0148B2  0E45               	movlw	69
 47243  0148B4  6EE6               	movwf	postinc1,c
 47244                           
 47245                           ;stkvar	_adj @ sp[(-10)+0]
 47246  0148B6  0EF6               	movlw	-10
 47247  0148B8  006F FF8F FFE6     	movff	plusw1,postinc1
 47248  0148BE  006F FF8F FFE6     	movff	plusw1,postinc1
 47249  0148C4  006F FF8F FFE6     	movff	plusw1,postinc1
 47250  0148CA  006F FF8F FFE6     	movff	plusw1,postinc1
 47251  0148D0  EE22  F143         	lfsr	2,_C+68	;volatile
 47252  0148D4  006F FF7B FFE6     	movff	postinc2,postinc1
 47253  0148DA  006F FF7B FFE6     	movff	postinc2,postinc1
 47254  0148E0  006F FF7B FFE6     	movff	postinc2,postinc1
 47255  0148E6  006F FF7B FFE6     	movff	postinc2,postinc1
 47256  0148EC  EC89  F0B1         	call	___flmul	;wreg free
 47257  0148F0  0060  F007  FFE6   	movff	btemp,postinc1
 47258  0148F6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47259  0148FC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47260  014902  0060  F013  FFE6   	movff	btemp+3,postinc1
 47261  014908  ECDA  F0BC         	call	___fldiv	;wreg free
 47262  01490C  0060  F007  FFE6   	movff	btemp,postinc1
 47263  014912  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47264  014918  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47265  01491E  0060  F013  FFE6   	movff	btemp+3,postinc1
 47266  014924  0E8F               	movlw	low (_C+144)
 47267  014926  6EE6               	movwf	postinc1,c
 47268  014928  0E09               	movlw	high (_C+144)
 47269  01492A  6EE6               	movwf	postinc1,c
 47270  01492C  ECA7  F004         	call	___asfladd	;wreg free
 47271                           
 47272                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 47273  014930  EE22  F18F         	lfsr	2,_C+144	;volatile
 47274  014934  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 47275  01493A  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 47276  014940  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 47277  014946  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 47278                           
 47279                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 47280  01494C  EE22  F19B         	lfsr	2,_C+156	;volatile
 47281  014950  006F FF7B FFE6     	movff	postinc2,postinc1
 47282  014956  006F FF7B FFE6     	movff	postinc2,postinc1
 47283  01495C  006F FF7B FFE6     	movff	postinc2,postinc1
 47284  014962  006F FF7B FFE6     	movff	postinc2,postinc1
 47285  014968  EE22  F18B         	lfsr	2,_C+140	;volatile
 47286  01496C  006F FF7B FFE6     	movff	postinc2,postinc1
 47287  014972  006F FF7B FFE6     	movff	postinc2,postinc1
 47288  014978  006F FF7B FFE6     	movff	postinc2,postinc1
 47289  01497E  006F FF7B FFE6     	movff	postinc2,postinc1
 47290  014984  EC2B  F0EF         	call	___flge	;wreg free
 47291  014988  B001               	btfsc	btemp& (0+255),0,c
 47292  01498A  D00E               	goto	l16701
 47293                           
 47294                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 47295  01498C  EE22  F18B         	lfsr	2,_C+140	;volatile
 47296  014990  006F FF78  F99B    	movff	postinc2,_C+156	;volatile
 47297  014996  006F FF78  F99C    	movff	postinc2,_C+157	;volatile
 47298  01499C  006F FF78  F99D    	movff	postinc2,_C+158	;volatile
 47299  0149A2  006F FF74  F99E    	movff	postdec2,_C+159	;volatile
 47300  0149A8                     l16701:
 47301                           
 47302                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 47303  0149A8  0ECD               	movlw	205
 47304  0149AA  6EE6               	movwf	postinc1,c
 47305  0149AC  0ECC               	movlw	204
 47306  0149AE  6EE6               	movwf	postinc1,c
 47307  0149B0  0ECC               	movlw	204
 47308  0149B2  6EE6               	movwf	postinc1,c
 47309  0149B4  0E3D               	movlw	61
 47310  0149B6  6EE6               	movwf	postinc1,c
 47311  0149B8  EE22  F19B         	lfsr	2,_C+156	;volatile
 47312  0149BC  006F FF7B FFE6     	movff	postinc2,postinc1
 47313  0149C2  006F FF7B FFE6     	movff	postinc2,postinc1
 47314  0149C8  006F FF7B FFE6     	movff	postinc2,postinc1
 47315  0149CE  006F FF7B FFE6     	movff	postinc2,postinc1
 47316  0149D4  EC2B  F0EF         	call	___flge	;wreg free
 47317  0149D8  B001               	btfsc	btemp& (0+255),0,c
 47318  0149DA  D010               	goto	l16705
 47319                           
 47320                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 47321  0149DC  0ECD               	movlw	205
 47322  0149DE  006F FFA0  F99B    	movff	wreg,_C+156	;volatile
 47323  0149E4  0ECC               	movlw	204
 47324  0149E6  006F FFA0  F99C    	movff	wreg,_C+157	;volatile
 47325  0149EC  0ECC               	movlw	204
 47326  0149EE  006F FFA0  F99D    	movff	wreg,_C+158	;volatile
 47327  0149F4  0E3D               	movlw	61
 47328  0149F6  006F FFA0  F99E    	movff	wreg,_C+159	;volatile
 47329  0149FC                     l16705:
 47330                           
 47331                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 47332  0149FC  0E00               	movlw	0
 47333  0149FE  6EE6               	movwf	postinc1,c
 47334  014A00  0E00               	movlw	0
 47335  014A02  6EE6               	movwf	postinc1,c
 47336  014A04  0E61               	movlw	97
 47337  014A06  6EE6               	movwf	postinc1,c
 47338  014A08  0E45               	movlw	69
 47339  014A0A  6EE6               	movwf	postinc1,c
 47340  014A0C  EE22  F147         	lfsr	2,_C+72	;volatile
 47341  014A10  006F FF7B FFE6     	movff	postinc2,postinc1
 47342  014A16  006F FF7B FFE6     	movff	postinc2,postinc1
 47343  014A1C  006F FF7B FFE6     	movff	postinc2,postinc1
 47344  014A22  006F FF7B FFE6     	movff	postinc2,postinc1
 47345  014A28  ECDA  F0BC         	call	___fldiv	;wreg free
 47346  014A2C  0060  F007  FFE6   	movff	btemp,postinc1
 47347  014A32  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47348  014A38  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47349  014A3E  0060  F013  FFE6   	movff	btemp+3,postinc1
 47350  014A44  0E93               	movlw	low (_C+148)
 47351  014A46  6EE6               	movwf	postinc1,c
 47352  014A48  0E09               	movlw	high (_C+148)
 47353  014A4A  6EE6               	movwf	postinc1,c
 47354  014A4C  ECA7  F004         	call	___asfladd	;wreg free
 47355                           
 47356                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 47357  014A50  0E00               	movlw	0
 47358  014A52  6EE6               	movwf	postinc1,c
 47359  014A54  0E00               	movlw	0
 47360  014A56  6EE6               	movwf	postinc1,c
 47361  014A58  0E61               	movlw	97
 47362  014A5A  6EE6               	movwf	postinc1,c
 47363  014A5C  0E45               	movlw	69
 47364  014A5E  6EE6               	movwf	postinc1,c
 47365  014A60  EE22  F17B         	lfsr	2,_C+124	;volatile
 47366  014A64  006F FF7B FFE6     	movff	postinc2,postinc1
 47367  014A6A  006F FF7B FFE6     	movff	postinc2,postinc1
 47368  014A70  006F FF7B FFE6     	movff	postinc2,postinc1
 47369  014A76  006F FF7B FFE6     	movff	postinc2,postinc1
 47370  014A7C  ECDA  F0BC         	call	___fldiv	;wreg free
 47371  014A80  0060  F007  FFE6   	movff	btemp,postinc1
 47372  014A86  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47373  014A8C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47374  014A92  0060  F013  FFE6   	movff	btemp+3,postinc1
 47375  014A98  0EA7               	movlw	low (_C+168)
 47376  014A9A  6EE6               	movwf	postinc1,c
 47377  014A9C  0E09               	movlw	high (_C+168)
 47378  014A9E  6EE6               	movwf	postinc1,c
 47379  014AA0  ECA7  F004         	call	___asfladd	;wreg free
 47380                           
 47381                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 47382  014AA4  0E00               	movlw	0
 47383  014AA6  6EE6               	movwf	postinc1,c
 47384  014AA8  0E00               	movlw	0
 47385  014AAA  6EE6               	movwf	postinc1,c
 47386  014AAC  0E61               	movlw	97
 47387  014AAE  6EE6               	movwf	postinc1,c
 47388  014AB0  0E45               	movlw	69
 47389  014AB2  6EE6               	movwf	postinc1,c
 47390  014AB4  EE22  F177         	lfsr	2,_C+120	;volatile
 47391  014AB8  006F FF7B FFE6     	movff	postinc2,postinc1
 47392  014ABE  006F FF7B FFE6     	movff	postinc2,postinc1
 47393  014AC4  006F FF7B FFE6     	movff	postinc2,postinc1
 47394  014ACA  006F FF7B FFE6     	movff	postinc2,postinc1
 47395  014AD0  ECDA  F0BC         	call	___fldiv	;wreg free
 47396  014AD4  0060  F007  FFE6   	movff	btemp,postinc1
 47397  014ADA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47398  014AE0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47399  014AE6  0060  F013  FFE6   	movff	btemp+3,postinc1
 47400  014AEC  0EAB               	movlw	low (_C+172)
 47401  014AEE  6EE6               	movwf	postinc1,c
 47402  014AF0  0E09               	movlw	high (_C+172)
 47403  014AF2  6EE6               	movwf	postinc1,c
 47404  014AF4  ECA7  F004         	call	___asfladd	;wreg free
 47405                           
 47406                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 47407  014AF8  0E00               	movlw	0
 47408  014AFA  6EE6               	movwf	postinc1,c
 47409  014AFC  0E00               	movlw	0
 47410  014AFE  6EE6               	movwf	postinc1,c
 47411  014B00  0E61               	movlw	97
 47412  014B02  6EE6               	movwf	postinc1,c
 47413  014B04  0E45               	movlw	69
 47414  014B06  6EE6               	movwf	postinc1,c
 47415  014B08  EE22  F173         	lfsr	2,_C+116	;volatile
 47416  014B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 47417  014B12  006F FF7B FFE6     	movff	postinc2,postinc1
 47418  014B18  006F FF7B FFE6     	movff	postinc2,postinc1
 47419  014B1E  006F FF7B FFE6     	movff	postinc2,postinc1
 47420  014B24  ECDA  F0BC         	call	___fldiv	;wreg free
 47421  014B28  0060  F007  FFE6   	movff	btemp,postinc1
 47422  014B2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47423  014B34  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47424  014B3A  0060  F013  FFE6   	movff	btemp+3,postinc1
 47425  014B40  0EAF               	movlw	low (_C+176)
 47426  014B42  6EE6               	movwf	postinc1,c
 47427  014B44  0E09               	movlw	high (_C+176)
 47428  014B46  6EE6               	movwf	postinc1,c
 47429  014B48  ECA7  F004         	call	___asfladd	;wreg free
 47430                           
 47431                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 47432  014B4C  EE22  F17F         	lfsr	2,_C+128	;volatile
 47433  014B50  006F FF7B FFE6     	movff	postinc2,postinc1
 47434  014B56  006F FF7B FFE6     	movff	postinc2,postinc1
 47435  014B5C  006F FF7B FFE6     	movff	postinc2,postinc1
 47436  014B62  006F FF7B FFE6     	movff	postinc2,postinc1
 47437  014B68  0E00               	movlw	0
 47438  014B6A  6EE6               	movwf	postinc1,c
 47439  014B6C  0E00               	movlw	0
 47440  014B6E  6EE6               	movwf	postinc1,c
 47441  014B70  0E00               	movlw	0
 47442  014B72  6EE6               	movwf	postinc1,c
 47443  014B74  0E00               	movlw	0
 47444  014B76  6EE6               	movwf	postinc1,c
 47445  014B78  EC2B  F0EF         	call	___flge	;wreg free
 47446  014B7C  B001               	btfsc	btemp& (0+255),0,c
 47447  014B7E  D02A               	goto	l16711
 47448                           
 47449                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 47450  014B80  0E00               	movlw	0
 47451  014B82  6EE6               	movwf	postinc1,c
 47452  014B84  0E00               	movlw	0
 47453  014B86  6EE6               	movwf	postinc1,c
 47454  014B88  0E61               	movlw	97
 47455  014B8A  6EE6               	movwf	postinc1,c
 47456  014B8C  0E45               	movlw	69
 47457  014B8E  6EE6               	movwf	postinc1,c
 47458  014B90  EE22  F17F         	lfsr	2,_C+128	;volatile
 47459  014B94  006F FF7B FFE6     	movff	postinc2,postinc1
 47460  014B9A  006F FF7B FFE6     	movff	postinc2,postinc1
 47461  014BA0  006F FF7B FFE6     	movff	postinc2,postinc1
 47462  014BA6  006F FF7B FFE6     	movff	postinc2,postinc1
 47463  014BAC  ECDA  F0BC         	call	___fldiv	;wreg free
 47464  014BB0  0060  F007  FFE6   	movff	btemp,postinc1
 47465  014BB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47466  014BBC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47467  014BC2  0060  F013  FFE6   	movff	btemp+3,postinc1
 47468  014BC8  0E9F               	movlw	low (_C+160)
 47469  014BCA  6EE6               	movwf	postinc1,c
 47470  014BCC  0E09               	movlw	high (_C+160)
 47471  014BCE  6EE6               	movwf	postinc1,c
 47472  014BD0  ECA7  F004         	call	___asfladd	;wreg free
 47473  014BD4                     l16711:
 47474                           
 47475                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 47476  014BD4  EE22  F17F         	lfsr	2,_C+128	;volatile
 47477  014BD8  0E03               	movlw	3
 47478  014BDA  AEDB               	btfss	plusw2,7,c
 47479  014BDC  D038               	goto	l16715
 47480                           
 47481                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 47482  014BDE  0E00               	movlw	0
 47483  014BE0  6EE6               	movwf	postinc1,c
 47484  014BE2  0E00               	movlw	0
 47485  014BE4  6EE6               	movwf	postinc1,c
 47486  014BE6  0E61               	movlw	97
 47487  014BE8  6EE6               	movwf	postinc1,c
 47488  014BEA  0E45               	movlw	69
 47489  014BEC  6EE6               	movwf	postinc1,c
 47490  014BEE  EE22  F17F         	lfsr	2,_C+128	;volatile
 47491  014BF2  006F FF7B FFE6     	movff	postinc2,postinc1
 47492  014BF8  006F FF7B FFE6     	movff	postinc2,postinc1
 47493  014BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 47494  014C04  006F FF7B FFE6     	movff	postinc2,postinc1
 47495  014C0A  ECDA  F0BC         	call	___fldiv	;wreg free
 47496  014C0E  0060  F007  FFE6   	movff	btemp,postinc1
 47497  014C14  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47498  014C1A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47499  014C20  0060  F013  FFE6   	movff	btemp+3,postinc1
 47500  014C26  ECB9  F0FE         	call	_fabsf	;wreg free
 47501  014C2A  0060  F007  FFE6   	movff	btemp,postinc1
 47502  014C30  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47503  014C36  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47504  014C3C  0060  F013  FFE6   	movff	btemp+3,postinc1
 47505  014C42  0EA3               	movlw	low (_C+164)
 47506  014C44  6EE6               	movwf	postinc1,c
 47507  014C46  0E09               	movlw	high (_C+164)
 47508  014C48  6EE6               	movwf	postinc1,c
 47509  014C4A  ECA7  F004         	call	___asfladd	;wreg free
 47510  014C4E                     l16715:
 47511                           
 47512                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 47513  014C4E  0E00               	movlw	0
 47514  014C50  6EE6               	movwf	postinc1,c
 47515  014C52  0E00               	movlw	0
 47516  014C54  6EE6               	movwf	postinc1,c
 47517  014C56  0EC8               	movlw	200
 47518  014C58  6EE6               	movwf	postinc1,c
 47519  014C5A  0E42               	movlw	66
 47520  014C5C  6EE6               	movwf	postinc1,c
 47521  014C5E  EE22  F18B         	lfsr	2,_C+140	;volatile
 47522  014C62  006F FF7B FFE6     	movff	postinc2,postinc1
 47523  014C68  006F FF7B FFE6     	movff	postinc2,postinc1
 47524  014C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 47525  014C74  006F FF7B FFE6     	movff	postinc2,postinc1
 47526  014C7A  EE22  F19B         	lfsr	2,_C+156	;volatile
 47527  014C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 47528  014C84  006F FF7B FFE6     	movff	postinc2,postinc1
 47529  014C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 47530  014C90  006F FF7B FFE6     	movff	postinc2,postinc1
 47531  014C96  ECDA  F0BC         	call	___fldiv	;wreg free
 47532  014C9A  0060  F007  FFE6   	movff	btemp,postinc1
 47533  014CA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47534  014CA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47535  014CAC  0060  F013  FFE6   	movff	btemp+3,postinc1
 47536  014CB2  EC89  F0B1         	call	___flmul	;wreg free
 47537  014CB6  0060  F007  FFE6   	movff	btemp,postinc1
 47538  014CBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47539  014CC2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47540  014CC8  0060  F013  FFE6   	movff	btemp+3,postinc1
 47541  014CCE  ECBF  F0ED         	call	___fltol	;wreg free
 47542  014CD2  0060  F004  F00B   	movff	btemp,btemp+10
 47543  014CD8  0060  F008  F00C   	movff	btemp+1,btemp+11
 47544  014CDE  0E01               	movlw	1
 47545  014CE0  260B               	addwf	(btemp+10)^0,f,c
 47546  014CE2  0E00               	movlw	0
 47547  014CE4  220C               	addwfc	(btemp+11)^0,f,c
 47548  014CE6  0060  F02C  F9B5   	movff	btemp+10,_C+182	;volatile
 47549  014CEC  0060  F030  F9B6   	movff	btemp+11,_C+183	;volatile
 47550                           
 47551                           ;bsoc.c: 76:  if (C.soc > 100)
 47552  014CF2  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47553  014CF6  0E01               	movlw	1
 47554  014CF8  50DB               	movf	plusw2,w,c
 47555  014CFA  E104               	bnz	u1639_20
 47556  014CFC  0E65               	movlw	101
 47557  014CFE  5CDE               	subwf	postinc2,w,c
 47558  014D00  A0D8               	btfss	status,0,c
 47559  014D02  D008               	goto	l16721
 47560  014D04                     u1639_20:
 47561                           
 47562                           ;bsoc.c: 77:   C.soc = 100;
 47563  014D04  0E64               	movlw	100
 47564  014D06  006F FFA0  F9B5    	movff	wreg,_C+182	;volatile
 47565  014D0C  0E00               	movlw	0
 47566  014D0E  006F FFA0  F9B6    	movff	wreg,_C+183	;volatile
 47567  014D14                     l16721:
 47568                           
 47569                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 47570  014D14  EE22  F143         	lfsr	2,_C+68	;volatile
 47571  014D18  0E03               	movlw	3
 47572  014D1A  AEDB               	btfss	plusw2,7,c
 47573  014D1C  D047               	goto	l2345
 47574                           
 47575                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 47576  014D1E  EE22  F143         	lfsr	2,_C+68	;volatile
 47577  014D22  006F FF7B FFE6     	movff	postinc2,postinc1
 47578  014D28  006F FF7B FFE6     	movff	postinc2,postinc1
 47579  014D2E  006F FF7B FFE6     	movff	postinc2,postinc1
 47580  014D34  006F FF7B FFE6     	movff	postinc2,postinc1
 47581  014D3A  EE22  F19B         	lfsr	2,_C+156	;volatile
 47582  014D3E  006F FF7B FFE6     	movff	postinc2,postinc1
 47583  014D44  006F FF7B FFE6     	movff	postinc2,postinc1
 47584  014D4A  006F FF7B FFE6     	movff	postinc2,postinc1
 47585  014D50  006F FF7B FFE6     	movff	postinc2,postinc1
 47586  014D56  ECDA  F0BC         	call	___fldiv	;wreg free
 47587  014D5A  0060  F007  FFE6   	movff	btemp,postinc1
 47588  014D60  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47589  014D66  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47590  014D6C  0060  F013  FFE6   	movff	btemp+3,postinc1
 47591  014D72  EC29  F009         	call	___flneg	;wreg free
 47592  014D76  0060  F007  FFE6   	movff	btemp,postinc1
 47593  014D7C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47594  014D82  0060  F00F  FFE6   	movff	btemp+2,postinc1
 47595  014D88  0060  F013  FFE6   	movff	btemp+3,postinc1
 47596  014D8E  ECBF  F0ED         	call	___fltol	;wreg free
 47597  014D92  0060  F004  F00B   	movff	btemp,btemp+10
 47598  014D98  0060  F008  F00C   	movff	btemp+1,btemp+11
 47599  014D9E  0060  F02C  F9B3   	movff	btemp+10,_C+180	;volatile
 47600  014DA4  0060  F030  F9B4   	movff	btemp+11,_C+181	;volatile
 47601                           
 47602                           ;bsoc.c: 81:  } else {
 47603  014DAA  D008               	goto	l16725
 47604  014DAC                     l2345:
 47605                           
 47606                           ;bsoc.c: 82:   C.runtime = 99;
 47607  014DAC  0E63               	movlw	99
 47608  014DAE  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 47609  014DB4  0E00               	movlw	0
 47610  014DB6  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 47611  014DBC                     l16725:
 47612                           
 47613                           ;bsoc.c: 84:  if (C.runtime > 99)
 47614  014DBC  EE22  F1B3         	lfsr	2,_C+180	;volatile
 47615  014DC0  0E01               	movlw	1
 47616  014DC2  50DB               	movf	plusw2,w,c
 47617  014DC4  E104               	bnz	u1641_20
 47618  014DC6  0E64               	movlw	100
 47619  014DC8  5CDE               	subwf	postinc2,w,c
 47620  014DCA  A0D8               	btfss	status,0,c
 47621  014DCC  D008               	goto	l16729
 47622  014DCE                     u1641_20:
 47623                           
 47624                           ;bsoc.c: 85:   C.runtime = 99;
 47625  014DCE  0E63               	movlw	99
 47626  014DD0  006F FFA0  F9B3    	movff	wreg,_C+180	;volatile
 47627  014DD6  0E00               	movlw	0
 47628  014DD8  006F FFA0  F9B4    	movff	wreg,_C+181	;volatile
 47629  014DDE                     l16729:
 47630                           
 47631                           ;bsoc.c: 87:  V.lowint_count++;
 47632  014DDE  0E01               	movlw	1
 47633  014DE0  0101               	movlb	1	; () banked
 47634  014DE2  27BB               	addwf	(_V+180)& (0+255),f,b	;volatile
 47635  014DE4  0E00               	movlw	0
 47636  014DE6  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 47637  014DE8  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 47638  014DEA  23BE               	addwfc	(_V+183)& (0+255),f,b	;volatile
 47639                           
 47640                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 47641  014DEC  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 47642  014DEE  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 47643  014DF0  A4D8               	btfss	status,2,c
 47644  014DF2  D177               	goto	l16741
 47645                           
 47646                           ; BSR set to: 1
 47647  014DF4  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 47648  014DF6  B4D8               	btfsc	status,2,c
 47649  014DF8  D174               	goto	l16741
 47650                           
 47651                           ; BSR set to: 1
 47652                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 47653  014DFA  ECF6  F00F         	call	_port_data_dma_ptr	;wreg free
 47654                           
 47655                           ;stkvar	_log_ptr @ sp[(-6)+4]
 47656  014DFE  0EFF               	movlw	-1
 47657  014E00  0060  F00B  FFE3   	movff	btemp+1,plusw1
 47658  014E06  0EFE               	movlw	-2
 47659  014E08  0060  F007  FFE3   	movff	btemp,plusw1
 47660                           
 47661                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 47662  014E0E  EE22  F1D1         	lfsr	2,_C+210	;volatile
 47663  014E12  006F FF7B FFE6     	movff	postinc2,postinc1
 47664  014E18  006F FF7B FFE6     	movff	postinc2,postinc1
 47665  014E1E  006F FF7B FFE6     	movff	postinc2,postinc1
 47666  014E24  006F FF7B FFE6     	movff	postinc2,postinc1
 47667  014E2A  EE22  F1D5         	lfsr	2,_C+214	;volatile
 47668  014E2E  006F FF7B FFE6     	movff	postinc2,postinc1
 47669  014E34  006F FF7B FFE6     	movff	postinc2,postinc1
 47670  014E3A  006F FF7B FFE6     	movff	postinc2,postinc1
 47671  014E40  006F FF7B FFE6     	movff	postinc2,postinc1
 47672  014E46  EE22  F19B         	lfsr	2,_C+156	;volatile
 47673  014E4A  006F FF7B FFE6     	movff	postinc2,postinc1
 47674  014E50  006F FF7B FFE6     	movff	postinc2,postinc1
 47675  014E56  006F FF7B FFE6     	movff	postinc2,postinc1
 47676  014E5C  006F FF7B FFE6     	movff	postinc2,postinc1
 47677  014E62  EE22  F243         	lfsr	2,_C+324	;volatile
 47678  014E66  006F FF7B FFE6     	movff	postinc2,postinc1
 47679  014E6C  006F FF7B FFE6     	movff	postinc2,postinc1
 47680  014E72  006F FF7B FFE6     	movff	postinc2,postinc1
 47681  014E78  006F FF7B FFE6     	movff	postinc2,postinc1
 47682  014E7E  EE22  F23F         	lfsr	2,_C+320	;volatile
 47683  014E82  006F FF7B FFE6     	movff	postinc2,postinc1
 47684  014E88  006F FF7B FFE6     	movff	postinc2,postinc1
 47685  014E8E  006F FF7B FFE6     	movff	postinc2,postinc1
 47686  014E94  006F FF7B FFE6     	movff	postinc2,postinc1
 47687  014E9A  EE22  F23D         	lfsr	2,_C+318	;volatile
 47688  014E9E  50DF               	movf	indf2,w,c
 47689  014EA0  6EE6               	movwf	postinc1,c
 47690  014EA2  0E00               	movlw	0
 47691  014EA4  6EE6               	movwf	postinc1,c
 47692  014EA6  ECDA  F00F         	call	_get_ac_charger_relay	;wreg free
 47693  014EAA  5001               	movf	btemp^0,w,c
 47694  014EAC  6EE6               	movwf	postinc1,c
 47695  014EAE  0E00               	movlw	0
 47696  014EB0  6EE6               	movwf	postinc1,c
 47697  014EB2  EE22  F167         	lfsr	2,_C+104	;volatile
 47698  014EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 47699  014EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 47700  014EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 47701  014EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 47702  014ECE  EE22  F187         	lfsr	2,_C+136	;volatile
 47703  014ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 47704  014ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 47705  014EDE  006F FF7B FFE6     	movff	postinc2,postinc1
 47706  014EE4  006F FF7B FFE6     	movff	postinc2,postinc1
 47707  014EEA  EE22  F1B3         	lfsr	2,_C+180	;volatile
 47708  014EEE  006F FF78  F00B    	movff	postinc2,btemp+10
 47709  014EF4  006F FF74  F00C    	movff	postdec2,btemp+11
 47710  014EFA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 47711  014F00  0060  F033  FFE6   	movff	btemp+11,postinc1
 47712  014F06  EE22  F1B5         	lfsr	2,_C+182	;volatile
 47713  014F0A  006F FF78  F00B    	movff	postinc2,btemp+10
 47714  014F10  006F FF74  F00C    	movff	postdec2,btemp+11
 47715  014F16  0060  F02F  FFE6   	movff	btemp+10,postinc1
 47716  014F1C  0060  F033  FFE6   	movff	btemp+11,postinc1
 47717  014F22  EE22  F193         	lfsr	2,_C+148	;volatile
 47718  014F26  006F FF7B FFE6     	movff	postinc2,postinc1
 47719  014F2C  006F FF7B FFE6     	movff	postinc2,postinc1
 47720  014F32  006F FF7B FFE6     	movff	postinc2,postinc1
 47721  014F38  006F FF7B FFE6     	movff	postinc2,postinc1
 47722  014F3E  EE22  F18F         	lfsr	2,_C+144	;volatile
 47723  014F42  006F FF7B FFE6     	movff	postinc2,postinc1
 47724  014F48  006F FF7B FFE6     	movff	postinc2,postinc1
 47725  014F4E  006F FF7B FFE6     	movff	postinc2,postinc1
 47726  014F54  006F FF7B FFE6     	movff	postinc2,postinc1
 47727  014F5A  EE22  F177         	lfsr	2,_C+120	;volatile
 47728  014F5E  006F FF7B FFE6     	movff	postinc2,postinc1
 47729  014F64  006F FF7B FFE6     	movff	postinc2,postinc1
 47730  014F6A  006F FF7B FFE6     	movff	postinc2,postinc1
 47731  014F70  006F FF7B FFE6     	movff	postinc2,postinc1
 47732  014F76  EE22  F173         	lfsr	2,_C+116	;volatile
 47733  014F7A  006F FF7B FFE6     	movff	postinc2,postinc1
 47734  014F80  006F FF7B FFE6     	movff	postinc2,postinc1
 47735  014F86  006F FF7B FFE6     	movff	postinc2,postinc1
 47736  014F8C  006F FF7B FFE6     	movff	postinc2,postinc1
 47737  014F92  EE22  F17B         	lfsr	2,_C+124	;volatile
 47738  014F96  006F FF7B FFE6     	movff	postinc2,postinc1
 47739  014F9C  006F FF7B FFE6     	movff	postinc2,postinc1
 47740  014FA2  006F FF7B FFE6     	movff	postinc2,postinc1
 47741  014FA8  006F FF7B FFE6     	movff	postinc2,postinc1
 47742  014FAE  EE22  F17F         	lfsr	2,_C+128	;volatile
 47743  014FB2  006F FF7B FFE6     	movff	postinc2,postinc1
 47744  014FB8  006F FF7B FFE6     	movff	postinc2,postinc1
 47745  014FBE  006F FF7B FFE6     	movff	postinc2,postinc1
 47746  014FC4  006F FF7B FFE6     	movff	postinc2,postinc1
 47747  014FCA  EE22  F147         	lfsr	2,_C+72	;volatile
 47748  014FCE  006F FF7B FFE6     	movff	postinc2,postinc1
 47749  014FD4  006F FF7B FFE6     	movff	postinc2,postinc1
 47750  014FDA  006F FF7B FFE6     	movff	postinc2,postinc1
 47751  014FE0  006F FF7B FFE6     	movff	postinc2,postinc1
 47752  014FE6  EE22  F143         	lfsr	2,_C+68	;volatile
 47753  014FEA  006F FF7B FFE6     	movff	postinc2,postinc1
 47754  014FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 47755  014FF6  006F FF7B FFE6     	movff	postinc2,postinc1
 47756  014FFC  006F FF7B FFE6     	movff	postinc2,postinc1
 47757  015002  EE22  F163         	lfsr	2,_C+100	;volatile
 47758  015006  006F FF7B FFE6     	movff	postinc2,postinc1
 47759  01500C  006F FF7B FFE6     	movff	postinc2,postinc1
 47760  015012  006F FF7B FFE6     	movff	postinc2,postinc1
 47761  015018  006F FF7B FFE6     	movff	postinc2,postinc1
 47762  01501E  EE22  F14B         	lfsr	2,_C+76	;volatile
 47763  015022  006F FF7B FFE6     	movff	postinc2,postinc1
 47764  015028  006F FF7B FFE6     	movff	postinc2,postinc1
 47765  01502E  006F FF7B FFE6     	movff	postinc2,postinc1
 47766  015034  006F FF7B FFE6     	movff	postinc2,postinc1
 47767  01503A  EE22  F14F         	lfsr	2,_C+80	;volatile
 47768  01503E  006F FF7B FFE6     	movff	postinc2,postinc1
 47769  015044  006F FF7B FFE6     	movff	postinc2,postinc1
 47770  01504A  006F FF7B FFE6     	movff	postinc2,postinc1
 47771  015050  006F FF7B FFE6     	movff	postinc2,postinc1
 47772  015056  EE22  F153         	lfsr	2,_C+84	;volatile
 47773  01505A  006F FF7B FFE6     	movff	postinc2,postinc1
 47774  015060  006F FF7B FFE6     	movff	postinc2,postinc1
 47775  015066  006F FF7B FFE6     	movff	postinc2,postinc1
 47776  01506C  006F FF7B FFE6     	movff	postinc2,postinc1
 47777  015072  0060  F623  FFE6   	movff	_V+129,postinc1
 47778  015078  0060  F627  FFE6   	movff	_V+130,postinc1
 47779  01507E  0060  F62B  FFE6   	movff	_V+131,postinc1
 47780  015084  0060  F62F  FFE6   	movff	_V+132,postinc1
 47781  01508A  0E32               	movlw	50
 47782  01508C  6EE6               	movwf	postinc1,c
 47783  01508E  0E00               	movlw	0
 47784  015090  6EE6               	movwf	postinc1,c
 47785  015092  0E3F               	movlw	low STR_90
 47786  015094  6EE6               	movwf	postinc1,c
 47787  015096  0EFA               	movlw	high STR_90
 47788  015098  6EE6               	movwf	postinc1,c
 47789                           
 47790                           ;stkvar	_log_ptr @ sp[(-98)+4]
 47791  01509A  0EA2               	movlw	-94
 47792  01509C  006F FF8F FFE6     	movff	plusw1,postinc1
 47793  0150A2  006F FF8F FFE6     	movff	plusw1,postinc1
 47794  0150A8  0E5E               	movlw	94
 47795  0150AA  6EE6               	movwf	postinc1,c
 47796  0150AC  ECDB  F0F7         	call	_sprintf	;wreg free
 47797                           
 47798                           ; BSR set to: 0
 47799                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 47800  0150B0  0E7D               	movlw	125
 47801  0150B2  6EE6               	movwf	postinc1,c
 47802  0150B4  0E00               	movlw	0
 47803  0150B6  6EE6               	movwf	postinc1,c
 47804  0150B8  0E0A               	movlw	10
 47805  0150BA  6EE6               	movwf	postinc1,c
 47806  0150BC  EC82  F00A         	call	_StartTimer	;wreg free
 47807                           
 47808                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 47809                           ;stkvar	_log_ptr @ sp[(-6)+4]
 47810  0150C0  0EFE               	movlw	-2
 47811  0150C2  006F FF8F FFE6     	movff	plusw1,postinc1
 47812  0150C8  006F FF8F FFE6     	movff	plusw1,postinc1
 47813  0150CE  EC57  F001         	call	_strlen	;wreg free
 47814  0150D2  0060  F007  FFE6   	movff	btemp,postinc1
 47815  0150D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 47816  0150DE  EC8D  F008         	call	_send_port_data_dma	;wreg free
 47817  0150E2                     l16741:
 47818                           
 47819                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 47820  0150E2  0E09               	movlw	9
 47821  0150E4  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 47822  0150E6  D001               	goto	l2349
 47823                           
 47824                           ;bsoc.c: 102:   log_update_wait = 0;
 47825  0150E8  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 47826  0150EA                     l2349:
 47827                           
 47828                           ;bsoc.c: 104:  C.update = 0;
 47829  0150EA  0E00               	movlw	0
 47830  0150EC  006F FFA0  F9B7    	movff	wreg,_C+184	;volatile
 47831                           
 47832                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 47833  0150F2  92BE               	bcf	190,1,c	;volatile
 47834                           
 47835                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 47836  0150F4  0EFA               	movlw	250
 47837  0150F6  26E1               	addwf	fsr1l,f,c
 47838  0150F8  0EFF               	movlw	255
 47839  0150FA  22E2               	addwfc	fsr1h,f,c
 47840  0150FC  0012               	return		;funcret
 47841  0150FE                     __end_of_calc_bsoc:
 47842                           	opt callstack 0
 47843                           
 47844 ;; *************** function _send_port_data_dma *****************
 47845 ;; Defined at:
 47846 ;;		line 398 in file "eadog.c"
 47847 ;; Parameters:    Size  Location     Type
 47848 ;;  dsize           2  [STACK] unsigned short 
 47849 ;; Auto vars:     Size  Location     Type
 47850 ;;		None
 47851 ;; Return value:  Size  Location     Type
 47852 ;;                  1  [STACK] void 
 47853 ;; Registers used:
 47854 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 47855 ;; Tracked objects:
 47856 ;;		On entry : 0/0
 47857 ;;		On exit  : 3F/3B
 47858 ;;		Unchanged: 0/0
 47859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47864 ;;Total ram usage:        0 bytes
 47865 ;; Hardware stack levels used:    1
 47866 ;; Hardware stack levels required when called:    3
 47867 ;; This function calls:
 47868 ;;		Nothing
 47869 ;; This function is called by:
 47870 ;;		_calc_bsoc
 47871 ;; This function uses a reentrant model
 47872 ;;
 47873                           
 47874                           	psect	text199
 47875  00111A                     __ptext199:
 47876                           	opt callstack 0
 47877  00111A                     _send_port_data_dma:
 47878                           	opt callstack 10
 47879                           
 47880                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 47881                           ;stkvar	_dsize @ sp[(0)+-2]
 47882                           
 47883                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47884                           ;incstack = 0
 47885  00111A  0EFE               	movlw	-2
 47886  00111C  04E3               	decf	plusw1,w,c
 47887  00111E  0EFF               	movlw	-1
 47888  001120  006F FF8C  F001    	movff	plusw1,btemp
 47889  001126  0E02               	movlw	2
 47890  001128  5A01               	subwfb	btemp^0,f,c
 47891  00112A  A0D8               	btfss	status,0,c
 47892  00112C  D00C               	goto	l12821
 47893                           
 47894                           ;eadog.c: 401:   dsize = 512;
 47895  00112E  0E00               	movlw	0
 47896  001130  6E0B               	movwf	(btemp+10)^0,c
 47897  001132  0E02               	movlw	2
 47898  001134  6E0C               	movwf	(btemp+11)^0,c
 47899                           
 47900                           ;stkvar	_dsize @ sp[(0)+-2]
 47901  001136  0EFE               	movlw	-2
 47902  001138  0060  F02F  FFE3   	movff	btemp+10,plusw1
 47903  00113E  0EFF               	movlw	-1
 47904  001140  0060  F033  FFE3   	movff	btemp+11,plusw1
 47905  001146                     l12821:
 47906                           
 47907                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 47908  001146  013B               	movlb	59	; () banked
 47909  001148  9FDC               	bcf	220,7,b	;volatile
 47910                           
 47911                           ; BSR set to: 59
 47912                           ;eadog.c: 404:  DMA2SSZ = dsize;
 47913                           ;stkvar	_dsize @ sp[(0)+-2]
 47914  00114A  0EFE               	movlw	-2
 47915  00114C  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 47916  001152  0EFF               	movlw	-1
 47917  001154  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 47918                           
 47919                           ; BSR set to: 59
 47920                           ;eadog.c: 405:  DMA2DSZ = 1;
 47921  00115A  0E00               	movlw	0
 47922  00115C  6FCF               	movwf	207,b	;volatile
 47923  00115E  0E01               	movlw	1
 47924  001160  6FCE               	movwf	206,b	;volatile
 47925                           
 47926                           ; BSR set to: 59
 47927                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 47928  001162  8FDC               	bsf	220,7,b	;volatile
 47929                           
 47930                           ; BSR set to: 59
 47931                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 47932  001164  8DDC               	bsf	220,6,b	;volatile
 47933                           
 47934                           ; BSR set to: 59
 47935                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 47936  001166  52E5               	movf	postdec1,f,c
 47937  001168  52E5               	movf	postdec1,f,c
 47938  00116A  0012               	return		;funcret
 47939  00116C                     __end_of_send_port_data_dma:
 47940                           	opt callstack 0
 47941                           
 47942 ;; *************** function _port_data_dma_ptr *****************
 47943 ;; Defined at:
 47944 ;;		line 413 in file "eadog.c"
 47945 ;; Parameters:    Size  Location     Type
 47946 ;;		None
 47947 ;; Auto vars:     Size  Location     Type
 47948 ;;		None
 47949 ;; Return value:  Size  Location     Type
 47950 ;;                  2  [STACK] PTR unsigned char 
 47951 ;; Registers used:
 47952 ;;		wreg, status,2, status,0, btemp, btemp+1
 47953 ;; Tracked objects:
 47954 ;;		On entry : 3F/1
 47955 ;;		On exit  : 0/0
 47956 ;;		Unchanged: 0/0
 47957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 47958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 47962 ;;Total ram usage:        0 bytes
 47963 ;; Hardware stack levels used:    1
 47964 ;; Hardware stack levels required when called:    3
 47965 ;; This function calls:
 47966 ;;		Nothing
 47967 ;; This function is called by:
 47968 ;;		_calc_bsoc
 47969 ;; This function uses a reentrant model
 47970 ;;
 47971                           
 47972                           	psect	text200
 47973  001FEC                     __ptext200:
 47974                           	opt callstack 0
 47975  001FEC                     _port_data_dma_ptr:
 47976                           	opt callstack 10
 47977                           
 47978                           ;eadog.c: 415:  return port_data;
 47979                           
 47980                           ; BSR set to: 59
 47981                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 47982                           ;incstack = 0
 47983  001FEC  0EFF               	movlw	low _port_data
 47984  001FEE  6E01               	movwf	btemp^0,c
 47985  001FF0  0E06               	movlw	high _port_data
 47986  001FF2  6E02               	movwf	(btemp+1)^0,c
 47987                           
 47988                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 47989  001FF4  0012               	return		;funcret
 47990  001FF6                     __end_of_port_data_dma_ptr:
 47991                           	opt callstack 0
 47992                           
 47993 ;; *************** function ___asfladd *****************
 47994 ;; Defined at:
 47995 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 47996 ;; Parameters:    Size  Location     Type
 47997 ;;  f1p             2  [STACK] PTR 
 47998 ;;		 -> C(336), 
 47999 ;;  f2              4  [STACK] PTR 
 48000 ;; Auto vars:     Size  Location     Type
 48001 ;;		None
 48002 ;; Return value:  Size  Location     Type
 48003 ;;                  4  [STACK] PTR 
 48004 ;; Registers used:
 48005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 48006 ;; Tracked objects:
 48007 ;;		On entry : 0/0
 48008 ;;		On exit  : 0/0
 48009 ;;		Unchanged: 0/0
 48010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48015 ;;Total ram usage:        0 bytes
 48016 ;; Hardware stack levels used:    1
 48017 ;; Hardware stack levels required when called:    4
 48018 ;; This function calls:
 48019 ;;		___fladd
 48020 ;; This function is called by:
 48021 ;;		_calc_bsoc
 48022 ;; This function uses a reentrant model
 48023 ;;
 48024                           
 48025                           	psect	text201
 48026  00094E                     __ptext201:
 48027                           	opt callstack 0
 48028  00094E                     ___asfladd:
 48029                           	opt callstack 9
 48030                           
 48031                           ;	Return value of ___asfladd is never used
 48032                           ;stkvar	_f2 @ sp[(0)+-6]
 48033                           
 48034                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48035                           ;incstack = 0
 48036  00094E  0EFA               	movlw	-6
 48037  000950  006F FF8F FFE6     	movff	plusw1,postinc1
 48038  000956  006F FF8F FFE6     	movff	plusw1,postinc1
 48039  00095C  006F FF8F FFE6     	movff	plusw1,postinc1
 48040  000962  006F FF8F FFE6     	movff	plusw1,postinc1
 48041                           
 48042                           ;stkvar	_f1p @ sp[(-4)+-2]
 48043  000968  0EFA               	movlw	-6
 48044  00096A  006F FF8F FFD9     	movff	plusw1,fsr2l
 48045  000970  0EFB               	movlw	-5
 48046  000972  006F FF8F FFDA     	movff	plusw1,fsr2h
 48047  000978  006F FF7B FFE6     	movff	postinc2,postinc1
 48048  00097E  006F FF7B FFE6     	movff	postinc2,postinc1
 48049  000984  006F FF7B FFE6     	movff	postinc2,postinc1
 48050  00098A  006F FF7B FFE6     	movff	postinc2,postinc1
 48051  000990  EC9E  F0B5         	call	___fladd	;wreg free
 48052                           
 48053                           ;stkvar	_f1p @ sp[(0)+-2]
 48054  000994  0EFE               	movlw	-2
 48055  000996  006F FF8F FFD9     	movff	plusw1,fsr2l
 48056  00099C  0EFF               	movlw	-1
 48057  00099E  006F FF8F FFDA     	movff	plusw1,fsr2h
 48058  0009A4  0060  F007  FFDE   	movff	btemp,postinc2
 48059  0009AA  0060  F00B  FFDE   	movff	btemp+1,postinc2
 48060  0009B0  0060  F00F  FFDE   	movff	btemp+2,postinc2
 48061  0009B6  0060  F013  FFDE   	movff	btemp+3,postinc2
 48062                           
 48063                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 48064  0009BC  0EFA               	movlw	250
 48065  0009BE  26E1               	addwf	fsr1l,f,c
 48066  0009C0  0EFF               	movlw	255
 48067  0009C2  22E2               	addwfc	fsr1h,f,c
 48068  0009C4  0012               	return		;funcret
 48069  0009C6                     __end_of___asfladd:
 48070                           	opt callstack 0
 48071                           
 48072 ;; *************** function _INT0_ISR *****************
 48073 ;; Defined at:
 48074 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 48075 ;; Parameters:    Size  Location     Type
 48076 ;;		None
 48077 ;; Auto vars:     Size  Location     Type
 48078 ;;		None
 48079 ;; Return value:  Size  Location     Type
 48080 ;;                  1    wreg      void 
 48081 ;; Registers used:
 48082 ;;		wreg, status,2, status,0, pclath, tosl
 48083 ;; Tracked objects:
 48084 ;;		On entry : 0/0
 48085 ;;		On exit  : 0/0
 48086 ;;		Unchanged: 0/0
 48087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48092 ;;Total ram usage:        0 bytes
 48093 ;; Hardware stack levels used:    1
 48094 ;; Hardware stack levels required when called:    2
 48095 ;; This function calls:
 48096 ;;		_INT0_CallBack
 48097 ;; This function is called by:
 48098 ;;		Interrupt level 2
 48099 ;; This function uses a non-reentrant model
 48100 ;;
 48101                           
 48102                           	psect	text202
 48103  001FC4                     __ptext202:
 48104                           	opt callstack 0
 48105  001FC4                     _INT0_ISR:
 48106                           	opt callstack 2
 48107                           
 48108                           ;incstack = 0
 48109  001FC4  EE14  F336         	lfsr	1,___inthi_sp
 48110                           
 48111                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 48112  001FC8  0139               	movlb	57	; () banked
 48113  001FCA  91A1               	bcf	161,0,b	;volatile
 48114                           
 48115                           ; BSR set to: 57
 48116                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 48117  001FCC  EC54  F00E         	call	_INT0_CallBack	;wreg free
 48118  001FD0  0011               	retfie		f
 48119  001FD2                     __end_of_INT0_ISR:
 48120                           	opt callstack 0
 48121                           
 48122 ;; *************** function _INT0_CallBack *****************
 48123 ;; Defined at:
 48124 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 48125 ;; Parameters:    Size  Location     Type
 48126 ;;		None
 48127 ;; Auto vars:     Size  Location     Type
 48128 ;;		None
 48129 ;; Return value:  Size  Location     Type
 48130 ;;                  1  [STACK] void 
 48131 ;; Registers used:
 48132 ;;		wreg, status,2, status,0, pclath, tosl
 48133 ;; Tracked objects:
 48134 ;;		On entry : 3F/39
 48135 ;;		On exit  : 0/0
 48136 ;;		Unchanged: 0/0
 48137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48142 ;;Total ram usage:        0 bytes
 48143 ;; Hardware stack levels used:    1
 48144 ;; Hardware stack levels required when called:    1
 48145 ;; This function calls:
 48146 ;;		Absolute function
 48147 ;;		_INT0_DefaultInterruptHandler
 48148 ;; This function is called by:
 48149 ;;		_INT0_ISR
 48150 ;; This function uses a reentrant model
 48151 ;;
 48152                           
 48153                           	psect	text203
 48154  001CA8                     __ptext203:
 48155                           	opt callstack 0
 48156  001CA8                     _INT0_CallBack:
 48157                           	opt callstack 2
 48158                           
 48159                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 48160                           
 48161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48162                           ;incstack = 0
 48163  001CA8  0100               	movlb	0	; () banked
 48164  001CAA  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 48165  001CAC  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 48166  001CAE  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 48167  001CB0  B4D8               	btfsc	status,2,c
 48168  001CB2  0012               	return	
 48169                           
 48170                           ; BSR set to: 0
 48171                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 48172  001CB4  D801               	call	u1306_48
 48173  001CB6  0012               	return	
 48174  001CB8                     u1306_48:
 48175  001CB8  0005               	push	
 48176  001CBA  6EFA               	movwf	pclath,c
 48177  001CBC  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 48178  001CBE  6EFD               	movwf	tosl,c
 48179  001CC0  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 48180  001CC2  6EFE               	movwf	tosh,c
 48181  001CC4  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 48182  001CC6  6EFF               	movwf	tosu,c
 48183  001CC8  50FA               	movf	pclath,w,c
 48184  001CCA  0012               	return		;indir
 48185  001CCC                     __end_of_INT0_CallBack:
 48186                           	opt callstack 0
 48187                           
 48188 ;; *************** function _INT0_DefaultInterruptHandler *****************
 48189 ;; Defined at:
 48190 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 48191 ;; Parameters:    Size  Location     Type
 48192 ;;		None
 48193 ;; Auto vars:     Size  Location     Type
 48194 ;;		None
 48195 ;; Return value:  Size  Location     Type
 48196 ;;                  1  [STACK] void 
 48197 ;; Registers used:
 48198 ;;		None
 48199 ;; Tracked objects:
 48200 ;;		On entry : 3F/0
 48201 ;;		On exit  : 0/0
 48202 ;;		Unchanged: 0/0
 48203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48208 ;;Total ram usage:        0 bytes
 48209 ;; Hardware stack levels used:    1
 48210 ;; This function calls:
 48211 ;;		Nothing
 48212 ;; This function is called by:
 48213 ;;		_EXT_INT_Initialize
 48214 ;;		_INT0_CallBack
 48215 ;; This function uses a reentrant model
 48216 ;;
 48217                           
 48218                           	psect	text204
 48219  00206A                     __ptext204:
 48220                           	opt callstack 0
 48221  00206A                     _INT0_DefaultInterruptHandler:
 48222                           	opt callstack 2
 48223                           
 48224                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48225                           
 48226                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48227                           ;incstack = 0
 48228  00206A  0012               	return		;funcret
 48229  00206C                     __end_of_INT0_DefaultInterruptHandler:
 48230                           	opt callstack 0
 48231                           
 48232 ;; *************** function _Default_ISR *****************
 48233 ;; Defined at:
 48234 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 48235 ;; Parameters:    Size  Location     Type
 48236 ;;		None
 48237 ;; Auto vars:     Size  Location     Type
 48238 ;;		None
 48239 ;; Return value:  Size  Location     Type
 48240 ;;                  1    wreg      void 
 48241 ;; Registers used:
 48242 ;;		None
 48243 ;; Tracked objects:
 48244 ;;		On entry : 0/0
 48245 ;;		On exit  : 0/0
 48246 ;;		Unchanged: 0/0
 48247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48252 ;;Total ram usage:        0 bytes
 48253 ;; Hardware stack levels used:    1
 48254 ;; This function calls:
 48255 ;;		Nothing
 48256 ;; This function is called by:
 48257 ;;		Interrupt level 2
 48258 ;; This function uses a non-reentrant model
 48259 ;;
 48260                           
 48261                           	psect	text205
 48262  002060                     __ptext205:
 48263                           	opt callstack 0
 48264  002060                     _Default_ISR:
 48265                           	opt callstack 4
 48266                           
 48267                           ;incstack = 0
 48268  002060  EE14  F336         	lfsr	1,___inthi_sp
 48269  002064  0011               	retfie		f
 48270  002066                     __end_of_Default_ISR:
 48271                           	opt callstack 0
 48272                           
 48273 ;; *************** function _ADCC_ISR *****************
 48274 ;; Defined at:
 48275 ;;		line 314 in file "mcc_generated_files/adcc.c"
 48276 ;; Parameters:    Size  Location     Type
 48277 ;;		None
 48278 ;; Auto vars:     Size  Location     Type
 48279 ;;		None
 48280 ;; Return value:  Size  Location     Type
 48281 ;;                  1    wreg      void 
 48282 ;; Registers used:
 48283 ;;		wreg, status,2, status,0, pclath, tosl
 48284 ;; Tracked objects:
 48285 ;;		On entry : 0/0
 48286 ;;		On exit  : 0/0
 48287 ;;		Unchanged: 0/0
 48288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48293 ;;Total ram usage:        0 bytes
 48294 ;; Hardware stack levels used:    1
 48295 ;; Hardware stack levels required when called:    1
 48296 ;; This function calls:
 48297 ;;		Absolute function
 48298 ;;		_ADCC_DefaultInterruptHandler
 48299 ;;		_adc_int_handler
 48300 ;; This function is called by:
 48301 ;;		Interrupt level 2
 48302 ;; This function uses a non-reentrant model
 48303 ;;
 48304                           
 48305                           	psect	text206
 48306  00193C                     __ptext206:
 48307                           	opt callstack 0
 48308  00193C                     _ADCC_ISR:
 48309                           	opt callstack 3
 48310                           
 48311                           ;incstack = 0
 48312  00193C  EE14  F336         	lfsr	1,___inthi_sp
 48313                           
 48314                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 48315  001940  0139               	movlb	57	; () banked
 48316  001942  95A1               	bcf	161,2,b	;volatile
 48317                           
 48318                           ; BSR set to: 57
 48319                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 48320  001944  0100               	movlb	0	; () banked
 48321  001946  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 48322  001948  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 48323  00194A  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 48324  00194C  B4D8               	btfsc	status,2,c
 48325  00194E  0011               	retfie		f
 48326                           
 48327                           ; BSR set to: 0
 48328                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 48329  001950  D801               	call	i2u1370_48
 48330  001952  0011               	retfie		f
 48331  001954                     i2u1370_48:
 48332  001954  0005               	push	
 48333  001956  6EFA               	movwf	pclath,c
 48334  001958  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 48335  00195A  6EFD               	movwf	tosl,c
 48336  00195C  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 48337  00195E  6EFE               	movwf	tosh,c
 48338  001960  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 48339  001962  6EFF               	movwf	tosu,c
 48340  001964  50FA               	movf	pclath,w,c
 48341  001966  0012               	return		;indir
 48342  001968                     __end_of_ADCC_ISR:
 48343                           	opt callstack 0
 48344                           
 48345 ;; *************** function _adc_int_t_handler *****************
 48346 ;; Defined at:
 48347 ;;		line 181 in file "daq.c"
 48348 ;; Parameters:    Size  Location     Type
 48349 ;;		None
 48350 ;; Auto vars:     Size  Location     Type
 48351 ;;		None
 48352 ;; Return value:  Size  Location     Type
 48353 ;;                  1  [STACK] void 
 48354 ;; Registers used:
 48355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 48356 ;; Tracked objects:
 48357 ;;		On entry : 3F/0
 48358 ;;		On exit  : 3/2
 48359 ;;		Unchanged: 0/0
 48360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48365 ;;Total ram usage:        0 bytes
 48366 ;; Hardware stack levels used:    1
 48367 ;; Hardware stack levels required when called:    1
 48368 ;; This function calls:
 48369 ;;		_ADCC_DischargeSampleCapacitor
 48370 ;;		_ADCC_StartConversion
 48371 ;; This function is called by:
 48372 ;;		_start_adc_scan
 48373 ;;		_ADCC_ThresholdISR
 48374 ;; This function uses a reentrant model
 48375 ;;
 48376                           
 48377                           	psect	text207
 48378  0007D2                     __ptext207:
 48379                           	opt callstack 0
 48380  0007D2                     _adc_int_t_handler:
 48381                           	opt callstack 2
 48382                           
 48383                           ;daq.c: 186:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 48384                           
 48385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48386                           ;incstack = 0
 48387  0007D2  013E               	movlb	62	; () banked
 48388  0007D4  51E6               	movf	230,w,b	;volatile
 48389  0007D6  006F FB9C  F001    	movff	16103,btemp	;volatile
 48390  0007DC  6A02               	clrf	(btemp+1)^0,c
 48391  0007DE  0060  F004  F002   	movff	btemp,btemp+1
 48392  0007E4  6A01               	clrf	btemp^0,c
 48393  0007E6  2601               	addwf	btemp^0,f,c
 48394  0007E8  0E00               	movlw	0
 48395  0007EA  2202               	addwfc	(btemp+1)^0,f,c
 48396  0007EC  0102               	movlb	2	; () banked
 48397  0007EE  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 48398  0007F0  0D02               	mullw	2
 48399  0007F2  0E00               	movlw	low _R
 48400  0007F4  24F3               	addwf	243,w,c
 48401  0007F6  6ED9               	movwf	fsr2l,c
 48402  0007F8  0E02               	movlw	high _R
 48403  0007FA  20F4               	addwfc	prodh,w,c
 48404  0007FC  6EDA               	movwf	fsr2h,c
 48405  0007FE  0060  F007  FFDE   	movff	btemp,postinc2
 48406  000804  0060  F00B  FFDD   	movff	btemp+1,postdec2
 48407  00080A                     l14497:
 48408                           
 48409                           ;daq.c: 188:   if (++R.scan_index > 0XD) {
 48410  00080A  0102               	movlb	2	; () banked
 48411  00080C  2B32               	incf	(_R+50)& (0+255),f,b	;volatile
 48412  00080E  0E0D               	movlw	13
 48413  000810  6532               	cpfsgt	(_R+50)& (0+255),b	;volatile
 48414  000812  D003               	goto	l14503
 48415                           
 48416                           ; BSR set to: 2
 48417                           ;daq.c: 189:    R.done = 1;
 48418  000814  0E01               	movlw	1
 48419  000816  6F35               	movwf	(_R+53)& (0+255),b	;volatile
 48420  000818  0012               	return	
 48421  00081A                     l14503:
 48422                           
 48423                           ; BSR set to: 2
 48424                           ;daq.c: 195:  } while (!((R.scan_select >> R.scan_index) &0x1));
 48425  00081A  0060  F8C8  F00C   	movff	_R+50,btemp+11	;volatile
 48426  000820  EE20  F233         	lfsr	2,_R+51	;volatile
 48427  000824  006F FF78  F009    	movff	postinc2,btemp+8
 48428  00082A  006F FF74  F00A    	movff	postdec2,btemp+9
 48429  000830  2A0C               	incf	(btemp+11)^0,f,c
 48430  000832  D003               	goto	u1367_44
 48431  000834                     u1367_45:
 48432  000834  90D8               	bcf	status,0,c
 48433  000836  320A               	rrcf	(btemp+9)^0,f,c
 48434  000838  3209               	rrcf	(btemp+8)^0,f,c
 48435  00083A                     u1367_44:
 48436  00083A  2E0C               	decfsz	(btemp+11)^0,f,c
 48437  00083C  D7FB               	goto	u1367_45
 48438  00083E  A009               	btfss	(btemp+8)^0,0,c
 48439  000840  D7E4               	goto	l14497
 48440                           
 48441                           ;daq.c: 196:  ADCC_DischargeSampleCapacitor();
 48442  000842  EC11  F010         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 48443                           
 48444                           ; BSR set to: 62
 48445                           ;daq.c: 197:  ADCC_StartConversion(R.scan_index & 0xf);
 48446  000846  0102               	movlb	2	; () banked
 48447  000848  5132               	movf	(_R+50)& (0+255),w,b	;volatile
 48448  00084A  0B0F               	andlw	15
 48449  00084C  6EE6               	movwf	postinc1,c
 48450  00084E  EC9B  F00F         	call	_ADCC_StartConversion	;wreg free
 48451                           
 48452                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 48453  000852  0012               	return		;funcret
 48454  000854                     __end_of_adc_int_t_handler:
 48455                           	opt callstack 0
 48456                           
 48457 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 48458 ;; Defined at:
 48459 ;;		line 339 in file "mcc_generated_files/adcc.c"
 48460 ;; Parameters:    Size  Location     Type
 48461 ;;		None
 48462 ;; Auto vars:     Size  Location     Type
 48463 ;;		None
 48464 ;; Return value:  Size  Location     Type
 48465 ;;                  1  [STACK] void 
 48466 ;; Registers used:
 48467 ;;		None
 48468 ;; Tracked objects:
 48469 ;;		On entry : 3F/0
 48470 ;;		On exit  : 0/0
 48471 ;;		Unchanged: 0/0
 48472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48477 ;;Total ram usage:        0 bytes
 48478 ;; Hardware stack levels used:    1
 48479 ;; This function calls:
 48480 ;;		Nothing
 48481 ;; This function is called by:
 48482 ;;		_ADCC_Initialize
 48483 ;;		_ADCC_ISR
 48484 ;;		_ADCC_ThresholdISR
 48485 ;; This function uses a reentrant model
 48486 ;;
 48487                           
 48488                           	psect	text208
 48489  00206C                     __ptext208:
 48490                           	opt callstack 0
 48491  00206C                     _ADCC_DefaultInterruptHandler:
 48492                           	opt callstack 3
 48493                           
 48494                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 48495                           
 48496                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48497                           ;incstack = 0
 48498  00206C  0012               	return		;funcret
 48499  00206E                     __end_of_ADCC_DefaultInterruptHandler:
 48500                           	opt callstack 0
 48501                           
 48502 ;; *************** function _adc_int_handler *****************
 48503 ;; Defined at:
 48504 ;;		line 171 in file "daq.c"
 48505 ;; Parameters:    Size  Location     Type
 48506 ;;		None
 48507 ;; Auto vars:     Size  Location     Type
 48508 ;;		None
 48509 ;; Return value:  Size  Location     Type
 48510 ;;                  1  [STACK] void 
 48511 ;; Registers used:
 48512 ;;		None
 48513 ;; Tracked objects:
 48514 ;;		On entry : 3F/0
 48515 ;;		On exit  : 0/0
 48516 ;;		Unchanged: 0/0
 48517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48522 ;;Total ram usage:        0 bytes
 48523 ;; Hardware stack levels used:    1
 48524 ;; This function calls:
 48525 ;;		Nothing
 48526 ;; This function is called by:
 48527 ;;		_start_adc_scan
 48528 ;;		_ADCC_ISR
 48529 ;; This function uses a reentrant model
 48530 ;;
 48531                           
 48532                           	psect	text209
 48533  00206E                     __ptext209:
 48534                           	opt callstack 0
 48535  00206E                     _adc_int_handler:
 48536                           	opt callstack 3
 48537                           
 48538                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 48539                           
 48540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48541                           ;incstack = 0
 48542  00206E  0012               	return		;funcret
 48543  002070                     __end_of_adc_int_handler:
 48544                           	opt callstack 0
 48545                           
 48546 ;; *************** function _ADCC_ThresholdISR *****************
 48547 ;; Defined at:
 48548 ;;		line 327 in file "mcc_generated_files/adcc.c"
 48549 ;; Parameters:    Size  Location     Type
 48550 ;;		None
 48551 ;; Auto vars:     Size  Location     Type
 48552 ;;		None
 48553 ;; Return value:  Size  Location     Type
 48554 ;;                  1    wreg      void 
 48555 ;; Registers used:
 48556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 48557 ;; Tracked objects:
 48558 ;;		On entry : 0/0
 48559 ;;		On exit  : 0/0
 48560 ;;		Unchanged: 0/0
 48561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48564 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48565 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48566 ;;Total ram usage:        5 bytes
 48567 ;; Hardware stack levels used:    1
 48568 ;; Hardware stack levels required when called:    2
 48569 ;; This function calls:
 48570 ;;		Absolute function
 48571 ;;		_ADCC_DefaultInterruptHandler
 48572 ;;		_adc_int_t_handler
 48573 ;; This function is called by:
 48574 ;;		Interrupt level 2
 48575 ;; This function uses a non-reentrant model
 48576 ;;
 48577                           
 48578                           	psect	text210
 48579  000B7C                     __ptext210:
 48580                           	opt callstack 0
 48581  000B7C                     _ADCC_ThresholdISR:
 48582                           	opt callstack 2
 48583                           
 48584                           ;incstack = 0
 48585  000B7C  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 48586  000B82  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 48587  000B88  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 48588  000B8E  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 48589  000B94  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 48590  000B9A  EE14  F336         	lfsr	1,___inthi_sp
 48591                           
 48592                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 48593  000B9E  0139               	movlb	57	; () banked
 48594  000BA0  97A1               	bcf	161,3,b	;volatile
 48595                           
 48596                           ; BSR set to: 57
 48597                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 48598  000BA2  0100               	movlb	0	; () banked
 48599  000BA4  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 48600  000BA6  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 48601  000BA8  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 48602  000BAA  B4D8               	btfsc	status,2,c
 48603  000BAC  D00C               	goto	i2u1372_49
 48604                           
 48605                           ; BSR set to: 0
 48606                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 48607  000BAE  D801               	call	i2u1372_48
 48608  000BB0  D00A               	goto	i2u1372_49
 48609  000BB2                     i2u1372_48:
 48610  000BB2  0005               	push	
 48611  000BB4  6EFA               	movwf	pclath,c
 48612  000BB6  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 48613  000BB8  6EFD               	movwf	tosl,c
 48614  000BBA  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 48615  000BBC  6EFE               	movwf	tosh,c
 48616  000BBE  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 48617  000BC0  6EFF               	movwf	tosu,c
 48618  000BC2  50FA               	movf	pclath,w,c
 48619  000BC4  0012               	return		;indir
 48620  000BC6                     i2u1372_49:
 48621  000BC6  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 48622  000BCC  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 48623  000BD2  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 48624  000BD8  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 48625  000BDE  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 48626  000BE4  0011               	retfie		f
 48627  000BE6                     __end_of_ADCC_ThresholdISR:
 48628                           	opt callstack 0
 48629                           
 48630 ;; *************** function _UART1_rx_vect_isr *****************
 48631 ;; Defined at:
 48632 ;;		line 181 in file "mcc_generated_files/uart1.c"
 48633 ;; Parameters:    Size  Location     Type
 48634 ;;		None
 48635 ;; Auto vars:     Size  Location     Type
 48636 ;;		None
 48637 ;; Return value:  Size  Location     Type
 48638 ;;                  1    wreg      void 
 48639 ;; Registers used:
 48640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 48641 ;; Tracked objects:
 48642 ;;		On entry : 0/0
 48643 ;;		On exit  : 0/0
 48644 ;;		Unchanged: 0/0
 48645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48650 ;;Total ram usage:        0 bytes
 48651 ;; Hardware stack levels used:    1
 48652 ;; Hardware stack levels required when called:    1
 48653 ;; This function calls:
 48654 ;;		Absolute function
 48655 ;;		_UART1_Receive_ISR
 48656 ;; This function is called by:
 48657 ;;		Interrupt level 2
 48658 ;; This function uses a non-reentrant model
 48659 ;;
 48660                           
 48661                           	psect	text211
 48662  001BA0                     __ptext211:
 48663                           	opt callstack 0
 48664  001BA0                     _UART1_rx_vect_isr:
 48665                           	opt callstack 3
 48666                           
 48667                           ;incstack = 0
 48668  001BA0  EE14  F336         	lfsr	1,___inthi_sp
 48669                           
 48670                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 48671  001BA4  0100               	movlb	0	; () banked
 48672  001BA6  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 48673  001BA8  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 48674  001BAA  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 48675  001BAC  B4D8               	btfsc	status,2,c
 48676  001BAE  0011               	retfie		f
 48677                           
 48678                           ; BSR set to: 0
 48679                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 48680  001BB0  D801               	call	i2u1374_48
 48681  001BB2  0011               	retfie		f
 48682  001BB4                     i2u1374_48:
 48683  001BB4  0005               	push	
 48684  001BB6  6EFA               	movwf	pclath,c
 48685  001BB8  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 48686  001BBA  6EFD               	movwf	tosl,c
 48687  001BBC  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 48688  001BBE  6EFE               	movwf	tosh,c
 48689  001BC0  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 48690  001BC2  6EFF               	movwf	tosu,c
 48691  001BC4  50FA               	movf	pclath,w,c
 48692  001BC6  0012               	return		;indir
 48693  001BC8                     __end_of_UART1_rx_vect_isr:
 48694                           	opt callstack 0
 48695                           
 48696 ;; *************** function _UART1_Receive_ISR *****************
 48697 ;; Defined at:
 48698 ;;		line 192 in file "mcc_generated_files/uart1.c"
 48699 ;; Parameters:    Size  Location     Type
 48700 ;;		None
 48701 ;; Auto vars:     Size  Location     Type
 48702 ;;		None
 48703 ;; Return value:  Size  Location     Type
 48704 ;;                  1  [STACK] void 
 48705 ;; Registers used:
 48706 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48707 ;; Tracked objects:
 48708 ;;		On entry : 3F/0
 48709 ;;		On exit  : 3F/0
 48710 ;;		Unchanged: 0/0
 48711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48716 ;;Total ram usage:        0 bytes
 48717 ;; Hardware stack levels used:    1
 48718 ;; This function calls:
 48719 ;;		Nothing
 48720 ;; This function is called by:
 48721 ;;		_UART1_Initialize
 48722 ;;		_UART1_rx_vect_isr
 48723 ;; This function uses a reentrant model
 48724 ;;
 48725                           
 48726                           	psect	text212
 48727  001D56                     __ptext212:
 48728                           	opt callstack 0
 48729  001D56                     _UART1_Receive_ISR:
 48730                           	opt callstack 3
 48731                           
 48732                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 48733                           
 48734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48735                           ;incstack = 0
 48736  001D56  0ED0               	movlw	low _uart1RxBuffer
 48737  001D58  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 48738  001D5A  6ED9               	movwf	fsr2l,c
 48739  001D5C  6ADA               	clrf	fsr2h,c
 48740  001D5E  0E01               	movlw	high _uart1RxBuffer
 48741  001D60  22DA               	addwfc	fsr2h,f,c
 48742  001D62  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 48743  001D68  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 48744                           
 48745                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 48746  001D6A  0E07               	movlw	7
 48747  001D6C  6447               	cpfsgt	_uart1RxHead^0,c
 48748  001D6E  D001               	goto	l13859
 48749                           
 48750                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 48751  001D70  6A47               	clrf	_uart1RxHead^0,c	;volatile
 48752  001D72                     l13859:
 48753                           
 48754                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 48755  001D72  0100               	movlb	0	; () banked
 48756  001D74  2BDA               	incf	_uart1RxCount& (0+255),f,b	;volatile
 48757                           
 48758                           ; BSR set to: 0
 48759                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 48760  001D76  0012               	return		;funcret
 48761  001D78                     __end_of_UART1_Receive_ISR:
 48762                           	opt callstack 0
 48763                           
 48764 ;; *************** function _UART2_tx_vect_isr *****************
 48765 ;; Defined at:
 48766 ;;		line 195 in file "mcc_generated_files/uart2.c"
 48767 ;; Parameters:    Size  Location     Type
 48768 ;;		None
 48769 ;; Auto vars:     Size  Location     Type
 48770 ;;		None
 48771 ;; Return value:  Size  Location     Type
 48772 ;;                  1    wreg      void 
 48773 ;; Registers used:
 48774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 48775 ;; Tracked objects:
 48776 ;;		On entry : 0/0
 48777 ;;		On exit  : 0/0
 48778 ;;		Unchanged: 0/0
 48779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48784 ;;Total ram usage:        0 bytes
 48785 ;; Hardware stack levels used:    1
 48786 ;; Hardware stack levels required when called:    1
 48787 ;; This function calls:
 48788 ;;		Absolute function
 48789 ;;		_UART2_Transmit_ISR
 48790 ;; This function is called by:
 48791 ;;		Interrupt level 2
 48792 ;; This function uses a non-reentrant model
 48793 ;;
 48794                           
 48795                           	psect	text213
 48796  001BC8                     __ptext213:
 48797                           	opt callstack 0
 48798  001BC8                     _UART2_tx_vect_isr:
 48799                           	opt callstack 3
 48800                           
 48801                           ; BSR set to: 0
 48802                           ;incstack = 0
 48803  001BC8  EE14  F336         	lfsr	1,___inthi_sp
 48804                           
 48805                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 48806  001BCC  0100               	movlb	0	; () banked
 48807  001BCE  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 48808  001BD0  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 48809  001BD2  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 48810  001BD4  B4D8               	btfsc	status,2,c
 48811  001BD6  0011               	retfie		f
 48812                           
 48813                           ; BSR set to: 0
 48814                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 48815  001BD8  D801               	call	i2u1376_48
 48816  001BDA  0011               	retfie		f
 48817  001BDC                     i2u1376_48:
 48818  001BDC  0005               	push	
 48819  001BDE  6EFA               	movwf	pclath,c
 48820  001BE0  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 48821  001BE2  6EFD               	movwf	tosl,c
 48822  001BE4  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 48823  001BE6  6EFE               	movwf	tosh,c
 48824  001BE8  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 48825  001BEA  6EFF               	movwf	tosu,c
 48826  001BEC  50FA               	movf	pclath,w,c
 48827  001BEE  0012               	return		;indir
 48828  001BF0                     __end_of_UART2_tx_vect_isr:
 48829                           	opt callstack 0
 48830                           
 48831 ;; *************** function _UART2_Transmit_ISR *****************
 48832 ;; Defined at:
 48833 ;;		line 213 in file "mcc_generated_files/uart2.c"
 48834 ;; Parameters:    Size  Location     Type
 48835 ;;		None
 48836 ;; Auto vars:     Size  Location     Type
 48837 ;;		None
 48838 ;; Return value:  Size  Location     Type
 48839 ;;                  1  [STACK] void 
 48840 ;; Registers used:
 48841 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48842 ;; Tracked objects:
 48843 ;;		On entry : 3F/0
 48844 ;;		On exit  : 3B/39
 48845 ;;		Unchanged: 0/0
 48846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48851 ;;Total ram usage:        0 bytes
 48852 ;; Hardware stack levels used:    1
 48853 ;; This function calls:
 48854 ;;		Nothing
 48855 ;; This function is called by:
 48856 ;;		_UART2_Initialize
 48857 ;;		_UART2_tx_vect_isr
 48858 ;; This function uses a reentrant model
 48859 ;;
 48860                           
 48861                           	psect	text214
 48862  001968                     __ptext214:
 48863                           	opt callstack 0
 48864  001968                     _UART2_Transmit_ISR:
 48865                           	opt callstack 3
 48866                           
 48867                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 48868                           
 48869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 48870                           ;incstack = 0
 48871  001968  0E40               	movlw	64
 48872  00196A  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 48873  00196C  D010               	goto	l675
 48874                           
 48875                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 48876  00196E  0E00               	movlw	low _uart2TxBuffer
 48877  001970  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 48878  001972  6ED9               	movwf	fsr2l,c
 48879  001974  6ADA               	clrf	fsr2h,c
 48880  001976  0E04               	movlw	high _uart2TxBuffer
 48881  001978  22DA               	addwfc	fsr2h,f,c
 48882  00197A  50DF               	movf	indf2,w,c
 48883  00197C  013D               	movlb	61	; () banked
 48884  00197E  6FD2               	movwf	210,b	;volatile
 48885                           
 48886                           ; BSR set to: 61
 48887  001980  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 48888                           
 48889                           ; BSR set to: 61
 48890                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 48891  001982  0E3F               	movlw	63
 48892  001984  6446               	cpfsgt	_uart2TxTail^0,c
 48893  001986  D001               	goto	l13871
 48894                           
 48895                           ; BSR set to: 61
 48896                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 48897  001988  6A46               	clrf	_uart2TxTail^0,c	;volatile
 48898  00198A                     l13871:
 48899                           
 48900                           ; BSR set to: 61
 48901                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 48902  00198A  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 48903                           
 48904                           ;mcc_generated_files/uart2.c: 224:     }
 48905  00198C  0012               	return	
 48906  00198E                     l675:
 48907                           
 48908                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 48909  00198E  0139               	movlb	57	; () banked
 48910  001990  9796               	bcf	150,3,b	;volatile
 48911                           
 48912                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 48913  001992  0012               	return		;funcret
 48914  001994                     __end_of_UART2_Transmit_ISR:
 48915                           	opt callstack 0
 48916                           
 48917 ;; *************** function _UART2_rx_vect_isr *****************
 48918 ;; Defined at:
 48919 ;;		line 203 in file "mcc_generated_files/uart2.c"
 48920 ;; Parameters:    Size  Location     Type
 48921 ;;		None
 48922 ;; Auto vars:     Size  Location     Type
 48923 ;;		None
 48924 ;; Return value:  Size  Location     Type
 48925 ;;                  1    wreg      void 
 48926 ;; Registers used:
 48927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 48928 ;; Tracked objects:
 48929 ;;		On entry : 0/0
 48930 ;;		On exit  : 0/0
 48931 ;;		Unchanged: 0/0
 48932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 48937 ;;Total ram usage:        0 bytes
 48938 ;; Hardware stack levels used:    1
 48939 ;; Hardware stack levels required when called:    1
 48940 ;; This function calls:
 48941 ;;		Absolute function
 48942 ;;		_UART2_Receive_ISR
 48943 ;; This function is called by:
 48944 ;;		Interrupt level 2
 48945 ;; This function uses a non-reentrant model
 48946 ;;
 48947                           
 48948                           	psect	text215
 48949  001BF0                     __ptext215:
 48950                           	opt callstack 0
 48951  001BF0                     _UART2_rx_vect_isr:
 48952                           	opt callstack 3
 48953                           
 48954                           ;incstack = 0
 48955  001BF0  EE14  F336         	lfsr	1,___inthi_sp
 48956                           
 48957                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 48958  001BF4  0100               	movlb	0	; () banked
 48959  001BF6  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 48960  001BF8  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 48961  001BFA  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 48962  001BFC  B4D8               	btfsc	status,2,c
 48963  001BFE  0011               	retfie		f
 48964                           
 48965                           ; BSR set to: 0
 48966                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 48967  001C00  D801               	call	i2u1378_48
 48968  001C02  0011               	retfie		f
 48969  001C04                     i2u1378_48:
 48970  001C04  0005               	push	
 48971  001C06  6EFA               	movwf	pclath,c
 48972  001C08  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 48973  001C0A  6EFD               	movwf	tosl,c
 48974  001C0C  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 48975  001C0E  6EFE               	movwf	tosh,c
 48976  001C10  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 48977  001C12  6EFF               	movwf	tosu,c
 48978  001C14  50FA               	movf	pclath,w,c
 48979  001C16  0012               	return		;indir
 48980  001C18                     __end_of_UART2_rx_vect_isr:
 48981                           	opt callstack 0
 48982                           
 48983 ;; *************** function _UART2_Receive_ISR *****************
 48984 ;; Defined at:
 48985 ;;		line 233 in file "mcc_generated_files/uart2.c"
 48986 ;; Parameters:    Size  Location     Type
 48987 ;;		None
 48988 ;; Auto vars:     Size  Location     Type
 48989 ;;		None
 48990 ;; Return value:  Size  Location     Type
 48991 ;;                  1  [STACK] void 
 48992 ;; Registers used:
 48993 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48994 ;; Tracked objects:
 48995 ;;		On entry : 3F/0
 48996 ;;		On exit  : 3F/0
 48997 ;;		Unchanged: 0/0
 48998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 48999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49003 ;;Total ram usage:        0 bytes
 49004 ;; Hardware stack levels used:    1
 49005 ;; This function calls:
 49006 ;;		Nothing
 49007 ;; This function is called by:
 49008 ;;		_UART2_Initialize
 49009 ;;		_UART2_rx_vect_isr
 49010 ;; This function uses a reentrant model
 49011 ;;
 49012                           
 49013                           	psect	text216
 49014  001DB8                     __ptext216:
 49015                           	opt callstack 0
 49016  001DB8                     _UART2_Receive_ISR:
 49017                           	opt callstack 3
 49018                           
 49019                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 49020                           
 49021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49022                           ;incstack = 0
 49023  001DB8  0E00               	movlw	low _uart2RxBuffer
 49024  001DBA  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 49025  001DBC  6ED9               	movwf	fsr2l,c
 49026  001DBE  6ADA               	clrf	fsr2h,c
 49027  001DC0  0E06               	movlw	high _uart2RxBuffer
 49028  001DC2  22DA               	addwfc	fsr2h,f,c
 49029  001DC4  006F F743 FFDF     	movff	15824,indf2	;volatile
 49030  001DCA  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 49031                           
 49032                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 49033  001DCC  2844               	incf	_uart2RxHead^0,w,c
 49034  001DCE  B4D8               	btfsc	status,2,c
 49035                           
 49036                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 49037  001DD0  6A44               	clrf	_uart2RxHead^0,c	;volatile
 49038                           
 49039                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 49040  001DD2  0100               	movlb	0	; () banked
 49041  001DD4  2BD7               	incf	_uart2RxCount& (0+255),f,b	;volatile
 49042                           
 49043                           ; BSR set to: 0
 49044                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 49045  001DD6  0012               	return		;funcret
 49046  001DD8                     __end_of_UART2_Receive_ISR:
 49047                           	opt callstack 0
 49048                           
 49049 ;; *************** function _TMR6_ISR *****************
 49050 ;; Defined at:
 49051 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 49052 ;; Parameters:    Size  Location     Type
 49053 ;;		None
 49054 ;; Auto vars:     Size  Location     Type
 49055 ;;		None
 49056 ;; Return value:  Size  Location     Type
 49057 ;;                  1    wreg      void 
 49058 ;; Registers used:
 49059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 49060 ;; Tracked objects:
 49061 ;;		On entry : 0/0
 49062 ;;		On exit  : 0/0
 49063 ;;		Unchanged: 0/0
 49064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49068 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49069 ;;Total ram usage:        1 bytes
 49070 ;; Hardware stack levels used:    1
 49071 ;; Hardware stack levels required when called:    2
 49072 ;; This function calls:
 49073 ;;		_TMR6_CallBack
 49074 ;; This function is called by:
 49075 ;;		Interrupt level 2
 49076 ;; This function uses a non-reentrant model
 49077 ;;
 49078                           
 49079                           	psect	text217
 49080  001E6C                     __ptext217:
 49081                           	opt callstack 0
 49082  001E6C                     _TMR6_ISR:
 49083                           	opt callstack 2
 49084                           
 49085                           ; BSR set to: 0
 49086                           ;incstack = 0
 49087  001E6C  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 49088  001E72  EE14  F336         	lfsr	1,___inthi_sp
 49089                           
 49090                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 49091  001E76  0139               	movlb	57	; () banked
 49092  001E78  91A9               	bcf	169,0,b	;volatile
 49093                           
 49094                           ; BSR set to: 57
 49095                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 49096  001E7A  EC66  F00E         	call	_TMR6_CallBack	;wreg free
 49097  001E7E  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 49098  001E84  0011               	retfie		f
 49099  001E86                     __end_of_TMR6_ISR:
 49100                           	opt callstack 0
 49101                           
 49102 ;; *************** function _TMR6_CallBack *****************
 49103 ;; Defined at:
 49104 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 49105 ;; Parameters:    Size  Location     Type
 49106 ;;		None
 49107 ;; Auto vars:     Size  Location     Type
 49108 ;;		None
 49109 ;; Return value:  Size  Location     Type
 49110 ;;                  1  [STACK] void 
 49111 ;; Registers used:
 49112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 49113 ;; Tracked objects:
 49114 ;;		On entry : 3F/39
 49115 ;;		On exit  : 0/0
 49116 ;;		Unchanged: 0/0
 49117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49122 ;;Total ram usage:        0 bytes
 49123 ;; Hardware stack levels used:    1
 49124 ;; Hardware stack levels required when called:    1
 49125 ;; This function calls:
 49126 ;;		Absolute function
 49127 ;;		_TMR6_DefaultInterruptHandler
 49128 ;; This function is called by:
 49129 ;;		_TMR6_ISR
 49130 ;; This function uses a reentrant model
 49131 ;;
 49132                           
 49133                           	psect	text218
 49134  001CCC                     __ptext218:
 49135                           	opt callstack 0
 49136  001CCC                     _TMR6_CallBack:
 49137                           	opt callstack 2
 49138                           
 49139                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 49140                           
 49141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49142                           ;incstack = 0
 49143  001CCC  0100               	movlb	0	; () banked
 49144  001CCE  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 49145  001CD0  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 49146  001CD2  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 49147  001CD4  B4D8               	btfsc	status,2,c
 49148  001CD6  0012               	return	
 49149                           
 49150                           ; BSR set to: 0
 49151                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 49152  001CD8  D801               	call	u1314_48
 49153  001CDA  0012               	return	
 49154  001CDC                     u1314_48:
 49155  001CDC  0005               	push	
 49156  001CDE  6EFA               	movwf	pclath,c
 49157  001CE0  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 49158  001CE2  6EFD               	movwf	tosl,c
 49159  001CE4  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 49160  001CE6  6EFE               	movwf	tosh,c
 49161  001CE8  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 49162  001CEA  6EFF               	movwf	tosu,c
 49163  001CEC  50FA               	movf	pclath,w,c
 49164  001CEE  0012               	return		;indir
 49165  001CF0                     __end_of_TMR6_CallBack:
 49166                           	opt callstack 0
 49167                           
 49168 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 49169 ;; Defined at:
 49170 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 49171 ;; Parameters:    Size  Location     Type
 49172 ;;		None
 49173 ;; Auto vars:     Size  Location     Type
 49174 ;;  i               1  [STACK] unsigned char 
 49175 ;; Return value:  Size  Location     Type
 49176 ;;                  1  [STACK] void 
 49177 ;; Registers used:
 49178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 49179 ;; Tracked objects:
 49180 ;;		On entry : 3F/0
 49181 ;;		On exit  : 0/0
 49182 ;;		Unchanged: 0/0
 49183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49188 ;;Total ram usage:        0 bytes
 49189 ;; Hardware stack levels used:    1
 49190 ;; This function calls:
 49191 ;;		Nothing
 49192 ;; This function is called by:
 49193 ;;		_TMR6_Initialize
 49194 ;;		_TMR6_CallBack
 49195 ;; This function uses a reentrant model
 49196 ;;
 49197                           
 49198                           	psect	text219
 49199  0011BA                     __ptext219:
 49200                           	opt callstack 0
 49201  0011BA                     _TMR6_DefaultInterruptHandler:
 49202                           	opt callstack 0
 49203                           
 49204                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 49205  0011BA  52E6               	movf	postinc1,f,c
 49206                           
 49207                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 49208                           ;stkvar	_i @ sp[(-1)+0]
 49209                           
 49210                           ;incstack = 0
 49211  0011BC  0EFF               	movlw	-1
 49212  0011BE  6AE3               	clrf	plusw1,c
 49213  0011C0                     l13257:
 49214                           
 49215                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 49216                           ;stkvar	_i @ sp[(-1)+0]
 49217  0011C0  0EFF               	movlw	-1
 49218  0011C2  50E3               	movf	plusw1,w,c
 49219  0011C4  0D02               	mullw	2
 49220  0011C6  0ED4               	movlw	low _tickCount
 49221  0011C8  24F3               	addwf	243,w,c
 49222  0011CA  6ED9               	movwf	fsr2l,c
 49223  0011CC  0E02               	movlw	high _tickCount
 49224  0011CE  20F4               	addwfc	prodh,w,c
 49225  0011D0  6EDA               	movwf	fsr2h,c
 49226  0011D2  50DE               	movf	postinc2,w,c
 49227  0011D4  10DE               	iorwf	postinc2,w,c
 49228  0011D6  B4D8               	btfsc	status,2,c
 49229  0011D8  D00C               	goto	l13261
 49230                           
 49231                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 49232                           ;stkvar	_i @ sp[(-1)+0]
 49233  0011DA  0EFF               	movlw	-1
 49234  0011DC  50E3               	movf	plusw1,w,c
 49235  0011DE  0D02               	mullw	2
 49236  0011E0  0ED4               	movlw	low _tickCount
 49237  0011E2  24F3               	addwf	243,w,c
 49238  0011E4  6ED9               	movwf	fsr2l,c
 49239  0011E6  0E02               	movlw	high _tickCount
 49240  0011E8  20F4               	addwfc	prodh,w,c
 49241  0011EA  6EDA               	movwf	fsr2h,c
 49242  0011EC  06DE               	decf	postinc2,f,c
 49243  0011EE  0E00               	movlw	0
 49244  0011F0  5ADD               	subwfb	postdec2,f,c
 49245  0011F2                     l13261:
 49246                           
 49247                           ;mcc_generated_files/tmr6.c: 207:  }
 49248                           ;stkvar	_i @ sp[(-1)+0]
 49249  0011F2  0EFF               	movlw	-1
 49250  0011F4  2AE3               	incf	plusw1,f,c
 49251                           
 49252                           ;stkvar	_i @ sp[(-1)+0]
 49253  0011F6  0EFF               	movlw	-1
 49254  0011F8  006F FF8C  F001    	movff	plusw1,btemp
 49255  0011FE  0E0C               	movlw	12
 49256  001200  6401               	cpfsgt	btemp^0,c
 49257  001202  D7DE               	goto	l13257
 49258                           
 49259                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 49260  001204  52E5               	movf	postdec1,f,c
 49261  001206  0012               	return		;funcret
 49262  001208                     __end_of_TMR6_DefaultInterruptHandler:
 49263                           	opt callstack 0
 49264                           
 49265 ;; *************** function _DMA1_DMASCNT_ISR *****************
 49266 ;; Defined at:
 49267 ;;		line 126 in file "mcc_generated_files/dma1.c"
 49268 ;; Parameters:    Size  Location     Type
 49269 ;;		None
 49270 ;; Auto vars:     Size  Location     Type
 49271 ;;		None
 49272 ;; Return value:  Size  Location     Type
 49273 ;;                  1    wreg      void 
 49274 ;; Registers used:
 49275 ;;		None
 49276 ;; Tracked objects:
 49277 ;;		On entry : 0/0
 49278 ;;		On exit  : 3F/0
 49279 ;;		Unchanged: 0/0
 49280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49285 ;;Total ram usage:        0 bytes
 49286 ;; Hardware stack levels used:    1
 49287 ;; This function calls:
 49288 ;;		Nothing
 49289 ;; This function is called by:
 49290 ;;		Interrupt level 2
 49291 ;; This function uses a non-reentrant model
 49292 ;;
 49293                           
 49294                           	psect	text220
 49295  001FD4                     __ptext220:
 49296                           	opt callstack 0
 49297  001FD4                     _DMA1_DMASCNT_ISR:
 49298                           	opt callstack 4
 49299                           
 49300                           ;incstack = 0
 49301  001FD4  EE14  F336         	lfsr	1,___inthi_sp
 49302                           
 49303                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 49304  001FD8  0139               	movlb	57	; () banked
 49305  001FDA  91A2               	bcf	162,0,b	;volatile
 49306                           
 49307                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 49308  001FDC  0100               	movlb	0	; () banked
 49309  001FDE  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 49310                           
 49311                           ; BSR set to: 0
 49312  001FE0  0011               	retfie		f
 49313  001FE2                     __end_of_DMA1_DMASCNT_ISR:
 49314                           	opt callstack 0
 49315                           
 49316 ;; *************** function _DMA1_DMADCNT_ISR *****************
 49317 ;; Defined at:
 49318 ;;		line 133 in file "mcc_generated_files/dma1.c"
 49319 ;; Parameters:    Size  Location     Type
 49320 ;;		None
 49321 ;; Auto vars:     Size  Location     Type
 49322 ;;		None
 49323 ;; Return value:  Size  Location     Type
 49324 ;;                  1    wreg      void 
 49325 ;; Registers used:
 49326 ;;		None
 49327 ;; Tracked objects:
 49328 ;;		On entry : 0/0
 49329 ;;		On exit  : 3F/39
 49330 ;;		Unchanged: 0/0
 49331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49336 ;;Total ram usage:        0 bytes
 49337 ;; Hardware stack levels used:    1
 49338 ;; This function calls:
 49339 ;;		Nothing
 49340 ;; This function is called by:
 49341 ;;		Interrupt level 2
 49342 ;; This function uses a non-reentrant model
 49343 ;;
 49344                           
 49345                           	psect	text221
 49346  001FF8                     __ptext221:
 49347                           	opt callstack 0
 49348  001FF8                     _DMA1_DMADCNT_ISR:
 49349                           	opt callstack 4
 49350                           
 49351                           ; BSR set to: 0
 49352                           ;incstack = 0
 49353  001FF8  EE14  F336         	lfsr	1,___inthi_sp
 49354                           
 49355                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 49356  001FFC  0139               	movlb	57	; () banked
 49357  001FFE  93A2               	bcf	162,1,b	;volatile
 49358                           
 49359                           ; BSR set to: 57
 49360  002000  0011               	retfie		f
 49361  002002                     __end_of_DMA1_DMADCNT_ISR:
 49362                           	opt callstack 0
 49363                           
 49364 ;; *************** function _DMA1_DMAA_ISR *****************
 49365 ;; Defined at:
 49366 ;;		line 143 in file "mcc_generated_files/dma1.c"
 49367 ;; Parameters:    Size  Location     Type
 49368 ;;		None
 49369 ;; Auto vars:     Size  Location     Type
 49370 ;;		None
 49371 ;; Return value:  Size  Location     Type
 49372 ;;                  1    wreg      void 
 49373 ;; Registers used:
 49374 ;;		None
 49375 ;; Tracked objects:
 49376 ;;		On entry : 0/0
 49377 ;;		On exit  : 3F/39
 49378 ;;		Unchanged: 0/0
 49379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49384 ;;Total ram usage:        0 bytes
 49385 ;; Hardware stack levels used:    1
 49386 ;; This function calls:
 49387 ;;		Nothing
 49388 ;; This function is called by:
 49389 ;;		Interrupt level 2
 49390 ;; This function uses a non-reentrant model
 49391 ;;
 49392                           
 49393                           	psect	text222
 49394  002004                     __ptext222:
 49395                           	opt callstack 0
 49396  002004                     _DMA1_DMAA_ISR:
 49397                           	opt callstack 4
 49398                           
 49399                           ; BSR set to: 57
 49400                           ;incstack = 0
 49401  002004  EE14  F336         	lfsr	1,___inthi_sp
 49402                           
 49403                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 49404  002008  0139               	movlb	57	; () banked
 49405  00200A  97A2               	bcf	162,3,b	;volatile
 49406                           
 49407                           ; BSR set to: 57
 49408  00200C  0011               	retfie		f
 49409  00200E                     __end_of_DMA1_DMAA_ISR:
 49410                           	opt callstack 0
 49411                           
 49412 ;; *************** function _DMA1_DMAOR_ISR *****************
 49413 ;; Defined at:
 49414 ;;		line 154 in file "mcc_generated_files/dma1.c"
 49415 ;; Parameters:    Size  Location     Type
 49416 ;;		None
 49417 ;; Auto vars:     Size  Location     Type
 49418 ;;		None
 49419 ;; Return value:  Size  Location     Type
 49420 ;;                  1    wreg      void 
 49421 ;; Registers used:
 49422 ;;		None
 49423 ;; Tracked objects:
 49424 ;;		On entry : 0/0
 49425 ;;		On exit  : 3F/39
 49426 ;;		Unchanged: 0/0
 49427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 49428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 49432 ;;Total ram usage:        0 bytes
 49433 ;; Hardware stack levels used:    1
 49434 ;; This function calls:
 49435 ;;		Nothing
 49436 ;; This function is called by:
 49437 ;;		Interrupt level 2
 49438 ;; This function uses a non-reentrant model
 49439 ;;
 49440                           
 49441                           	psect	text223
 49442  002010                     __ptext223:
 49443                           	opt callstack 0
 49444  002010                     _DMA1_DMAOR_ISR:
 49445                           	opt callstack 4
 49446                           
 49447                           ; BSR set to: 57
 49448                           ;incstack = 0
 49449  002010  EE14  F336         	lfsr	1,___inthi_sp
 49450                           
 49451                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 49452  002014  0139               	movlb	57	; () banked
 49453  002016  95A2               	bcf	162,2,b	;volatile
 49454                           
 49455                           ; BSR set to: 57
 49456  002018  0011               	retfie		f
 49457  00201A                     __end_of_DMA1_DMAOR_ISR:
 49458                           	opt callstack 0
 49459                           
 49460                           ;
 49461                           ; Interrupt Vector Table @ 0x8
 49462                           ;
 49463                           
 49464                           	psect	ivt0x8
 49465  000008                     __pivt0x8:
 49466                           	opt callstack 0
 49467  000008                     ivt0x8_base:
 49468                           	opt callstack 0
 49469                           
 49470                           ; Vector 0 : SWINT
 49471  000008  0818               	dw	_Default_ISR shr (0+2)
 49472                           
 49473                           ; Vector 1 : HLVD
 49474  00000A  0818               	dw	_Default_ISR shr (0+2)
 49475                           
 49476                           ; Vector 2 : OSF
 49477  00000C  0818               	dw	_Default_ISR shr (0+2)
 49478                           
 49479                           ; Vector 3 : CSW
 49480  00000E  0818               	dw	_Default_ISR shr (0+2)
 49481                           
 49482                           ; Vector 4 : NVM
 49483  000010  0818               	dw	_Default_ISR shr (0+2)
 49484                           
 49485                           ; Vector 5 : SCAN
 49486  000012  0818               	dw	_Default_ISR shr (0+2)
 49487                           
 49488                           ; Vector 6 : CRC
 49489  000014  0818               	dw	_Default_ISR shr (0+2)
 49490                           
 49491                           ; Vector 7 : IOC
 49492  000016  0818               	dw	_Default_ISR shr (0+2)
 49493                           
 49494                           ; Vector 8 : INT0
 49495  000018  07F1               	dw	_INT0_ISR shr (0+2)
 49496                           
 49497                           ; Vector 9 : ZCD
 49498  00001A  0818               	dw	_Default_ISR shr (0+2)
 49499                           
 49500                           ; Vector 10 : AD
 49501  00001C  064F               	dw	_ADCC_ISR shr (0+2)
 49502                           
 49503                           ; Vector 11 : ADT
 49504  00001E  02DF               	dw	_ADCC_ThresholdISR shr (0+2)
 49505                           
 49506                           ; Vector 12 : CMP1
 49507  000020  0818               	dw	_Default_ISR shr (0+2)
 49508                           
 49509                           ; Vector 13 : SMT1
 49510  000022  0818               	dw	_Default_ISR shr (0+2)
 49511                           
 49512                           ; Vector 14 : SMT1PRA
 49513  000024  0818               	dw	_Default_ISR shr (0+2)
 49514                           
 49515                           ; Vector 15 : SMT1PRW
 49516  000026  0818               	dw	_Default_ISR shr (0+2)
 49517                           
 49518                           ; Vector 16 : DMA1SCNT
 49519  000028  07F5               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 49520                           
 49521                           ; Vector 17 : DMA1DCNT
 49522  00002A  07FE               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 49523                           
 49524                           ; Vector 18 : DMA1OR
 49525  00002C  0804               	dw	_DMA1_DMAOR_ISR shr (0+2)
 49526                           
 49527                           ; Vector 19 : DMA1A
 49528  00002E  0801               	dw	_DMA1_DMAA_ISR shr (0+2)
 49529                           
 49530                           ; Vector 20 : SPI1RX
 49531  000030  0818               	dw	_Default_ISR shr (0+2)
 49532                           
 49533                           ; Vector 21 : SPI1TX
 49534  000032  0818               	dw	_Default_ISR shr (0+2)
 49535                           
 49536                           ; Vector 22 : SPI1
 49537  000034  0818               	dw	_Default_ISR shr (0+2)
 49538                           
 49539                           ; Vector 23 : I2C1RX
 49540  000036  0818               	dw	_Default_ISR shr (0+2)
 49541                           
 49542                           ; Vector 24 : I2C1TX
 49543  000038  0818               	dw	_Default_ISR shr (0+2)
 49544                           
 49545                           ; Vector 25 : I2C1
 49546  00003A  0818               	dw	_Default_ISR shr (0+2)
 49547                           
 49548                           ; Vector 26 : I2C1E
 49549  00003C  0818               	dw	_Default_ISR shr (0+2)
 49550                           
 49551                           ; Vector 27 : U1RX
 49552  00003E  06E8               	dw	_UART1_rx_vect_isr shr (0+2)
 49553                           
 49554                           ; Vector 28 : U1TX
 49555  000040  0818               	dw	_Default_ISR shr (0+2)
 49556                           
 49557                           ; Vector 29 : U1E
 49558  000042  0818               	dw	_Default_ISR shr (0+2)
 49559                           
 49560                           ; Vector 30 : U1
 49561  000044  0818               	dw	_Default_ISR shr (0+2)
 49562                           
 49563                           ; Vector 31 : TMR0
 49564  000046  0818               	dw	_Default_ISR shr (0+2)
 49565                           
 49566                           ; Vector 32 : TMR1
 49567  000048  0818               	dw	_Default_ISR shr (0+2)
 49568                           
 49569                           ; Vector 33 : TMR1G
 49570  00004A  0818               	dw	_Default_ISR shr (0+2)
 49571                           
 49572                           ; Vector 34 : TMR2
 49573  00004C  0818               	dw	_Default_ISR shr (0+2)
 49574                           
 49575                           ; Vector 35 : CCP1
 49576  00004E  0818               	dw	_Default_ISR shr (0+2)
 49577                           
 49578                           ; Vector 36 : Undefined
 49579  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 49580                           
 49581                           ; Vector 37 : NCO1
 49582  000052  0818               	dw	_Default_ISR shr (0+2)
 49583                           
 49584                           ; Vector 38 : CWG1
 49585  000054  0818               	dw	_Default_ISR shr (0+2)
 49586                           
 49587                           ; Vector 39 : CLC1
 49588  000056  0818               	dw	_Default_ISR shr (0+2)
 49589                           
 49590                           ; Vector 40 : INT1
 49591  000058  0571               	dw	_INT1_ISR shr (0+2)
 49592                           
 49593                           ; Vector 41 : CMP2
 49594  00005A  0818               	dw	_Default_ISR shr (0+2)
 49595                           
 49596                           ; Vector 42 : DMA2SCNT
 49597  00005C  0818               	dw	_Default_ISR shr (0+2)
 49598                           
 49599                           ; Vector 43 : DMA2DCNT
 49600  00005E  0818               	dw	_Default_ISR shr (0+2)
 49601                           
 49602                           ; Vector 44 : DMA2OR
 49603  000060  0818               	dw	_Default_ISR shr (0+2)
 49604                           
 49605                           ; Vector 45 : DMA2A
 49606  000062  0818               	dw	_Default_ISR shr (0+2)
 49607                           
 49608                           ; Vector 46 : I2C2RX
 49609  000064  0818               	dw	_Default_ISR shr (0+2)
 49610                           
 49611                           ; Vector 47 : I2C2TX
 49612  000066  0818               	dw	_Default_ISR shr (0+2)
 49613                           
 49614                           ; Vector 48 : I2C2
 49615  000068  0818               	dw	_Default_ISR shr (0+2)
 49616                           
 49617                           ; Vector 49 : I2C2E
 49618  00006A  0818               	dw	_Default_ISR shr (0+2)
 49619                           
 49620                           ; Vector 50 : U2RX
 49621  00006C  06FC               	dw	_UART2_rx_vect_isr shr (0+2)
 49622                           
 49623                           ; Vector 51 : U2TX
 49624  00006E  06F2               	dw	_UART2_tx_vect_isr shr (0+2)
 49625                           
 49626                           ; Vector 52 : U2E
 49627  000070  0818               	dw	_Default_ISR shr (0+2)
 49628                           
 49629                           ; Vector 53 : U2
 49630  000072  0818               	dw	_Default_ISR shr (0+2)
 49631                           
 49632                           ; Vector 54 : TMR3
 49633  000074  77EE               	dw	_TMR3_ISR shr (0+2)
 49634                           
 49635                           ; Vector 55 : TMR3G
 49636  000076  0818               	dw	_Default_ISR shr (0+2)
 49637                           
 49638                           ; Vector 56 : TMR4
 49639  000078  0818               	dw	_Default_ISR shr (0+2)
 49640                           
 49641                           ; Vector 57 : CCP2
 49642  00007A  0818               	dw	_Default_ISR shr (0+2)
 49643                           
 49644                           ; Vector 58 : Undefined
 49645  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 49646                           
 49647                           ; Vector 59 : CWG2
 49648  00007E  0818               	dw	_Default_ISR shr (0+2)
 49649                           
 49650                           ; Vector 60 : CLC2
 49651  000080  0818               	dw	_Default_ISR shr (0+2)
 49652                           
 49653                           ; Vector 61 : INT2
 49654  000082  0818               	dw	_Default_ISR shr (0+2)
 49655                           
 49656                           ; Vector 62 : Undefined
 49657  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 49658                           
 49659                           ; Vector 63 : Undefined
 49660  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 49661                           
 49662                           ; Vector 64 : Undefined
 49663  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 49664                           
 49665                           ; Vector 65 : Undefined
 49666  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 49667                           
 49668                           ; Vector 66 : Undefined
 49669  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 49670                           
 49671                           ; Vector 67 : Undefined
 49672  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 49673                           
 49674                           ; Vector 68 : Undefined
 49675  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 49676                           
 49677                           ; Vector 69 : Undefined
 49678  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 49679                           
 49680                           ; Vector 70 : TMR5
 49681  000094  7D97               	dw	_TMR5_ISR shr (0+2)
 49682                           
 49683                           ; Vector 71 : TMR5G
 49684  000096  0818               	dw	_Default_ISR shr (0+2)
 49685                           
 49686                           ; Vector 72 : TMR6
 49687  000098  079B               	dw	_TMR6_ISR shr (0+2)
 49688                           
 49689                           ; Vector 73 : CCP3
 49690  00009A  0818               	dw	_Default_ISR shr (0+2)
 49691                           
 49692                           ; Vector 74 : CWG3
 49693  00009C  0818               	dw	_Default_ISR shr (0+2)
 49694                           
 49695                           ; Vector 75 : CLC3
 49696  00009E  0818               	dw	_Default_ISR shr (0+2)
 49697                           
 49698                           ; Vector 76 : Undefined
 49699  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 49700                           
 49701                           ; Vector 77 : Undefined
 49702  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 49703                           
 49704                           ; Vector 78 : Undefined
 49705  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 49706                           
 49707                           ; Vector 79 : Undefined
 49708  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 49709                           
 49710                           ; Vector 80 : CCP4
 49711  0000A8  0818               	dw	_Default_ISR shr (0+2)
 49712                           
 49713                           ; Vector 81 : CLC4
 49714  0000AA  0818               	dw	_Default_ISR shr (0+2)
 49715  0000AC                     ivt0x8_undefint:
 49716                           	opt callstack 0
 49717  0000AC  00FF               	reset	
 49718                           
 49719                           	psect	text224
 49720  000000                     __ptext224:
 49721                           	opt callstack 0
 49722                           
 49723                           	psect	rparam
 49724  0000                     
 49725                           	psect	temp
 49726  000001                     btemp:
 49727                           	opt callstack 0
 49728  000001                     	ds	32
 49729  0000                     wtemp0	set	btemp
 49730  0000                     wtemp1	set	btemp+2
 49731  0000                     wtemp2	set	btemp+4
 49732  0000                     wtemp3	set	btemp+6
 49733  0000                     wtemp4	set	btemp+8
 49734  0000                     wtemp5	set	btemp+10
 49735  0000                     wtemp8	set	btemp+1
 49736  0000                     ttemp0	set	btemp
 49737  0000                     ttemp1	set	btemp+3
 49738  0000                     ttemp2	set	btemp+6
 49739  0000                     ttemp3	set	btemp+9
 49740  0000                     ttemp5	set	btemp+1
 49741  0000                     ttemp6	set	btemp+4
 49742  0000                     ttemp7	set	btemp+8
 49743  0000                     ltemp0	set	btemp
 49744  0000                     ltemp1	set	btemp+4
 49745  0000                     ltemp2	set	btemp+8
 49746  0000                     lltemp0	set	btemp
 49747  0000                     lltemp1	set	btemp+8
 49748  0000                     lltemp2	set	btemp+16
 49749  0000                     lltemp3	set	btemp+24
 49750                           tosu	equ	0x3FFF
 49751                           tosh	equ	0x3FFE
 49752                           tosl	equ	0x3FFD
 49753                           stkptr	equ	0x3FFC
 49754                           pclatu	equ	0x3FFB
 49755                           pclath	equ	0x3FFA
 49756                           pcl	equ	0x3FF9
 49757                           tblptru	equ	0x3FF8
 49758                           tblptrh	equ	0x3FF7
 49759                           tblptrl	equ	0x3FF6
 49760                           tablat	equ	0x3FF5
 49761                           prodh	equ	0x3FF4
 49762                           prodl	equ	0x3FF3
 49763                           indf0	equ	0x3FEF
 49764                           postinc0	equ	0x3FEE
 49765                           postdec0	equ	0x3FED
 49766                           preinc0	equ	0x3FEC
 49767                           plusw0	equ	0x3FEB
 49768                           fsr0h	equ	0x3FEA
 49769                           fsr0l	equ	0x3FE9
 49770                           wreg	equ	0x3FE8
 49771                           indf1	equ	0x3FE7
 49772                           postinc1	equ	0x3FE6
 49773                           postdec1	equ	0x3FE5
 49774                           preinc1	equ	0x3FE4
 49775                           plusw1	equ	0x3FE3
 49776                           fsr1h	equ	0x3FE2
 49777                           fsr1l	equ	0x3FE1
 49778                           bsr	equ	0x3FE0
 49779                           indf2	equ	0x3FDF
 49780                           postinc2	equ	0x3FDE
 49781                           postdec2	equ	0x3FDD
 49782                           preinc2	equ	0x3FDC
 49783                           plusw2	equ	0x3FDB
 49784                           fsr2h	equ	0x3FDA
 49785                           fsr2l	equ	0x3FD9
 49786                           status	equ	0x3FD8


Data Sizes:
    Strings     1471
    Constant    556
    Data        1227
    BSS         1783
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     160
    BANK1           256      0     254
    BANK2           256      0     246
    BANK3           256      0     247
    BANK4           256      0     198
    BANK5           256      0     171
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    C.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.hist.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_129(CODE[1]), STR_89(CODE[1]), 

    is_leap	PTR int  size(2) Largest target is 2
		 -> F5(STACK[2]), is_leap(STACK[2]), NULL(NULL[0]), 

    sp____tm_to_tzname	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_130(CODE[1]), NULL(NULL[0]), 

    abbrevs_end	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    oppoff	PTR long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zonename	PTR PTR const unsigned char  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    offset	PTR long  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    isdst	PTR int  size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    rule	PTR const int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    abbrevs	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    types	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    alt	PTR unsigned int  size(2) Largest target is 2
		 -> alt(STACK[2]), 

    index	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    zi	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    trans	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 4
		 -> __gmt(CODE[4]), 

    z	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    d	PTR unsigned char  size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    rule	PTR int  size(2) Largest target is 10
		 -> r1(BANK1[10]), r0(BANK1[10]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    p	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> s(STACK[2]), 

    old_tz	PTR unsigned char  size(2) Largest target is 32
		 -> old_tz_buf(BANK3[32]), 

    __tzname	PTR unsigned char [2] size(2) Largest target is 7
		 -> dst_name(BANK1[7]), std_name(BANK1[7]), NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_124(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), STR_110(CODE[3]), 
		 -> STR_105(CODE[3]), STR_101(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_124(CODE[3]), STR_120(CODE[3]), STR_115(CODE[3]), STR_110(CODE[3]), 
		 -> STR_105(CODE[3]), STR_101(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[19]), 
		 -> STR_82(CODE[19]), STR_81(CODE[19]), STR_80(CODE[24]), STR_79(CODE[15]), 
		 -> STR_78(CODE[15]), STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), 
		 -> STR_74(CODE[10]), STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), 
		 -> STR_68(CODE[3]), STR_67(CODE[14]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[20]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[22]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[29]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[17]), 
		 -> STR_28(CODE[16]), STR_27(CODE[16]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[21]), STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), 
		 -> STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), 
		 -> STR_86(CODE[19]), STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[19]), 
		 -> STR_82(CODE[19]), STR_81(CODE[19]), STR_80(CODE[24]), STR_79(CODE[15]), 
		 -> STR_78(CODE[15]), STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), 
		 -> STR_74(CODE[10]), STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), 
		 -> STR_68(CODE[3]), STR_67(CODE[14]), STR_66(CODE[21]), STR_65(CODE[21]), 
		 -> STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), 
		 -> STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[20]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[22]), STR_49(CODE[22]), 
		 -> STR_48(CODE[22]), STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), 
		 -> STR_44(CODE[29]), STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[22]), 
		 -> STR_40(CODE[22]), STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[17]), 
		 -> STR_28(CODE[16]), STR_27(CODE[16]), STR_26(CODE[21]), STR_25(CODE[21]), 
		 -> STR_24(CODE[21]), STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), 
		 -> STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_71(CODE[9]), STR_70(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[144]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    a	PTR const unsigned char  size(2) Largest target is 642
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> dbuf(BANK3[80]), spin(CODE[120]), STR_71(CODE[9]), STR_70(CODE[12]), 
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[144]), port_data(BIGRAM[512]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_96(CODE[4]), STR_95(CODE[4]), STR_92(CODE[4]), STR_91(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_96(CODE[4]), STR_95(CODE[4]), STR_92(CODE[4]), STR_91(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_69(CODE[3]), STR_68(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[19]), 
		 -> STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[19]), STR_82(CODE[19]), 
		 -> STR_81(CODE[19]), STR_80(CODE[24]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_67(CODE[14]), STR_66(CODE[21]), 
		 -> STR_65(CODE[21]), STR_64(CODE[21]), STR_63(CODE[21]), STR_62(CODE[21]), 
		 -> STR_61(CODE[21]), STR_60(CODE[21]), STR_59(CODE[21]), STR_58(CODE[21]), 
		 -> STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[20]), 
		 -> STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[22]), 
		 -> STR_49(CODE[22]), STR_48(CODE[22]), STR_47(CODE[23]), STR_46(CODE[23]), 
		 -> STR_45(CODE[23]), STR_44(CODE[29]), STR_43(CODE[23]), STR_42(CODE[23]), 
		 -> STR_41(CODE[22]), STR_40(CODE[22]), STR_39(CODE[22]), STR_38(CODE[22]), 
		 -> STR_37(CODE[22]), STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), 
		 -> STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), 
		 -> STR_29(CODE[17]), STR_28(CODE[16]), STR_27(CODE[16]), STR_26(CODE[21]), 
		 -> STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[26]), STR_22(CODE[26]), 
		 -> STR_21(CODE[22]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[21]), STR_16(CODE[22]), STR_15(CODE[22]), STR_14(CODE[22]), 
		 -> STR_13(CODE[26]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK1[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK1[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S7618_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 642
		 -> D(BIGRAM[642]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    sp____localtime_r.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tm	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), 

    t	PTR const long long  size(2) Largest target is 8
		 -> clock(STACK[8]), 

    sp__localtime.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp____localtime_r	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t	PTR const long long  size(2) Largest target is 8
		 -> clock(STACK[8]), 

    F191.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[19]), 
		 -> STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[19]), STR_82(CODE[19]), 
		 -> STR_81(CODE[19]), STR_80(CODE[24]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), STR_68(CODE[3]), 
		 -> STR_67(CODE[14]), STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), 
		 -> STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), STR_60(CODE[21]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[20]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[22]), 
		 -> STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), STR_44(CODE[29]), 
		 -> STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[17]), STR_28(CODE[16]), 
		 -> STR_27(CODE[16]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), 
		 -> STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    tim.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    tim	PTR const struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    s	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_128(CODE[37]), STR_127(CODE[22]), 

    cp	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    f1p	PTR  size(2) Largest target is 337
		 -> C(BIGRAM[336]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[19]), 
		 -> STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[19]), STR_82(CODE[19]), 
		 -> STR_81(CODE[19]), STR_80(CODE[24]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), STR_68(CODE[3]), 
		 -> STR_67(CODE[14]), STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), 
		 -> STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), STR_60(CODE[21]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[20]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[22]), 
		 -> STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), STR_44(CODE[29]), 
		 -> STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[17]), STR_28(CODE[16]), 
		 -> STR_27(CODE[16]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), 
		 -> STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_90(CODE[127]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[19]), 
		 -> STR_85(CODE[19]), STR_84(CODE[19]), STR_83(CODE[19]), STR_82(CODE[19]), 
		 -> STR_81(CODE[19]), STR_80(CODE[24]), STR_79(CODE[15]), STR_78(CODE[15]), 
		 -> STR_77(CODE[15]), STR_76(CODE[15]), STR_75(CODE[10]), STR_74(CODE[10]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_69(CODE[3]), STR_68(CODE[3]), 
		 -> STR_67(CODE[14]), STR_66(CODE[21]), STR_65(CODE[21]), STR_64(CODE[21]), 
		 -> STR_63(CODE[21]), STR_62(CODE[21]), STR_61(CODE[21]), STR_60(CODE[21]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[20]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[22]), STR_49(CODE[22]), STR_48(CODE[22]), 
		 -> STR_47(CODE[23]), STR_46(CODE[23]), STR_45(CODE[23]), STR_44(CODE[29]), 
		 -> STR_43(CODE[23]), STR_42(CODE[23]), STR_41(CODE[22]), STR_40(CODE[22]), 
		 -> STR_39(CODE[22]), STR_38(CODE[22]), STR_37(CODE[22]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[17]), STR_28(CODE[16]), 
		 -> STR_27(CODE[16]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), 
		 -> STR_23(CODE[26]), STR_22(CODE[26]), STR_21(CODE[22]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[22]), 
		 -> STR_15(CODE[22]), STR_14(CODE[22]), STR_13(CODE[26]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_71(CODE[9]), 
		 -> STR_70(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), STR_71(CODE[9]), 
		 -> STR_70(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), asctime@buf(BANK3[27]), nuls(STACK[7]), 
		 -> STR_71(CODE[9]), STR_70(CODE[12]), D.lcd(BIGRAM[640]), D(BIGRAM[642]), 
		 -> T(CODE[144]), STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    t	PTR long long  size(2) Largest target is 8
		 -> time@current_time(BANK0[8]), NULL(NULL[0]), 

    hist.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    hist.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.H.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    hist	PTR volatile struct hist_type size(2) Largest target is 337
		 -> C.hist(BIGRAM[113]), C(BIGRAM[336]), 

    R.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 172
		 -> R(BANK2[171]), 

    y.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 172
		 -> r_cal(BANK5[171]), 

    y.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    y.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    r_cal.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    R.H.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_71(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_70(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK1[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), V(BANK1[192]), 

    sp__asctime	PTR unsigned char  size(2) Largest target is 27
		 -> asctime@buf(BANK3[27]), 

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__localtime	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    t_mbmc	PTR struct tm size(2) Largest target is 25
		 -> localtime@tm(BANK3[24]), NULL(NULL[0]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 642
		 -> D.lcd(BIGRAM[640]), D(BIGRAM[642]), 

    S3352tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    C.hist.t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1999spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1999spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  739857
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                    _display_history
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                     _load_hist_data
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                    _update_cal_data
                   _update_hist_data
                         _update_lcd
                      _wait_lcd_done
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _update_hist_data                                     3     0      3      88
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        7     7      0     615
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _load_hist_data                                       0     0      0       0
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _display_history                                      8     8      0  140636
                             _WaitMs
                            _asctime
                         _get_switch
                      _get_vterm_ptr
                          _localtime
                            _sprintf
                               _time
                         _update_lcd
 ---------------------------------------------------------------------------------
 (2) _time                                                 8     0      8      23
 ---------------------------------------------------------------------------------
 (2) _localtime                                            2     0      2   14068
                      ___localtime_r
 ---------------------------------------------------------------------------------
 (3) ___localtime_r                                        4     0      4   14037
                       ___secs_to_tm
                     ___secs_to_zone
 ---------------------------------------------------------------------------------
 (4) ___secs_to_zone                                      46    28     18   10553
                            ___aodiv
                     ___year_to_secs
                           _do_tzset
                       _rule_to_secs
                         _scan_trans
                          _zi_read32
 ---------------------------------------------------------------------------------
 (5) _scan_trans                                          30    18     12    1417
                          _zi_read32
 ---------------------------------------------------------------------------------
 (5) _zi_read32                                            2     0      2      88
 ---------------------------------------------------------------------------------
 (5) _rule_to_secs                                        30    22      8    3167
                            ___aldiv
                            ___aomod
                             ___lmul
                    ___month_to_secs
                     ___year_to_secs
                      _days_in_month
 ---------------------------------------------------------------------------------
 (6) _days_in_month                                        4     0      4      66
 ---------------------------------------------------------------------------------
 (6) ___year_to_secs                                      24    14     10    1473
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (6) ___month_to_secs                                      8     4      4      90
 ---------------------------------------------------------------------------------
 (5) _do_tzset                                             2     2      0    2777
                            _getname
                             _getoff
                            _getrule
 ---------------------------------------------------------------------------------
 (6) _getrule                                              6     2      4    1222
                             _getint
                             _getoff
 ---------------------------------------------------------------------------------
 (7) _getoff                                               6     4      2     425
                             _getint
 ---------------------------------------------------------------------------------
 (8) _getint                                               4     2      2     112
 ---------------------------------------------------------------------------------
 (6) _getname                                              6     2      4     663
 ---------------------------------------------------------------------------------
 (4) ___secs_to_tm                                        67    57     10    3174
                            ___aldiv
                            ___almod
                            ___aodiv
                            ___aomod
                             ___lmul
                             ___omul
 ---------------------------------------------------------------------------------
 (7) ___omul                                              24     8     16      92
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8      92
 ---------------------------------------------------------------------------------
 (5) ___almod                                             10     2      8     296
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     300
 ---------------------------------------------------------------------------------
 (2) _asctime                                              6     4      2    2027
                            ___awdiv
                            ___awmod
                              _put2d
 ---------------------------------------------------------------------------------
 (3) _put2d                                                5     0      5     741
                            ___awdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     2      2     159
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0  125985
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (1) _write_cal_data                                       7     7      0     593
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
                     _CRC_Initialize
                         _CRC_IsBusy
                          _CRC_Start
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (2) _CRC_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_IsBusy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_CalculatedResultGet                              7     4      3     209
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (3) _CRC_ReverseValue                                     6     4      2      94
 ---------------------------------------------------------------------------------
 (2) _CRC_8BitDataWrite                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248854
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94156
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     335
                    _ADCC_Initialize
                  _CLKREF_Initialize
                     _CRC_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       4     4      0      92
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _CRC_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
       _CRC_Initialize
       _CRC_IsBusy
       _CRC_Start
       _DATAEE_WriteByte
   _display_history
     _WaitMs
       _StartTimer
       _TimerDone
     _asctime
       ___awdiv
       ___awmod
       _put2d
         ___awdiv
         ___lbmod
     _get_switch
     _get_vterm_ptr
     _localtime
       ___localtime_r
         ___secs_to_tm
           ___aldiv
           ___almod
           ___aodiv
           ___aomod
           ___lmul
           ___omul
         ___secs_to_zone
           ___aodiv
           ___year_to_secs
             ___aodiv
             ___aomod
             ___lmul
             ___omul
           _do_tzset
             _getname
             _getoff
               _getint
             _getrule
               _getint
               _getoff
                 _getint
           _rule_to_secs
             ___aldiv
             ___aomod
             ___lmul
             ___month_to_secs
             ___year_to_secs
               ___aodiv
               ___aomod
               ___lmul
               ___omul
             _days_in_month
           _scan_trans
             _zi_read32
           _zi_read32
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _time
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _load_hist_data
     _start_bsoc
     _stop_bsoc
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_cal_data
   _update_hist_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay
   _write_cal_data
     _CRC_8BitDataWrite
     _CRC_CalculatedResultGet
       _CRC_ReverseValue
     _CRC_Initialize
     _CRC_IsBusy
     _CRC_Start
     _DATAEE_WriteByte

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     5D2      69       18.2%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      AB      15       66.8%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C6      13       77.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F7      11       96.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F6       9       96.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FE       7       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      A0       5      100.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     622      58        0.0%
DATA                 0      0     BF4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 16 01:09:54 2020

                         _SPI1_Exchange8bit 1DD8                    __end_of_set_display_info 1E50  
                                         _C 08FF                                           _D 0A4F  
                                         _H 01C7                                           _P 009E  
                                         _R 0200                                           _S 02AB  
                                         _T F91F                                           _V 0107  
          __end_of_TMR5_SetInterruptHandler 1AD6                __end_of_start_switch_handler 1D98  
                               __CFG_CP$OFF 000000                     __size_of_ringBufS_flush 0092  
                           _update_cal_data 1072                                          _r0 01E6  
                                        _r1 01DC                                          _bp FA27  
                    __end_of_FVR_Initialize 2042                              _check_day_time C292  
                               __CFG_LVP$ON 000000                                         l171 1F0A  
                                       l809 1DE6                                         l675 198E  
                                       l942 0C32                                         _GIE 01FE97  
                                       _abs 1372                                         _pad EEA2  
                                       fsr0 003FE9                                         fsr2 003FD9  
                   __size_of_PMD_Initialize 0014                             _TMR2_Initialize 1EB6  
                                       prod 003FF3                                         tosl 003FFD  
                                       wreg 003FE8                     __end_of___month_to_secs F48C  
                             _INT0_CallBack 1CA8                           _update_adc_result 163E  
                             __CFG_BBEN$OFF 000000                       __size_of_Volts_to_SOC 00BA  
                    __size_of___localtime_r 0266                               _INT1_CallBack 1C3C  
                              __CFG_ZCD$OFF 000000                                        l1004 157E  
                                      l2011 094A                                        l2027 FD60  
                                      l3004 DCE6                                        l2052 050A  
                                      l2125 D244                                        l1271 1F32  
                                      l1192 15BE                                        l1282 DA3A  
                                      l1514 91EA                                        l2090 0A9E  
                           _timer3ReloadVal 00CA                                        l2172 F58A  
                                      l1284 DA40                                        l4004 77F4  
                                      l4012 6308                                        l1525 D088  
                                      l1470 080C                                        l2191 C4A6  
                                      l1455 02E8                                        l1608 0FC8  
                                      l2345 4DAC                                        l3401 EC68  
                                      l1449 005E                                        l2450 EEFE  
                                      l2506 2608                                        l2266 EA2E  
                                      l1490 0DC2                                        l2187 C4AE  
                                      l2275 C8EE                                        l3244 72EE  
                                      l1740 059E                                        l3500 BBD2  
                                      l1468 0806                                        l2349 50EA  
                                      l3325 6B32                                        l1814 1694  
                                      l2470 89DE                                        l2550 1EE8  
                                      l2535 1A38                                        l1831 E276  
                                      l1823 C9A6                                        l2391 ACC0  
                                      l1495 138E                                        l1479 0996  
                                      l3256 717E                                        l1736 0158  
                                      l2624 9692                                        l1824 CB02  
                                      l2609 A108                                        l1489 0B9A  
                                      l1755 1700                                        l2716 F756  
                                      l3365 CD00                                        l3437 B96C  
                                      l3526 EB4E                        _ADCC_StartConversion 1F36  
                                      l1871 1E4C                                        l3289 7F24  
                                      l2674 4686                                        l1971 88FA  
                                      l3396 13B2                                        l3388 D3DA  
                                      l2588 ADAE                                        l3821 0744  
                                      l3808 07C8                                        l3832 36DA  
                                      l2970 DEDA                                        l3916 C288  
                                      l3925 B478                                        l2966 FB40  
                                      l3960 B1FC                                        l3952 B116  
                                      l2977 DFAE                                        l3793 C6CE  
                                      l9811 6EFA                                        l9731 6BD2  
                                      l9813 6F0C                                        l9821 6F46  
                                      l9725 6B92                                        l9911 724A  
                                      l9807 6EDA                                        l9743 6C50  
                                      l9735 6BE8                                        l9921 7276  
                                      l9841 6FF4                                        l9817 6F16  
                                      l9761 6D08                                        l9737 6C18  
                                      l9755 6CC2                                        l9933 72CE  
                                      l9925 728E                                        l9861 7108  
                                      l9845 6FFE                                        l9749 6C82  
                                      l9927 729E                                        l9871 7162  
                                      l9863 712E                                        l9839 6FE2  
                                      l9767 6D2A                                        l9759 6CD8  
                                      l9943 F2BC                                        STR_1 FE61  
                                      STR_2 FE37                                        l9881 71B2  
                                      l9849 7030                                        l9697 02D4  
                                      STR_3 FFD1                                        STR_4 FDB9  
                                      l9699 02F6                                        l9947 F342  
                                      STR_5 FBF0                                        STR_6 FBF0  
                                      l9885 71BE                                        l9797 6E68  
                                      STR_7 FBF0                                        STR_8 FBF0  
                                      l9895 71E6                                        l9879 71A0  
                                      STR_9 FBF0                                        l9899 71EC  
                                      _LATA 003FBA                                        _LATB 003FBB  
                                      _LATC 003FBC                                        _LATD 003FBD  
                                      _LATE 003FBE                                        _LATF 003FBF  
                                      _T2PR 003FAB                                        _T6PR 003F93  
                                      u7100 0324                                        _PMD0 0039C0  
                                      _PMD1 0039C1                                        _PMD2 0039C2  
                                      _PMD3 0039C3                                        _PMD4 0039C4  
                                      _PMD5 0039C5                                        u7130 18A4  
                                      _PMD6 0039C6                                        u7107 0316  
                                      u8011 E288                                        _PMD7 0039C7  
                                      u7300 6F5E                                        u8100 B578  
                                      u7140 18A6                                        u8110 B5AA  
                                      u8031 E3AA                                        u7400 7150  
                                      u7240 6E8E                                        u8200 BED0  
                                      u7250 6EAE                                        u8130 B688  
                                      u8210 BF02                                        u7251 6EA8  
                                      u7500 723A                                        u8060 B4DE  
                                      u8220 BF34                                        u8150 B6DA  
                                      u9110 D9E4                                        u7440 71C4  
                                      u7360 7026                                        u8400 7D58  
                                      u8080 B534                                        u8240 BFEC  
                                      u9040 DC9C                                        u7505 722A  
                                      u7530 725A                                        u7290 6F3E  
                                      u9130 E7F0                                        u8091 B53E  
                                      u7460 71DE                                        u7268 6EB0  
                                      u8500 7EB4                                        u8260 C03E  
                                      u8180 BE7A                                        u9060 DCC6  
                                      u7700 D2FC                                        u9140 E822  
                                      u7365 7016                                        u7295 6F2E  
                                      u9071 D89A                                        u8440 7DE2  
                                      u7800 0778                                        u9080 D8D4  
                                      u9160 E8DA                                        u7705 D2F2  
                                      u9090 D906                                        u7570 1874  
                                      u8700 6A06                                        u9180 10E6  
                                      u7820 9ABE                                        u7580 1876  
                                      u8605 6650                                        u8710 6A40  
                                      u9190 1106                                        u7750 D3CA  
                                      u7830 9B0A                                        u7590 F386  
                                      u8615 6718                                        u8720 6A86  
                                      u8480 7E3E                                        u7760 D3CC  
                                      u7920 1436                                        u8705 69F6  
                                      u8625 68E0                                        u7745 D3AC  
                                      u7825 9AB4                                        u8490 7E78  
                                      u7690 1386                                        u7930 1438  
                                      u8660 69AA                                        u8900 FB3A  
                                      u7940 06F2                                        u8485 7E2E  
                                      u8590 64BC                                        u7870 9BEA  
                                      u7790 0776                                        u7950 06F4  
                                      u7855 9B44                                        u8840 EE00  
                                      u7856 9B4A                                        u7857 9B58  
                                      u7970 18D4                                        u8770 E5B2  
                                      u7890 9CC2                                        _PLLR 01CEE0  
                                      u7875 9BE0                                        u7980 18D6  
                                      u8860 EE74                                        u8790 E64C  
                                      u7895 9CB8                                        u8960 126C  
                                      u8970 DBB0                                        u8980 DBC4  
                                      u8990 DBFE                                        u8975 DBA6  
                                      u8995 DBF4                     __end_of_display_history D092  
                                      _WPUA 003A41                                        _WPUB 003A51  
                                      _WPUC 003A61                                        _WPUD 003A71  
                                      _WPUE 003A81                                        _WPUF 003A91  
                          __end_of_ADCC_ISR 1968                       __size_of___secs_to_tm 10D2  
                             __CFG_FCMEN$ON 000000                                _rule_to_secs 72F8  
                                      _dbuf 0354                          __size_of_CRC_Start 0006  
                                      _cp_h FA3B                                        _cp_l FA37  
                                      _atoi B702                                        _ctoa FF78  
                                      _main 0000                                        _dtoa 8900  
                                      _nanf 0E44                                        _lock 01D8  
                                      _seed 02EE                                        _prec 003C  
                                      _time 0F06                                        _nout 00C4  
                                      _spin F9AF                                        fsr0h 003FEA  
                                      fsr1h 003FE2                                        indf0 003FEF  
                                      fsr2h 003FDA                                        fsr0l 003FE9  
                                      indf1 003FE7                                        indf2 003FDF  
                                      fsr1l 003FE1                                        fsr2l 003FD9  
                                      _stoa ACC4                                        btemp 0001  
                                      _utoa A0C4                                        _xtoa 964E  
                    __end_of_check_adc_scan 2022                               ___fpclassifyf D24E  
                                      prodh 003FF4                                        prodl 003FF3  
                                      start 00AE                             _timer5ReloadVal 00CE  
                 __end_of_SPI1_Exchange8bit 1DF6                   __size_of_clear_hid_pflags 0066  
                           _TMR3_Initialize 132A                 __size_of_set_load_relay_one 0010  
               __size_of_set_load_relay_two 0010                               __CFG_CSWEN$ON 000000  
                            _SPI1STATUSbits 003D17                           _UART1_rx_vect_isr 1BA0  
                              ___param_bank 000000                        display_history@bwait 0043  
                    __end_of_check_day_time C4B8                          ?_UART1_rx_vect_isr 0021  
                 __size_of_DATAEE_WriteByte 0068                            _update_hist_data 0A38  
                          __end_of_INT0_ISR 1FD2                            __end_of_INT1_ISR 1602  
            __size_of_OSCILLATOR_Initialize 0016                    __end_of_ringBufS_put_dma 0160  
             __end_of_OSCILLATOR_Initialize 1F10                                       l10021 13A2  
                                     l10101 9D4A                                       l10035 D378  
                                     l10131 F7AC                                       l10221 BFB4  
                                     l10213 BF08                                       l10205 BE80  
                                     l10045 D3D2                                       l10141 E290  
                                     l10311 7CC6                                       l10303 7C90  
                                     l10039 D37C                                       l10063 07B8  
                                     l10119 0734                                       l10313 7CD8  
                                     l10321 7D30                                       l10241 7A0A  
                                     l10161 B4E4                                       l10145 E336  
                                     l10403 63A8                                       l10251 7A60  
                                     l10091 9C44                                       l10421 6476  
                                     l10405 63AE                                       l10333 7D7A  
                                     l10261 7AE8                                       l10253 7A90  
                                     l10173 B57E                                       l10093 9C94  
                                     l10077 9B26                                       l10423 647C  
                                     l10415 6436                                       l10407 63DE  
                                     l10351 7DF0                                       l10327 7D5E  
                                     l10319 7D2C                                       l10271 7B3E  
                                     l10247 7A4A                                       l10167 B538  
                                     l10505 69B2                                       l10433 64CE  
                                     l10425 64AC                                       l10361 7E64  
                                     l10337 7DA0                                       l10273 7B6E  
                                     l10185 B650                                       l10097 9CDC  
                                     l10523 6A72                                       l10347 7DEA  
                                     l10267 7B28                                       l11411 B7F6  
                                     l11403 B7B2                                       l12203 FA08  
                                     l12211 FA5A                                       l10509 69B8  
                                     l10381 7F08                                       l10373 7ED0  
                                     l10293 7C00                                       l10285 7BE6  
                                     l11413 B81A                                       l10613 EDD4  
                                     l10605 EDAA                                       l12053 162C  
                                     l10519 6A2C                                       l10367 7EA0  
                                     l10279 7BAC                                       l11415 B858  
                                     l10631 EE88                                       l10623 EE54  
                                     l12207 FA46                                       l10537 6AE0  
                                     l10529 6A9C                                       l12225 8476  
                                     l11409 B7DE                                       l10609 EDBC  
                                     l11601 5348                                       l10539 6AFA  
                                     l10491 6942                                       l10379 7EF8  
                                     l12251 874C                                       l12235 859C  
                                     l12219 8446                                       l11419 B8C0  
                                     l10571 E586                                       l10643 FB0A  
                                     l10715 DC7E                                       l10707 DC52  
                                     l10731 D8DA                                       l10485 6926  
                                     l10397 6368                                       l10661 DF28  
                                     l11429 B95C                                       l10565 E566  
                                     l10717 DC94                                       l10709 DC6E  
                                     l11445 C540                                       l10813 C26E  
                                     l10495 6968                                       l10655 DE98  
                                     l12247 86B0                                       l12239 867E  
                                     l10559 E550                                       l10647 FB3E  
                                     l10639 FAC8                                       l11447 C5AC  
                                     l10743 D9AC                                       l11623 5608  
                                     l11607 537E                                       l10673 DFAC  
                                     l10665 DF76                                       l12265 88C8  
                                     l12273 88DA                                       l11393 B71C  
                                     l10593 E660                                       l10585 E62C  
                                     l10681 1270                                       l11473 D44A  
                                     l10809 C24A                                       l11633 567E  
                                     l11625 5612                                       l11617 55D6  
                                     l14105 0A7A                                       l12259 882C  
                                     l14115 D866                                       l12291 1A06  
                                     l11395 B73E                                       l10691 DBD0  
                                     l10763 E8A2                                       l10755 E7F6  
                                     l12347 03C2                                       l12339 035E  
                                     l11491 D4FC                                       l11467 D41E  
                                     l11651 572A                                       l11643 56F6  
                                     l14203 AC86                                       l14051 CD52  
                                     l13261 11F2                                       l13333 F5A6  
                                     l11645 56FE                                       l11637 56AC  
                                     l14205 ACB0                                       PRLOCK 0039EF  
                                     l13407 04AE                                       l11479 D47A  
                                     l10791 C0CC                                       l11671 F462  
                                     l11575 0D42                                       l14135 AA08  
                                     l14063 CE08                                       l14071 CEBA  
                                     l13257 11C0                                       l12713 DB02  
                                     l11921 DD26                                       l11657 57BE  
                                     l11593 5218                                       l14161 AAAC  
                                     l14145 AA4E                                       l14137 AA18  
                                     l14065 CE3C                                       l12635 C318  
                                     l10779 110A                                       l13419 04E4  
                                     l13339 F64C                                       l10795 C10C  
                                     l14155 AA84                                       l14139 AA1E  
                                     l14091 10A2                                       l12821 1146  
                                     l12717 DB2C                                       l13365 E42A  
                                     l11597 5242                                       l14181 AB2C  
                                     l14173 AB06                                       l14165 AAB8  
                                     l14149 AA5A                                       l13605 0908  
                                     l14503 081A                                       l12655 C3AE  
                                     l13391 D0F6                                       l13383 D0CA  
                                     l13535 16AA                                       l15303 EF8E  
                                     l16103 4300                                       l16007 3AFC  
                                     l14079 CEBE                                       l15225 EA64  
                                     l15241 0438                                       l16041 3E2E  
                                     l16025 3C80                                       l16017 3B94  
                                     l12729 170A                                       l12841 088C  
                                     l13369 E4A0                                       l11937 DDDA  
                                     l11929 DD6E                                       l13617 0920  
                                     l13625 ECD4                                       l13395 D10A  
                                     l14339 9640                                       l11963 CBBC  
                                     l11955 CB50                                       l16131 45B4  
                                     l12669 C454                                       l13661 E6B6  
                                     l11965 CBCA                                       l15237 03FA  
                                     l15309 F85C                                       l15413 147A  
                                     l16141 4612                                       l16117 447C  
                                     l16053 3F1A                                       l16029 3CD4  
                                     l14293 FC48                                       l16301 5CD8  
                                     l13581 165E                                       l13629 ED36  
                                     l13671 E6F0                                       l13655 E692  
                                     l11975 CC2C                                       l11967 CBE0  
                                     l15327 FF96                                       l15511 1962  
                                     l15503 194A                                       l15263 A856  
                                     l12783 1920                                       l16207 74B2  
                                     l16311 5FBE                                       l13657 E6A2  
                                     l11977 CC4A                                       l11969 CBFE  
                                     l15329 FFC2                                       l15361 8A18  
                                     l15353 89CE                                       l15521 19D0  
                                     l15505 195C                                       l15425 14BE  
                                     l15433 1514                                       l16137 460E  
                                     l16073 407A                                       l16049 3EE6  
                                     l15257 A798                                       l17009 CA9E  
                                     l14289 FC0A                                       l16225 786A  
                                     l16209 7506                                       l16321 609E  
                                     l13915 15A6                                       l13659 E6A8  
                                     l11987 CC7E                                       l11979 CC60  
                                     l15443 15B8                                       l15451 1626  
                                     l16083 4128                                       l16147 4632  
                                     l16243 0260                                       l17211 07FC  
                                     l13685 E7A2                                       l13677 E728  
                                     l13669 E6BE                                       l11997 CCE0  
                                     l15293 EEF6                                       l15365 8A36  
                                     l15541 1ABE                                       l15461 16CA  
                                     l15445 15E4                                       l16093 424A  
                                     l15277 A96E                                       l15269 A8C0  
                                     l16405 2EE8                                       l16181 B120  
                                     l17133 0302                                       l13871 198A  
                                     l15295 EF08                                       l15375 8C48  
                                     l15607 2088                                       l15615 20F2  
                                     l15623 215E                                       l15631 2270  
                                     l15519 19C4                                       l15447 15FA  
                                     l16263 FE4C                                       l16415 2F86  
                                     l16335 6200                                       l17231 0872  
                                     l17127 02C0                                       l17063 0066  
                                     l14497 080A                                       l15289 EECE  
                                     l15537 1A86                                       l15481 17D4  
                                     l16265 FE8E                                       l16441 3370  
                                     l16433 32B2                                       l16425 3046  
                                     l16417 2F8C                                       l13793 FB5C  
                                     l17065 0078                                       l17217 0810  
                                     l17057 0040                                       l13859 1D72  
                                     l15299 EF44                                       l15395 8CFA  
                                     l15643 2308                                       l15571 1E16  
                                     l15547 1B48                                       l15483 183E  
                                     l15731 ADE4                                       l15715 AD30  
                                     l16187 B18E                                       l16179 B0FC  
                                     l16347 62EC                                       l16339 621E  
                                     l17323 1262                                       l17307 11E0  
                                     l17219 083E                                       l17059 0048  
                                     l16701 49A8                                       l15581 1F02  
                                     l15557 1CF4                                       l15477 1764  
                                     l15469 16F8                                       l15813 96BC  
                                     l16517 EC28                                       l16429 3252  
                                     l16357 26D0                                       l13797 FBD8  
                                     l17309 120C                                       l17181 0592  
                                     l16711 4BD4                                       l15399 8D36  
                                     l15487 18A0                                       l15735 AE20  
                                     l15807 9682                                       l16383 2CB8  
                                     l16375 2AB8                                       l15911 A4EC  
                                     l16295 5BA2                                       l16527 B9F4  
                                     l17263 0986                                       l17239 0898  
                                     l16721 4D14                                       l16705 49FC  
                                     l13897 1566                                       l15657 23A4  
                                     l15753 AF42                                       l15745 AEDA  
                                     l16481 0164                                       l16449 346A  
                                     l16369 297C                                       l16297 5BC2  
                                     l17361 133E                                       l17353 1308  
                                     l17281 0AA6                                       l17337 12B8  
                                     l17193 066C                                       l16715 4C4E  
                                     l15659 23BE                                       l15595 2000  
                                     l15579 1EE0                                       l15499 1922  
                                     l15739 AE50                                       l15843 984E  
                                     l15827 9758                                       l15819 96F8  
                                     l15851 98D4                                       l16483 016C  
                                     l16547 E13E                                       l15923 A612  
                                     l15907 A452                                       l16299 5CB8  
                                     l17355 1320                                       l17347 12F6  
                                     l16741 50E2                                       l16725 4DBC  
                                     l15669 2460                                       l15749 AF06  
                                     l16485 0176                                       l16493 018C  
                                     l16397 2E14                                       l16389 2D40  
                                     l15917 A56E                                       l17365 1364  
                                     l17293 0FFE                                       l17269 09A6  
                                     l15695 2568                                       l15679 24B0  
                                     l15775 A154                                       l15767 A0F8  
                                     l16487 0184                                       l16495 01B8  
                                     l15919 A578                                       l15927 A69E  
                                     l16663 E9C8                                       l16911 C7E0  
                                     l17375 13BA                                       l16729 4DDE  
                                     l16681 477A                                       l15785 A34A  
                                     l16841 8E4C                                       l15881 B2C2  
                                     l16657 E962                                       l16921 C8B8  
                                     l17297 105E                                       l15867 99BE  
                                     l15883 B2E8                                       l16693 48A6  
                                     l16685 47CE                                       l15965 37C6  
                                     l16837 8E38                                       l15991 3998  
                                     l15967 3800                                       l15879 B2AA  
                                     l16689 483A                                       l15969 3816  
                                     l16849 8EAE                                       l16939 0A2E  
                                     l15987 3948                                       l15899 B454  
                                     l16963 D076                                       l15989 3982  
                                     l16887 9136                                       l16895 C6EC  
                                     l16969 D07A                                       l16995 C976  
                           __end_of___aldiv D578                             __end_of___aodiv B702  
                              _Volts_to_SOC FB4A                                       _ADCAP 003EF5  
                                     _ADACT 003EFE                             __end_of___almod DE56  
                           __end_of___fladd 72F8                                       _ADCLK 003EFF  
                           __end_of___aomod C062                                       _ADPCH 003EF1  
                           __end_of___fldiv 7F2E                                       _ADREF 003EFD  
                           __end_of___awdiv E67A                             __end_of___flneg 129A  
                                     STR_10 FECA                                       STR_11 FF1E  
                                     STR_20 FE8B                                       STR_12 FD8F  
                                     STR_21 FC05                                       STR_13 FB34  
                                     STR_30 FCE1                                       STR_14 FC1B  
                                     STR_22 FB00                                       STR_15 FCF7  
                                     STR_31 FCCB                                       STR_23 FB1A  
                                     STR_24 FF33                                       STR_32 FCB5  
                                     STR_40 FC47                                       STR_16 FBEF  
                                     STR_17 FDE3                                       STR_25 FDCE  
                                     STR_33 FC9F                                       STR_41 FC5D  
                             __CFG_WDTE$OFF 000000                                       STR_50 FD4F  
                                     STR_26 FEA0                                       STR_18 FDF8  
                                     STR_34 FC89                                       STR_42 FB7D  
                                     STR_27 FF93                                       STR_19 FEDF  
                                     STR_51 FE76                                       STR_35 FC73  
                                     STR_43 FBC2                                       STR_60 FE4C  
                                     STR_52 FE22                                       STR_36 FD39  
                                     STR_44 FAE3                             __end_of___awmod EEA2  
                                     STR_61 FE76                                       STR_29 FF82  
                                     STR_53 FE0D                                       STR_37 FD0D  
                                     STR_45 FB66                                       STR_62 FD7A  
                                     STR_70 FFB2                                       STR_54 FF48  
                                     STR_38 FD23                                       STR_46 FB94  
                                     STR_71 FFC8                                       STR_63 FEF4  
                                     STR_55 FEB5                                       STR_39 FC31  
                                     STR_47 FBAB                                       STR_72 FF5C  
                                     STR_64 FDA4                                       STR_56 FD65  
                                     STR_48 FD4F                                       STR_80 FB4E  
                                     _ADRPT 003EEC                                       STR_65 FDA4  
                                     STR_73 FF5C                                       STR_49 FD4F  
                                     STR_57 FF09                                       STR_66 FDA4  
                                     STR_58 FE76                                       STR_74 FFBE  
                                     STR_82 FF6F                                       STR_90 FA3F  
                                     STR_67 FF61                                       STR_75 FFBE  
                                     STR_91 FFD6                                       STR_59 FD7A  
                                     STR_68 FFFB                                       STR_92 FFDE  
                                     STR_76 FFA3                             __end_of___lbmod 03EA  
                                     STR_77 FFA3                                       STR_69 FFF8  
                                     STR_78 FFA3                                       STR_79 FFA3  
                                     STR_95 FFDA                                       STR_96 FFE2  
                           __end_of___flmul 6B3C                                       STR_89 FABD  
                                     STR_99 FFE9                             __end_of___flsub 13FE  
                           __end_of___fltol DCF0                                       u12000 0BF2  
                                     u11200 DD8A                                       u10410 C5DA  
                                     u10340 B7AE                                       u10500 D446  
                                     u11220 DE02                                       u11310 CC74  
                                     u10510 D474                                       u10360 B906  
                                     u12008 0BF4                                       u10520 D496  
                                     u11240 DE2C                                       u11160 DD20  
                                     u10417 C5CC                                       u12025 0C42  
                                     u10370 B908                                       u10450 C674  
                                     u12026 0C44                             __end_of___lodiv DA0C  
                                     u10460 C6A2                                       u11500 F9FA  
                                     u10540 D524                                       u11180 DD4E  
                                     u12214 DAAE                                       u12230 1F74  
                                     u11190 DD68                                       u10455 C66E  
                                     u12215 DAA8                                       u10560 D54E  
                                     u10480 D418                                       u10457 C660  
                                     u11505 F9F4                                       u10810 F444  
                                     _U1P1H 003DED                                       u10467 C694  
                                     u10820 1CF6                                       u10740 562E  
                                     _U1P2H 003DEF                                       u12165 1472  
                                     u12350 0CC2                                       u11614 8766  
                                     u11534 8460                                       u14110 EA58  
                                     _U1P1L 003DEC                                       _U1P3H 003DF1  
                                     u11615 8760                                       u11535 845A  
                                     u10671 5178                                       _T3CLK 003FA9  
                                     u12520 D0A8                                       u11640 8790  
                                     u12280 0888                                       u10760 56C8  
                                     u10664 0D60                                       _T2CON 003FAC  
                                     _U1P2L 003DEE                                       u10665 0D5A  
                                     u12425 1F62                                       u11634 8788  
                                     u11554 8490                                       u14130 EAD4  
                                     u12426 1F64                                       _U1P3L 003DF0  
                                     u11635 8782                                       u11555 848A  
                                     u12435 1F52                                       u14300 8932  
                                     u15020 AE46                                       u10780 579C  
                                     u12436 1F54                                       u13341 0A6E  
                                     u12710 1D40                                       u11574 84B2  
                                     u15030 AE8C                                       u12550 04AA  
                                     u10790 579E                                       u13270 CEBA  
                                     _U2P1L 003DD4                                       u12375 0CF6  
                                     u11575 84AC                                       u15111 A38C  
                                     u13351 0A90                                       u12376 0CF8  
                                     u12368 0CC4                                       u14400 8CB6  
                                     u14320 89A2                                       u14240 F8D6  
                                     u15120 A3A2                                       u15200 97A4  
                                     u16000 26BC                                       _T3CON 003FA6  
                                     _U2P2L 003DD6                                       u15121 A3A0  
                                     u13281 107C                                       u11594 8698  
                                     u14410 8CBA                                       u15130 A3B6  
                                     u15210 97A6                                       u12570 04DE  
                                     _U2P3L 003DD8                                       u11595 8692  
                                     u12716 1D42                                       u14340 89B4  
                                     u14500 1562                                       u15060 AF68  
                                     u15140 A3BA                                       u15300 994A  
                                     u15037 AE7E                                       u14430 8CD0  
                                     u14510 1564                                       u15310 994E  
                                     u15230 9804                                       u14190 A9E2  
                                     u14247 F8C8                                       _T5CLK 003F9D  
                                     u14360 8A04                                       u15080 A0DE  
                                     u15240 9806                                       u15160 9668  
                                     u15400 A69E                             __end_of___lomod E8FC  
                                     u14370 8C5C                                       u14290 8930  
                                     u16130 333A                                       u15330 B27C  
                                     u16115 3068                                       u14620 1930  
                                     u14540 1674                                       u15260 98D0  
                                     u15500 39E2                                       u16140 33E8  
                                     _T2HLT 003FAD                                       u14381 8C8C  
                                     u16141 33E4                                       u14390 8CA2  
                                     u14550 1676                                       u14470 14A8  
                                     u15270 98F0                                       u15190 9750  
                                     u15510 3A08                                       u16230 E93E  
                                     u14391 8CA0                                       u15440 385E  
                                     _T5CON 003F9A                                       u15281 9920  
                                     u15265 98B2                                       u14650 1994  
                                     u15290 9936                                       u15610 3FD4  
                                     u15450 3860                                       u16090 2F86  
                                     u16170 B9AC                                       u15291 9934  
                                     u15700 4504                                       u15620 3FD6  
                                     u15460 3886                                       u16500 8FF4  
                                     u15380 A556                                       u16180 B9EA  
                                     u16308 EA0C                                       u16260 E9A4  
                                     u14590 18DC                                       u16510 901E  
                                     u14920 2486                                       u14760 1DE6  
                                     u15560 3BE8                                       u15800 748C  
                                     u16248 E940                                       _T6CON 003F94  
                                     u16505 8FE6                                       u14690 1A16  
                                     u15490 39E0                                       u15810 749E  
                                     u16290 EA0A                                       u16515 9010  
                                     u14940 253C                                       u14860 22B2  
                                     u15580 3D5C                                       u14950 253E  
                                     u15750 B0D2                                       u16278 E9A6  
                            __CFG_DEBUG$OFF 000000                                       u15680 4354  
                                     u16730 041C                                       u15860 0240  
                                     u16660 CAEE                                       u16900 1252  
                                     u16670 CAF0                                       u16910 126A  
                                     u16750 069A                                       u15960 6132  
                                     u16920 127C                                       u16760 07C4  
                                     u16906 1254                                       u16770 07C6  
                                     u16916 126C                                       _T6HLT 003F95  
                                     u15990 266C                                       u16926 127E  
                _ADCC_ADTI_InterruptHandler 00AB                                       _T2TMR 003FAA  
                                     _U1UIR 003DF8                                       _T2RST 003FAF  
                                     _U1RXB 003DE8                                       _U2UIR 003DE0  
                                     _U2RXB 003DD0                                       _U2TXB 003DD2  
                                     _T6TMR 003F92                                       _T6RST 003F97  
                       ??_UART1_rx_vect_isr 0026                                       _ISRPR 0039F1  
                                     _OSCEN 0039DD                                       _TMR3H 003FA5  
                                     _TMR5H 003F99                                       _TMR3L 003FA4  
                                     _TMR5L 003F98                   __end_of_update_adc_result 1678  
                                     _TRISA 003FC2                                       _TRISB 003FC3  
                                     _TRISC 003FC4                                       _TRISD 003FC5  
                                     _TRISE 003FC6                                       _TRISF 003FC7  
                               _Default_ISR 2060                         __size_of_CRC_IsBusy 0010  
                   __size_of_clear_adc_scan 0006                          _current_sensor_cal 8D80  
         __size_of_TMR3_SetInterruptHandler 0028                                ___secs_to_tm 2612  
         __size_of_TMR6_SetInterruptHandler 0028                             __end_of_asctime 8444  
                             __CFG_WRTB$OFF 000000                            __end_of_TMR3_ISR E11A  
                             __CFG_WRTC$OFF 000000                            _cal_current_zero 0482  
                                     ___gmt FA2F                               __CFG_WRTD$OFF 000000  
                          __end_of_TMR5_ISR F73E                             __end_of_getname A700  
                              _DMA1CON0bits 003BFC                            __end_of_TMR6_ISR 1E86  
                              _DMA1CON1bits 003BFD                  __size_of_send_lcd_data_dma 004A  
                           _DATAEE_ReadByte 17EE                                       _fabsf FD72  
                           __end_of_getrule B482                                       _flags 003E  
                      __size_of_check_range 0080                   __size_of_CRC_ReverseValue 00CE  
                                     _r_cal 0500                    __size_of_calc_model_data 045A  
                              _DMA2CON0bits 003BDC                                _DMA2CON1bits 003BDD  
              __end_of_get_ac_charger_relay 1FC2                                       _fputc EA34  
                __size_of_send_lcd_cmd_long 0040                             __end_of_isalpha 1442  
                                     _fputs 03EA                             __end_of_isdigit 18E0  
                           __end_of_ivln2_h FA37                                       _put2d EB58  
                        __CFG_MCLRE$EXTMCLR 000000                                       _srand 171E  
                                     _width 003A                                       _putch 1E50  
              __end_of_set_ac_charger_relay 1F98                             __end_of_islower 1880  
                           __end_of_isspace 111A                    _INT1_SetInterruptHandler 1AFE  
                           __end_of_set_dac FD72                             __end_of_isupper 18B0  
                                     pclath 003FFA                                       tablat 003FF5  
                                     ltemp0 0001                                       ltemp1 0005  
                                     ltemp2 0009                    __size_of_DMA1_Initialize 006A  
                                     plusw0 003FEB                                       plusw1 003FE3  
                                     plusw2 003FDB                                       ttemp0 0001  
                                     ttemp1 0004                                       ttemp2 0007  
                                     ttemp3 000A                                       ttemp5 0002  
                                     ttemp6 0005                                       ttemp7 0009  
                                     status 003FD8         __end_of_UART1_SetRxInterruptHandler 1A86  
               _UART1_SetRxInterruptHandler 1A5E                                       wtemp0 0001  
                                     wtemp1 0003                                       wtemp2 0005  
                                     wtemp3 0007                                       wtemp4 0009  
                                     wtemp5 000B                                       wtemp8 0002  
                           __end_of_sprintf F0C0                             __end_of_tolower 07D2  
                           __end_of_strncmp C6D8                             __end_of_toupper 074E  
                 __size_of_DMA1_DMADCNT_ISR 000A                   __end_of_UART1_rx_vect_isr 1BC8  
                  __size_of_SPI1_Initialize 0016                     __end_of_update_cal_data 10C8  
                           _TMR5_Initialize 12E2                       __end_of_ringBufS_init 19E6  
                           __initialization F0C0                           _UART2_rx_vect_isr 1BF0  
                             ___localtime_r B976                                __end_of_cp_h FA3F  
                              __end_of_cp_l FA3B                                __end_of_atoi B976  
                              __end_of_ctoa 0000                                __end_of_main 13CE  
                              __end_of_dtoa 8D80                                __end_of_nanf 0EA6  
                              __end_of_time 0F64                                __end_of_spin FA27  
                              __end_of_stoa AF82                                __end_of_utoa A404  
                              __end_of_xtoa 9A08                              __CFG_SAFEN$OFF 000000  
                        ?_UART2_rx_vect_isr 0021                     __end_of_TMR2_Initialize 1ECE  
                     __end_of_send_lcd_data 1C3C                    __size_of_DMA2_Initialize 005A  
                __end_of_check_enter_button 0A38                           __end_of_CRC_Start 2048  
                  _TMR5_SetInterruptHandler 1AAE                               __activetblptr 000003  
                 __size_of_DMA1_DMASCNT_ISR 000E                       _TMR3_InterruptHandler 00A2  
                         _port_data_dma_ptr 1FEC                          esr_check@esr_state 00D0  
                       ??_UART2_rx_vect_isr 0026                                      INTCON0 003FD2  
      __size_of_UART2_SetRxInterruptHandler 0028                              __CFG_MVECEN$ON 000000  
                           _TMR6_Initialize 1994                             _PWM8_Initialize 1EE4  
                          _UART1_Initialize 129A                           _UART2_tx_vect_isr 1BC8  
                        _UART2_Transmit_ISR 1968                                      _ADACCU 003EEA  
                                    _ADACQH 003EF4                                      _ADACQL 003EF3  
                                    _ADCON0 003EF8                                      _ADCON1 003EF9  
                                    _ADCON2 003EFA                                      _ADCON3 003EFB  
                            _start_adc_scan 0D7E                                      _ADLTHH 003EDF  
                                    _ADLTHL 003EDE                                      STR_101 FFE9  
                                    STR_110 FFEC                                      STR_103 FFEF  
                                    STR_120 FFF5                                      STR_105 FFEF  
                                    STR_113 FFF2                                      STR_122 FFE6  
                                    STR_115 FFF2                                      STR_124 FFE6  
                                    STR_108 FFEC                                      STR_118 FFF5  
                                    STR_127 FBD9                                      STR_128 FABE  
                                    _ADPREH 003EF7                                      _ADPREL 003EF6  
                                    _DMA1PR 0039F3                                      _DMA2PR 0039F4  
                                    _ADSTAT 003EFC                                      _ADUTHH 003EE1  
                                    _ADUTHL 003EE0                          _PWM8_LoadDutyValue 1442  
                                    _ANSELA 003A40                                      _ANSELB 003A50  
                                    _ANSELC 003A60                                      _ANSELD 003A70  
                                    _ANSELE 003A80                                      _ANSELF 003A90  
                        ?_UART2_tx_vect_isr 0021                                      _U1CON0 003DF2  
                                    _U1CON1 003DF3                                      _U1CON2 003DF4  
                                    _T3GATE 003FA8                                      _U1BRGH 003DF6  
                                    _U1FIFO 003DF7                                      _T3GCON 003FA7  
                                    _U2CON0 003DDA                                      _U2CON1 003DDB  
                                    _U1BRGL 003DF5                                      _U2CON2 003DDC  
                                    _U2BRGH 003DDE                                      _U2FIFO 003DDF  
                                    _U2BRGL 003DDD                                      _T5GATE 003F9C  
                                    _T5GCON 003F9B                                      _MAINPR 0039F2  
                                    _RC3PPS 003A13                                      _RD1PPS 003A19  
                                    i1l1021 F6EE                                      _RB6PPS 003A0E  
                                    i1l1209 E082                        _start_switch_handler 1D78  
                                    _RC5PPS 003A15                                      _ODCONA 003A42  
                                    _ODCONB 003A52                                      _ODCONC 003A62  
                                    _RC6PPS 003A16                                      _ODCOND 003A72  
                                    _ODCONE 003A82                                      _ODCONF 003A92  
                   __end_of_TMR3_Initialize 1372                              __CFG_WDTCCS$SC 000000  
                                    _FVRCON 003EC1                            _mode_lamp_bright 1FA6  
                                    _SCANPR 0039F7                                      _IVTADH 00389E  
                                    _IVTADL 00389D                                      _IVTADU 00389F  
              __size_of_eaDogM_WriteCommand 000E                                      _OSCFRQ 0039DF  
                                    _NVMDAT 0039E3                        __size_of_hid_display 021C  
                          __end_of___xxtofl CD0A       __end_of_ADCC_DischargeSampleCapacitor 202A  
    __size_of_ADCC_DischargeSampleCapacitor 0008               _ADCC_DischargeSampleCapacitor 2022  
                  __end_of_send_lcd_cmd_dma 1E14                             _TMR3_WriteTimer 1584  
                       ??_UART2_tx_vect_isr 0026                   __end_of_UART2_rx_vect_isr 1C18  
                __size_of_SPI1_Exchange8bit 001E                      __size_of_DMA1_DMAA_ISR 000A  
                   __size_of___secs_to_zone 08A2                              __CFG_XINST$OFF 000000  
                         _CLKREF_Initialize 1FE2                            _UART2_Initialize 0EA6  
                                    _WaitMs 16E8                             _conv_raw_result 8444  
                              _CCPTMRS1bits 003F5F        __size_of_ADCC_SetADIInterruptHandler 0028  
                          __end_of_do_tzset B202                                      ___flge DE56  
                                    ___fleq FA86                                      ___lmul F73E  
                                    ___omul E27A                           _ADCC_ThresholdISR 0B7C  
                            __CFG_STVREN$ON 000000                                      _crcObj 00E4  
                            _ringBufS_flush 0514                                      _efgtoa 13CE  
                                    _getoff C062                                      _getint F2AE  
                                    _floorf 9A08                           dac_spi_control@S0 00D5  
                         dac_spi_control@S1 00D4                           dac_spi_control@S2 00D3  
                         dac_spi_control@SB 00D1                           dac_spi_control@SC 00D2  
                        ?_ADCC_ThresholdISR 0021                                      _memset A700  
                      __size_of_help_button 0038                                      clear_0 F132  
                                    clear_1 F146                                      clear_2 F158  
                                    clear_3 F164                                      clear_4 F170  
                                    clear_5 F17C                                      clear_6 F188  
                                    clear_7 F194                                      clear_8 F1A0  
                                    _t_mbmc 00C6                   __end_of_port_data_dma_ptr 1FF6  
                    __size_of_read_cal_data 01CA                                      _printf 0DE2  
                        _eaDogM_WriteString 0208                     __end_of_DATAEE_ReadByte 1820  
                                    _strcpy F814                                   ?_ADCC_ISR 0021  
                                    _strlen 02AE                          __size_of_TimerDone 0028  
                              __pdataBIGRAM 06FF                             _ADCC_Initialize 0B10  
                            _PMD_Initialize 1F10                  __size_of_update_adc_result 003A  
                 __end_of_UART2_tx_vect_isr 1BF0                                      lltemp0 0001  
                                    lltemp1 0009                                      lltemp2 0011  
                                    lltemp3 0019                         ??_ADCC_ThresholdISR 0021  
                    __end_of_start_adc_scan 0DE2                                __mediumconst F812  
                                    preinc2 003FDC                      __size_of_init_port_dma 0030  
                                    tblptrh 003FF7                                      tblptrl 003FF6  
                                    tblptru 003FF8                            __end_of_wdtdelay 1018  
                          __end_of_spinners F65C                            __end_of_vfprintf FECC  
                                _StartTimer 1504                          __size_of___asfladd 0078  
                               localtime@tm 03DF               __size_of_INTERRUPT_Initialize 0066  
                   __end_of_TMR5_Initialize 132A                           _SYSTEM_Initialize 116C  
                                ___daylight 00C2                                  __accesstop 0060  
                   __end_of__initialization F1B2                                   ?_INT0_ISR 0021  
                                 ?_INT1_ISR 0021                        __end_of_display_help 203A  
                      __end_of_display_info 2032                   __end_of_CLKREF_Initialize 1FEC  
                             ___rparam_used 000001                  __size_of_UART1_rx_vect_isr 0028  
                           _TMR5_WriteTimer 1544                       _set_temp_display_help 1F78  
                          _clear_hid_pflags 0C4E                       __end_of_TMR3_CallBack 1CA8  
                 __end_of_ADCC_ThresholdISR 0BE6                          __size_of_calc_bsoc 0A6E  
                    __end_of_ringBufS_flush 05A6                              __pcstackCOMRAM 0021  
                                ___inthi_sp 1336                                  ___intlo_sp 199B  
                              __pidataBANK1 F8E8                                __pidataBANK2 FECC  
                             __end_of___gmt FA33                 __size_of_send_port_data_dma 0052  
                             __end_of_fabsf FE20                                   ?_TMR3_ISR 0021  
                                 ?_TMR5_ISR 0021                                   ?_TMR6_ISR 0021  
                          _DATAEE_WriteByte 0BE6                              ivt0x8_undefint 00AC  
                             __end_of_fputc EB58                               __end_of_fputs 0482  
                      _get_ac_charger_relay 1FB4                               __end_of_put2d EC72  
                             __end_of_srand 1752                       __end_of_TMR5_CallBack 1C84  
                             __end_of_putch 1E6A                        _set_ac_charger_relay 1F88  
                   __end_of_PWM8_Initialize 1EFA                     __end_of_TMR6_Initialize 19BE  
                         _adc_int_t_handler 07D2                      __end_of_PMD_Initialize 1F24  
                                __end_of_bp FA2F                                  ___timezone 0076  
                                ??_ADCC_ISR 0021                       __end_of_TMR6_CallBack 1CF0  
               __size_of_EXT_INT_Initialize 0034                    calc_bsoc@log_update_wait 0040  
                    __size_of_calc_ror_data 0186                               _DMA1_DMAA_ISR 2004  
                     TMR3_ISR@CountCallBack 00C8                              _clear_adc_scan 2048  
                        __size_of_hid_input 0138                          __end_of_CRC_IsBusy 1F78  
                    __size_of_mode_lamp_dim 0018                            time@current_time 00DC  
                          _CRC_ReverseValue F9B8                    _UART2_RxInterruptHandler 00B7  
                 __end_of_SYSTEM_Initialize 11BA                             __CFG_PR1WAY$OFF 000000  
                           __CFG_IVT1WAY$ON 000000                     __end_of_TMR3_WriteTimer 15C4  
                                __pbssBANK0 0060                                  __pbssBANK1 01D0  
                                __pbssBANK2 02AB                                  __pbssBANK3 0300  
                                __pbssBANK4 0400                                  __pbssBANK5 0500  
                                __pbssBANK6 0600                    __end_of_update_hist_data 0AA6  
                                _check_help C8F4                               _read_cal_data CD0A  
                   __end_of_conv_raw_result 8900                          __size_of_esr_check 02D8  
                     _INT0_InterruptHandler 00BD                                  ??_INT0_ISR 0021  
                                ??_INT1_ISR 0027                       __end_of_days_in_month 0D7E  
                         __end_of_TimerDone 1A0E                            _DMA1_DMADCNT_ISR 1FF8  
                           _convert_dac_raw EC72                          __size_of_init_bsoc 0246  
                __size_of_UART2_rx_vect_isr 0028                                     IVTBASEH 003FD6  
                                   IVTBASEL 003FD5                                     IVTBASEU 003FD7  
                        __size_of_lp_filter 01BC                          __size_of_localtime 0020  
                             _init_port_dma 1820                       __end_of_wait_lcd_done 1D12  
                  __end_of_cal_current_zero 0514            __end_of_TMR3_SetInterruptHandler 1AFE  
                           __CFG_PPS1WAY$ON 000000            __end_of_TMR6_SetInterruptHandler 1AAE  
                                ??_TMR3_ISR 00E7                     __end_of_ADCC_Initialize 0B7A  
                                ??_TMR5_ISR 002B                   __end_of_adc_int_t_handler 0854  
                                ??_TMR6_ISR 0026                           __end_of___asfladd 09C6  
                                   _ADFLTRH 003EE7                                     _ADFLTRL 003EE6  
                                   _DMA1DSA 003BF0                                     _DMA2DSA 003BD0  
                                   _DMA1DSZ 003BEE                                     _DMA2DSZ 003BCE  
                                   _DMA1SSA 003BF9                                     _DMA2SSA 003BD9  
                        __size_of_set_dac_a 0034                          __size_of_set_dac_b 0034  
      __end_of_ADCC_SetADTIInterruptHandler 1B76       __size_of_ADCC_SetADTIInterruptHandler 0028  
              _ADCC_SetADTIInterruptHandler 1B4E                                     _DMA1SSZ 003BF7  
                                   _DMA2SSZ 003BD7                  __size_of_port_data_dma_ptr 000A  
                                   _ADSTPTH 003EE5                                     _ADSTPTL 003EE4  
                                   _CRCACCH 003963                                     _CRCACCL 003962  
                   __size_of_load_hist_data 0018                                     _CRCDATH 003961  
                                   _CRCDATL 003960                           _UART1_Receive_ISR 1D56  
                                   _CRCCON0 003968                                     _CRCCON1 003969  
                                   _CLKRCLK 003CE6                                     _CLKRCON 003CE5  
                    __end_of_clear_adc_scan 204E                                     _CRCXORH 003967  
                                   _CRCXORL 003966                                     u1230_20 1FBE  
                                   u1207_20 C33A                              ?_DMA1_DMAA_ISR 0021  
                          _DMA1_DMASCNT_ISR 1FD4                                     u1241_20 16B8  
                                   u1241_26 16BA                                     _U1ERRIE 003DFA  
                        __size_of_set_vterm 001E                                     u1314_48 1CDC  
                                   u1306_48 1CB8                                     _U1ERRIR 003DF9  
                                   u1308_28 1C4C                                     _U2ERRIE 003DE2  
                                   u1317_28 1C70                                     _U2ERRIR 003DE1  
                                   u1167_25 1F92                                     u1167_26 1F94  
                                   u1272_28 E698                                     u1274_20 E6B2  
                                   u1274_21 E6AC                                     u1278_24 E798  
                                   u1278_25 E794                                     u1367_44 083A  
                                   u1367_45 0834                                     u1641_20 4DCE  
                         _CRC_8BitDataWrite 1F24                                     _INT0PPS 003AC0  
                       __CFG_PWRTS$PWRT_OFF 000000                                     _INT1PPS 003AC1  
                                   u1639_20 4D04                                     u1646_28 1C94  
                              ?_Default_ISR 0021                  __size_of_UART2_tx_vect_isr 0028  
                                   _U1RXPPS 003AE5                                     _U2RXPPS 003AE8  
                           _dac_spi_control 08D4                                     _OSCCON1 0039D9  
                                   _OSCCON3 0039DB                                     _IVTLOCK 003FD4  
                        __size_of_vfpfcnvrt 0FAC                                     _SPI1CLK 003D1C  
                                   _SPI1RXB 003D10                                     _NVMADRH 0039E1  
                                   _NVMADRL 0039E0                           __end_of_calc_bsoc 50FE  
                                   _SPI1TXB 003D11                                     _OSCTUNE 0039DE  
                                   _NVMCON2 0039E6                                     _PWM8DCH 003F61  
                                   _PWM8DCL 003F60                                     _PWM8CON 003F62  
                                   _SLRCONA 003A43                                     _SLRCONB 003A53  
                                   _SLRCONC 003A63                                     _SLRCOND 003A73  
                                   _SLRCONE 003A83                                     _SLRCONF 003A93  
                        __size_of_zi_read32 00F6                                  _get_switch 190E  
                        __size_of_start_lcd 0006                     __size_of___year_to_secs 0972  
                   __end_of_TMR5_WriteTimer 1584                     __size_of_switch_handler 0142  
                        __size_of_stop_bsoc 0006                  __end_of_set_load_relay_one 1F68  
                __end_of_set_load_relay_two 1F58           __size_of_INT0_SetInterruptHandler 0028  
                __size_of_CLKREF_Initialize 000A                               _calc_ror_data D706  
                            ___secs_to_zone 5A70                     __size_of_DMA1_DMAOR_ISR 000A  
                                   __Hparam 0000                  __size_of_ADCC_ThresholdISR 006A  
                             _mode_lamp_dim 1E9E                                     __Lparam 0000  
                  __end_of_UART1_Initialize 12E2                           __end_of_hid_input EA34  
                           __size_of_WaitMs 0036                                     ___aldiv D3E4  
                           __size_of___flge 0162                             __size_of___fleq 00C4  
                                   ___aodiv B482                                     ___almod DCF0  
                                   ___fladd 6B3C                                     ___aomod BE22  
                                   ___fldiv 79B4                                     ___awdiv E52C  
                                   ___flneg 1252                             __size_of___lmul 00D6  
                                   ___awmod ED8A                             __size_of___omul 015A  
                                   ___lbmod 0350                                     ___flmul 6312  
                                   ___flsub 13B8                                     ___fltol DB7E  
                                   ___lodiv D88C                                     ___lomod E7BC  
                 __end_of_UART1_Receive_ISR 1D78                             __size_of_efgtoa 1244  
                           __size_of_getoff 0230                             __size_of_getint 00F2  
                           __size_of_floorf 036C                        __end_of_init_display F576  
                                   __pcinit F0C0                    __end_of_mode_lamp_bright 1FB4  
                           __size_of_memset 02EC                    __size_of_adc_int_handler 0002  
                       _eaDogM_WriteCommand 1F98                                     __ramtop 2000  
                 __end_of_CRC_8BitDataWrite 1F36                                     __ptext0 0000  
                                   __ptext1 0A38                                     __ptext2 1072  
                                   __ptext3 0F64                                     __ptext4 1D78  
                                   __ptext5 171E                                     __ptext6 1752  
                                   __ptext7 1786                                     __ptext8 EC72  
                                   __ptext9 FCBC                           __end_of_esr_check ACC4  
                         _UART2_Receive_ISR 1DB8                                     _asctime 7F2E  
                           __size_of_printf 0062                                     _getname A404  
                           __CFG_WRTAPP$OFF 000000                             __size_of_strcpy 00D4  
                           __size_of_strlen 00A2                                     _getrule B202  
                                   _dst_off 00C0                       _OSCILLATOR_Initialize 1EFA  
                              __size_of_abs 0046                                     us804999 E3BE  
                              __size_of_pad 0114                           __end_of_init_bsoc BE22  
                                   _isalpha 13FE                                     _isdigit 18B0  
                                   us816999 B6EC                                     us912999 D9F6  
                                   _ivln2_h FA33                                     us827999 C050  
                                   us917999 E8EC                                   _T3CONbits 003FA6  
                                   _mode_sw 00D6                           __end_of_lp_filter D24E  
                         __end_of_localtime 1DB8                                     _islower 1850  
                                   _isspace 10C8                             __CFG_WRTSAF$OFF 000000  
                                _scan_trans 1602                                   _T5CONbits 003F9A  
                                   _set_dac FCBC                    __end_of_UART2_Initialize 0F06  
                                   _isupper 1880                                   _CRC_Start 2042  
                                _old_tz_buf 03A4                  __size_of_SYSTEM_Initialize 004E  
                                   _sprintf EFB6                                     _tolower 074E  
                     __size_of_display_help 0008                                     _utctime 0096  
                   __end_of_convert_dac_raw ED8A                       __size_of_display_info 0008  
                                   _strncmp C4B8                                     _toupper 06CA  
                      end_of_initialization F1B2                   __size_of_convert_adc_data 00B8  
                                 _SCANHADRH 00397A                                   _SCANHADRL 003979  
                                 _SCANHADRU 00397B                                   _SCANLADRH 003977  
                                 _SCANLADRL 003976                          _check_enter_button 09C6  
                                 _SCANLADRU 003978                           __end_of_set_dac_a 17BA  
                         __end_of_set_dac_b 1786                      __end_of___secs_to_zone 6312  
       __end_of_UART2_SetRxInterruptHandler 1A5E                 _UART2_SetRxInterruptHandler 1A36  
                                 i1u1668_20 E078                     check_day_time@day_delay 0041  
                                 i2u1370_48 1954                                   i2u1372_48 0BB2  
                                 i2u1372_49 0BC6                           __end_of_set_vterm 1E32  
                                 i2u1374_48 1BB4                                   i2u1376_48 1BDC  
                                 i2u1378_48 1C04                           __end_of_vfpfcnvrt 4690  
                                 _SPI1TCNTL 003D12                                     postdec0 003FED  
                                   postdec1 003FE5                                     postdec2 003FDD  
                                   postinc0 003FEE                                     postinc1 003FE6  
                                   postinc2 003FDE                           __end_of_zi_read32 F2AE  
                __size_of_adc_int_t_handler 0082                         __size_of_StartTimer 0040  
                         __end_of_start_lcd 205A                   __end_of_UART2_Receive_ISR 1DD8  
                            wdtdelay@dcount 009A                     __end_of_dac_spi_control 094E  
               __size_of_current_sensor_cal 0474                       __CFG_WDTCPS$WDTCPS_31 000000  
                           ??_DMA1_DMAA_ISR 0027                       _INT1_InterruptHandler 00BA  
                                 _PORTBbits 003FCB                           __end_of_stop_bsoc 2060  
                                 _PORTDbits 003FCD                    _TMR3_SetInterruptHandler 1AD6  
                                 _PORTFbits 003FCF                    _TMR6_SetInterruptHandler 1A86  
                              _display_help 2032                       _TMR5_InterruptHandler 00A5  
                              _display_info 202A        __size_of_UART2_SetTxInterruptHandler 0028  
                  __end_of_clear_hid_pflags 0CB4                           __size_of_ADCC_ISR 002C  
       __end_of_ADCC_SetADIInterruptHandler 1B9E                 _ADCC_SetADIInterruptHandler 1B76  
                                asctime@buf 03C4                                  _update_lcd E11A  
                           _calc_model_data 91F4                      __size_of_ringBufS_init 0028  
                          __CFG_FEXTOSC$ECH 000000                                  _static_soc 0F64  
                  __end_of_DATAEE_WriteByte 0C4E                             _DMA1_Initialize 0AA6  
                       __end_of_check_range 08D4                                  _start_bsoc 1D34  
                  __size_of___month_to_secs 00EC                      __size_of_send_lcd_data 0024  
                           _SPI1_Initialize 1ECE                       __end_of_get_vterm_ptr 190E  
                         __size_of_INT0_ISR 000E                           __size_of_INT1_ISR 003E  
                  __size_of_display_history 01BE                    __end_of_CRC_ReverseValue FA86  
                            __end_of_WaitMs 171E                __end_of_INTERRUPT_Initialize 0D1A  
                                _vterm_dump D578                              __end_of___flge DFB8  
                            __end_of___fleq FB4A        __end_of_INT0_DefaultInterruptHandler 206C  
     __size_of_INT0_DefaultInterruptHandler 0002                _INT0_DefaultInterruptHandler 206A  
                __size_of_UART1_Receive_ISR 0022                             _DMA2_Initialize 1018  
                            __end_of___lmul F814                              __end_of___omul E3D4  
                             __pidataBIGRAM 9D74                              _load_hist_data 1E86  
                            __end_of_efgtoa 2612                  __size_of_CRC_8BitDataWrite 0012  
                         __size_of_TMR3_ISR 0162                              __end_of_getoff C292  
                         __size_of_TMR5_ISR 00E2                              __end_of_getint F3A0  
                         __size_of_TMR6_ISR 001A                         __size_of_check_help 0212  
                            __end_of_floorf 9D74                 __size_of_UART2_Transmit_ISR 002C  
                                floorf@F524 007A                              __end_of_memset A9EC  
__end_of___month_to_secs@secs_through_month F913          ___month_to_secs@secs_through_month F8E3  
                            __end_of_printf 0E44                    __end_of_DMA1_DMADCNT_ISR 2002  
               __size_of_PWM8_LoadDutyValue 0042                       __end_of_INT0_CallBack 1CCC  
                            __end_of_strcpy F8E8                              __end_of_strlen 0350  
                       start_initialization F0C0                     __size_of_write_cal_data 0158  
      __end_of_TMR5_DefaultInterruptHandler 16E8       __size_of_TMR5_DefaultInterruptHandler 0038  
              _TMR5_DefaultInterruptHandler 16B0             __size_of_PIN_MANAGER_Initialize 0092  
                               __end_of_abs 13B8                       __end_of_INT1_CallBack 1C60  
                 __size_of_set_display_info 001E                                 __end_of_pad EFB6  
                      __size_of_Default_ISR 0006                     __size_of_CRC_Initialize 0092  
                            ___year_to_secs 50FE                        __end_of_send_lcd_cmd 1504  
                            _switch_handler E67A               __size_of_ADCC_StartConversion 0012  
                                ivt0x8_base 0008                               _uart1RxBuffer 01D0  
                     __end_of___fpclassifyf D3E4                               _uart2RxBuffer 0600  
                  __end_of_DMA1_DMASCNT_ISR 1FE2                               _uart2TxBuffer 0400  
                            _DMA1_DMAOR_ISR 2010                         __end_of_hid_display C8F4  
                __end_of_send_port_data_dma 116C                            __CFG_LPBOREN$OFF 000000  
                     __size_of_init_display 00EA                 __size_of_eaDogM_WriteString 00A6  
           __end_of_CRC_CalculatedResultGet DB7E                                   _TimerDone 19E6  
                             _ringBufS_init 19BE                      __end_of_load_hist_data 1E9E  
                               __pdataBANK1 0100                                 __pdataBANK2 0200  
                __size_of_UART2_Receive_ISR 0020                         __size_of_get_switch 002C  
                __end_of_EXT_INT_Initialize 17EE                    __size_of_update_cal_data 0056  
                   __end_of_calc_model_data 964E                               _send_lcd_data 1C18  
                       __end_of_help_button 16B0             __end_of_eaDogM_WriteStringAtPos 0208  
                       __end_of_BVSOC_TABLE F8E3                                   ___asfladd 094E  
                      calc_model_data@bcror 008E                                 __pbssBIGRAM 0A4F  
                   __end_of_DMA1_Initialize 0B10                        calc_model_data@bvror 0092  
                               __pbssCOMRAM 003A                                 _check_range 0854  
          __end_of_INT0_SetInterruptHandler 1B4E                      __end_of___year_to_secs 5A70  
                             __pcstackBANK0 00E7                    __size_of_TMR2_Initialize 0018  
                    __size_of_TMR3_CallBack 0024                      __end_of_switch_handler E7BC  
                               _CRCCON0bits 003968                                 _CRCCON1bits 003969  
                         __size_of___xxtofl 0204                     __end_of_SPI1_Initialize 1EE4  
                  _UART1_RxInterruptHandler 00B1                    _UART2_TxInterruptHandler 00B4  
                                 __end_of_T F9AF                            _convert_adc_data FC04  
                                 _calc_bsoc 4690                   __size_of_ringBufS_put_dma 00AA  
                              _init_display F48C                      __end_of_DMA1_DMAOR_ISR 201A  
                    __size_of_TMR5_CallBack 0024                           __size_of_do_tzset 0280  
                     _TMR6_InterruptHandler 00A8                          calc_ror_data@bcror 0086  
                    __size_of_TMR6_CallBack 0024                     __end_of_DMA2_Initialize 1072  
                        calc_ror_data@bvror 008A                      _PIN_MANAGER_Initialize 05A6  
                     __end_of___localtime_r BBDC                    __size_of_TMR3_Initialize 0048  
                      __end_of_wait_lcd_set 2054                         __size_of_scan_trans 003C  
                             __pmediumconst F812                                   __ptext100 ACC4  
                                 __ptext101 13CE                                   __ptext110 ED8A  
                                 __ptext102 074E                                   __ptext111 E52C  
                                 __ptext103 1880                                   __ptext200 1FEC  
                                 __ptext120 EA34                                   __ptext112 8900  
                                 __ptext104 F814                                   __ptext201 094E  
                                 __ptext121 1E50                                   __ptext113 1372  
                                 __ptext105 9A08                                   __ptext210 0B7C  
                                 __ptext202 1FC4                                   __ptext130 1FA6  
                                 __ptext122 00B6                                   __ptext114 BE22  
                                 __ptext106 D24E                                   __ptext211 1BA0  
                                 __ptext203 1CA8                                   __ptext131 1442  
                                 __ptext123 B702                                   __ptext115 B482  
                                 __ptext107 DB7E                                   __ptext220 1FD4  
                                 __ptext212 1D56                                   __ptext204 206A  
                                 __ptext140 8444                                   __ptext132 1678  
                                 __ptext124 10C8                                   __ptext116 FF78  
                                 __ptext108 1252                                   __ptext221 1FF8  
                                 __ptext213 1BC8                                   __ptext205 2060  
                                 __ptext141 0E44                                   __ptext133 19E6  
                                 __ptext125 18B0                                   __ptext117 EEA2  
                                 __ptext109 FA86                                   __ptext222 2004  
                                 __ptext214 1968                                   __ptext206 193C  
                                 __ptext150 13B8                                   __ptext142 1D12  
                                 __ptext134 1504                                   __ptext126 1E14  
                                 __ptext118 02AE                                   __ptext223 2010  
                                 __ptext215 1BF0                                   __ptext207 07D2  
                                 __ptext151 6B3C                                   __ptext143 CB06  
                                 __ptext135 202A                                   __ptext127 1F78  
                                 __ptext119 03EA                                   __ptext224 0000  
                                 __ptext216 1DB8                                   __ptext208 206C  
                                 __ptext160 1A86                                   __ptext152 6312  
                                 __ptext144 79B4                                   __ptext136 2032  
                                 __ptext128 1E32                                   __ptext217 1E6C  
                                 __ptext209 206E                                   __ptext161 12E2  
                                 __ptext153 116C                                   __ptext145 DE56  
                                 __ptext137 09C6                                   __ptext129 1E9E  
                                 __ptext218 1CCC                                   __ptext170 1EFA  
                                 __ptext162 1AAE                                   __ptext154 0EA6  
                                 __ptext146 91F4                                   __ptext138 D706  
                                 __ptext219 11BA                                   __ptext171 0CB4  
                                 __ptext163 132A                                   __ptext155 1A0E  
                                 __ptext147 205A                                   __ptext139 FD72  
                                 __ptext180 0B10                                   __ptext172 203A  
                                 __ptext164 1AD6                                   __ptext156 1A36  
                                 __ptext148 1D34                                   __ptext181 1B4E  
                                 __ptext173 17BA                                   __ptext165 1EB6  
                                 __ptext157 129A                                   __ptext149 D092  
                                 __ptext190 16B0                                   __ptext182 1B76  
                                 __ptext174 1AFE                                   __ptext166 1ECE  
                                 __ptext158 1A5E                                   __ptext191 C292  
                                 __ptext183 15C4                                   __ptext175 1B26  
                                 __ptext167 1EE4                                   __ptext159 1994  
                                 __ptext192 1F88                                   __ptext184 1C3C  
                                 __ptext176 1018                                   __ptext168 1F10  
                                 __ptext193 1FB4                                   __ptext185 2066  
                                 __ptext177 0AA6                                   __ptext169 05A6  
                                 __ptext194 DFB8                                   __ptext186 E67A  
                                 __ptext178 0638                                   __ptext195 1584  
                                 __ptext187 F65C                                   __ptext179 1FE2  
                                 __ptext196 1C84                                   __ptext188 1544  
                                 __ptext197 2068                                   __ptext189 1C60  
                                 __ptext198 4690                                   __ptext199 111A  
                                 _hid_input E8FC                          __end_of_StartTimer 1544  
                        _set_load_relay_one 1F58                          _set_load_relay_two 1F48  
                         __size_of_wdtdelay 005A                           __size_of_spinners 00E6  
                         __size_of_vfprintf 00AC                                    _ADCC_ISR 193C  
                    __CFG_BBSIZE$BBSIZE_512 000000                                   fabsf@F463 007E  
                    __size_of_days_in_month 0064                                    _DMA1CON0 003BFC  
                                  _DMA1CON1 003BFD                                    _DMA1AIRQ 003BFE  
                                  _DMA2CON0 003BDC                                    _DMA2CON1 003BDD  
                                  _DMA2AIRQ 003BDE                                    _DMA1SIRQ 003BFF  
                                  _DMA2SIRQ 003BDF                                   _esr_check A9EC  
                   __size_of_get_raw_result 0022                              __size_of_fabsf 00AE  
                                 _init_bsoc BBDC                      __size_of_wait_lcd_done 0022  
                            __size_of_fputc 0124                                    _T2CLKCON 003FAE  
                            __size_of_fputs 0098                    __size_of_DATAEE_ReadByte 0032  
                            __size_of_put2d 011A                                   _lp_filter D092  
                                 _localtime 1D98                                 _hid_display C6D8  
                            __size_of_srand 0034                              __size_of_putch 001A  
                      _INTERRUPT_Initialize 0CB4                                    _T6CLKCON 003F96  
             __size_of_start_switch_handler 0020                             ?_DMA1_DMAOR_ISR 0021  
                                  _INT0_ISR 1FC4                                    _INT1_ISR 15C4  
                                  _LATCbits 003FBC                                    _LATDbits 003FBD  
                                  _LATEbits 003FBE                                    _LATFbits 003FBF  
         __size_of_INT1_SetInterruptHandler 0028                                    _SCANCON0 00397C  
                                  _IPR1bits 003981                                    _IPR2bits 003982  
                                  _PIE1bits 003991                                    _IPR3bits 003983  
                                  _SCANTRIG 00397D                                    _PIE2bits 003992  
                                  _IPR5bits 003985                                    _PIE3bits 003993  
                                 _tickCount 02D4                                    _IPR6bits 003986  
                                  _PIE5bits 003995                                    _IPR8bits 003988  
                                  _PIE6bits 003996                                    _IPR9bits 003989  
                                  _PIE8bits 003998                         __CFG_BORV$VBOR_2P45 000000  
                                  _PIE9bits 003999                                _SPI1CON0bits 003D14  
                              _SPI1CON1bits 003D15                                   _set_dac_a 1786  
                                 _set_dac_b 1752                                   _ring_buf1 0483  
                                 _ring_buf2 0440                                    _PIR0bits 0039A0  
                                  _PIR1bits 0039A1                                    _PIR2bits 0039A2  
                                  _SPI1BAUD 003D19                                    _PIR4bits 0039A4  
                                  _SPI1CON0 003D14                                    _SPI1CON1 003D15  
                                  _SPI1CON2 003D16                               _TMR3_CallBack 1C84  
                                  _PIR5bits 0039A5                                    _PIR6bits 0039A6  
                                  _PIR8bits 0039A8                                    _PIR9bits 0039A9  
                  __size_of_TMR5_Initialize 0048                                   _set_vterm 1E14  
                       __size_of_update_lcd 0160                                 _help_button 1678  
                                  _TMR3_ISR DFB8                                 _BVSOC_TABLE F813  
                                  _TMR5_ISR F65C                                    _TMR6_ISR 1E6C  
        __end_of___secs_to_tm@days_in_month F91F                  ___secs_to_tm@days_in_month F913  
                                 _port_data 06FF                         __size_of_static_soc 005A  
                                 _vfpfcnvrt 36E4                                _SPI1INTFbits 003D1A  
                       __size_of_start_bsoc 0022                               _TMR5_CallBack 1C60  
                                _ADCON0bits 003EF8                                   _zi_read32 F1B8  
                        __end_of_check_help CB06                                   _start_lcd 2054  
                   __size_of_FVR_Initialize 0008                   __size_of_send_lcd_cmd_dma 001E  
                             _TMR6_CallBack 1CCC                              _write_cal_data E3D4  
                     __size_of_send_lcd_cmd 0040           __size_of_TMR5_SetInterruptHandler 0028  
                                 _stop_bsoc 205A                            _set_display_info 1E32  
                  __size_of_PWM8_Initialize 0016                    __size_of_TMR6_Initialize 002A  
                            _CRC_Initialize 0638                                 _INTCON0bits 003FD2  
                                 copy_data0 F0D4                                   copy_data1 F0FA  
                                 copy_data2 F11C            __size_of_CRC_CalculatedResultGet 0172  
                  _INT0_SetInterruptHandler 1B26                         __size_of_vterm_dump 018E  
       __end_of_UART2_SetTxInterruptHandler 1A36                 _UART2_SetTxInterruptHandler 1A0E  
                             _days_in_month 0D1A                                _uart1RxCount 00DA  
                              _uart2RxCount 00D7                                    __Hrparam 0000  
          __size_of_eaDogM_WriteStringAtPos 00A8                     __CFG_RSTOSC$EXTOSC_4PLL 000000  
                  __size_of_TMR3_WriteTimer 0040                                    __Lrparam 0000  
                   __size_of_check_adc_scan 0008                          __CFG_BOREN$SBORDIS 000000  
                __end_of_current_sensor_cal 91F4                    __size_of_conv_raw_result 04BC  
                             _wait_lcd_done 1CF0                                _send_lcd_cmd 14C4  
                          __size_of___aldiv 0194                            __size_of___aodiv 0280  
                          __size_of___almod 0166                            __size_of___fladd 07BC  
             __size_of_get_ac_charger_relay 000E                            __size_of___aomod 0240  
                           _adc_int_handler 206E                            __size_of___fldiv 057A  
                          __size_of___awdiv 014E                            __size_of___flneg 0048  
                          __size_of___awmod 0118                            __size_of___lbmod 009A  
                          __size_of___flmul 082A                            __size_of___flsub 0046  
                          __size_of___fltol 0172                            __size_of___lodiv 0180  
                          __size_of___lomod 0140               __size_of_set_ac_charger_relay 0010  
                        __end_of_get_switch 193A                        __end_of_rule_to_secs 79B4  
                   __size_of_check_day_time 0226                      __end_of_write_cal_data E52C  
                     __end_of_DMA1_DMAA_ISR 200E                          ___fpclassifyf@F463 0082  
      __size_of_UART1_SetRxInterruptHandler 0028                            __size_of_asctime 0516  
                                  ___tzname 0072                            __size_of_getname 02FC  
                           lp_filter@smooth 0300                                    ___xxtofl CB06  
                    __end_of_CRC_Initialize 06CA                           ?_DMA1_DMADCNT_ISR 0021  
                          __size_of_getrule 0280                 __size_of_check_enter_button 0072  
                  __size_of_ADCC_Initialize 006A                 __end_of_eaDogM_WriteCommand 1FA6  
                          __size_of_isalpha 0044                            __size_of_isdigit 0030  
                                  __pivt0x8 0008                            __size_of_islower 0030  
                          __size_of_isspace 0052                          ??_DMA1_DMADCNT_ISR 0027  
                          __size_of_set_dac 00B6                                    __ptext10 08D4  
                                  __ptext11 CD0A                                    __ptext20 19BE  
                                  __ptext12 17EE                                    __ptext21 BBDC  
                                  __ptext13 1E86                                    __ptext30 1F98  
                                  __ptext22 FB4A                                    __ptext14 1820  
                                  __ptext31 CED4                                    __ptext23 C6D8  
                                  __ptext15 F48C                                    __ptext40 50FE  
                                  __ptext32 0F06                                    __ptext24 E8FC  
                                  __ptext16 1C18                                    __ptext41 F3A0  
                                  __ptext33 1D98                                    __ptext25 A9EC  
                                  __ptext17 1484                                    __ptext50 DCF0  
                                  __ptext42 AF82                                    __ptext34 B976  
                                  __ptext26 163E                                    __ptext18 14C4  
                                  __ptext51 D3E4                                    __ptext43 B202  
                                  __ptext35 5A70                                    __ptext27 201A  
                                  __ptext19 1DD8                                    __ptext60 DA0C  
                                  __ptext52 7F2E                                    __ptext44 C062  
                                  __ptext36 1602                                    __ptext28 1F48  
                                  __ptext61 F9B8                                    __ptext53 EB58  
                                  __ptext45 F2AE                                    __ptext37 F1B8  
                                  __ptext29 1F58                                    __ptext70 0854  
                                  __ptext62 1F24                                    __ptext54 0350  
                                  __ptext46 A404                                    __ptext38 72F8  
                                  __ptext71 FC04                                    __ptext63 0D7E  
                                  __ptext55 8D80                                    __ptext47 2612  
                                  __ptext39 0D1A                                    __ptext80 1DF6  
                                  __ptext72 0C4E                                    __ptext64 1F36  
                                  __ptext56 E3D4                                    __ptext48 E27A  
                                  __ptext81 1CF0                                    __ptext73 C8F4  
                                  __ptext65 2022                                    __ptext57 0BE6  
                                  __ptext49 F73E                                    __ptext90 FE20  
                                  __ptext82 0FBE                                    __ptext74 D578  
                                  __ptext66 F576                                    __ptext58 2042  
                                  __ptext91 36E4                                    __ptext83 1208  
                                  __ptext75 EFB6                                    __ptext67 190E  
                                  __ptext59 1F68                                    __ptext92 964E  
                                  __ptext84 0208                                    __ptext76 18E0  
                                  __ptext68 2048                                    __ptext93 06CA  
                                  __ptext85 204E                                    __ptext77 16E8  
                                  __ptext69 0482                                    __ptext94 1850  
                                  __ptext86 2054                                    __ptext78 E11A  
                                  __ptext95 13FE                                    __ptext87 0514  
                                  __ptext79 0160                                    __ptext96 A0C4  
                                  __ptext88 A700                                    __ptext97 E7BC  
                                  __ptext89 0DE2                                    __ptext98 D88C  
                                  __ptext99 C4B8                            __size_of_isupper 0030  
                                  _do_tzset AF82                       __end_of_read_cal_data CED4  
                          __size_of_sprintf 010A                            __size_of_tolower 0084  
                                  us1259999 0F56                                    us1428999 891A  
                                  us1509999 A12A                                    us1518999 96CE  
                          __size_of_strncmp 0220                            __size_of_toupper 0084  
                          _ringBufS_put_dma 00B6                                    us1497999 ACD6  
                                  us1585999 799E                                    _dst_name 01F0  
                      __end_of_Volts_to_SOC FC04                               __size_of_atoi 0274  
                             __size_of_ctoa 0088                               __size_of_main 13CE  
                             __size_of_dtoa 0480                               __size_of_nanf 0062  
                     __size_of_wait_lcd_set 0006                               __size_of_time 005E  
                             __size_of_stoa 02BE                               __size_of_utoa 0340  
                             __size_of_xtoa 03BA                         dac_spi_control@init 0042  
                                _CRC_IsBusy 1F68                        __CFG_WDTCWS$WDTCWS_7 000000  
                         ?_DMA1_DMASCNT_ISR 0021                       __end_of_init_port_dma 1850  
                               _IVTLOCKbits 003FD4                        __end_of___secs_to_tm 36E4  
                  __size_of_TMR5_WriteTimer 0040                   _ADCC_ADI_InterruptHandler 00AE  
                                 stoa@F1166 0100                          ??_DMA1_DMASCNT_ISR 0027  
              __end_of_ADCC_StartConversion 1F48                          __end_of_scan_trans 163E  
                                  _spi_link 0060                                    _std_name 01F7  
                                  _wdtdelay 0FBE                  __end_of_UART2_Transmit_ISR 1994  
                                  _spinners F576                                    _vfprintf FE20  
                  __end_of_convert_adc_data FCBC                   __size_of_update_hist_data 006E  
                __end_of_PWM8_LoadDutyValue 1484        __end_of_TMR3_DefaultInterruptHandler 206A  
     __size_of_TMR3_DefaultInterruptHandler 0002                _TMR3_DefaultInterruptHandler 2068  
      __end_of_INT1_DefaultInterruptHandler 2068       __size_of_INT1_DefaultInterruptHandler 0002  
              _INT1_DefaultInterruptHandler 2066                          _send_port_data_dma 111A  
                             ??_Default_ISR 0021                                 _uart1RxHead 0047  
                    __size_of_get_vterm_ptr 002E                                 _uart2RxHead 0044  
                               _uart1RxTail 00DB                              _get_raw_result 1D12  
                               _NVMCON1bits 0039E5                                 _uart2TxHead 00D9  
                               _uart2RxTail 00D8                                   spinners@s 006C  
                               _uart2TxTail 0046                   __size_of_cal_current_zero 0092  
                              _wait_lcd_set 204E                          _EXT_INT_Initialize 17BA  
      __end_of_TMR6_DefaultInterruptHandler 1208       __size_of_TMR6_DefaultInterruptHandler 004E  
              _TMR6_DefaultInterruptHandler 11BA                           _send_lcd_data_dma 1208  
      __end_of_ADCC_DefaultInterruptHandler 206E       __size_of_ADCC_DefaultInterruptHandler 0002  
              _ADCC_DefaultInterruptHandler 206C                                    intlevel1 0000  
                                  intlevel2 0000                             ___month_to_secs F3A0  
                         _send_lcd_cmd_long 1484              __size_of_set_temp_display_help 0010  
             __end_of_set_temp_display_help 1F88                       __end_of_calc_ror_data D88C  
                         __CFG_CLKOUTEN$OFF 000000                  __end_of_eaDogM_WriteString 02AE  
                     __end_of_mode_lamp_dim 1EB6                     __end_of_adc_int_handler 2070  
                  __size_of_convert_dac_raw 0118                             _display_history CED4  
                    __size_of_INT0_CallBack 0024                                  _SPI1SCKPPS 003ADE  
                                _SPI1SDIPPS 003ADF                      __size_of_INT1_CallBack 0024  
                        __end_of_update_lcd E27A                      _uart2TxBufferRemaining 0045  
                        __end_of_static_soc 0FBE                          __end_of_start_bsoc 1D56  
                            _FVR_Initialize 203A                      __end_of_get_raw_result 1D34  
                          _send_lcd_cmd_dma 1DF6                      __size_of___fpclassifyf 0196  
                     TMR5_ISR@CountCallBack 00CC            __end_of_INT1_SetInterruptHandler 1B26  
                 __size_of_UART1_Initialize 0048                    __size_of_dac_spi_control 007A  
                 __end_of_send_lcd_data_dma 1252                            ??_DMA1_DMAOR_ISR 0027  
                   _CRC_CalculatedResultGet DA0C                   __end_of_send_lcd_cmd_long 14C4  
                   __size_of_start_adc_scan 0064                         __end_of_Default_ISR 2066  
            __end_of_PIN_MANAGER_Initialize 0638                   __size_of_mode_lamp_bright 000E  
                        __end_of_vterm_dump D706                     _eaDogM_WriteStringAtPos 0160  
                             _get_vterm_ptr 18E0                              _check_adc_scan 201A  
                 __size_of_UART2_Initialize 0060                       __size_of_rule_to_secs 06BC  
