

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Mar 13 00:43:41 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=4,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=4,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=4,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=4,class=CODE,delta=1
   105                           	psect	text84,global,reloc=4,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=4,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=4,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=4,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=4,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=4,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=4,class=CODE,delta=1
   119                           	psect	text98,global,reloc=4,class=CODE,delta=1
   120                           	psect	text99,global,reloc=4,class=CODE,delta=1
   121                           	psect	text100,global,reloc=4,class=CODE,delta=1
   122                           	psect	text101,global,reloc=4,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   127                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   130                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   131  0000                     
   132                           ; Version 2.05
   133                           ; Generated 20/12/2018 GMT
   134                           ; 
   135                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   136                           ; All rights reserved.
   137                           ; 
   138                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   139                           ; 
   140                           ; Redistribution and use in source and binary forms, with or without modification, are
   141                           ; permitted provided that the following conditions are met:
   142                           ; 
   143                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   144                           ;        conditions and the following disclaimer.
   145                           ; 
   146                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   147                           ;        of conditions and the following disclaimer in the documentation and/or other
   148                           ;        materials provided with the distribution.
   149                           ; 
   150                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   151                           ;        software without specific prior written permission.
   152                           ; 
   153                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   154                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   155                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   156                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   157                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   158                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   159                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   160                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   161                           ; 
   162                           ; 
   163                           ; Code-generator required, PIC18F57K42 Definitions
   164                           ; 
   165                           ; SFR Addresses
   166  0000                     
   167 ;;_mode	offset	0
   168 ;;_rxData	offset	0
   169 ;;_t_link	offset=-1 (param)
   170 ;;_k	offset	0
   171 ;;_checksum	offset	2
   172 ;;_i	offset	4
   173 ;;_byte_block	offset=-2 (param)
   174 ;;_length	offset=-3 (param)
   175 ;;_fake	offset=-4 (param)
   176 ;;_i	offset	0
   177 ;;_sum	offset	2
   178 ;;_byte_block	offset=-2 (param)
   179 ;;_byte_count	offset=-4 (param)
   180 ;;_bufData	offset=-1 (param)
   181 ;;_stream	offset=-6 (param)
   182 ;;_function	offset=-7 (param)
   183 ;;_f	offset	0
   184 ;;_ap	offset	5
   185 ;;_s	offset=-2 (param)
   186 ;;_fmt	offset=-3 (param)
   187 ;;_rxData	offset	0
   188 ;;_r_link	offset=-1 (param)
   189 ;;_byte_block	offset=-1 (param)
   190 ;;_clear	offset=-2 (param)
   191 ;;_numMilliseconds	offset=-2 (param)
   192 ;;_timer	offset=-1 (param)
   193 ;;_timer	offset=-1 (param)
   194 ;;_count	offset=-3 (param)
   195 ;;_txData	offset=-1 (param)
   196 ;;_readValue	offset	0
   197 ;;_cmd	offset=-1 (param)
   198 ;;_cmd	offset=-1 (param)
   199 ;;_data	offset=-1 (param)
   200 ;;__this	offset=-2 (param)
   201 ;;_r	offset=-1 (param)
   202 ;;_c	offset=-2 (param)
   203 ;;_strPtr	offset=-3 (param)
   204 ;;_strPtr	offset=-1 (param)
   205 ;;_cmd	offset=-1 (param)
   206 ;;_strPtr	offset=-1 (param)
   207 ;;_delay	offset=-4 (param)
   208 ;;__this	offset=-2 (param)
   209 ;;_clearBuffer	offset=-3 (param)
   210 ;;_s	offset	0
   211 ;;_k	offset	2
   212 ;;_dest	offset=-2 (param)
   213 ;;_c	offset=-4 (param)
   214 ;;_n	offset=-6 (param)
   215 ;;_ap	offset	0
   216 ;;_fmt	offset=-2 (param)
   217 ;;_cfmt	offset	0
   218 ;;_fp	offset=-2 (param)
   219 ;;_fmt	offset=-3 (param)
   220 ;;_ap	offset=-5 (param)
   221 ;;_ll	offset	0
   222 ;;_cp	offset	8
   223 ;;_c	offset	10
   224 ;;_fp	offset=-2 (param)
   225 ;;_fmt	offset=-4 (param)
   226 ;;_ap	offset=-6 (param)
   227 ;;_r	offset	0
   228 ;;_l	offset	1
   229 ;;__l	offset=-1 (param)
   230 ;;__r	offset=-2 (param)
   231 ;;_n	offset=-4 (param)
   232 ;;_nuls	offset	0
   233 ;;_l	offset	7
   234 ;;_p	offset	9
   235 ;;_cp	offset	11
   236 ;;_w	offset	13
   237 ;;_i	offset	15
   238 ;;_fp	offset=-2 (param)
   239 ;;_s	offset=-4 (param)
   240 ;;_dtoa$3761	offset	0
   241 ;;_n	offset	2
   242 ;;_i	offset	10
   243 ;;_s	offset	12
   244 ;;_w	offset	14
   245 ;;_p	offset	16
   246 ;;_fp	offset=-2 (param)
   247 ;;_d	offset=-10 (param)
   248 ;;_a	offset=-2 (param)
   249 ;;_sign	offset	0
   250 ;;_counter	offset	1
   251 ;;_dividend	offset=-8 (param)
   252 ;;_divisor	offset=-16 (param)
   253 ;;_quotient	offset	0
   254 ;;_sign	offset	8
   255 ;;_counter	offset	9
   256 ;;_dividend	offset=-8 (param)
   257 ;;_divisor	offset=-16 (param)
   258 ;;_w	offset	0
   259 ;;_fp	offset=-2 (param)
   260 ;;_c	offset=-3 (param)
   261 ;;_w	offset	0
   262 ;;_i	offset	2
   263 ;;_fp	offset=-2 (param)
   264 ;;_buf	offset=-4 (param)
   265 ;;_p	offset=-6 (param)
   266 ;;_a	offset	0
   267 ;;_s	offset=-2 (param)
   268 ;;_i	offset	0
   269 ;;_c	offset	2
   270 ;;_s	offset=-2 (param)
   271 ;;_fp	offset=-4 (param)
   272 ;;_c	offset=-2 (param)
   273 ;;_fp	offset=-4 (param)
   274 ;;_c	offset=-1 (param)
   275 ;;__this	offset=-2 (param)
   276 ;;_c	offset=-3 (param)
   277 ;;_InterruptHandler	offset=-3 (param)
   278 ;;_InterruptHandler	offset=-3 (param)
   279 ;;_InterruptHandler	offset=-3 (param)
   280 ;;_InterruptHandler	offset=-3 (param)
   281 ;;_InterruptHandler	offset=-3 (param)
   282 ;;_InterruptHandler	offset=-3 (param)
   283 ;;_state	offset	0
   284 ;;_InterruptHandler	offset=-3 (param)
   285 ;;_InterruptHandler	offset=-3 (param)
   286 ;;_InterruptHandler	offset=-3 (param)
   287 ;;_InterruptHandler	offset=-3 (param)
   288 ;;_i	offset	0
   289 ;;_timerVal	offset=-2 (param)
   290                           
   291                           	psect	idataCOMRAM
   292  0059D6                     __pidataCOMRAM:
   293                           	opt callstack 0
   294                           
   295                           ;initializer for r_protocol@retry
   296  0059D6  03                 	db	3
   297                           
   298                           	psect	idataBANK0
   299  0059B2                     __pidataBANK0:
   300                           	opt callstack 0
   301                           
   302                           ;initializer for stoa@F1142
   303  0059B2  28                 	db	40
   304  0059B3  6E                 	db	110
   305  0059B4  75                 	db	117
   306  0059B5  6C                 	db	108
   307  0059B6  6C                 	db	108
   308  0059B7  29                 	db	41
   309  0059B8  00                 	db	0
   310                           
   311                           	psect	idataBANK1
   312  0047BE                     __pidataBANK1:
   313                           	opt callstack 0
   314                           
   315                           ;initializer for _H10
   316  0047BE  0000               	dw	0
   317  0047C0  0001               	dw	1
   318  0047C2  0000               	dw	0
   319  0047C4  01                 	db	1
   320  0047C5  80                 	db	128
   321  0047C6  01                 	db	1
   322  0047C7  81                 	db	129
   323  0047C8  00                 	db	0
   324  0047C9  00                 	db	0
   325  0047CA  0A                 	db	10
   326  0047CB  0000               	dw	0
   327  0047CD  00                 	db	0
   328  0047CE  00                 	db	0
   329  0047CF  00                 	db	0
   330  0047D0  00                 	db	0
   331  0047D1  00                 	db	0
   332  0047D2  00                 	db	0
   333  0047D3  00                 	db	0
   334  0047D4  00                 	db	0
   335  0047D5  00                 	db	0
   336  0047D6  00                 	db	0
   337  0047D7  0A                 	db	10
   338  0047D8  0000               	dw	0
   339  0047DA  0001               	dw	1
   340  0047DC  0000               	dw	0
   341  0047DE  01                 	db	1
   342  0047DF  80                 	db	128
   343  0047E0  00                 	db	0
   344  0047E1  01                 	db	1
   345  0047E2  00                 	db	0
   346  0047E3  00                 	db	0
   347  0047E4  0A                 	db	10
   348  0047E5  0000               	dw	0
   349  0047E7  0001               	dw	1
   350  0047E9  0000               	dw	0
   351  0047EB  01                 	db	1
   352  0047EC  80                 	db	128
   353  0047ED  01                 	db	1
   354  0047EE  81                 	db	129
   355  0047EF  00                 	db	0
   356  0047F0  80                 	db	128
   357  0047F1  0A                 	db	10
   358  0047F2  0000               	dw	0
   359  0047F4  0001               	dw	1
   360  0047F6  0000               	dw	0
   361  0047F8  01                 	db	1
   362  0047F9  80                 	db	128
   363  0047FA  11                 	db	17
   364  0047FB  82                 	db	130
   365  0047FC  00                 	db	0
   366  0047FD  00                 	db	0
   367  0047FE  0A                 	db	10
   368                           
   369                           ;initializer for _H12
   370  0047FF  0000               	dw	0
   371  004801  00                 	db	0
   372  004802  01                 	db	1
   373  004803  0001               	dw	1
   374  004805  0000               	dw	0
   375  004807  01                 	db	1
   376  004808  80                 	db	128
   377  004809  02                 	db	2
   378  00480A  01                 	db	1
   379  00480B  00                 	db	0
   380  00480C  00                 	db	0
   381  00480D  0C                 	db	12
   382  00480E  0000               	dw	0
   383  004810  00                 	db	0
   384  004811  01                 	db	1
   385  004812  0001               	dw	1
   386  004814  0000               	dw	0
   387  004816  01                 	db	1
   388  004817  80                 	db	128
   389  004818  0D                 	db	13
   390  004819  81                 	db	129
   391  00481A  00                 	db	0
   392  00481B  00                 	db	0
   393  00481C  0C                 	db	12
   394                           
   395                           ;initializer for _H24
   396  00481D  0000               	dw	0
   397  00481F  41                 	db	65
   398  004820  20                 	db	32
   399  004821  30                 	db	48
   400  004822  31                 	db	49
   401  004823  30                 	db	48
   402  004824  39                 	db	57
   403  004825  31                 	db	49
   404  004826  31                 	db	49
   405  004827  30                 	db	48
   406  004828  38                 	db	56
   407  004829  34                 	db	52
   408  00482A  36                 	db	54
   409  00482B  30                 	db	48
   410  00482C  30                 	db	48
   411  00482D  0001               	dw	1
   412  00482F  0000               	dw	0
   413  004831  01                 	db	1
   414  004832  80                 	db	128
   415  004833  12                 	db	18
   416  004834  02                 	db	2
   417  004835  00                 	db	0
   418  004836  00                 	db	0
   419  004837  18                 	db	24
   420                           
   421                           ;initializer for _H17
   422  004838  0000               	dw	0
   423  00483A  00                 	db	0
   424  00483B  01                 	db	1
   425  00483C  00                 	db	0
   426  00483D  01                 	db	1
   427  00483E  21                 	db	33
   428  00483F  02                 	db	2
   429  004840  01                 	db	1
   430  004841  0001               	dw	1
   431  004843  0000               	dw	0
   432  004845  01                 	db	1
   433  004846  80                 	db	128
   434  004847  0E                 	db	14
   435  004848  01                 	db	1
   436  004849  00                 	db	0
   437  00484A  00                 	db	0
   438  00484B  11                 	db	17
   439                           
   440                           ;initializer for _H14
   441  00484C  0000               	dw	0
   442  00484E  00                 	db	0
   443  00484F  41                 	db	65
   444  004850  11                 	db	17
   445  004851  01                 	db	1
   446  004852  0001               	dw	1
   447  004854  0000               	dw	0
   448  004856  01                 	db	1
   449  004857  80                 	db	128
   450  004858  04                 	db	4
   451  004859  01                 	db	1
   452  00485A  00                 	db	0
   453  00485B  00                 	db	0
   454  00485C  0E                 	db	14
   455                           
   456                           ;initializer for _H13
   457  00485D  0000               	dw	0
   458  00485F  00                 	db	0
   459  004860  01                 	db	1
   460  004861  21                 	db	33
   461  004862  0001               	dw	1
   462  004864  0000               	dw	0
   463  004866  01                 	db	1
   464  004867  80                 	db	128
   465  004868  0C                 	db	12
   466  004869  06                 	db	6
   467  00486A  00                 	db	0
   468  00486B  00                 	db	0
   469  00486C  0D                 	db	13
   470                           
   471                           	psect	idataBANK2
   472  0052BE                     __pidataBANK2:
   473                           	opt callstack 0
   474                           
   475                           ;initializer for _H53
   476  0052BE  0000               	dw	0
   477  0052C0  00                 	db	0
   478  0052C1  00                 	db	0
   479  0052C2  00                 	db	0
   480  0052C3  00                 	db	0
   481  0052C4  00                 	db	0
   482  0052C5  00                 	db	0
   483  0052C6  00                 	db	0
   484  0052C7  00                 	db	0
   485  0052C8  00                 	db	0
   486  0052C9  00                 	db	0
   487  0052CA  00                 	db	0
   488  0052CB  00                 	db	0
   489  0052CC  00                 	db	0
   490  0052CD  00                 	db	0
   491  0052CE  00                 	db	0
   492  0052CF  00                 	db	0
   493  0052D0  00                 	db	0
   494  0052D1  00                 	db	0
   495  0052D2  00                 	db	0
   496  0052D3  00                 	db	0
   497  0052D4  00                 	db	0
   498  0052D5  00                 	db	0
   499  0052D6  00                 	db	0
   500  0052D7  00                 	db	0
   501  0052D8  00                 	db	0
   502  0052D9  00                 	db	0
   503  0052DA  00                 	db	0
   504  0052DB  00                 	db	0
   505  0052DC  00                 	db	0
   506  0052DD  00                 	db	0
   507  0052DE  00                 	db	0
   508  0052DF  00                 	db	0
   509  0052E0  00                 	db	0
   510  0052E1  00                 	db	0
   511  0052E2  00                 	db	0
   512  0052E3  00                 	db	0
   513  0052E4  00                 	db	0
   514  0052E5  00                 	db	0
   515  0052E6  00                 	db	0
   516  0052E7  46                 	db	70
   517  0052E8  01                 	db	1
   518  0052E9  41                 	db	65
   519  0052EA  00                 	db	0
   520  0052EB  0001               	dw	1
   521  0052ED  0000               	dw	0
   522  0052EF  01                 	db	1
   523  0052F0  80                 	db	128
   524  0052F1  03                 	db	3
   525  0052F2  8A                 	db	138
   526  0052F3  00                 	db	0
   527  0052F4  00                 	db	0
   528  0052F5  35                 	db	53
   529  0000                     _IVTADL	set	14493
   530  0000                     _IVTADH	set	14494
   531  0000                     _IVTADU	set	14495
   532  0000                     _PIE8bits	set	14744
   533  0000                     _PIR8bits	set	14760
   534  0000                     _SCANPR	set	14839
   535  0000                     _DMA2PR	set	14836
   536  0000                     _DMA1PR	set	14835
   537  0000                     _MAINPR	set	14834
   538  0000                     _ISRPR	set	14833
   539  0000                     _PIE2bits	set	14738
   540  0000                     _PIR2bits	set	14754
   541  0000                     _PIE9bits	set	14745
   542  0000                     _PIR9bits	set	14761
   543  0000                     _PIE6bits	set	14742
   544  0000                     _PIE3bits	set	14739
   545  0000                     _PMD7	set	14791
   546  0000                     _PMD6	set	14790
   547  0000                     _PMD5	set	14789
   548  0000                     _PMD4	set	14788
   549  0000                     _PMD3	set	14787
   550  0000                     _PMD2	set	14786
   551  0000                     _PMD1	set	14785
   552  0000                     _PMD0	set	14784
   553  0000                     _OSCTUNE	set	14814
   554  0000                     _OSCFRQ	set	14815
   555  0000                     _OSCEN	set	14813
   556  0000                     _OSCCON3	set	14811
   557  0000                     _OSCCON1	set	14809
   558  0000                     _IPR8bits	set	14728
   559  0000                     _IPR9bits	set	14729
   560  0000                     _IPR7bits	set	14727
   561  0000                     _IPR5bits	set	14725
   562  0000                     _IPR1bits	set	14721
   563  0000                     _IPR3bits	set	14723
   564  0000                     _IPR6bits	set	14726
   565  0000                     _IPR2bits	set	14722
   566  0000                     _PIE7bits	set	14743
   567  0000                     _PIE5bits	set	14741
   568  0000                     _PIE1bits	set	14737
   569  0000                     _PIR7bits	set	14759
   570  0000                     _PIR5bits	set	14757
   571  0000                     _PIR1bits	set	14753
   572  0000                     _PLLR	set	118496
   573  0000                     _SPI1SDIPPS	set	15071
   574  0000                     _RC6PPS	set	14870
   575  0000                     _RC5PPS	set	14869
   576  0000                     _RA6PPS	set	14854
   577  0000                     _RA5PPS	set	14853
   578  0000                     _RA4PPS	set	14852
   579  0000                     _SPI1SCKPPS	set	15070
   580  0000                     _U1RXPPS	set	15077
   581  0000                     _INT1PPS	set	15041
   582  0000                     _INT2PPS	set	15042
   583  0000                     _INT0PPS	set	15040
   584  0000                     _RC3PPS	set	14867
   585  0000                     _RB6PPS	set	14862
   586  0000                     _U2RXPPS	set	15080
   587  0000                     _SLRCONF	set	14995
   588  0000                     _SLRCONE	set	14979
   589  0000                     _SLRCOND	set	14963
   590  0000                     _SLRCONC	set	14947
   591  0000                     _SLRCONB	set	14931
   592  0000                     _SLRCONA	set	14915
   593  0000                     _ODCOND	set	14962
   594  0000                     _ODCONC	set	14946
   595  0000                     _ODCONB	set	14930
   596  0000                     _ODCONA	set	14914
   597  0000                     _ODCONF	set	14994
   598  0000                     _ODCONE	set	14978
   599  0000                     _WPUC	set	14945
   600  0000                     _WPUA	set	14913
   601  0000                     _WPUB	set	14929
   602  0000                     _WPUE	set	14977
   603  0000                     _WPUF	set	14993
   604  0000                     _WPUD	set	14961
   605  0000                     _ANSELA	set	14912
   606  0000                     _ANSELF	set	14992
   607  0000                     _ANSELE	set	14976
   608  0000                     _ANSELB	set	14928
   609  0000                     _ANSELC	set	14944
   610  0000                     _ANSELD	set	14960
   611  0000                     _DMA1SSA	set	15353
   612  0000                     _DMA1DSZ	set	15342
   613  0000                     _DMA1SSZ	set	15351
   614  0000                     _DMA1DSA	set	15344
   615  0000                     _DMA1CON0bits	set	15356
   616  0000                     _DMA1CON1bits	set	15357
   617  0000                     _DMA1CON0	set	15356
   618  0000                     _DMA1AIRQ	set	15358
   619  0000                     _DMA1SIRQ	set	15359
   620  0000                     _DMA1CON1	set	15357
   621  0000                     _CLC1CON	set	15476
   622  0000                     _CLC1GLS3	set	15485
   623  0000                     _CLC1GLS2	set	15484
   624  0000                     _CLC1GLS1	set	15483
   625  0000                     _CLC1GLS0	set	15482
   626  0000                     _CLC1SEL3	set	15481
   627  0000                     _CLC1SEL2	set	15480
   628  0000                     _CLC1SEL1	set	15479
   629  0000                     _CLC1SEL0	set	15478
   630  0000                     _CLC1POL	set	15477
   631  0000                     _CLKRCON	set	15589
   632  0000                     _CLKRCLK	set	15590
   633  0000                     _MD1CARL	set	15613
   634  0000                     _MD1CARH	set	15614
   635  0000                     _MD1SRC	set	15612
   636  0000                     _MD1CON1bits	set	15611
   637  0000                     _MD1CON0bits	set	15610
   638  0000                     _SPI1INTFbits	set	15642
   639  0000                     _SPI1RXB	set	15632
   640  0000                     _SPI1TXB	set	15633
   641  0000                     _SPI1TCNTL	set	15634
   642  0000                     _SPI1CON0	set	15636
   643  0000                     _SPI1CLK	set	15644
   644  0000                     _SPI1BAUD	set	15641
   645  0000                     _SPI1CON2	set	15638
   646  0000                     _SPI1CON1	set	15637
   647  0000                     _U2RXB	set	15824
   648  0000                     _U2TXB	set	15826
   649  0000                     _U2ERRIE	set	15842
   650  0000                     _U2ERRIR	set	15841
   651  0000                     _U2UIR	set	15840
   652  0000                     _U2FIFO	set	15839
   653  0000                     _U2BRGH	set	15838
   654  0000                     _U2BRGL	set	15837
   655  0000                     _U2CON2	set	15836
   656  0000                     _U2CON1	set	15835
   657  0000                     _U2CON0	set	15834
   658  0000                     _U2P3L	set	15832
   659  0000                     _U2P2L	set	15830
   660  0000                     _U2P1L	set	15828
   661  0000                     _U1RXB	set	15848
   662  0000                     _U1TXB	set	15850
   663  0000                     _U1ERRIE	set	15866
   664  0000                     _U1ERRIR	set	15865
   665  0000                     _U1UIR	set	15864
   666  0000                     _U1FIFO	set	15863
   667  0000                     _U1BRGH	set	15862
   668  0000                     _U1BRGL	set	15861
   669  0000                     _U1CON2	set	15860
   670  0000                     _U1CON1	set	15859
   671  0000                     _U1CON0	set	15858
   672  0000                     _U1P3H	set	15857
   673  0000                     _U1P3L	set	15856
   674  0000                     _U1P2H	set	15855
   675  0000                     _U1P2L	set	15854
   676  0000                     _U1P1H	set	15853
   677  0000                     _U1P1L	set	15852
   678  0000                     _ADCON0	set	16120
   679  0000                     _ADCLK	set	16127
   680  0000                     _ADACT	set	16126
   681  0000                     _ADREF	set	16125
   682  0000                     _ADSTAT	set	16124
   683  0000                     _ADCON3	set	16123
   684  0000                     _ADCON2	set	16122
   685  0000                     _ADCON1	set	16121
   686  0000                     _ADPREH	set	16119
   687  0000                     _ADPREL	set	16118
   688  0000                     _ADCAP	set	16117
   689  0000                     _ADACQH	set	16116
   690  0000                     _ADACQL	set	16115
   691  0000                     _ADPCH	set	16113
   692  0000                     _ADRPT	set	16108
   693  0000                     _ADACCU	set	16106
   694  0000                     _ADSTPTH	set	16101
   695  0000                     _ADSTPTL	set	16100
   696  0000                     _ADUTHH	set	16097
   697  0000                     _ADUTHL	set	16096
   698  0000                     _ADLTHH	set	16095
   699  0000                     _ADLTHL	set	16094
   700  0000                     _NCO1CONbits	set	16190
   701  0000                     _NCO1INCL	set	16187
   702  0000                     _NCO1INCH	set	16188
   703  0000                     _NCO1INCU	set	16189
   704  0000                     _NCO1ACCL	set	16184
   705  0000                     _NCO1ACCH	set	16185
   706  0000                     _NCO1ACCU	set	16186
   707  0000                     _NCO1CLK	set	16191
   708  0000                     _NCO1CON	set	16190
   709  0000                     _LATCbits	set	16316
   710  0000                     _PORTDbits	set	16333
   711  0000                     _LATDbits	set	16317
   712  0000                     _LATEbits	set	16318
   713  0000                     _T5CONbits	set	16282
   714  0000                     _T5CON	set	16282
   715  0000                     _TMR5L	set	16280
   716  0000                     _TMR5H	set	16281
   717  0000                     _T5CLK	set	16285
   718  0000                     _T5GATE	set	16284
   719  0000                     _T5GCON	set	16283
   720  0000                     _T6CON	set	16276
   721  0000                     _T6TMR	set	16274
   722  0000                     _T6PR	set	16275
   723  0000                     _T6RST	set	16279
   724  0000                     _T6HLT	set	16277
   725  0000                     _T6CLKCON	set	16278
   726  0000                     _TRISD	set	16325
   727  0000                     _TRISC	set	16324
   728  0000                     _TRISB	set	16323
   729  0000                     _TRISA	set	16322
   730  0000                     _TRISF	set	16327
   731  0000                     _TRISE	set	16326
   732  0000                     _LATC	set	16316
   733  0000                     _LATB	set	16315
   734  0000                     _LATF	set	16319
   735  0000                     _LATA	set	16314
   736  0000                     _LATD	set	16317
   737  0000                     _LATE	set	16318
   738  0000                     _IVTLOCKbits	set	16340
   739  0000                     _IVTLOCK	set	16340
   740  0000                     _INTCON0bits	set	16338
   741  0000                     _GIE	set	130711
   742                           
   743                           	psect	smallconst
   744  002000                     __psmallconst:
   745                           	opt callstack 0
   746  002000  00                 	db	0
   747  002001                     STR_11:
   748  002001  20                 	db	32
   749  002002  52                 	db	82	;'R'
   750  002003  25                 	db	37
   751  002004  64                 	db	100	;'d'
   752  002005  20                 	db	32
   753  002006  54                 	db	84	;'T'
   754  002007  25                 	db	37
   755  002008  64                 	db	100	;'d'
   756  002009  20                 	db	32
   757  00200A  46                 	db	70	;'F'
   758  00200B  52                 	db	82	;'R'
   759  00200C  25                 	db	37
   760  00200D  64                 	db	100	;'d'
   761  00200E  20                 	db	32
   762  00200F  46                 	db	70	;'F'
   763  002010  53                 	db	83	;'S'
   764  002011  25                 	db	37
   765  002012  64                 	db	100	;'d'
   766  002013  20                 	db	32
   767  002014  23                 	db	35
   768  002015  00                 	db	0
   769  002016                     STR_8:
   770  002016  45                 	db	69	;'E'
   771  002017  20                 	db	32
   772  002018  52                 	db	82	;'R'
   773  002019  25                 	db	37
   774  00201A  64                 	db	100	;'d'
   775  00201B  20                 	db	32
   776  00201C  54                 	db	84	;'T'
   777  00201D  25                 	db	37
   778  00201E  64                 	db	100	;'d'
   779  00201F  20                 	db	32
   780  002020  45                 	db	69	;'E'
   781  002021  25                 	db	37
   782  002022  64                 	db	100	;'d'
   783  002023  20                 	db	32
   784  002024  41                 	db	65	;'A'
   785  002025  25                 	db	37
   786  002026  64                 	db	100	;'d'
   787  002027  20                 	db	32
   788  002028  23                 	db	35
   789  002029  00                 	db	0
   790  00202A                     STR_9:
   791  00202A  20                 	db	32
   792  00202B  48                 	db	72	;'H'
   793  00202C  4F                 	db	79	;'O'
   794  00202D  53                 	db	83	;'S'
   795  00202E  54                 	db	84	;'T'
   796  00202F  20                 	db	32
   797  002030  4D                 	db	77	;'M'
   798  002031  4F                 	db	79	;'O'
   799  002032  44                 	db	68	;'D'
   800  002033  45                 	db	69	;'E'
   801  002034  20                 	db	32
   802  002035  25                 	db	37
   803  002036  6C                 	db	108	;'l'
   804  002037  64                 	db	100	;'d'
   805  002038  20                 	db	32
   806  002039  20                 	db	32
   807  00203A  20                 	db	32
   808  00203B  23                 	db	35
   809  00203C  00                 	db	0
   810  00203D                     STR_10:
   811  00203D  20                 	db	32
   812  00203E  4C                 	db	76	;'L'
   813  00203F  4F                 	db	79	;'O'
   814  002040  47                 	db	71	;'G'
   815  002041  20                 	db	32
   816  002042  4D                 	db	77	;'M'
   817  002043  4F                 	db	79	;'O'
   818  002044  44                 	db	68	;'D'
   819  002045  45                 	db	69	;'E'
   820  002046  20                 	db	32
   821  002047  20                 	db	32
   822  002048  20                 	db	32
   823  002049  20                 	db	32
   824  00204A  20                 	db	32
   825  00204B  20                 	db	32
   826  00204C  23                 	db	35
   827  00204D  00                 	db	0
   828  00204E                     STR_1:
   829  00204E  20                 	db	32
   830  00204F  52                 	db	82	;'R'
   831  002050  56                 	db	86	;'V'
   832  002051  49                 	db	73	;'I'
   833  002052  20                 	db	32
   834  002053  48                 	db	72	;'H'
   835  002054  4F                 	db	79	;'O'
   836  002055  53                 	db	83	;'S'
   837  002056  54                 	db	84	;'T'
   838  002057  20                 	db	32
   839  002058  54                 	db	84	;'T'
   840  002059  45                 	db	69	;'E'
   841  00205A  53                 	db	83	;'S'
   842  00205B  54                 	db	84	;'T'
   843  00205C  45                 	db	69	;'E'
   844  00205D  52                 	db	82	;'R'
   845  00205E  00                 	db	0
   846  00205F                     STR_4:
   847  00205F  20                 	db	32
   848  002060  46                 	db	70	;'F'
   849  002061  47                 	db	71	;'G'
   850  002062  42                 	db	66	;'B'
   851  002063  40                 	db	64	;'@'
   852  002064  4D                 	db	77	;'M'
   853  002065  43                 	db	67	;'C'
   854  002066  48                 	db	72	;'H'
   855  002067  50                 	db	80	;'P'
   856  002068  20                 	db	32
   857  002069  46                 	db	70	;'F'
   858  00206A  41                 	db	65	;'A'
   859  00206B  42                 	db	66	;'B'
   860  00206C  34                 	db	52	;'4'
   861  00206D  00                 	db	0
   862  00206E                     STR_5:
   863  00206E  20                 	db	32
   864  00206F  53                 	db	83	;'S'
   865  002070  25                 	db	37
   866  002071  64                 	db	100	;'d'
   867  002072  46                 	db	70	;'F'
   868  002073  25                 	db	37
   869  002074  64                 	db	100	;'d'
   870  002075  20                 	db	32
   871  002076  23                 	db	35
   872  002077  20                 	db	32
   873  002078  20                 	db	32
   874  002079  20                 	db	32
   875  00207A  20                 	db	32
   876  00207B  00                 	db	0
   877  00207C                     STR_2:
   878  00207C  20                 	db	32
   879  00207D  56                 	db	86	;'V'
   880  00207E  65                 	db	101	;'e'
   881  00207F  72                 	db	114	;'r'
   882  002080  73                 	db	115	;'s'
   883  002081  69                 	db	105	;'i'
   884  002082  6F                 	db	111	;'o'
   885  002083  6E                 	db	110	;'n'
   886  002084  20                 	db	32
   887  002085  25                 	db	37
   888  002086  73                 	db	115	;'s'
   889  002087  00                 	db	0
   890  002088                     STR_7:
   891  002088  20                 	db	32
   892  002089  4F                 	db	79	;'O'
   893  00208A  4B                 	db	75	;'K'
   894  00208B  20                 	db	32
   895  00208C  23                 	db	35
   896  00208D  00                 	db	0
   897  00208E                     STR_6:
   898  00208E  20                 	db	32
   899  00208F  4F                 	db	79	;'O'
   900  002090  4B                 	db	75	;'K'
   901  002091  51                 	db	81	;'Q'
   902  002092  23                 	db	35
   903  002093  00                 	db	0
   904  002094                     STR_3:
   905  002094  30                 	db	48	;'0'
   906  002095  2E                 	db	46
   907  002096  36                 	db	54	;'6'
   908  002097  35                 	db	53	;'5'
   909  002098  41                 	db	65	;'A'
   910  002099  00                 	db	0
   911  00209A                     STR_15:
   912  00209A  6C                 	db	108	;'l'
   913  00209B  64                 	db	100	;'d'
   914  00209C  00                 	db	0
   915  00209D                     STR_19:
   916  00209D  6C                 	db	108	;'l'
   917  00209E  69                 	db	105	;'i'
   918  00209F  00                 	db	0
   919  0020A0                     STR_13:
   920  0020A0  25                 	db	37
   921  0020A1  63                 	db	99	;'c'
   922  0020A2  00                 	db	0
   923  0000                     
   924                           ; #config settings
   925  0020A3  00                 	db	0	; dummy byte at the end
   926  0000                     
   927                           	psect	cinit
   928  00462E                     __pcinit:
   929                           	opt callstack 0
   930  00462E                     start_initialization:
   931                           	opt callstack 0
   932  00462E                     __initialization:
   933                           	opt callstack 0
   934                           
   935                           ; Initialize objects allocated to BANK2 (56 bytes)
   936                           ; load TBLPTR registers with __pidataBANK2
   937  00462E  0EBE               	movlw	low __pidataBANK2
   938  004630  6EF6               	movwf	tblptrl,c
   939  004632  0E52               	movlw	high __pidataBANK2
   940  004634  6EF7               	movwf	tblptrh,c
   941  004636  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   942  004638  6EF8               	movwf	tblptru,c
   943  00463A  EE00  F2C0         	lfsr	0,__pdataBANK2
   944  00463E  EE20 F038          	lfsr	2,56
   945  004642                     copy_data0:
   946  004642  0009               	tblrd		*+
   947  004644  006F FFD7 FFEE     	movff	tablat,postinc0
   948  00464A  50DD               	movf	postdec2,w,c
   949  00464C  50D9               	movf	fsr2l,w,c
   950  00464E  E1F9               	bnz	copy_data0
   951                           
   952                           ; Initialize objects allocated to BANK1 (175 bytes)
   953                           ; load TBLPTR registers with __pidataBANK1
   954  004650  0EBE               	movlw	low __pidataBANK1
   955  004652  6EF6               	movwf	tblptrl,c
   956  004654  0E47               	movlw	high __pidataBANK1
   957  004656  6EF7               	movwf	tblptrh,c
   958  004658  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   959  00465A  6EF8               	movwf	tblptru,c
   960  00465C  EE00  F100         	lfsr	0,__pdataBANK1
   961  004660  EE20 F0AF          	lfsr	2,175
   962  004664                     copy_data1:
   963  004664  0009               	tblrd		*+
   964  004666  006F FFD7 FFEE     	movff	tablat,postinc0
   965  00466C  50DD               	movf	postdec2,w,c
   966  00466E  50D9               	movf	fsr2l,w,c
   967  004670  E1F9               	bnz	copy_data1
   968                           
   969                           ; Initialize objects allocated to BANK0 (7 bytes)
   970                           ; load TBLPTR registers with __pidataBANK0
   971  004672  0EB2               	movlw	low __pidataBANK0
   972  004674  6EF6               	movwf	tblptrl,c
   973  004676  0E59               	movlw	high __pidataBANK0
   974  004678  6EF7               	movwf	tblptrh,c
   975  00467A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   976  00467C  6EF8               	movwf	tblptru,c
   977  00467E  EE00  F0ED         	lfsr	0,__pdataBANK0
   978  004682  EE20 F007          	lfsr	2,7
   979  004686                     copy_data2:
   980  004686  0009               	tblrd		*+
   981  004688  006F FFD7 FFEE     	movff	tablat,postinc0
   982  00468E  50DD               	movf	postdec2,w,c
   983  004690  50D9               	movf	fsr2l,w,c
   984  004692  E1F9               	bnz	copy_data2
   985                           
   986                           ; Initialize objects allocated to COMRAM (1 bytes)
   987                           ; load TBLPTR registers with __pidataCOMRAM
   988  004694  0ED6               	movlw	low __pidataCOMRAM
   989  004696  6EF6               	movwf	tblptrl,c
   990  004698  0E59               	movlw	high __pidataCOMRAM
   991  00469A  6EF7               	movwf	tblptrh,c
   992  00469C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   993  00469E  6EF8               	movwf	tblptru,c
   994  0046A0  0009               	tblrd		*+	;fetch initializer
   995  0046A2  006F FFD4  F05E    	movff	tablat,__pdataCOMRAM
   996                           
   997                           ; Clear objects allocated to BANK3 (198 bytes)
   998  0046A8  EE00  F300         	lfsr	0,__pbssBANK3
   999  0046AC  0EC6               	movlw	198
  1000  0046AE                     clear_0:
  1001  0046AE  6AEE               	clrf	postinc0,c
  1002  0046B0  06E8               	decf	wreg,f,c
  1003  0046B2  E1FD               	bnz	clear_0
  1004                           
  1005                           ; Clear objects allocated to BANK2 (192 bytes)
  1006  0046B4  EE00  F200         	lfsr	0,__pbssBANK2
  1007  0046B8  0EC0               	movlw	192
  1008  0046BA                     clear_1:
  1009  0046BA  6AEE               	clrf	postinc0,c
  1010  0046BC  06E8               	decf	wreg,f,c
  1011  0046BE  E1FD               	bnz	clear_1
  1012                           
  1013                           ; Clear objects allocated to BANK1 (32 bytes)
  1014  0046C0  EE00  F1AF         	lfsr	0,__pbssBANK1
  1015  0046C4  0E20               	movlw	32
  1016  0046C6                     clear_2:
  1017  0046C6  6AEE               	clrf	postinc0,c
  1018  0046C8  06E8               	decf	wreg,f,c
  1019  0046CA  E1FD               	bnz	clear_2
  1020                           
  1021                           ; Clear objects allocated to BANK0 (141 bytes)
  1022  0046CC  EE00  F060         	lfsr	0,__pbssBANK0
  1023  0046D0  0E8D               	movlw	141
  1024  0046D2                     clear_3:
  1025  0046D2  6AEE               	clrf	postinc0,c
  1026  0046D4  06E8               	decf	wreg,f,c
  1027  0046D6  E1FD               	bnz	clear_3
  1028                           
  1029                           ; Clear objects allocated to COMRAM (59 bytes)
  1030  0046D8  EE00  F001         	lfsr	0,__pbssCOMRAM
  1031  0046DC  0E3B               	movlw	59
  1032  0046DE                     clear_4:
  1033  0046DE  6AEE               	clrf	postinc0,c
  1034  0046E0  06E8               	decf	wreg,f,c
  1035  0046E2  E1FD               	bnz	clear_4
  1036                           
  1037                           ;
  1038                           ; Setup IVTBASE
  1039                           ;
  1040  0046E4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1041  0046E6  6ED5               	movwf	213,c
  1042  0046E8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1043  0046EA  6ED6               	movwf	214,c
  1044  0046EC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1045  0046EE  6ED7               	movwf	215,c
  1046  0046F0                     end_of_initialization:
  1047                           	opt callstack 0
  1048  0046F0                     __end_of__initialization:
  1049                           	opt callstack 0
  1050  0046F0  0100               	movlb	0
  1051  0046F2  EFE9  F014         	goto	_main	;jump to C main() function
  1052                           
  1053                           	psect	bssCOMRAM
  1054  000001                     __pbssCOMRAM:
  1055                           	opt callstack 0
  1056  000001                     secs_II_message@block:
  1057                           	opt callstack 0
  1058  000001                     	ds	7
  1059  000008                     _TMR6_InterruptHandler:
  1060                           	opt callstack 0
  1061  000008                     	ds	3
  1062  00000B                     _ADCC_ADI_InterruptHandler:
  1063                           	opt callstack 0
  1064  00000B                     	ds	3
  1065  00000E                     _UART1_TxInterruptHandler:
  1066                           	opt callstack 0
  1067  00000E                     	ds	3
  1068  000011                     _UART1_RxInterruptHandler:
  1069                           	opt callstack 0
  1070  000011                     	ds	3
  1071  000014                     _UART2_TxInterruptHandler:
  1072                           	opt callstack 0
  1073  000014                     	ds	3
  1074  000017                     _UART2_RxInterruptHandler:
  1075                           	opt callstack 0
  1076  000017                     	ds	3
  1077  00001A                     _INT2_InterruptHandler:
  1078                           	opt callstack 0
  1079  00001A                     	ds	3
  1080  00001D                     _INT1_InterruptHandler:
  1081                           	opt callstack 0
  1082  00001D                     	ds	3
  1083  000020                     _INT0_InterruptHandler:
  1084                           	opt callstack 0
  1085  000020                     	ds	3
  1086  000023                     _width:
  1087                           	opt callstack 0
  1088  000023                     	ds	2
  1089  000025                     _prec:
  1090                           	opt callstack 0
  1091  000025                     	ds	2
  1092  000027                     _flags:
  1093                           	opt callstack 0
  1094  000027                     	ds	2
  1095  000029                     TMR5_ISR@CountCallBack:
  1096                           	opt callstack 0
  1097  000029                     	ds	2
  1098  00002B                     _timer5ReloadVal:
  1099                           	opt callstack 0
  1100  00002B                     	ds	2
  1101  00002D                     t_protocol@requeue:
  1102                           	opt callstack 0
  1103  00002D                     	ds	1
  1104  00002E                     t_protocol@retry:
  1105                           	opt callstack 0
  1106  00002E                     	ds	1
  1107  00002F                     r_protocol@rxData_l:
  1108                           	opt callstack 0
  1109  00002F                     	ds	1
  1110  000030                     _uart2RxCount:
  1111                           	opt callstack 0
  1112  000030                     	ds	1
  1113  000031                     _uart2RxTail:
  1114                           	opt callstack 0
  1115  000031                     	ds	1
  1116  000032                     _uart2RxHead:
  1117                           	opt callstack 0
  1118  000032                     	ds	1
  1119  000033                     _uart2TxBufferRemaining:
  1120                           	opt callstack 0
  1121  000033                     	ds	1
  1122  000034                     _uart2TxTail:
  1123                           	opt callstack 0
  1124  000034                     	ds	1
  1125  000035                     _uart2TxHead:
  1126                           	opt callstack 0
  1127  000035                     	ds	1
  1128  000036                     _uart1RxCount:
  1129                           	opt callstack 0
  1130  000036                     	ds	1
  1131  000037                     _uart1RxTail:
  1132                           	opt callstack 0
  1133  000037                     	ds	1
  1134  000038                     _uart1RxHead:
  1135                           	opt callstack 0
  1136  000038                     	ds	1
  1137  000039                     _uart1TxBufferRemaining:
  1138                           	opt callstack 0
  1139  000039                     	ds	1
  1140  00003A                     _uart1TxTail:
  1141                           	opt callstack 0
  1142  00003A                     	ds	1
  1143  00003B                     _uart1TxHead:
  1144                           	opt callstack 0
  1145  00003B                     	ds	1
  1146                           
  1147                           	psect	dataCOMRAM
  1148  00005E                     __pdataCOMRAM:
  1149                           	opt callstack 0
  1150  00005E                     r_protocol@retry:
  1151                           	opt callstack 0
  1152  00005E                     	ds	1
  1153                           
  1154                           	psect	bssBANK0
  1155  000060                     __pbssBANK0:
  1156                           	opt callstack 0
  1157  000060                     _r_block:
  1158                           	opt callstack 0
  1159  000060                     	ds	13
  1160  00006D                     _spi_link:
  1161                           	opt callstack 0
  1162  00006D                     	ds	12
  1163  000079                     _tickCount:
  1164                           	opt callstack 0
  1165  000079                     	ds	12
  1166  000085                     t_protocol@block:
  1167                           	opt callstack 0
  1168  000085                     	ds	7
  1169  00008C                     wdtdelay@dcount:
  1170                           	opt callstack 0
  1171  00008C                     	ds	4
  1172  000090                     _TMR5_InterruptHandler:
  1173                           	opt callstack 0
  1174  000090                     	ds	3
  1175  000093                     _nout:
  1176                           	opt callstack 0
  1177  000093                     	ds	2
  1178  000095                     run_checksum@sum:
  1179                           	opt callstack 0
  1180  000095                     	ds	2
  1181  000097                     _V:
  1182                           	opt callstack 0
  1183  000097                     	ds	86
  1184                           
  1185                           	psect	dataBANK0
  1186  0000ED                     __pdataBANK0:
  1187                           	opt callstack 0
  1188  0000ED                     stoa@F1142:
  1189                           	opt callstack 0
  1190  0000ED                     	ds	7
  1191                           
  1192                           	psect	bssBANK1
  1193  0001AF                     __pbssBANK1:
  1194                           	opt callstack 0
  1195  0001AF                     _dbuf:
  1196                           	opt callstack 0
  1197  0001AF                     	ds	32
  1198                           
  1199                           	psect	dataBANK1
  1200  000100                     __pdataBANK1:
  1201                           	opt callstack 0
  1202  000100                     _H10:
  1203                           	opt callstack 0
  1204  000100                     	ds	65
  1205  000141                     _H12:
  1206                           	opt callstack 0
  1207  000141                     	ds	30
  1208  00015F                     _H24:
  1209                           	opt callstack 0
  1210  00015F                     	ds	27
  1211  00017A                     _H17:
  1212                           	opt callstack 0
  1213  00017A                     	ds	20
  1214  00018E                     _H14:
  1215                           	opt callstack 0
  1216  00018E                     	ds	17
  1217  00019F                     _H13:
  1218                           	opt callstack 0
  1219  00019F                     	ds	16
  1220                           
  1221                           	psect	bssBANK2
  1222  000200                     __pbssBANK2:
  1223                           	opt callstack 0
  1224  000200                     _uart2TxBuffer:
  1225                           	opt callstack 0
  1226  000200                     	ds	64
  1227  000240                     _uart1RxBuffer:
  1228                           	opt callstack 0
  1229  000240                     	ds	64
  1230  000280                     _uart1TxBuffer:
  1231                           	opt callstack 0
  1232  000280                     	ds	64
  1233                           
  1234                           	psect	dataBANK2
  1235  0002C0                     __pdataBANK2:
  1236                           	opt callstack 0
  1237  0002C0                     _H53:
  1238                           	opt callstack 0
  1239  0002C0                     	ds	56
  1240                           
  1241                           	psect	bssBANK3
  1242  000300                     __pbssBANK3:
  1243                           	opt callstack 0
  1244  000300                     _uart2RxBuffer:
  1245                           	opt callstack 0
  1246  000300                     	ds	64
  1247  000340                     _ring_buf2:
  1248                           	opt callstack 0
  1249  000340                     	ds	67
  1250  000383                     _ring_buf1:
  1251                           	opt callstack 0
  1252  000383                     	ds	67
  1253                           
  1254                           	psect	cstackCOMRAM
  1255  00005C                     __pcstackCOMRAM:
  1256                           	opt callstack 0
  1257  00005C                     ??_TMR6_ISR:
  1258  00005C                     
  1259                           ; 1 bytes @ 0x0
  1260  00005C                     	ds	1
  1261  00005D                     ??_TMR5_ISR:
  1262                           
  1263                           ; 1 bytes @ 0x1
  1264  00005D                     	ds	1
  1265                           
  1266 ;;
  1267 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1268 ;;
  1269 ;; *************** function _main *****************
  1270 ;; Defined at:
  1271 ;;		line 294 in file "main.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  mode            1  [STACK] enum E16894
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1  [STACK] void 
  1278 ;; Registers used:
  1279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 3F/3B
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1289 ;;Total ram usage:        0 bytes
  1290 ;; Hardware stack levels required when called:   14
  1291 ;; This function calls:
  1292 ;;		_SYSTEM_Initialize
  1293 ;;		_WaitMs
  1294 ;;		_eaDogM_WriteCommand
  1295 ;;		_eaDogM_WriteStringAtPos
  1296 ;;		_init_display
  1297 ;;		_r_protocol
  1298 ;;		_sprintf
  1299 ;;		_t_protocol
  1300 ;;		_wait_lcd_done
  1301 ;; This function is called by:
  1302 ;;		Startup code after reset
  1303 ;; This function uses a reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text0
  1307  0029D2                     __ptext0:
  1308                           	opt callstack 0
  1309  0029D2                     _main:
  1310                           	opt callstack 0
  1311                           
  1312                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1313  0029D2  52E6               	movf	postinc1,f,c
  1314                           
  1315                           ;main.c: 296:  UI_STATES mode;;main.c: 299:  SYSTEM_Initialize();
  1316                           
  1317                           ;incstack = 0
  1318  0029D4  ECA3  F028         	call	_SYSTEM_Initialize	;wreg free
  1319                           
  1320                           ; BSR set to: 60
  1321                           ;main.c: 302:  (INTCON0bits.GIEH = 1);
  1322  0029D8  8ED2               	bsf	16338,7,c	;volatile
  1323                           
  1324                           ; BSR set to: 60
  1325                           ;main.c: 305:  (INTCON0bits.GIEL = 1);
  1326  0029DA  8CD2               	bsf	16338,6,c	;volatile
  1327                           
  1328                           ; BSR set to: 60
  1329                           ;main.c: 307:  V.ui_state = UI_STATE_INIT;
  1330  0029DC  0100               	movlb	0	; () banked
  1331  0029DE  6B98               	clrf	(_V+1)& (0+255),b
  1332  0029E0  D15C               	goto	l7899
  1333  0029E2                     l7779:
  1334                           
  1335                           ; BSR set to: 0
  1336                           ;main.c: 312:    init_display();
  1337  0029E2  EC39  F022         	call	_init_display	;wreg free
  1338                           
  1339                           ; BSR set to: 61
  1340                           ;main.c: 313:    eaDogM_WriteCommand(0b00001100);
  1341  0029E6  0E0C               	movlw	12
  1342  0029E8  6EE6               	movwf	postinc1,c
  1343  0029EA  EC94  F02C         	call	_eaDogM_WriteCommand	;wreg free
  1344                           
  1345                           ; BSR set to: 0
  1346  0029EE  90BD               	bcf	16317,0,c	;volatile
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;main.c: 315:    mode = UI_STATE_HOST;
  1350                           ;stkvar	_mode @ sp[(-1)+0]
  1351  0029F0  0EFF               	movlw	-1
  1352  0029F2  6AE3               	clrf	plusw1,c
  1353  0029F4  2AE3               	incf	plusw1,f,c
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;main.c: 316:    if (!PORTDbits.RD3) {
  1357  0029F6  B6CD               	btfsc	16333,3,c	;volatile
  1358  0029F8  D005               	goto	l7791
  1359                           
  1360                           ; BSR set to: 0
  1361                           
  1362                           ;main.c: 317:     do { LATDbits.LATD0 = 1; } while(0);
  1363  0029FA  80BD               	bsf	16317,0,c	;volatile
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;main.c: 318:     mode = UI_STATE_LOG;
  1367                           ;stkvar	_mode @ sp[(-1)+0]
  1368  0029FC  0EFF               	movlw	-1
  1369  0029FE  6AE3               	clrf	plusw1,c
  1370  002A00  80E3               	bsf	plusw1,0,c
  1371  002A02  82E3               	bsf	plusw1,1,c	;indir
  1372  002A04                     l7791:
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;main.c: 320:    V.ui_state = mode;
  1376                           ;stkvar	_mode @ sp[(-1)+0]
  1377  002A04  0EFF               	movlw	-1
  1378  002A06  006F FF8C  F098    	movff	plusw1,_V+1
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;main.c: 321:    V.s_state = SEQ_STATE_INIT;
  1382  002A0C  6B97               	clrf	_V& (0+255),b
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;main.c: 351:    sprintf(V.buf, " RVI HOST TESTER");
  1386  002A0E  0E4E               	movlw	STR_1& (0+255)
  1387  002A10  6EE6               	movwf	postinc1,c
  1388  002A12  0E97               	movlw	_V& (0+255)
  1389  002A14  0F04               	addlw	4
  1390  002A16  6EE6               	movwf	postinc1,c
  1391  002A18  0E02               	movlw	2
  1392  002A1A  6EE6               	movwf	postinc1,c
  1393  002A1C  EC7B  F023         	call	_sprintf	;wreg free
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;main.c: 352:    wait_lcd_done();
  1397  002A20  EC22  F02C         	call	_wait_lcd_done	;wreg free
  1398                           
  1399                           ; BSR set to: 0
  1400                           ;main.c: 353:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1401  002A24  0E97               	movlw	_V& (0+255)
  1402  002A26  0F04               	addlw	4
  1403  002A28  6EE6               	movwf	postinc1,c
  1404  002A2A  0E00               	movlw	0
  1405  002A2C  6EE6               	movwf	postinc1,c
  1406  002A2E  0E00               	movlw	0
  1407  002A30  6EE6               	movwf	postinc1,c
  1408  002A32  EC91  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1409                           
  1410                           ; BSR set to: 59
  1411                           ;main.c: 354:    sprintf(V.buf, " Version %s", "0.65A");
  1412  002A36  0E94               	movlw	STR_3& (0+255)
  1413  002A38  6E47               	movwf	btemp+11,c
  1414  002A3A  0060  F11F  FFE6   	movff	btemp+11,postinc1
  1415  002A40  0E20               	movlw	high __smallconst
  1416  002A42  6EE6               	movwf	postinc1,c
  1417  002A44  0E7C               	movlw	STR_2& (0+255)
  1418  002A46  6EE6               	movwf	postinc1,c
  1419  002A48  0E97               	movlw	_V& (0+255)
  1420  002A4A  0F04               	addlw	4
  1421  002A4C  6EE6               	movwf	postinc1,c
  1422  002A4E  0E04               	movlw	4
  1423  002A50  6EE6               	movwf	postinc1,c
  1424  002A52  EC7B  F023         	call	_sprintf	;wreg free
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;main.c: 355:    wait_lcd_done();
  1428  002A56  EC22  F02C         	call	_wait_lcd_done	;wreg free
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;main.c: 356:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1432  002A5A  0E97               	movlw	_V& (0+255)
  1433  002A5C  0F04               	addlw	4
  1434  002A5E  6EE6               	movwf	postinc1,c
  1435  002A60  0E00               	movlw	0
  1436  002A62  6EE6               	movwf	postinc1,c
  1437  002A64  0E01               	movlw	1
  1438  002A66  6EE6               	movwf	postinc1,c
  1439  002A68  EC91  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1440                           
  1441                           ; BSR set to: 59
  1442                           ;main.c: 357:    sprintf(V.buf, " FGB@MCHP FAB4");
  1443  002A6C  0E5F               	movlw	STR_4& (0+255)
  1444  002A6E  6EE6               	movwf	postinc1,c
  1445  002A70  0E97               	movlw	_V& (0+255)
  1446  002A72  0F04               	addlw	4
  1447  002A74  6EE6               	movwf	postinc1,c
  1448  002A76  0E02               	movlw	2
  1449  002A78  6EE6               	movwf	postinc1,c
  1450  002A7A  EC7B  F023         	call	_sprintf	;wreg free
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;main.c: 358:    wait_lcd_done();
  1454  002A7E  EC22  F02C         	call	_wait_lcd_done	;wreg free
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;main.c: 359:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1458  002A82  0E97               	movlw	_V& (0+255)
  1459  002A84  0F04               	addlw	4
  1460  002A86  6EE6               	movwf	postinc1,c
  1461  002A88  0E00               	movlw	0
  1462  002A8A  6EE6               	movwf	postinc1,c
  1463  002A8C  0E02               	movlw	2
  1464  002A8E  6EE6               	movwf	postinc1,c
  1465  002A90  EC91  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1466                           
  1467                           ; BSR set to: 59
  1468                           ;main.c: 361:    WaitMs(3000);
  1469  002A94  0EB8               	movlw	184
  1470  002A96  6EE6               	movwf	postinc1,c
  1471  002A98  0E0B               	movlw	11
  1472  002A9A  6EE6               	movwf	postinc1,c
  1473  002A9C  ECE8  F029         	call	_WaitMs	;wreg free
  1474                           
  1475                           ;main.c: 362:    break;
  1476  002AA0  D110               	goto	l1237
  1477  002AA2                     l1215:
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;main.c: 366:     V.r_l_state = LINK_STATE_IDLE;
  1481  002AA2  6B99               	clrf	(_V+2)& (0+255),b
  1482                           
  1483                           ;main.c: 367:     V.t_l_state = LINK_STATE_IDLE;
  1484  002AA4  6B9A               	clrf	(_V+3)& (0+255),b
  1485                           
  1486                           ; BSR set to: 0
  1487                           ;main.c: 368:     V.s_state = SEQ_STATE_RX;
  1488  002AA6  0E01               	movlw	1
  1489  002AA8  D038               	goto	L1
  1490  002AAA                     l7817:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;main.c: 378:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1494  002AAA  0E97               	movlw	_V& (0+255)
  1495  002AAC  0F02               	addlw	2
  1496  002AAE  6EE6               	movwf	postinc1,c
  1497  002AB0  EC04  F018         	call	_r_protocol	;wreg free
  1498  002AB4  0E04               	movlw	4
  1499  002AB6  183C               	xorwf	btemp,w,c
  1500  002AB8  A4D8               	btfss	status,2,c
  1501  002ABA  D029               	goto	l7835
  1502                           
  1503                           ;main.c: 379:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1504  002ABC  0100               	movlb	0	; () banked
  1505  002ABE  51E4               	movf	(_V+77)& (0+255),w,b
  1506  002AC0  6EE6               	movwf	postinc1,c
  1507  002AC2  0E00               	movlw	0
  1508  002AC4  6EE6               	movwf	postinc1,c
  1509  002AC6  51E3               	movf	(_V+76)& (0+255),w,b
  1510  002AC8  6EE6               	movwf	postinc1,c
  1511  002ACA  0E00               	movlw	0
  1512  002ACC  6EE6               	movwf	postinc1,c
  1513  002ACE  0E6E               	movlw	STR_5& (0+255)
  1514  002AD0  6EE6               	movwf	postinc1,c
  1515  002AD2  0E97               	movlw	_V& (0+255)
  1516  002AD4  0F04               	addlw	4
  1517  002AD6  6EE6               	movwf	postinc1,c
  1518  002AD8  0E06               	movlw	6
  1519  002ADA  6EE6               	movwf	postinc1,c
  1520  002ADC  EC7B  F023         	call	_sprintf	;wreg free
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;main.c: 380:      V.buf[11] = 0;
  1524  002AE0  6BA6               	clrf	(_V+15)& (0+255),b
  1525                           
  1526                           ; BSR set to: 0
  1527                           ;main.c: 381:      wait_lcd_done();
  1528  002AE2  EC22  F02C         	call	_wait_lcd_done	;wreg free
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;main.c: 382:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1532  002AE6  0E97               	movlw	_V& (0+255)
  1533  002AE8  0F04               	addlw	4
  1534  002AEA  6EE6               	movwf	postinc1,c
  1535  002AEC  0E00               	movlw	0
  1536  002AEE  6EE6               	movwf	postinc1,c
  1537  002AF0  0E00               	movlw	0
  1538  002AF2  6EE6               	movwf	postinc1,c
  1539  002AF4  EC91  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1540                           
  1541                           ; BSR set to: 59
  1542                           ;main.c: 386:      if (V.wbit) {
  1543  002AF8  0100               	movlb	0	; () banked
  1544  002AFA  A3EB               	btfss	(_V+84)& (0+255),1,b
  1545  002AFC  D006               	goto	l7833
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;main.c: 387:       V.s_state = SEQ_STATE_TX;
  1549  002AFE  0E02               	movlw	2
  1550  002B00  6F97               	movwf	_V& (0+255),b
  1551                           
  1552                           ;main.c: 388:       V.failed_send = 0;
  1553  002B02  0E87               	movlw	-121
  1554  002B04  17EB               	andwf	(_V+84)& (0+255),f,b
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;main.c: 389:       V.t_l_state = LINK_STATE_IDLE;
  1558  002B06  6B9A               	clrf	(_V+3)& (0+255),b
  1559                           
  1560                           ;main.c: 390:      } else {
  1561  002B08  D002               	goto	l7835
  1562  002B0A                     l7833:
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;main.c: 391:       V.s_state = SEQ_STATE_TRIGGER;
  1566  002B0A  0E03               	movlw	3
  1567  002B0C  6F97               	movwf	_V& (0+255),b
  1568  002B0E                     l7835:
  1569                           
  1570                           ;main.c: 394:     if (V.r_l_state == LINK_STATE_ERROR)
  1571  002B0E  0E06               	movlw	6
  1572  002B10  0100               	movlb	0	; () banked
  1573  002B12  1999               	xorwf	(_V+2)& (0+255),w,b
  1574  002B14  A4D8               	btfss	status,2,c
  1575  002B16  D08C               	goto	l7877
  1576  002B18                     u4550:
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;main.c: 395:      V.s_state = SEQ_STATE_ERROR;
  1580  002B18  0E06               	movlw	6
  1581  002B1A                     L1:
  1582  002B1A  6F97               	movwf	_V& (0+255),b
  1583  002B1C  D089               	goto	l7877
  1584  002B1E                     l7839:
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;main.c: 401:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1588  002B1E  0E97               	movlw	_V& (0+255)
  1589  002B20  0F03               	addlw	3
  1590  002B22  6EE6               	movwf	postinc1,c
  1591  002B24  EC0B  F01C         	call	_t_protocol	;wreg free
  1592  002B28  0E04               	movlw	4
  1593  002B2A  183C               	xorwf	btemp,w,c
  1594  002B2C  A4D8               	btfss	status,2,c
  1595  002B2E  D003               	goto	l7843
  1596                           
  1597                           ;main.c: 402:      V.s_state = SEQ_STATE_TRIGGER;
  1598  002B30  0E03               	movlw	3
  1599  002B32  0100               	movlb	0	; () banked
  1600  002B34  6F97               	movwf	_V& (0+255),b
  1601  002B36                     l7843:
  1602                           
  1603                           ;main.c: 404:     if (V.t_l_state == LINK_STATE_ERROR)
  1604  002B36  0E06               	movlw	6
  1605  002B38  0100               	movlb	0	; () banked
  1606  002B3A  199A               	xorwf	(_V+3)& (0+255),w,b
  1607  002B3C  B4D8               	btfsc	status,2,c
  1608  002B3E  D7EC               	goto	u4550
  1609  002B40  D077               	goto	l7877
  1610  002B42                     l1225:
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;main.c: 408:     if (V.queue) {
  1614  002B42  A9EC               	btfss	(_V+85)& (0+255),4,b
  1615  002B44  D01C               	goto	l7857
  1616                           
  1617                           ; BSR set to: 0
  1618  002B46  A4BE               	btfss	16318,2,c	;volatile
  1619  002B48  D002               	goto	u4590
  1620  002B4A  0E01               	movlw	1
  1621  002B4C  D001               	goto	u4596
  1622  002B4E                     u4590:
  1623  002B4E  0E00               	movlw	0
  1624  002B50                     u4596:
  1625  002B50  0AFF               	xorlw	255
  1626  002B52  6E47               	movwf	btemp+11,c
  1627  002B54  4647               	rlncf	btemp+11,f,c
  1628  002B56  4647               	rlncf	btemp+11,f,c
  1629  002B58  50BE               	movf	16318,w,c	;volatile
  1630  002B5A  1847               	xorwf	btemp+11,w,c
  1631  002B5C  0BFB               	andlw	-5
  1632  002B5E  1847               	xorwf	btemp+11,w,c
  1633  002B60  6EBE               	movwf	16318,c	;volatile
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;main.c: 410:      V.r_l_state = LINK_STATE_IDLE;
  1637  002B62  6B99               	clrf	(_V+2)& (0+255),b
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;main.c: 411:      V.t_l_state = LINK_STATE_IDLE;
  1641  002B64  6B9A               	clrf	(_V+3)& (0+255),b
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;main.c: 412:      V.s_state = SEQ_STATE_TX;
  1645  002B66  0E02               	movlw	2
  1646  002B68  6F97               	movwf	_V& (0+255),b
  1647                           
  1648                           ; BSR set to: 0
  1649                           ;main.c: 413:      sprintf(V.buf, " OKQ#");
  1650  002B6A  0E8E               	movlw	STR_6& (0+255)
  1651  002B6C  6EE6               	movwf	postinc1,c
  1652  002B6E  0E97               	movlw	_V& (0+255)
  1653  002B70  0F04               	addlw	4
  1654  002B72  6EE6               	movwf	postinc1,c
  1655  002B74  0E02               	movlw	2
  1656  002B76  6EE6               	movwf	postinc1,c
  1657  002B78  EC7B  F023         	call	_sprintf	;wreg free
  1658                           
  1659                           ;main.c: 414:     } else {
  1660  002B7C  D00B               	goto	l7861
  1661  002B7E                     l7857:
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;main.c: 415:      V.s_state = SEQ_STATE_DONE;
  1665  002B7E  0E05               	movlw	5
  1666  002B80  6F97               	movwf	_V& (0+255),b
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;main.c: 416:      sprintf(V.buf, " OK #");
  1670  002B82  0E88               	movlw	STR_7& (0+255)
  1671  002B84  6EE6               	movwf	postinc1,c
  1672  002B86  0E97               	movlw	_V& (0+255)
  1673  002B88  0F04               	addlw	4
  1674  002B8A  6EE6               	movwf	postinc1,c
  1675  002B8C  0E02               	movlw	2
  1676  002B8E  6EE6               	movwf	postinc1,c
  1677  002B90  EC7B  F023         	call	_sprintf	;wreg free
  1678  002B94                     l7861:
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;main.c: 418:     wait_lcd_done();
  1682  002B94  EC22  F02C         	call	_wait_lcd_done	;wreg free
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;main.c: 419:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1686  002B98  0E97               	movlw	_V& (0+255)
  1687  002B9A  0F04               	addlw	4
  1688  002B9C  6EE6               	movwf	postinc1,c
  1689  002B9E  0E0B               	movlw	11
  1690  002BA0  6EE6               	movwf	postinc1,c
  1691  002BA2  0E00               	movlw	0
  1692  002BA4  6EE6               	movwf	postinc1,c
  1693  002BA6  EC91  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1694                           
  1695                           ;main.c: 421:     break;
  1696  002BAA  D042               	goto	l7877
  1697  002BAC                     l1230:
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;main.c: 423:     V.s_state = SEQ_STATE_INIT;
  1701  002BAC  6B97               	clrf	_V& (0+255),b
  1702                           
  1703                           ;main.c: 424:     break;
  1704  002BAE  D040               	goto	l7877
  1705  002BB0                     l1232:
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;main.c: 427:     V.s_state = SEQ_STATE_INIT;
  1709  002BB0  6B97               	clrf	_V& (0+255),b
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;main.c: 428:     sprintf(V.buf, "E R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.erro
      +                          r, V.abort);
  1713  002BB2  51E6               	movf	(_V+79)& (0+255),w,b
  1714  002BB4  6EE6               	movwf	postinc1,c
  1715  002BB6  0E00               	movlw	0
  1716  002BB8  6EE6               	movwf	postinc1,c
  1717  002BBA  51E5               	movf	(_V+78)& (0+255),w,b
  1718  002BBC  6EE6               	movwf	postinc1,c
  1719  002BBE  0E00               	movlw	0
  1720  002BC0  6EE6               	movwf	postinc1,c
  1721  002BC2  519A               	movf	(_V+3)& (0+255),w,b
  1722  002BC4  6EE6               	movwf	postinc1,c
  1723  002BC6  0E00               	movlw	0
  1724  002BC8  6EE6               	movwf	postinc1,c
  1725  002BCA  5199               	movf	(_V+2)& (0+255),w,b
  1726  002BCC  6EE6               	movwf	postinc1,c
  1727  002BCE  0E00               	movlw	0
  1728  002BD0  6EE6               	movwf	postinc1,c
  1729  002BD2  0E16               	movlw	STR_8& (0+255)
  1730  002BD4  6EE6               	movwf	postinc1,c
  1731  002BD6  0E97               	movlw	_V& (0+255)
  1732  002BD8  0F04               	addlw	4
  1733  002BDA  6EE6               	movwf	postinc1,c
  1734  002BDC  0E0A               	movlw	10
  1735  002BDE  6EE6               	movwf	postinc1,c
  1736  002BE0  EC7B  F023         	call	_sprintf	;wreg free
  1737                           
  1738                           ; BSR set to: 0
  1739                           ;main.c: 429:     V.buf[16] = 0;
  1740  002BE4  6BAB               	clrf	(_V+20)& (0+255),b
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;main.c: 430:     wait_lcd_done();
  1744  002BE6  EC22  F02C         	call	_wait_lcd_done	;wreg free
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;main.c: 431:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  1748  002BEA  0E97               	movlw	_V& (0+255)
  1749  002BEC  0F04               	addlw	4
  1750  002BEE  6EE6               	movwf	postinc1,c
  1751  002BF0  0E00               	movlw	0
  1752  002BF2  6EE6               	movwf	postinc1,c
  1753  002BF4  0E02               	movlw	2
  1754  002BF6  6EE6               	movwf	postinc1,c
  1755  002BF8  EC91  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1756                           
  1757                           ;main.c: 432:     break;
  1758  002BFC  D019               	goto	l7877
  1759  002BFE                     l7875:
  1760                           
  1761                           ; BSR set to: 0
  1762  002BFE  5197               	movf	_V& (0+255),w,b
  1763  002C00  6E46               	movwf	btemp+10,c
  1764  002C02  6A47               	clrf	btemp+11,c
  1765                           
  1766                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1767                           ; Switch size 1, requested type "simple"
  1768                           ; Number of cases is 1, Range of values is 0 to 0
  1769                           ; switch strategies available:
  1770                           ; Name         Instructions Cycles
  1771                           ; simple_byte            4     3 (average)
  1772                           ;	Chosen strategy is simple_byte
  1773  002C04  5047               	movf	btemp+11,w,c
  1774  002C06  0A00               	xorlw	0	; case 0
  1775  002C08  A4D8               	btfss	status,2,c
  1776  002C0A  D7D2               	goto	l1232
  1777                           
  1778                           ; BSR set to: 0
  1779                           ; Switch size 1, requested type "simple"
  1780                           ; Number of cases is 6, Range of values is 0 to 6
  1781                           ; switch strategies available:
  1782                           ; Name         Instructions Cycles
  1783                           ; simple_byte           19    10 (average)
  1784                           ;	Chosen strategy is simple_byte
  1785  002C0C  5046               	movf	btemp+10,w,c
  1786  002C0E  0A00               	xorlw	0	; case 0
  1787  002C10  B4D8               	btfsc	status,2,c
  1788  002C12  D747               	goto	l1215
  1789  002C14  0A01               	xorlw	1	; case 1
  1790  002C16  B4D8               	btfsc	status,2,c
  1791  002C18  D748               	goto	l7817
  1792  002C1A  0A03               	xorlw	3	; case 2
  1793  002C1C  B4D8               	btfsc	status,2,c
  1794  002C1E  D77F               	goto	l7839
  1795  002C20  0A01               	xorlw	1	; case 3
  1796  002C22  B4D8               	btfsc	status,2,c
  1797  002C24  D78E               	goto	l1225
  1798  002C26  0A06               	xorlw	6	; case 5
  1799  002C28  B4D8               	btfsc	status,2,c
  1800  002C2A  D7C0               	goto	l1230
  1801  002C2C  0A03               	xorlw	3	; case 6
  1802  002C2E  D7C0               	goto	l1232
  1803  002C30                     l7877:
  1804                           
  1805                           ;main.c: 434:    if (!V.error && !V.abort) {
  1806  002C30  0100               	movlb	0	; () banked
  1807  002C32  51E5               	movf	(_V+78)& (0+255),w,b
  1808  002C34  A4D8               	btfss	status,2,c
  1809  002C36  D045               	goto	l1237
  1810                           
  1811                           ; BSR set to: 0
  1812  002C38  51E6               	movf	(_V+79)& (0+255),w,b
  1813  002C3A  A4D8               	btfss	status,2,c
  1814  002C3C  D042               	goto	l1237
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;main.c: 435:     sprintf(V.buf, " HOST MODE %ld   #", V.ticks);
  1818  002C3E  0060  F36F  FFE6   	movff	_V+68,postinc1
  1819  002C44  0060  F373  FFE6   	movff	_V+69,postinc1
  1820  002C4A  0060  F377  FFE6   	movff	_V+70,postinc1
  1821  002C50  0060  F37B  FFE6   	movff	_V+71,postinc1
  1822  002C56  0E2A               	movlw	STR_9& (0+255)
  1823  002C58  6EE6               	movwf	postinc1,c
  1824  002C5A  0E97               	movlw	_V& (0+255)
  1825  002C5C  0F04               	addlw	4
  1826  002C5E  6EE6               	movwf	postinc1,c
  1827  002C60  0E06               	movlw	6
  1828  002C62  6EE6               	movwf	postinc1,c
  1829  002C64  EC7B  F023         	call	_sprintf	;wreg free
  1830  002C68                     l7883:
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;main.c: 436:     V.buf[16] = 0;
  1834  002C68  6BAB               	clrf	(_V+20)& (0+255),b
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;main.c: 437:     wait_lcd_done();
  1838  002C6A  EC22  F02C         	call	_wait_lcd_done	;wreg free
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;main.c: 438:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  1842  002C6E  0E97               	movlw	_V& (0+255)
  1843  002C70  0F04               	addlw	4
  1844  002C72  6EE6               	movwf	postinc1,c
  1845  002C74  0E00               	movlw	0
  1846  002C76  6EE6               	movwf	postinc1,c
  1847  002C78  0E02               	movlw	2
  1848  002C7A  6EE6               	movwf	postinc1,c
  1849  002C7C  EC91  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1850  002C80  D020               	goto	l1237
  1851  002C82                     l7889:
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;main.c: 442:    sprintf(V.buf, " LOG MODE      #");
  1855  002C82  0E3D               	movlw	STR_10& (0+255)
  1856  002C84  6EE6               	movwf	postinc1,c
  1857  002C86  0E97               	movlw	_V& (0+255)
  1858  002C88  0F04               	addlw	4
  1859  002C8A  6EE6               	movwf	postinc1,c
  1860  002C8C  0E02               	movlw	2
  1861  002C8E  6EE6               	movwf	postinc1,c
  1862  002C90  EC7B  F023         	call	_sprintf	;wreg free
  1863  002C94  D7E9               	goto	l7883
  1864  002C96                     l1236:
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;main.c: 449:    V.ui_state = UI_STATE_INIT;
  1868  002C96  6B98               	clrf	(_V+1)& (0+255),b
  1869                           
  1870                           ;main.c: 450:    break;
  1871  002C98  D014               	goto	l1237
  1872  002C9A                     l7899:
  1873  002C9A  0100               	movlb	0	; () banked
  1874  002C9C  5198               	movf	(_V+1)& (0+255),w,b
  1875  002C9E  6E46               	movwf	btemp+10,c
  1876  002CA0  6A47               	clrf	btemp+11,c
  1877                           
  1878                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1879                           ; Switch size 1, requested type "simple"
  1880                           ; Number of cases is 1, Range of values is 0 to 0
  1881                           ; switch strategies available:
  1882                           ; Name         Instructions Cycles
  1883                           ; simple_byte            4     3 (average)
  1884                           ;	Chosen strategy is simple_byte
  1885  002CA2  5047               	movf	btemp+11,w,c
  1886  002CA4  0A00               	xorlw	0	; case 0
  1887  002CA6  A4D8               	btfss	status,2,c
  1888  002CA8  D7F6               	goto	l1236
  1889                           
  1890                           ; BSR set to: 0
  1891                           ; Switch size 1, requested type "simple"
  1892                           ; Number of cases is 4, Range of values is 0 to 4
  1893                           ; switch strategies available:
  1894                           ; Name         Instructions Cycles
  1895                           ; simple_byte           13     7 (average)
  1896                           ;	Chosen strategy is simple_byte
  1897  002CAA  5046               	movf	btemp+10,w,c
  1898  002CAC  0A00               	xorlw	0	; case 0
  1899  002CAE  B4D8               	btfsc	status,2,c
  1900  002CB0  D698               	goto	l7779
  1901  002CB2  0A01               	xorlw	1	; case 1
  1902  002CB4  B4D8               	btfsc	status,2,c
  1903  002CB6  D7A3               	goto	l7875
  1904  002CB8  0A02               	xorlw	2	; case 3
  1905  002CBA  B4D8               	btfsc	status,2,c
  1906  002CBC  D7E2               	goto	l7889
  1907  002CBE  0A07               	xorlw	7	; case 4
  1908  002CC0  D7EA               	goto	l1236
  1909  002CC2                     l1237:
  1910  002CC2  82BE               	bsf	16318,1,c	;volatile
  1911                           
  1912                           ;main.c: 453:   sprintf(V.buf, " R%d T%d FR%d FS%d #", V.r_l_state, V.t_l_state, V.faile
      +                          d_receive, V.failed_send);
  1913  002CC4  0100               	movlb	0	; () banked
  1914  002CC6  31EB               	rrcf	(_V+84)& (0+255),w,b
  1915  002CC8  32E8               	rrcf	wreg,f,c
  1916  002CCA  32E8               	rrcf	wreg,f,c
  1917  002CCC  0B0F               	andlw	15
  1918  002CCE  6EE6               	movwf	postinc1,c
  1919  002CD0  0E00               	movlw	0
  1920  002CD2  6EE6               	movwf	postinc1,c
  1921  002CD4  51EC               	movf	(_V+85)& (0+255),w,b
  1922  002CD6  0B0F               	andlw	15
  1923  002CD8  6EE6               	movwf	postinc1,c
  1924  002CDA  0E00               	movlw	0
  1925  002CDC  6EE6               	movwf	postinc1,c
  1926  002CDE  519A               	movf	(_V+3)& (0+255),w,b
  1927  002CE0  6EE6               	movwf	postinc1,c
  1928  002CE2  0E00               	movlw	0
  1929  002CE4  6EE6               	movwf	postinc1,c
  1930  002CE6  5199               	movf	(_V+2)& (0+255),w,b
  1931  002CE8  6EE6               	movwf	postinc1,c
  1932  002CEA  0E00               	movlw	0
  1933  002CEC  6EE6               	movwf	postinc1,c
  1934  002CEE  0E01               	movlw	STR_11& (0+255)
  1935  002CF0  6EE6               	movwf	postinc1,c
  1936  002CF2  0E97               	movlw	_V& (0+255)
  1937  002CF4  0F04               	addlw	4
  1938  002CF6  6EE6               	movwf	postinc1,c
  1939  002CF8  0E0A               	movlw	10
  1940  002CFA  6EE6               	movwf	postinc1,c
  1941  002CFC  EC7B  F023         	call	_sprintf	;wreg free
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;main.c: 454:   V.buf[16] = 0;
  1945  002D00  6BAB               	clrf	(_V+20)& (0+255),b
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;main.c: 455:   wait_lcd_done();
  1949  002D02  EC22  F02C         	call	_wait_lcd_done	;wreg free
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;main.c: 456:   eaDogM_WriteStringAtPos(1, 0, V.buf);
  1953  002D06  0E97               	movlw	_V& (0+255)
  1954  002D08  0F04               	addlw	4
  1955  002D0A  6EE6               	movwf	postinc1,c
  1956  002D0C  0E00               	movlw	0
  1957  002D0E  6EE6               	movwf	postinc1,c
  1958  002D10  0E01               	movlw	1
  1959  002D12  6EE6               	movwf	postinc1,c
  1960  002D14  EC91  F029         	call	_eaDogM_WriteStringAtPos	;wreg free
  1961                           
  1962                           ; BSR set to: 59
  1963  002D18  92BE               	bcf	16318,1,c	;volatile
  1964  002D1A  D7BF               	goto	l7899
  1965  002D1C                     __end_of_main:
  1966                           	opt callstack 0
  1967                           
  1968 ;; *************** function _t_protocol *****************
  1969 ;; Defined at:
  1970 ;;		line 146 in file "gemsecs.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  t_link          1  [STACK] PTR enum E16163
  1973 ;;		 -> V(86), 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  rxData          1  [STACK] unsigned char 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1  [STACK] enum E16901
  1978 ;; Registers used:
  1979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1989 ;;Total ram usage:        0 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    5
  1992 ;; This function calls:
  1993 ;;		_StartTimer
  1994 ;;		_TimerDone
  1995 ;;		_UART1_Read
  1996 ;;		_UART1_Write
  1997 ;;		_UART1_is_rx_ready
  1998 ;;		_UART1_put_buffer
  1999 ;;		_secs_II_message
  2000 ;;		_secs_send
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text1
  2007  003816                     __ptext1:
  2008                           	opt callstack 0
  2009  003816                     _t_protocol:
  2010                           	opt callstack 0
  2011                           
  2012                           ; BSR set to: 59
  2013                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2014  003816  52E6               	movf	postinc1,f,c
  2015                           
  2016                           ;gemsecs.c: 146: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 147: {;gemsecs.
      +                          c: 148:  uint8_t rxData;;gemsecs.c: 149:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          150:  static response_type block;;gemsecs.c: 152:  switch (*t_link) {
  2017                           
  2018                           ;incstack = 0
  2019  003818  D107               	goto	l7741
  2020  00381A                     l1542:
  2021                           
  2022                           ;gemsecs.c: 154:   V.error = LINK_ERROR_NONE;
  2023  00381A  0100               	movlb	0	; () banked
  2024  00381C  6BE5               	clrf	(_V+78)& (0+255),b
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;gemsecs.c: 155:   retry = 3;
  2028  00381E  0E03               	movlw	3
  2029  003820  6E2E               	movwf	t_protocol@retry,c
  2030                           
  2031                           ; BSR set to: 0
  2032                           ;gemsecs.c: 156:   UART1_Write(0x05);
  2033  003822  0E05               	movlw	5
  2034  003824  6EE6               	movwf	postinc1,c
  2035  003826  ECE4  F028         	call	_UART1_Write	;wreg free
  2036                           
  2037                           ; BSR set to: 57
  2038                           ;gemsecs.c: 157:   StartTimer(TMR_T2, 2000);
  2039  00382A  0ED0               	movlw	208
  2040  00382C  6EE6               	movwf	postinc1,c
  2041  00382E  0E07               	movlw	7
  2042  003830  6EE6               	movwf	postinc1,c
  2043  003832  0E02               	movlw	2
  2044  003834  6EE6               	movwf	postinc1,c
  2045  003836  EC41  F029         	call	_StartTimer	;wreg free
  2046                           
  2047                           ;gemsecs.c: 158:   *t_link = LINK_STATE_ENQ;
  2048                           ;stkvar	_t_link @ sp[(-1)+-1]
  2049  00383A  0EFE               	movlw	-2
  2050  00383C  50E3               	movf	plusw1,w,c
  2051  00383E  6ED9               	movwf	fsr2l,c
  2052  003840  6ADA               	clrf	fsr2h,c
  2053  003842  0E01               	movlw	1
  2054  003844  D0EF               	goto	L6
  2055  003846                     l7657:
  2056                           
  2057                           ;gemsecs.c: 165:   if (TimerDone(TMR_T2)) {
  2058  003846  0E02               	movlw	2
  2059  003848  6EE6               	movwf	postinc1,c
  2060  00384A  EC8D  F02B         	call	_TimerDone	;wreg free
  2061  00384E  503C               	movf	btemp,w,c
  2062  003850  B4D8               	btfsc	status,2,c
  2063  003852  D01A               	goto	l7667
  2064                           
  2065                           ;gemsecs.c: 166:    if (!retry--) {
  2066  003854  062E               	decf	t_protocol@retry,f,c
  2067  003856  282E               	incf	t_protocol@retry,w,c
  2068  003858  A4D8               	btfss	status,2,c
  2069  00385A  D00D               	goto	l7665
  2070                           
  2071                           ;gemsecs.c: 167:     V.error = LINK_ERROR_T2;
  2072  00385C  0E02               	movlw	2
  2073  00385E  0100               	movlb	0	; () banked
  2074  003860  6FE5               	movwf	(_V+78)& (0+255),b
  2075                           
  2076                           ;gemsecs.c: 168:     V.failed_send = 1;
  2077  003862  51EB               	movf	(_V+84)& (0+255),w,b
  2078  003864  0B87               	andlw	-121
  2079  003866  0908               	iorlw	8
  2080  003868  6FEB               	movwf	(_V+84)& (0+255),b
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;gemsecs.c: 169:     *t_link = LINK_STATE_NAK;
  2084                           ;stkvar	_t_link @ sp[(-1)+-1]
  2085  00386A  0EFE               	movlw	-2
  2086  00386C  50E3               	movf	plusw1,w,c
  2087  00386E  6ED9               	movwf	fsr2l,c
  2088  003870  6ADA               	clrf	fsr2h,c
  2089  003872  0E05               	movlw	5
  2090  003874  D0D7               	goto	L6
  2091  003876                     l7665:
  2092                           
  2093                           ;gemsecs.c: 171:     StartTimer(TMR_T2, 2000);
  2094  003876  0ED0               	movlw	208
  2095  003878  6EE6               	movwf	postinc1,c
  2096  00387A  0E07               	movlw	7
  2097  00387C  6EE6               	movwf	postinc1,c
  2098  00387E  0E02               	movlw	2
  2099  003880  6EE6               	movwf	postinc1,c
  2100  003882  EC41  F029         	call	_StartTimer	;wreg free
  2101  003886  D0F1               	goto	l7743
  2102  003888                     l7667:
  2103                           
  2104                           ;gemsecs.c: 174:    if (UART1_is_rx_ready()) {
  2105  003888  ECD5  F02C         	call	_UART1_is_rx_ready	;wreg free
  2106  00388C  503C               	movf	btemp,w,c
  2107  00388E  B4D8               	btfsc	status,2,c
  2108  003890  D0EC               	goto	l7743
  2109                           
  2110                           ;gemsecs.c: 175:     rxData = UART1_Read();
  2111  003892  EC03  F029         	call	_UART1_Read	;wreg free
  2112                           
  2113                           ;stkvar	_rxData @ sp[(-1)+0]
  2114  003896  0EFF               	movlw	-1
  2115  003898  0060  F0F3  FFE3   	movff	btemp,plusw1
  2116                           
  2117                           ; BSR set to: 57
  2118                           ;gemsecs.c: 176:     if (rxData == 0x04) {
  2119                           ;stkvar	_rxData @ sp[(-1)+0]
  2120  00389E  0EFF               	movlw	-1
  2121  0038A0  006F FF8C  F03C    	movff	plusw1,btemp
  2122  0038A6  0E04               	movlw	4
  2123  0038A8  183C               	xorwf	btemp,w,c
  2124  0038AA  A4D8               	btfss	status,2,c
  2125  0038AC  D00E               	goto	l7677
  2126                           
  2127                           ; BSR set to: 57
  2128                           ;gemsecs.c: 177:      StartTimer(TMR_T3, 5000);
  2129  0038AE  0E88               	movlw	136
  2130  0038B0  6EE6               	movwf	postinc1,c
  2131  0038B2  0E13               	movlw	19
  2132  0038B4  6EE6               	movwf	postinc1,c
  2133  0038B6  0E03               	movlw	3
  2134  0038B8  6EE6               	movwf	postinc1,c
  2135  0038BA  EC41  F029         	call	_StartTimer	;wreg free
  2136                           
  2137                           ;gemsecs.c: 178:      *t_link = LINK_STATE_EOT;
  2138                           ;stkvar	_t_link @ sp[(-1)+-1]
  2139  0038BE  0EFE               	movlw	-2
  2140  0038C0  50E3               	movf	plusw1,w,c
  2141  0038C2  6ED9               	movwf	fsr2l,c
  2142  0038C4  6ADA               	clrf	fsr2h,c
  2143  0038C6  0E02               	movlw	2
  2144  0038C8  6EDF               	movwf	indf2,c
  2145  0038CA                     l7677:
  2146                           
  2147                           ;gemsecs.c: 180:     if (rxData == 0x05) {
  2148                           ;stkvar	_rxData @ sp[(-1)+0]
  2149  0038CA  0EFF               	movlw	-1
  2150  0038CC  006F FF8C  F03C    	movff	plusw1,btemp
  2151  0038D2  0E05               	movlw	5
  2152  0038D4  183C               	xorwf	btemp,w,c
  2153  0038D6  A4D8               	btfss	status,2,c
  2154  0038D8  D0C8               	goto	l7743
  2155                           
  2156                           ;gemsecs.c: 181:      UART1_put_buffer(0x04);
  2157  0038DA  0E04               	movlw	4
  2158  0038DC  6EE6               	movwf	postinc1,c
  2159  0038DE  ECD3  F029         	call	_UART1_put_buffer	;wreg free
  2160  0038E2                     l7681:
  2161                           
  2162                           ;gemsecs.c: 182:      *t_link = LINK_STATE_DONE;
  2163                           ;stkvar	_t_link @ sp[(-1)+-1]
  2164  0038E2  0EFE               	movlw	-2
  2165  0038E4  50E3               	movf	plusw1,w,c
  2166  0038E6  6ED9               	movwf	fsr2l,c
  2167  0038E8  6ADA               	clrf	fsr2h,c
  2168  0038EA  0E04               	movlw	4
  2169  0038EC  D09B               	goto	L6
  2170  0038EE                     l7683:
  2171                           
  2172                           ;gemsecs.c: 188:   if (!requeue)
  2173  0038EE  502D               	movf	t_protocol@requeue,w,c
  2174  0038F0  A4D8               	btfss	status,2,c
  2175  0038F2  D010               	goto	l7687
  2176                           
  2177                           ;gemsecs.c: 189:    block = secs_II_message(V.stream, V.function);
  2178  0038F4  0100               	movlb	0	; () banked
  2179  0038F6  51E4               	movf	(_V+77)& (0+255),w,b
  2180  0038F8  6EE6               	movwf	postinc1,c
  2181  0038FA  51E3               	movf	(_V+76)& (0+255),w,b
  2182  0038FC  6EE6               	movwf	postinc1,c
  2183  0038FE  EC3E  F01D         	call	_secs_II_message	;wreg free
  2184  003902  EE20  F085         	lfsr	2,t_protocol@block
  2185  003906  0E06               	movlw	6
  2186  003908                     u4381:
  2187  003908  52E5               	movf	postdec1,f,c
  2188  00390A  006F FF9F FFDB     	movff	indf1,plusw2
  2189  003910  06E8               	decf	wreg,f,c
  2190  003912  E2FA               	bc	u4381
  2191  003914                     l7687:
  2192                           
  2193                           ;gemsecs.c: 191:   if (V.abort == LINK_ERROR_ABORT) {
  2194  003914  0E07               	movlw	7
  2195  003916  0100               	movlb	0	; () banked
  2196  003918  19E6               	xorwf	(_V+79)& (0+255),w,b
  2197  00391A  A4D8               	btfss	status,2,c
  2198  00391C  D017               	goto	l7695
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;gemsecs.c: 192:    secs_send((uint8_t*) block.header, block.length, 0);
  2202  00391E  0E00               	movlw	0
  2203  003920  6EE6               	movwf	postinc1,c
  2204  003922  5187               	movf	(t_protocol@block+2)& (0+255),w,b
  2205  003924  6EE6               	movwf	postinc1,c
  2206  003926  0060  F217  FFE6   	movff	t_protocol@block,postinc1
  2207  00392C  0060  F21B  FFE6   	movff	t_protocol@block+1,postinc1
  2208  003932  EC7F  F01F         	call	_secs_send	;wreg free
  2209                           
  2210                           ;gemsecs.c: 193:    V.failed_send = 2;
  2211  003936  0100               	movlb	0	; () banked
  2212  003938  51EB               	movf	(_V+84)& (0+255),w,b
  2213  00393A  0B87               	andlw	-121
  2214  00393C  0910               	iorlw	16
  2215  00393E  6FEB               	movwf	(_V+84)& (0+255),b
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;gemsecs.c: 194:    *t_link = LINK_STATE_ERROR;
  2219                           ;stkvar	_t_link @ sp[(-1)+-1]
  2220  003940  0EFE               	movlw	-2
  2221  003942  50E3               	movf	plusw1,w,c
  2222  003944  6ED9               	movwf	fsr2l,c
  2223  003946  6ADA               	clrf	fsr2h,c
  2224  003948  0E06               	movlw	6
  2225  00394A  D06C               	goto	L6
  2226  00394C                     l7695:
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;gemsecs.c: 196:    if (!requeue) {
  2230  00394C  502D               	movf	t_protocol@requeue,w,c
  2231  00394E  A4D8               	btfss	status,2,c
  2232  003950  D012               	goto	l1556
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;gemsecs.c: 197:     secs_send((uint8_t*) block.header, block.length, 0);
  2236  003952  0E00               	movlw	0
  2237  003954  6EE6               	movwf	postinc1,c
  2238  003956  5187               	movf	(t_protocol@block+2)& (0+255),w,b
  2239  003958  6EE6               	movwf	postinc1,c
  2240  00395A  0060  F217  FFE6   	movff	t_protocol@block,postinc1
  2241  003960  0060  F21B  FFE6   	movff	t_protocol@block+1,postinc1
  2242  003966  EC7F  F01F         	call	_secs_send	;wreg free
  2243                           
  2244                           ;gemsecs.c: 198:     if (V.queue)
  2245  00396A  0100               	movlb	0	; () banked
  2246  00396C  A9EC               	btfss	(_V+85)& (0+255),4,b
  2247  00396E  D011               	goto	l7705
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;gemsecs.c: 199:      requeue = 1;
  2251  003970  0E01               	movlw	1
  2252  003972  6E2D               	movwf	t_protocol@requeue,c
  2253  003974  D00E               	goto	l7705
  2254  003976                     l1556:
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;gemsecs.c: 201:     requeue = 0;
  2258  003976  6A2D               	clrf	t_protocol@requeue,c
  2259                           
  2260                           ;gemsecs.c: 202:     V.queue = 0;
  2261  003978  99EC               	bcf	(_V+85)& (0+255),4,b
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;gemsecs.c: 203:     secs_send((uint8_t*) block.reply, block.reply_length, 0);
  2265  00397A  0E00               	movlw	0
  2266  00397C  6EE6               	movwf	postinc1,c
  2267  00397E  518A               	movf	(t_protocol@block+5)& (0+255),w,b
  2268  003980  6EE6               	movwf	postinc1,c
  2269  003982  0060  F223  FFE6   	movff	t_protocol@block+3,postinc1
  2270  003988  0060  F227  FFE6   	movff	t_protocol@block+4,postinc1
  2271  00398E  EC7F  F01F         	call	_secs_send	;wreg free
  2272  003992                     l7705:
  2273                           
  2274                           ;gemsecs.c: 205:    if (V.error == LINK_ERROR_NONE) {
  2275  003992  0100               	movlb	0	; () banked
  2276  003994  51E5               	movf	(_V+78)& (0+255),w,b
  2277  003996  A4D8               	btfss	status,2,c
  2278  003998  D006               	goto	l7709
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;gemsecs.c: 206:     *t_link = LINK_STATE_ACK;
  2282                           ;stkvar	_t_link @ sp[(-1)+-1]
  2283  00399A  0EFE               	movlw	-2
  2284  00399C  50E3               	movf	plusw1,w,c
  2285  00399E  6ED9               	movwf	fsr2l,c
  2286  0039A0  6ADA               	clrf	fsr2h,c
  2287  0039A2  0E03               	movlw	3
  2288  0039A4  D03F               	goto	L6
  2289  0039A6                     l7709:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;gemsecs.c: 208:     V.failed_send = 3;
  2293  0039A6  51EB               	movf	(_V+84)& (0+255),w,b
  2294  0039A8  0B87               	andlw	-121
  2295  0039AA  0918               	iorlw	24
  2296  0039AC  D7C8               	goto	L7
  2297  0039AE                     l7713:
  2298                           
  2299                           ;gemsecs.c: 218:   if (TimerDone(TMR_T3)) {
  2300  0039AE  0E03               	movlw	3
  2301  0039B0  6EE6               	movwf	postinc1,c
  2302  0039B2  EC8D  F02B         	call	_TimerDone	;wreg free
  2303  0039B6  503C               	movf	btemp,w,c
  2304  0039B8  B4D8               	btfsc	status,2,c
  2305  0039BA  D007               	goto	l7719
  2306                           
  2307                           ;gemsecs.c: 219:    V.error = LINK_ERROR_T3;
  2308  0039BC  0E03               	movlw	3
  2309  0039BE  0100               	movlb	0	; () banked
  2310  0039C0  6FE5               	movwf	(_V+78)& (0+255),b
  2311                           
  2312                           ;gemsecs.c: 220:    V.failed_send = 4;
  2313  0039C2  51EB               	movf	(_V+84)& (0+255),w,b
  2314  0039C4  0B87               	andlw	-121
  2315  0039C6  0920               	iorlw	32
  2316  0039C8  D74F               	goto	L8
  2317  0039CA                     l7719:
  2318                           
  2319                           ;gemsecs.c: 223:    if (UART1_is_rx_ready()) {
  2320  0039CA  ECD5  F02C         	call	_UART1_is_rx_ready	;wreg free
  2321  0039CE  503C               	movf	btemp,w,c
  2322  0039D0  B4D8               	btfsc	status,2,c
  2323  0039D2  D04B               	goto	l7743
  2324                           
  2325                           ;gemsecs.c: 224:     rxData = UART1_Read();
  2326  0039D4  EC03  F029         	call	_UART1_Read	;wreg free
  2327                           
  2328                           ;stkvar	_rxData @ sp[(-1)+0]
  2329  0039D8  0EFF               	movlw	-1
  2330  0039DA  0060  F0F3  FFE3   	movff	btemp,plusw1
  2331                           
  2332                           ; BSR set to: 57
  2333                           ;gemsecs.c: 225:     if (rxData == 0x06) {
  2334                           ;stkvar	_rxData @ sp[(-1)+0]
  2335  0039E0  0EFF               	movlw	-1
  2336  0039E2  006F FF8C  F03C    	movff	plusw1,btemp
  2337  0039E8  0E06               	movlw	6
  2338  0039EA  183C               	xorwf	btemp,w,c
  2339  0039EC  A4D8               	btfss	status,2,c
  2340  0039EE  D03D               	goto	l7743
  2341                           
  2342                           ; BSR set to: 57
  2343                           ;gemsecs.c: 226:      V.failed_send = 0;
  2344  0039F0  0E87               	movlw	-121
  2345  0039F2  0100               	movlb	0	; () banked
  2346  0039F4  17EB               	andwf	(_V+84)& (0+255),f,b
  2347  0039F6  D775               	goto	l7681
  2348  0039F8                     l7729:
  2349                           
  2350                           ;gemsecs.c: 233:   *t_link = LINK_STATE_ERROR;
  2351                           ;stkvar	_t_link @ sp[(-1)+-1]
  2352  0039F8  0EFE               	movlw	-2
  2353  0039FA  50E3               	movf	plusw1,w,c
  2354  0039FC  6ED9               	movwf	fsr2l,c
  2355  0039FE  6ADA               	clrf	fsr2h,c
  2356  003A00  0E06               	movlw	6
  2357  003A02  6EDF               	movwf	indf2,c
  2358                           
  2359                           ;gemsecs.c: 234:   while ((uart1RxCount)) {
  2360  003A04  D002               	goto	l7733
  2361  003A06                     l7731:
  2362                           
  2363                           ;gemsecs.c: 235:    UART1_Read();
  2364  003A06  EC03  F029         	call	_UART1_Read	;wreg free
  2365  003A0A                     l7733:
  2366                           
  2367                           ;gemsecs.c: 234:   while ((uart1RxCount)) {
  2368  003A0A  5036               	movf	_uart1RxCount,w,c	;volatile
  2369  003A0C  B4D8               	btfsc	status,2,c
  2370  003A0E  D02D               	goto	l7743
  2371  003A10  D7FA               	goto	l7731
  2372  003A12                     l7735:
  2373                           
  2374                           ;gemsecs.c: 241:   V.failed_send = 0;
  2375  003A12  0E87               	movlw	-121
  2376  003A14  0100               	movlb	0	; () banked
  2377  003A16  17EB               	andwf	(_V+84)& (0+255),f,b
  2378                           
  2379                           ;gemsecs.c: 242:   break;
  2380  003A18  D028               	goto	l7743
  2381  003A1A                     l7737:
  2382                           
  2383                           ;gemsecs.c: 244:   *t_link = LINK_STATE_IDLE;
  2384                           ;stkvar	_t_link @ sp[(-1)+-1]
  2385  003A1A  0EFE               	movlw	-2
  2386  003A1C  50E3               	movf	plusw1,w,c
  2387  003A1E  6ED9               	movwf	fsr2l,c
  2388  003A20  6ADA               	clrf	fsr2h,c
  2389  003A22  0E00               	movlw	0
  2390  003A24                     L6:
  2391  003A24  6EDF               	movwf	indf2,c
  2392                           
  2393                           ;gemsecs.c: 245:   break;
  2394  003A26  D021               	goto	l7743
  2395  003A28                     l7741:
  2396                           
  2397                           ;stkvar	_t_link @ sp[(-1)+-1]
  2398  003A28  0EFE               	movlw	-2
  2399  003A2A  50E3               	movf	plusw1,w,c
  2400  003A2C  6ED9               	movwf	fsr2l,c
  2401  003A2E  6ADA               	clrf	fsr2h,c
  2402  003A30  50DF               	movf	indf2,w,c
  2403  003A32  6E46               	movwf	btemp+10,c
  2404  003A34  6A47               	clrf	btemp+11,c
  2405                           
  2406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2407                           ; Switch size 1, requested type "simple"
  2408                           ; Number of cases is 1, Range of values is 0 to 0
  2409                           ; switch strategies available:
  2410                           ; Name         Instructions Cycles
  2411                           ; simple_byte            4     3 (average)
  2412                           ;	Chosen strategy is simple_byte
  2413  003A36  5047               	movf	btemp+11,w,c
  2414  003A38  0A00               	xorlw	0	; case 0
  2415  003A3A  A4D8               	btfss	status,2,c
  2416  003A3C  D7EE               	goto	l7737
  2417                           
  2418                           ; Switch size 1, requested type "simple"
  2419                           ; Number of cases is 7, Range of values is 0 to 6
  2420                           ; switch strategies available:
  2421                           ; Name         Instructions Cycles
  2422                           ; simple_byte           22    12 (average)
  2423                           ;	Chosen strategy is simple_byte
  2424  003A3E  5046               	movf	btemp+10,w,c
  2425  003A40  0A00               	xorlw	0	; case 0
  2426  003A42  B4D8               	btfsc	status,2,c
  2427  003A44  D6EA               	goto	l1542
  2428  003A46  0A01               	xorlw	1	; case 1
  2429  003A48  B4D8               	btfsc	status,2,c
  2430  003A4A  D6FD               	goto	l7657
  2431  003A4C  0A03               	xorlw	3	; case 2
  2432  003A4E  B4D8               	btfsc	status,2,c
  2433  003A50  D74E               	goto	l7683
  2434  003A52  0A01               	xorlw	1	; case 3
  2435  003A54  B4D8               	btfsc	status,2,c
  2436  003A56  D7AB               	goto	l7713
  2437  003A58  0A07               	xorlw	7	; case 4
  2438  003A5A  B4D8               	btfsc	status,2,c
  2439  003A5C  D7DA               	goto	l7735
  2440  003A5E  0A01               	xorlw	1	; case 5
  2441  003A60  B4D8               	btfsc	status,2,c
  2442  003A62  D7CA               	goto	l7729
  2443  003A64  0A03               	xorlw	3	; case 6
  2444  003A66  A4D8               	btfss	status,2,c
  2445  003A68  D7D8               	goto	l7737
  2446  003A6A                     l7743:
  2447                           
  2448                           ;gemsecs.c: 248:  return *t_link;
  2449                           ;stkvar	_t_link @ sp[(-1)+-1]
  2450  003A6A  0EFE               	movlw	-2
  2451  003A6C  50E3               	movf	plusw1,w,c
  2452  003A6E  6ED9               	movwf	fsr2l,c
  2453  003A70  6ADA               	clrf	fsr2h,c
  2454  003A72  50DF               	movf	indf2,w,c
  2455  003A74  6E3C               	movwf	btemp,c
  2456                           
  2457                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2458  003A76  52E5               	movf	postdec1,f,c
  2459  003A78  52E5               	movf	postdec1,f,c
  2460  003A7A  0012               	return		;funcret
  2461  003A7C                     __end_of_t_protocol:
  2462                           	opt callstack 0
  2463                           
  2464 ;; *************** function _secs_send *****************
  2465 ;; Defined at:
  2466 ;;		line 252 in file "gemsecs.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  byte_block      2  [STACK] PTR unsigned char 
  2469 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  2470 ;;		 -> H13(16), H12(30), H10(65), 
  2471 ;;  length          1  [STACK] unsigned char 
  2472 ;;  fake            1  [STACK] _Bool 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  k               2  [STACK] PTR unsigned char 
  2475 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  2476 ;;		 -> H13(16), H12(30), H10(65), 
  2477 ;;  checksum        2  [STACK] unsigned short 
  2478 ;;  i               1  [STACK] unsigned char 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1  [STACK] _Bool 
  2481 ;; Registers used:
  2482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  2483 ;; Tracked objects:
  2484 ;;		On entry : 3F/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2492 ;;Total ram usage:        0 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    4
  2495 ;; This function calls:
  2496 ;;		_UART1_Write
  2497 ;;		_UART1_is_tx_ready
  2498 ;;		_UART1_put_buffer
  2499 ;;		_block_checksum
  2500 ;; This function is called by:
  2501 ;;		_t_protocol
  2502 ;; This function uses a reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text2
  2506  003EFE                     __ptext2:
  2507                           	opt callstack 0
  2508  003EFE                     _secs_send:
  2509                           	opt callstack 0
  2510                           
  2511                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2512  003EFE  0E05               	movlw	5
  2513  003F00  26E1               	addwf	fsr1l,f,c
  2514  003F02  0E00               	movlw	0
  2515  003F04  22E2               	addwfc	fsr1h,f,c
  2516                           
  2517                           ;gemsecs.c: 252: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake);gemsec
      +                          s.c: 253: {;gemsecs.c: 254:  uint8_t i, *k;;gemsecs.c: 255:  uint16_t checksum;;gemsecs.
      +                          c: 257:  k = (uint8_t *) byte_block;
  2518                           ;stkvar	_byte_block @ sp[(-5)+-2]
  2519                           
  2520                           ;incstack = 0
  2521  003F06  0EF9               	movlw	-7
  2522  003F08  006F FF8C  F046    	movff	plusw1,btemp+10
  2523  003F0E  0EFA               	movlw	-6
  2524  003F10  006F FF8C  F047    	movff	plusw1,btemp+11
  2525                           
  2526                           ;stkvar	_k @ sp[(-5)+0]
  2527  003F16  0EFC               	movlw	-4
  2528  003F18  0060  F11F  FFE3   	movff	btemp+11,plusw1
  2529  003F1E  0EFB               	movlw	-5
  2530  003F20  0060  F11B  FFE3   	movff	btemp+10,plusw1
  2531                           
  2532                           ;gemsecs.c: 259:  ++V.ticks;
  2533  003F26  0E01               	movlw	1
  2534  003F28  0100               	movlb	0	; () banked
  2535  003F2A  27DB               	addwf	(_V+68)& (0+255),f,b
  2536  003F2C  0E00               	movlw	0
  2537  003F2E  23DC               	addwfc	(_V+69)& (0+255),f,b
  2538  003F30  23DD               	addwfc	(_V+70)& (0+255),f,b
  2539  003F32  23DE               	addwfc	(_V+71)& (0+255),f,b
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;gemsecs.c: 260:  V.error = LINK_ERROR_NONE;
  2543  003F34  6BE5               	clrf	(_V+78)& (0+255),b
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;gemsecs.c: 261:  if ((length - 3) != k[length - 1]) {
  2547                           ;stkvar	_length @ sp[(-5)+-3]
  2548  003F36  0EF8               	movlw	-8
  2549  003F38  50E3               	movf	plusw1,w,c
  2550  003F3A  6E46               	movwf	btemp+10,c
  2551  003F3C  6A47               	clrf	btemp+11,c
  2552                           
  2553                           ;stkvar	_k @ sp[(-5)+0]
  2554  003F3E  0EFB               	movlw	-5
  2555  003F40  50E3               	movf	plusw1,w,c
  2556  003F42  2646               	addwf	btemp+10,f,c
  2557  003F44  0EFC               	movlw	-4
  2558  003F46  50E3               	movf	plusw1,w,c
  2559  003F48  2247               	addwfc	btemp+11,f,c
  2560  003F4A  0EFF               	movlw	255
  2561  003F4C  2446               	addwf	btemp+10,w,c
  2562  003F4E  6ED9               	movwf	fsr2l,c
  2563  003F50  0EFF               	movlw	255
  2564  003F52  2047               	addwfc	btemp+11,w,c
  2565  003F54  6EDA               	movwf	fsr2h,c
  2566  003F56  50DF               	movf	indf2,w,c
  2567  003F58  6E46               	movwf	btemp+10,c
  2568  003F5A  6A47               	clrf	btemp+11,c
  2569  003F5C  0EFD               	movlw	253
  2570  003F5E  6E44               	movwf	btemp+8,c
  2571  003F60  0EFF               	movlw	255
  2572  003F62  6E45               	movwf	btemp+9,c
  2573                           
  2574                           ;stkvar	_length @ sp[(-5)+-3]
  2575  003F64  0EF8               	movlw	-8
  2576  003F66  50E3               	movf	plusw1,w,c
  2577  003F68  6E42               	movwf	btemp+6,c
  2578  003F6A  6A43               	clrf	btemp+7,c
  2579  003F6C  5044               	movf	btemp+8,w,c
  2580  003F6E  2642               	addwf	btemp+6,f,c
  2581  003F70  5045               	movf	btemp+9,w,c
  2582  003F72  2243               	addwfc	btemp+7,f,c
  2583  003F74  5046               	movf	btemp+10,w,c
  2584  003F76  1842               	xorwf	btemp+6,w,c
  2585  003F78  E104               	bnz	u4070
  2586  003F7A  5047               	movf	btemp+11,w,c
  2587  003F7C  1843               	xorwf	btemp+7,w,c
  2588  003F7E  B4D8               	btfsc	status,2,c
  2589  003F80  D003               	goto	l7365
  2590  003F82                     u4070:
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;gemsecs.c: 262:   V.error = LINK_ERROR_SEND;
  2594  003F82  0E08               	movlw	8
  2595  003F84  6FE5               	movwf	(_V+78)& (0+255),b
  2596  003F86  D098               	goto	l1577
  2597  003F88                     l7365:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;gemsecs.c: 271:  checksum = block_checksum(&k[2], length - 3);
  2601  003F88  0EFD               	movlw	253
  2602  003F8A  6E46               	movwf	btemp+10,c
  2603  003F8C  0EFF               	movlw	255
  2604  003F8E  6E47               	movwf	btemp+11,c
  2605                           
  2606                           ;stkvar	_length @ sp[(-5)+-3]
  2607  003F90  0EF8               	movlw	-8
  2608  003F92  50E3               	movf	plusw1,w,c
  2609  003F94  6E44               	movwf	btemp+8,c
  2610  003F96  6A45               	clrf	btemp+9,c
  2611  003F98  5046               	movf	btemp+10,w,c
  2612  003F9A  2644               	addwf	btemp+8,f,c
  2613  003F9C  5047               	movf	btemp+11,w,c
  2614  003F9E  2245               	addwfc	btemp+9,f,c
  2615  003FA0  0060  F113  FFE6   	movff	btemp+8,postinc1
  2616  003FA6  0060  F117  FFE6   	movff	btemp+9,postinc1
  2617                           
  2618                           ;stkvar	_k @ sp[(-7)+0]
  2619  003FAC  0EF9               	movlw	-7
  2620  003FAE  50E3               	movf	plusw1,w,c
  2621  003FB0  0F02               	addlw	2
  2622  003FB2  6E46               	movwf	btemp+10,c
  2623  003FB4  0EFA               	movlw	-6
  2624  003FB6  006F FF8C  F047    	movff	plusw1,btemp+11
  2625  003FBC  0E00               	movlw	0
  2626  003FBE  2247               	addwfc	btemp+11,f,c
  2627  003FC0  0060  F11B  FFE6   	movff	btemp+10,postinc1
  2628  003FC6  0060  F11F  FFE6   	movff	btemp+11,postinc1
  2629  003FCC  ECAE  F022         	call	_block_checksum	;wreg free
  2630                           
  2631                           ;stkvar	_checksum @ sp[(-5)+2]
  2632  003FD0  0EFD               	movlw	-3
  2633  003FD2  0060  F0F3  FFE3   	movff	btemp,plusw1
  2634  003FD8  0EFE               	movlw	-2
  2635  003FDA  0060  F0F7  FFE3   	movff	btemp+1,plusw1
  2636                           
  2637                           ;gemsecs.c: 272:  k[0] = checksum & 0xff;
  2638                           ;stkvar	_checksum @ sp[(-5)+2]
  2639                           ;stkvar	_k @ sp[(-5)+0]
  2640  003FE0  0EFB               	movlw	-5
  2641  003FE2  006F FF8F FFD9     	movff	plusw1,fsr2l
  2642  003FE8  0EFC               	movlw	-4
  2643  003FEA  006F FF8F FFDA     	movff	plusw1,fsr2h
  2644  003FF0  0EFD               	movlw	-3
  2645  003FF2  006F FF8F FFDF     	movff	plusw1,indf2
  2646                           
  2647                           ;gemsecs.c: 273:  k[1] = (checksum >> 8)&0xff;
  2648                           ;stkvar	_checksum @ sp[(-5)+2]
  2649  003FF8  0EFE               	movlw	254
  2650  003FFA  24E1               	addwf	fsr1l,w,c
  2651  003FFC  6ED9               	movwf	fsr2l,c
  2652  003FFE  0EFF               	movlw	255
  2653  004000  20E2               	addwfc	fsr1h,w,c
  2654  004002  6EDA               	movwf	fsr2h,c
  2655                           
  2656                           ;stkvar	_k @ sp[(-5)+0]
  2657  004004  0EFB               	movlw	-5
  2658  004006  006F FF8C  F046    	movff	plusw1,btemp+10
  2659  00400C  0EFC               	movlw	-4
  2660  00400E  006F FF8C  F047    	movff	plusw1,btemp+11
  2661  004014  0E01               	movlw	1
  2662  004016  2446               	addwf	btemp+10,w,c
  2663  004018  6EE9               	movwf	fsr0l,c
  2664  00401A  0E00               	movlw	0
  2665  00401C  2047               	addwfc	btemp+11,w,c
  2666  00401E  6EEA               	movwf	fsr0h,c
  2667  004020  006F FF7F FFEF     	movff	indf2,indf0
  2668                           
  2669                           ;gemsecs.c: 274:  V.t_checksum = checksum;
  2670                           ;stkvar	_checksum @ sp[(-5)+2]
  2671  004026  0EFD               	movlw	-3
  2672  004028  006F FF8C  F0E9    	movff	plusw1,_V+82
  2673  00402E  0EFE               	movlw	-2
  2674  004030  006F FF8C  F0EA    	movff	plusw1,_V+83
  2675  004036                     l7373:
  2676  004036  ECD1  F02C         	call	_UART1_is_tx_ready	;wreg free
  2677  00403A  0E3F               	movlw	63
  2678  00403C  643C               	cpfsgt	btemp,c
  2679  00403E  D7FB               	goto	l7373
  2680                           
  2681                           ;gemsecs.c: 277:  for (i = length; i > 0; i--) {
  2682                           ;stkvar	_length @ sp[(-5)+-3]
  2683                           ;stkvar	_i @ sp[(-5)+4]
  2684  004040  0EF8               	movlw	-8
  2685  004042  006F FF8C  F03C    	movff	plusw1,btemp
  2686  004048  0EFF               	movlw	-1
  2687  00404A  0060  F0F3  FFE3   	movff	btemp,plusw1
  2688  004050                     l7377:
  2689                           
  2690                           ;stkvar	_i @ sp[(-5)+4]
  2691  004050  0EFF               	movlw	-1
  2692  004052  50E3               	movf	plusw1,w,c
  2693  004054  B4D8               	btfsc	status,2,c
  2694  004056  D030               	goto	l1577
  2695                           
  2696                           ;gemsecs.c: 278:   if (fake) {
  2697                           ;stkvar	_fake @ sp[(-5)+-4]
  2698  004058  0EF7               	movlw	-9
  2699  00405A  50E3               	movf	plusw1,w,c
  2700  00405C  B4D8               	btfsc	status,2,c
  2701  00405E  D015               	goto	l7385
  2702                           
  2703                           ;gemsecs.c: 279:    UART1_put_buffer(k[i - 1]);
  2704                           ;stkvar	_i @ sp[(-5)+4]
  2705  004060  0EFF               	movlw	-1
  2706  004062  50E3               	movf	plusw1,w,c
  2707  004064  6E46               	movwf	btemp+10,c
  2708  004066  6A47               	clrf	btemp+11,c
  2709                           
  2710                           ;stkvar	_k @ sp[(-5)+0]
  2711  004068  0EFB               	movlw	-5
  2712  00406A  50E3               	movf	plusw1,w,c
  2713  00406C  2646               	addwf	btemp+10,f,c
  2714  00406E  0EFC               	movlw	-4
  2715  004070  50E3               	movf	plusw1,w,c
  2716  004072  2247               	addwfc	btemp+11,f,c
  2717  004074  0EFF               	movlw	255
  2718  004076  2446               	addwf	btemp+10,w,c
  2719  004078  6ED9               	movwf	fsr2l,c
  2720  00407A  0EFF               	movlw	255
  2721  00407C  2047               	addwfc	btemp+11,w,c
  2722  00407E  6EDA               	movwf	fsr2h,c
  2723  004080  50DF               	movf	indf2,w,c
  2724  004082  6EE6               	movwf	postinc1,c
  2725  004084  ECD3  F029         	call	_UART1_put_buffer	;wreg free
  2726                           
  2727                           ;gemsecs.c: 280:   } else {
  2728  004088  D014               	goto	l7387
  2729  00408A                     l7385:
  2730                           
  2731                           ;gemsecs.c: 281:    UART1_Write(k[i - 1]);
  2732                           ;stkvar	_i @ sp[(-5)+4]
  2733  00408A  0EFF               	movlw	-1
  2734  00408C  50E3               	movf	plusw1,w,c
  2735  00408E  6E46               	movwf	btemp+10,c
  2736  004090  6A47               	clrf	btemp+11,c
  2737                           
  2738                           ;stkvar	_k @ sp[(-5)+0]
  2739  004092  0EFB               	movlw	-5
  2740  004094  50E3               	movf	plusw1,w,c
  2741  004096  2646               	addwf	btemp+10,f,c
  2742  004098  0EFC               	movlw	-4
  2743  00409A  50E3               	movf	plusw1,w,c
  2744  00409C  2247               	addwfc	btemp+11,f,c
  2745  00409E  0EFF               	movlw	255
  2746  0040A0  2446               	addwf	btemp+10,w,c
  2747  0040A2  6ED9               	movwf	fsr2l,c
  2748  0040A4  0EFF               	movlw	255
  2749  0040A6  2047               	addwfc	btemp+11,w,c
  2750  0040A8  6EDA               	movwf	fsr2h,c
  2751  0040AA  50DF               	movf	indf2,w,c
  2752  0040AC  6EE6               	movwf	postinc1,c
  2753  0040AE  ECE4  F028         	call	_UART1_Write	;wreg free
  2754  0040B2                     l7387:
  2755                           
  2756                           ; BSR set to: 57
  2757                           ;gemsecs.c: 283:  }
  2758                           ;stkvar	_i @ sp[(-5)+4]
  2759  0040B2  0EFF               	movlw	-1
  2760  0040B4  06E3               	decf	plusw1,f,c
  2761  0040B6  D7CC               	goto	l7377
  2762  0040B8                     l1577:
  2763                           
  2764                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  2765  0040B8  0EF7               	movlw	247
  2766  0040BA  26E1               	addwf	fsr1l,f,c
  2767  0040BC  0EFF               	movlw	255
  2768  0040BE  22E2               	addwfc	fsr1h,f,c
  2769  0040C0  0012               	return		;funcret
  2770  0040C2                     __end_of_secs_send:
  2771                           	opt callstack 0
  2772                           
  2773 ;; *************** function _block_checksum *****************
  2774 ;; Defined at:
  2775 ;;		line 18 in file "gemsecs.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  byte_block      2  [STACK] PTR unsigned char 
  2778 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  2779 ;;		 -> H13(16), H12(30), H10(65), 
  2780 ;;  byte_count      2  [STACK] unsigned short 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  i               2  [STACK] unsigned short 
  2783 ;;  sum             2  [STACK] unsigned short 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  2  [STACK] unsigned short 
  2786 ;; Registers used:
  2787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  2788 ;; Tracked objects:
  2789 ;;		On entry : 3F/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2797 ;;Total ram usage:        0 bytes
  2798 ;; Hardware stack levels used:    1
  2799 ;; Hardware stack levels required when called:    3
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_secs_send
  2804 ;; This function uses a reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text3
  2808  00455C                     __ptext3:
  2809                           	opt callstack 0
  2810  00455C                     _block_checksum:
  2811                           	opt callstack 0
  2812                           
  2813                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2814  00455C  52E6               	movf	postinc1,f,c
  2815  00455E  52E6               	movf	postinc1,f,c
  2816  004560  52E6               	movf	postinc1,f,c
  2817  004562  52E6               	movf	postinc1,f,c
  2818                           
  2819                           ;gemsecs.c: 18: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 19: {;gemsecs.c: 20:  uint16_t sum = 0, i;
  2820                           ;stkvar	_sum @ sp[(-4)+2]
  2821                           
  2822                           ;incstack = 0
  2823  004564  0EFE               	movlw	-2
  2824  004566  6AE3               	clrf	plusw1,c
  2825  004568  0EFF               	movlw	-1
  2826  00456A  6AE3               	clrf	plusw1,c
  2827                           
  2828                           ;gemsecs.c: 22:  for (i = 0; i < byte_count; i++) {
  2829                           ;stkvar	_i @ sp[(-4)+0]
  2830  00456C  0EFC               	movlw	-4
  2831  00456E  6AE3               	clrf	plusw1,c
  2832  004570  0EFD               	movlw	-3
  2833  004572  6AE3               	clrf	plusw1,c
  2834  004574  D039               	goto	l6985
  2835  004576                     l6981:
  2836                           
  2837                           ;gemsecs.c: 23:   sum += byte_block[i];
  2838                           ;stkvar	_i @ sp[(-4)+0]
  2839  004576  0EFC               	movlw	-4
  2840  004578  006F FF8C  F046    	movff	plusw1,btemp+10
  2841  00457E  0EFD               	movlw	-3
  2842  004580  006F FF8C  F047    	movff	plusw1,btemp+11
  2843                           
  2844                           ;stkvar	_byte_block @ sp[(-4)+-2]
  2845  004586  0EFA               	movlw	-6
  2846  004588  006F FF8C  F044    	movff	plusw1,btemp+8
  2847  00458E  0EFB               	movlw	-5
  2848  004590  006F FF8C  F045    	movff	plusw1,btemp+9
  2849  004596  5046               	movf	btemp+10,w,c
  2850  004598  2444               	addwf	btemp+8,w,c
  2851  00459A  6ED9               	movwf	fsr2l,c
  2852  00459C  5047               	movf	btemp+11,w,c
  2853  00459E  2045               	addwfc	btemp+9,w,c
  2854  0045A0  6EDA               	movwf	fsr2h,c
  2855  0045A2  50DF               	movf	indf2,w,c
  2856  0045A4  6E47               	movwf	btemp+11,c
  2857                           
  2858                           ;stkvar	_sum @ sp[(-4)+2]
  2859  0045A6  0EFE               	movlw	-2
  2860  0045A8  50E3               	movf	plusw1,w,c
  2861  0045AA  2447               	addwf	btemp+11,w,c
  2862  0045AC  6E3C               	movwf	btemp,c
  2863  0045AE  0EFE               	movlw	-2
  2864  0045B0  0060  F0F3  FFE3   	movff	btemp,plusw1
  2865  0045B6  6A3C               	clrf	btemp,c
  2866  0045B8  0EFF               	movlw	-1
  2867  0045BA  50E3               	movf	plusw1,w,c
  2868  0045BC  223C               	addwfc	btemp,f,c
  2869  0045BE  0EFF               	movlw	-1
  2870  0045C0  0060  F0F3  FFE3   	movff	btemp,plusw1
  2871                           
  2872                           ;gemsecs.c: 24:  }
  2873                           ;stkvar	_i @ sp[(-4)+0]
  2874  0045C6  0EFC               	movlw	-4
  2875  0045C8  50E3               	movf	plusw1,w,c
  2876  0045CA  0F01               	addlw	1
  2877  0045CC  6E3C               	movwf	btemp,c
  2878  0045CE  0EFC               	movlw	-4
  2879  0045D0  0060  F0F3  FFE3   	movff	btemp,plusw1
  2880  0045D6  6A3C               	clrf	btemp,c
  2881  0045D8  0EFD               	movlw	-3
  2882  0045DA  50E3               	movf	plusw1,w,c
  2883  0045DC  203C               	addwfc	btemp,w,c
  2884  0045DE  6E3C               	movwf	btemp,c
  2885  0045E0  0EFD               	movlw	-3
  2886  0045E2  0060  F0F3  FFE3   	movff	btemp,plusw1
  2887  0045E8                     l6985:
  2888                           
  2889                           ;stkvar	_byte_count @ sp[(-4)+-4]
  2890  0045E8  0EF8               	movlw	-8
  2891  0045EA  006F FF8C  F046    	movff	plusw1,btemp+10
  2892  0045F0  0EF9               	movlw	-7
  2893  0045F2  006F FF8C  F047    	movff	plusw1,btemp+11
  2894                           
  2895                           ;stkvar	_i @ sp[(-4)+0]
  2896  0045F8  0EFC               	movlw	-4
  2897  0045FA  006F FF8C  F044    	movff	plusw1,btemp+8
  2898  004600  0EFD               	movlw	-3
  2899  004602  006F FF8C  F045    	movff	plusw1,btemp+9
  2900  004608  5046               	movf	btemp+10,w,c
  2901  00460A  5C44               	subwf	btemp+8,w,c
  2902  00460C  5047               	movf	btemp+11,w,c
  2903  00460E  5845               	subwfb	btemp+9,w,c
  2904  004610  A0D8               	btfss	status,0,c
  2905  004612  D7B1               	goto	l6981
  2906                           
  2907                           ;gemsecs.c: 25:  return sum;
  2908                           ;stkvar	_sum @ sp[(-4)+2]
  2909  004614  0EFE               	movlw	-2
  2910  004616  006F FF8C  F03C    	movff	plusw1,btemp
  2911  00461C  0EFF               	movlw	-1
  2912  00461E  006F FF8C  F03D    	movff	plusw1,btemp+1
  2913                           
  2914                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  2915  004624  0EF8               	movlw	248
  2916  004626  26E1               	addwf	fsr1l,f,c
  2917  004628  0EFF               	movlw	255
  2918  00462A  22E2               	addwfc	fsr1h,f,c
  2919  00462C  0012               	return		;funcret
  2920  00462E                     __end_of_block_checksum:
  2921                           	opt callstack 0
  2922                           
  2923 ;; *************** function _UART1_put_buffer *****************
  2924 ;; Defined at:
  2925 ;;		line 250 in file "mcc_generated_files/uart1.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  bufData         1  [STACK] unsigned char 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1  [STACK] void 
  2932 ;; Registers used:
  2933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/39
  2936 ;;		On exit  : 3F/39
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2943 ;;Total ram usage:        0 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    3
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_t_protocol
  2950 ;;		_secs_send
  2951 ;; This function uses a reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text4
  2955  0053A6                     __ptext4:
  2956                           	opt callstack 0
  2957  0053A6                     _UART1_put_buffer:
  2958                           	opt callstack 25
  2959                           
  2960                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  2961                           
  2962                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2963                           ;incstack = 0
  2964  0053A6  0139               	movlb	57	; () banked
  2965  0053A8  9793               	bcf	147,3,b	;volatile
  2966                           
  2967                           ; BSR set to: 57
  2968                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  2969                           ;stkvar	_bufData @ sp[(0)+-1]
  2970  0053AA  0E40               	movlw	low _uart1RxBuffer
  2971  0053AC  2438               	addwf	_uart1RxHead,w,c	;volatile
  2972  0053AE  6ED9               	movwf	fsr2l,c
  2973  0053B0  6ADA               	clrf	fsr2h,c
  2974  0053B2  0E02               	movlw	high _uart1RxBuffer
  2975  0053B4  22DA               	addwfc	fsr2h,f,c
  2976  0053B6  0EFF               	movlw	-1
  2977  0053B8  006F FF8F FFDF     	movff	plusw1,indf2
  2978                           
  2979                           ; BSR set to: 57
  2980  0053BE  2A38               	incf	_uart1RxHead,f,c	;volatile
  2981                           
  2982                           ; BSR set to: 57
  2983                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  2984  0053C0  0E3F               	movlw	63
  2985  0053C2  6438               	cpfsgt	_uart1RxHead,c
  2986  0053C4  D001               	goto	l6961
  2987                           
  2988                           ; BSR set to: 57
  2989                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  2990  0053C6  6A38               	clrf	_uart1RxHead,c	;volatile
  2991  0053C8                     l6961:
  2992                           
  2993                           ; BSR set to: 57
  2994                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  2995  0053C8  2A36               	incf	_uart1RxCount,f,c	;volatile
  2996                           
  2997                           ; BSR set to: 57
  2998                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  2999  0053CA  8793               	bsf	147,3,b	;volatile
  3000                           
  3001                           ; BSR set to: 57
  3002                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3003  0053CC  52E5               	movf	postdec1,f,c
  3004  0053CE  0012               	return		;funcret
  3005  0053D0                     __end_of_UART1_put_buffer:
  3006                           	opt callstack 0
  3007                           
  3008 ;; *************** function _UART1_is_tx_ready *****************
  3009 ;; Defined at:
  3010 ;;		line 151 in file "mcc_generated_files/uart1.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;		None
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;		None
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1  [STACK] unsigned char 
  3017 ;; Registers used:
  3018 ;;		btemp
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3028 ;;Total ram usage:        0 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    3
  3031 ;; This function calls:
  3032 ;;		Nothing
  3033 ;; This function is called by:
  3034 ;;		_secs_send
  3035 ;; This function uses a reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text5
  3039  0059A2                     __ptext5:
  3040                           	opt callstack 0
  3041  0059A2                     _UART1_is_tx_ready:
  3042                           	opt callstack 25
  3043                           
  3044                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  3045                           
  3046                           ; BSR set to: 57
  3047                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3048                           ;incstack = 0
  3049  0059A2  0060  F0E4  F03C   	movff	_uart1TxBufferRemaining,btemp	;volatile
  3050                           
  3051                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3052  0059A8  0012               	return		;funcret
  3053  0059AA                     __end_of_UART1_is_tx_ready:
  3054                           	opt callstack 0
  3055                           
  3056 ;; *************** function _secs_II_message *****************
  3057 ;; Defined at:
  3058 ;;		line 291 in file "gemsecs.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  stream          1  [STACK] unsigned char 
  3061 ;;  function        1  [STACK] unsigned char 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;		None
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  7  [STACK] struct response_type
  3066 ;; Registers used:
  3067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  3068 ;; Tracked objects:
  3069 ;;		On entry : 3F/0
  3070 ;;		On exit  : 3E/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3077 ;;Total ram usage:        0 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    3
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		_t_protocol
  3084 ;; This function uses a reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text6
  3088  003A7C                     __ptext6:
  3089                           	opt callstack 0
  3090  003A7C                     _secs_II_message:
  3091                           	opt callstack 0
  3092                           
  3093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  3094  003A7C  0E05               	movlw	5
  3095  003A7E  26E1               	addwf	fsr1l,f,c
  3096  003A80  0E00               	movlw	0
  3097  003A82  22E2               	addwfc	fsr1h,f,c
  3098                           
  3099                           ;gemsecs.c: 291: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 292: {;gemsecs.c: 293:  static response_type block;;gemsecs.c: 295:  V.abort = LINK_
      +                          ERROR_NONE;
  3100                           
  3101                           ;incstack = 0
  3102  003A84  0100               	movlb	0	; () banked
  3103  003A86  6BE6               	clrf	(_V+79)& (0+255),b
  3104                           
  3105                           ;gemsecs.c: 296:  V.queue = 0;
  3106  003A88  99EC               	bcf	(_V+85)& (0+255),4,b
  3107                           
  3108                           ;gemsecs.c: 297:  block.respond = 0;
  3109  003A8A  9007               	bcf	secs_II_message@block+6,0,c
  3110                           
  3111                           ;gemsecs.c: 299:  switch (stream) {
  3112  003A8C  D0F3               	goto	l7299
  3113  003A8E                     l7167:
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;gemsecs.c: 303:    block.header = (uint8_t*) & H12[0];
  3117  003A8E  0E41               	movlw	low _H12
  3118  003A90  6E01               	movwf	secs_II_message@block,c
  3119  003A92  0E01               	movlw	high _H12
  3120  003A94  6E02               	movwf	secs_II_message@block+1,c
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;gemsecs.c: 304:    block.length = sizeof(header12);
  3124  003A96  0E0F               	movlw	15
  3125  003A98  6E03               	movwf	secs_II_message@block+2,c
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;gemsecs.c: 305:    H12[0].block.block.systemb = V.systemb;
  3129  003A9A  C0DF  F145         	movff	_V+72,_H12+4
  3130  003A9E  C0E0  F146         	movff	_V+73,_H12+5
  3131  003AA2  C0E1  F147         	movff	_V+74,_H12+6
  3132  003AA6  C0E2  F148         	movff	_V+75,_H12+7
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;gemsecs.c: 306:    H10[0].block.block.systemb = V.systemb;
  3136  003AAA  C0DF  F102         	movff	_V+72,_H10+2
  3137  003AAE  C0E0  F103         	movff	_V+73,_H10+3
  3138  003AB2  C0E1  F104         	movff	_V+74,_H10+4
  3139  003AB6  C0E2  F105         	movff	_V+75,_H10+5
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;gemsecs.c: 307:    block.respond = 1;
  3143  003ABA  8007               	bsf	secs_II_message@block+6,0,c
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;gemsecs.c: 308:    block.reply = (uint8_t*) & H10[0];
  3147  003ABC  0E00               	movlw	low _H10
  3148  003ABE  6E04               	movwf	secs_II_message@block+3,c
  3149  003AC0  0E01               	movlw	high _H10
  3150  003AC2  6E05               	movwf	secs_II_message@block+4,c
  3151                           
  3152                           ;gemsecs.c: 309:    block.reply_length = sizeof(header10);
  3153  003AC4  0E0D               	movlw	13
  3154  003AC6                     L9:
  3155  003AC6  6E06               	movwf	secs_II_message@block+5,c
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;gemsecs.c: 310:    V.queue = 1;
  3159  003AC8  89EC               	bsf	(_V+85)& (0+255),4,b
  3160                           
  3161                           ;gemsecs.c: 311:    break;
  3162  003ACA  D0ED               	goto	l7301
  3163  003ACC                     l7181:
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;gemsecs.c: 313:    block.header = (uint8_t*) & H14[0];
  3167  003ACC  0E8E               	movlw	low _H14
  3168  003ACE  6E01               	movwf	secs_II_message@block,c
  3169  003AD0  0E01               	movlw	high _H14
  3170  003AD2  6E02               	movwf	secs_II_message@block+1,c
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;gemsecs.c: 314:    block.length = sizeof(header14);
  3174  003AD4  0E11               	movlw	17
  3175  003AD6  6E03               	movwf	secs_II_message@block+2,c
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;gemsecs.c: 315:    H14[0].block.block.systemb = V.systemb;
  3179  003AD8  C0DF  F194         	movff	_V+72,_H14+6
  3180  003ADC  C0E0  F195         	movff	_V+73,_H14+7
  3181  003AE0  C0E1  F196         	movff	_V+74,_H14+8
  3182  003AE4  C0E2  F197         	movff	_V+75,_H14+9
  3183                           
  3184                           ;gemsecs.c: 316:    break;
  3185  003AE8  D0DE               	goto	l7301
  3186  003AEA                     l7187:
  3187                           
  3188                           ; BSR set to: 0
  3189                           ;gemsecs.c: 318:    block.header = (uint8_t*) & H17[0];
  3190  003AEA  0E7A               	movlw	low _H17
  3191  003AEC  6E01               	movwf	secs_II_message@block,c
  3192  003AEE  0E01               	movlw	high _H17
  3193  003AF0  6E02               	movwf	secs_II_message@block+1,c
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;gemsecs.c: 319:    block.length = sizeof(header17);
  3197  003AF2  0E14               	movlw	20
  3198  003AF4  6E03               	movwf	secs_II_message@block+2,c
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;gemsecs.c: 320:    H17[0].block.block.systemb = V.systemb;
  3202  003AF6  C0DF  F183         	movff	_V+72,_H17+9
  3203  003AFA  C0E0  F184         	movff	_V+73,_H17+10
  3204  003AFE  C0E1  F185         	movff	_V+74,_H17+11
  3205  003B02  C0E2  F186         	movff	_V+75,_H17+12
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;gemsecs.c: 321:    H12[1].block.block.systemb = V.systemb;
  3209  003B06  C0DF  F154         	movff	_V+72,_H12+19
  3210  003B0A  C0E0  F155         	movff	_V+73,_H12+20
  3211  003B0E  C0E1  F156         	movff	_V+74,_H12+21
  3212  003B12  C0E2  F157         	movff	_V+75,_H12+22
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;gemsecs.c: 322:    block.respond = 1;
  3216  003B16  8007               	bsf	secs_II_message@block+6,0,c
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;gemsecs.c: 323:    block.reply = (uint8_t*) & H12[1];
  3220  003B18  0E50               	movlw	low (_H12+15)
  3221  003B1A  6E04               	movwf	secs_II_message@block+3,c
  3222  003B1C  0E01               	movlw	high (_H12+15)
  3223  003B1E  6E05               	movwf	secs_II_message@block+4,c
  3224                           
  3225                           ;gemsecs.c: 324:    block.reply_length = sizeof(header12);
  3226  003B20  0E0F               	movlw	15
  3227  003B22  D7D1               	goto	L9
  3228  003B24                     l7201:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;gemsecs.c: 328:    block.header = (uint8_t*) & H10[2];
  3232  003B24  0E1A               	movlw	low (_H10+26)
  3233  003B26  6E01               	movwf	secs_II_message@block,c
  3234  003B28  0E01               	movlw	high (_H10+26)
  3235  003B2A  6E02               	movwf	secs_II_message@block+1,c
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;gemsecs.c: 329:    block.length = sizeof(header10);
  3239  003B2C  0E0D               	movlw	13
  3240  003B2E  6E03               	movwf	secs_II_message@block+2,c
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;gemsecs.c: 330:    H10[2].block.block.systemb = V.systemb;
  3244  003B30  C0DF  F11C         	movff	_V+72,_H10+28
  3245  003B34  C0E0  F11D         	movff	_V+73,_H10+29
  3246  003B38  C0E1  F11E         	movff	_V+74,_H10+30
  3247  003B3C  C0E2  F11F         	movff	_V+75,_H10+31
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;gemsecs.c: 331:    V.abort = LINK_ERROR_ABORT;
  3251  003B40  0E07               	movlw	7
  3252  003B42  6FE6               	movwf	(_V+79)& (0+255),b
  3253                           
  3254                           ;gemsecs.c: 332:    break;
  3255  003B44  D0B0               	goto	l7301
  3256  003B46                     l7211:
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;stkvar	_function @ sp[(0)+-7]
  3260  003B46  0EF9               	movlw	-7
  3261  003B48  50E3               	movf	plusw1,w,c
  3262  003B4A  6E46               	movwf	btemp+10,c
  3263  003B4C  6A47               	clrf	btemp+11,c
  3264                           
  3265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3266                           ; Switch size 1, requested type "simple"
  3267                           ; Number of cases is 1, Range of values is 0 to 0
  3268                           ; switch strategies available:
  3269                           ; Name         Instructions Cycles
  3270                           ; simple_byte            4     3 (average)
  3271                           ;	Chosen strategy is simple_byte
  3272  003B4E  5047               	movf	btemp+11,w,c
  3273  003B50  0A00               	xorlw	0	; case 0
  3274  003B52  A4D8               	btfss	status,2,c
  3275  003B54  D7E7               	goto	l7201
  3276                           
  3277                           ; BSR set to: 0
  3278                           ; Switch size 1, requested type "simple"
  3279                           ; Number of cases is 3, Range of values is 1 to 13
  3280                           ; switch strategies available:
  3281                           ; Name         Instructions Cycles
  3282                           ; simple_byte           10     6 (average)
  3283                           ;	Chosen strategy is simple_byte
  3284  003B56  5046               	movf	btemp+10,w,c
  3285  003B58  0A01               	xorlw	1	; case 1
  3286  003B5A  B4D8               	btfsc	status,2,c
  3287  003B5C  D798               	goto	l7167
  3288  003B5E  0A02               	xorlw	2	; case 3
  3289  003B60  B4D8               	btfsc	status,2,c
  3290  003B62  D7B4               	goto	l7181
  3291  003B64  0A0E               	xorlw	14	; case 13
  3292  003B66  B4D8               	btfsc	status,2,c
  3293  003B68  D7C0               	goto	l7187
  3294  003B6A  D7DC               	goto	l7201
  3295  003B6C                     l7213:
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;gemsecs.c: 338:    block.header = (uint8_t*) & H24[0];
  3299  003B6C  0E5F               	movlw	low _H24
  3300  003B6E  6E01               	movwf	secs_II_message@block,c
  3301  003B70  0E01               	movlw	high _H24
  3302  003B72  6E02               	movwf	secs_II_message@block+1,c
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;gemsecs.c: 339:    block.length = sizeof(header24);
  3306  003B74  0E1B               	movlw	27
  3307  003B76  6E03               	movwf	secs_II_message@block+2,c
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;gemsecs.c: 340:    H24[0].block.block.systemb = V.systemb;
  3311  003B78  C0DF  F16F         	movff	_V+72,_H24+16
  3312  003B7C  C0E0  F170         	movff	_V+73,_H24+17
  3313  003B80  C0E1  F171         	movff	_V+74,_H24+18
  3314  003B84  C0E2  F172         	movff	_V+75,_H24+19
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;gemsecs.c: 341:    H24[0].data[12] = 12;
  3318  003B88  0E0C               	movlw	12
  3319  003B8A  0101               	movlb	1	; () banked
  3320  003B8C  6F6D               	movwf	(_H24+14)& (0+255),b
  3321                           
  3322                           ;gemsecs.c: 342:    break;
  3323  003B8E  D08B               	goto	l7301
  3324  003B90                     l7231:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;stkvar	_function @ sp[(0)+-7]
  3328  003B90  0EF9               	movlw	-7
  3329  003B92  50E3               	movf	plusw1,w,c
  3330  003B94  6E46               	movwf	btemp+10,c
  3331  003B96  6A47               	clrf	btemp+11,c
  3332                           
  3333                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3334                           ; Switch size 1, requested type "simple"
  3335                           ; Number of cases is 1, Range of values is 0 to 0
  3336                           ; switch strategies available:
  3337                           ; Name         Instructions Cycles
  3338                           ; simple_byte            4     3 (average)
  3339                           ;	Chosen strategy is simple_byte
  3340  003B98  5047               	movf	btemp+11,w,c
  3341  003B9A  0A00               	xorlw	0	; case 0
  3342  003B9C  A4D8               	btfss	status,2,c
  3343  003B9E  D7C2               	goto	l7201
  3344                           
  3345                           ; BSR set to: 0
  3346                           ; Switch size 1, requested type "simple"
  3347                           ; Number of cases is 1, Range of values is 17 to 17
  3348                           ; switch strategies available:
  3349                           ; Name         Instructions Cycles
  3350                           ; simple_byte            4     3 (average)
  3351                           ;	Chosen strategy is simple_byte
  3352  003BA0  5046               	movf	btemp+10,w,c
  3353  003BA2  0A11               	xorlw	17	; case 17
  3354  003BA4  B4D8               	btfsc	status,2,c
  3355  003BA6  D7E2               	goto	l7213
  3356  003BA8  D7BD               	goto	l7201
  3357  003BAA                     l7233:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;gemsecs.c: 354:    block.header = (uint8_t*) & H13[0];
  3361  003BAA  0E9F               	movlw	low _H13
  3362  003BAC  6E01               	movwf	secs_II_message@block,c
  3363  003BAE  0E01               	movlw	high _H13
  3364  003BB0  6E02               	movwf	secs_II_message@block+1,c
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;gemsecs.c: 355:    block.length = sizeof(header13);
  3368  003BB2  0E10               	movlw	16
  3369  003BB4  6E03               	movwf	secs_II_message@block+2,c
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;gemsecs.c: 356:    H13[0].block.block.systemb = V.systemb;
  3373  003BB6  C0DF  F1A4         	movff	_V+72,_H13+5
  3374  003BBA  C0E0  F1A5         	movff	_V+73,_H13+6
  3375  003BBE  C0E1  F1A6         	movff	_V+74,_H13+7
  3376  003BC2  C0E2  F1A7         	movff	_V+75,_H13+8
  3377                           
  3378                           ;gemsecs.c: 357:    break;
  3379  003BC6  D06F               	goto	l7301
  3380  003BC8                     l7249:
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;stkvar	_function @ sp[(0)+-7]
  3384  003BC8  0EF9               	movlw	-7
  3385  003BCA  50E3               	movf	plusw1,w,c
  3386  003BCC  6E46               	movwf	btemp+10,c
  3387  003BCE  6A47               	clrf	btemp+11,c
  3388                           
  3389                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3390                           ; Switch size 1, requested type "simple"
  3391                           ; Number of cases is 1, Range of values is 0 to 0
  3392                           ; switch strategies available:
  3393                           ; Name         Instructions Cycles
  3394                           ; simple_byte            4     3 (average)
  3395                           ;	Chosen strategy is simple_byte
  3396  003BD0  5047               	movf	btemp+11,w,c
  3397  003BD2  0A00               	xorlw	0	; case 0
  3398  003BD4  A4D8               	btfss	status,2,c
  3399  003BD6  D7A6               	goto	l7201
  3400                           
  3401                           ; BSR set to: 0
  3402                           ; Switch size 1, requested type "simple"
  3403                           ; Number of cases is 1, Range of values is 11 to 11
  3404                           ; switch strategies available:
  3405                           ; Name         Instructions Cycles
  3406                           ; simple_byte            4     3 (average)
  3407                           ;	Chosen strategy is simple_byte
  3408  003BD8  5046               	movf	btemp+10,w,c
  3409  003BDA  0A0B               	xorlw	11	; case 11
  3410  003BDC  B4D8               	btfsc	status,2,c
  3411  003BDE  D7E5               	goto	l7233
  3412  003BE0  D7A1               	goto	l7201
  3413  003BE2                     l7261:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;stkvar	_function @ sp[(0)+-7]
  3417  003BE2  0EF9               	movlw	-7
  3418  003BE4  50E3               	movf	plusw1,w,c
  3419  003BE6  6E46               	movwf	btemp+10,c
  3420  003BE8  6A47               	clrf	btemp+11,c
  3421                           
  3422                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3423                           ; Switch size 1, requested type "simple"
  3424                           ; Number of cases is 1, Range of values is 0 to 0
  3425                           ; switch strategies available:
  3426                           ; Name         Instructions Cycles
  3427                           ; simple_byte            4     3 (average)
  3428                           ;	Chosen strategy is simple_byte
  3429  003BEA  5047               	movf	btemp+11,w,c
  3430  003BEC  0A00               	xorlw	0	; case 0
  3431  003BEE  A4D8               	btfss	status,2,c
  3432  003BF0  D799               	goto	l7201
  3433                           
  3434                           ; BSR set to: 0
  3435                           ; Switch size 1, requested type "simple"
  3436                           ; Number of cases is 7, Range of values is 1 to 13
  3437                           ; switch strategies available:
  3438                           ; Name         Instructions Cycles
  3439                           ; simple_byte           22    12 (average)
  3440                           ;	Chosen strategy is simple_byte
  3441  003BF2  5046               	movf	btemp+10,w,c
  3442  003BF4  0A01               	xorlw	1	; case 1
  3443  003BF6  B4D8               	btfsc	status,2,c
  3444  003BF8  D056               	goto	l7301
  3445  003BFA  0A02               	xorlw	2	; case 3
  3446  003BFC  B4D8               	btfsc	status,2,c
  3447  003BFE  D053               	goto	l7301
  3448  003C00  0A06               	xorlw	6	; case 5
  3449  003C02  B4D8               	btfsc	status,2,c
  3450  003C04  D050               	goto	l7301
  3451  003C06  0A02               	xorlw	2	; case 7
  3452  003C08  B4D8               	btfsc	status,2,c
  3453  003C0A  D04D               	goto	l7301
  3454  003C0C  0A0E               	xorlw	14	; case 9
  3455  003C0E  B4D8               	btfsc	status,2,c
  3456  003C10  D04A               	goto	l7301
  3457  003C12  0A02               	xorlw	2	; case 11
  3458  003C14  B4D8               	btfsc	status,2,c
  3459  003C16  D047               	goto	l7301
  3460  003C18  0A06               	xorlw	6	; case 13
  3461  003C1A  B4D8               	btfsc	status,2,c
  3462  003C1C  D044               	goto	l7301
  3463  003C1E  D782               	goto	l7201
  3464  003C20                     l7263:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;gemsecs.c: 393:    block.header = (uint8_t*) & H12[0];
  3468  003C20  0E41               	movlw	low _H12
  3469  003C22  6E01               	movwf	secs_II_message@block,c
  3470  003C24  0E01               	movlw	high _H12
  3471  003C26  6E02               	movwf	secs_II_message@block+1,c
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;gemsecs.c: 394:    block.length = sizeof(header12);
  3475  003C28  0E0F               	movlw	15
  3476  003C2A  6E03               	movwf	secs_II_message@block+2,c
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;gemsecs.c: 395:    H12[0].block.block.systemb = V.systemb;
  3480  003C2C  C0DF  F145         	movff	_V+72,_H12+4
  3481  003C30  C0E0  F146         	movff	_V+73,_H12+5
  3482  003C34  C0E1  F147         	movff	_V+74,_H12+6
  3483  003C38  C0E2  F148         	movff	_V+75,_H12+7
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;gemsecs.c: 396:    H53[0].block.block.systemb = V.systemb;
  3487  003C3C  C0DF  F2ED         	movff	_V+72,_H53+45
  3488  003C40  C0E0  F2EE         	movff	_V+73,_H53+46
  3489  003C44  C0E1  F2EF         	movff	_V+74,_H53+47
  3490  003C48  C0E2  F2F0         	movff	_V+75,_H53+48
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;gemsecs.c: 397:    block.respond = 1;
  3494  003C4C  8007               	bsf	secs_II_message@block+6,0,c
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;gemsecs.c: 398:    block.reply = (uint8_t*) & H53[0];
  3498  003C4E  0EC0               	movlw	low _H53
  3499  003C50  6E04               	movwf	secs_II_message@block+3,c
  3500  003C52  0E02               	movlw	high _H53
  3501  003C54  6E05               	movwf	secs_II_message@block+4,c
  3502                           
  3503                           ;gemsecs.c: 399:    block.reply_length = sizeof(header53);
  3504  003C56  0E38               	movlw	56
  3505  003C58  D736               	goto	L9
  3506  003C5A                     l7287:
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;stkvar	_function @ sp[(0)+-7]
  3510  003C5A  0EF9               	movlw	-7
  3511  003C5C  50E3               	movf	plusw1,w,c
  3512  003C5E  6E46               	movwf	btemp+10,c
  3513  003C60  6A47               	clrf	btemp+11,c
  3514                           
  3515                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3516                           ; Switch size 1, requested type "simple"
  3517                           ; Number of cases is 1, Range of values is 0 to 0
  3518                           ; switch strategies available:
  3519                           ; Name         Instructions Cycles
  3520                           ; simple_byte            4     3 (average)
  3521                           ;	Chosen strategy is simple_byte
  3522  003C62  5047               	movf	btemp+11,w,c
  3523  003C64  0A00               	xorlw	0	; case 0
  3524  003C66  A4D8               	btfss	status,2,c
  3525  003C68  D75D               	goto	l7201
  3526                           
  3527                           ; BSR set to: 0
  3528                           ; Switch size 1, requested type "simple"
  3529                           ; Number of cases is 1, Range of values is 1 to 1
  3530                           ; switch strategies available:
  3531                           ; Name         Instructions Cycles
  3532                           ; simple_byte            4     3 (average)
  3533                           ;	Chosen strategy is simple_byte
  3534  003C6A  5046               	movf	btemp+10,w,c
  3535  003C6C  0A01               	xorlw	1	; case 1
  3536  003C6E  B4D8               	btfsc	status,2,c
  3537  003C70  D7D7               	goto	l7263
  3538  003C72  D758               	goto	l7201
  3539  003C74                     l7299:
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;stkvar	_stream @ sp[(0)+-6]
  3543  003C74  0EFA               	movlw	-6
  3544  003C76  50E3               	movf	plusw1,w,c
  3545  003C78  6E46               	movwf	btemp+10,c
  3546  003C7A  6A47               	clrf	btemp+11,c
  3547                           
  3548                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3549                           ; Switch size 1, requested type "simple"
  3550                           ; Number of cases is 1, Range of values is 0 to 0
  3551                           ; switch strategies available:
  3552                           ; Name         Instructions Cycles
  3553                           ; simple_byte            4     3 (average)
  3554                           ;	Chosen strategy is simple_byte
  3555  003C7C  5047               	movf	btemp+11,w,c
  3556  003C7E  0A00               	xorlw	0	; case 0
  3557  003C80  A4D8               	btfss	status,2,c
  3558  003C82  D750               	goto	l7201
  3559                           
  3560                           ; BSR set to: 0
  3561                           ; Switch size 1, requested type "simple"
  3562                           ; Number of cases is 5, Range of values is 1 to 10
  3563                           ; switch strategies available:
  3564                           ; Name         Instructions Cycles
  3565                           ; simple_byte           16     9 (average)
  3566                           ;	Chosen strategy is simple_byte
  3567  003C84  5046               	movf	btemp+10,w,c
  3568  003C86  0A01               	xorlw	1	; case 1
  3569  003C88  B4D8               	btfsc	status,2,c
  3570  003C8A  D75D               	goto	l7211
  3571  003C8C  0A03               	xorlw	3	; case 2
  3572  003C8E  B4D8               	btfsc	status,2,c
  3573  003C90  D77F               	goto	l7231
  3574  003C92  0A04               	xorlw	4	; case 6
  3575  003C94  B4D8               	btfsc	status,2,c
  3576  003C96  D798               	goto	l7249
  3577  003C98  0A0F               	xorlw	15	; case 9
  3578  003C9A  B4D8               	btfsc	status,2,c
  3579  003C9C  D7A2               	goto	l7261
  3580  003C9E  0A03               	xorlw	3	; case 10
  3581  003CA0  B4D8               	btfsc	status,2,c
  3582  003CA2  D7DB               	goto	l7287
  3583  003CA4  D73F               	goto	l7201
  3584  003CA6                     l7301:
  3585                           
  3586                           ;gemsecs.c: 418:  return(block);
  3587  003CA6  EE20  F001         	lfsr	2,secs_II_message@block
  3588                           
  3589                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  3590  003CAA  0E07               	movlw	7
  3591  003CAC  6E3C               	movwf	btemp,c
  3592  003CAE  0EF9               	movlw	-7
  3593  003CB0                     us406999:
  3594  003CB0  006F FF7B FFE3     	movff	postinc2,plusw1
  3595  003CB6  28E8               	incf	wreg,w,c
  3596  003CB8  2E3C               	decfsz	btemp,f,c
  3597  003CBA  D7FA               	bra	us406999
  3598                           
  3599                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  3600  003CBC  0012               	return		;funcret
  3601  003CBE                     __end_of_secs_II_message:
  3602                           	opt callstack 0
  3603                           
  3604 ;; *************** function _sprintf *****************
  3605 ;; Defined at:
  3606 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  s               1  [STACK] PTR unsigned char 
  3609 ;;		 -> V(86), 
  3610 ;;  fmt             1  [STACK] PTR const unsigned char 
  3611 ;;		 -> STR_11(21), STR_10(17), STR_9(19), STR_8(20), 
  3612 ;;		 -> STR_7(6), STR_6(6), STR_5(14), STR_4(15), 
  3613 ;;		 -> STR_2(12), STR_1(17), 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  f               5  [STACK] struct _IO_FILE
  3616 ;;  ap              2  [STACK] PTR void [1]
  3617 ;;		 -> ?_printf(2), ?_sprintf(2), 
  3618 ;;  ret             2    0        int 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  2  [STACK] int 
  3621 ;; Registers used:
  3622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 3F/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3632 ;;Total ram usage:        0 bytes
  3633 ;; Hardware stack levels used:    1
  3634 ;; Hardware stack levels required when called:   11
  3635 ;; This function calls:
  3636 ;;		_vfprintf
  3637 ;; This function is called by:
  3638 ;;		_main
  3639 ;; This function uses a reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text7
  3643  0046F6                     __ptext7:
  3644                           	opt callstack 0
  3645  0046F6                     _sprintf:
  3646                           	opt callstack 0
  3647                           
  3648                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3649  0046F6  0E07               	movlw	7
  3650  0046F8  26E1               	addwf	fsr1l,f,c
  3651  0046FA  0E00               	movlw	0
  3652  0046FC  22E2               	addwfc	fsr1h,f,c
  3653                           
  3654                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  3655                           
  3656                           ;incstack = 0
  3657  0046FE  0EF6               	movlw	246
  3658  004700  24E1               	addwf	fsr1l,w,c
  3659  004702  6E46               	movwf	btemp+10,c
  3660  004704  0EFF               	movlw	255
  3661  004706  20E2               	addwfc	fsr1h,w,c
  3662  004708  6E47               	movwf	btemp+11,c
  3663                           
  3664                           ;stkvar	_ap @ sp[(-7)+5]
  3665  00470A  0EFF               	movlw	-1
  3666  00470C  0060  F11F  FFE3   	movff	btemp+11,plusw1
  3667  004712  0EFE               	movlw	-2
  3668  004714  0060  F11B  FFE3   	movff	btemp+10,plusw1
  3669                           
  3670                           ;stkvar	_s @ sp[(-7)+-2]
  3671  00471A  0EF7               	movlw	-9
  3672  00471C  006F FF8C  F047    	movff	plusw1,btemp+11
  3673                           
  3674                           ;stkvar	_f @ sp[(-7)+0]
  3675  004722  0EF9               	movlw	-7
  3676  004724  0060  F11F  FFE3   	movff	btemp+11,plusw1
  3677                           
  3678                           ;stkvar	_f @ sp[(-7)+0]
  3679  00472A  0EFA               	movlw	250
  3680  00472C  24E1               	addwf	fsr1l,w,c
  3681  00472E  6ED9               	movwf	fsr2l,c
  3682  004730  0EFF               	movlw	255
  3683  004732  20E2               	addwfc	fsr1h,w,c
  3684  004734  6EDA               	movwf	fsr2h,c
  3685  004736  0E00               	movlw	0
  3686  004738  6EDE               	movwf	postinc2,c
  3687  00473A  0E00               	movlw	0
  3688  00473C  6EDD               	movwf	postdec2,c
  3689                           
  3690                           ;stkvar	_f @ sp[(-7)+0]
  3691  00473E  0EFC               	movlw	252
  3692  004740  24E1               	addwf	fsr1l,w,c
  3693  004742  6ED9               	movwf	fsr2l,c
  3694  004744  0EFF               	movlw	255
  3695  004746  20E2               	addwfc	fsr1h,w,c
  3696  004748  6EDA               	movwf	fsr2h,c
  3697  00474A  0E00               	movlw	0
  3698  00474C  6EDE               	movwf	postinc2,c
  3699  00474E  0E00               	movlw	0
  3700  004750  6EDD               	movwf	postdec2,c
  3701                           
  3702                           ;stkvar	_ap @ sp[(-7)+5]
  3703  004752  0EFE               	movlw	254
  3704  004754  24E1               	addwf	fsr1l,w,c
  3705  004756  6E3C               	movwf	btemp,c
  3706  004758  0EFF               	movlw	255
  3707  00475A  20E2               	addwfc	fsr1h,w,c
  3708  00475C  6E3D               	movwf	btemp+1,c
  3709  00475E  0060  F0F3  FFE6   	movff	btemp,postinc1
  3710  004764  0060  F0F7  FFE6   	movff	btemp+1,postinc1
  3711                           
  3712                           ;stkvar	_fmt @ sp[(-9)+-3]
  3713  00476A  0EF4               	movlw	-12
  3714  00476C  50E3               	movf	plusw1,w,c
  3715  00476E  6EE6               	movwf	postinc1,c
  3716                           
  3717                           ;stkvar	_f @ sp[(-10)+0]
  3718  004770  0EF6               	movlw	246
  3719  004772  24E1               	addwf	fsr1l,w,c
  3720  004774  6E3C               	movwf	btemp,c
  3721  004776  0EFF               	movlw	255
  3722  004778  20E2               	addwfc	fsr1h,w,c
  3723  00477A  6E3D               	movwf	btemp+1,c
  3724  00477C  0060  F0F3  FFE6   	movff	btemp,postinc1
  3725  004782  0060  F0F7  FFE6   	movff	btemp+1,postinc1
  3726  004788  EC7B  F025         	call	_vfprintf	;wreg free
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;stkvar	_f @ sp[(-7)+0]
  3730  00478C  0EFA               	movlw	250
  3731  00478E  24E1               	addwf	fsr1l,w,c
  3732  004790  6ED9               	movwf	fsr2l,c
  3733  004792  0EFF               	movlw	255
  3734  004794  20E2               	addwfc	fsr1h,w,c
  3735  004796  6EDA               	movwf	fsr2h,c
  3736  004798  50DF               	movf	indf2,w,c
  3737  00479A  6E47               	movwf	btemp+11,c
  3738                           
  3739                           ;stkvar	_s @ sp[(-7)+-2]
  3740  00479C  0EF7               	movlw	-9
  3741  00479E  50E3               	movf	plusw1,w,c
  3742  0047A0  2447               	addwf	btemp+11,w,c
  3743  0047A2  6ED9               	movwf	fsr2l,c
  3744  0047A4  6ADA               	clrf	fsr2h,c
  3745  0047A6  0E00               	movlw	0
  3746  0047A8  6EDF               	movwf	indf2,c
  3747                           
  3748                           ; BSR set to: 0
  3749                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 2, vargsize = 0
  3750  0047AA  0EF9               	movlw	249
  3751  0047AC  26E1               	addwf	fsr1l,f,c
  3752  0047AE  0EFF               	movlw	255
  3753  0047B0  22E2               	addwfc	fsr1h,f,c
  3754  0047B2  52E5               	movf	postdec1,f,c
  3755  0047B4  50E7               	movf	indf1,w,c
  3756  0047B6  5EE1               	subwf	fsr1l,f,c
  3757  0047B8  0E00               	movlw	0
  3758  0047BA  5AE2               	subwfb	fsr1h,f,c
  3759  0047BC  0012               	return		;funcret
  3760  0047BE                     __end_of_sprintf:
  3761                           	opt callstack 0
  3762                           
  3763 ;; *************** function _r_protocol *****************
  3764 ;; Defined at:
  3765 ;;		line 42 in file "gemsecs.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  r_link          1  [STACK] PTR enum E16163
  3768 ;;		 -> V(86), 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;  rxData          1  [STACK] unsigned char 
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1  [STACK] enum E16901
  3773 ;; Registers used:
  3774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3784 ;;Total ram usage:        0 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; Hardware stack levels required when called:    5
  3787 ;; This function calls:
  3788 ;;		_StartTimer
  3789 ;;		_TimerDone
  3790 ;;		_UART1_Read
  3791 ;;		_UART1_Write
  3792 ;;		_UART1_is_rx_ready
  3793 ;;		_WaitMs
  3794 ;;		_run_checksum
  3795 ;; This function is called by:
  3796 ;;		_main
  3797 ;; This function uses a reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text8
  3801  003008                     __ptext8:
  3802                           	opt callstack 0
  3803  003008                     _r_protocol:
  3804                           	opt callstack 0
  3805                           
  3806                           ; BSR set to: 0
  3807                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3808  003008  52E6               	movf	postinc1,f,c
  3809                           
  3810                           ;gemsecs.c: 42: LINK_STATES r_protocol(LINK_STATES *r_link);gemsecs.c: 43: {;gemsecs.c: 
      +                          44:  uint8_t rxData;;gemsecs.c: 45:  static uint8_t rxData_l = 0, retry = 3;;gemsecs.c: 
      +                          47:  switch (*r_link) {
  3811                           
  3812                           ;incstack = 0
  3813  00300A  D13C               	goto	l7635
  3814  00300C                     l7529:
  3815                           
  3816                           ;gemsecs.c: 49:   if (UART1_is_rx_ready()) {
  3817  00300C  ECD5  F02C         	call	_UART1_is_rx_ready	;wreg free
  3818  003010  503C               	movf	btemp,w,c
  3819  003012  B4D8               	btfsc	status,2,c
  3820  003014  D158               	goto	l7637
  3821                           
  3822                           ;gemsecs.c: 50:    rxData = UART1_Read();
  3823  003016  EC03  F029         	call	_UART1_Read	;wreg free
  3824                           
  3825                           ;stkvar	_rxData @ sp[(-1)+0]
  3826  00301A  0EFF               	movlw	-1
  3827  00301C  0060  F0F3  FFE3   	movff	btemp,plusw1
  3828                           
  3829                           ; BSR set to: 57
  3830                           ;gemsecs.c: 51:    if (rxData == 0x05) {
  3831                           ;stkvar	_rxData @ sp[(-1)+0]
  3832  003022  0EFF               	movlw	-1
  3833  003024  006F FF8C  F03C    	movff	plusw1,btemp
  3834  00302A  0E05               	movlw	5
  3835  00302C  183C               	xorwf	btemp,w,c
  3836  00302E  A4D8               	btfss	status,2,c
  3837  003030  D14A               	goto	l7637
  3838                           
  3839                           ; BSR set to: 57
  3840                           ;gemsecs.c: 52:     V.error = LINK_ERROR_NONE;
  3841  003032  0100               	movlb	0	; () banked
  3842  003034  6BE5               	clrf	(_V+78)& (0+255),b
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;gemsecs.c: 53:     *r_link = LINK_STATE_ENQ;
  3846                           ;stkvar	_r_link @ sp[(-1)+-1]
  3847  003036  0EFE               	movlw	-2
  3848  003038  50E3               	movf	plusw1,w,c
  3849  00303A  6ED9               	movwf	fsr2l,c
  3850  00303C  6ADA               	clrf	fsr2h,c
  3851  00303E  0E01               	movlw	1
  3852  003040  D108               	goto	L14
  3853  003042                     l1505:
  3854                           
  3855                           ;gemsecs.c: 58:   rxData_l = 0;
  3856  003042  6A2F               	clrf	r_protocol@rxData_l,c
  3857                           
  3858                           ;gemsecs.c: 59:   UART1_Write(0x04);
  3859  003044  0E04               	movlw	4
  3860  003046  6EE6               	movwf	postinc1,c
  3861  003048  ECE4  F028         	call	_UART1_Write	;wreg free
  3862                           
  3863                           ; BSR set to: 57
  3864                           ;gemsecs.c: 60:   StartTimer(TMR_T2, 2000);
  3865  00304C  0ED0               	movlw	208
  3866  00304E  6EE6               	movwf	postinc1,c
  3867  003050  0E07               	movlw	7
  3868  003052  6EE6               	movwf	postinc1,c
  3869  003054  0E02               	movlw	2
  3870  003056  6EE6               	movwf	postinc1,c
  3871  003058  EC41  F029         	call	_StartTimer	;wreg free
  3872                           
  3873                           ;gemsecs.c: 61:   *r_link = LINK_STATE_EOT;
  3874                           ;stkvar	_r_link @ sp[(-1)+-1]
  3875  00305C  0EFE               	movlw	-2
  3876  00305E  50E3               	movf	plusw1,w,c
  3877  003060  6ED9               	movwf	fsr2l,c
  3878  003062  6ADA               	clrf	fsr2h,c
  3879  003064  0E02               	movlw	2
  3880  003066  D0F5               	goto	L14
  3881  003068                     l7545:
  3882                           
  3883                           ;gemsecs.c: 69:   if (TimerDone(TMR_T2)) {
  3884  003068  0E02               	movlw	2
  3885  00306A  6EE6               	movwf	postinc1,c
  3886  00306C  EC8D  F02B         	call	_TimerDone	;wreg free
  3887  003070  503C               	movf	btemp,w,c
  3888  003072  B4D8               	btfsc	status,2,c
  3889  003074  D017               	goto	l7555
  3890                           
  3891                           ;gemsecs.c: 70:    if (!retry--) {
  3892  003076  065E               	decf	r_protocol@retry,f,c
  3893  003078  285E               	incf	r_protocol@retry,w,c
  3894  00307A  A4D8               	btfss	status,2,c
  3895  00307C  D00D               	goto	l7553
  3896                           
  3897                           ;gemsecs.c: 71:     V.error = LINK_ERROR_T2;
  3898  00307E  0E02               	movlw	2
  3899  003080  0100               	movlb	0	; () banked
  3900  003082  6FE5               	movwf	(_V+78)& (0+255),b
  3901                           
  3902                           ;gemsecs.c: 72:     V.failed_receive = 1;
  3903  003084  51EC               	movf	(_V+85)& (0+255),w,b
  3904  003086  0BF0               	andlw	-16
  3905  003088  0901               	iorlw	1
  3906  00308A  6FEC               	movwf	(_V+85)& (0+255),b
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;gemsecs.c: 73:     *r_link = LINK_STATE_NAK;
  3910                           ;stkvar	_r_link @ sp[(-1)+-1]
  3911  00308C  0EFE               	movlw	-2
  3912  00308E  50E3               	movf	plusw1,w,c
  3913  003090  6ED9               	movwf	fsr2l,c
  3914  003092  6ADA               	clrf	fsr2h,c
  3915  003094  0E05               	movlw	5
  3916  003096  D0DD               	goto	L14
  3917  003098                     l7553:
  3918                           
  3919                           ;gemsecs.c: 75:     *r_link = LINK_STATE_IDLE;
  3920                           ;stkvar	_r_link @ sp[(-1)+-1]
  3921  003098  0EFE               	movlw	-2
  3922  00309A  50E3               	movf	plusw1,w,c
  3923  00309C  6ED9               	movwf	fsr2l,c
  3924  00309E  6ADA               	clrf	fsr2h,c
  3925  0030A0  0E00               	movlw	0
  3926  0030A2  D0D7               	goto	L14
  3927  0030A4                     l7555:
  3928                           
  3929                           ;gemsecs.c: 78:    if (UART1_is_rx_ready()) {
  3930  0030A4  ECD5  F02C         	call	_UART1_is_rx_ready	;wreg free
  3931  0030A8  503C               	movf	btemp,w,c
  3932  0030AA  B4D8               	btfsc	status,2,c
  3933  0030AC  D10C               	goto	l7637
  3934                           
  3935                           ;gemsecs.c: 79:     rxData = UART1_Read();
  3936  0030AE  EC03  F029         	call	_UART1_Read	;wreg free
  3937                           
  3938                           ;stkvar	_rxData @ sp[(-1)+0]
  3939  0030B2  0EFF               	movlw	-1
  3940  0030B4  0060  F0F3  FFE3   	movff	btemp,plusw1
  3941                           
  3942                           ; BSR set to: 57
  3943                           ;gemsecs.c: 80:     if (rxData_l == 0) {
  3944  0030BA  502F               	movf	r_protocol@rxData_l,w,c
  3945  0030BC  A4D8               	btfss	status,2,c
  3946  0030BE  D00C               	goto	l7567
  3947                           
  3948                           ; BSR set to: 57
  3949                           ;gemsecs.c: 81:      r_block.length = rxData;
  3950                           ;stkvar	_rxData @ sp[(-1)+0]
  3951  0030C0  0EFF               	movlw	-1
  3952  0030C2  006F FF8C  F06C    	movff	plusw1,_r_block+12
  3953                           
  3954                           ; BSR set to: 57
  3955                           ;gemsecs.c: 82:      run_checksum(0, 1);
  3956  0030C8  0E01               	movlw	1
  3957  0030CA  6EE6               	movwf	postinc1,c
  3958  0030CC  0E00               	movlw	0
  3959  0030CE  6EE6               	movwf	postinc1,c
  3960  0030D0  EC7B  F029         	call	_run_checksum	;wreg free
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;gemsecs.c: 83:      rxData_l++;
  3964  0030D4  2A2F               	incf	r_protocol@rxData_l,f,c
  3965                           
  3966                           ;gemsecs.c: 84:     } else {
  3967  0030D6  D0F7               	goto	l7637
  3968  0030D8                     l7567:
  3969                           
  3970                           ; BSR set to: 57
  3971                           ;gemsecs.c: 88:      if (rxData_l <= sizeof(block10))
  3972  0030D8  0E0B               	movlw	11
  3973  0030DA  602F               	cpfslt	r_protocol@rxData_l,c
  3974  0030DC  D00C               	goto	l7571
  3975                           
  3976                           ; BSR set to: 57
  3977                           ;gemsecs.c: 89:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  3978                           ;stkvar	_rxData @ sp[(-1)+0]
  3979  0030DE  502F               	movf	r_protocol@rxData_l,w,c
  3980  0030E0  0819               	sublw	low (_H10+25)
  3981  0030E2  6ED9               	movwf	fsr2l,c
  3982  0030E4  0E00               	movlw	0
  3983  0030E6  A0D8               	btfss	status,0,c
  3984  0030E8  2AE8               	incf	wreg,f,c
  3985  0030EA  0801               	sublw	high (_H10+25)
  3986  0030EC  6EDA               	movwf	fsr2h,c
  3987  0030EE  0EFF               	movlw	-1
  3988  0030F0  006F FF8F FFDF     	movff	plusw1,indf2
  3989  0030F6                     l7571:
  3990                           
  3991                           ; BSR set to: 57
  3992                           ;gemsecs.c: 90:      if (rxData_l <= r_block.length)
  3993  0030F6  502F               	movf	r_protocol@rxData_l,w,c
  3994  0030F8  0100               	movlb	0	; () banked
  3995  0030FA  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  3996  0030FC  A0D8               	btfss	status,0,c
  3997  0030FE  D00D               	goto	l7575
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;gemsecs.c: 91:       V.r_checksum = run_checksum(rxData, 0);
  4001  003100  0E00               	movlw	0
  4002  003102  6EE6               	movwf	postinc1,c
  4003                           
  4004                           ;stkvar	_rxData @ sp[(-2)+0]
  4005  003104  0EFE               	movlw	-2
  4006  003106  50E3               	movf	plusw1,w,c
  4007  003108  6EE6               	movwf	postinc1,c
  4008  00310A  EC7B  F029         	call	_run_checksum	;wreg free
  4009  00310E  0060  F0F0  F0E7   	movff	btemp,_V+80
  4010  003114  0060  F0F4  F0E8   	movff	btemp+1,_V+81
  4011  00311A                     l7575:
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;gemsecs.c: 93:      if (rxData_l == r_block.length + 1)
  4015  00311A  502F               	movf	r_protocol@rxData_l,w,c
  4016  00311C  6E46               	movwf	btemp+10,c
  4017  00311E  6A47               	clrf	btemp+11,c
  4018  003120  516C               	movf	(_r_block+12)& (0+255),w,b
  4019  003122  6E44               	movwf	btemp+8,c
  4020  003124  6A45               	clrf	btemp+9,c
  4021  003126  0E01               	movlw	1
  4022  003128  2644               	addwf	btemp+8,f,c
  4023  00312A  0E00               	movlw	0
  4024  00312C  2245               	addwfc	btemp+9,f,c
  4025  00312E  5046               	movf	btemp+10,w,c
  4026  003130  1844               	xorwf	btemp+8,w,c
  4027  003132  E109               	bnz	l7579
  4028  003134  5047               	movf	btemp+11,w,c
  4029  003136  1845               	xorwf	btemp+9,w,c
  4030  003138  A4D8               	btfss	status,2,c
  4031  00313A  D005               	goto	l7579
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;gemsecs.c: 94:       H10[1].checksum = (uint16_t) rxData << 8;
  4035                           ;stkvar	_rxData @ sp[(-1)+0]
  4036  00313C  0EFF               	movlw	-1
  4037  00313E  50E3               	movf	plusw1,w,c
  4038  003140  0101               	movlb	1	; () banked
  4039  003142  6F0E               	movwf	(_H10+14)& (0+255),b
  4040  003144  6B0D               	clrf	(_H10+13)& (0+255),b
  4041  003146                     l7579:
  4042                           
  4043                           ;gemsecs.c: 95:      if (rxData_l == r_block.length + 2)
  4044  003146  502F               	movf	r_protocol@rxData_l,w,c
  4045  003148  6E46               	movwf	btemp+10,c
  4046  00314A  6A47               	clrf	btemp+11,c
  4047  00314C  0100               	movlb	0	; () banked
  4048  00314E  516C               	movf	(_r_block+12)& (0+255),w,b
  4049  003150  6E44               	movwf	btemp+8,c
  4050  003152  6A45               	clrf	btemp+9,c
  4051  003154  0E02               	movlw	2
  4052  003156  2644               	addwf	btemp+8,f,c
  4053  003158  0E00               	movlw	0
  4054  00315A  2245               	addwfc	btemp+9,f,c
  4055  00315C  5046               	movf	btemp+10,w,c
  4056  00315E  1844               	xorwf	btemp+8,w,c
  4057  003160  E10A               	bnz	l7583
  4058  003162  5047               	movf	btemp+11,w,c
  4059  003164  1845               	xorwf	btemp+9,w,c
  4060  003166  A4D8               	btfss	status,2,c
  4061  003168  D006               	goto	l7583
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;gemsecs.c: 96:       H10[1].checksum += rxData;
  4065                           ;stkvar	_rxData @ sp[(-1)+0]
  4066  00316A  0EFF               	movlw	-1
  4067  00316C  50E3               	movf	plusw1,w,c
  4068  00316E  0101               	movlb	1	; () banked
  4069  003170  270D               	addwf	(_H10+13)& (0+255),f,b
  4070  003172  0E00               	movlw	0
  4071  003174  230E               	addwfc	(_H10+14)& (0+255),f,b
  4072  003176                     l7583:
  4073                           
  4074                           ;gemsecs.c: 98:      rxData_l++;
  4075  003176  2A2F               	incf	r_protocol@rxData_l,f,c
  4076                           
  4077                           ;gemsecs.c: 99:      if (rxData_l > (r_block.length + 2)) {
  4078  003178  502F               	movf	r_protocol@rxData_l,w,c
  4079  00317A  6E46               	movwf	btemp+10,c
  4080  00317C  6A47               	clrf	btemp+11,c
  4081  00317E  0100               	movlb	0	; () banked
  4082  003180  516C               	movf	(_r_block+12)& (0+255),w,b
  4083  003182  6E44               	movwf	btemp+8,c
  4084  003184  6A45               	clrf	btemp+9,c
  4085  003186  0E02               	movlw	2
  4086  003188  2644               	addwf	btemp+8,f,c
  4087  00318A  0E00               	movlw	0
  4088  00318C  2245               	addwfc	btemp+9,f,c
  4089  00318E  5046               	movf	btemp+10,w,c
  4090  003190  5C44               	subwf	btemp+8,w,c
  4091  003192  5045               	movf	btemp+9,w,c
  4092  003194  0A80               	xorlw	128
  4093  003196  6E3C               	movwf	btemp,c
  4094  003198  5047               	movf	btemp+11,w,c
  4095  00319A  0A80               	xorlw	128
  4096  00319C  583C               	subwfb	btemp,w,c
  4097  00319E  B0D8               	btfsc	status,0,c
  4098  0031A0  D092               	goto	l7637
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;gemsecs.c: 100:       if (V.r_checksum == H10[1].checksum) {
  4102  0031A2  0101               	movlb	1	; () banked
  4103  0031A4  510D               	movf	(_H10+13)& (0+255),w,b
  4104  0031A6  0100               	movlb	0	; () banked
  4105  0031A8  19E7               	xorwf	(_V+80)& (0+255),w,b
  4106  0031AA  E10E               	bnz	l7593
  4107  0031AC  0101               	movlb	1	; () banked
  4108  0031AE  510E               	movf	(_H10+14)& (0+255),w,b
  4109  0031B0  0100               	movlb	0	; () banked
  4110  0031B2  19E8               	xorwf	(_V+81)& (0+255),w,b
  4111  0031B4  A4D8               	btfss	status,2,c
  4112  0031B6  D008               	goto	l7593
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;gemsecs.c: 101:        *r_link = LINK_STATE_ACK;
  4116                           ;stkvar	_r_link @ sp[(-1)+-1]
  4117  0031B8  0EFE               	movlw	-2
  4118  0031BA  50E3               	movf	plusw1,w,c
  4119  0031BC  6ED9               	movwf	fsr2l,c
  4120  0031BE  6ADA               	clrf	fsr2h,c
  4121  0031C0  0E03               	movlw	3
  4122  0031C2  D047               	goto	L14
  4123  0031C4                     l7591:
  4124  0031C4  EC03  F029         	call	_UART1_Read	;wreg free
  4125  0031C8                     l7593:
  4126                           
  4127                           ;gemsecs.c: 103:        while (UART1_is_rx_ready())
  4128  0031C8  ECD5  F02C         	call	_UART1_is_rx_ready	;wreg free
  4129  0031CC  503C               	movf	btemp,w,c
  4130  0031CE  A4D8               	btfss	status,2,c
  4131  0031D0  D7F9               	goto	l7591
  4132                           
  4133                           ;gemsecs.c: 105:        WaitMs(500);
  4134  0031D2  0EF4               	movlw	244
  4135  0031D4  6EE6               	movwf	postinc1,c
  4136  0031D6  0E01               	movlw	1
  4137  0031D8  6EE6               	movwf	postinc1,c
  4138  0031DA  ECE8  F029         	call	_WaitMs	;wreg free
  4139                           
  4140                           ;gemsecs.c: 106:        V.error = LINK_ERROR_CHECKSUM;
  4141  0031DE  0E05               	movlw	5
  4142  0031E0  0100               	movlb	0	; () banked
  4143  0031E2  6FE5               	movwf	(_V+78)& (0+255),b
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;gemsecs.c: 107:        V.failed_receive = 2;
  4147  0031E4  51EC               	movf	(_V+85)& (0+255),w,b
  4148  0031E6  0BF0               	andlw	-16
  4149  0031E8  0902               	iorlw	2
  4150  0031EA  D74F               	goto	L15
  4151  0031EC                     l7603:
  4152                           
  4153                           ;gemsecs.c: 116:   V.stream = H10[1].block.block.stream;
  4154  0031EC  0101               	movlb	1	; () banked
  4155  0031EE  5116               	movf	(_H10+22)& (0+255),w,b
  4156  0031F0  0B7F               	andlw	127
  4157  0031F2  0100               	movlb	0	; () banked
  4158  0031F4  6FE3               	movwf	(_V+76)& (0+255),b
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;gemsecs.c: 117:   V.function = H10[1].block.block.function;
  4162  0031F6  C115  F0E4         	movff	_H10+21,_V+77
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;gemsecs.c: 118:   V.systemb = H10[1].block.block.systemb;
  4166  0031FA  C10F  F0DF         	movff	_H10+15,_V+72
  4167  0031FE  C110  F0E0         	movff	_H10+16,_V+73
  4168  003202  C111  F0E1         	movff	_H10+17,_V+74
  4169  003206  C112  F0E2         	movff	_H10+18,_V+75
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;gemsecs.c: 119:   V.rbit = H10[1].block.block.rbit;
  4173  00320A  0101               	movlb	1	; () banked
  4174  00320C  AF18               	btfss	(_H10+24)& (0+255),7,b
  4175  00320E  D003               	bra	u4285
  4176  003210  0100               	movlb	0	; () banked
  4177  003212  81EB               	bsf	(_V+84)& (0+255),0,b
  4178  003214  D002               	bra	u4287
  4179  003216                     u4285:
  4180  003216  0100               	movlb	0	; () banked
  4181  003218  91EB               	bcf	(_V+84)& (0+255),0,b
  4182  00321A                     u4287:
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;gemsecs.c: 120:   V.wbit = H10[1].block.block.wbit;
  4186  00321A  0101               	movlb	1	; () banked
  4187  00321C  AF16               	btfss	(_H10+22)& (0+255),7,b
  4188  00321E  D003               	bra	u4295
  4189  003220  0100               	movlb	0	; () banked
  4190  003222  83EB               	bsf	(_V+84)& (0+255),1,b
  4191  003224  D002               	bra	u4297
  4192  003226                     u4295:
  4193  003226  0100               	movlb	0	; () banked
  4194  003228  93EB               	bcf	(_V+84)& (0+255),1,b
  4195  00322A                     u4297:
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;gemsecs.c: 121:   V.ebit = H10[1].block.block.ebit;
  4199  00322A  0101               	movlb	1	; () banked
  4200  00322C  AF14               	btfss	(_H10+20)& (0+255),7,b
  4201  00322E  D003               	bra	u4305
  4202  003230  0100               	movlb	0	; () banked
  4203  003232  85EB               	bsf	(_V+84)& (0+255),2,b
  4204  003234  D002               	bra	u4307
  4205  003236                     u4305:
  4206  003236  0100               	movlb	0	; () banked
  4207  003238  95EB               	bcf	(_V+84)& (0+255),2,b
  4208  00323A                     u4307:
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;gemsecs.c: 122:   UART1_Write(0x06);
  4212  00323A  0E06               	movlw	6
  4213  00323C  6EE6               	movwf	postinc1,c
  4214  00323E  ECE4  F028         	call	_UART1_Write	;wreg free
  4215                           
  4216                           ; BSR set to: 57
  4217                           ;gemsecs.c: 123:   V.failed_receive = 0;
  4218  003242  0EF0               	movlw	-16
  4219  003244  0100               	movlb	0	; () banked
  4220  003246  17EC               	andwf	(_V+85)& (0+255),f,b
  4221                           
  4222                           ;gemsecs.c: 124:   *r_link = LINK_STATE_DONE;
  4223                           ;stkvar	_r_link @ sp[(-1)+-1]
  4224  003248  0EFE               	movlw	-2
  4225  00324A  50E3               	movf	plusw1,w,c
  4226  00324C  6ED9               	movwf	fsr2l,c
  4227  00324E  6ADA               	clrf	fsr2h,c
  4228  003250  0E04               	movlw	4
  4229  003252                     L14:
  4230  003252  6EDF               	movwf	indf2,c
  4231                           
  4232                           ;gemsecs.c: 125:   break;
  4233  003254  D038               	goto	l7637
  4234  003256                     l7619:
  4235                           
  4236                           ;gemsecs.c: 127:   UART1_Write(0x15);
  4237  003256  0E15               	movlw	21
  4238  003258  6EE6               	movwf	postinc1,c
  4239  00325A  ECE4  F028         	call	_UART1_Write	;wreg free
  4240                           
  4241                           ; BSR set to: 57
  4242                           ;gemsecs.c: 128:   *r_link = LINK_STATE_ERROR;
  4243                           ;stkvar	_r_link @ sp[(-1)+-1]
  4244  00325E  0EFE               	movlw	-2
  4245  003260  50E3               	movf	plusw1,w,c
  4246  003262  6ED9               	movwf	fsr2l,c
  4247  003264  6ADA               	clrf	fsr2h,c
  4248  003266  0E06               	movlw	6
  4249  003268  6EDF               	movwf	indf2,c
  4250                           
  4251                           ;gemsecs.c: 129:   while ((uart1RxCount)) {
  4252  00326A  D002               	goto	l7625
  4253  00326C                     l7623:
  4254                           
  4255                           ; BSR set to: 57
  4256                           ;gemsecs.c: 130:    UART1_Read();
  4257  00326C  EC03  F029         	call	_UART1_Read	;wreg free
  4258  003270                     l7625:
  4259                           
  4260                           ; BSR set to: 57
  4261                           ;gemsecs.c: 129:   while ((uart1RxCount)) {
  4262  003270  5036               	movf	_uart1RxCount,w,c	;volatile
  4263  003272  A4D8               	btfss	status,2,c
  4264  003274  D7FB               	goto	l7623
  4265                           
  4266                           ; BSR set to: 57
  4267                           ;gemsecs.c: 132:   retry = 3;
  4268  003276  0E03               	movlw	3
  4269  003278  6E5E               	movwf	r_protocol@retry,c
  4270                           
  4271                           ;gemsecs.c: 133:   break;
  4272  00327A  D025               	goto	l7637
  4273  00327C                     l7629:
  4274                           
  4275                           ;gemsecs.c: 137:   V.failed_receive = 0;
  4276  00327C  0EF0               	movlw	-16
  4277  00327E  0100               	movlb	0	; () banked
  4278  003280  17EC               	andwf	(_V+85)& (0+255),f,b
  4279  003282  D70A               	goto	l7553
  4280  003284                     l7635:
  4281                           
  4282                           ;stkvar	_r_link @ sp[(-1)+-1]
  4283  003284  0EFE               	movlw	-2
  4284  003286  50E3               	movf	plusw1,w,c
  4285  003288  6ED9               	movwf	fsr2l,c
  4286  00328A  6ADA               	clrf	fsr2h,c
  4287  00328C  50DF               	movf	indf2,w,c
  4288  00328E  6E46               	movwf	btemp+10,c
  4289  003290  6A47               	clrf	btemp+11,c
  4290                           
  4291                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4292                           ; Switch size 1, requested type "simple"
  4293                           ; Number of cases is 1, Range of values is 0 to 0
  4294                           ; switch strategies available:
  4295                           ; Name         Instructions Cycles
  4296                           ; simple_byte            4     3 (average)
  4297                           ;	Chosen strategy is simple_byte
  4298  003292  5047               	movf	btemp+11,w,c
  4299  003294  0A00               	xorlw	0	; case 0
  4300  003296  A4D8               	btfss	status,2,c
  4301  003298  D6FF               	goto	l7553
  4302                           
  4303                           ; Switch size 1, requested type "simple"
  4304                           ; Number of cases is 7, Range of values is 0 to 6
  4305                           ; switch strategies available:
  4306                           ; Name         Instructions Cycles
  4307                           ; simple_byte           22    12 (average)
  4308                           ;	Chosen strategy is simple_byte
  4309  00329A  5046               	movf	btemp+10,w,c
  4310  00329C  0A00               	xorlw	0	; case 0
  4311  00329E  B4D8               	btfsc	status,2,c
  4312  0032A0  D6B5               	goto	l7529
  4313  0032A2  0A01               	xorlw	1	; case 1
  4314  0032A4  B4D8               	btfsc	status,2,c
  4315  0032A6  D6CD               	goto	l1505
  4316  0032A8  0A03               	xorlw	3	; case 2
  4317  0032AA  B4D8               	btfsc	status,2,c
  4318  0032AC  D6DD               	goto	l7545
  4319  0032AE  0A01               	xorlw	1	; case 3
  4320  0032B0  B4D8               	btfsc	status,2,c
  4321  0032B2  D79C               	goto	l7603
  4322  0032B4  0A07               	xorlw	7	; case 4
  4323  0032B6  B4D8               	btfsc	status,2,c
  4324  0032B8  D7E1               	goto	l7629
  4325  0032BA  0A01               	xorlw	1	; case 5
  4326  0032BC  B4D8               	btfsc	status,2,c
  4327  0032BE  D7CB               	goto	l7619
  4328  0032C0  0A03               	xorlw	3	; case 6
  4329  0032C2  A4D8               	btfss	status,2,c
  4330  0032C4  D6E9               	goto	l7553
  4331  0032C6                     l7637:
  4332                           
  4333                           ;gemsecs.c: 143:  return *r_link;
  4334                           ;stkvar	_r_link @ sp[(-1)+-1]
  4335  0032C6  0EFE               	movlw	-2
  4336  0032C8  50E3               	movf	plusw1,w,c
  4337  0032CA  6ED9               	movwf	fsr2l,c
  4338  0032CC  6ADA               	clrf	fsr2h,c
  4339  0032CE  50DF               	movf	indf2,w,c
  4340  0032D0  6E3C               	movwf	btemp,c
  4341                           
  4342                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4343  0032D2  52E5               	movf	postdec1,f,c
  4344  0032D4  52E5               	movf	postdec1,f,c
  4345  0032D6  0012               	return		;funcret
  4346  0032D8                     __end_of_r_protocol:
  4347                           	opt callstack 0
  4348                           
  4349 ;; *************** function _run_checksum *****************
  4350 ;; Defined at:
  4351 ;;		line 31 in file "gemsecs.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  byte_block      1  [STACK] unsigned char 
  4354 ;;  clear           1  [STACK] _Bool 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  2  [STACK] unsigned short 
  4359 ;; Registers used:
  4360 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  4361 ;; Tracked objects:
  4362 ;;		On entry : 6/39
  4363 ;;		On exit  : 3F/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4370 ;;Total ram usage:        0 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:    3
  4373 ;; This function calls:
  4374 ;;		Nothing
  4375 ;; This function is called by:
  4376 ;;		_r_protocol
  4377 ;; This function uses a reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text9
  4381  0052F6                     __ptext9:
  4382                           	opt callstack 0
  4383  0052F6                     _run_checksum:
  4384                           	opt callstack 26
  4385                           
  4386                           ;gemsecs.c: 31: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 32: {;
      +                          gemsecs.c: 33:  static uint16_t sum = 0;;gemsecs.c: 35:  if (clear)
  4387                           ;stkvar	_clear @ sp[(0)+-2]
  4388                           
  4389                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4390                           ;incstack = 0
  4391  0052F6  0EFE               	movlw	-2
  4392  0052F8  50E3               	movf	plusw1,w,c
  4393  0052FA  B4D8               	btfsc	status,2,c
  4394  0052FC  D003               	goto	l5485
  4395                           
  4396                           ;gemsecs.c: 36:   sum = 0;
  4397  0052FE  0100               	movlb	0	; () banked
  4398  005300  6B95               	clrf	run_checksum@sum& (0+255),b
  4399  005302  6B96               	clrf	(run_checksum@sum+1)& (0+255),b
  4400  005304                     l5485:
  4401                           
  4402                           ;gemsecs.c: 38:  sum += byte_block;
  4403                           ;stkvar	_byte_block @ sp[(0)+-1]
  4404  005304  0EFF               	movlw	-1
  4405  005306  50E3               	movf	plusw1,w,c
  4406  005308  0100               	movlb	0	; () banked
  4407  00530A  2795               	addwf	run_checksum@sum& (0+255),f,b
  4408  00530C  0E00               	movlw	0
  4409  00530E  2396               	addwfc	(run_checksum@sum+1)& (0+255),f,b
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;gemsecs.c: 39:  return sum;
  4413  005310  0060  F254  F03C   	movff	run_checksum@sum,btemp
  4414  005316  0060  F258  F03D   	movff	run_checksum@sum+1,btemp+1
  4415                           
  4416                           ; BSR set to: 0
  4417                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  4418  00531C  52E5               	movf	postdec1,f,c
  4419  00531E  52E5               	movf	postdec1,f,c
  4420  005320  0012               	return		;funcret
  4421  005322                     __end_of_run_checksum:
  4422                           	opt callstack 0
  4423                           
  4424 ;; *************** function _WaitMs *****************
  4425 ;; Defined at:
  4426 ;;		line 31 in file "timers.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  numMilliseco    2  [STACK] unsigned short 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1  [STACK] void 
  4433 ;; Registers used:
  4434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/3B
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4444 ;;Total ram usage:        0 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    4
  4447 ;; This function calls:
  4448 ;;		_StartTimer
  4449 ;;		_TimerDone
  4450 ;; This function is called by:
  4451 ;;		_main
  4452 ;;		_r_protocol
  4453 ;; This function uses a reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text10
  4457  0053D0                     __ptext10:
  4458                           	opt callstack 0
  4459  0053D0                     _WaitMs:
  4460                           	opt callstack 25
  4461                           
  4462                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  4463                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  4464                           
  4465                           ; BSR set to: 0
  4466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4467                           ;incstack = 0
  4468  0053D0  0EFE               	movlw	-2
  4469  0053D2  006F FF8F FFE6     	movff	plusw1,postinc1
  4470  0053D8  006F FF8F FFE6     	movff	plusw1,postinc1
  4471  0053DE  0E00               	movlw	0
  4472  0053E0  6EE6               	movwf	postinc1,c
  4473  0053E2  EC41  F029         	call	_StartTimer	;wreg free
  4474  0053E6                     l5423:
  4475                           
  4476                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  4477  0053E6  0E00               	movlw	0
  4478  0053E8  6EE6               	movwf	postinc1,c
  4479  0053EA  EC8D  F02B         	call	_TimerDone	;wreg free
  4480  0053EE  503C               	movf	btemp,w,c
  4481  0053F0  B4D8               	btfsc	status,2,c
  4482  0053F2  D7F9               	goto	l5423
  4483                           
  4484                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  4485  0053F4  52E5               	movf	postdec1,f,c
  4486  0053F6  52E5               	movf	postdec1,f,c
  4487  0053F8  0012               	return		;funcret
  4488  0053FA                     __end_of_WaitMs:
  4489                           	opt callstack 0
  4490                           
  4491 ;; *************** function _TimerDone *****************
  4492 ;; Defined at:
  4493 ;;		line 20 in file "timers.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  timer           1  [STACK] unsigned char 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;		None
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1  [STACK] _Bool 
  4500 ;; Registers used:
  4501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4511 ;;Total ram usage:        0 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:    3
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_r_protocol
  4518 ;;		_t_protocol
  4519 ;;		_WaitMs
  4520 ;; This function uses a reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text11
  4524  00571A                     __ptext11:
  4525                           	opt callstack 0
  4526  00571A                     _TimerDone:
  4527                           	opt callstack 26
  4528                           
  4529                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  4530                           ;stkvar	_timer @ sp[(0)+-1]
  4531                           
  4532                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4533                           ;incstack = 0
  4534  00571A  0EFF               	movlw	-1
  4535  00571C  50E3               	movf	plusw1,w,c
  4536  00571E  0D02               	mullw	2
  4537  005720  50F3               	movf	prodl,w,c
  4538  005722  0F79               	addlw	low _tickCount
  4539  005724  6ED9               	movwf	fsr2l,c
  4540  005726  6ADA               	clrf	fsr2h,c
  4541  005728  50DE               	movf	postinc2,w,c
  4542  00572A  10DE               	iorwf	postinc2,w,c
  4543  00572C  A4D8               	btfss	status,2,c
  4544  00572E  D002               	goto	l5269
  4545                           
  4546                           ;timers.c: 23:   return 1;
  4547  005730  0E01               	movlw	1
  4548  005732  D001               	goto	L16
  4549  005734                     l5269:
  4550                           
  4551                           ;timers.c: 25:  return 0;
  4552  005734  0E00               	movlw	0
  4553  005736                     L16:
  4554  005736  6E3C               	movwf	btemp,c
  4555                           
  4556                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4557  005738  52E5               	movf	postdec1,f,c
  4558  00573A  0012               	return		;funcret
  4559  00573C                     __end_of_TimerDone:
  4560                           	opt callstack 0
  4561                           
  4562 ;; *************** function _StartTimer *****************
  4563 ;; Defined at:
  4564 ;;		line 12 in file "timers.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  timer           1  [STACK] unsigned char 
  4567 ;;  count           2  [STACK] unsigned short 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;		None
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1  [STACK] void 
  4572 ;; Registers used:
  4573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/39
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4583 ;;Total ram usage:        0 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; Hardware stack levels required when called:    3
  4586 ;; This function calls:
  4587 ;;		Nothing
  4588 ;; This function is called by:
  4589 ;;		_r_protocol
  4590 ;;		_t_protocol
  4591 ;;		_WaitMs
  4592 ;; This function uses a reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text12
  4596  005282                     __ptext12:
  4597                           	opt callstack 0
  4598  005282                     _StartTimer:
  4599                           	opt callstack 26
  4600                           
  4601                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  4602                           ;stkvar	_count @ sp[(0)+-3]
  4603                           
  4604                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4605                           ;incstack = 0
  4606  005282  0EFD               	movlw	-3
  4607  005284  006F FF8C  F046    	movff	plusw1,btemp+10
  4608  00528A  0EFE               	movlw	-2
  4609  00528C  006F FF8C  F047    	movff	plusw1,btemp+11
  4610  005292  90D8               	bcf	status,0,c
  4611  005294  3446               	rlcf	btemp+10,w,c
  4612  005296  6E44               	movwf	btemp+8,c
  4613  005298  3447               	rlcf	btemp+11,w,c
  4614  00529A  6E45               	movwf	btemp+9,c
  4615                           
  4616                           ;stkvar	_timer @ sp[(0)+-1]
  4617  00529C  0EFF               	movlw	-1
  4618  00529E  50E3               	movf	plusw1,w,c
  4619  0052A0  0D02               	mullw	2
  4620  0052A2  50F3               	movf	prodl,w,c
  4621  0052A4  0F79               	addlw	low _tickCount
  4622  0052A6  6ED9               	movwf	fsr2l,c
  4623  0052A8  6ADA               	clrf	fsr2h,c
  4624  0052AA  0060  F113  FFDE   	movff	btemp+8,postinc2
  4625  0052B0  0060  F117  FFDD   	movff	btemp+9,postdec2
  4626                           
  4627                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  4628  0052B6  52E5               	movf	postdec1,f,c
  4629  0052B8  52E5               	movf	postdec1,f,c
  4630  0052BA  52E5               	movf	postdec1,f,c
  4631  0052BC  0012               	return		;funcret
  4632  0052BE                     __end_of_StartTimer:
  4633                           	opt callstack 0
  4634                           
  4635 ;; *************** function _UART1_is_rx_ready *****************
  4636 ;; Defined at:
  4637 ;;		line 146 in file "mcc_generated_files/uart1.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;		None
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;		None
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  1  [STACK] unsigned char 
  4644 ;; Registers used:
  4645 ;;		btemp
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4655 ;;Total ram usage:        0 bytes
  4656 ;; Hardware stack levels used:    1
  4657 ;; Hardware stack levels required when called:    3
  4658 ;; This function calls:
  4659 ;;		Nothing
  4660 ;; This function is called by:
  4661 ;;		_r_protocol
  4662 ;;		_t_protocol
  4663 ;; This function uses a reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text13
  4667  0059AA                     __ptext13:
  4668                           	opt callstack 0
  4669  0059AA                     _UART1_is_rx_ready:
  4670                           	opt callstack 26
  4671                           
  4672                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  4673                           
  4674                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4675                           ;incstack = 0
  4676  0059AA  0060  F0D8  F03C   	movff	_uart1RxCount,btemp	;volatile
  4677                           
  4678                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4679  0059B0  0012               	return		;funcret
  4680  0059B2                     __end_of_UART1_is_rx_ready:
  4681                           	opt callstack 0
  4682                           
  4683 ;; *************** function _UART1_Write *****************
  4684 ;; Defined at:
  4685 ;;		line 179 in file "mcc_generated_files/uart1.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;  txData          1  [STACK] unsigned char 
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;		None
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  1  [STACK] void 
  4692 ;; Registers used:
  4693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 3F/39
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4703 ;;Total ram usage:        0 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; Hardware stack levels required when called:    3
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_r_protocol
  4710 ;;		_t_protocol
  4711 ;;		_secs_send
  4712 ;; This function uses a reentrant model
  4713 ;;
  4714                           
  4715                           	psect	text14
  4716  0051C8                     __ptext14:
  4717                           	opt callstack 0
  4718  0051C8                     _UART1_Write:
  4719                           	opt callstack 25
  4720                           
  4721                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4722                           
  4723                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4724                           
  4725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4726                           ;incstack = 0
  4727  0051C8  5039               	movf	_uart1TxBufferRemaining,w,c	;volatile
  4728  0051CA  B4D8               	btfsc	status,2,c
  4729  0051CC  D7FD               	goto	_UART1_Write
  4730                           
  4731                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  4732  0051CE  0139               	movlb	57	; () banked
  4733  0051D0  B993               	btfsc	147,4,b	;volatile
  4734  0051D2  D005               	goto	l579
  4735                           
  4736                           ; BSR set to: 57
  4737                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  4738                           ;stkvar	_txData @ sp[(0)+-1]
  4739  0051D4  0EFF               	movlw	-1
  4740  0051D6  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  4741                           
  4742                           ;mcc_generated_files/uart1.c: 186:  } else {
  4743  0051DC  D011               	goto	l6949
  4744  0051DE                     l579:
  4745                           
  4746                           ; BSR set to: 57
  4747                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  4748  0051DE  9993               	bcf	147,4,b	;volatile
  4749                           
  4750                           ; BSR set to: 57
  4751                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  4752                           ;stkvar	_txData @ sp[(0)+-1]
  4753  0051E0  0E80               	movlw	low _uart1TxBuffer
  4754  0051E2  243B               	addwf	_uart1TxHead,w,c	;volatile
  4755  0051E4  6ED9               	movwf	fsr2l,c
  4756  0051E6  6ADA               	clrf	fsr2h,c
  4757  0051E8  0E02               	movlw	high _uart1TxBuffer
  4758  0051EA  22DA               	addwfc	fsr2h,f,c
  4759  0051EC  0EFF               	movlw	-1
  4760  0051EE  006F FF8F FFDF     	movff	plusw1,indf2
  4761                           
  4762                           ; BSR set to: 57
  4763  0051F4  2A3B               	incf	_uart1TxHead,f,c	;volatile
  4764                           
  4765                           ; BSR set to: 57
  4766                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  4767  0051F6  0E3F               	movlw	63
  4768  0051F8  643B               	cpfsgt	_uart1TxHead,c
  4769  0051FA  D001               	goto	l6947
  4770                           
  4771                           ; BSR set to: 57
  4772                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  4773  0051FC  6A3B               	clrf	_uart1TxHead,c	;volatile
  4774  0051FE                     l6947:
  4775                           
  4776                           ; BSR set to: 57
  4777                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  4778  0051FE  0639               	decf	_uart1TxBufferRemaining,f,c	;volatile
  4779  005200                     l6949:
  4780                           
  4781                           ; BSR set to: 57
  4782                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  4783  005200  8993               	bsf	147,4,b	;volatile
  4784                           
  4785                           ; BSR set to: 57
  4786                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4787  005202  52E5               	movf	postdec1,f,c
  4788  005204  0012               	return		;funcret
  4789  005206                     __end_of_UART1_Write:
  4790                           	opt callstack 0
  4791                           
  4792 ;; *************** function _UART1_Read *****************
  4793 ;; Defined at:
  4794 ;;		line 161 in file "mcc_generated_files/uart1.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;		None
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;  readValue       1  [STACK] unsigned char 
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1  [STACK] unsigned char 
  4801 ;; Registers used:
  4802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 3F/39
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4812 ;;Total ram usage:        0 bytes
  4813 ;; Hardware stack levels used:    1
  4814 ;; Hardware stack levels required when called:    3
  4815 ;; This function calls:
  4816 ;;		Nothing
  4817 ;; This function is called by:
  4818 ;;		_r_protocol
  4819 ;;		_t_protocol
  4820 ;; This function uses a reentrant model
  4821 ;;
  4822                           
  4823                           	psect	text15
  4824  005206                     __ptext15:
  4825                           	opt callstack 0
  4826  005206                     _UART1_Read:
  4827                           	opt callstack 0
  4828                           
  4829                           ; BSR set to: 57
  4830                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4831  005206  52E6               	movf	postinc1,f,c
  4832  005208                     
  4833                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4834                           
  4835                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4836  005208  5036               	movf	_uart1RxCount,w,c	;volatile
  4837  00520A  B4D8               	btfsc	status,2,c
  4838  00520C  D7FD               	goto	l7099
  4839                           
  4840                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  4841  00520E  0E40               	movlw	low _uart1RxBuffer
  4842  005210  2437               	addwf	_uart1RxTail,w,c	;volatile
  4843  005212  6ED9               	movwf	fsr2l,c
  4844  005214  6ADA               	clrf	fsr2h,c
  4845  005216  0E02               	movlw	high _uart1RxBuffer
  4846  005218  22DA               	addwfc	fsr2h,f,c
  4847  00521A  50DF               	movf	indf2,w,c
  4848  00521C  6E47               	movwf	btemp+11,c
  4849                           
  4850                           ;stkvar	_readValue @ sp[(-1)+0]
  4851  00521E  0EFF               	movlw	-1
  4852  005220  0060  F11F  FFE3   	movff	btemp+11,plusw1
  4853  005226  2A37               	incf	_uart1RxTail,f,c	;volatile
  4854                           
  4855                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  4856  005228  0E3F               	movlw	63
  4857  00522A  6437               	cpfsgt	_uart1RxTail,c
  4858  00522C  D001               	goto	l572
  4859                           
  4860                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  4861  00522E  6A37               	clrf	_uart1RxTail,c	;volatile
  4862  005230                     l572:
  4863                           
  4864                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  4865  005230  0139               	movlb	57	; () banked
  4866  005232  9793               	bcf	147,3,b	;volatile
  4867                           
  4868                           ; BSR set to: 57
  4869                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  4870  005234  0636               	decf	_uart1RxCount,f,c	;volatile
  4871                           
  4872                           ; BSR set to: 57
  4873                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  4874  005236  8793               	bsf	147,3,b	;volatile
  4875                           
  4876                           ; BSR set to: 57
  4877                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  4878                           ;stkvar	_readValue @ sp[(-1)+0]
  4879  005238  0EFF               	movlw	-1
  4880  00523A  006F FF8C  F03C    	movff	plusw1,btemp
  4881                           
  4882                           ; BSR set to: 57
  4883                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4884  005240  52E5               	movf	postdec1,f,c
  4885  005242  0012               	return		;funcret
  4886  005244                     __end_of_UART1_Read:
  4887                           	opt callstack 0
  4888                           
  4889 ;; *************** function _init_display *****************
  4890 ;; Defined at:
  4891 ;;		line 35 in file "eadog.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;		None
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;		None
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1  [STACK] void 
  4898 ;; Registers used:
  4899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 3F/3D
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4909 ;;Total ram usage:        0 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    5
  4912 ;; This function calls:
  4913 ;;		_ringBufS_init
  4914 ;;		_send_lcd_cmd
  4915 ;;		_send_lcd_cmd_long
  4916 ;;		_wdtdelay
  4917 ;; This function is called by:
  4918 ;;		_main
  4919 ;; This function uses a reentrant model
  4920 ;;
  4921                           
  4922                           	psect	text16
  4923  004472                     __ptext16:
  4924                           	opt callstack 0
  4925  004472                     _init_display:
  4926                           	opt callstack 25
  4927                           
  4928                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  4929                           
  4930                           ; BSR set to: 57
  4931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4932                           ;incstack = 0
  4933  004472  0E83               	movlw	low _ring_buf1
  4934  004474  0100               	movlb	0	; () banked
  4935  004476  6F73               	movwf	(_spi_link+6)& (0+255),b	;volatile
  4936  004478  0E03               	movlw	high _ring_buf1
  4937  00447A  6F74               	movwf	(_spi_link+7)& (0+255),b	;volatile
  4938                           
  4939                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  4940  00447C  0E40               	movlw	low _ring_buf2
  4941  00447E  6F71               	movwf	(_spi_link+4)& (0+255),b	;volatile
  4942  004480  0E03               	movlw	high _ring_buf2
  4943  004482  6F72               	movwf	(_spi_link+5)& (0+255),b	;volatile
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  4947  004484  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  4948  00448A  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  4949  004490  EC3B  F02A         	call	_ringBufS_init	;wreg free
  4950                           
  4951                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  4952  004494  0060  F1C7  FFE6   	movff	_spi_link+4,postinc1
  4953  00449A  0060  F1CB  FFE6   	movff	_spi_link+5,postinc1
  4954  0044A0  EC3B  F02A         	call	_ringBufS_init	;wreg free
  4955                           
  4956                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  4957  0044A4  80BE               	bsf	16318,0,c	;volatile
  4958  0044A6  84BC               	bsf	16316,2,c	;volatile
  4959                           
  4960                           ;eadog.c: 44:  wdtdelay(350000);
  4961  0044A8  0E30               	movlw	48
  4962  0044AA  6EE6               	movwf	postinc1,c
  4963  0044AC  0E57               	movlw	87
  4964  0044AE  6EE6               	movwf	postinc1,c
  4965  0044B0  0E05               	movlw	5
  4966  0044B2  6EE6               	movwf	postinc1,c
  4967  0044B4  0E00               	movlw	0
  4968  0044B6  6EE6               	movwf	postinc1,c
  4969  0044B8  EC9A  F027         	call	_wdtdelay	;wreg free
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  4973  0044BC  0E39               	movlw	57
  4974  0044BE  6EE6               	movwf	postinc1,c
  4975  0044C0  EC27  F02A         	call	_send_lcd_cmd	;wreg free
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  4979  0044C4  0E1D               	movlw	29
  4980  0044C6  6EE6               	movwf	postinc1,c
  4981  0044C8  EC27  F02A         	call	_send_lcd_cmd	;wreg free
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  4985  0044CC  0E50               	movlw	80
  4986  0044CE  6EE6               	movwf	postinc1,c
  4987  0044D0  EC27  F02A         	call	_send_lcd_cmd	;wreg free
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  4991  0044D4  0E6C               	movlw	108
  4992  0044D6  6EE6               	movwf	postinc1,c
  4993  0044D8  EC27  F02A         	call	_send_lcd_cmd	;wreg free
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  4997  0044DC  0E76               	movlw	118
  4998  0044DE  6EE6               	movwf	postinc1,c
  4999  0044E0  EC27  F02A         	call	_send_lcd_cmd	;wreg free
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  5003  0044E4  0E38               	movlw	56
  5004  0044E6  6EE6               	movwf	postinc1,c
  5005  0044E8  EC13  F02A         	call	_send_lcd_cmd_long	;wreg free
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  5009  0044EC  0E0F               	movlw	15
  5010  0044EE  6EE6               	movwf	postinc1,c
  5011  0044F0  EC27  F02A         	call	_send_lcd_cmd	;wreg free
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  5015  0044F4  0E01               	movlw	1
  5016  0044F6  6EE6               	movwf	postinc1,c
  5017  0044F8  EC13  F02A         	call	_send_lcd_cmd_long	;wreg free
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  5021  0044FC  0E02               	movlw	2
  5022  0044FE  6EE6               	movwf	postinc1,c
  5023  004500  EC27  F02A         	call	_send_lcd_cmd	;wreg free
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  5027  004504  0E06               	movlw	6
  5028  004506  6EE6               	movwf	postinc1,c
  5029  004508  EC27  F02A         	call	_send_lcd_cmd	;wreg free
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;eadog.c: 55:  wdtdelay(30);
  5033  00450C  0E1E               	movlw	30
  5034  00450E  6EE6               	movwf	postinc1,c
  5035  004510  0E00               	movlw	0
  5036  004512  6EE6               	movwf	postinc1,c
  5037  004514  0E00               	movlw	0
  5038  004516  6EE6               	movwf	postinc1,c
  5039  004518  0E00               	movlw	0
  5040  00451A  6EE6               	movwf	postinc1,c
  5041  00451C  EC9A  F027         	call	_wdtdelay	;wreg free
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  5045  004520  0E02               	movlw	2
  5046  004522  013D               	movlb	61	; () banked
  5047  004524  6F16               	movwf	22,b	;volatile
  5048                           
  5049                           ; BSR set to: 61
  5050                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  5051  004526  0E40               	movlw	64
  5052  004528  6F15               	movwf	21,b	;volatile
  5053                           
  5054                           ; BSR set to: 61
  5055                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  5056  00452A  0E83               	movlw	131
  5057  00452C  6F14               	movwf	20,b	;volatile
  5058                           
  5059                           ; BSR set to: 61
  5060                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  5061  00452E  931A               	bcf	26,1,b	;volatile
  5062                           
  5063                           ; BSR set to: 61
  5064                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  5065  004530  0E3F               	movlw	-193
  5066  004532  013B               	movlb	59	; () banked
  5067  004534  17FD               	andwf	253,f,b	;volatile
  5068                           
  5069                           ; BSR set to: 59
  5070                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  5071  004536  9BFD               	bcf	253,5,b	;volatile
  5072                           
  5073                           ; BSR set to: 59
  5074                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  5075  004538  51FD               	movf	253,w,b	;volatile
  5076  00453A  0BF9               	andlw	-7
  5077  00453C  0902               	iorlw	2
  5078  00453E  6FFD               	movwf	253,b	;volatile
  5079                           
  5080                           ; BSR set to: 59
  5081                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  5082  004540  0EE7               	movlw	-25
  5083  004542  17FD               	andwf	253,f,b	;volatile
  5084                           
  5085                           ; BSR set to: 59
  5086                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  5087  004544  81FD               	bsf	253,0,b	;volatile
  5088                           
  5089                           ; BSR set to: 59
  5090                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  5091  004546  0E83               	movlw	low _ring_buf1
  5092  004548  6FF9               	movwf	249,b	;volatile
  5093  00454A  0E03               	movlw	high _ring_buf1
  5094  00454C  6FFA               	movwf	250,b	;volatile
  5095  00454E  0E00               	movlw	low (_ring_buf1 shr (0+16))
  5096  004550  6FFB               	movwf	251,b	;volatile
  5097                           
  5098                           ; BSR set to: 59
  5099                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  5100  004552  9BFC               	bcf	252,5,b	;volatile
  5101                           
  5102                           ; BSR set to: 59
  5103                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  5104  004554  013D               	movlb	61	; () banked
  5105  004556  831A               	bsf	26,1,b	;volatile
  5106                           
  5107                           ; BSR set to: 61
  5108                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  5109  004558  90BE               	bcf	16318,0,c	;volatile
  5110                           
  5111                           ; BSR set to: 61
  5112                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5113  00455A  0012               	return		;funcret
  5114  00455C                     __end_of_init_display:
  5115                           	opt callstack 0
  5116                           
  5117 ;; *************** function _send_lcd_cmd_long *****************
  5118 ;; Defined at:
  5119 ;;		line 97 in file "eadog.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  cmd             1  [STACK] unsigned char 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;		None
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1  [STACK] void 
  5126 ;; Registers used:
  5127 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5128 ;; Tracked objects:
  5129 ;;		On entry : 3F/0
  5130 ;;		On exit  : 3F/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5137 ;;Total ram usage:        0 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; Hardware stack levels required when called:    4
  5140 ;; This function calls:
  5141 ;;		_SPI1_Exchange8bit
  5142 ;;		_wdtdelay
  5143 ;; This function is called by:
  5144 ;;		_init_display
  5145 ;; This function uses a reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text17
  5149  005426                     __ptext17:
  5150                           	opt callstack 0
  5151  005426                     _send_lcd_cmd_long:
  5152                           	opt callstack 25
  5153                           
  5154                           ; BSR set to: 61
  5155                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5156                           ;incstack = 0
  5157                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  5158  005426  92BC               	bcf	16316,1,c	;volatile
  5159                           
  5160                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  5161  005428  94BC               	bcf	16316,2,c	;volatile
  5162                           
  5163                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  5164                           ;stkvar	_cmd @ sp[(0)+-1]
  5165  00542A  0EFF               	movlw	-1
  5166  00542C  50E3               	movf	plusw1,w,c
  5167  00542E  6EE6               	movwf	postinc1,c
  5168  005430  EC13  F02C         	call	_SPI1_Exchange8bit	;wreg free
  5169                           
  5170                           ; BSR set to: 57
  5171                           ;eadog.c: 102:  wdtdelay(800);
  5172  005434  0E20               	movlw	32
  5173  005436  6EE6               	movwf	postinc1,c
  5174  005438  0E03               	movlw	3
  5175  00543A  6EE6               	movwf	postinc1,c
  5176  00543C  0E00               	movlw	0
  5177  00543E  6EE6               	movwf	postinc1,c
  5178  005440  0E00               	movlw	0
  5179  005442  6EE6               	movwf	postinc1,c
  5180  005444  EC9A  F027         	call	_wdtdelay	;wreg free
  5181                           
  5182                           ; BSR set to: 0
  5183  005448  82BC               	bsf	16316,1,c	;volatile
  5184                           
  5185                           ; BSR set to: 0
  5186                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5187  00544A  52E5               	movf	postdec1,f,c
  5188  00544C  0012               	return		;funcret
  5189  00544E                     __end_of_send_lcd_cmd_long:
  5190                           	opt callstack 0
  5191                           
  5192 ;; *************** function _send_lcd_cmd *****************
  5193 ;; Defined at:
  5194 ;;		line 85 in file "eadog.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  cmd             1  [STACK] unsigned char 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1  [STACK] void 
  5201 ;; Registers used:
  5202 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5203 ;; Tracked objects:
  5204 ;;		On entry : 3F/0
  5205 ;;		On exit  : 3F/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5212 ;;Total ram usage:        0 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    4
  5215 ;; This function calls:
  5216 ;;		_SPI1_Exchange8bit
  5217 ;;		_wdtdelay
  5218 ;; This function is called by:
  5219 ;;		_init_display
  5220 ;; This function uses a reentrant model
  5221 ;;
  5222                           
  5223                           	psect	text18
  5224  00544E                     __ptext18:
  5225                           	opt callstack 0
  5226  00544E                     _send_lcd_cmd:
  5227                           	opt callstack 25
  5228                           
  5229                           ; BSR set to: 0
  5230                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5231                           ;incstack = 0
  5232                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  5233  00544E  92BC               	bcf	16316,1,c	;volatile
  5234                           
  5235                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  5236  005450  94BC               	bcf	16316,2,c	;volatile
  5237                           
  5238                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  5239                           ;stkvar	_cmd @ sp[(0)+-1]
  5240  005452  0EFF               	movlw	-1
  5241  005454  50E3               	movf	plusw1,w,c
  5242  005456  6EE6               	movwf	postinc1,c
  5243  005458  EC13  F02C         	call	_SPI1_Exchange8bit	;wreg free
  5244                           
  5245                           ; BSR set to: 57
  5246                           ;eadog.c: 90:  wdtdelay(30);
  5247  00545C  0E1E               	movlw	30
  5248  00545E  6EE6               	movwf	postinc1,c
  5249  005460  0E00               	movlw	0
  5250  005462  6EE6               	movwf	postinc1,c
  5251  005464  0E00               	movlw	0
  5252  005466  6EE6               	movwf	postinc1,c
  5253  005468  0E00               	movlw	0
  5254  00546A  6EE6               	movwf	postinc1,c
  5255  00546C  EC9A  F027         	call	_wdtdelay	;wreg free
  5256                           
  5257                           ; BSR set to: 0
  5258  005470  82BC               	bsf	16316,1,c	;volatile
  5259                           
  5260                           ; BSR set to: 0
  5261                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  5262  005472  52E5               	movf	postdec1,f,c
  5263  005474  0012               	return		;funcret
  5264  005476                     __end_of_send_lcd_cmd:
  5265                           	opt callstack 0
  5266                           
  5267 ;; *************** function _SPI1_Exchange8bit *****************
  5268 ;; Defined at:
  5269 ;;		line 79 in file "mcc_generated_files/spi1.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  data            1  [STACK] unsigned char 
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;		None
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1  [STACK] unsigned char 
  5276 ;; Registers used:
  5277 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 3F/39
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5287 ;;Total ram usage:        0 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    3
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_send_lcd_cmd
  5294 ;;		_send_lcd_cmd_long
  5295 ;; This function uses a reentrant model
  5296 ;;
  5297                           
  5298                           	psect	text19
  5299  005826                     __ptext19:
  5300                           	opt callstack 0
  5301  005826                     _SPI1_Exchange8bit:
  5302                           	opt callstack 25
  5303                           
  5304                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  5305                           
  5306                           ; BSR set to: 0
  5307                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5308                           ;incstack = 0
  5309  005826  0E01               	movlw	1
  5310  005828  013D               	movlb	61	; () banked
  5311  00582A  6F12               	movwf	18,b	;volatile
  5312                           
  5313                           ; BSR set to: 61
  5314                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  5315                           ;stkvar	_data @ sp[(0)+-1]
  5316  00582C  0EFF               	movlw	-1
  5317  00582E  006F FF8F FD11     	movff	plusw1,15633	;volatile
  5318  005834                     l847:
  5319                           
  5320                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  5321  005834  0139               	movlb	57	; () banked
  5322  005836  A9A2               	btfss	162,4,b	;volatile
  5323  005838  D7FD               	goto	l847
  5324                           
  5325                           ; BSR set to: 57
  5326                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5327  00583A  006F F440  F03C    	movff	15632,btemp	;volatile
  5328                           
  5329                           ; BSR set to: 57
  5330                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5331  005840  52E5               	movf	postdec1,f,c
  5332  005842  0012               	return		;funcret
  5333  005844                     __end_of_SPI1_Exchange8bit:
  5334                           	opt callstack 0
  5335                           
  5336 ;; *************** function _ringBufS_init *****************
  5337 ;; Defined at:
  5338 ;;		line 22 in file "ringbufs.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  _this           2  [STACK] PTR volatile struct ring
  5341 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1  [STACK] void 
  5346 ;; Registers used:
  5347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5357 ;;Total ram usage:        0 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    4
  5360 ;; This function calls:
  5361 ;;		_memset
  5362 ;; This function is called by:
  5363 ;;		_init_display
  5364 ;; This function uses a reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text20
  5368  005476                     __ptext20:
  5369                           	opt callstack 0
  5370  005476                     _ringBufS_init:
  5371                           	opt callstack 25
  5372                           
  5373                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5374                           
  5375                           ; BSR set to: 57
  5376                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5377                           ;incstack = 0
  5378  005476  0E43               	movlw	67
  5379  005478  6EE6               	movwf	postinc1,c
  5380  00547A  0E00               	movlw	0
  5381  00547C  6EE6               	movwf	postinc1,c
  5382  00547E  0E00               	movlw	0
  5383  005480  6EE6               	movwf	postinc1,c
  5384  005482  0E00               	movlw	0
  5385  005484  6EE6               	movwf	postinc1,c
  5386                           
  5387                           ;stkvar	__this @ sp[(-4)+-2]
  5388  005486  0EFA               	movlw	-6
  5389  005488  006F FF8F FFE6     	movff	plusw1,postinc1
  5390  00548E  006F FF8F FFE6     	movff	plusw1,postinc1
  5391  005494  EC8E  F016         	call	_memset	;wreg free
  5392                           
  5393                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5394  005498  52E5               	movf	postdec1,f,c
  5395  00549A  52E5               	movf	postdec1,f,c
  5396  00549C  0012               	return		;funcret
  5397  00549E                     __end_of_ringBufS_init:
  5398                           	opt callstack 0
  5399                           
  5400 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5401 ;; Defined at:
  5402 ;;		line 218 in file "eadog.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;  r               1  [STACK] unsigned char 
  5405 ;;  c               1  [STACK] unsigned char 
  5406 ;;  strPtr          1  [STACK] PTR unsigned char 
  5407 ;;		 -> V(86), 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;		None
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1  [STACK] void 
  5412 ;; Registers used:
  5413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5414 ;; Tracked objects:
  5415 ;;		On entry : 3F/0
  5416 ;;		On exit  : 3F/3B
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5423 ;;Total ram usage:        0 bytes
  5424 ;; Hardware stack levels used:    1
  5425 ;; Hardware stack levels required when called:   13
  5426 ;; This function calls:
  5427 ;;		_eaDogM_WriteString
  5428 ;;		_send_lcd_cmd_dma
  5429 ;; This function is called by:
  5430 ;;		_main
  5431 ;; This function uses a reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text21
  5435  005322                     __ptext21:
  5436                           	opt callstack 0
  5437  005322                     _eaDogM_WriteStringAtPos:
  5438                           	opt callstack 17
  5439                           
  5440                           ;eadog.c: 218: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           219: {;eadog.c: 220:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5441                           ;stkvar	_c @ sp[(0)+-2]
  5442                           
  5443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5444                           ;incstack = 0
  5445  005322  0EFE               	movlw	-2
  5446  005324  006F FF8C  F047    	movff	plusw1,btemp+11
  5447                           
  5448                           ;stkvar	_r @ sp[(0)+-1]
  5449  00532A  0EFF               	movlw	-1
  5450  00532C  50E3               	movf	plusw1,w,c
  5451  00532E  0D10               	mullw	16
  5452  005330  50F3               	movf	prodl,w,c
  5453  005332  2447               	addwf	btemp+11,w,c
  5454  005334  0F80               	addlw	128
  5455  005336  6EE6               	movwf	postinc1,c
  5456  005338  ECC8  F027         	call	_send_lcd_cmd_dma	;wreg free
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;eadog.c: 221:  eaDogM_WriteString(strPtr);
  5460                           ;stkvar	_strPtr @ sp[(0)+-3]
  5461  00533C  0EFD               	movlw	-3
  5462  00533E  50E3               	movf	plusw1,w,c
  5463  005340  6EE6               	movwf	postinc1,c
  5464  005342  EC2D  F025         	call	_eaDogM_WriteString	;wreg free
  5465                           
  5466                           ; BSR set to: 59
  5467                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  5468  005346  52E5               	movf	postdec1,f,c
  5469  005348  52E5               	movf	postdec1,f,c
  5470  00534A  52E5               	movf	postdec1,f,c
  5471  00534C  0012               	return		;funcret
  5472  00534E                     __end_of_eaDogM_WriteStringAtPos:
  5473                           	opt callstack 0
  5474                           
  5475 ;; *************** function _eaDogM_WriteString *****************
  5476 ;; Defined at:
  5477 ;;		line 167 in file "eadog.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  strPtr          1  [STACK] PTR unsigned char 
  5480 ;;		 -> V(86), 
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;		None
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  1  [STACK] void 
  5485 ;; Registers used:
  5486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5487 ;; Tracked objects:
  5488 ;;		On entry : 3F/0
  5489 ;;		On exit  : 3F/3B
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5496 ;;Total ram usage:        0 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:   12
  5499 ;; This function calls:
  5500 ;;		_printf
  5501 ;;		_ringBufS_flush
  5502 ;;		_start_lcd
  5503 ;;		_strlen
  5504 ;;		_wait_lcd_set
  5505 ;; This function is called by:
  5506 ;;		_eaDogM_WriteStringAtPos
  5507 ;; This function uses a reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text22
  5511  004A5A                     __ptext22:
  5512                           	opt callstack 0
  5513  004A5A                     _eaDogM_WriteString:
  5514                           	opt callstack 17
  5515                           
  5516                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  5517                           
  5518                           ; BSR set to: 59
  5519                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5520                           ;incstack = 0
  5521  004A5A  ECDD  F02C         	call	_wait_lcd_set	;wreg free
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  5525  004A5E  0E00               	movlw	0
  5526  004A60  6EE6               	movwf	postinc1,c
  5527  004A62  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5528  004A68  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5529  004A6E  EC13  F026         	call	_ringBufS_flush	;wreg free
  5530  004A72  94BC               	bcf	16316,2,c	;volatile
  5531                           
  5532                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  5533                           ;stkvar	_strPtr @ sp[(0)+-1]
  5534  004A74  0EFF               	movlw	-1
  5535  004A76  006F FF8C  F047    	movff	plusw1,btemp+11
  5536  004A7C  0060  F11F  FFE6   	movff	btemp+11,postinc1
  5537  004A82  0E00               	movlw	0
  5538  004A84  6EE6               	movwf	postinc1,c
  5539  004A86  EC8C  F024         	call	_strlen	;wreg free
  5540  004A8A  503D               	movf	btemp+1,w,c
  5541  004A8C  E104               	bnz	u4050
  5542  004A8E  0E41               	movlw	65
  5543  004A90  5C3C               	subwf	btemp,w,c
  5544  004A92  A0D8               	btfss	status,0,c
  5545  004A94  D008               	goto	l7155
  5546  004A96                     u4050:
  5547                           
  5548                           ;stkvar	_strPtr @ sp[(0)+-1]
  5549  004A96  0EFF               	movlw	-1
  5550  004A98  50E3               	movf	plusw1,w,c
  5551  004A9A  6ED9               	movwf	fsr2l,c
  5552  004A9C  6ADA               	clrf	fsr2h,c
  5553  004A9E  0E40               	movlw	64
  5554  004AA0  26D9               	addwf	fsr2l,f,c
  5555  004AA2  0E00               	movlw	0
  5556  004AA4  6EDF               	movwf	indf2,c
  5557  004AA6                     l7155:
  5558                           
  5559                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  5560  004AA6  013B               	movlb	59	; () banked
  5561  004AA8  9FFC               	bcf	252,7,b	;volatile
  5562                           
  5563                           ; BSR set to: 59
  5564                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  5565                           ;stkvar	_strPtr @ sp[(0)+-1]
  5566  004AAA  0EFF               	movlw	-1
  5567  004AAC  006F FF8C  F047    	movff	plusw1,btemp+11
  5568  004AB2  0060  F11F  FFE6   	movff	btemp+11,postinc1
  5569  004AB8  0E00               	movlw	0
  5570  004ABA  6EE6               	movwf	postinc1,c
  5571  004ABC  EC8C  F024         	call	_strlen	;wreg free
  5572  004AC0  0060  F0F3  FBF7   	movff	btemp,15351	;volatile
  5573  004AC6  0060  F0F7  FBF8   	movff	btemp+1,15352	;volatile
  5574                           
  5575                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  5576  004ACC  013B               	movlb	59	; () banked
  5577  004ACE  8FFC               	bsf	252,7,b	;volatile
  5578                           
  5579                           ; BSR set to: 59
  5580                           ;eadog.c: 177:  printf("%s", strPtr);
  5581                           ;stkvar	_strPtr @ sp[(0)+-1]
  5582  004AD0  0EFF               	movlw	-1
  5583  004AD2  006F FF8C  F047    	movff	plusw1,btemp+11
  5584  004AD8  0060  F11F  FFE6   	movff	btemp+11,postinc1
  5585  004ADE  0E00               	movlw	0
  5586  004AE0  6EE6               	movwf	postinc1,c
  5587  004AE2  0E85               	movlw	(STR_2+9)& (0+255)
  5588  004AE4  6EE6               	movwf	postinc1,c
  5589  004AE6  0E03               	movlw	3
  5590  004AE8  6EE6               	movwf	postinc1,c
  5591  004AEA  EC3A  F027         	call	_printf	;wreg free
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;eadog.c: 178:  start_lcd();
  5595  004AEE  ECE0  F02C         	call	_start_lcd	;wreg free
  5596                           
  5597                           ; BSR set to: 59
  5598                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5599  004AF2  52E5               	movf	postdec1,f,c
  5600  004AF4  0012               	return		;funcret
  5601  004AF6                     __end_of_eaDogM_WriteString:
  5602                           	opt callstack 0
  5603                           
  5604 ;; *************** function _eaDogM_WriteCommand *****************
  5605 ;; Defined at:
  5606 ;;		line 143 in file "eadog.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  cmd             1  [STACK] unsigned char 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;		None
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  1  [STACK] void 
  5613 ;; Registers used:
  5614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5615 ;; Tracked objects:
  5616 ;;		On entry : 3F/3D
  5617 ;;		On exit  : 3F/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5624 ;;Total ram usage:        0 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:   13
  5627 ;; This function calls:
  5628 ;;		_send_lcd_cmd_dma
  5629 ;; This function is called by:
  5630 ;;		_main
  5631 ;; This function uses a reentrant model
  5632 ;;
  5633                           
  5634                           	psect	text23
  5635  005928                     __ptext23:
  5636                           	opt callstack 0
  5637  005928                     _eaDogM_WriteCommand:
  5638                           	opt callstack 17
  5639                           
  5640                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  5641                           ;stkvar	_cmd @ sp[(0)+-1]
  5642                           
  5643                           ; BSR set to: 59
  5644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5645                           ;incstack = 0
  5646  005928  0EFF               	movlw	-1
  5647  00592A  50E3               	movf	plusw1,w,c
  5648  00592C  6EE6               	movwf	postinc1,c
  5649  00592E  ECC8  F027         	call	_send_lcd_cmd_dma	;wreg free
  5650                           
  5651                           ; BSR set to: 0
  5652                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  5653  005932  52E5               	movf	postdec1,f,c
  5654  005934  0012               	return		;funcret
  5655  005936                     __end_of_eaDogM_WriteCommand:
  5656                           	opt callstack 0
  5657                           
  5658 ;; *************** function _send_lcd_cmd_dma *****************
  5659 ;; Defined at:
  5660 ;;		line 184 in file "eadog.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  strPtr          1  [STACK] unsigned char 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;		None
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  1  [STACK] void 
  5667 ;; Registers used:
  5668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 3F/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5678 ;;Total ram usage:        0 bytes
  5679 ;; Hardware stack levels used:    1
  5680 ;; Hardware stack levels required when called:   12
  5681 ;; This function calls:
  5682 ;;		_printf
  5683 ;;		_ringBufS_flush
  5684 ;;		_start_lcd
  5685 ;;		_wait_lcd_done
  5686 ;;		_wait_lcd_set
  5687 ;; This function is called by:
  5688 ;;		_eaDogM_WriteCommand
  5689 ;;		_eaDogM_WriteStringAtPos
  5690 ;; This function uses a reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text24
  5694  004F90                     __ptext24:
  5695                           	opt callstack 0
  5696  004F90                     _send_lcd_cmd_dma:
  5697                           	opt callstack 17
  5698                           
  5699                           ;eadog.c: 184: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 185: {;eadog.c: 186:  wait
      +                          _lcd_set();
  5700                           
  5701                           ; BSR set to: 0
  5702                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5703                           ;incstack = 0
  5704  004F90  ECDD  F02C         	call	_wait_lcd_set	;wreg free
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;eadog.c: 188:  ringBufS_flush(spi_link.tx1a, 0);
  5708  004F94  0E00               	movlw	0
  5709  004F96  6EE6               	movwf	postinc1,c
  5710  004F98  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5711  004F9E  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5712  004FA4  EC13  F026         	call	_ringBufS_flush	;wreg free
  5713  004FA8  92BC               	bcf	16316,1,c	;volatile
  5714  004FAA  94BC               	bcf	16316,2,c	;volatile
  5715                           
  5716                           ;eadog.c: 191:  DMA1CON0bits.EN = 0;
  5717  004FAC  013B               	movlb	59	; () banked
  5718  004FAE  9FFC               	bcf	252,7,b	;volatile
  5719                           
  5720                           ; BSR set to: 59
  5721                           ;eadog.c: 192:  DMA1SSZ = 1;
  5722  004FB0  0E00               	movlw	0
  5723  004FB2  6FF8               	movwf	248,b	;volatile
  5724  004FB4  0E01               	movlw	1
  5725  004FB6  6FF7               	movwf	247,b	;volatile
  5726                           
  5727                           ; BSR set to: 59
  5728                           ;eadog.c: 193:  DMA1CON0bits.EN = 1;
  5729  004FB8  8FFC               	bsf	252,7,b	;volatile
  5730                           
  5731                           ; BSR set to: 59
  5732                           ;eadog.c: 194:  printf("%c", strPtr);
  5733                           ;stkvar	_strPtr @ sp[(0)+-1]
  5734  004FBA  0EFF               	movlw	-1
  5735  004FBC  50E3               	movf	plusw1,w,c
  5736  004FBE  6EE6               	movwf	postinc1,c
  5737  004FC0  0E00               	movlw	0
  5738  004FC2  6EE6               	movwf	postinc1,c
  5739  004FC4  0EA0               	movlw	STR_13& (0+255)
  5740  004FC6  6EE6               	movwf	postinc1,c
  5741  004FC8  0E03               	movlw	3
  5742  004FCA  6EE6               	movwf	postinc1,c
  5743  004FCC  EC3A  F027         	call	_printf	;wreg free
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;eadog.c: 195:  start_lcd();
  5747  004FD0  ECE0  F02C         	call	_start_lcd	;wreg free
  5748                           
  5749                           ; BSR set to: 59
  5750                           ;eadog.c: 196:  wait_lcd_done();
  5751  004FD4  EC22  F02C         	call	_wait_lcd_done	;wreg free
  5752                           
  5753                           ; BSR set to: 0
  5754  004FD8  82BC               	bsf	16316,1,c	;volatile
  5755                           
  5756                           ; BSR set to: 0
  5757                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5758  004FDA  52E5               	movf	postdec1,f,c
  5759  004FDC  0012               	return		;funcret
  5760  004FDE                     __end_of_send_lcd_cmd_dma:
  5761                           	opt callstack 0
  5762                           
  5763 ;; *************** function _wait_lcd_set *****************
  5764 ;; Defined at:
  5765 ;;		line 114 in file "eadog.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;		None
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;		None
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  1  [STACK] void 
  5772 ;; Registers used:
  5773 ;;		None
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 3F/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5783 ;;Total ram usage:        0 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; Hardware stack levels required when called:    3
  5786 ;; This function calls:
  5787 ;;		Nothing
  5788 ;; This function is called by:
  5789 ;;		_eaDogM_WriteString
  5790 ;;		_send_lcd_cmd_dma
  5791 ;; This function uses a reentrant model
  5792 ;;
  5793                           
  5794                           	psect	text25
  5795  0059BA                     __ptext25:
  5796                           	opt callstack 0
  5797  0059BA                     _wait_lcd_set:
  5798                           	opt callstack 25
  5799                           
  5800                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  5801                           
  5802                           ; BSR set to: 0
  5803                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5804                           ;incstack = 0
  5805  0059BA  0100               	movlb	0	; () banked
  5806  0059BC  876D               	bsf	_spi_link& (0+255),3,b	;volatile
  5807                           
  5808                           ; BSR set to: 0
  5809                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5810  0059BE  0012               	return		;funcret
  5811  0059C0                     __end_of_wait_lcd_set:
  5812                           	opt callstack 0
  5813                           
  5814 ;; *************** function _wait_lcd_done *****************
  5815 ;; Defined at:
  5816 ;;		line 124 in file "eadog.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;		None
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;		None
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  1  [STACK] void 
  5823 ;; Registers used:
  5824 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5825 ;; Tracked objects:
  5826 ;;		On entry : 4/0
  5827 ;;		On exit  : 3F/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5834 ;;Total ram usage:        0 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; Hardware stack levels required when called:    4
  5837 ;; This function calls:
  5838 ;;		_wdtdelay
  5839 ;; This function is called by:
  5840 ;;		_main
  5841 ;;		_send_lcd_cmd_dma
  5842 ;; This function uses a reentrant model
  5843 ;;
  5844                           
  5845                           	psect	text26
  5846  005844                     __ptext26:
  5847                           	opt callstack 0
  5848  005844                     _wait_lcd_done:
  5849                           	opt callstack 26
  5850                           
  5851                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  5852                           
  5853                           ; BSR set to: 0
  5854                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5855                           ;incstack = 0
  5856  005844  0100               	movlb	0	; () banked
  5857  005846  B76D               	btfsc	_spi_link& (0+255),3,b	;volatile
  5858  005848  D7FD               	goto	_wait_lcd_done
  5859                           
  5860                           ; BSR set to: 0
  5861                           ;eadog.c: 127:  wdtdelay(50);
  5862  00584A  0E32               	movlw	50
  5863  00584C  6EE6               	movwf	postinc1,c
  5864  00584E  0E00               	movlw	0
  5865  005850  6EE6               	movwf	postinc1,c
  5866  005852  0E00               	movlw	0
  5867  005854  6EE6               	movwf	postinc1,c
  5868  005856  0E00               	movlw	0
  5869  005858  6EE6               	movwf	postinc1,c
  5870  00585A  EC9A  F027         	call	_wdtdelay	;wreg free
  5871                           
  5872                           ; BSR set to: 0
  5873                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5874  00585E  0012               	return		;funcret
  5875  005860                     __end_of_wait_lcd_done:
  5876                           	opt callstack 0
  5877                           
  5878 ;; *************** function _wdtdelay *****************
  5879 ;; Defined at:
  5880 ;;		line 21 in file "eadog.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  delay           4  [STACK] unsigned long 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  1  [STACK] void 
  5887 ;; Registers used:
  5888 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 3F/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5898 ;;Total ram usage:        0 bytes
  5899 ;; Hardware stack levels used:    1
  5900 ;; Hardware stack levels required when called:    3
  5901 ;; This function calls:
  5902 ;;		Nothing
  5903 ;; This function is called by:
  5904 ;;		_init_display
  5905 ;;		_send_lcd_cmd
  5906 ;;		_send_lcd_cmd_long
  5907 ;;		_wait_lcd_done
  5908 ;; This function uses a reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text27
  5912  004F34                     __ptext27:
  5913                           	opt callstack 0
  5914  004F34                     _wdtdelay:
  5915                           	opt callstack 26
  5916                           
  5917                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  5918                           
  5919                           ; BSR set to: 0
  5920                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5921                           ;incstack = 0
  5922  004F34  0100               	movlb	0	; () banked
  5923  004F36  6B8C               	clrf	wdtdelay@dcount& (0+255),b
  5924  004F38  6B8D               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5925  004F3A  6B8E               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5926  004F3C  6B8F               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5927  004F3E  D009               	goto	l5129
  5928  004F40                     l1297:
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;eadog.c: 26:   __nop();
  5932  004F40  F000               	nop	
  5933  004F42  0004               	clrwdt		;# 
  5934                           
  5935                           ;eadog.c: 28:  };
  5936  004F44  0E01               	movlw	1
  5937  004F46  0100               	movlb	0	; () banked
  5938  004F48  278C               	addwf	wdtdelay@dcount& (0+255),f,b
  5939  004F4A  0E00               	movlw	0
  5940  004F4C  238D               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5941  004F4E  238E               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5942  004F50  238F               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5943  004F52                     l5129:
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;stkvar	_delay @ sp[(0)+-4]
  5947  004F52  0EFC               	movlw	-4
  5948  004F54  006F FF8C  F03C    	movff	plusw1,btemp
  5949  004F5A  518C               	movf	wdtdelay@dcount& (0+255),w,b
  5950  004F5C  5C3C               	subwf	btemp,w,c
  5951  004F5E  0EFD               	movlw	-3
  5952  004F60  006F FF8C  F03C    	movff	plusw1,btemp
  5953  004F66  518D               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5954  004F68  583C               	subwfb	btemp,w,c
  5955  004F6A  0EFE               	movlw	-2
  5956  004F6C  006F FF8C  F03C    	movff	plusw1,btemp
  5957  004F72  518E               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5958  004F74  583C               	subwfb	btemp,w,c
  5959  004F76  0EFF               	movlw	-1
  5960  004F78  006F FF8C  F03C    	movff	plusw1,btemp
  5961  004F7E  518F               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5962  004F80  583C               	subwfb	btemp,w,c
  5963  004F82  B0D8               	btfsc	status,0,c
  5964  004F84  D7DD               	goto	l1297
  5965                           
  5966                           ; BSR set to: 0
  5967                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5968  004F86  52E5               	movf	postdec1,f,c
  5969  004F88  52E5               	movf	postdec1,f,c
  5970  004F8A  52E5               	movf	postdec1,f,c
  5971  004F8C  52E5               	movf	postdec1,f,c
  5972  004F8E  0012               	return		;funcret
  5973  004F90                     __end_of_wdtdelay:
  5974                           	opt callstack 0
  5975                           
  5976 ;; *************** function _start_lcd *****************
  5977 ;; Defined at:
  5978 ;;		line 109 in file "eadog.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;		None
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;		None
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1  [STACK] void 
  5985 ;; Registers used:
  5986 ;;		None
  5987 ;; Tracked objects:
  5988 ;;		On entry : 3F/0
  5989 ;;		On exit  : 3F/3B
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5996 ;;Total ram usage:        0 bytes
  5997 ;; Hardware stack levels used:    1
  5998 ;; Hardware stack levels required when called:    3
  5999 ;; This function calls:
  6000 ;;		Nothing
  6001 ;; This function is called by:
  6002 ;;		_eaDogM_WriteString
  6003 ;;		_send_lcd_cmd_dma
  6004 ;; This function uses a reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text28
  6008  0059C0                     __ptext28:
  6009                           	opt callstack 0
  6010  0059C0                     _start_lcd:
  6011                           	opt callstack 25
  6012                           
  6013                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  6014                           
  6015                           ; BSR set to: 0
  6016                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6017                           ;incstack = 0
  6018  0059C0  013B               	movlb	59	; () banked
  6019  0059C2  8DFC               	bsf	252,6,b	;volatile
  6020                           
  6021                           ; BSR set to: 59
  6022                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6023  0059C4  0012               	return		;funcret
  6024  0059C6                     __end_of_start_lcd:
  6025                           	opt callstack 0
  6026                           
  6027 ;; *************** function _ringBufS_flush *****************
  6028 ;; Defined at:
  6029 ;;		line 76 in file "ringbufs.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6032 ;;		 -> ring_buf1(67), 
  6033 ;;  clearBuffer     1  [STACK] const char 
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;		None
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1  [STACK] void 
  6038 ;; Registers used:
  6039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6040 ;; Tracked objects:
  6041 ;;		On entry : 3F/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6049 ;;Total ram usage:        0 bytes
  6050 ;; Hardware stack levels used:    1
  6051 ;; Hardware stack levels required when called:    4
  6052 ;; This function calls:
  6053 ;;		_memset
  6054 ;; This function is called by:
  6055 ;;		_eaDogM_WriteString
  6056 ;;		_send_lcd_cmd_dma
  6057 ;; This function uses a reentrant model
  6058 ;;
  6059                           
  6060                           	psect	text29
  6061  004C26                     __ptext29:
  6062                           	opt callstack 0
  6063  004C26                     _ringBufS_flush:
  6064                           	opt callstack 24
  6065                           
  6066                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6067                           ;stkvar	__this @ sp[(0)+-2]
  6068                           
  6069                           ; BSR set to: 59
  6070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6071                           ;incstack = 0
  6072  004C26  0EFE               	movlw	-2
  6073  004C28  006F FF8C  F046    	movff	plusw1,btemp+10
  6074  004C2E  0EFF               	movlw	-1
  6075  004C30  006F FF8C  F047    	movff	plusw1,btemp+11
  6076  004C36  0E42               	movlw	66
  6077  004C38  2446               	addwf	btemp+10,w,c
  6078  004C3A  6ED9               	movwf	fsr2l,c
  6079  004C3C  0E00               	movlw	0
  6080  004C3E  2047               	addwfc	btemp+11,w,c
  6081  004C40  6EDA               	movwf	fsr2h,c
  6082  004C42  0E00               	movlw	0
  6083  004C44  6EDF               	movwf	indf2,c
  6084                           
  6085                           ;ringbufs.c: 79:  _this->head = 0;
  6086                           ;stkvar	__this @ sp[(0)+-2]
  6087  004C46  0EFE               	movlw	-2
  6088  004C48  006F FF8C  F046    	movff	plusw1,btemp+10
  6089  004C4E  0EFF               	movlw	-1
  6090  004C50  006F FF8C  F047    	movff	plusw1,btemp+11
  6091  004C56  0E40               	movlw	64
  6092  004C58  2446               	addwf	btemp+10,w,c
  6093  004C5A  6ED9               	movwf	fsr2l,c
  6094  004C5C  0E00               	movlw	0
  6095  004C5E  2047               	addwfc	btemp+11,w,c
  6096  004C60  6EDA               	movwf	fsr2h,c
  6097  004C62  0E00               	movlw	0
  6098  004C64  6EDF               	movwf	indf2,c
  6099                           
  6100                           ;ringbufs.c: 80:  _this->tail = 0;
  6101                           ;stkvar	__this @ sp[(0)+-2]
  6102  004C66  0EFE               	movlw	-2
  6103  004C68  006F FF8C  F046    	movff	plusw1,btemp+10
  6104  004C6E  0EFF               	movlw	-1
  6105  004C70  006F FF8C  F047    	movff	plusw1,btemp+11
  6106  004C76  0E41               	movlw	65
  6107  004C78  2446               	addwf	btemp+10,w,c
  6108  004C7A  6ED9               	movwf	fsr2l,c
  6109  004C7C  0E00               	movlw	0
  6110  004C7E  2047               	addwfc	btemp+11,w,c
  6111  004C80  6EDA               	movwf	fsr2h,c
  6112  004C82  0E00               	movlw	0
  6113  004C84  6EDF               	movwf	indf2,c
  6114                           
  6115                           ;ringbufs.c: 81:  if (clearBuffer) {
  6116                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6117  004C86  0EFD               	movlw	-3
  6118  004C88  50E3               	movf	plusw1,w,c
  6119  004C8A  B4D8               	btfsc	status,2,c
  6120  004C8C  D011               	goto	l1433
  6121                           
  6122                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6123  004C8E  0E40               	movlw	64
  6124  004C90  6EE6               	movwf	postinc1,c
  6125  004C92  0E00               	movlw	0
  6126  004C94  6EE6               	movwf	postinc1,c
  6127  004C96  0E00               	movlw	0
  6128  004C98  6EE6               	movwf	postinc1,c
  6129  004C9A  0E00               	movlw	0
  6130  004C9C  6EE6               	movwf	postinc1,c
  6131                           
  6132                           ;stkvar	__this @ sp[(-4)+-2]
  6133  004C9E  0EFA               	movlw	-6
  6134  004CA0  006F FF8F FFE6     	movff	plusw1,postinc1
  6135  004CA6  006F FF8F FFE6     	movff	plusw1,postinc1
  6136  004CAC  EC8E  F016         	call	_memset	;wreg free
  6137  004CB0                     l1433:
  6138                           
  6139                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6140  004CB0  52E5               	movf	postdec1,f,c
  6141  004CB2  52E5               	movf	postdec1,f,c
  6142  004CB4  52E5               	movf	postdec1,f,c
  6143  004CB6  0012               	return		;funcret
  6144  004CB8                     __end_of_ringBufS_flush:
  6145                           	opt callstack 0
  6146                           
  6147 ;; *************** function _memset *****************
  6148 ;; Defined at:
  6149 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;  dest            2  [STACK] PTR void 
  6152 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6153 ;;  c               2  [STACK] int 
  6154 ;;  n               2  [STACK] unsigned int 
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;  s               2  [STACK] PTR unsigned char 
  6157 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6158 ;;  k               2  [STACK] unsigned int 
  6159 ;; Return value:  Size  Location     Type
  6160 ;;                  2  [STACK] PTR void 
  6161 ;; Registers used:
  6162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6163 ;; Tracked objects:
  6164 ;;		On entry : 0/0
  6165 ;;		On exit  : 0/0
  6166 ;;		Unchanged: 0/0
  6167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6172 ;;Total ram usage:        0 bytes
  6173 ;; Hardware stack levels used:    1
  6174 ;; Hardware stack levels required when called:    3
  6175 ;; This function calls:
  6176 ;;		Nothing
  6177 ;; This function is called by:
  6178 ;;		_ringBufS_init
  6179 ;;		_ringBufS_flush
  6180 ;; This function uses a reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text30
  6184  002D1C                     __ptext30:
  6185                           	opt callstack 0
  6186  002D1C                     _memset:
  6187                           	opt callstack 0
  6188                           
  6189                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6190  002D1C  52E6               	movf	postinc1,f,c
  6191  002D1E  52E6               	movf	postinc1,f,c
  6192  002D20  52E6               	movf	postinc1,f,c
  6193  002D22  52E6               	movf	postinc1,f,c
  6194                           
  6195                           ;stkvar	_dest @ sp[(-4)+-2]
  6196                           
  6197                           ;incstack = 0
  6198  002D24  0EFA               	movlw	-6
  6199  002D26  006F FF8C  F046    	movff	plusw1,btemp+10
  6200  002D2C  0EFB               	movlw	-5
  6201  002D2E  006F FF8C  F047    	movff	plusw1,btemp+11
  6202                           
  6203                           ;stkvar	_s @ sp[(-4)+0]
  6204  002D34  0EFD               	movlw	-3
  6205  002D36  0060  F11F  FFE3   	movff	btemp+11,plusw1
  6206  002D3C  0EFC               	movlw	-4
  6207  002D3E  0060  F11B  FFE3   	movff	btemp+10,plusw1
  6208                           
  6209                           ;stkvar	_n @ sp[(-4)+-6]
  6210  002D44  0EF6               	movlw	-10
  6211  002D46  006F FF8C  F03C    	movff	plusw1,btemp
  6212  002D4C  0EF7               	movlw	-9
  6213  002D4E  50E3               	movf	plusw1,w,c
  6214  002D50  103C               	iorwf	btemp,w,c
  6215  002D52  B4D8               	btfsc	status,2,c
  6216  002D54  D154               	goto	u3940
  6217                           
  6218                           ;stkvar	_c @ sp[(-4)+-4]
  6219                           ;stkvar	_s @ sp[(-4)+0]
  6220  002D56  0EFC               	movlw	-4
  6221  002D58  006F FF8F FFD9     	movff	plusw1,fsr2l
  6222  002D5E  0EFD               	movlw	-3
  6223  002D60  006F FF8F FFDA     	movff	plusw1,fsr2h
  6224  002D66  0EF8               	movlw	-8
  6225  002D68  006F FF8F FFDF     	movff	plusw1,indf2
  6226                           
  6227                           ;stkvar	_c @ sp[(-4)+-4]
  6228                           ;stkvar	_n @ sp[(-4)+-6]
  6229                           ;stkvar	_s @ sp[(-4)+0]
  6230  002D6E  0EFC               	movlw	-4
  6231  002D70  006F FF8C  F046    	movff	plusw1,btemp+10
  6232  002D76  0EFD               	movlw	-3
  6233  002D78  006F FF8C  F047    	movff	plusw1,btemp+11
  6234  002D7E  0EF6               	movlw	-10
  6235  002D80  50E3               	movf	plusw1,w,c
  6236  002D82  2646               	addwf	btemp+10,f,c
  6237  002D84  0EF7               	movlw	-9
  6238  002D86  50E3               	movf	plusw1,w,c
  6239  002D88  2247               	addwfc	btemp+11,f,c
  6240  002D8A  0EFF               	movlw	255
  6241  002D8C  2446               	addwf	btemp+10,w,c
  6242  002D8E  6ED9               	movwf	fsr2l,c
  6243  002D90  0EFF               	movlw	255
  6244  002D92  2047               	addwfc	btemp+11,w,c
  6245  002D94  6EDA               	movwf	fsr2h,c
  6246  002D96  0EF8               	movlw	-8
  6247  002D98  006F FF8F FFDF     	movff	plusw1,indf2
  6248                           
  6249                           ;stkvar	_n @ sp[(-4)+-6]
  6250  002D9E  0EF7               	movlw	-9
  6251  002DA0  50E3               	movf	plusw1,w,c
  6252  002DA2  E108               	bnz	l6889
  6253  002DA4  0EF6               	movlw	-10
  6254  002DA6  006F FF8C  F03C    	movff	plusw1,btemp
  6255  002DAC  0E03               	movlw	3
  6256  002DAE  5E3C               	subwf	btemp,f,c
  6257  002DB0  A0D8               	btfss	status,0,c
  6258  002DB2  D125               	goto	u3940
  6259  002DB4                     l6889:
  6260                           
  6261                           ;stkvar	_c @ sp[(-4)+-4]
  6262                           ;stkvar	_s @ sp[(-4)+0]
  6263  002DB4  0EFC               	movlw	-4
  6264  002DB6  006F FF8C  F046    	movff	plusw1,btemp+10
  6265  002DBC  0EFD               	movlw	-3
  6266  002DBE  006F FF8C  F047    	movff	plusw1,btemp+11
  6267  002DC4  0E01               	movlw	1
  6268  002DC6  2446               	addwf	btemp+10,w,c
  6269  002DC8  6ED9               	movwf	fsr2l,c
  6270  002DCA  0E00               	movlw	0
  6271  002DCC  2047               	addwfc	btemp+11,w,c
  6272  002DCE  6EDA               	movwf	fsr2h,c
  6273  002DD0  0EF8               	movlw	-8
  6274  002DD2  006F FF8F FFDF     	movff	plusw1,indf2
  6275                           
  6276                           ;stkvar	_c @ sp[(-4)+-4]
  6277                           ;stkvar	_s @ sp[(-4)+0]
  6278  002DD8  0EFC               	movlw	-4
  6279  002DDA  006F FF8C  F046    	movff	plusw1,btemp+10
  6280  002DE0  0EFD               	movlw	-3
  6281  002DE2  006F FF8C  F047    	movff	plusw1,btemp+11
  6282  002DE8  0E02               	movlw	2
  6283  002DEA  2446               	addwf	btemp+10,w,c
  6284  002DEC  6ED9               	movwf	fsr2l,c
  6285  002DEE  0E00               	movlw	0
  6286  002DF0  2047               	addwfc	btemp+11,w,c
  6287  002DF2  6EDA               	movwf	fsr2h,c
  6288  002DF4  0EF8               	movlw	-8
  6289  002DF6  006F FF8F FFDF     	movff	plusw1,indf2
  6290                           
  6291                           ;stkvar	_c @ sp[(-4)+-4]
  6292                           ;stkvar	_n @ sp[(-4)+-6]
  6293                           ;stkvar	_s @ sp[(-4)+0]
  6294  002DFC  0EFC               	movlw	-4
  6295  002DFE  006F FF8C  F046    	movff	plusw1,btemp+10
  6296  002E04  0EFD               	movlw	-3
  6297  002E06  006F FF8C  F047    	movff	plusw1,btemp+11
  6298  002E0C  0EF6               	movlw	-10
  6299  002E0E  50E3               	movf	plusw1,w,c
  6300  002E10  2646               	addwf	btemp+10,f,c
  6301  002E12  0EF7               	movlw	-9
  6302  002E14  50E3               	movf	plusw1,w,c
  6303  002E16  2247               	addwfc	btemp+11,f,c
  6304  002E18  0EFE               	movlw	254
  6305  002E1A  2446               	addwf	btemp+10,w,c
  6306  002E1C  6ED9               	movwf	fsr2l,c
  6307  002E1E  0EFF               	movlw	255
  6308  002E20  2047               	addwfc	btemp+11,w,c
  6309  002E22  6EDA               	movwf	fsr2h,c
  6310  002E24  0EF8               	movlw	-8
  6311  002E26  006F FF8F FFDF     	movff	plusw1,indf2
  6312                           
  6313                           ;stkvar	_c @ sp[(-4)+-4]
  6314                           ;stkvar	_n @ sp[(-4)+-6]
  6315                           ;stkvar	_s @ sp[(-4)+0]
  6316  002E2C  0EFC               	movlw	-4
  6317  002E2E  006F FF8C  F046    	movff	plusw1,btemp+10
  6318  002E34  0EFD               	movlw	-3
  6319  002E36  006F FF8C  F047    	movff	plusw1,btemp+11
  6320  002E3C  0EF6               	movlw	-10
  6321  002E3E  50E3               	movf	plusw1,w,c
  6322  002E40  2646               	addwf	btemp+10,f,c
  6323  002E42  0EF7               	movlw	-9
  6324  002E44  50E3               	movf	plusw1,w,c
  6325  002E46  2247               	addwfc	btemp+11,f,c
  6326  002E48  0EFD               	movlw	253
  6327  002E4A  2446               	addwf	btemp+10,w,c
  6328  002E4C  6ED9               	movwf	fsr2l,c
  6329  002E4E  0EFF               	movlw	255
  6330  002E50  2047               	addwfc	btemp+11,w,c
  6331  002E52  6EDA               	movwf	fsr2h,c
  6332  002E54  0EF8               	movlw	-8
  6333  002E56  006F FF8F FFDF     	movff	plusw1,indf2
  6334                           
  6335                           ;stkvar	_n @ sp[(-4)+-6]
  6336  002E5C  0EF7               	movlw	-9
  6337  002E5E  50E3               	movf	plusw1,w,c
  6338  002E60  E108               	bnz	l6895
  6339  002E62  0EF6               	movlw	-10
  6340  002E64  006F FF8C  F03C    	movff	plusw1,btemp
  6341  002E6A  0E07               	movlw	7
  6342  002E6C  5E3C               	subwf	btemp,f,c
  6343  002E6E  A0D8               	btfss	status,0,c
  6344  002E70  D0C6               	goto	u3940
  6345  002E72                     l6895:
  6346                           
  6347                           ;stkvar	_c @ sp[(-4)+-4]
  6348                           ;stkvar	_s @ sp[(-4)+0]
  6349  002E72  0EFC               	movlw	-4
  6350  002E74  006F FF8C  F046    	movff	plusw1,btemp+10
  6351  002E7A  0EFD               	movlw	-3
  6352  002E7C  006F FF8C  F047    	movff	plusw1,btemp+11
  6353  002E82  0E03               	movlw	3
  6354  002E84  2446               	addwf	btemp+10,w,c
  6355  002E86  6ED9               	movwf	fsr2l,c
  6356  002E88  0E00               	movlw	0
  6357  002E8A  2047               	addwfc	btemp+11,w,c
  6358  002E8C  6EDA               	movwf	fsr2h,c
  6359  002E8E  0EF8               	movlw	-8
  6360  002E90  006F FF8F FFDF     	movff	plusw1,indf2
  6361                           
  6362                           ;stkvar	_c @ sp[(-4)+-4]
  6363                           ;stkvar	_n @ sp[(-4)+-6]
  6364                           ;stkvar	_s @ sp[(-4)+0]
  6365  002E96  0EFC               	movlw	-4
  6366  002E98  006F FF8C  F046    	movff	plusw1,btemp+10
  6367  002E9E  0EFD               	movlw	-3
  6368  002EA0  006F FF8C  F047    	movff	plusw1,btemp+11
  6369  002EA6  0EF6               	movlw	-10
  6370  002EA8  50E3               	movf	plusw1,w,c
  6371  002EAA  2646               	addwf	btemp+10,f,c
  6372  002EAC  0EF7               	movlw	-9
  6373  002EAE  50E3               	movf	plusw1,w,c
  6374  002EB0  2247               	addwfc	btemp+11,f,c
  6375  002EB2  0EFC               	movlw	252
  6376  002EB4  2446               	addwf	btemp+10,w,c
  6377  002EB6  6ED9               	movwf	fsr2l,c
  6378  002EB8  0EFF               	movlw	255
  6379  002EBA  2047               	addwfc	btemp+11,w,c
  6380  002EBC  6EDA               	movwf	fsr2h,c
  6381  002EBE  0EF8               	movlw	-8
  6382  002EC0  006F FF8F FFDF     	movff	plusw1,indf2
  6383                           
  6384                           ;stkvar	_n @ sp[(-4)+-6]
  6385  002EC6  0EF7               	movlw	-9
  6386  002EC8  50E3               	movf	plusw1,w,c
  6387  002ECA  E108               	bnz	l6901
  6388  002ECC  0EF6               	movlw	-10
  6389  002ECE  006F FF8C  F03C    	movff	plusw1,btemp
  6390  002ED4  0E09               	movlw	9
  6391  002ED6  5E3C               	subwf	btemp,f,c
  6392  002ED8  A0D8               	btfss	status,0,c
  6393  002EDA  D091               	goto	u3940
  6394  002EDC                     l6901:
  6395                           
  6396                           ;stkvar	_s @ sp[(-4)+0]
  6397  002EDC  0EFC               	movlw	-4
  6398  002EDE  006F FF8C  F046    	movff	plusw1,btemp+10
  6399  002EE4  1E46               	comf	btemp+10,f,c
  6400  002EE6  0EFD               	movlw	-3
  6401  002EE8  006F FF8C  F047    	movff	plusw1,btemp+11
  6402  002EEE  1E47               	comf	btemp+11,f,c
  6403  002EF0  2A46               	incf	btemp+10,f,c
  6404  002EF2  B4D8               	btfsc	status,2,c
  6405  002EF4  2A47               	incf	btemp+11,f,c
  6406  002EF6  0E03               	movlw	3
  6407  002EF8  1646               	andwf	btemp+10,f,c
  6408  002EFA  0E00               	movlw	0
  6409  002EFC  1647               	andwf	btemp+11,f,c
  6410                           
  6411                           ;stkvar	_k @ sp[(-4)+2]
  6412  002EFE  0EFE               	movlw	-2
  6413  002F00  0060  F11B  FFE3   	movff	btemp+10,plusw1
  6414  002F06  0EFF               	movlw	-1
  6415  002F08  0060  F11F  FFE3   	movff	btemp+11,plusw1
  6416                           
  6417                           ;stkvar	_k @ sp[(-4)+2]
  6418                           ;stkvar	_s @ sp[(-4)+0]
  6419  002F0E  0EFC               	movlw	-4
  6420  002F10  50E3               	movf	plusw1,w,c
  6421  002F12  6E3C               	movwf	btemp,c
  6422  002F14  0EFE               	movlw	-2
  6423  002F16  50E3               	movf	plusw1,w,c
  6424  002F18  263C               	addwf	btemp,f,c
  6425  002F1A  0EFC               	movlw	-4
  6426  002F1C  0060  F0F3  FFE3   	movff	btemp,plusw1
  6427  002F22  0EFD               	movlw	-3
  6428  002F24  50E3               	movf	plusw1,w,c
  6429  002F26  6E3C               	movwf	btemp,c
  6430  002F28  0EFF               	movlw	-1
  6431  002F2A  50E3               	movf	plusw1,w,c
  6432  002F2C  223C               	addwfc	btemp,f,c
  6433  002F2E  0EFD               	movlw	-3
  6434  002F30  0060  F0F3  FFE3   	movff	btemp,plusw1
  6435                           
  6436                           ;stkvar	_k @ sp[(-4)+2]
  6437                           ;stkvar	_n @ sp[(-4)+-6]
  6438  002F36  0EF6               	movlw	-10
  6439  002F38  50E3               	movf	plusw1,w,c
  6440  002F3A  6E3C               	movwf	btemp,c
  6441  002F3C  0EFE               	movlw	-2
  6442  002F3E  50E3               	movf	plusw1,w,c
  6443  002F40  5E3C               	subwf	btemp,f,c
  6444  002F42  0EF6               	movlw	-10
  6445  002F44  0060  F0F3  FFE3   	movff	btemp,plusw1
  6446  002F4A  0EF7               	movlw	-9
  6447  002F4C  50E3               	movf	plusw1,w,c
  6448  002F4E  6E3C               	movwf	btemp,c
  6449  002F50  0EFF               	movlw	-1
  6450  002F52  50E3               	movf	plusw1,w,c
  6451  002F54  5A3C               	subwfb	btemp,f,c
  6452  002F56  0EF7               	movlw	-9
  6453  002F58  0060  F0F3  FFE3   	movff	btemp,plusw1
  6454  002F5E  0EFC               	movlw	252
  6455  002F60  6E46               	movwf	btemp+10,c
  6456  002F62  0EFF               	movlw	255
  6457  002F64  6E47               	movwf	btemp+11,c
  6458                           
  6459                           ;stkvar	_n @ sp[(-4)+-6]
  6460  002F66  0EF6               	movlw	-10
  6461  002F68  006F FF8C  F03C    	movff	plusw1,btemp
  6462  002F6E  5046               	movf	btemp+10,w,c
  6463  002F70  163C               	andwf	btemp,f,c
  6464  002F72  0EF6               	movlw	-10
  6465  002F74  0060  F0F3  FFE3   	movff	btemp,plusw1
  6466  002F7A  0EF7               	movlw	-9
  6467  002F7C  006F FF8C  F03C    	movff	plusw1,btemp
  6468  002F82  5047               	movf	btemp+11,w,c
  6469  002F84  163C               	andwf	btemp,f,c
  6470  002F86  0EF7               	movlw	-9
  6471  002F88  D02E               	goto	L17
  6472  002F8A                     l6909:
  6473                           
  6474                           ;stkvar	_c @ sp[(-4)+-4]
  6475                           ;stkvar	_s @ sp[(-4)+0]
  6476  002F8A  0EFC               	movlw	-4
  6477  002F8C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6478  002F92  0EFD               	movlw	-3
  6479  002F94  006F FF8F FFDA     	movff	plusw1,fsr2h
  6480  002F9A  0EF8               	movlw	-8
  6481  002F9C  006F FF8F FFDF     	movff	plusw1,indf2
  6482                           
  6483                           ;stkvar	_n @ sp[(-4)+-6]
  6484  002FA2  0EF6               	movlw	-10
  6485  002FA4  006F FF8C  F03C    	movff	plusw1,btemp
  6486  002FAA  0E01               	movlw	1
  6487  002FAC  5E3C               	subwf	btemp,f,c
  6488  002FAE  0EF6               	movlw	-10
  6489  002FB0  0060  F0F3  FFE3   	movff	btemp,plusw1
  6490  002FB6  0EF7               	movlw	-9
  6491  002FB8  006F FF8C  F03C    	movff	plusw1,btemp
  6492  002FBE  0E00               	movlw	0
  6493  002FC0  5A3C               	subwfb	btemp,f,c
  6494  002FC2  0EF7               	movlw	-9
  6495  002FC4  0060  F0F3  FFE3   	movff	btemp,plusw1
  6496                           
  6497                           ;stkvar	_s @ sp[(-4)+0]
  6498  002FCA  0EFC               	movlw	-4
  6499  002FCC  50E3               	movf	plusw1,w,c
  6500  002FCE  0F01               	addlw	1
  6501  002FD0  6E3C               	movwf	btemp,c
  6502  002FD2  0EFC               	movlw	-4
  6503  002FD4  0060  F0F3  FFE3   	movff	btemp,plusw1
  6504  002FDA  6A3C               	clrf	btemp,c
  6505  002FDC  0EFD               	movlw	-3
  6506  002FDE  50E3               	movf	plusw1,w,c
  6507  002FE0  203C               	addwfc	btemp,w,c
  6508  002FE2  6E3C               	movwf	btemp,c
  6509  002FE4  0EFD               	movlw	-3
  6510  002FE6                     L17:
  6511  002FE6  0060  F0F3  FFE3   	movff	btemp,plusw1
  6512                           
  6513                           ;stkvar	_n @ sp[(-4)+-6]
  6514  002FEC  0EF6               	movlw	-10
  6515  002FEE  006F FF8C  F03C    	movff	plusw1,btemp
  6516  002FF4  0EF7               	movlw	-9
  6517  002FF6  50E3               	movf	plusw1,w,c
  6518  002FF8  103C               	iorwf	btemp,w,c
  6519  002FFA  A4D8               	btfss	status,2,c
  6520  002FFC  D7C6               	goto	l6909
  6521  002FFE                     u3940:
  6522                           
  6523                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6524  002FFE  0EF6               	movlw	246
  6525  003000  26E1               	addwf	fsr1l,f,c
  6526  003002  0EFF               	movlw	255
  6527  003004  22E2               	addwfc	fsr1h,f,c
  6528  003006  0012               	return		;funcret
  6529  003008                     __end_of_memset:
  6530                           	opt callstack 0
  6531                           
  6532 ;; *************** function _printf *****************
  6533 ;; Defined at:
  6534 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  fmt             1  [STACK] PTR const unsigned char 
  6537 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;  ap              2  [STACK] PTR void [1]
  6540 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6541 ;;  ret             2    0        int 
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  2  [STACK] int 
  6544 ;; Registers used:
  6545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6546 ;; Tracked objects:
  6547 ;;		On entry : 3F/3B
  6548 ;;		On exit  : 3F/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6555 ;;Total ram usage:        0 bytes
  6556 ;; Hardware stack levels used:    1
  6557 ;; Hardware stack levels required when called:   11
  6558 ;; This function calls:
  6559 ;;		_vfprintf
  6560 ;; This function is called by:
  6561 ;;		_eaDogM_WriteString
  6562 ;;		_send_lcd_cmd_dma
  6563 ;; This function uses a reentrant model
  6564 ;;
  6565                           
  6566                           	psect	text31
  6567  004E74                     __ptext31:
  6568                           	opt callstack 0
  6569  004E74                     _printf:
  6570                           	opt callstack 0
  6571                           
  6572                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6573  004E74  52E6               	movf	postinc1,f,c
  6574  004E76  52E6               	movf	postinc1,f,c
  6575                           
  6576                           ;stkvar	?_printf @ sp[(-2)+-3]
  6577                           
  6578                           ;incstack = 0
  6579  004E78  0EFB               	movlw	251
  6580  004E7A  24E1               	addwf	fsr1l,w,c
  6581  004E7C  6E46               	movwf	btemp+10,c
  6582  004E7E  0EFF               	movlw	255
  6583  004E80  20E2               	addwfc	fsr1h,w,c
  6584  004E82  6E47               	movwf	btemp+11,c
  6585  004E84  0E01               	movlw	1
  6586  004E86  2646               	addwf	btemp+10,f,c
  6587  004E88  0E00               	movlw	0
  6588  004E8A  2247               	addwfc	btemp+11,f,c
  6589                           
  6590                           ;stkvar	_ap @ sp[(-2)+0]
  6591  004E8C  0EFF               	movlw	-1
  6592  004E8E  0060  F11F  FFE3   	movff	btemp+11,plusw1
  6593  004E94  0EFE               	movlw	-2
  6594  004E96  0060  F11B  FFE3   	movff	btemp+10,plusw1
  6595                           
  6596                           ;stkvar	_ap @ sp[(-2)+0]
  6597  004E9C  0EFE               	movlw	254
  6598  004E9E  24E1               	addwf	fsr1l,w,c
  6599  004EA0  6E3C               	movwf	btemp,c
  6600  004EA2  0EFF               	movlw	255
  6601  004EA4  20E2               	addwfc	fsr1h,w,c
  6602  004EA6  6E3D               	movwf	btemp+1,c
  6603  004EA8  0060  F0F3  FFE6   	movff	btemp,postinc1
  6604  004EAE  0060  F0F7  FFE6   	movff	btemp+1,postinc1
  6605                           
  6606                           ;stkvar	_fmt @ sp[(-4)+-2]
  6607  004EB4  0EFA               	movlw	-6
  6608  004EB6  50E3               	movf	plusw1,w,c
  6609  004EB8  6EE6               	movwf	postinc1,c
  6610  004EBA  0E00               	movlw	0
  6611  004EBC  6EE6               	movwf	postinc1,c
  6612  004EBE  0E00               	movlw	0
  6613  004EC0  6EE6               	movwf	postinc1,c
  6614  004EC2  EC7B  F025         	call	_vfprintf	;wreg free
  6615                           
  6616                           ; BSR set to: 0
  6617                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  6618  004EC6  52E5               	movf	postdec1,f,c
  6619  004EC8  52E5               	movf	postdec1,f,c
  6620  004ECA  52E5               	movf	postdec1,f,c
  6621  004ECC  50E7               	movf	indf1,w,c
  6622  004ECE  5EE1               	subwf	fsr1l,f,c
  6623  004ED0  0E00               	movlw	0
  6624  004ED2  5AE2               	subwfb	fsr1h,f,c
  6625  004ED4  0012               	return		;funcret
  6626  004ED6                     __end_of_printf:
  6627                           	opt callstack 0
  6628                           
  6629 ;; *************** function _vfprintf *****************
  6630 ;; Defined at:
  6631 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6634 ;;		 -> f(5), NULL(0), 
  6635 ;;  fmt             1  [STACK] PTR const unsigned char 
  6636 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  6637 ;;		 -> STR_10(17), STR_9(19), STR_8(20), STR_7(6), 
  6638 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  6639 ;;		 -> STR_1(17), 
  6640 ;;  ap              2  [STACK] PTR PTR void 
  6641 ;;		 -> ap(2), ap(2), 
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;  cfmt            1  [STACK] PTR unsigned char 
  6644 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  6645 ;;		 -> STR_10(17), STR_9(19), STR_8(20), STR_7(6), 
  6646 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  6647 ;;		 -> STR_1(17), 
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  2  [STACK] int 
  6650 ;; Registers used:
  6651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 3F/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6661 ;;Total ram usage:        0 bytes
  6662 ;; Hardware stack levels used:    1
  6663 ;; Hardware stack levels required when called:   10
  6664 ;; This function calls:
  6665 ;;		_vfpfcnvrt
  6666 ;; This function is called by:
  6667 ;;		_sprintf
  6668 ;;		_printf
  6669 ;; This function uses a reentrant model
  6670 ;;
  6671                           
  6672                           	psect	text32
  6673  004AF6                     __ptext32:
  6674                           	opt callstack 0
  6675  004AF6                     _vfprintf:
  6676                           	opt callstack 0
  6677                           
  6678                           ; BSR set to: 0
  6679                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6680  004AF6  52E6               	movf	postinc1,f,c
  6681                           
  6682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6683                           ;stkvar	_fmt @ sp[(-1)+-3]
  6684                           
  6685                           ;incstack = 0
  6686  004AF8  0EFC               	movlw	-4
  6687  004AFA  006F FF8C  F047    	movff	plusw1,btemp+11
  6688                           
  6689                           ;stkvar	_cfmt @ sp[(-1)+0]
  6690  004B00  0EFF               	movlw	-1
  6691  004B02  0060  F11F  FFE3   	movff	btemp+11,plusw1
  6692                           
  6693                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6694  004B08  0100               	movlb	0	; () banked
  6695  004B0A  6B93               	clrf	_nout& (0+255),b
  6696  004B0C  6B94               	clrf	(_nout+1)& (0+255),b
  6697                           
  6698                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6699  004B0E  D021               	goto	l6923
  6700  004B10                     l6921:
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6704                           ;stkvar	_ap @ sp[(-1)+-5]
  6705  004B10  0EFA               	movlw	-6
  6706  004B12  006F FF8F FFE6     	movff	plusw1,postinc1
  6707  004B18  006F FF8F FFE6     	movff	plusw1,postinc1
  6708                           
  6709                           ;stkvar	_cfmt @ sp[(-3)+0]
  6710  004B1E  0EFD               	movlw	253
  6711  004B20  24E1               	addwf	fsr1l,w,c
  6712  004B22  6E3C               	movwf	btemp,c
  6713  004B24  0EFF               	movlw	255
  6714  004B26  20E2               	addwfc	fsr1h,w,c
  6715  004B28  6E3D               	movwf	btemp+1,c
  6716  004B2A  0060  F0F3  FFE6   	movff	btemp,postinc1
  6717  004B30  0060  F0F7  FFE6   	movff	btemp+1,postinc1
  6718                           
  6719                           ;stkvar	_fp @ sp[(-5)+-2]
  6720  004B36  0EF9               	movlw	-7
  6721  004B38  006F FF8F FFE6     	movff	plusw1,postinc1
  6722  004B3E  006F FF8F FFE6     	movff	plusw1,postinc1
  6723  004B44  EC52  F010         	call	_vfpfcnvrt	;wreg free
  6724  004B48  503C               	movf	btemp,w,c
  6725  004B4A  0100               	movlb	0	; () banked
  6726  004B4C  2793               	addwf	_nout& (0+255),f,b
  6727  004B4E  503D               	movf	btemp+1,w,c
  6728  004B50  2394               	addwfc	(_nout+1)& (0+255),f,b
  6729  004B52                     l6923:
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6733                           ;stkvar	_cfmt @ sp[(-1)+0]
  6734  004B52  50E1               	movf	fsr1l,w,c
  6735  004B54  0FFF               	addlw	-1
  6736  004B56  6ED9               	movwf	fsr2l,c
  6737  004B58  50E2               	movf	fsr1h,w,c
  6738  004B5A  6EDA               	movwf	fsr2h,c
  6739  004B5C  0EFF               	movlw	255
  6740  004B5E  22DA               	addwfc	fsr2h,f,c
  6741  004B60  006F FF7F FFF6     	movff	indf2,tblptrl
  6742  004B66                     	if	1	;There is more than 1 active tblptr byte
  6743  004B66  0E20               	movlw	high __smallconst
  6744  004B68  6EF7               	movwf	tblptrh,c
  6745  004B6A                     	endif
  6746  004B6A                     	if	0	;tblptru may be non-zero
  6747  004B6A                     	endif
  6748  004B6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6749  004B6A  0E00               	movlw	low (__smallconst shr (0+16))
  6750  004B6C  6EF8               	movwf	tblptru,c
  6751  004B6E                     	endif
  6752  004B6E  0008               	tblrd		*
  6753  004B70  50F5               	movf	tablat,w,c
  6754  004B72  0900               	iorlw	0
  6755  004B74  A4D8               	btfss	status,2,c
  6756  004B76  D7CC               	goto	l6921
  6757                           
  6758                           ; BSR set to: 0
  6759                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6760  004B78  0060  F24C  F03C   	movff	_nout,btemp
  6761  004B7E  0060  F250  F03D   	movff	_nout+1,btemp+1
  6762                           
  6763                           ; BSR set to: 0
  6764                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  6765  004B84  0EFA               	movlw	250
  6766  004B86  26E1               	addwf	fsr1l,f,c
  6767  004B88  0EFF               	movlw	255
  6768  004B8A  22E2               	addwfc	fsr1h,f,c
  6769  004B8C  0012               	return		;funcret
  6770  004B8E                     __end_of_vfprintf:
  6771                           	opt callstack 0
  6772                           
  6773 ;; *************** function _vfpfcnvrt *****************
  6774 ;; Defined at:
  6775 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6778 ;;		 -> f(5), NULL(0), 
  6779 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6780 ;;		 -> cfmt(1), 
  6781 ;;  ap              2  [STACK] PTR PTR void 
  6782 ;;		 -> ap(2), ap(2), 
  6783 ;; Auto vars:     Size  Location     Type
  6784 ;;  ll              8  [STACK] long long 
  6785 ;;  llu             8    0        unsigned long long 
  6786 ;;  f               4    0        unsigned long long 
  6787 ;;  vp              3    0        PTR void 
  6788 ;;  ct              3    0        unsigned char [3]
  6789 ;;  cp              2  [STACK] PTR unsigned char 
  6790 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(86), 
  6791 ;;  i               2    0        int 
  6792 ;;  done            2    0        int 
  6793 ;;  c               1  [STACK] unsigned char 
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  2  [STACK] int 
  6796 ;; Registers used:
  6797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6807 ;;Total ram usage:        0 bytes
  6808 ;; Hardware stack levels used:    1
  6809 ;; Hardware stack levels required when called:    9
  6810 ;; This function calls:
  6811 ;;		_ctoa
  6812 ;;		_dtoa
  6813 ;;		_fputc
  6814 ;;		_stoa
  6815 ;;		_strncmp
  6816 ;; This function is called by:
  6817 ;;		_vfprintf
  6818 ;; This function uses a reentrant model
  6819 ;;
  6820                           
  6821                           	psect	text33
  6822  0020A4                     __ptext33:
  6823                           	opt callstack 0
  6824  0020A4                     _vfpfcnvrt:
  6825                           	opt callstack 0
  6826                           
  6827                           ; BSR set to: 0
  6828                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6829  0020A4  0E0B               	movlw	11
  6830  0020A6  26E1               	addwf	fsr1l,f,c
  6831  0020A8  0E00               	movlw	0
  6832  0020AA  22E2               	addwfc	fsr1h,f,c
  6833                           
  6834                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6835                           ;stkvar	_fmt @ sp[(-11)+-4]
  6836                           
  6837                           ;incstack = 0
  6838  0020AC  0EF1               	movlw	-15
  6839  0020AE  006F FF8F FFD9     	movff	plusw1,fsr2l
  6840  0020B4  0EF2               	movlw	-14
  6841  0020B6  006F FF8F FFDA     	movff	plusw1,fsr2h
  6842  0020BC  006F FF7F FFF6     	movff	indf2,tblptrl
  6843  0020C2                     	if	1	;There is more than 1 active tblptr byte
  6844  0020C2  0E20               	movlw	high __smallconst
  6845  0020C4  6EF7               	movwf	tblptrh,c
  6846  0020C6                     	endif
  6847  0020C6                     	if	0	;tblptru may be non-zero
  6848  0020C6                     	endif
  6849  0020C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6850  0020C6  0E00               	movlw	low (__smallconst shr (0+16))
  6851  0020C8  6EF8               	movwf	tblptru,c
  6852  0020CA                     	endif
  6853  0020CA  0008               	tblrd		*
  6854  0020CC  50F5               	movf	tablat,w,c
  6855  0020CE  0A25               	xorlw	37
  6856  0020D0  A4D8               	btfss	status,2,c
  6857  0020D2  D213               	goto	l6867
  6858                           
  6859                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6860                           ;stkvar	_fmt @ sp[(-11)+-4]
  6861  0020D4  0EF1               	movlw	-15
  6862  0020D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6863  0020DC  0EF2               	movlw	-14
  6864  0020DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6865  0020E4  2ADF               	incf	indf2,f,c
  6866                           
  6867                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6868  0020E6  6A23               	clrf	_width,c
  6869  0020E8  6A24               	clrf	_width+1,c
  6870  0020EA  6A27               	clrf	_flags,c
  6871  0020EC  6A28               	clrf	_flags+1,c
  6872                           
  6873                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6874  0020EE  6825               	setf	_prec,c
  6875  0020F0  6826               	setf	_prec+1,c
  6876                           
  6877                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  6878                           ;stkvar	_fmt @ sp[(-11)+-4]
  6879  0020F2  0EF1               	movlw	-15
  6880  0020F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6881  0020FA  0EF2               	movlw	-14
  6882  0020FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6883  002102  006F FF7F FFF6     	movff	indf2,tblptrl
  6884  002108                     	if	1	;There is more than 1 active tblptr byte
  6885  002108  0E20               	movlw	high __smallconst
  6886  00210A  6EF7               	movwf	tblptrh,c
  6887  00210C                     	endif
  6888  00210C                     	if	0	;tblptru may be non-zero
  6889  00210C                     	endif
  6890  00210C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6891  00210C  0E00               	movlw	low (__smallconst shr (0+16))
  6892  00210E  6EF8               	movwf	tblptru,c
  6893  002110                     	endif
  6894  002110  0008               	tblrd		*
  6895  002112  50F5               	movf	tablat,w,c
  6896  002114  0A63               	xorlw	99
  6897  002116  A4D8               	btfss	status,2,c
  6898  002118  D034               	goto	l6817
  6899                           
  6900                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  6901                           ;stkvar	_fmt @ sp[(-11)+-4]
  6902  00211A  0EF1               	movlw	-15
  6903  00211C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6904  002122  0EF2               	movlw	-14
  6905  002124  006F FF8F FFDA     	movff	plusw1,fsr2h
  6906  00212A  2ADF               	incf	indf2,f,c
  6907                           
  6908                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6909                           ;stkvar	_ap @ sp[(-11)+-6]
  6910  00212C  0EEF               	movlw	-17
  6911  00212E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6912  002134  0EF0               	movlw	-16
  6913  002136  006F FF8F FFDA     	movff	plusw1,fsr2h
  6914  00213C  0E02               	movlw	2
  6915  00213E  5EDE               	subwf	postinc2,f,c
  6916  002140  0E00               	movlw	0
  6917  002142  5ADD               	subwfb	postdec2,f,c
  6918  002144  006F FF78  F046    	movff	postinc2,btemp+10
  6919  00214A  006F FF74  F047    	movff	postdec2,btemp+11
  6920  002150  0060  F11B  FFD9   	movff	btemp+10,fsr2l
  6921  002156  0060  F11F  FFDA   	movff	btemp+11,fsr2h
  6922  00215C  50DF               	movf	indf2,w,c
  6923  00215E  6E47               	movwf	btemp+11,c
  6924                           
  6925                           ;stkvar	_c @ sp[(-11)+10]
  6926  002160  0EFF               	movlw	-1
  6927  002162  0060  F11F  FFE3   	movff	btemp+11,plusw1
  6928                           
  6929                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  6930                           ;stkvar	_c @ sp[(-11)+10]
  6931  002168  0EFF               	movlw	-1
  6932  00216A  50E3               	movf	plusw1,w,c
  6933  00216C  6EE6               	movwf	postinc1,c
  6934                           
  6935                           ;stkvar	_fp @ sp[(-12)+-2]
  6936  00216E  0EF2               	movlw	-14
  6937  002170  006F FF8F FFE6     	movff	plusw1,postinc1
  6938  002176  006F FF8F FFE6     	movff	plusw1,postinc1
  6939  00217C  EC5C  F026         	call	_ctoa	;wreg free
  6940  002180  D1E3               	goto	l1735
  6941  002182                     l6817:
  6942                           
  6943                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6944                           ;stkvar	_fmt @ sp[(-11)+-4]
  6945  002182  0EF1               	movlw	-15
  6946  002184  006F FF8F FFD9     	movff	plusw1,fsr2l
  6947  00218A  0EF2               	movlw	-14
  6948  00218C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6949  002192  006F FF7F FFF6     	movff	indf2,tblptrl
  6950  002198                     	if	1	;There is more than 1 active tblptr byte
  6951  002198  0E20               	movlw	high __smallconst
  6952  00219A  6EF7               	movwf	tblptrh,c
  6953  00219C                     	endif
  6954  00219C                     	if	0	;tblptru may be non-zero
  6955  00219C                     	endif
  6956  00219C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6957  00219C  0E00               	movlw	low (__smallconst shr (0+16))
  6958  00219E  6EF8               	movwf	tblptru,c
  6959  0021A0                     	endif
  6960  0021A0  0008               	tblrd		*
  6961  0021A2  50F5               	movf	tablat,w,c
  6962  0021A4  0A64               	xorlw	100
  6963  0021A6  B4D8               	btfsc	status,2,c
  6964  0021A8  D014               	goto	u3850
  6965                           
  6966                           ;stkvar	_fmt @ sp[(-11)+-4]
  6967  0021AA  0EF1               	movlw	-15
  6968  0021AC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6969  0021B2  0EF2               	movlw	-14
  6970  0021B4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6971  0021BA  006F FF7F FFF6     	movff	indf2,tblptrl
  6972  0021C0                     	if	1	;There is more than 1 active tblptr byte
  6973  0021C0  0E20               	movlw	high __smallconst
  6974  0021C2  6EF7               	movwf	tblptrh,c
  6975  0021C4                     	endif
  6976  0021C4                     	if	0	;tblptru may be non-zero
  6977  0021C4                     	endif
  6978  0021C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6979  0021C4  0E00               	movlw	low (__smallconst shr (0+16))
  6980  0021C6  6EF8               	movwf	tblptru,c
  6981  0021C8                     	endif
  6982  0021C8  0008               	tblrd		*
  6983  0021CA  50F5               	movf	tablat,w,c
  6984  0021CC  0A69               	xorlw	105
  6985  0021CE  A4D8               	btfss	status,2,c
  6986  0021D0  D073               	goto	l6829
  6987  0021D2                     u3850:
  6988                           
  6989                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6990                           ;stkvar	_fmt @ sp[(-11)+-4]
  6991  0021D2  0EF1               	movlw	-15
  6992  0021D4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6993  0021DA  0EF2               	movlw	-14
  6994  0021DC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6995  0021E2  2ADF               	incf	indf2,f,c
  6996                           
  6997                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6998                           ;stkvar	_ap @ sp[(-11)+-6]
  6999  0021E4  0EEF               	movlw	-17
  7000  0021E6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7001  0021EC  0EF0               	movlw	-16
  7002  0021EE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7003  0021F4  0E02               	movlw	2
  7004  0021F6  5EDE               	subwf	postinc2,f,c
  7005  0021F8  0E00               	movlw	0
  7006  0021FA  5ADD               	subwfb	postdec2,f,c
  7007  0021FC  006F FF78  F046    	movff	postinc2,btemp+10
  7008  002202  006F FF74  F047    	movff	postdec2,btemp+11
  7009  002208  0060  F11B  FFD9   	movff	btemp+10,fsr2l
  7010  00220E  0060  F11F  FFDA   	movff	btemp+11,fsr2h
  7011  002214  006F FF78  F046    	movff	postinc2,btemp+10
  7012  00221A  006F FF74  F047    	movff	postdec2,btemp+11
  7013                           
  7014                           ;stkvar	_ll @ sp[(-11)+0]
  7015  002220  0EF5               	movlw	-11
  7016  002222  0060  F11B  FFE3   	movff	btemp+10,plusw1
  7017  002228  0EF6               	movlw	-10
  7018  00222A  0060  F11F  FFE3   	movff	btemp+11,plusw1
  7019  002230  6A3C               	clrf	btemp,c
  7020  002232  BEE3               	btfsc	plusw1,7,c
  7021  002234  683C               	setf	btemp,c
  7022  002236  0EF7               	movlw	-9
  7023  002238  0060  F0F3  FFE3   	movff	btemp,plusw1
  7024  00223E  0EF8               	movlw	-8
  7025  002240  0060  F0F3  FFE3   	movff	btemp,plusw1
  7026  002246  0EF9               	movlw	-7
  7027  002248  0060  F0F3  FFE3   	movff	btemp,plusw1
  7028  00224E  0EFA               	movlw	-6
  7029  002250  0060  F0F3  FFE3   	movff	btemp,plusw1
  7030  002256  0EFB               	movlw	-5
  7031  002258  0060  F0F3  FFE3   	movff	btemp,plusw1
  7032  00225E  0EFC               	movlw	-4
  7033  002260  0060  F0F3  FFE3   	movff	btemp,plusw1
  7034  002266                     l6825:
  7035                           
  7036                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7037                           ;stkvar	_ll @ sp[(-11)+0]
  7038  002266  50E1               	movf	fsr1l,w,c
  7039  002268  0FF5               	addlw	-11
  7040  00226A  6ED9               	movwf	fsr2l,c
  7041  00226C  50E2               	movf	fsr1h,w,c
  7042  00226E  6EDA               	movwf	fsr2h,c
  7043  002270  0EFF               	movlw	255
  7044  002272  22DA               	addwfc	fsr2h,f,c
  7045  002274  006F FF7B FFE6     	movff	postinc2,postinc1
  7046  00227A  006F FF7B FFE6     	movff	postinc2,postinc1
  7047  002280  006F FF7B FFE6     	movff	postinc2,postinc1
  7048  002286  006F FF7B FFE6     	movff	postinc2,postinc1
  7049  00228C  006F FF7B FFE6     	movff	postinc2,postinc1
  7050  002292  006F FF7B FFE6     	movff	postinc2,postinc1
  7051  002298  006F FF7B FFE6     	movff	postinc2,postinc1
  7052  00229E  006F FF7B FFE6     	movff	postinc2,postinc1
  7053                           
  7054                           ;stkvar	_fp @ sp[(-19)+-2]
  7055  0022A4  0EEB               	movlw	-21
  7056  0022A6  006F FF8F FFE6     	movff	plusw1,postinc1
  7057  0022AC  006F FF8F FFE6     	movff	plusw1,postinc1
  7058  0022B2  ECA9  F012         	call	_dtoa	;wreg free
  7059  0022B6  D148               	goto	l1735
  7060  0022B8                     l6829:
  7061                           
  7062                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  7063  0022B8  0E02               	movlw	2
  7064  0022BA  6EE6               	movwf	postinc1,c
  7065  0022BC  0E00               	movlw	0
  7066  0022BE  6EE6               	movwf	postinc1,c
  7067  0022C0  0E9A               	movlw	STR_15& (0+255)
  7068  0022C2  6EE6               	movwf	postinc1,c
  7069                           
  7070                           ;stkvar	_fmt @ sp[(-14)+-4]
  7071  0022C4  0EEE               	movlw	-18
  7072  0022C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7073  0022CC  0EEF               	movlw	-17
  7074  0022CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7075  0022D4  50DF               	movf	indf2,w,c
  7076  0022D6  6EE6               	movwf	postinc1,c
  7077  0022D8  EC61  F020         	call	_strncmp	;wreg free
  7078  0022DC  503C               	movf	btemp,w,c
  7079  0022DE  103D               	iorwf	btemp+1,w,c
  7080  0022E0  B4D8               	btfsc	status,2,c
  7081  0022E2  D016               	goto	u3870
  7082  0022E4  0E02               	movlw	2
  7083  0022E6  6EE6               	movwf	postinc1,c
  7084  0022E8  0E00               	movlw	0
  7085  0022EA  6EE6               	movwf	postinc1,c
  7086  0022EC  0E9D               	movlw	STR_19& (0+255)
  7087  0022EE  6EE6               	movwf	postinc1,c
  7088                           
  7089                           ;stkvar	_fmt @ sp[(-14)+-4]
  7090  0022F0  0EEE               	movlw	-18
  7091  0022F2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7092  0022F8  0EEF               	movlw	-17
  7093  0022FA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7094  002300  50DF               	movf	indf2,w,c
  7095  002302  6EE6               	movwf	postinc1,c
  7096  002304  EC61  F020         	call	_strncmp	;wreg free
  7097  002308  503C               	movf	btemp,w,c
  7098  00230A  103D               	iorwf	btemp+1,w,c
  7099  00230C  A4D8               	btfss	status,2,c
  7100  00230E  D067               	goto	l6841
  7101  002310                     u3870:
  7102                           
  7103                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  7104                           ;stkvar	_fmt @ sp[(-11)+-4]
  7105  002310  0EF1               	movlw	-15
  7106  002312  006F FF8F FFD9     	movff	plusw1,fsr2l
  7107  002318  0EF2               	movlw	-14
  7108  00231A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7109  002320  0E02               	movlw	2
  7110  002322  26DF               	addwf	indf2,f,c
  7111                           
  7112                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  7113                           ;stkvar	_ap @ sp[(-11)+-6]
  7114  002324  0EEF               	movlw	-17
  7115  002326  006F FF8F FFD9     	movff	plusw1,fsr2l
  7116  00232C  0EF0               	movlw	-16
  7117  00232E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7118  002334  0E04               	movlw	4
  7119  002336  5EDE               	subwf	postinc2,f,c
  7120  002338  0E00               	movlw	0
  7121  00233A  5ADD               	subwfb	postdec2,f,c
  7122  00233C  006F FF78  F046    	movff	postinc2,btemp+10
  7123  002342  006F FF74  F047    	movff	postdec2,btemp+11
  7124  002348  0060  F11B  FFD9   	movff	btemp+10,fsr2l
  7125  00234E  0060  F11F  FFDA   	movff	btemp+11,fsr2h
  7126  002354  006F FF78  F044    	movff	postinc2,btemp+8
  7127  00235A  006F FF78  F045    	movff	postinc2,btemp+9
  7128  002360  006F FF78  F046    	movff	postinc2,btemp+10
  7129  002366  006F FF78  F047    	movff	postinc2,btemp+11
  7130  00236C  0060  F110  F04C   	movff	btemp+8,btemp+16
  7131  002372  0060  F114  F04D   	movff	btemp+9,btemp+17
  7132  002378  0060  F118  F04E   	movff	btemp+10,btemp+18
  7133  00237E  0060  F11C  F04F   	movff	btemp+11,btemp+19
  7134  002384  6A50               	clrf	btemp+20,c
  7135  002386  BE4F               	btfsc	btemp+19,7,c
  7136  002388  6850               	setf	btemp+20,c
  7137  00238A  0060  F140  F051   	movff	btemp+20,btemp+21
  7138  002390  0060  F140  F052   	movff	btemp+20,btemp+22
  7139  002396  0060  F140  F053   	movff	btemp+20,btemp+23
  7140                           
  7141                           ;stkvar	_ll @ sp[(-11)+0]
  7142  00239C  0EF5               	movlw	-11
  7143  00239E  0060  F133  FFE3   	movff	btemp+16,plusw1
  7144  0023A4  0EF6               	movlw	-10
  7145  0023A6  0060  F137  FFE3   	movff	btemp+17,plusw1
  7146  0023AC  0EF7               	movlw	-9
  7147  0023AE  0060  F13B  FFE3   	movff	btemp+18,plusw1
  7148  0023B4  0EF8               	movlw	-8
  7149  0023B6  0060  F13F  FFE3   	movff	btemp+19,plusw1
  7150  0023BC  0EF9               	movlw	-7
  7151  0023BE  0060  F143  FFE3   	movff	btemp+20,plusw1
  7152  0023C4  0EFA               	movlw	-6
  7153  0023C6  0060  F147  FFE3   	movff	btemp+21,plusw1
  7154  0023CC  0EFB               	movlw	-5
  7155  0023CE  0060  F14B  FFE3   	movff	btemp+22,plusw1
  7156  0023D4  0EFC               	movlw	-4
  7157  0023D6  0060  F14F  FFE3   	movff	btemp+23,plusw1
  7158  0023DC  D744               	goto	l6825
  7159  0023DE                     l6841:
  7160                           
  7161                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7162                           ;stkvar	_fmt @ sp[(-11)+-4]
  7163  0023DE  0EF1               	movlw	-15
  7164  0023E0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7165  0023E6  0EF2               	movlw	-14
  7166  0023E8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7167  0023EE  006F FF7F FFF6     	movff	indf2,tblptrl
  7168  0023F4                     	if	1	;There is more than 1 active tblptr byte
  7169  0023F4  0E20               	movlw	high __smallconst
  7170  0023F6  6EF7               	movwf	tblptrh,c
  7171  0023F8                     	endif
  7172  0023F8                     	if	0	;tblptru may be non-zero
  7173  0023F8                     	endif
  7174  0023F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7175  0023F8  0E00               	movlw	low (__smallconst shr (0+16))
  7176  0023FA  6EF8               	movwf	tblptru,c
  7177  0023FC                     	endif
  7178  0023FC  0008               	tblrd		*
  7179  0023FE  50F5               	movf	tablat,w,c
  7180  002400  0A73               	xorlw	115
  7181  002402  A4D8               	btfss	status,2,c
  7182  002404  D040               	goto	l6851
  7183                           
  7184                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7185                           ;stkvar	_fmt @ sp[(-11)+-4]
  7186  002406  0EF1               	movlw	-15
  7187  002408  006F FF8F FFD9     	movff	plusw1,fsr2l
  7188  00240E  0EF2               	movlw	-14
  7189  002410  006F FF8F FFDA     	movff	plusw1,fsr2h
  7190  002416  2ADF               	incf	indf2,f,c
  7191                           
  7192                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7193                           ;stkvar	_ap @ sp[(-11)+-6]
  7194  002418  0EEF               	movlw	-17
  7195  00241A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7196  002420  0EF0               	movlw	-16
  7197  002422  006F FF8F FFDA     	movff	plusw1,fsr2h
  7198  002428  0E02               	movlw	2
  7199  00242A  5EDE               	subwf	postinc2,f,c
  7200  00242C  0E00               	movlw	0
  7201  00242E  5ADD               	subwfb	postdec2,f,c
  7202  002430  006F FF78  F046    	movff	postinc2,btemp+10
  7203  002436  006F FF74  F047    	movff	postdec2,btemp+11
  7204  00243C  0060  F11B  FFD9   	movff	btemp+10,fsr2l
  7205  002442  0060  F11F  FFDA   	movff	btemp+11,fsr2h
  7206  002448  006F FF78  F046    	movff	postinc2,btemp+10
  7207  00244E  006F FF74  F047    	movff	postdec2,btemp+11
  7208                           
  7209                           ;stkvar	_cp @ sp[(-11)+8]
  7210  002454  0EFE               	movlw	-2
  7211  002456  0060  F11F  FFE3   	movff	btemp+11,plusw1
  7212  00245C  0EFD               	movlw	-3
  7213  00245E  0060  F11B  FFE3   	movff	btemp+10,plusw1
  7214                           
  7215                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7216                           ;stkvar	_cp @ sp[(-11)+8]
  7217  002464  0EFD               	movlw	-3
  7218  002466  006F FF8F FFE6     	movff	plusw1,postinc1
  7219  00246C  006F FF8F FFE6     	movff	plusw1,postinc1
  7220                           
  7221                           ;stkvar	_fp @ sp[(-13)+-2]
  7222  002472  0EF1               	movlw	-15
  7223  002474  006F FF8F FFE6     	movff	plusw1,postinc1
  7224  00247A  006F FF8F FFE6     	movff	plusw1,postinc1
  7225  002480  EC6C  F019         	call	_stoa	;wreg free
  7226  002484  D061               	goto	l1735
  7227  002486                     l6851:
  7228                           
  7229                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7230                           ;stkvar	_fmt @ sp[(-11)+-4]
  7231  002486  0EF1               	movlw	-15
  7232  002488  006F FF8F FFD9     	movff	plusw1,fsr2l
  7233  00248E  0EF2               	movlw	-14
  7234  002490  006F FF8F FFDA     	movff	plusw1,fsr2h
  7235  002496  006F FF7F FFF6     	movff	indf2,tblptrl
  7236  00249C                     	if	1	;There is more than 1 active tblptr byte
  7237  00249C  0E20               	movlw	high __smallconst
  7238  00249E  6EF7               	movwf	tblptrh,c
  7239  0024A0                     	endif
  7240  0024A0                     	if	0	;tblptru may be non-zero
  7241  0024A0                     	endif
  7242  0024A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7243  0024A0  0E00               	movlw	low (__smallconst shr (0+16))
  7244  0024A2  6EF8               	movwf	tblptru,c
  7245  0024A4                     	endif
  7246  0024A4  0008               	tblrd		*
  7247  0024A6  50F5               	movf	tablat,w,c
  7248  0024A8  0A25               	xorlw	37
  7249  0024AA  A4D8               	btfss	status,2,c
  7250  0024AC  D018               	goto	l6861
  7251                           
  7252                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7253                           ;stkvar	_fmt @ sp[(-11)+-4]
  7254  0024AE  0EF1               	movlw	-15
  7255  0024B0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7256  0024B6  0EF2               	movlw	-14
  7257  0024B8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7258  0024BE  2ADF               	incf	indf2,f,c
  7259                           
  7260                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7261                           ;stkvar	_fp @ sp[(-11)+-2]
  7262  0024C0  0EF3               	movlw	-13
  7263  0024C2  006F FF8F FFE6     	movff	plusw1,postinc1
  7264  0024C8  006F FF8F FFE6     	movff	plusw1,postinc1
  7265  0024CE  0E25               	movlw	37
  7266  0024D0  6EE6               	movwf	postinc1,c
  7267  0024D2  0E00               	movlw	0
  7268  0024D4  6EE6               	movwf	postinc1,c
  7269  0024D6  ECB3  F021         	call	_fputc	;wreg free
  7270  0024DA                     l6857:
  7271                           
  7272                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7273  0024DA  0E01               	movlw	1
  7274  0024DC  D00A               	goto	L18
  7275  0024DE                     l6861:
  7276                           
  7277                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7278                           ;stkvar	_fmt @ sp[(-11)+-4]
  7279  0024DE  0EF1               	movlw	-15
  7280  0024E0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7281  0024E6  0EF2               	movlw	-14
  7282  0024E8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7283  0024EE  2ADF               	incf	indf2,f,c
  7284                           
  7285                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7286  0024F0  0E00               	movlw	0
  7287  0024F2                     L18:
  7288  0024F2  6E3C               	movwf	btemp,c
  7289  0024F4  0E00               	movlw	0
  7290  0024F6  6E3D               	movwf	btemp+1,c
  7291  0024F8  D027               	goto	l1735
  7292  0024FA                     l6867:
  7293                           
  7294                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7295                           ;stkvar	_fp @ sp[(-11)+-2]
  7296  0024FA  0EF3               	movlw	-13
  7297  0024FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7298  002502  006F FF8F FFE6     	movff	plusw1,postinc1
  7299                           
  7300                           ;stkvar	_fmt @ sp[(-13)+-4]
  7301  002508  0EEF               	movlw	-17
  7302  00250A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7303  002510  0EF0               	movlw	-16
  7304  002512  006F FF8F FFDA     	movff	plusw1,fsr2h
  7305  002518  006F FF7F FFF6     	movff	indf2,tblptrl
  7306  00251E                     	if	1	;There is more than 1 active tblptr byte
  7307  00251E  0E20               	movlw	high __smallconst
  7308  002520  6EF7               	movwf	tblptrh,c
  7309  002522                     	endif
  7310  002522                     	if	0	;tblptru may be non-zero
  7311  002522                     	endif
  7312  002522                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7313  002522  0E00               	movlw	low (__smallconst shr (0+16))
  7314  002524  6EF8               	movwf	tblptru,c
  7315  002526                     	endif
  7316  002526  0008               	tblrd		*
  7317  002528  50F5               	movf	tablat,w,c
  7318  00252A  6EE6               	movwf	postinc1,c
  7319  00252C  0E00               	movlw	0
  7320  00252E  6EE6               	movwf	postinc1,c
  7321  002530  ECB3  F021         	call	_fputc	;wreg free
  7322                           
  7323                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7324                           ;stkvar	_fmt @ sp[(-11)+-4]
  7325  002534  0EF1               	movlw	-15
  7326  002536  006F FF8F FFD9     	movff	plusw1,fsr2l
  7327  00253C  0EF2               	movlw	-14
  7328  00253E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7329  002544  2ADF               	incf	indf2,f,c
  7330  002546  D7C9               	goto	l6857
  7331  002548                     l1735:
  7332                           
  7333                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  7334  002548  0EEF               	movlw	239
  7335  00254A  26E1               	addwf	fsr1l,f,c
  7336  00254C  0EFF               	movlw	255
  7337  00254E  22E2               	addwfc	fsr1h,f,c
  7338  002550  0012               	return		;funcret
  7339  002552                     __end_of_vfpfcnvrt:
  7340                           	opt callstack 0
  7341                           
  7342 ;; *************** function _strncmp *****************
  7343 ;; Defined at:
  7344 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;  _l              1  [STACK] PTR const unsigned char 
  7347 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  7348 ;;		 -> STR_10(17), STR_9(19), STR_8(20), STR_7(6), 
  7349 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  7350 ;;		 -> STR_1(17), 
  7351 ;;  _r              1  [STACK] PTR const unsigned char 
  7352 ;;		 -> STR_21(3), STR_17(3), 
  7353 ;;  n               2  [STACK] unsigned int 
  7354 ;; Auto vars:     Size  Location     Type
  7355 ;;  r               1  [STACK] PTR const unsigned char 
  7356 ;;		 -> STR_21(3), STR_17(3), 
  7357 ;;  l               1  [STACK] PTR const unsigned char 
  7358 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(21), 
  7359 ;;		 -> STR_10(17), STR_9(19), STR_8(20), STR_7(6), 
  7360 ;;		 -> STR_6(6), STR_5(14), STR_4(15), STR_2(12), 
  7361 ;;		 -> STR_1(17), 
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  2  [STACK] int 
  7364 ;; Registers used:
  7365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7375 ;;Total ram usage:        0 bytes
  7376 ;; Hardware stack levels used:    1
  7377 ;; Hardware stack levels required when called:    3
  7378 ;; This function calls:
  7379 ;;		Nothing
  7380 ;; This function is called by:
  7381 ;;		_vfpfcnvrt
  7382 ;; This function uses a reentrant model
  7383 ;;
  7384                           
  7385                           	psect	text34
  7386  0040C2                     __ptext34:
  7387                           	opt callstack 0
  7388  0040C2                     _strncmp:
  7389                           	opt callstack 0
  7390                           
  7391                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7392  0040C2  52E6               	movf	postinc1,f,c
  7393  0040C4  52E6               	movf	postinc1,f,c
  7394                           
  7395                           ;stkvar	__l @ sp[(-2)+-1]
  7396                           
  7397                           ;incstack = 0
  7398  0040C6  0EFD               	movlw	-3
  7399  0040C8  006F FF8C  F047    	movff	plusw1,btemp+11
  7400                           
  7401                           ;stkvar	_l @ sp[(-2)+1]
  7402  0040CE  0EFF               	movlw	-1
  7403  0040D0  0060  F11F  FFE3   	movff	btemp+11,plusw1
  7404                           
  7405                           ;stkvar	__r @ sp[(-2)+-2]
  7406  0040D6  0EFC               	movlw	-4
  7407  0040D8  006F FF8C  F047    	movff	plusw1,btemp+11
  7408                           
  7409                           ;stkvar	_r @ sp[(-2)+0]
  7410  0040DE  0EFE               	movlw	-2
  7411  0040E0  0060  F11F  FFE3   	movff	btemp+11,plusw1
  7412                           
  7413                           ;stkvar	_n @ sp[(-2)+-4]
  7414  0040E6  0EFA               	movlw	-6
  7415  0040E8  006F FF8C  F03C    	movff	plusw1,btemp
  7416  0040EE  0E01               	movlw	1
  7417  0040F0  5E3C               	subwf	btemp,f,c
  7418  0040F2  0EFA               	movlw	-6
  7419  0040F4  0060  F0F3  FFE3   	movff	btemp,plusw1
  7420  0040FA  0EFB               	movlw	-5
  7421  0040FC  006F FF8C  F03C    	movff	plusw1,btemp
  7422  004102  0E00               	movlw	0
  7423  004104  5A3C               	subwfb	btemp,f,c
  7424  004106  0EFB               	movlw	-5
  7425  004108  0060  F0F3  FFE3   	movff	btemp,plusw1
  7426  00410E  0EFA               	movlw	-6
  7427  004110  28E3               	incf	plusw1,w,c
  7428  004112  E121               	bnz	l5037
  7429  004114  0EFB               	movlw	-5
  7430  004116  28E3               	incf	plusw1,w,c
  7431  004118  A4D8               	btfss	status,2,c
  7432  00411A  D01D               	goto	l5037
  7433  00411C  0E00               	movlw	0
  7434  00411E  6E3C               	movwf	btemp,c
  7435  004120  0E00               	movlw	0
  7436  004122  6E3D               	movwf	btemp+1,c
  7437  004124  D091               	goto	l2484
  7438  004126                     l5033:
  7439                           
  7440                           ;stkvar	_l @ sp[(-2)+1]
  7441  004126  0EFF               	movlw	-1
  7442  004128  2AE3               	incf	plusw1,f,c
  7443                           
  7444                           ;stkvar	_r @ sp[(-2)+0]
  7445  00412A  0EFE               	movlw	-2
  7446  00412C  2AE3               	incf	plusw1,f,c
  7447                           
  7448                           ;stkvar	_n @ sp[(-2)+-4]
  7449  00412E  0EFA               	movlw	-6
  7450  004130  006F FF8C  F03C    	movff	plusw1,btemp
  7451  004136  0E01               	movlw	1
  7452  004138  5E3C               	subwf	btemp,f,c
  7453  00413A  0EFA               	movlw	-6
  7454  00413C  0060  F0F3  FFE3   	movff	btemp,plusw1
  7455  004142  0EFB               	movlw	-5
  7456  004144  006F FF8C  F03C    	movff	plusw1,btemp
  7457  00414A  0E00               	movlw	0
  7458  00414C  5A3C               	subwfb	btemp,f,c
  7459  00414E  0EFB               	movlw	-5
  7460  004150  0060  F0F3  FFE3   	movff	btemp,plusw1
  7461  004156                     l5037:
  7462                           
  7463                           ;stkvar	_l @ sp[(-2)+1]
  7464  004156  50E1               	movf	fsr1l,w,c
  7465  004158  0FFF               	addlw	-1
  7466  00415A  6ED9               	movwf	fsr2l,c
  7467  00415C  50E2               	movf	fsr1h,w,c
  7468  00415E  6EDA               	movwf	fsr2h,c
  7469  004160  0EFF               	movlw	255
  7470  004162  22DA               	addwfc	fsr2h,f,c
  7471  004164  006F FF7F FFF6     	movff	indf2,tblptrl
  7472  00416A                     	if	1	;There is more than 1 active tblptr byte
  7473  00416A  0E20               	movlw	high __smallconst
  7474  00416C  6EF7               	movwf	tblptrh,c
  7475  00416E                     	endif
  7476  00416E                     	if	0	;tblptru may be non-zero
  7477  00416E                     	endif
  7478  00416E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7479  00416E  0E00               	movlw	low (__smallconst shr (0+16))
  7480  004170  6EF8               	movwf	tblptru,c
  7481  004172                     	endif
  7482  004172  0008               	tblrd		*
  7483  004174  50F5               	movf	tablat,w,c
  7484  004176  0900               	iorlw	0
  7485  004178  B4D8               	btfsc	status,2,c
  7486  00417A  D041               	goto	u2490
  7487                           
  7488                           ;stkvar	_r @ sp[(-2)+0]
  7489  00417C  50E1               	movf	fsr1l,w,c
  7490  00417E  0FFE               	addlw	-2
  7491  004180  6ED9               	movwf	fsr2l,c
  7492  004182  50E2               	movf	fsr1h,w,c
  7493  004184  6EDA               	movwf	fsr2h,c
  7494  004186  0EFF               	movlw	255
  7495  004188  22DA               	addwfc	fsr2h,f,c
  7496  00418A  006F FF7F FFF6     	movff	indf2,tblptrl
  7497  004190                     	if	1	;There is more than 1 active tblptr byte
  7498  004190  0E20               	movlw	high __smallconst
  7499  004192  6EF7               	movwf	tblptrh,c
  7500  004194                     	endif
  7501  004194                     	if	0	;tblptru may be non-zero
  7502  004194                     	endif
  7503  004194                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7504  004194  0E00               	movlw	low (__smallconst shr (0+16))
  7505  004196  6EF8               	movwf	tblptru,c
  7506  004198                     	endif
  7507  004198  0008               	tblrd		*
  7508  00419A  50F5               	movf	tablat,w,c
  7509  00419C  0900               	iorlw	0
  7510  00419E  B4D8               	btfsc	status,2,c
  7511  0041A0  D02E               	goto	u2490
  7512                           
  7513                           ;stkvar	_n @ sp[(-2)+-4]
  7514  0041A2  0EFA               	movlw	-6
  7515  0041A4  006F FF8C  F03C    	movff	plusw1,btemp
  7516  0041AA  0EFB               	movlw	-5
  7517  0041AC  50E3               	movf	plusw1,w,c
  7518  0041AE  103C               	iorwf	btemp,w,c
  7519  0041B0  B4D8               	btfsc	status,2,c
  7520  0041B2  D025               	goto	u2490
  7521                           
  7522                           ;stkvar	_l @ sp[(-2)+1]
  7523  0041B4  50E1               	movf	fsr1l,w,c
  7524  0041B6  0FFF               	addlw	-1
  7525  0041B8  6ED9               	movwf	fsr2l,c
  7526  0041BA  50E2               	movf	fsr1h,w,c
  7527  0041BC  6EDA               	movwf	fsr2h,c
  7528  0041BE  0EFF               	movlw	255
  7529  0041C0  22DA               	addwfc	fsr2h,f,c
  7530  0041C2  006F FF7F FFF6     	movff	indf2,tblptrl
  7531  0041C8                     	if	1	;There is more than 1 active tblptr byte
  7532  0041C8  0E20               	movlw	high __smallconst
  7533  0041CA  6EF7               	movwf	tblptrh,c
  7534  0041CC                     	endif
  7535  0041CC                     	if	0	;tblptru may be non-zero
  7536  0041CC                     	endif
  7537  0041CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7538  0041CC  0E00               	movlw	low (__smallconst shr (0+16))
  7539  0041CE  6EF8               	movwf	tblptru,c
  7540  0041D0                     	endif
  7541  0041D0  0008               	tblrd		*
  7542  0041D2  006F FFD4  F047    	movff	tablat,btemp+11
  7543                           
  7544                           ;stkvar	_r @ sp[(-2)+0]
  7545  0041D8  50E1               	movf	fsr1l,w,c
  7546  0041DA  0FFE               	addlw	-2
  7547  0041DC  6ED9               	movwf	fsr2l,c
  7548  0041DE  50E2               	movf	fsr1h,w,c
  7549  0041E0  6EDA               	movwf	fsr2h,c
  7550  0041E2  0EFF               	movlw	255
  7551  0041E4  22DA               	addwfc	fsr2h,f,c
  7552  0041E6  006F FF7F FFF6     	movff	indf2,tblptrl
  7553  0041EC                     	if	1	;There is more than 1 active tblptr byte
  7554  0041EC  0E20               	movlw	high __smallconst
  7555  0041EE  6EF7               	movwf	tblptrh,c
  7556  0041F0                     	endif
  7557  0041F0                     	if	0	;tblptru may be non-zero
  7558  0041F0                     	endif
  7559  0041F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7560  0041F0  0E00               	movlw	low (__smallconst shr (0+16))
  7561  0041F2  6EF8               	movwf	tblptru,c
  7562  0041F4                     	endif
  7563  0041F4  0008               	tblrd		*
  7564  0041F6  50F5               	movf	tablat,w,c
  7565  0041F8  1847               	xorwf	btemp+11,w,c
  7566  0041FA  B4D8               	btfsc	status,2,c
  7567  0041FC  D794               	goto	l5033
  7568  0041FE                     u2490:
  7569                           
  7570                           ;stkvar	_l @ sp[(-2)+1]
  7571  0041FE  50E1               	movf	fsr1l,w,c
  7572  004200  0FFF               	addlw	-1
  7573  004202  6ED9               	movwf	fsr2l,c
  7574  004204  50E2               	movf	fsr1h,w,c
  7575  004206  6EDA               	movwf	fsr2h,c
  7576  004208  0EFF               	movlw	255
  7577  00420A  22DA               	addwfc	fsr2h,f,c
  7578  00420C  006F FF7F FFF6     	movff	indf2,tblptrl
  7579  004212                     	if	1	;There is more than 1 active tblptr byte
  7580  004212  0E20               	movlw	high __smallconst
  7581  004214  6EF7               	movwf	tblptrh,c
  7582  004216                     	endif
  7583  004216                     	if	0	;tblptru may be non-zero
  7584  004216                     	endif
  7585  004216                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7586  004216  0E00               	movlw	low (__smallconst shr (0+16))
  7587  004218  6EF8               	movwf	tblptru,c
  7588  00421A                     	endif
  7589  00421A  0008               	tblrd		*
  7590  00421C  50F5               	movf	tablat,w,c
  7591  00421E  6E3C               	movwf	btemp,c
  7592  004220  6A3D               	clrf	btemp+1,c
  7593                           
  7594                           ;stkvar	_r @ sp[(-2)+0]
  7595  004222  50E1               	movf	fsr1l,w,c
  7596  004224  0FFE               	addlw	-2
  7597  004226  6ED9               	movwf	fsr2l,c
  7598  004228  50E2               	movf	fsr1h,w,c
  7599  00422A  6EDA               	movwf	fsr2h,c
  7600  00422C  0EFF               	movlw	255
  7601  00422E  22DA               	addwfc	fsr2h,f,c
  7602  004230  006F FF7F FFF6     	movff	indf2,tblptrl
  7603  004236                     	if	1	;There is more than 1 active tblptr byte
  7604  004236  0E20               	movlw	high __smallconst
  7605  004238  6EF7               	movwf	tblptrh,c
  7606  00423A                     	endif
  7607  00423A                     	if	0	;tblptru may be non-zero
  7608  00423A                     	endif
  7609  00423A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7610  00423A  0E00               	movlw	low (__smallconst shr (0+16))
  7611  00423C  6EF8               	movwf	tblptru,c
  7612  00423E                     	endif
  7613  00423E  0008               	tblrd		*
  7614  004240  50F5               	movf	tablat,w,c
  7615  004242  5E3C               	subwf	btemp,f,c
  7616  004244  0E00               	movlw	0
  7617  004246  5A3D               	subwfb	btemp+1,f,c
  7618  004248                     l2484:
  7619                           
  7620                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  7621  004248  0EFA               	movlw	250
  7622  00424A  26E1               	addwf	fsr1l,f,c
  7623  00424C  0EFF               	movlw	255
  7624  00424E  22E2               	addwfc	fsr1h,f,c
  7625  004250  0012               	return		;funcret
  7626  004252                     __end_of_strncmp:
  7627                           	opt callstack 0
  7628                           
  7629 ;; *************** function _stoa *****************
  7630 ;; Defined at:
  7631 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7634 ;;		 -> f(5), NULL(0), 
  7635 ;;  s               2  [STACK] PTR unsigned char 
  7636 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(86), 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;  nuls            7  [STACK] unsigned char [7]
  7639 ;;  l               2  [STACK] int 
  7640 ;;  p               2  [STACK] int 
  7641 ;;  cp              2  [STACK] PTR unsigned char 
  7642 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
  7643 ;;		 -> V(86), 
  7644 ;;  w               2  [STACK] int 
  7645 ;;  i               2  [STACK] int 
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  2  [STACK] int 
  7648 ;; Registers used:
  7649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7659 ;;Total ram usage:        0 bytes
  7660 ;; Hardware stack levels used:    1
  7661 ;; Hardware stack levels required when called:    6
  7662 ;; This function calls:
  7663 ;;		_fputc
  7664 ;;		_strlen
  7665 ;; This function is called by:
  7666 ;;		_vfpfcnvrt
  7667 ;; This function uses a reentrant model
  7668 ;;
  7669                           
  7670                           	psect	text35
  7671  0032D8                     __ptext35:
  7672                           	opt callstack 0
  7673  0032D8                     _stoa:
  7674                           	opt callstack 0
  7675                           
  7676                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7677  0032D8  0E11               	movlw	17
  7678  0032DA  26E1               	addwf	fsr1l,f,c
  7679  0032DC  0E00               	movlw	0
  7680  0032DE  22E2               	addwfc	fsr1h,f,c
  7681                           
  7682                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7683                           
  7684                           ;incstack = 0
  7685  0032E0  EE20  F0ED         	lfsr	2,stoa@F1142
  7686                           
  7687                           ;stkvar	_nuls @ sp[(-17)+0]
  7688  0032E4  0E07               	movlw	7
  7689  0032E6  6E3C               	movwf	btemp,c
  7690  0032E8  0EEF               	movlw	-17
  7691  0032EA                     us372999:
  7692  0032EA  006F FF7B FFE3     	movff	postinc2,plusw1
  7693  0032F0  28E8               	incf	wreg,w,c
  7694  0032F2  2E3C               	decfsz	btemp,f,c
  7695  0032F4  D7FA               	bra	us372999
  7696                           
  7697                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  7698                           ;stkvar	_s @ sp[(-17)+-4]
  7699  0032F6  0EEB               	movlw	-21
  7700  0032F8  006F FF8C  F046    	movff	plusw1,btemp+10
  7701  0032FE  0EEC               	movlw	-20
  7702  003300  006F FF8C  F047    	movff	plusw1,btemp+11
  7703                           
  7704                           ;stkvar	_cp @ sp[(-17)+11]
  7705  003306  0EFB               	movlw	-5
  7706  003308  0060  F11F  FFE3   	movff	btemp+11,plusw1
  7707  00330E  0EFA               	movlw	-6
  7708  003310  0060  F11B  FFE3   	movff	btemp+10,plusw1
  7709                           
  7710                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  7711                           ;stkvar	_cp @ sp[(-17)+11]
  7712  003316  0EFA               	movlw	-6
  7713  003318  006F FF8C  F03C    	movff	plusw1,btemp
  7714  00331E  0EFB               	movlw	-5
  7715  003320  50E3               	movf	plusw1,w,c
  7716  003322  103C               	iorwf	btemp,w,c
  7717  003324  A4D8               	btfss	status,2,c
  7718  003326  D00E               	goto	l6755
  7719                           
  7720                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  7721                           ;stkvar	_nuls @ sp[(-17)+0]
  7722  003328  0EEF               	movlw	239
  7723  00332A  24E1               	addwf	fsr1l,w,c
  7724  00332C  6E46               	movwf	btemp+10,c
  7725  00332E  0EFF               	movlw	255
  7726  003330  20E2               	addwfc	fsr1h,w,c
  7727  003332  6E47               	movwf	btemp+11,c
  7728                           
  7729                           ;stkvar	_cp @ sp[(-17)+11]
  7730  003334  0EFB               	movlw	-5
  7731  003336  0060  F11F  FFE3   	movff	btemp+11,plusw1
  7732  00333C  0EFA               	movlw	-6
  7733  00333E  0060  F11B  FFE3   	movff	btemp+10,plusw1
  7734  003344                     l6755:
  7735                           
  7736                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  7737                           ;stkvar	_cp @ sp[(-17)+11]
  7738  003344  0EFA               	movlw	-6
  7739  003346  006F FF8F FFE6     	movff	plusw1,postinc1
  7740  00334C  006F FF8F FFE6     	movff	plusw1,postinc1
  7741  003352  EC8C  F024         	call	_strlen	;wreg free
  7742                           
  7743                           ;stkvar	_l @ sp[(-17)+7]
  7744  003356  0EF6               	movlw	-10
  7745  003358  0060  F0F3  FFE3   	movff	btemp,plusw1
  7746  00335E  0EF7               	movlw	-9
  7747  003360  0060  F0F7  FFE3   	movff	btemp+1,plusw1
  7748                           
  7749                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  7750                           ;stkvar	_p @ sp[(-17)+9]
  7751  003366  0EF8               	movlw	-8
  7752  003368  0060  F097  FFE3   	movff	_prec,plusw1
  7753  00336E  0EF9               	movlw	-7
  7754  003370  0060  F09B  FFE3   	movff	_prec+1,plusw1
  7755                           
  7756                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  7757                           ;stkvar	_p @ sp[(-17)+9]
  7758  003376  0EF9               	movlw	-7
  7759  003378  BEE3               	btfsc	plusw1,7,c
  7760  00337A  D023               	goto	l1716
  7761                           
  7762                           ;stkvar	_l @ sp[(-17)+7]
  7763                           ;stkvar	_p @ sp[(-17)+9]
  7764  00337C  50E1               	movf	fsr1l,w,c
  7765  00337E  0FF8               	addlw	-8
  7766  003380  6ED9               	movwf	fsr2l,c
  7767  003382  50E2               	movf	fsr1h,w,c
  7768  003384  6EDA               	movwf	fsr2h,c
  7769  003386  0EFF               	movlw	255
  7770  003388  22DA               	addwfc	fsr2h,f,c
  7771  00338A  0EF6               	movlw	-10
  7772  00338C  50E3               	movf	plusw1,w,c
  7773  00338E  5CDE               	subwf	postinc2,w,c
  7774  003390  50DE               	movf	postinc2,w,c
  7775  003392  0A80               	xorlw	128
  7776  003394  6E3C               	movwf	btemp,c
  7777  003396  0EF7               	movlw	-9
  7778  003398  50E3               	movf	plusw1,w,c
  7779  00339A  0A80               	xorlw	128
  7780  00339C  583C               	subwfb	btemp,w,c
  7781  00339E  B0D8               	btfsc	status,0,c
  7782  0033A0  D010               	goto	l1716
  7783                           
  7784                           ;stkvar	_p @ sp[(-17)+9]
  7785                           ;stkvar	_l @ sp[(-17)+7]
  7786  0033A2  0EF8               	movlw	-8
  7787  0033A4  006F FF8C  F03C    	movff	plusw1,btemp
  7788  0033AA  0EF6               	movlw	-10
  7789  0033AC  0060  F0F3  FFE3   	movff	btemp,plusw1
  7790  0033B2  0EF9               	movlw	-7
  7791  0033B4  006F FF8C  F03C    	movff	plusw1,btemp
  7792  0033BA  0EF7               	movlw	-9
  7793  0033BC  0060  F0F3  FFE3   	movff	btemp,plusw1
  7794  0033C2                     l1716:
  7795                           
  7796                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  7797                           ;stkvar	_l @ sp[(-17)+7]
  7798                           ;stkvar	_p @ sp[(-17)+9]
  7799  0033C2  0EF6               	movlw	-10
  7800  0033C4  006F FF8C  F03C    	movff	plusw1,btemp
  7801  0033CA  0EF8               	movlw	-8
  7802  0033CC  0060  F0F3  FFE3   	movff	btemp,plusw1
  7803  0033D2  0EF7               	movlw	-9
  7804  0033D4  006F FF8C  F03C    	movff	plusw1,btemp
  7805  0033DA  0EF9               	movlw	-7
  7806  0033DC  0060  F0F3  FFE3   	movff	btemp,plusw1
  7807                           
  7808                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  7809                           ;stkvar	_w @ sp[(-17)+13]
  7810  0033E2  0EFC               	movlw	-4
  7811  0033E4  0060  F08F  FFE3   	movff	_width,plusw1
  7812  0033EA  0EFD               	movlw	-3
  7813  0033EC  0060  F093  FFE3   	movff	_width+1,plusw1
  7814                           
  7815                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  7816  0033F2  A027               	btfss	_flags,0,c
  7817  0033F4  D01F               	goto	l6775
  7818  0033F6  D031               	goto	u3770
  7819  0033F8                     l6771:
  7820                           
  7821                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  7822                           ;stkvar	_fp @ sp[(-17)+-2]
  7823  0033F8  0EED               	movlw	-19
  7824  0033FA  006F FF8F FFE6     	movff	plusw1,postinc1
  7825  003400  006F FF8F FFE6     	movff	plusw1,postinc1
  7826  003406  0E20               	movlw	32
  7827  003408  6EE6               	movwf	postinc1,c
  7828  00340A  0E00               	movlw	0
  7829  00340C  6EE6               	movwf	postinc1,c
  7830  00340E  ECB3  F021         	call	_fputc	;wreg free
  7831                           
  7832                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  7833                           ;stkvar	_l @ sp[(-17)+7]
  7834  003412  0EF6               	movlw	-10
  7835  003414  50E3               	movf	plusw1,w,c
  7836  003416  0F01               	addlw	1
  7837  003418  6E3C               	movwf	btemp,c
  7838  00341A  0EF6               	movlw	-10
  7839  00341C  0060  F0F3  FFE3   	movff	btemp,plusw1
  7840  003422  6A3C               	clrf	btemp,c
  7841  003424  0EF7               	movlw	-9
  7842  003426  50E3               	movf	plusw1,w,c
  7843  003428  203C               	addwfc	btemp,w,c
  7844  00342A  6E3C               	movwf	btemp,c
  7845  00342C  0EF7               	movlw	-9
  7846  00342E  0060  F0F3  FFE3   	movff	btemp,plusw1
  7847  003434                     l6775:
  7848                           
  7849                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  7850                           ;stkvar	_w @ sp[(-17)+13]
  7851                           ;stkvar	_l @ sp[(-17)+7]
  7852  003434  50E1               	movf	fsr1l,w,c
  7853  003436  0FF6               	addlw	-10
  7854  003438  6ED9               	movwf	fsr2l,c
  7855  00343A  50E2               	movf	fsr1h,w,c
  7856  00343C  6EDA               	movwf	fsr2h,c
  7857  00343E  0EFF               	movlw	255
  7858  003440  22DA               	addwfc	fsr2h,f,c
  7859  003442  0EFC               	movlw	-4
  7860  003444  50E3               	movf	plusw1,w,c
  7861  003446  5CDE               	subwf	postinc2,w,c
  7862  003448  50DE               	movf	postinc2,w,c
  7863  00344A  0A80               	xorlw	128
  7864  00344C  6E3C               	movwf	btemp,c
  7865  00344E  0EFD               	movlw	-3
  7866  003450  50E3               	movf	plusw1,w,c
  7867  003452  0A80               	xorlw	128
  7868  003454  583C               	subwfb	btemp,w,c
  7869  003456  A0D8               	btfss	status,0,c
  7870  003458  D7CF               	goto	l6771
  7871  00345A                     u3770:
  7872                           
  7873                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  7874                           ;stkvar	_i @ sp[(-17)+15]
  7875  00345A  0EFE               	movlw	-2
  7876  00345C  6AE3               	clrf	plusw1,c
  7877  00345E  0EFF               	movlw	-1
  7878  003460  6AE3               	clrf	plusw1,c
  7879                           
  7880                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7881  003462  D045               	goto	l6785
  7882  003464                     l6779:
  7883                           
  7884                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  7885                           ;stkvar	_fp @ sp[(-17)+-2]
  7886  003464  0EED               	movlw	-19
  7887  003466  006F FF8F FFE6     	movff	plusw1,postinc1
  7888  00346C  006F FF8F FFE6     	movff	plusw1,postinc1
  7889                           
  7890                           ;stkvar	_cp @ sp[(-19)+11]
  7891  003472  0EF8               	movlw	-8
  7892  003474  006F FF8F FFF6     	movff	plusw1,tblptrl
  7893  00347A  0EF9               	movlw	-7
  7894  00347C  006F FF8F FFF7     	movff	plusw1,tblptrh
  7895  003482  0E00               	movlw	low (__smallconst shr (0+16))
  7896  003484  6EF8               	movwf	tblptru,c
  7897  003486  0E1F               	movlw	(high __ramtop+-1)
  7898  003488  64F7               	cpfsgt	tblptrh,c
  7899  00348A  D003               	bra	u3787
  7900  00348C  0008               	tblrd		*
  7901  00348E  50F5               	movf	tablat,w,c
  7902  003490  D007               	bra	u3780
  7903  003492                     u3787:
  7904  003492  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7905  003498  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7906  00349E  50EF               	movf	indf0,w,c
  7907  0034A0                     u3780:
  7908  0034A0  6EE6               	movwf	postinc1,c
  7909  0034A2  0E00               	movlw	0
  7910  0034A4  6EE6               	movwf	postinc1,c
  7911  0034A6  ECB3  F021         	call	_fputc	;wreg free
  7912                           
  7913                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  7914                           ;stkvar	_cp @ sp[(-17)+11]
  7915  0034AA  0EFA               	movlw	-6
  7916  0034AC  50E3               	movf	plusw1,w,c
  7917  0034AE  0F01               	addlw	1
  7918  0034B0  6E3C               	movwf	btemp,c
  7919  0034B2  0EFA               	movlw	-6
  7920  0034B4  0060  F0F3  FFE3   	movff	btemp,plusw1
  7921  0034BA  6A3C               	clrf	btemp,c
  7922  0034BC  0EFB               	movlw	-5
  7923  0034BE  50E3               	movf	plusw1,w,c
  7924  0034C0  203C               	addwfc	btemp,w,c
  7925  0034C2  6E3C               	movwf	btemp,c
  7926  0034C4  0EFB               	movlw	-5
  7927  0034C6  0060  F0F3  FFE3   	movff	btemp,plusw1
  7928                           
  7929                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  7930                           ;stkvar	_i @ sp[(-17)+15]
  7931  0034CC  0EFE               	movlw	-2
  7932  0034CE  50E3               	movf	plusw1,w,c
  7933  0034D0  0F01               	addlw	1
  7934  0034D2  6E3C               	movwf	btemp,c
  7935  0034D4  0EFE               	movlw	-2
  7936  0034D6  0060  F0F3  FFE3   	movff	btemp,plusw1
  7937  0034DC  6A3C               	clrf	btemp,c
  7938  0034DE  0EFF               	movlw	-1
  7939  0034E0  50E3               	movf	plusw1,w,c
  7940  0034E2  203C               	addwfc	btemp,w,c
  7941  0034E4  6E3C               	movwf	btemp,c
  7942  0034E6  0EFF               	movlw	-1
  7943  0034E8  0060  F0F3  FFE3   	movff	btemp,plusw1
  7944  0034EE                     l6785:
  7945                           
  7946                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7947                           ;stkvar	_p @ sp[(-17)+9]
  7948                           ;stkvar	_i @ sp[(-17)+15]
  7949  0034EE  50E1               	movf	fsr1l,w,c
  7950  0034F0  0FFE               	addlw	-2
  7951  0034F2  6ED9               	movwf	fsr2l,c
  7952  0034F4  50E2               	movf	fsr1h,w,c
  7953  0034F6  6EDA               	movwf	fsr2h,c
  7954  0034F8  0EFF               	movlw	255
  7955  0034FA  22DA               	addwfc	fsr2h,f,c
  7956  0034FC  0EF8               	movlw	-8
  7957  0034FE  50E3               	movf	plusw1,w,c
  7958  003500  5CDE               	subwf	postinc2,w,c
  7959  003502  50DE               	movf	postinc2,w,c
  7960  003504  0A80               	xorlw	128
  7961  003506  6E3C               	movwf	btemp,c
  7962  003508  0EF9               	movlw	-7
  7963  00350A  50E3               	movf	plusw1,w,c
  7964  00350C  0A80               	xorlw	128
  7965  00350E  583C               	subwfb	btemp,w,c
  7966  003510  A0D8               	btfss	status,0,c
  7967  003512  D7A8               	goto	l6779
  7968                           
  7969                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  7970  003514  B027               	btfsc	_flags,0,c
  7971  003516  D01F               	goto	l6793
  7972  003518  D031               	goto	u3810
  7973  00351A                     l6789:
  7974                           
  7975                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  7976                           ;stkvar	_fp @ sp[(-17)+-2]
  7977  00351A  0EED               	movlw	-19
  7978  00351C  006F FF8F FFE6     	movff	plusw1,postinc1
  7979  003522  006F FF8F FFE6     	movff	plusw1,postinc1
  7980  003528  0E20               	movlw	32
  7981  00352A  6EE6               	movwf	postinc1,c
  7982  00352C  0E00               	movlw	0
  7983  00352E  6EE6               	movwf	postinc1,c
  7984  003530  ECB3  F021         	call	_fputc	;wreg free
  7985                           
  7986                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  7987                           ;stkvar	_l @ sp[(-17)+7]
  7988  003534  0EF6               	movlw	-10
  7989  003536  50E3               	movf	plusw1,w,c
  7990  003538  0F01               	addlw	1
  7991  00353A  6E3C               	movwf	btemp,c
  7992  00353C  0EF6               	movlw	-10
  7993  00353E  0060  F0F3  FFE3   	movff	btemp,plusw1
  7994  003544  6A3C               	clrf	btemp,c
  7995  003546  0EF7               	movlw	-9
  7996  003548  50E3               	movf	plusw1,w,c
  7997  00354A  203C               	addwfc	btemp,w,c
  7998  00354C  6E3C               	movwf	btemp,c
  7999  00354E  0EF7               	movlw	-9
  8000  003550  0060  F0F3  FFE3   	movff	btemp,plusw1
  8001  003556                     l6793:
  8002                           
  8003                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  8004                           ;stkvar	_w @ sp[(-17)+13]
  8005                           ;stkvar	_l @ sp[(-17)+7]
  8006  003556  50E1               	movf	fsr1l,w,c
  8007  003558  0FF6               	addlw	-10
  8008  00355A  6ED9               	movwf	fsr2l,c
  8009  00355C  50E2               	movf	fsr1h,w,c
  8010  00355E  6EDA               	movwf	fsr2h,c
  8011  003560  0EFF               	movlw	255
  8012  003562  22DA               	addwfc	fsr2h,f,c
  8013  003564  0EFC               	movlw	-4
  8014  003566  50E3               	movf	plusw1,w,c
  8015  003568  5CDE               	subwf	postinc2,w,c
  8016  00356A  50DE               	movf	postinc2,w,c
  8017  00356C  0A80               	xorlw	128
  8018  00356E  6E3C               	movwf	btemp,c
  8019  003570  0EFD               	movlw	-3
  8020  003572  50E3               	movf	plusw1,w,c
  8021  003574  0A80               	xorlw	128
  8022  003576  583C               	subwfb	btemp,w,c
  8023  003578  A0D8               	btfss	status,0,c
  8024  00357A  D7CF               	goto	l6789
  8025  00357C                     u3810:
  8026                           
  8027                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  8028                           ;stkvar	_l @ sp[(-17)+7]
  8029  00357C  0EF6               	movlw	-10
  8030  00357E  006F FF8C  F03C    	movff	plusw1,btemp
  8031  003584  0EF7               	movlw	-9
  8032  003586  006F FF8C  F03D    	movff	plusw1,btemp+1
  8033                           
  8034                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  8035  00358C  0EEB               	movlw	235
  8036  00358E  26E1               	addwf	fsr1l,f,c
  8037  003590  0EFF               	movlw	255
  8038  003592  22E2               	addwfc	fsr1h,f,c
  8039  003594  0012               	return		;funcret
  8040  003596                     __end_of_stoa:
  8041                           	opt callstack 0
  8042                           
  8043 ;; *************** function _dtoa *****************
  8044 ;; Defined at:
  8045 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8048 ;;		 -> f(5), NULL(0), 
  8049 ;;  d               8  [STACK] long long 
  8050 ;; Auto vars:     Size  Location     Type
  8051 ;;  n               8  [STACK] long long 
  8052 ;;  i               2  [STACK] int 
  8053 ;;  s               2  [STACK] int 
  8054 ;;  w               2  [STACK] int 
  8055 ;;  p               2  [STACK] int 
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  2  [STACK] int 
  8058 ;; Registers used:
  8059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8069 ;;Total ram usage:        0 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:    8
  8072 ;; This function calls:
  8073 ;;		___aodiv
  8074 ;;		___aomod
  8075 ;;		_abs
  8076 ;;		_pad
  8077 ;; This function is called by:
  8078 ;;		_vfpfcnvrt
  8079 ;; This function uses a reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text36
  8083  002552                     __ptext36:
  8084                           	opt callstack 0
  8085  002552                     _dtoa:
  8086                           	opt callstack 0
  8087                           
  8088                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8089  002552  0E12               	movlw	18
  8090  002554  26E1               	addwf	fsr1l,f,c
  8091  002556  0E00               	movlw	0
  8092  002558  22E2               	addwfc	fsr1h,f,c
  8093                           
  8094                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  8095                           ;stkvar	_d @ sp[(-18)+-10]
  8096                           
  8097                           ;incstack = 0
  8098  00255A  0EE4               	movlw	228
  8099  00255C  24E1               	addwf	fsr1l,w,c
  8100  00255E  6ED9               	movwf	fsr2l,c
  8101  002560  0EFF               	movlw	255
  8102  002562  20E2               	addwfc	fsr1h,w,c
  8103  002564  6EDA               	movwf	fsr2h,c
  8104                           
  8105                           ;stkvar	_n @ sp[(-18)+2]
  8106  002566  0E08               	movlw	8
  8107  002568  6E3C               	movwf	btemp,c
  8108  00256A  0EF0               	movlw	-16
  8109  00256C                     us355999:
  8110  00256C  006F FF7B FFE3     	movff	postinc2,plusw1
  8111  002572  28E8               	incf	wreg,w,c
  8112  002574  2E3C               	decfsz	btemp,f,c
  8113  002576  D7FA               	bra	us355999
  8114                           
  8115                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  8116                           ;stkvar	_n @ sp[(-18)+2]
  8117  002578  0EF7               	movlw	-9
  8118  00257A  AEE3               	btfss	plusw1,7,c
  8119  00257C  D002               	goto	u3560
  8120  00257E  0E01               	movlw	1
  8121  002580  D001               	goto	u3570
  8122  002582                     u3560:
  8123  002582  0E00               	movlw	0
  8124  002584                     u3570:
  8125  002584  6E46               	movwf	btemp+10,c
  8126  002586  6A47               	clrf	btemp+11,c
  8127                           
  8128                           ;stkvar	_s @ sp[(-18)+12]
  8129  002588  0EFA               	movlw	-6
  8130  00258A  0060  F11B  FFE3   	movff	btemp+10,plusw1
  8131  002590  0EFB               	movlw	-5
  8132  002592  0060  F11F  FFE3   	movff	btemp+11,plusw1
  8133                           
  8134                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8135                           ;stkvar	_s @ sp[(-18)+12]
  8136  002598  0EFA               	movlw	-6
  8137  00259A  006F FF8C  F03C    	movff	plusw1,btemp
  8138  0025A0  0EFB               	movlw	-5
  8139  0025A2  50E3               	movf	plusw1,w,c
  8140  0025A4  103C               	iorwf	btemp,w,c
  8141  0025A6  B4D8               	btfsc	status,2,c
  8142  0025A8  D025               	goto	u3590
  8143                           
  8144                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8145                           ;stkvar	_n @ sp[(-18)+2]
  8146                           ;stkvar	_n @ sp[(-18)+2]
  8147  0025AA  0EF0               	movlw	-16
  8148  0025AC  6CE3               	negf	plusw1,c
  8149  0025AE  0EF1               	movlw	-15
  8150  0025B0  1EE3               	comf	plusw1,f,c
  8151  0025B2  0EF2               	movlw	-14
  8152  0025B4  1EE3               	comf	plusw1,f,c
  8153  0025B6  0EF3               	movlw	-13
  8154  0025B8  1EE3               	comf	plusw1,f,c
  8155  0025BA  0EF4               	movlw	-12
  8156  0025BC  1EE3               	comf	plusw1,f,c
  8157  0025BE  0EF5               	movlw	-11
  8158  0025C0  1EE3               	comf	plusw1,f,c
  8159  0025C2  0EF6               	movlw	-10
  8160  0025C4  1EE3               	comf	plusw1,f,c
  8161  0025C6  0EF7               	movlw	-9
  8162  0025C8  1EE3               	comf	plusw1,f,c
  8163  0025CA  E314               	bnc	u3590
  8164  0025CC  0EF1               	movlw	-15
  8165  0025CE  2AE3               	incf	plusw1,f,c
  8166  0025D0  E311               	bnc	u3590
  8167  0025D2  0EF2               	movlw	-14
  8168  0025D4  2AE3               	incf	plusw1,f,c
  8169  0025D6  E30E               	bnc	u3590
  8170  0025D8  0EF3               	movlw	-13
  8171  0025DA  2AE3               	incf	plusw1,f,c
  8172  0025DC  E30B               	bnc	u3590
  8173  0025DE  0EF4               	movlw	-12
  8174  0025E0  2AE3               	incf	plusw1,f,c
  8175  0025E2  E308               	bnc	u3590
  8176  0025E4  0EF5               	movlw	-11
  8177  0025E6  2AE3               	incf	plusw1,f,c
  8178  0025E8  E305               	bnc	u3590
  8179  0025EA  0EF6               	movlw	-10
  8180  0025EC  2AE3               	incf	plusw1,f,c
  8181  0025EE  E302               	bnc	u3590
  8182  0025F0  0EF7               	movlw	-9
  8183  0025F2  2AE3               	incf	plusw1,f,c
  8184  0025F4                     u3590:
  8185                           
  8186                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  8187  0025F4  AE26               	btfss	_prec+1,7,c
  8188                           
  8189                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  8190  0025F6  9227               	bcf	_flags,1,c
  8191                           
  8192                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  8193  0025F8  BE26               	btfsc	_prec+1,7,c
  8194  0025FA  D005               	goto	u3610
  8195  0025FC  5026               	movf	_prec+1,w,c
  8196  0025FE  E110               	bnz	l6697
  8197  002600  0425               	decf	_prec,w,c
  8198  002602  B0D8               	btfsc	status,0,c
  8199  002604  D00D               	goto	l6697
  8200  002606                     u3610:
  8201  002606  0E01               	movlw	1
  8202  002608  6E46               	movwf	btemp+10,c
  8203  00260A  0E00               	movlw	0
  8204  00260C  6E47               	movwf	btemp+11,c
  8205                           
  8206                           ;stkvar	_p @ sp[(-18)+16]
  8207  00260E  0EFE               	movlw	-2
  8208  002610  0060  F11B  FFE3   	movff	btemp+10,plusw1
  8209  002616  0EFF               	movlw	-1
  8210  002618  0060  F11F  FFE3   	movff	btemp+11,plusw1
  8211  00261E  D008               	goto	l1689
  8212  002620                     l6697:
  8213                           
  8214                           ;stkvar	_p @ sp[(-18)+16]
  8215  002620  0EFE               	movlw	-2
  8216  002622  0060  F097  FFE3   	movff	_prec,plusw1
  8217  002628  0EFF               	movlw	-1
  8218  00262A  0060  F09B  FFE3   	movff	_prec+1,plusw1
  8219  002630                     l1689:
  8220                           
  8221                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8222                           ;stkvar	_w @ sp[(-18)+14]
  8223  002630  0EFC               	movlw	-4
  8224  002632  0060  F08F  FFE3   	movff	_width,plusw1
  8225  002638  0EFD               	movlw	-3
  8226  00263A  0060  F093  FFE3   	movff	_width+1,plusw1
  8227                           
  8228                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  8229                           ;stkvar	_s @ sp[(-18)+12]
  8230  002640  0EFA               	movlw	-6
  8231  002642  006F FF8C  F03C    	movff	plusw1,btemp
  8232  002648  0EFB               	movlw	-5
  8233  00264A  50E3               	movf	plusw1,w,c
  8234  00264C  103C               	iorwf	btemp,w,c
  8235  00264E  A4D8               	btfss	status,2,c
  8236  002650  D002               	goto	u3630
  8237  002652  A427               	btfss	_flags,2,c
  8238  002654  D00A               	goto	l6705
  8239  002656                     u3630:
  8240                           
  8241                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  8242                           ;stkvar	_w @ sp[(-18)+14]
  8243  002656  50E1               	movf	fsr1l,w,c
  8244  002658  0FFC               	addlw	-4
  8245  00265A  6ED9               	movwf	fsr2l,c
  8246  00265C  50E2               	movf	fsr1h,w,c
  8247  00265E  6EDA               	movwf	fsr2h,c
  8248  002660  0EFF               	movlw	255
  8249  002662  22DA               	addwfc	fsr2h,f,c
  8250  002664  06DE               	decf	postinc2,f,c
  8251  002666  0E00               	movlw	0
  8252  002668  5ADD               	subwfb	postdec2,f,c
  8253  00266A                     l6705:
  8254                           
  8255                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  8256  00266A  0E1F               	movlw	31
  8257  00266C  6E46               	movwf	btemp+10,c
  8258  00266E  0E00               	movlw	0
  8259  002670  6E47               	movwf	btemp+11,c
  8260                           
  8261                           ;stkvar	_i @ sp[(-18)+10]
  8262  002672  0EF8               	movlw	-8
  8263  002674  0060  F11B  FFE3   	movff	btemp+10,plusw1
  8264  00267A  0EF9               	movlw	-7
  8265  00267C  0060  F11F  FFE3   	movff	btemp+11,plusw1
  8266                           
  8267                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  8268  002682  0101               	movlb	1	; () banked
  8269  002684  6BCE               	clrf	(_dbuf+31)& (0+255),b
  8270                           
  8271                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8272  002686  D109               	goto	l6719
  8273  002688                     l6709:
  8274                           
  8275                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  8276                           ;stkvar	_i @ sp[(-18)+10]
  8277  002688  50E1               	movf	fsr1l,w,c
  8278  00268A  0FF8               	addlw	-8
  8279  00268C  6ED9               	movwf	fsr2l,c
  8280  00268E  50E2               	movf	fsr1h,w,c
  8281  002690  6EDA               	movwf	fsr2h,c
  8282  002692  0EFF               	movlw	255
  8283  002694  22DA               	addwfc	fsr2h,f,c
  8284  002696  06DE               	decf	postinc2,f,c
  8285  002698  0E00               	movlw	0
  8286  00269A  5ADD               	subwfb	postdec2,f,c
  8287                           
  8288                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  8289  00269C  0E0A               	movlw	10
  8290  00269E  6EE6               	movwf	postinc1,c
  8291  0026A0  0E00               	movlw	0
  8292  0026A2  6EE6               	movwf	postinc1,c
  8293  0026A4  0E00               	movlw	0
  8294  0026A6  6EE6               	movwf	postinc1,c
  8295  0026A8  0E00               	movlw	0
  8296  0026AA  6EE6               	movwf	postinc1,c
  8297  0026AC  0E00               	movlw	0
  8298  0026AE  6EE6               	movwf	postinc1,c
  8299  0026B0  0E00               	movlw	0
  8300  0026B2  6EE6               	movwf	postinc1,c
  8301  0026B4  0E00               	movlw	0
  8302  0026B6  6EE6               	movwf	postinc1,c
  8303  0026B8  0E00               	movlw	0
  8304  0026BA  6EE6               	movwf	postinc1,c
  8305                           
  8306                           ;stkvar	_n @ sp[(-26)+2]
  8307  0026BC  50E1               	movf	fsr1l,w,c
  8308  0026BE  0FE8               	addlw	-24
  8309  0026C0  6ED9               	movwf	fsr2l,c
  8310  0026C2  50E2               	movf	fsr1h,w,c
  8311  0026C4  6EDA               	movwf	fsr2h,c
  8312  0026C6  0EFF               	movlw	255
  8313  0026C8  22DA               	addwfc	fsr2h,f,c
  8314  0026CA  006F FF7B FFE6     	movff	postinc2,postinc1
  8315  0026D0  006F FF7B FFE6     	movff	postinc2,postinc1
  8316  0026D6  006F FF7B FFE6     	movff	postinc2,postinc1
  8317  0026DC  006F FF7B FFE6     	movff	postinc2,postinc1
  8318  0026E2  006F FF7B FFE6     	movff	postinc2,postinc1
  8319  0026E8  006F FF7B FFE6     	movff	postinc2,postinc1
  8320  0026EE  006F FF7B FFE6     	movff	postinc2,postinc1
  8321  0026F4  006F FF7B FFE6     	movff	postinc2,postinc1
  8322  0026FA  EC5F  F01E         	call	___aomod	;wreg free
  8323  0026FE  52E5               	movf	postdec1,f,c
  8324  002700  006F FF9C  F053    	movff	indf1,btemp+23
  8325  002706  52E5               	movf	postdec1,f,c
  8326  002708  006F FF9C  F052    	movff	indf1,btemp+22
  8327  00270E  52E5               	movf	postdec1,f,c
  8328  002710  006F FF9C  F051    	movff	indf1,btemp+21
  8329  002716  52E5               	movf	postdec1,f,c
  8330  002718  006F FF9C  F050    	movff	indf1,btemp+20
  8331  00271E  52E5               	movf	postdec1,f,c
  8332  002720  006F FF9C  F04F    	movff	indf1,btemp+19
  8333  002726  52E5               	movf	postdec1,f,c
  8334  002728  006F FF9C  F04E    	movff	indf1,btemp+18
  8335  00272E  52E5               	movf	postdec1,f,c
  8336  002730  006F FF9C  F04D    	movff	indf1,btemp+17
  8337  002736  52E5               	movf	postdec1,f,c
  8338  002738  006F FF9C  F04C    	movff	indf1,btemp+16
  8339  00273E  0EF8               	movlw	248
  8340  002740  26E1               	addwf	fsr1l,f,c
  8341  002742  0EFF               	movlw	255
  8342  002744  22E2               	addwfc	fsr1h,f,c
  8343  002746  0060  F130  F046   	movff	btemp+16,btemp+10
  8344  00274C  0060  F134  F047   	movff	btemp+17,btemp+11
  8345  002752  0060  F11B  FFE6   	movff	btemp+10,postinc1
  8346  002758  0060  F11F  FFE6   	movff	btemp+11,postinc1
  8347  00275E  EC3A  F028         	call	_abs	;wreg free
  8348  002762  0E30               	movlw	48
  8349  002764  263C               	addwf	btemp,f,c
  8350                           
  8351                           ;stkvar	_i @ sp[(-18)+10]
  8352  002766  0EF8               	movlw	-8
  8353  002768  006F FF8C  F046    	movff	plusw1,btemp+10
  8354  00276E  0EF9               	movlw	-7
  8355  002770  006F FF8C  F047    	movff	plusw1,btemp+11
  8356  002776  0EAF               	movlw	low _dbuf
  8357  002778  2446               	addwf	btemp+10,w,c
  8358  00277A  6ED9               	movwf	fsr2l,c
  8359  00277C  0E01               	movlw	high _dbuf
  8360  00277E  2047               	addwfc	btemp+11,w,c
  8361  002780  6EDA               	movwf	fsr2h,c
  8362  002782  0060  F0F3  FFDF   	movff	btemp,indf2
  8363                           
  8364                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  8365                           ;stkvar	_p @ sp[(-18)+16]
  8366  002788  50E1               	movf	fsr1l,w,c
  8367  00278A  0FFE               	addlw	-2
  8368  00278C  6ED9               	movwf	fsr2l,c
  8369  00278E  50E2               	movf	fsr1h,w,c
  8370  002790  6EDA               	movwf	fsr2h,c
  8371  002792  0EFF               	movlw	255
  8372  002794  22DA               	addwfc	fsr2h,f,c
  8373  002796  06DE               	decf	postinc2,f,c
  8374  002798  0E00               	movlw	0
  8375  00279A  5ADD               	subwfb	postdec2,f,c
  8376                           
  8377                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  8378                           ;stkvar	_w @ sp[(-18)+14]
  8379  00279C  50E1               	movf	fsr1l,w,c
  8380  00279E  0FFC               	addlw	-4
  8381  0027A0  6ED9               	movwf	fsr2l,c
  8382  0027A2  50E2               	movf	fsr1h,w,c
  8383  0027A4  6EDA               	movwf	fsr2h,c
  8384  0027A6  0EFF               	movlw	255
  8385  0027A8  22DA               	addwfc	fsr2h,f,c
  8386  0027AA  06DE               	decf	postinc2,f,c
  8387  0027AC  0E00               	movlw	0
  8388  0027AE  5ADD               	subwfb	postdec2,f,c
  8389                           
  8390                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8391  0027B0  0E0A               	movlw	10
  8392  0027B2  6EE6               	movwf	postinc1,c
  8393  0027B4  0E00               	movlw	0
  8394  0027B6  6EE6               	movwf	postinc1,c
  8395  0027B8  0E00               	movlw	0
  8396  0027BA  6EE6               	movwf	postinc1,c
  8397  0027BC  0E00               	movlw	0
  8398  0027BE  6EE6               	movwf	postinc1,c
  8399  0027C0  0E00               	movlw	0
  8400  0027C2  6EE6               	movwf	postinc1,c
  8401  0027C4  0E00               	movlw	0
  8402  0027C6  6EE6               	movwf	postinc1,c
  8403  0027C8  0E00               	movlw	0
  8404  0027CA  6EE6               	movwf	postinc1,c
  8405  0027CC  0E00               	movlw	0
  8406  0027CE  6EE6               	movwf	postinc1,c
  8407                           
  8408                           ;stkvar	_n @ sp[(-26)+2]
  8409  0027D0  50E1               	movf	fsr1l,w,c
  8410  0027D2  0FE8               	addlw	-24
  8411  0027D4  6ED9               	movwf	fsr2l,c
  8412  0027D6  50E2               	movf	fsr1h,w,c
  8413  0027D8  6EDA               	movwf	fsr2h,c
  8414  0027DA  0EFF               	movlw	255
  8415  0027DC  22DA               	addwfc	fsr2h,f,c
  8416  0027DE  006F FF7B FFE6     	movff	postinc2,postinc1
  8417  0027E4  006F FF7B FFE6     	movff	postinc2,postinc1
  8418  0027EA  006F FF7B FFE6     	movff	postinc2,postinc1
  8419  0027F0  006F FF7B FFE6     	movff	postinc2,postinc1
  8420  0027F6  006F FF7B FFE6     	movff	postinc2,postinc1
  8421  0027FC  006F FF7B FFE6     	movff	postinc2,postinc1
  8422  002802  006F FF7B FFE6     	movff	postinc2,postinc1
  8423  002808  006F FF7B FFE6     	movff	postinc2,postinc1
  8424  00280E  ECCB  F01A         	call	___aodiv	;wreg free
  8425  002812  52E5               	movf	postdec1,f,c
  8426  002814  006F FF9C  F053    	movff	indf1,btemp+23
  8427  00281A  52E5               	movf	postdec1,f,c
  8428  00281C  006F FF9C  F052    	movff	indf1,btemp+22
  8429  002822  52E5               	movf	postdec1,f,c
  8430  002824  006F FF9C  F051    	movff	indf1,btemp+21
  8431  00282A  52E5               	movf	postdec1,f,c
  8432  00282C  006F FF9C  F050    	movff	indf1,btemp+20
  8433  002832  52E5               	movf	postdec1,f,c
  8434  002834  006F FF9C  F04F    	movff	indf1,btemp+19
  8435  00283A  52E5               	movf	postdec1,f,c
  8436  00283C  006F FF9C  F04E    	movff	indf1,btemp+18
  8437  002842  52E5               	movf	postdec1,f,c
  8438  002844  006F FF9C  F04D    	movff	indf1,btemp+17
  8439  00284A  52E5               	movf	postdec1,f,c
  8440  00284C  006F FF9C  F04C    	movff	indf1,btemp+16
  8441  002852  0EF8               	movlw	248
  8442  002854  26E1               	addwf	fsr1l,f,c
  8443  002856  0EFF               	movlw	255
  8444  002858  22E2               	addwfc	fsr1h,f,c
  8445                           
  8446                           ;stkvar	_n @ sp[(-18)+2]
  8447  00285A  0EF0               	movlw	-16
  8448  00285C  0060  F133  FFE3   	movff	btemp+16,plusw1
  8449  002862  0EF1               	movlw	-15
  8450  002864  0060  F137  FFE3   	movff	btemp+17,plusw1
  8451  00286A  0EF2               	movlw	-14
  8452  00286C  0060  F13B  FFE3   	movff	btemp+18,plusw1
  8453  002872  0EF3               	movlw	-13
  8454  002874  0060  F13F  FFE3   	movff	btemp+19,plusw1
  8455  00287A  0EF4               	movlw	-12
  8456  00287C  0060  F143  FFE3   	movff	btemp+20,plusw1
  8457  002882  0EF5               	movlw	-11
  8458  002884  0060  F147  FFE3   	movff	btemp+21,plusw1
  8459  00288A  0EF6               	movlw	-10
  8460  00288C  0060  F14B  FFE3   	movff	btemp+22,plusw1
  8461  002892  0EF7               	movlw	-9
  8462  002894  0060  F14F  FFE3   	movff	btemp+23,plusw1
  8463  00289A                     l6719:
  8464                           
  8465                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8466                           ;stkvar	_i @ sp[(-18)+10]
  8467  00289A  0EF9               	movlw	-7
  8468  00289C  BEE3               	btfsc	plusw1,7,c
  8469  00289E  D036               	goto	u3680
  8470  0028A0  0EF9               	movlw	-7
  8471  0028A2  50E3               	movf	plusw1,w,c
  8472  0028A4  E104               	bnz	u3640
  8473  0028A6  0EF8               	movlw	-8
  8474  0028A8  04E3               	decf	plusw1,w,c
  8475  0028AA  A0D8               	btfss	status,0,c
  8476  0028AC  D02F               	goto	u3680
  8477  0028AE                     u3640:
  8478                           
  8479                           ;stkvar	_n @ sp[(-18)+2]
  8480  0028AE  0EF0               	movlw	-16
  8481  0028B0  50E3               	movf	plusw1,w,c
  8482  0028B2  E115               	bnz	u3651
  8483  0028B4  0EF1               	movlw	-15
  8484  0028B6  50E3               	movf	plusw1,w,c
  8485  0028B8  E112               	bnz	u3651
  8486  0028BA  0EF2               	movlw	-14
  8487  0028BC  50E3               	movf	plusw1,w,c
  8488  0028BE  E10F               	bnz	u3651
  8489  0028C0  0EF3               	movlw	-13
  8490  0028C2  50E3               	movf	plusw1,w,c
  8491  0028C4  E10C               	bnz	u3651
  8492  0028C6  0EF4               	movlw	-12
  8493  0028C8  50E3               	movf	plusw1,w,c
  8494  0028CA  E109               	bnz	u3651
  8495  0028CC  0EF5               	movlw	-11
  8496  0028CE  50E3               	movf	plusw1,w,c
  8497  0028D0  E106               	bnz	u3651
  8498  0028D2  0EF6               	movlw	-10
  8499  0028D4  50E3               	movf	plusw1,w,c
  8500  0028D6  E103               	bnz	u3651
  8501  0028D8  0EF7               	movlw	-9
  8502  0028DA  50E3               	movf	plusw1,w,c
  8503  0028DC  A4D8               	btfss	status,2,c
  8504  0028DE                     u3651:
  8505  0028DE  D6D4               	goto	l6709
  8506                           
  8507                           ;stkvar	_p @ sp[(-18)+16]
  8508  0028E0  0EFF               	movlw	-1
  8509  0028E2  BEE3               	btfsc	plusw1,7,c
  8510  0028E4  D007               	goto	u3660
  8511  0028E6  0EFF               	movlw	-1
  8512  0028E8  50E3               	movf	plusw1,w,c
  8513  0028EA  E103               	bnz	u3661
  8514  0028EC  0EFE               	movlw	-2
  8515  0028EE  04E3               	decf	plusw1,w,c
  8516  0028F0  B0D8               	btfsc	status,0,c
  8517  0028F2                     u3661:
  8518  0028F2  D6CA               	goto	l6709
  8519  0028F4                     u3660:
  8520                           
  8521                           ;stkvar	_w @ sp[(-18)+14]
  8522  0028F4  0EFD               	movlw	-3
  8523  0028F6  BEE3               	btfsc	plusw1,7,c
  8524  0028F8  D009               	goto	u3680
  8525  0028FA  0EFD               	movlw	-3
  8526  0028FC  50E3               	movf	plusw1,w,c
  8527  0028FE  E104               	bnz	u3670
  8528  002900  0EFC               	movlw	-4
  8529  002902  04E3               	decf	plusw1,w,c
  8530  002904  A0D8               	btfss	status,0,c
  8531  002906  D002               	goto	u3680
  8532  002908                     u3670:
  8533  002908  B227               	btfsc	_flags,1,c
  8534  00290A  D6BE               	goto	l6709
  8535  00290C                     u3680:
  8536                           
  8537                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  8538                           ;stkvar	_s @ sp[(-18)+12]
  8539  00290C  0EFA               	movlw	-6
  8540  00290E  006F FF8C  F03C    	movff	plusw1,btemp
  8541  002914  0EFB               	movlw	-5
  8542  002916  50E3               	movf	plusw1,w,c
  8543  002918  103C               	iorwf	btemp,w,c
  8544  00291A  A4D8               	btfss	status,2,c
  8545  00291C  D002               	goto	u3700
  8546  00291E  A427               	btfss	_flags,2,c
  8547  002920  D033               	goto	l6743
  8548  002922                     u3700:
  8549                           
  8550                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  8551                           ;stkvar	_i @ sp[(-18)+10]
  8552  002922  50E1               	movf	fsr1l,w,c
  8553  002924  0FF8               	addlw	-8
  8554  002926  6ED9               	movwf	fsr2l,c
  8555  002928  50E2               	movf	fsr1h,w,c
  8556  00292A  6EDA               	movwf	fsr2h,c
  8557  00292C  0EFF               	movlw	255
  8558  00292E  22DA               	addwfc	fsr2h,f,c
  8559  002930  06DE               	decf	postinc2,f,c
  8560  002932  0E00               	movlw	0
  8561  002934  5ADD               	subwfb	postdec2,f,c
  8562                           
  8563                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  8564                           ;stkvar	_s @ sp[(-18)+12]
  8565  002936  0EFA               	movlw	-6
  8566  002938  006F FF8C  F03C    	movff	plusw1,btemp
  8567  00293E  0EFB               	movlw	-5
  8568  002940  50E3               	movf	plusw1,w,c
  8569  002942  103C               	iorwf	btemp,w,c
  8570  002944  A4D8               	btfss	status,2,c
  8571  002946  D002               	goto	l6739
  8572  002948  0E2B               	movlw	43
  8573  00294A  D001               	goto	L19
  8574  00294C                     l6739:
  8575  00294C  0E2D               	movlw	45
  8576  00294E                     L19:
  8577  00294E  6E46               	movwf	btemp+10,c
  8578  002950  0E00               	movlw	0
  8579  002952  6E47               	movwf	btemp+11,c
  8580                           
  8581                           ;stkvar	_dtoa$3761 @ sp[(-18)+0]
  8582  002954  0EEE               	movlw	-18
  8583  002956  0060  F11B  FFE3   	movff	btemp+10,plusw1
  8584  00295C  0EEF               	movlw	-17
  8585  00295E  0060  F11F  FFE3   	movff	btemp+11,plusw1
  8586                           
  8587                           ;stkvar	_dtoa$3761 @ sp[(-18)+0]
  8588                           ;stkvar	_i @ sp[(-18)+10]
  8589  002964  0EF8               	movlw	-8
  8590  002966  006F FF8C  F046    	movff	plusw1,btemp+10
  8591  00296C  0EF9               	movlw	-7
  8592  00296E  006F FF8C  F047    	movff	plusw1,btemp+11
  8593  002974  0EAF               	movlw	low _dbuf
  8594  002976  2446               	addwf	btemp+10,w,c
  8595  002978  6ED9               	movwf	fsr2l,c
  8596  00297A  0E01               	movlw	high _dbuf
  8597  00297C  2047               	addwfc	btemp+11,w,c
  8598  00297E  6EDA               	movwf	fsr2h,c
  8599  002980  0EEE               	movlw	-18
  8600  002982  006F FF8F FFDF     	movff	plusw1,indf2
  8601  002988                     l6743:
  8602                           
  8603                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  8604                           ;stkvar	_w @ sp[(-18)+14]
  8605  002988  0EFC               	movlw	-4
  8606  00298A  006F FF8F FFE6     	movff	plusw1,postinc1
  8607  002990  006F FF8F FFE6     	movff	plusw1,postinc1
  8608                           
  8609                           ;stkvar	_i @ sp[(-20)+10]
  8610  002996  0EAF               	movlw	low _dbuf
  8611  002998  6E46               	movwf	btemp+10,c
  8612  00299A  0E01               	movlw	high _dbuf
  8613  00299C  6E47               	movwf	btemp+11,c
  8614  00299E  0EF6               	movlw	-10
  8615  0029A0  50E3               	movf	plusw1,w,c
  8616  0029A2  2646               	addwf	btemp+10,f,c
  8617  0029A4  0EF7               	movlw	-9
  8618  0029A6  50E3               	movf	plusw1,w,c
  8619  0029A8  2247               	addwfc	btemp+11,f,c
  8620  0029AA  0060  F11B  FFE6   	movff	btemp+10,postinc1
  8621  0029B0  0060  F11F  FFE6   	movff	btemp+11,postinc1
  8622                           
  8623                           ;stkvar	_fp @ sp[(-22)+-2]
  8624  0029B6  0EE8               	movlw	-24
  8625  0029B8  006F FF8F FFE6     	movff	plusw1,postinc1
  8626  0029BE  006F FF8F FFE6     	movff	plusw1,postinc1
  8627  0029C4  EC29  F021         	call	_pad	;wreg free
  8628                           
  8629                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  8630  0029C8  0EE4               	movlw	228
  8631  0029CA  26E1               	addwf	fsr1l,f,c
  8632  0029CC  0EFF               	movlw	255
  8633  0029CE  22E2               	addwfc	fsr1h,f,c
  8634  0029D0  0012               	return		;funcret
  8635  0029D2                     __end_of_dtoa:
  8636                           	opt callstack 0
  8637                           
  8638 ;; *************** function _abs *****************
  8639 ;; Defined at:
  8640 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;  a               2  [STACK] int 
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;		None
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  2  [STACK] int 
  8647 ;; Registers used:
  8648 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/1
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8658 ;;Total ram usage:        0 bytes
  8659 ;; Hardware stack levels used:    1
  8660 ;; Hardware stack levels required when called:    3
  8661 ;; This function calls:
  8662 ;;		Nothing
  8663 ;; This function is called by:
  8664 ;;		_dtoa
  8665 ;; This function uses a reentrant model
  8666 ;;
  8667                           
  8668                           	psect	text37
  8669  005074                     __ptext37:
  8670                           	opt callstack 0
  8671  005074                     _abs:
  8672                           	opt callstack 23
  8673                           
  8674                           ;stkvar	_a @ sp[(0)+-2]
  8675                           
  8676                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8677                           ;incstack = 0
  8678  005074  0EFF               	movlw	-1
  8679  005076  BEE3               	btfsc	plusw1,7,c
  8680  005078  D007               	goto	u1930
  8681  00507A  0EFF               	movlw	-1
  8682  00507C  50E3               	movf	plusw1,w,c
  8683  00507E  E112               	bnz	l4809
  8684  005080  0EFE               	movlw	-2
  8685  005082  04E3               	decf	plusw1,w,c
  8686  005084  B0D8               	btfsc	status,0,c
  8687  005086  D00E               	goto	l4809
  8688  005088                     u1930:
  8689                           
  8690                           ;stkvar	_a @ sp[(0)+-2]
  8691  005088  0EFE               	movlw	-2
  8692  00508A  006F FF8C  F03C    	movff	plusw1,btemp
  8693  005090  1E3C               	comf	btemp,f,c
  8694  005092  0EFF               	movlw	-1
  8695  005094  006F FF8C  F03D    	movff	plusw1,btemp+1
  8696  00509A  1E3D               	comf	btemp+1,f,c
  8697  00509C  2A3C               	incf	btemp,f,c
  8698  00509E  B4D8               	btfsc	status,2,c
  8699  0050A0  2A3D               	incf	btemp+1,f,c
  8700  0050A2  D008               	goto	l2430
  8701  0050A4                     l4809:
  8702                           
  8703                           ;stkvar	_a @ sp[(0)+-2]
  8704  0050A4  0EFE               	movlw	-2
  8705  0050A6  006F FF8C  F03C    	movff	plusw1,btemp
  8706  0050AC  0EFF               	movlw	-1
  8707  0050AE  006F FF8C  F03D    	movff	plusw1,btemp+1
  8708  0050B4                     l2430:
  8709                           
  8710                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
  8711  0050B4  52E5               	movf	postdec1,f,c
  8712  0050B6  52E5               	movf	postdec1,f,c
  8713  0050B8  0012               	return		;funcret
  8714  0050BA                     __end_of_abs:
  8715                           	opt callstack 0
  8716                           
  8717 ;; *************** function ___aomod *****************
  8718 ;; Defined at:
  8719 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  8720 ;; Parameters:    Size  Location     Type
  8721 ;;  dividend        8  [STACK] long long 
  8722 ;;  divisor         8  [STACK] long long 
  8723 ;; Auto vars:     Size  Location     Type
  8724 ;;  sign            1  [STACK] unsigned char 
  8725 ;;  counter         1  [STACK] unsigned char 
  8726 ;; Return value:  Size  Location     Type
  8727 ;;                  8  [STACK] long long 
  8728 ;; Registers used:
  8729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8730 ;; Tracked objects:
  8731 ;;		On entry : 0/1
  8732 ;;		On exit  : 0/0
  8733 ;;		Unchanged: 0/0
  8734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8739 ;;Total ram usage:        0 bytes
  8740 ;; Hardware stack levels used:    1
  8741 ;; Hardware stack levels required when called:    3
  8742 ;; This function calls:
  8743 ;;		Nothing
  8744 ;; This function is called by:
  8745 ;;		_dtoa
  8746 ;; This function uses a reentrant model
  8747 ;;
  8748                           
  8749                           	psect	text38
  8750  003CBE                     __ptext38:
  8751                           	opt callstack 0
  8752  003CBE                     ___aomod:
  8753                           	opt callstack 0
  8754                           
  8755                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  8756  003CBE  52E6               	movf	postinc1,f,c
  8757  003CC0  52E6               	movf	postinc1,f,c
  8758                           
  8759                           ;stkvar	_sign @ sp[(-2)+0]
  8760                           
  8761                           ;incstack = 0
  8762  003CC2  0EFE               	movlw	-2
  8763  003CC4  6AE3               	clrf	plusw1,c
  8764                           
  8765                           ;stkvar	_dividend @ sp[(-2)+-8]
  8766  003CC6  0EFD               	movlw	-3
  8767  003CC8  AEE3               	btfss	plusw1,7,c
  8768  003CCA  D028               	goto	l4865
  8769                           
  8770                           ;stkvar	_dividend @ sp[(-2)+-8]
  8771                           ;stkvar	_dividend @ sp[(-2)+-8]
  8772  003CCC  0EF6               	movlw	-10
  8773  003CCE  6CE3               	negf	plusw1,c
  8774  003CD0  0EF7               	movlw	-9
  8775  003CD2  1EE3               	comf	plusw1,f,c
  8776  003CD4  0EF8               	movlw	-8
  8777  003CD6  1EE3               	comf	plusw1,f,c
  8778  003CD8  0EF9               	movlw	-7
  8779  003CDA  1EE3               	comf	plusw1,f,c
  8780  003CDC  0EFA               	movlw	-6
  8781  003CDE  1EE3               	comf	plusw1,f,c
  8782  003CE0  0EFB               	movlw	-5
  8783  003CE2  1EE3               	comf	plusw1,f,c
  8784  003CE4  0EFC               	movlw	-4
  8785  003CE6  1EE3               	comf	plusw1,f,c
  8786  003CE8  0EFD               	movlw	-3
  8787  003CEA  1EE3               	comf	plusw1,f,c
  8788  003CEC  E314               	bnc	u2070
  8789  003CEE  0EF7               	movlw	-9
  8790  003CF0  2AE3               	incf	plusw1,f,c
  8791  003CF2  E311               	bnc	u2070
  8792  003CF4  0EF8               	movlw	-8
  8793  003CF6  2AE3               	incf	plusw1,f,c
  8794  003CF8  E30E               	bnc	u2070
  8795  003CFA  0EF9               	movlw	-7
  8796  003CFC  2AE3               	incf	plusw1,f,c
  8797  003CFE  E30B               	bnc	u2070
  8798  003D00  0EFA               	movlw	-6
  8799  003D02  2AE3               	incf	plusw1,f,c
  8800  003D04  E308               	bnc	u2070
  8801  003D06  0EFB               	movlw	-5
  8802  003D08  2AE3               	incf	plusw1,f,c
  8803  003D0A  E305               	bnc	u2070
  8804  003D0C  0EFC               	movlw	-4
  8805  003D0E  2AE3               	incf	plusw1,f,c
  8806  003D10  E302               	bnc	u2070
  8807  003D12  0EFD               	movlw	-3
  8808  003D14  2AE3               	incf	plusw1,f,c
  8809  003D16                     u2070:
  8810                           
  8811                           ;stkvar	_sign @ sp[(-2)+0]
  8812  003D16  0EFE               	movlw	-2
  8813  003D18  6AE3               	clrf	plusw1,c
  8814  003D1A  2AE3               	incf	plusw1,f,c
  8815  003D1C                     l4865:
  8816                           
  8817                           ;stkvar	_divisor @ sp[(-2)+-16]
  8818  003D1C  0EF5               	movlw	-11
  8819  003D1E  AEE3               	btfss	plusw1,7,c
  8820  003D20  D025               	goto	u2090
  8821                           
  8822                           ;stkvar	_divisor @ sp[(-2)+-16]
  8823                           ;stkvar	_divisor @ sp[(-2)+-16]
  8824  003D22  0EEE               	movlw	-18
  8825  003D24  6CE3               	negf	plusw1,c
  8826  003D26  0EEF               	movlw	-17
  8827  003D28  1EE3               	comf	plusw1,f,c
  8828  003D2A  0EF0               	movlw	-16
  8829  003D2C  1EE3               	comf	plusw1,f,c
  8830  003D2E  0EF1               	movlw	-15
  8831  003D30  1EE3               	comf	plusw1,f,c
  8832  003D32  0EF2               	movlw	-14
  8833  003D34  1EE3               	comf	plusw1,f,c
  8834  003D36  0EF3               	movlw	-13
  8835  003D38  1EE3               	comf	plusw1,f,c
  8836  003D3A  0EF4               	movlw	-12
  8837  003D3C  1EE3               	comf	plusw1,f,c
  8838  003D3E  0EF5               	movlw	-11
  8839  003D40  1EE3               	comf	plusw1,f,c
  8840  003D42  E314               	bnc	u2090
  8841  003D44  0EEF               	movlw	-17
  8842  003D46  2AE3               	incf	plusw1,f,c
  8843  003D48  E311               	bnc	u2090
  8844  003D4A  0EF0               	movlw	-16
  8845  003D4C  2AE3               	incf	plusw1,f,c
  8846  003D4E  E30E               	bnc	u2090
  8847  003D50  0EF1               	movlw	-15
  8848  003D52  2AE3               	incf	plusw1,f,c
  8849  003D54  E30B               	bnc	u2090
  8850  003D56  0EF2               	movlw	-14
  8851  003D58  2AE3               	incf	plusw1,f,c
  8852  003D5A  E308               	bnc	u2090
  8853  003D5C  0EF3               	movlw	-13
  8854  003D5E  2AE3               	incf	plusw1,f,c
  8855  003D60  E305               	bnc	u2090
  8856  003D62  0EF4               	movlw	-12
  8857  003D64  2AE3               	incf	plusw1,f,c
  8858  003D66  E302               	bnc	u2090
  8859  003D68  0EF5               	movlw	-11
  8860  003D6A  2AE3               	incf	plusw1,f,c
  8861  003D6C                     u2090:
  8862                           
  8863                           ;stkvar	_divisor @ sp[(-2)+-16]
  8864  003D6C  0EEE               	movlw	-18
  8865  003D6E  50E3               	movf	plusw1,w,c
  8866  003D70  E116               	bnz	u2100
  8867  003D72  0EEF               	movlw	-17
  8868  003D74  50E3               	movf	plusw1,w,c
  8869  003D76  E113               	bnz	u2100
  8870  003D78  0EF0               	movlw	-16
  8871  003D7A  50E3               	movf	plusw1,w,c
  8872  003D7C  E110               	bnz	u2100
  8873  003D7E  0EF1               	movlw	-15
  8874  003D80  50E3               	movf	plusw1,w,c
  8875  003D82  E10D               	bnz	u2100
  8876  003D84  0EF2               	movlw	-14
  8877  003D86  50E3               	movf	plusw1,w,c
  8878  003D88  E10A               	bnz	u2100
  8879  003D8A  0EF3               	movlw	-13
  8880  003D8C  50E3               	movf	plusw1,w,c
  8881  003D8E  E107               	bnz	u2100
  8882  003D90  0EF4               	movlw	-12
  8883  003D92  50E3               	movf	plusw1,w,c
  8884  003D94  E104               	bnz	u2100
  8885  003D96  0EF5               	movlw	-11
  8886  003D98  50E3               	movf	plusw1,w,c
  8887  003D9A  B4D8               	btfsc	status,2,c
  8888  003D9C  D075               	goto	u2130
  8889  003D9E                     u2100:
  8890                           
  8891                           ;stkvar	_counter @ sp[(-2)+1]
  8892  003D9E  0EFF               	movlw	-1
  8893  003DA0  6AE3               	clrf	plusw1,c
  8894  003DA2  D012               	goto	L20
  8895  003DA4                     l4873:
  8896                           
  8897                           ;stkvar	_divisor @ sp[(-2)+-16]
  8898  003DA4  90D8               	bcf	status,0,c
  8899  003DA6  0EEE               	movlw	-18
  8900  003DA8  36E3               	rlcf	plusw1,f,c
  8901  003DAA  0EEF               	movlw	-17
  8902  003DAC  36E3               	rlcf	plusw1,f,c
  8903  003DAE  0EF0               	movlw	-16
  8904  003DB0  36E3               	rlcf	plusw1,f,c
  8905  003DB2  0EF1               	movlw	-15
  8906  003DB4  36E3               	rlcf	plusw1,f,c
  8907  003DB6  0EF2               	movlw	-14
  8908  003DB8  36E3               	rlcf	plusw1,f,c
  8909  003DBA  0EF3               	movlw	-13
  8910  003DBC  36E3               	rlcf	plusw1,f,c
  8911  003DBE  0EF4               	movlw	-12
  8912  003DC0  36E3               	rlcf	plusw1,f,c
  8913  003DC2  0EF5               	movlw	-11
  8914  003DC4  36E3               	rlcf	plusw1,f,c
  8915                           
  8916                           ;stkvar	_counter @ sp[(-2)+1]
  8917  003DC6  0EFF               	movlw	-1
  8918  003DC8                     L20:
  8919  003DC8  2AE3               	incf	plusw1,f,c
  8920                           
  8921                           ;stkvar	_divisor @ sp[(-2)+-16]
  8922  003DCA  0EF5               	movlw	-11
  8923  003DCC  AEE3               	btfss	plusw1,7,c
  8924  003DCE  D7EA               	goto	l4873
  8925  003DD0                     u2110:
  8926                           
  8927                           ;stkvar	_divisor @ sp[(-2)+-16]
  8928                           ;stkvar	_dividend @ sp[(-2)+-8]
  8929  003DD0  50E1               	movf	fsr1l,w,c
  8930  003DD2  0FF6               	addlw	-10
  8931  003DD4  6ED9               	movwf	fsr2l,c
  8932  003DD6  50E2               	movf	fsr1h,w,c
  8933  003DD8  6EDA               	movwf	fsr2h,c
  8934  003DDA  0EFF               	movlw	255
  8935  003DDC  22DA               	addwfc	fsr2h,f,c
  8936  003DDE  0EEE               	movlw	-18
  8937  003DE0  50E3               	movf	plusw1,w,c
  8938  003DE2  5CDE               	subwf	postinc2,w,c
  8939  003DE4  0EEF               	movlw	-17
  8940  003DE6  50E3               	movf	plusw1,w,c
  8941  003DE8  58DE               	subwfb	postinc2,w,c
  8942  003DEA  0EF0               	movlw	-16
  8943  003DEC  50E3               	movf	plusw1,w,c
  8944  003DEE  58DE               	subwfb	postinc2,w,c
  8945  003DF0  0EF1               	movlw	-15
  8946  003DF2  50E3               	movf	plusw1,w,c
  8947  003DF4  58DE               	subwfb	postinc2,w,c
  8948  003DF6  0EF2               	movlw	-14
  8949  003DF8  50E3               	movf	plusw1,w,c
  8950  003DFA  58DE               	subwfb	postinc2,w,c
  8951  003DFC  0EF3               	movlw	-13
  8952  003DFE  50E3               	movf	plusw1,w,c
  8953  003E00  58DE               	subwfb	postinc2,w,c
  8954  003E02  0EF4               	movlw	-12
  8955  003E04  50E3               	movf	plusw1,w,c
  8956  003E06  58DE               	subwfb	postinc2,w,c
  8957  003E08  0EF5               	movlw	-11
  8958  003E0A  50E3               	movf	plusw1,w,c
  8959  003E0C  58DE               	subwfb	postinc2,w,c
  8960  003E0E  A0D8               	btfss	status,0,c
  8961  003E10  D01F               	goto	l4881
  8962                           
  8963                           ;stkvar	_divisor @ sp[(-2)+-16]
  8964                           ;stkvar	_dividend @ sp[(-2)+-8]
  8965  003E12  50E1               	movf	fsr1l,w,c
  8966  003E14  0FF6               	addlw	-10
  8967  003E16  6ED9               	movwf	fsr2l,c
  8968  003E18  50E2               	movf	fsr1h,w,c
  8969  003E1A  6EDA               	movwf	fsr2h,c
  8970  003E1C  0EFF               	movlw	255
  8971  003E1E  22DA               	addwfc	fsr2h,f,c
  8972  003E20  0EEE               	movlw	-18
  8973  003E22  50E3               	movf	plusw1,w,c
  8974  003E24  5EDE               	subwf	postinc2,f,c
  8975  003E26  0EEF               	movlw	-17
  8976  003E28  50E3               	movf	plusw1,w,c
  8977  003E2A  5ADE               	subwfb	postinc2,f,c
  8978  003E2C  0EF0               	movlw	-16
  8979  003E2E  50E3               	movf	plusw1,w,c
  8980  003E30  5ADE               	subwfb	postinc2,f,c
  8981  003E32  0EF1               	movlw	-15
  8982  003E34  50E3               	movf	plusw1,w,c
  8983  003E36  5ADE               	subwfb	postinc2,f,c
  8984  003E38  0EF2               	movlw	-14
  8985  003E3A  50E3               	movf	plusw1,w,c
  8986  003E3C  5ADE               	subwfb	postinc2,f,c
  8987  003E3E  0EF3               	movlw	-13
  8988  003E40  50E3               	movf	plusw1,w,c
  8989  003E42  5ADE               	subwfb	postinc2,f,c
  8990  003E44  0EF4               	movlw	-12
  8991  003E46  50E3               	movf	plusw1,w,c
  8992  003E48  5ADE               	subwfb	postinc2,f,c
  8993  003E4A  0EF5               	movlw	-11
  8994  003E4C  50E3               	movf	plusw1,w,c
  8995  003E4E  5ADE               	subwfb	postinc2,f,c
  8996  003E50                     l4881:
  8997                           
  8998                           ;stkvar	_divisor @ sp[(-2)+-16]
  8999  003E50  90D8               	bcf	status,0,c
  9000  003E52  0EF5               	movlw	-11
  9001  003E54  32E3               	rrcf	plusw1,f,c
  9002  003E56  0EF4               	movlw	-12
  9003  003E58  32E3               	rrcf	plusw1,f,c
  9004  003E5A  0EF3               	movlw	-13
  9005  003E5C  32E3               	rrcf	plusw1,f,c
  9006  003E5E  0EF2               	movlw	-14
  9007  003E60  32E3               	rrcf	plusw1,f,c
  9008  003E62  0EF1               	movlw	-15
  9009  003E64  32E3               	rrcf	plusw1,f,c
  9010  003E66  0EF0               	movlw	-16
  9011  003E68  32E3               	rrcf	plusw1,f,c
  9012  003E6A  0EEF               	movlw	-17
  9013  003E6C  32E3               	rrcf	plusw1,f,c
  9014  003E6E  0EEE               	movlw	-18
  9015  003E70  32E3               	rrcf	plusw1,f,c
  9016                           
  9017                           ;stkvar	_counter @ sp[(-2)+1]
  9018  003E72  0EFF               	movlw	-1
  9019  003E74  50E3               	movf	plusw1,w,c
  9020  003E76  6E3C               	movwf	btemp,c
  9021  003E78  0E01               	movlw	1
  9022  003E7A  5E3C               	subwf	btemp,f,c
  9023  003E7C  0EFF               	movlw	-1
  9024  003E7E  0060  F0F3  FFE3   	movff	btemp,plusw1
  9025  003E84  A4D8               	btfss	status,2,c
  9026  003E86  D7A4               	goto	u2110
  9027  003E88                     u2130:
  9028                           
  9029                           ;stkvar	_sign @ sp[(-2)+0]
  9030  003E88  0EFE               	movlw	-2
  9031  003E8A  50E3               	movf	plusw1,w,c
  9032  003E8C  B4D8               	btfsc	status,2,c
  9033  003E8E  D025               	goto	u2150
  9034                           
  9035                           ;stkvar	_dividend @ sp[(-2)+-8]
  9036                           ;stkvar	_dividend @ sp[(-2)+-8]
  9037  003E90  0EF6               	movlw	-10
  9038  003E92  6CE3               	negf	plusw1,c
  9039  003E94  0EF7               	movlw	-9
  9040  003E96  1EE3               	comf	plusw1,f,c
  9041  003E98  0EF8               	movlw	-8
  9042  003E9A  1EE3               	comf	plusw1,f,c
  9043  003E9C  0EF9               	movlw	-7
  9044  003E9E  1EE3               	comf	plusw1,f,c
  9045  003EA0  0EFA               	movlw	-6
  9046  003EA2  1EE3               	comf	plusw1,f,c
  9047  003EA4  0EFB               	movlw	-5
  9048  003EA6  1EE3               	comf	plusw1,f,c
  9049  003EA8  0EFC               	movlw	-4
  9050  003EAA  1EE3               	comf	plusw1,f,c
  9051  003EAC  0EFD               	movlw	-3
  9052  003EAE  1EE3               	comf	plusw1,f,c
  9053  003EB0  E314               	bnc	u2150
  9054  003EB2  0EF7               	movlw	-9
  9055  003EB4  2AE3               	incf	plusw1,f,c
  9056  003EB6  E311               	bnc	u2150
  9057  003EB8  0EF8               	movlw	-8
  9058  003EBA  2AE3               	incf	plusw1,f,c
  9059  003EBC  E30E               	bnc	u2150
  9060  003EBE  0EF9               	movlw	-7
  9061  003EC0  2AE3               	incf	plusw1,f,c
  9062  003EC2  E30B               	bnc	u2150
  9063  003EC4  0EFA               	movlw	-6
  9064  003EC6  2AE3               	incf	plusw1,f,c
  9065  003EC8  E308               	bnc	u2150
  9066  003ECA  0EFB               	movlw	-5
  9067  003ECC  2AE3               	incf	plusw1,f,c
  9068  003ECE  E305               	bnc	u2150
  9069  003ED0  0EFC               	movlw	-4
  9070  003ED2  2AE3               	incf	plusw1,f,c
  9071  003ED4  E302               	bnc	u2150
  9072  003ED6  0EFD               	movlw	-3
  9073  003ED8  2AE3               	incf	plusw1,f,c
  9074  003EDA                     u2150:
  9075                           
  9076                           ;stkvar	_dividend @ sp[(-2)+-8]
  9077  003EDA  0EF6               	movlw	246
  9078  003EDC  24E1               	addwf	fsr1l,w,c
  9079  003EDE  6ED9               	movwf	fsr2l,c
  9080  003EE0  0EFF               	movlw	255
  9081  003EE2  20E2               	addwfc	fsr1h,w,c
  9082  003EE4  6EDA               	movwf	fsr2h,c
  9083                           
  9084                           ;stkvar	?___aomod @ sp[(-2)+-8]
  9085  003EE6  0E08               	movlw	8
  9086  003EE8  6E3C               	movwf	btemp,c
  9087  003EEA  0EF6               	movlw	-10
  9088  003EEC                     us216999:
  9089  003EEC  006F FF7B FFE3     	movff	postinc2,plusw1
  9090  003EF2  28E8               	incf	wreg,w,c
  9091  003EF4  2E3C               	decfsz	btemp,f,c
  9092  003EF6  D7FA               	bra	us216999
  9093                           
  9094                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  9095  003EF8  52E5               	movf	postdec1,f,c
  9096  003EFA  52E5               	movf	postdec1,f,c
  9097  003EFC  0012               	return		;funcret
  9098  003EFE                     __end_of___aomod:
  9099                           	opt callstack 0
  9100                           
  9101 ;; *************** function ___aodiv *****************
  9102 ;; Defined at:
  9103 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;  dividend        8  [STACK] long long 
  9106 ;;  divisor         8  [STACK] long long 
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;  quotient        8  [STACK] long long 
  9109 ;;  sign            1  [STACK] unsigned char 
  9110 ;;  counter         1  [STACK] unsigned char 
  9111 ;; Return value:  Size  Location     Type
  9112 ;;                  8  [STACK] long long 
  9113 ;; Registers used:
  9114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/1
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9124 ;;Total ram usage:        0 bytes
  9125 ;; Hardware stack levels used:    1
  9126 ;; Hardware stack levels required when called:    3
  9127 ;; This function calls:
  9128 ;;		Nothing
  9129 ;; This function is called by:
  9130 ;;		_dtoa
  9131 ;; This function uses a reentrant model
  9132 ;;
  9133                           
  9134                           	psect	text39
  9135  003596                     __ptext39:
  9136                           	opt callstack 0
  9137  003596                     ___aodiv:
  9138                           	opt callstack 0
  9139                           
  9140                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
  9141  003596  0E0A               	movlw	10
  9142  003598  26E1               	addwf	fsr1l,f,c
  9143  00359A  0E00               	movlw	0
  9144  00359C  22E2               	addwfc	fsr1h,f,c
  9145                           
  9146                           ;stkvar	_sign @ sp[(-10)+8]
  9147                           
  9148                           ;incstack = 0
  9149  00359E  0EFE               	movlw	-2
  9150  0035A0  6AE3               	clrf	plusw1,c
  9151                           
  9152                           ;stkvar	_divisor @ sp[(-10)+-16]
  9153  0035A2  0EED               	movlw	-19
  9154  0035A4  AEE3               	btfss	plusw1,7,c
  9155  0035A6  D028               	goto	l4821
  9156                           
  9157                           ;stkvar	_divisor @ sp[(-10)+-16]
  9158                           ;stkvar	_divisor @ sp[(-10)+-16]
  9159  0035A8  0EE6               	movlw	-26
  9160  0035AA  6CE3               	negf	plusw1,c
  9161  0035AC  0EE7               	movlw	-25
  9162  0035AE  1EE3               	comf	plusw1,f,c
  9163  0035B0  0EE8               	movlw	-24
  9164  0035B2  1EE3               	comf	plusw1,f,c
  9165  0035B4  0EE9               	movlw	-23
  9166  0035B6  1EE3               	comf	plusw1,f,c
  9167  0035B8  0EEA               	movlw	-22
  9168  0035BA  1EE3               	comf	plusw1,f,c
  9169  0035BC  0EEB               	movlw	-21
  9170  0035BE  1EE3               	comf	plusw1,f,c
  9171  0035C0  0EEC               	movlw	-20
  9172  0035C2  1EE3               	comf	plusw1,f,c
  9173  0035C4  0EED               	movlw	-19
  9174  0035C6  1EE3               	comf	plusw1,f,c
  9175  0035C8  E314               	bnc	u1950
  9176  0035CA  0EE7               	movlw	-25
  9177  0035CC  2AE3               	incf	plusw1,f,c
  9178  0035CE  E311               	bnc	u1950
  9179  0035D0  0EE8               	movlw	-24
  9180  0035D2  2AE3               	incf	plusw1,f,c
  9181  0035D4  E30E               	bnc	u1950
  9182  0035D6  0EE9               	movlw	-23
  9183  0035D8  2AE3               	incf	plusw1,f,c
  9184  0035DA  E30B               	bnc	u1950
  9185  0035DC  0EEA               	movlw	-22
  9186  0035DE  2AE3               	incf	plusw1,f,c
  9187  0035E0  E308               	bnc	u1950
  9188  0035E2  0EEB               	movlw	-21
  9189  0035E4  2AE3               	incf	plusw1,f,c
  9190  0035E6  E305               	bnc	u1950
  9191  0035E8  0EEC               	movlw	-20
  9192  0035EA  2AE3               	incf	plusw1,f,c
  9193  0035EC  E302               	bnc	u1950
  9194  0035EE  0EED               	movlw	-19
  9195  0035F0  2AE3               	incf	plusw1,f,c
  9196  0035F2                     u1950:
  9197                           
  9198                           ;stkvar	_sign @ sp[(-10)+8]
  9199  0035F2  0EFE               	movlw	-2
  9200  0035F4  6AE3               	clrf	plusw1,c
  9201  0035F6  2AE3               	incf	plusw1,f,c
  9202  0035F8                     l4821:
  9203                           
  9204                           ;stkvar	_dividend @ sp[(-10)+-8]
  9205  0035F8  0EF5               	movlw	-11
  9206  0035FA  AEE3               	btfss	plusw1,7,c
  9207  0035FC  D027               	goto	l4827
  9208                           
  9209                           ;stkvar	_dividend @ sp[(-10)+-8]
  9210                           ;stkvar	_dividend @ sp[(-10)+-8]
  9211  0035FE  0EEE               	movlw	-18
  9212  003600  6CE3               	negf	plusw1,c
  9213  003602  0EEF               	movlw	-17
  9214  003604  1EE3               	comf	plusw1,f,c
  9215  003606  0EF0               	movlw	-16
  9216  003608  1EE3               	comf	plusw1,f,c
  9217  00360A  0EF1               	movlw	-15
  9218  00360C  1EE3               	comf	plusw1,f,c
  9219  00360E  0EF2               	movlw	-14
  9220  003610  1EE3               	comf	plusw1,f,c
  9221  003612  0EF3               	movlw	-13
  9222  003614  1EE3               	comf	plusw1,f,c
  9223  003616  0EF4               	movlw	-12
  9224  003618  1EE3               	comf	plusw1,f,c
  9225  00361A  0EF5               	movlw	-11
  9226  00361C  1EE3               	comf	plusw1,f,c
  9227  00361E  E314               	bnc	u1970
  9228  003620  0EEF               	movlw	-17
  9229  003622  2AE3               	incf	plusw1,f,c
  9230  003624  E311               	bnc	u1970
  9231  003626  0EF0               	movlw	-16
  9232  003628  2AE3               	incf	plusw1,f,c
  9233  00362A  E30E               	bnc	u1970
  9234  00362C  0EF1               	movlw	-15
  9235  00362E  2AE3               	incf	plusw1,f,c
  9236  003630  E30B               	bnc	u1970
  9237  003632  0EF2               	movlw	-14
  9238  003634  2AE3               	incf	plusw1,f,c
  9239  003636  E308               	bnc	u1970
  9240  003638  0EF3               	movlw	-13
  9241  00363A  2AE3               	incf	plusw1,f,c
  9242  00363C  E305               	bnc	u1970
  9243  00363E  0EF4               	movlw	-12
  9244  003640  2AE3               	incf	plusw1,f,c
  9245  003642  E302               	bnc	u1970
  9246  003644  0EF5               	movlw	-11
  9247  003646  2AE3               	incf	plusw1,f,c
  9248  003648                     u1970:
  9249                           
  9250                           ;stkvar	_sign @ sp[(-10)+8]
  9251  003648  0EFE               	movlw	-2
  9252  00364A  70E3               	btg	plusw1,0,c
  9253  00364C                     l4827:
  9254                           
  9255                           ;stkvar	_quotient @ sp[(-10)+0]
  9256  00364C  0E07               	movlw	7
  9257  00364E  6E3C               	movwf	btemp,c
  9258  003650  0EF6               	movlw	-10
  9259  003652                     u1981:
  9260  003652  6AE3               	clrf	plusw1,c
  9261  003654  2AE8               	incf	wreg,f,c
  9262  003656  063C               	decf	btemp,f,c
  9263  003658  E2FC               	bc	u1981
  9264                           
  9265                           ;stkvar	_divisor @ sp[(-10)+-16]
  9266  00365A  0EE6               	movlw	-26
  9267  00365C  50E3               	movf	plusw1,w,c
  9268  00365E  E116               	bnz	u1990
  9269  003660  0EE7               	movlw	-25
  9270  003662  50E3               	movf	plusw1,w,c
  9271  003664  E113               	bnz	u1990
  9272  003666  0EE8               	movlw	-24
  9273  003668  50E3               	movf	plusw1,w,c
  9274  00366A  E110               	bnz	u1990
  9275  00366C  0EE9               	movlw	-23
  9276  00366E  50E3               	movf	plusw1,w,c
  9277  003670  E10D               	bnz	u1990
  9278  003672  0EEA               	movlw	-22
  9279  003674  50E3               	movf	plusw1,w,c
  9280  003676  E10A               	bnz	u1990
  9281  003678  0EEB               	movlw	-21
  9282  00367A  50E3               	movf	plusw1,w,c
  9283  00367C  E107               	bnz	u1990
  9284  00367E  0EEC               	movlw	-20
  9285  003680  50E3               	movf	plusw1,w,c
  9286  003682  E104               	bnz	u1990
  9287  003684  0EED               	movlw	-19
  9288  003686  50E3               	movf	plusw1,w,c
  9289  003688  B4D8               	btfsc	status,2,c
  9290  00368A  D088               	goto	u2020
  9291  00368C                     u1990:
  9292                           
  9293                           ;stkvar	_counter @ sp[(-10)+9]
  9294  00368C  0EFF               	movlw	-1
  9295  00368E  6AE3               	clrf	plusw1,c
  9296  003690  D012               	goto	L21
  9297  003692                     l4833:
  9298                           
  9299                           ;stkvar	_divisor @ sp[(-10)+-16]
  9300  003692  90D8               	bcf	status,0,c
  9301  003694  0EE6               	movlw	-26
  9302  003696  36E3               	rlcf	plusw1,f,c
  9303  003698  0EE7               	movlw	-25
  9304  00369A  36E3               	rlcf	plusw1,f,c
  9305  00369C  0EE8               	movlw	-24
  9306  00369E  36E3               	rlcf	plusw1,f,c
  9307  0036A0  0EE9               	movlw	-23
  9308  0036A2  36E3               	rlcf	plusw1,f,c
  9309  0036A4  0EEA               	movlw	-22
  9310  0036A6  36E3               	rlcf	plusw1,f,c
  9311  0036A8  0EEB               	movlw	-21
  9312  0036AA  36E3               	rlcf	plusw1,f,c
  9313  0036AC  0EEC               	movlw	-20
  9314  0036AE  36E3               	rlcf	plusw1,f,c
  9315  0036B0  0EED               	movlw	-19
  9316  0036B2  36E3               	rlcf	plusw1,f,c
  9317                           
  9318                           ;stkvar	_counter @ sp[(-10)+9]
  9319  0036B4  0EFF               	movlw	-1
  9320  0036B6                     L21:
  9321  0036B6  2AE3               	incf	plusw1,f,c
  9322                           
  9323                           ;stkvar	_divisor @ sp[(-10)+-16]
  9324  0036B8  0EED               	movlw	-19
  9325  0036BA  AEE3               	btfss	plusw1,7,c
  9326  0036BC  D7EA               	goto	l4833
  9327  0036BE                     u2000:
  9328                           
  9329                           ;stkvar	_quotient @ sp[(-10)+0]
  9330  0036BE  90D8               	bcf	status,0,c
  9331  0036C0  0EF6               	movlw	-10
  9332  0036C2  36E3               	rlcf	plusw1,f,c
  9333  0036C4  0EF7               	movlw	-9
  9334  0036C6  36E3               	rlcf	plusw1,f,c
  9335  0036C8  0EF8               	movlw	-8
  9336  0036CA  36E3               	rlcf	plusw1,f,c
  9337  0036CC  0EF9               	movlw	-7
  9338  0036CE  36E3               	rlcf	plusw1,f,c
  9339  0036D0  0EFA               	movlw	-6
  9340  0036D2  36E3               	rlcf	plusw1,f,c
  9341  0036D4  0EFB               	movlw	-5
  9342  0036D6  36E3               	rlcf	plusw1,f,c
  9343  0036D8  0EFC               	movlw	-4
  9344  0036DA  36E3               	rlcf	plusw1,f,c
  9345  0036DC  0EFD               	movlw	-3
  9346  0036DE  36E3               	rlcf	plusw1,f,c
  9347                           
  9348                           ;stkvar	_divisor @ sp[(-10)+-16]
  9349                           ;stkvar	_dividend @ sp[(-10)+-8]
  9350  0036E0  50E1               	movf	fsr1l,w,c
  9351  0036E2  0FEE               	addlw	-18
  9352  0036E4  6ED9               	movwf	fsr2l,c
  9353  0036E6  50E2               	movf	fsr1h,w,c
  9354  0036E8  6EDA               	movwf	fsr2h,c
  9355  0036EA  0EFF               	movlw	255
  9356  0036EC  22DA               	addwfc	fsr2h,f,c
  9357  0036EE  0EE6               	movlw	-26
  9358  0036F0  50E3               	movf	plusw1,w,c
  9359  0036F2  5CDE               	subwf	postinc2,w,c
  9360  0036F4  0EE7               	movlw	-25
  9361  0036F6  50E3               	movf	plusw1,w,c
  9362  0036F8  58DE               	subwfb	postinc2,w,c
  9363  0036FA  0EE8               	movlw	-24
  9364  0036FC  50E3               	movf	plusw1,w,c
  9365  0036FE  58DE               	subwfb	postinc2,w,c
  9366  003700  0EE9               	movlw	-23
  9367  003702  50E3               	movf	plusw1,w,c
  9368  003704  58DE               	subwfb	postinc2,w,c
  9369  003706  0EEA               	movlw	-22
  9370  003708  50E3               	movf	plusw1,w,c
  9371  00370A  58DE               	subwfb	postinc2,w,c
  9372  00370C  0EEB               	movlw	-21
  9373  00370E  50E3               	movf	plusw1,w,c
  9374  003710  58DE               	subwfb	postinc2,w,c
  9375  003712  0EEC               	movlw	-20
  9376  003714  50E3               	movf	plusw1,w,c
  9377  003716  58DE               	subwfb	postinc2,w,c
  9378  003718  0EED               	movlw	-19
  9379  00371A  50E3               	movf	plusw1,w,c
  9380  00371C  58DE               	subwfb	postinc2,w,c
  9381  00371E  A0D8               	btfss	status,0,c
  9382  003720  D021               	goto	l4845
  9383                           
  9384                           ;stkvar	_divisor @ sp[(-10)+-16]
  9385                           ;stkvar	_dividend @ sp[(-10)+-8]
  9386  003722  50E1               	movf	fsr1l,w,c
  9387  003724  0FEE               	addlw	-18
  9388  003726  6ED9               	movwf	fsr2l,c
  9389  003728  50E2               	movf	fsr1h,w,c
  9390  00372A  6EDA               	movwf	fsr2h,c
  9391  00372C  0EFF               	movlw	255
  9392  00372E  22DA               	addwfc	fsr2h,f,c
  9393  003730  0EE6               	movlw	-26
  9394  003732  50E3               	movf	plusw1,w,c
  9395  003734  5EDE               	subwf	postinc2,f,c
  9396  003736  0EE7               	movlw	-25
  9397  003738  50E3               	movf	plusw1,w,c
  9398  00373A  5ADE               	subwfb	postinc2,f,c
  9399  00373C  0EE8               	movlw	-24
  9400  00373E  50E3               	movf	plusw1,w,c
  9401  003740  5ADE               	subwfb	postinc2,f,c
  9402  003742  0EE9               	movlw	-23
  9403  003744  50E3               	movf	plusw1,w,c
  9404  003746  5ADE               	subwfb	postinc2,f,c
  9405  003748  0EEA               	movlw	-22
  9406  00374A  50E3               	movf	plusw1,w,c
  9407  00374C  5ADE               	subwfb	postinc2,f,c
  9408  00374E  0EEB               	movlw	-21
  9409  003750  50E3               	movf	plusw1,w,c
  9410  003752  5ADE               	subwfb	postinc2,f,c
  9411  003754  0EEC               	movlw	-20
  9412  003756  50E3               	movf	plusw1,w,c
  9413  003758  5ADE               	subwfb	postinc2,f,c
  9414  00375A  0EED               	movlw	-19
  9415  00375C  50E3               	movf	plusw1,w,c
  9416  00375E  5ADE               	subwfb	postinc2,f,c
  9417                           
  9418                           ;stkvar	_quotient @ sp[(-10)+0]
  9419  003760  0EF6               	movlw	-10
  9420  003762  80E3               	bsf	plusw1,0,c
  9421  003764                     l4845:
  9422                           
  9423                           ;stkvar	_divisor @ sp[(-10)+-16]
  9424  003764  90D8               	bcf	status,0,c
  9425  003766  0EED               	movlw	-19
  9426  003768  32E3               	rrcf	plusw1,f,c
  9427  00376A  0EEC               	movlw	-20
  9428  00376C  32E3               	rrcf	plusw1,f,c
  9429  00376E  0EEB               	movlw	-21
  9430  003770  32E3               	rrcf	plusw1,f,c
  9431  003772  0EEA               	movlw	-22
  9432  003774  32E3               	rrcf	plusw1,f,c
  9433  003776  0EE9               	movlw	-23
  9434  003778  32E3               	rrcf	plusw1,f,c
  9435  00377A  0EE8               	movlw	-24
  9436  00377C  32E3               	rrcf	plusw1,f,c
  9437  00377E  0EE7               	movlw	-25
  9438  003780  32E3               	rrcf	plusw1,f,c
  9439  003782  0EE6               	movlw	-26
  9440  003784  32E3               	rrcf	plusw1,f,c
  9441                           
  9442                           ;stkvar	_counter @ sp[(-10)+9]
  9443  003786  0EFF               	movlw	-1
  9444  003788  50E3               	movf	plusw1,w,c
  9445  00378A  6E3C               	movwf	btemp,c
  9446  00378C  0E01               	movlw	1
  9447  00378E  5E3C               	subwf	btemp,f,c
  9448  003790  0EFF               	movlw	-1
  9449  003792  0060  F0F3  FFE3   	movff	btemp,plusw1
  9450  003798  A4D8               	btfss	status,2,c
  9451  00379A  D791               	goto	u2000
  9452  00379C                     u2020:
  9453                           
  9454                           ;stkvar	_sign @ sp[(-10)+8]
  9455  00379C  0EFE               	movlw	-2
  9456  00379E  50E3               	movf	plusw1,w,c
  9457  0037A0  B4D8               	btfsc	status,2,c
  9458  0037A2  D025               	goto	u2040
  9459                           
  9460                           ;stkvar	_quotient @ sp[(-10)+0]
  9461                           ;stkvar	_quotient @ sp[(-10)+0]
  9462  0037A4  0EF6               	movlw	-10
  9463  0037A6  6CE3               	negf	plusw1,c
  9464  0037A8  0EF7               	movlw	-9
  9465  0037AA  1EE3               	comf	plusw1,f,c
  9466  0037AC  0EF8               	movlw	-8
  9467  0037AE  1EE3               	comf	plusw1,f,c
  9468  0037B0  0EF9               	movlw	-7
  9469  0037B2  1EE3               	comf	plusw1,f,c
  9470  0037B4  0EFA               	movlw	-6
  9471  0037B6  1EE3               	comf	plusw1,f,c
  9472  0037B8  0EFB               	movlw	-5
  9473  0037BA  1EE3               	comf	plusw1,f,c
  9474  0037BC  0EFC               	movlw	-4
  9475  0037BE  1EE3               	comf	plusw1,f,c
  9476  0037C0  0EFD               	movlw	-3
  9477  0037C2  1EE3               	comf	plusw1,f,c
  9478  0037C4  E314               	bnc	u2040
  9479  0037C6  0EF7               	movlw	-9
  9480  0037C8  2AE3               	incf	plusw1,f,c
  9481  0037CA  E311               	bnc	u2040
  9482  0037CC  0EF8               	movlw	-8
  9483  0037CE  2AE3               	incf	plusw1,f,c
  9484  0037D0  E30E               	bnc	u2040
  9485  0037D2  0EF9               	movlw	-7
  9486  0037D4  2AE3               	incf	plusw1,f,c
  9487  0037D6  E30B               	bnc	u2040
  9488  0037D8  0EFA               	movlw	-6
  9489  0037DA  2AE3               	incf	plusw1,f,c
  9490  0037DC  E308               	bnc	u2040
  9491  0037DE  0EFB               	movlw	-5
  9492  0037E0  2AE3               	incf	plusw1,f,c
  9493  0037E2  E305               	bnc	u2040
  9494  0037E4  0EFC               	movlw	-4
  9495  0037E6  2AE3               	incf	plusw1,f,c
  9496  0037E8  E302               	bnc	u2040
  9497  0037EA  0EFD               	movlw	-3
  9498  0037EC  2AE3               	incf	plusw1,f,c
  9499  0037EE                     u2040:
  9500                           
  9501                           ;stkvar	_quotient @ sp[(-10)+0]
  9502  0037EE  0EF6               	movlw	246
  9503  0037F0  24E1               	addwf	fsr1l,w,c
  9504  0037F2  6ED9               	movwf	fsr2l,c
  9505  0037F4  0EFF               	movlw	255
  9506  0037F6  20E2               	addwfc	fsr1h,w,c
  9507  0037F8  6EDA               	movwf	fsr2h,c
  9508                           
  9509                           ;stkvar	?___aodiv @ sp[(-10)+-8]
  9510  0037FA  0E08               	movlw	8
  9511  0037FC  6E3C               	movwf	btemp,c
  9512  0037FE  0EEE               	movlw	-18
  9513  003800                     us205999:
  9514  003800  006F FF7B FFE3     	movff	postinc2,plusw1
  9515  003806  28E8               	incf	wreg,w,c
  9516  003808  2E3C               	decfsz	btemp,f,c
  9517  00380A  D7FA               	bra	us205999
  9518                           
  9519                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
  9520  00380C  0EF6               	movlw	246
  9521  00380E  26E1               	addwf	fsr1l,f,c
  9522  003810  0EFF               	movlw	255
  9523  003812  22E2               	addwfc	fsr1h,f,c
  9524  003814  0012               	return		;funcret
  9525  003816                     __end_of___aodiv:
  9526                           	opt callstack 0
  9527                           
  9528 ;; *************** function _ctoa *****************
  9529 ;; Defined at:
  9530 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9533 ;;		 -> f(5), NULL(0), 
  9534 ;;  c               1  [STACK] unsigned char 
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;  w               2  [STACK] int 
  9537 ;;  l               2    0        int 
  9538 ;; Return value:  Size  Location     Type
  9539 ;;                  2  [STACK] int 
  9540 ;; Registers used:
  9541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9542 ;; Tracked objects:
  9543 ;;		On entry : 0/0
  9544 ;;		On exit  : 0/0
  9545 ;;		Unchanged: 0/0
  9546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9551 ;;Total ram usage:        0 bytes
  9552 ;; Hardware stack levels used:    1
  9553 ;; Hardware stack levels required when called:    8
  9554 ;; This function calls:
  9555 ;;		_pad
  9556 ;; This function is called by:
  9557 ;;		_vfpfcnvrt
  9558 ;; This function uses a reentrant model
  9559 ;;
  9560                           
  9561                           	psect	text40
  9562  004CB8                     __ptext40:
  9563                           	opt callstack 0
  9564  004CB8                     _ctoa:
  9565                           	opt callstack 0
  9566                           
  9567                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9568  004CB8  52E6               	movf	postinc1,f,c
  9569  004CBA  52E6               	movf	postinc1,f,c
  9570                           
  9571                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
  9572                           
  9573                           ;incstack = 0
  9574  004CBC  5023               	movf	_width,w,c
  9575  004CBE  1024               	iorwf	_width+1,w,c
  9576  004CC0  A4D8               	btfss	status,2,c
  9577  004CC2  D009               	goto	l6671
  9578                           
  9579                           ;stkvar	_w @ sp[(-2)+0]
  9580  004CC4  0EFE               	movlw	-2
  9581  004CC6  0060  F08F  FFE3   	movff	_width,plusw1
  9582  004CCC  0EFF               	movlw	-1
  9583  004CCE  0060  F093  FFE3   	movff	_width+1,plusw1
  9584  004CD4  D016               	goto	l6673
  9585  004CD6                     l6671:
  9586  004CD6  0EFF               	movlw	255
  9587  004CD8  6E46               	movwf	btemp+10,c
  9588  004CDA  0EFF               	movlw	255
  9589  004CDC  6E47               	movwf	btemp+11,c
  9590  004CDE  0060  F08C  F044   	movff	_width,btemp+8
  9591  004CE4  0060  F090  F045   	movff	_width+1,btemp+9
  9592  004CEA  5046               	movf	btemp+10,w,c
  9593  004CEC  2644               	addwf	btemp+8,f,c
  9594  004CEE  5047               	movf	btemp+11,w,c
  9595  004CF0  2245               	addwfc	btemp+9,f,c
  9596                           
  9597                           ;stkvar	_w @ sp[(-2)+0]
  9598  004CF2  0EFE               	movlw	-2
  9599  004CF4  0060  F113  FFE3   	movff	btemp+8,plusw1
  9600  004CFA  0EFF               	movlw	-1
  9601  004CFC  0060  F117  FFE3   	movff	btemp+9,plusw1
  9602  004D02                     l6673:
  9603                           
  9604                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
  9605                           ;stkvar	_c @ sp[(-2)+-3]
  9606  004D02  0EFB               	movlw	-5
  9607  004D04  006F FF8C  F1AF    	movff	plusw1,_dbuf
  9608                           
  9609                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
  9610  004D0A  0101               	movlb	1	; () banked
  9611  004D0C  6BB0               	clrf	(_dbuf+1)& (0+255),b
  9612                           
  9613                           ; BSR set to: 1
  9614                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
  9615                           ;stkvar	_w @ sp[(-2)+0]
  9616  004D0E  0EFE               	movlw	-2
  9617  004D10  006F FF8F FFE6     	movff	plusw1,postinc1
  9618  004D16  006F FF8F FFE6     	movff	plusw1,postinc1
  9619  004D1C  0EAF               	movlw	low _dbuf
  9620  004D1E  6EE6               	movwf	postinc1,c
  9621  004D20  0E01               	movlw	high _dbuf
  9622  004D22  6EE6               	movwf	postinc1,c
  9623                           
  9624                           ;stkvar	_fp @ sp[(-6)+-2]
  9625  004D24  0EF8               	movlw	-8
  9626  004D26  006F FF8F FFE6     	movff	plusw1,postinc1
  9627  004D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9628  004D32  EC29  F021         	call	_pad	;wreg free
  9629                           
  9630                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
  9631  004D36  0EFB               	movlw	251
  9632  004D38  26E1               	addwf	fsr1l,f,c
  9633  004D3A  0EFF               	movlw	255
  9634  004D3C  22E2               	addwfc	fsr1h,f,c
  9635  004D3E  0012               	return		;funcret
  9636  004D40                     __end_of_ctoa:
  9637                           	opt callstack 0
  9638                           
  9639 ;; *************** function _pad *****************
  9640 ;; Defined at:
  9641 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9642 ;; Parameters:    Size  Location     Type
  9643 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9644 ;;		 -> f(5), NULL(0), 
  9645 ;;  buf             2  [STACK] PTR unsigned char 
  9646 ;;		 -> dbuf(32), 
  9647 ;;  p               2  [STACK] int 
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;  w               2  [STACK] int 
  9650 ;;  i               2  [STACK] int 
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  2  [STACK] int 
  9653 ;; Registers used:
  9654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9655 ;; Tracked objects:
  9656 ;;		On entry : 0/1
  9657 ;;		On exit  : 0/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9664 ;;Total ram usage:        0 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; Hardware stack levels required when called:    7
  9667 ;; This function calls:
  9668 ;;		_fputc
  9669 ;;		_fputs
  9670 ;;		_strlen
  9671 ;; This function is called by:
  9672 ;;		_ctoa
  9673 ;;		_dtoa
  9674 ;; This function uses a reentrant model
  9675 ;;
  9676                           
  9677                           	psect	text41
  9678  004252                     __ptext41:
  9679                           	opt callstack 0
  9680  004252                     _pad:
  9681                           	opt callstack 0
  9682                           
  9683                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9684  004252  52E6               	movf	postinc1,f,c
  9685  004254  52E6               	movf	postinc1,f,c
  9686  004256  52E6               	movf	postinc1,f,c
  9687  004258  52E6               	movf	postinc1,f,c
  9688                           
  9689                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  9690                           
  9691                           ;incstack = 0
  9692  00425A  A027               	btfss	_flags,0,c
  9693  00425C  D010               	goto	l6649
  9694                           
  9695                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  9696                           ;stkvar	_fp @ sp[(-4)+-2]
  9697  00425E  0EFA               	movlw	-6
  9698  004260  006F FF8F FFE6     	movff	plusw1,postinc1
  9699  004266  006F FF8F FFE6     	movff	plusw1,postinc1
  9700                           
  9701                           ;stkvar	_buf @ sp[(-6)+-4]
  9702  00426C  0EF6               	movlw	-10
  9703  00426E  006F FF8F FFE6     	movff	plusw1,postinc1
  9704  004274  006F FF8F FFE6     	movff	plusw1,postinc1
  9705  00427A  ECC7  F025         	call	_fputs	;wreg free
  9706  00427E                     l6649:
  9707                           
  9708                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  9709                           ;stkvar	_p @ sp[(-4)+-6]
  9710  00427E  0EF7               	movlw	-9
  9711  004280  BEE3               	btfsc	plusw1,7,c
  9712  004282  D011               	goto	l6653
  9713                           
  9714                           ;stkvar	_p @ sp[(-4)+-6]
  9715                           ;stkvar	_w @ sp[(-4)+0]
  9716  004284  0EF6               	movlw	-10
  9717  004286  006F FF8C  F03C    	movff	plusw1,btemp
  9718  00428C  0EFC               	movlw	-4
  9719  00428E  0060  F0F3  FFE3   	movff	btemp,plusw1
  9720  004294  0EF7               	movlw	-9
  9721  004296  006F FF8C  F03C    	movff	plusw1,btemp
  9722  00429C  0EFD               	movlw	-3
  9723  00429E  0060  F0F3  FFE3   	movff	btemp,plusw1
  9724  0042A4  D004               	goto	l1669
  9725  0042A6                     l6653:
  9726                           
  9727                           ;stkvar	_w @ sp[(-4)+0]
  9728  0042A6  0EFC               	movlw	-4
  9729  0042A8  6AE3               	clrf	plusw1,c
  9730  0042AA  0EFD               	movlw	-3
  9731  0042AC  6AE3               	clrf	plusw1,c
  9732  0042AE                     l1669:
  9733                           
  9734                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  9735                           ;stkvar	_i @ sp[(-4)+2]
  9736  0042AE  0EFE               	movlw	-2
  9737  0042B0  6AE3               	clrf	plusw1,c
  9738  0042B2  0EFF               	movlw	-1
  9739  0042B4  6AE3               	clrf	plusw1,c
  9740                           
  9741                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9742  0042B6  D01E               	goto	l6659
  9743  0042B8                     l6655:
  9744                           
  9745                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  9746                           ;stkvar	_fp @ sp[(-4)+-2]
  9747  0042B8  0EFA               	movlw	-6
  9748  0042BA  006F FF8F FFE6     	movff	plusw1,postinc1
  9749  0042C0  006F FF8F FFE6     	movff	plusw1,postinc1
  9750  0042C6  0E20               	movlw	32
  9751  0042C8  6EE6               	movwf	postinc1,c
  9752  0042CA  0E00               	movlw	0
  9753  0042CC  6EE6               	movwf	postinc1,c
  9754  0042CE  ECB3  F021         	call	_fputc	;wreg free
  9755                           
  9756                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  9757                           ;stkvar	_i @ sp[(-4)+2]
  9758  0042D2  0EFE               	movlw	-2
  9759  0042D4  50E3               	movf	plusw1,w,c
  9760  0042D6  0F01               	addlw	1
  9761  0042D8  6E3C               	movwf	btemp,c
  9762  0042DA  0EFE               	movlw	-2
  9763  0042DC  0060  F0F3  FFE3   	movff	btemp,plusw1
  9764  0042E2  6A3C               	clrf	btemp,c
  9765  0042E4  0EFF               	movlw	-1
  9766  0042E6  50E3               	movf	plusw1,w,c
  9767  0042E8  203C               	addwfc	btemp,w,c
  9768  0042EA  6E3C               	movwf	btemp,c
  9769  0042EC  0EFF               	movlw	-1
  9770  0042EE  0060  F0F3  FFE3   	movff	btemp,plusw1
  9771  0042F4                     l6659:
  9772                           
  9773                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  9774                           ;stkvar	_w @ sp[(-4)+0]
  9775                           ;stkvar	_i @ sp[(-4)+2]
  9776  0042F4  50E1               	movf	fsr1l,w,c
  9777  0042F6  0FFE               	addlw	-2
  9778  0042F8  6ED9               	movwf	fsr2l,c
  9779  0042FA  50E2               	movf	fsr1h,w,c
  9780  0042FC  6EDA               	movwf	fsr2h,c
  9781  0042FE  0EFF               	movlw	255
  9782  004300  22DA               	addwfc	fsr2h,f,c
  9783  004302  0EFC               	movlw	-4
  9784  004304  50E3               	movf	plusw1,w,c
  9785  004306  5CDE               	subwf	postinc2,w,c
  9786  004308  50DE               	movf	postinc2,w,c
  9787  00430A  0A80               	xorlw	128
  9788  00430C  6E3C               	movwf	btemp,c
  9789  00430E  0EFD               	movlw	-3
  9790  004310  50E3               	movf	plusw1,w,c
  9791  004312  0A80               	xorlw	128
  9792  004314  583C               	subwfb	btemp,w,c
  9793  004316  A0D8               	btfss	status,0,c
  9794  004318  D7CF               	goto	l6655
  9795                           
  9796                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  9797  00431A  B027               	btfsc	_flags,0,c
  9798  00431C  D010               	goto	l6663
  9799                           
  9800                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  9801                           ;stkvar	_fp @ sp[(-4)+-2]
  9802  00431E  0EFA               	movlw	-6
  9803  004320  006F FF8F FFE6     	movff	plusw1,postinc1
  9804  004326  006F FF8F FFE6     	movff	plusw1,postinc1
  9805                           
  9806                           ;stkvar	_buf @ sp[(-6)+-4]
  9807  00432C  0EF6               	movlw	-10
  9808  00432E  006F FF8F FFE6     	movff	plusw1,postinc1
  9809  004334  006F FF8F FFE6     	movff	plusw1,postinc1
  9810  00433A  ECC7  F025         	call	_fputs	;wreg free
  9811  00433E                     l6663:
  9812                           
  9813                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  9814                           ;stkvar	_w @ sp[(-4)+0]
  9815                           ;stkvar	_buf @ sp[(-4)+-4]
  9816  00433E  0EF8               	movlw	-8
  9817  004340  006F FF8F FFE6     	movff	plusw1,postinc1
  9818  004346  006F FF8F FFE6     	movff	plusw1,postinc1
  9819  00434C  EC8C  F024         	call	_strlen	;wreg free
  9820  004350  0EFC               	movlw	-4
  9821  004352  50E3               	movf	plusw1,w,c
  9822  004354  263C               	addwf	btemp,f,c
  9823  004356  0EFD               	movlw	-3
  9824  004358  50E3               	movf	plusw1,w,c
  9825  00435A  223D               	addwfc	btemp+1,f,c
  9826                           
  9827                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
  9828  00435C  0EF6               	movlw	246
  9829  00435E  26E1               	addwf	fsr1l,f,c
  9830  004360  0EFF               	movlw	255
  9831  004362  22E2               	addwfc	fsr1h,f,c
  9832  004364  0012               	return		;funcret
  9833  004366                     __end_of_pad:
  9834                           	opt callstack 0
  9835                           
  9836 ;; *************** function _strlen *****************
  9837 ;; Defined at:
  9838 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;  s               2  [STACK] PTR const unsigned char 
  9841 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  9842 ;;		 -> STR_3(6), V(86), 
  9843 ;; Auto vars:     Size  Location     Type
  9844 ;;  a               2  [STACK] PTR const unsigned char 
  9845 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  9846 ;;		 -> STR_3(6), V(86), 
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  2  [STACK] unsigned int 
  9849 ;; Registers used:
  9850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9860 ;;Total ram usage:        0 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; Hardware stack levels required when called:    3
  9863 ;; This function calls:
  9864 ;;		Nothing
  9865 ;; This function is called by:
  9866 ;;		_eaDogM_WriteString
  9867 ;;		_pad
  9868 ;;		_stoa
  9869 ;; This function uses a reentrant model
  9870 ;;
  9871                           
  9872                           	psect	text42
  9873  004918                     __ptext42:
  9874                           	opt callstack 0
  9875  004918                     _strlen:
  9876                           	opt callstack 0
  9877                           
  9878                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9879  004918  52E6               	movf	postinc1,f,c
  9880  00491A  52E6               	movf	postinc1,f,c
  9881                           
  9882                           ;stkvar	_s @ sp[(-2)+-2]
  9883                           
  9884                           ;incstack = 0
  9885  00491C  0EFC               	movlw	-4
  9886  00491E  006F FF8C  F046    	movff	plusw1,btemp+10
  9887  004924  0EFD               	movlw	-3
  9888  004926  006F FF8C  F047    	movff	plusw1,btemp+11
  9889                           
  9890                           ;stkvar	_a @ sp[(-2)+0]
  9891  00492C  0EFF               	movlw	-1
  9892  00492E  0060  F11F  FFE3   	movff	btemp+11,plusw1
  9893  004934  0EFE               	movlw	-2
  9894  004936  0060  F11B  FFE3   	movff	btemp+10,plusw1
  9895  00493C  D011               	goto	l4769
  9896  00493E                     l4767:
  9897                           
  9898                           ;stkvar	_s @ sp[(-2)+-2]
  9899  00493E  0EFC               	movlw	-4
  9900  004940  50E3               	movf	plusw1,w,c
  9901  004942  0F01               	addlw	1
  9902  004944  6E3C               	movwf	btemp,c
  9903  004946  0EFC               	movlw	-4
  9904  004948  0060  F0F3  FFE3   	movff	btemp,plusw1
  9905  00494E  6A3C               	clrf	btemp,c
  9906  004950  0EFD               	movlw	-3
  9907  004952  50E3               	movf	plusw1,w,c
  9908  004954  203C               	addwfc	btemp,w,c
  9909  004956  6E3C               	movwf	btemp,c
  9910  004958  0EFD               	movlw	-3
  9911  00495A  0060  F0F3  FFE3   	movff	btemp,plusw1
  9912  004960                     l4769:
  9913                           
  9914                           ;stkvar	_s @ sp[(-2)+-2]
  9915  004960  0EFC               	movlw	-4
  9916  004962  006F FF8F FFF6     	movff	plusw1,tblptrl
  9917  004968  0EFD               	movlw	-3
  9918  00496A  006F FF8F FFF7     	movff	plusw1,tblptrh
  9919  004970  0E00               	movlw	low (__smallconst shr (0+16))
  9920  004972  6EF8               	movwf	tblptru,c
  9921  004974  0E1F               	movlw	(high __ramtop+-1)
  9922  004976  64F7               	cpfsgt	tblptrh,c
  9923  004978  D003               	bra	u1867
  9924  00497A  0008               	tblrd		*
  9925  00497C  50F5               	movf	tablat,w,c
  9926  00497E  D007               	bra	u1860
  9927  004980                     u1867:
  9928  004980  006F FFDB FFE9     	movff	tblptrl,fsr0l
  9929  004986  006F FFDF FFEA     	movff	tblptrh,fsr0h
  9930  00498C  50EF               	movf	indf0,w,c
  9931  00498E                     u1860:
  9932  00498E  0900               	iorlw	0
  9933  004990  A4D8               	btfss	status,2,c
  9934  004992  D7D5               	goto	l4767
  9935                           
  9936                           ;stkvar	_a @ sp[(-2)+0]
  9937                           ;stkvar	_s @ sp[(-2)+-2]
  9938  004994  0EFC               	movlw	-4
  9939  004996  006F FF8C  F03C    	movff	plusw1,btemp
  9940  00499C  0EFD               	movlw	-3
  9941  00499E  006F FF8C  F03D    	movff	plusw1,btemp+1
  9942  0049A4  0EFE               	movlw	-2
  9943  0049A6  50E3               	movf	plusw1,w,c
  9944  0049A8  5E3C               	subwf	btemp,f,c
  9945  0049AA  0EFF               	movlw	-1
  9946  0049AC  50E3               	movf	plusw1,w,c
  9947  0049AE  5A3D               	subwfb	btemp+1,f,c
  9948                           
  9949                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9950  0049B0  52E5               	movf	postdec1,f,c
  9951  0049B2  52E5               	movf	postdec1,f,c
  9952  0049B4  52E5               	movf	postdec1,f,c
  9953  0049B6  52E5               	movf	postdec1,f,c
  9954  0049B8  0012               	return		;funcret
  9955  0049BA                     __end_of_strlen:
  9956                           	opt callstack 0
  9957                           
  9958 ;; *************** function _fputs *****************
  9959 ;; Defined at:
  9960 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  9961 ;; Parameters:    Size  Location     Type
  9962 ;;  s               2  [STACK] PTR const unsigned char 
  9963 ;;		 -> dbuf(32), 
  9964 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9965 ;;		 -> f(5), NULL(0), 
  9966 ;; Auto vars:     Size  Location     Type
  9967 ;;  i               2  [STACK] int 
  9968 ;;  c               1  [STACK] unsigned char 
  9969 ;; Return value:  Size  Location     Type
  9970 ;;                  2  [STACK] int 
  9971 ;; Registers used:
  9972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  9973 ;; Tracked objects:
  9974 ;;		On entry : 0/1
  9975 ;;		On exit  : 0/0
  9976 ;;		Unchanged: 0/0
  9977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9982 ;;Total ram usage:        0 bytes
  9983 ;; Hardware stack levels used:    1
  9984 ;; Hardware stack levels required when called:    6
  9985 ;; This function calls:
  9986 ;;		_fputc
  9987 ;; This function is called by:
  9988 ;;		_pad
  9989 ;; This function uses a reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text43
  9993  004B8E                     __ptext43:
  9994                           	opt callstack 0
  9995  004B8E                     _fputs:
  9996                           	opt callstack 0
  9997                           
  9998                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9999  004B8E  52E6               	movf	postinc1,f,c
 10000  004B90  52E6               	movf	postinc1,f,c
 10001  004B92  52E6               	movf	postinc1,f,c
 10002                           
 10003                           ;stkvar	_i @ sp[(-3)+0]
 10004                           
 10005                           ;incstack = 0
 10006  004B94  0EFD               	movlw	-3
 10007  004B96  6AE3               	clrf	plusw1,c
 10008  004B98  0EFE               	movlw	-2
 10009  004B9A  6AE3               	clrf	plusw1,c
 10010  004B9C  D01F               	goto	l6643
 10011  004B9E                     l6639:
 10012                           
 10013                           ;stkvar	_fp @ sp[(-3)+-4]
 10014  004B9E  0EF9               	movlw	-7
 10015  004BA0  006F FF8F FFE6     	movff	plusw1,postinc1
 10016  004BA6  006F FF8F FFE6     	movff	plusw1,postinc1
 10017                           
 10018                           ;stkvar	_c @ sp[(-5)+2]
 10019  004BAC  0EFD               	movlw	-3
 10020  004BAE  50E3               	movf	plusw1,w,c
 10021  004BB0  6EE6               	movwf	postinc1,c
 10022  004BB2  0E00               	movlw	0
 10023  004BB4  6EE6               	movwf	postinc1,c
 10024  004BB6  ECB3  F021         	call	_fputc	;wreg free
 10025                           
 10026                           ;stkvar	_i @ sp[(-3)+0]
 10027  004BBA  0EFD               	movlw	-3
 10028  004BBC  50E3               	movf	plusw1,w,c
 10029  004BBE  0F01               	addlw	1
 10030  004BC0  6E3C               	movwf	btemp,c
 10031  004BC2  0EFD               	movlw	-3
 10032  004BC4  0060  F0F3  FFE3   	movff	btemp,plusw1
 10033  004BCA  6A3C               	clrf	btemp,c
 10034  004BCC  0EFE               	movlw	-2
 10035  004BCE  50E3               	movf	plusw1,w,c
 10036  004BD0  203C               	addwfc	btemp,w,c
 10037  004BD2  6E3C               	movwf	btemp,c
 10038  004BD4  0EFE               	movlw	-2
 10039  004BD6  0060  F0F3  FFE3   	movff	btemp,plusw1
 10040  004BDC                     l6643:
 10041                           
 10042                           ;stkvar	_i @ sp[(-3)+0]
 10043  004BDC  0EFD               	movlw	-3
 10044  004BDE  006F FF8C  F046    	movff	plusw1,btemp+10
 10045  004BE4  0EFE               	movlw	-2
 10046  004BE6  006F FF8C  F047    	movff	plusw1,btemp+11
 10047                           
 10048                           ;stkvar	_s @ sp[(-3)+-2]
 10049  004BEC  0EFB               	movlw	-5
 10050  004BEE  006F FF8C  F044    	movff	plusw1,btemp+8
 10051  004BF4  0EFC               	movlw	-4
 10052  004BF6  006F FF8C  F045    	movff	plusw1,btemp+9
 10053  004BFC  5046               	movf	btemp+10,w,c
 10054  004BFE  2444               	addwf	btemp+8,w,c
 10055  004C00  6ED9               	movwf	fsr2l,c
 10056  004C02  5047               	movf	btemp+11,w,c
 10057  004C04  2045               	addwfc	btemp+9,w,c
 10058  004C06  6EDA               	movwf	fsr2h,c
 10059  004C08  50DF               	movf	indf2,w,c
 10060  004C0A  6E47               	movwf	btemp+11,c
 10061                           
 10062                           ;stkvar	_c @ sp[(-3)+2]
 10063  004C0C  0EFF               	movlw	-1
 10064  004C0E  0060  F11F  FFE3   	movff	btemp+11,plusw1
 10065  004C14  0EFF               	movlw	-1
 10066  004C16  50E3               	movf	plusw1,w,c
 10067  004C18  A4D8               	btfss	status,2,c
 10068  004C1A  D7C1               	goto	l6639
 10069                           
 10070                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10071  004C1C  0EF9               	movlw	249
 10072  004C1E  26E1               	addwf	fsr1l,f,c
 10073  004C20  0EFF               	movlw	255
 10074  004C22  22E2               	addwfc	fsr1h,f,c
 10075  004C24  0012               	return		;funcret
 10076  004C26                     __end_of_fputs:
 10077                           	opt callstack 0
 10078                           
 10079 ;; *************** function _fputc *****************
 10080 ;; Defined at:
 10081 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;  c               2  [STACK] int 
 10084 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10085 ;;		 -> f(5), NULL(0), 
 10086 ;; Auto vars:     Size  Location     Type
 10087 ;;		None
 10088 ;; Return value:  Size  Location     Type
 10089 ;;                  2  [STACK] int 
 10090 ;; Registers used:
 10091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/0
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10101 ;;Total ram usage:        0 bytes
 10102 ;; Hardware stack levels used:    1
 10103 ;; Hardware stack levels required when called:    5
 10104 ;; This function calls:
 10105 ;;		_putch
 10106 ;; This function is called by:
 10107 ;;		_pad
 10108 ;;		_stoa
 10109 ;;		_vfpfcnvrt
 10110 ;;		_fputs
 10111 ;; This function uses a reentrant model
 10112 ;;
 10113                           
 10114                           	psect	text44
 10115  004366                     __ptext44:
 10116                           	opt callstack 0
 10117  004366                     _fputc:
 10118                           	opt callstack 21
 10119                           
 10120                           ;stkvar	_fp @ sp[(0)+-4]
 10121                           
 10122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10123                           ;incstack = 0
 10124  004366  0EFC               	movlw	-4
 10125  004368  006F FF8C  F03C    	movff	plusw1,btemp
 10126  00436E  0EFD               	movlw	-3
 10127  004370  50E3               	movf	plusw1,w,c
 10128  004372  103C               	iorwf	btemp,w,c
 10129  004374  B4D8               	btfsc	status,2,c
 10130  004376  D009               	goto	u3460
 10131                           
 10132                           ;stkvar	_fp @ sp[(0)+-4]
 10133  004378  0EFC               	movlw	-4
 10134  00437A  006F FF8C  F03C    	movff	plusw1,btemp
 10135  004380  0EFD               	movlw	-3
 10136  004382  50E3               	movf	plusw1,w,c
 10137  004384  103C               	iorwf	btemp,w,c
 10138  004386  A4D8               	btfss	status,2,c
 10139  004388  D006               	goto	l6629
 10140  00438A                     u3460:
 10141                           
 10142                           ;stkvar	_c @ sp[(0)+-2]
 10143  00438A  0EFE               	movlw	-2
 10144  00438C  50E3               	movf	plusw1,w,c
 10145  00438E  6EE6               	movwf	postinc1,c
 10146  004390  EC4C  F02C         	call	_putch	;wreg free
 10147  004394  D069               	goto	l2452
 10148  004396                     l6629:
 10149                           
 10150                           ;stkvar	_fp @ sp[(0)+-4]
 10151  004396  0EFC               	movlw	-4
 10152  004398  006F FF8C  F046    	movff	plusw1,btemp+10
 10153  00439E  0EFD               	movlw	-3
 10154  0043A0  006F FF8C  F047    	movff	plusw1,btemp+11
 10155  0043A6  0E03               	movlw	3
 10156  0043A8  2446               	addwf	btemp+10,w,c
 10157  0043AA  6ED9               	movwf	fsr2l,c
 10158  0043AC  0E00               	movlw	0
 10159  0043AE  2047               	addwfc	btemp+11,w,c
 10160  0043B0  6EDA               	movwf	fsr2h,c
 10161  0043B2  50DE               	movf	postinc2,w,c
 10162  0043B4  10DE               	iorwf	postinc2,w,c
 10163  0043B6  B4D8               	btfsc	status,2,c
 10164  0043B8  D026               	goto	u3480
 10165                           
 10166                           ;stkvar	_fp @ sp[(0)+-4]
 10167  0043BA  0EFC               	movlw	-4
 10168  0043BC  006F FF8C  F046    	movff	plusw1,btemp+10
 10169  0043C2  0EFD               	movlw	-3
 10170  0043C4  006F FF8C  F047    	movff	plusw1,btemp+11
 10171  0043CA  0E03               	movlw	3
 10172  0043CC  2446               	addwf	btemp+10,w,c
 10173  0043CE  6ED9               	movwf	fsr2l,c
 10174  0043D0  0E00               	movlw	0
 10175  0043D2  2047               	addwfc	btemp+11,w,c
 10176  0043D4  6EDA               	movwf	fsr2h,c
 10177                           
 10178                           ;stkvar	_fp @ sp[(0)+-4]
 10179  0043D6  0EFC               	movlw	-4
 10180  0043D8  006F FF8C  F046    	movff	plusw1,btemp+10
 10181  0043DE  0EFD               	movlw	-3
 10182  0043E0  006F FF8C  F047    	movff	plusw1,btemp+11
 10183  0043E6  0E01               	movlw	1
 10184  0043E8  2446               	addwf	btemp+10,w,c
 10185  0043EA  6EE9               	movwf	fsr0l,c
 10186  0043EC  0E00               	movlw	0
 10187  0043EE  2047               	addwfc	btemp+11,w,c
 10188  0043F0  6EEA               	movwf	fsr0h,c
 10189  0043F2  50DE               	movf	postinc2,w,c
 10190  0043F4  5CEE               	subwf	postinc0,w,c
 10191  0043F6  50EE               	movf	postinc0,w,c
 10192  0043F8  0A80               	xorlw	128
 10193  0043FA  6E3C               	movwf	btemp,c
 10194  0043FC  50DE               	movf	postinc2,w,c
 10195  0043FE  0A80               	xorlw	128
 10196  004400  583C               	subwfb	btemp,w,c
 10197  004402  B0D8               	btfsc	status,0,c
 10198  004404  D031               	goto	l2452
 10199  004406                     u3480:
 10200                           
 10201                           ;stkvar	_c @ sp[(0)+-2]
 10202                           ;stkvar	_fp @ sp[(0)+-4]
 10203  004406  0EFC               	movlw	-4
 10204  004408  006F FF8C  F046    	movff	plusw1,btemp+10
 10205  00440E  0EFD               	movlw	-3
 10206  004410  006F FF8C  F047    	movff	plusw1,btemp+11
 10207  004416  0E01               	movlw	1
 10208  004418  2446               	addwf	btemp+10,w,c
 10209  00441A  6ED9               	movwf	fsr2l,c
 10210  00441C  0E00               	movlw	0
 10211  00441E  2047               	addwfc	btemp+11,w,c
 10212  004420  6EDA               	movwf	fsr2h,c
 10213  004422  50DF               	movf	indf2,w,c
 10214  004424  6E47               	movwf	btemp+11,c
 10215                           
 10216                           ;stkvar	_fp @ sp[(0)+-4]
 10217  004426  0EFC               	movlw	-4
 10218  004428  006F FF8F FFD9     	movff	plusw1,fsr2l
 10219  00442E  0EFD               	movlw	-3
 10220  004430  006F FF8F FFDA     	movff	plusw1,fsr2h
 10221  004436  50DF               	movf	indf2,w,c
 10222  004438  2447               	addwf	btemp+11,w,c
 10223  00443A  6ED9               	movwf	fsr2l,c
 10224  00443C  6ADA               	clrf	fsr2h,c
 10225  00443E  0EFE               	movlw	-2
 10226  004440  006F FF8F FFDF     	movff	plusw1,indf2
 10227                           
 10228                           ;stkvar	_fp @ sp[(0)+-4]
 10229  004446  0EFC               	movlw	-4
 10230  004448  006F FF8C  F046    	movff	plusw1,btemp+10
 10231  00444E  0EFD               	movlw	-3
 10232  004450  006F FF8C  F047    	movff	plusw1,btemp+11
 10233  004456  0E01               	movlw	1
 10234  004458  2446               	addwf	btemp+10,w,c
 10235  00445A  6ED9               	movwf	fsr2l,c
 10236  00445C  0E00               	movlw	0
 10237  00445E  2047               	addwfc	btemp+11,w,c
 10238  004460  6EDA               	movwf	fsr2h,c
 10239  004462  2ADE               	incf	postinc2,f,c
 10240  004464  0E00               	movlw	0
 10241  004466  22DD               	addwfc	postdec2,f,c
 10242  004468                     l2452:
 10243                           
 10244                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10245  004468  52E5               	movf	postdec1,f,c
 10246  00446A  52E5               	movf	postdec1,f,c
 10247  00446C  52E5               	movf	postdec1,f,c
 10248  00446E  52E5               	movf	postdec1,f,c
 10249  004470  0012               	return		;funcret
 10250  004472                     __end_of_fputc:
 10251                           	opt callstack 0
 10252                           
 10253 ;; *************** function _putch *****************
 10254 ;; Defined at:
 10255 ;;		line 138 in file "eadog.c"
 10256 ;; Parameters:    Size  Location     Type
 10257 ;;  c               1  [STACK] unsigned char 
 10258 ;; Auto vars:     Size  Location     Type
 10259 ;;		None
 10260 ;; Return value:  Size  Location     Type
 10261 ;;                  1  [STACK] void 
 10262 ;; Registers used:
 10263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10264 ;; Tracked objects:
 10265 ;;		On entry : 0/0
 10266 ;;		On exit  : 0/0
 10267 ;;		Unchanged: 0/0
 10268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10273 ;;Total ram usage:        0 bytes
 10274 ;; Hardware stack levels used:    1
 10275 ;; Hardware stack levels required when called:    4
 10276 ;; This function calls:
 10277 ;;		_ringBufS_put_dma
 10278 ;; This function is called by:
 10279 ;;		_fputc
 10280 ;; This function uses a reentrant model
 10281 ;;
 10282                           
 10283                           	psect	text45
 10284  005898                     __ptext45:
 10285                           	opt callstack 0
 10286  005898                     _putch:
 10287                           	opt callstack 21
 10288                           
 10289                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 10290                           ;stkvar	_c @ sp[(0)+-1]
 10291                           
 10292                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10293                           ;incstack = 0
 10294  005898  0EFF               	movlw	-1
 10295  00589A  50E3               	movf	plusw1,w,c
 10296  00589C  6EE6               	movwf	postinc1,c
 10297  00589E  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
 10298  0058A4  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
 10299  0058AA  EC37  F024         	call	_ringBufS_put_dma	;wreg free
 10300                           
 10301                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 10302  0058AE  52E5               	movf	postdec1,f,c
 10303  0058B0  0012               	return		;funcret
 10304  0058B2                     __end_of_putch:
 10305                           	opt callstack 0
 10306                           
 10307 ;; *************** function _ringBufS_put_dma *****************
 10308 ;; Defined at:
 10309 ;;		line 67 in file "ringbufs.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10312 ;;		 -> ring_buf1(67), 
 10313 ;;  c               1  [STACK] const unsigned char 
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;		None
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  1  [STACK] void 
 10318 ;; Registers used:
 10319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10329 ;;Total ram usage:        0 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; Hardware stack levels required when called:    3
 10332 ;; This function calls:
 10333 ;;		Nothing
 10334 ;; This function is called by:
 10335 ;;		_putch
 10336 ;; This function uses a reentrant model
 10337 ;;
 10338                           
 10339                           	psect	text46
 10340  00486E                     __ptext46:
 10341                           	opt callstack 0
 10342  00486E                     _ringBufS_put_dma:
 10343                           	opt callstack 21
 10344                           
 10345                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 10346                           ;stkvar	__this @ sp[(0)+-2]
 10347                           
 10348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10349                           ;incstack = 0
 10350  00486E  0EFE               	movlw	-2
 10351  004870  006F FF8C  F046    	movff	plusw1,btemp+10
 10352  004876  0EFF               	movlw	-1
 10353  004878  006F FF8C  F047    	movff	plusw1,btemp+11
 10354  00487E  0E42               	movlw	66
 10355  004880  2446               	addwf	btemp+10,w,c
 10356  004882  6ED9               	movwf	fsr2l,c
 10357  004884  0E00               	movlw	0
 10358  004886  2047               	addwfc	btemp+11,w,c
 10359  004888  6EDA               	movwf	fsr2h,c
 10360  00488A  0E40               	movlw	64
 10361  00488C  60DF               	cpfslt	indf2,c
 10362  00488E  D040               	goto	l1429
 10363                           
 10364                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 10365                           ;stkvar	_c @ sp[(0)+-3]
 10366                           ;stkvar	__this @ sp[(0)+-2]
 10367  004890  0EFE               	movlw	-2
 10368  004892  006F FF8C  F046    	movff	plusw1,btemp+10
 10369  004898  0EFF               	movlw	-1
 10370  00489A  006F FF8C  F047    	movff	plusw1,btemp+11
 10371  0048A0  0E40               	movlw	64
 10372  0048A2  2446               	addwf	btemp+10,w,c
 10373  0048A4  6ED9               	movwf	fsr2l,c
 10374  0048A6  0E00               	movlw	0
 10375  0048A8  2047               	addwfc	btemp+11,w,c
 10376  0048AA  6EDA               	movwf	fsr2h,c
 10377  0048AC  50DF               	movf	indf2,w,c
 10378  0048AE  6E47               	movwf	btemp+11,c
 10379                           
 10380                           ;stkvar	__this @ sp[(0)+-2]
 10381  0048B0  0EFE               	movlw	-2
 10382  0048B2  006F FF8C  F044    	movff	plusw1,btemp+8
 10383  0048B8  0EFF               	movlw	-1
 10384  0048BA  006F FF8C  F045    	movff	plusw1,btemp+9
 10385  0048C0  5047               	movf	btemp+11,w,c
 10386  0048C2  2444               	addwf	btemp+8,w,c
 10387  0048C4  6ED9               	movwf	fsr2l,c
 10388  0048C6  0E00               	movlw	0
 10389  0048C8  2045               	addwfc	btemp+9,w,c
 10390  0048CA  6EDA               	movwf	fsr2h,c
 10391  0048CC  0EFD               	movlw	-3
 10392  0048CE  006F FF8F FFDF     	movff	plusw1,indf2
 10393                           
 10394                           ;ringbufs.c: 71:   ++_this->head;
 10395                           ;stkvar	__this @ sp[(0)+-2]
 10396  0048D4  0EFE               	movlw	-2
 10397  0048D6  006F FF8C  F046    	movff	plusw1,btemp+10
 10398  0048DC  0EFF               	movlw	-1
 10399  0048DE  006F FF8C  F047    	movff	plusw1,btemp+11
 10400  0048E4  0E40               	movlw	64
 10401  0048E6  2446               	addwf	btemp+10,w,c
 10402  0048E8  6ED9               	movwf	fsr2l,c
 10403  0048EA  0E00               	movlw	0
 10404  0048EC  2047               	addwfc	btemp+11,w,c
 10405  0048EE  6EDA               	movwf	fsr2h,c
 10406  0048F0  2ADF               	incf	indf2,f,c
 10407                           
 10408                           ;ringbufs.c: 72:   ++_this->count;
 10409                           ;stkvar	__this @ sp[(0)+-2]
 10410  0048F2  0EFE               	movlw	-2
 10411  0048F4  006F FF8C  F046    	movff	plusw1,btemp+10
 10412  0048FA  0EFF               	movlw	-1
 10413  0048FC  006F FF8C  F047    	movff	plusw1,btemp+11
 10414  004902  0E42               	movlw	66
 10415  004904  2446               	addwf	btemp+10,w,c
 10416  004906  6ED9               	movwf	fsr2l,c
 10417  004908  0E00               	movlw	0
 10418  00490A  2047               	addwfc	btemp+11,w,c
 10419  00490C  6EDA               	movwf	fsr2h,c
 10420  00490E  2ADF               	incf	indf2,f,c
 10421  004910                     l1429:
 10422                           
 10423                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 10424  004910  52E5               	movf	postdec1,f,c
 10425  004912  52E5               	movf	postdec1,f,c
 10426  004914  52E5               	movf	postdec1,f,c
 10427  004916  0012               	return		;funcret
 10428  004918                     __end_of_ringBufS_put_dma:
 10429                           	opt callstack 0
 10430                           
 10431 ;; *************** function _SYSTEM_Initialize *****************
 10432 ;; Defined at:
 10433 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10434 ;; Parameters:    Size  Location     Type
 10435 ;;		None
 10436 ;; Auto vars:     Size  Location     Type
 10437 ;;		None
 10438 ;; Return value:  Size  Location     Type
 10439 ;;                  1  [STACK] void 
 10440 ;; Registers used:
 10441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 10442 ;; Tracked objects:
 10443 ;;		On entry : 0/0
 10444 ;;		On exit  : 3F/3C
 10445 ;;		Unchanged: 0/0
 10446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10451 ;;Total ram usage:        0 bytes
 10452 ;; Hardware stack levels used:    1
 10453 ;; Hardware stack levels required when called:    5
 10454 ;; This function calls:
 10455 ;;		_ADCC_Initialize
 10456 ;;		_CLC1_Initialize
 10457 ;;		_CLKREF_Initialize
 10458 ;;		_DMA1_Initialize
 10459 ;;		_DSM_Initialize
 10460 ;;		_EXT_INT_Initialize
 10461 ;;		_INTERRUPT_Initialize
 10462 ;;		_NCO1_Initialize
 10463 ;;		_OSCILLATOR_Initialize
 10464 ;;		_PIN_MANAGER_Initialize
 10465 ;;		_PMD_Initialize
 10466 ;;		_SPI1_Initialize
 10467 ;;		_TMR5_Initialize
 10468 ;;		_TMR6_Initialize
 10469 ;;		_UART1_Initialize
 10470 ;;		_UART2_Initialize
 10471 ;; This function is called by:
 10472 ;;		_main
 10473 ;; This function uses a reentrant model
 10474 ;;
 10475                           
 10476                           	psect	text47
 10477  005146                     __ptext47:
 10478                           	opt callstack 0
 10479  005146                     _SYSTEM_Initialize:
 10480                           	opt callstack 25
 10481                           
 10482                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 10483                           
 10484                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10485                           ;incstack = 0
 10486  005146  ECD5  F026         	call	_INTERRUPT_Initialize	;wreg free
 10487                           
 10488                           ; BSR set to: 57
 10489                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 10490  00514A  EC8A  F02C         	call	_PMD_Initialize	;wreg free
 10491                           
 10492                           ; BSR set to: 57
 10493                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10494  00514E  ECDD  F024         	call	_PIN_MANAGER_Initialize	;wreg free
 10495                           
 10496                           ; BSR set to: 58
 10497                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10498  005152  EC7F  F02C         	call	_OSCILLATOR_Initialize	;wreg free
 10499                           
 10500                           ; BSR set to: 57
 10501                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 10502  005156  EC15  F028         	call	_ADCC_Initialize	;wreg free
 10503                           
 10504                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 10505  00515A  EC30  F02C         	call	_NCO1_Initialize	;wreg free
 10506                           
 10507                           ; BSR set to: 63
 10508                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 10509  00515E  ECEF  F027         	call	_EXT_INT_Initialize	;wreg free
 10510                           
 10511                           ; BSR set to: 57
 10512                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 10513  005162  EC9F  F02A         	call	_TMR6_Initialize	;wreg free
 10514                           
 10515                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 10516  005166  EC9E  F02B         	call	_CLC1_Initialize	;wreg free
 10517                           
 10518                           ; BSR set to: 60
 10519                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 10520  00516A  EC5D  F028         	call	_TMR5_Initialize	;wreg free
 10521                           
 10522                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 10523  00516E  EC3E  F02C         	call	_DSM_Initialize	;wreg free
 10524                           
 10525                           ; BSR set to: 60
 10526                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 10527  005172  EC08  F027         	call	_UART1_Initialize	;wreg free
 10528                           
 10529                           ; BSR set to: 57
 10530                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 10531  005176  EC6B  F027         	call	_UART2_Initialize	;wreg free
 10532                           
 10533                           ; BSR set to: 57
 10534                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 10535  00517A  EC74  F02C         	call	_SPI1_Initialize	;wreg free
 10536                           
 10537                           ; BSR set to: 61
 10538                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 10539  00517E  ECA0  F026         	call	_DMA1_Initialize	;wreg free
 10540                           
 10541                           ; BSR set to: 59
 10542                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 10543  005182  ECBB  F02C         	call	_CLKREF_Initialize	;wreg free
 10544                           
 10545                           ; BSR set to: 60
 10546                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 10547  005186  0012               	return		;funcret
 10548  005188                     __end_of_SYSTEM_Initialize:
 10549                           	opt callstack 0
 10550                           
 10551 ;; *************** function _UART2_Initialize *****************
 10552 ;; Defined at:
 10553 ;;		line 78 in file "mcc_generated_files/uart2.c"
 10554 ;; Parameters:    Size  Location     Type
 10555 ;;		None
 10556 ;; Auto vars:     Size  Location     Type
 10557 ;;		None
 10558 ;; Return value:  Size  Location     Type
 10559 ;;                  1  [STACK] void 
 10560 ;; Registers used:
 10561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10562 ;; Tracked objects:
 10563 ;;		On entry : 3F/39
 10564 ;;		On exit  : 3F/39
 10565 ;;		Unchanged: 0/0
 10566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10571 ;;Total ram usage:        0 bytes
 10572 ;; Hardware stack levels used:    1
 10573 ;; Hardware stack levels required when called:    4
 10574 ;; This function calls:
 10575 ;;		_UART2_SetRxInterruptHandler
 10576 ;;		_UART2_SetTxInterruptHandler
 10577 ;; This function is called by:
 10578 ;;		_SYSTEM_Initialize
 10579 ;; This function uses a reentrant model
 10580 ;;
 10581                           
 10582                           	psect	text48
 10583  004ED6                     __ptext48:
 10584                           	opt callstack 0
 10585  004ED6                     _UART2_Initialize:
 10586                           	opt callstack 25
 10587                           
 10588                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 10589                           
 10590                           ; BSR set to: 60
 10591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10592                           ;incstack = 0
 10593  004ED6  0139               	movlb	57	; () banked
 10594  004ED8  9596               	bcf	150,2,b	;volatile
 10595                           
 10596                           ; BSR set to: 57
 10597                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 10598  004EDA  0E06               	movlw	low _UART2_Receive_ISR
 10599  004EDC  6EE6               	movwf	postinc1,c
 10600  004EDE  0E58               	movlw	high _UART2_Receive_ISR
 10601  004EE0  6EE6               	movwf	postinc1,c
 10602  004EE2  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 10603  004EE4  6EE6               	movwf	postinc1,c
 10604  004EE6  EC63  F02A         	call	_UART2_SetRxInterruptHandler	;wreg free
 10605                           
 10606                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 10607  004EEA  0139               	movlb	57	; () banked
 10608  004EEC  9796               	bcf	150,3,b	;volatile
 10609                           
 10610                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 10611  004EEE  0E7A               	movlw	low _UART2_Transmit_ISR
 10612  004EF0  6EE6               	movwf	postinc1,c
 10613  004EF2  0E53               	movlw	high _UART2_Transmit_ISR
 10614  004EF4  6EE6               	movwf	postinc1,c
 10615  004EF6  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 10616  004EF8  6EE6               	movwf	postinc1,c
 10617  004EFA  EC4F  F02A         	call	_UART2_SetTxInterruptHandler	;wreg free
 10618                           
 10619                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 10620  004EFE  013D               	movlb	61	; () banked
 10621  004F00  6BD4               	clrf	212,b	;volatile
 10622                           
 10623                           ; BSR set to: 61
 10624                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 10625  004F02  6BD6               	clrf	214,b	;volatile
 10626                           
 10627                           ; BSR set to: 61
 10628                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 10629  004F04  6BD8               	clrf	216,b	;volatile
 10630                           
 10631                           ; BSR set to: 61
 10632                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 10633  004F06  0EB0               	movlw	176
 10634  004F08  6FDA               	movwf	218,b	;volatile
 10635                           
 10636                           ; BSR set to: 61
 10637                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 10638  004F0A  0E80               	movlw	128
 10639  004F0C  6FDB               	movwf	219,b	;volatile
 10640                           
 10641                           ; BSR set to: 61
 10642                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 10643  004F0E  6BDC               	clrf	220,b	;volatile
 10644                           
 10645                           ; BSR set to: 61
 10646                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 10647  004F10  0E82               	movlw	130
 10648  004F12  6FDD               	movwf	221,b	;volatile
 10649                           
 10650                           ; BSR set to: 61
 10651                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 10652  004F14  0E06               	movlw	6
 10653  004F16  6FDE               	movwf	222,b	;volatile
 10654                           
 10655                           ; BSR set to: 61
 10656                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 10657  004F18  6BDF               	clrf	223,b	;volatile
 10658                           
 10659                           ; BSR set to: 61
 10660                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 10661  004F1A  6BE0               	clrf	224,b	;volatile
 10662                           
 10663                           ; BSR set to: 61
 10664                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 10665  004F1C  6BE1               	clrf	225,b	;volatile
 10666                           
 10667                           ; BSR set to: 61
 10668                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 10669  004F1E  6BE2               	clrf	226,b	;volatile
 10670                           
 10671                           ; BSR set to: 61
 10672                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 10673  004F20  6A35               	clrf	_uart2TxHead,c	;volatile
 10674                           
 10675                           ; BSR set to: 61
 10676                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 10677  004F22  6A34               	clrf	_uart2TxTail,c	;volatile
 10678                           
 10679                           ; BSR set to: 61
 10680                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 10681  004F24  0E40               	movlw	64
 10682  004F26  6E33               	movwf	_uart2TxBufferRemaining,c	;volatile
 10683                           
 10684                           ; BSR set to: 61
 10685                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 10686  004F28  6A32               	clrf	_uart2RxHead,c	;volatile
 10687                           
 10688                           ; BSR set to: 61
 10689                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 10690  004F2A  6A31               	clrf	_uart2RxTail,c	;volatile
 10691                           
 10692                           ; BSR set to: 61
 10693                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 10694  004F2C  6A30               	clrf	_uart2RxCount,c	;volatile
 10695                           
 10696                           ; BSR set to: 61
 10697                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 10698  004F2E  0139               	movlb	57	; () banked
 10699  004F30  8596               	bsf	150,2,b	;volatile
 10700                           
 10701                           ; BSR set to: 57
 10702                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10703  004F32  0012               	return		;funcret
 10704  004F34                     __end_of_UART2_Initialize:
 10705                           	opt callstack 0
 10706                           
 10707 ;; *************** function _UART2_SetTxInterruptHandler *****************
 10708 ;; Defined at:
 10709 ;;		line 252 in file "mcc_generated_files/uart2.c"
 10710 ;; Parameters:    Size  Location     Type
 10711 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10712 ;;		 -> UART2_Transmit_ISR(1), 
 10713 ;; Auto vars:     Size  Location     Type
 10714 ;;		None
 10715 ;; Return value:  Size  Location     Type
 10716 ;;                  1  [STACK] void 
 10717 ;; Registers used:
 10718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10719 ;; Tracked objects:
 10720 ;;		On entry : 3F/39
 10721 ;;		On exit  : 0/0
 10722 ;;		Unchanged: 0/0
 10723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10728 ;;Total ram usage:        0 bytes
 10729 ;; Hardware stack levels used:    1
 10730 ;; Hardware stack levels required when called:    3
 10731 ;; This function calls:
 10732 ;;		Nothing
 10733 ;; This function is called by:
 10734 ;;		_UART2_Initialize
 10735 ;; This function uses a reentrant model
 10736 ;;
 10737                           
 10738                           	psect	text49
 10739  00549E                     __ptext49:
 10740                           	opt callstack 0
 10741  00549E                     _UART2_SetTxInterruptHandler:
 10742                           	opt callstack 25
 10743                           
 10744                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 10745                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10746                           
 10747                           ; BSR set to: 57
 10748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10749                           ;incstack = 0
 10750  00549E  50E1               	movf	fsr1l,w,c
 10751  0054A0  0FFD               	addlw	-3
 10752  0054A2  6ED9               	movwf	fsr2l,c
 10753  0054A4  50E2               	movf	fsr1h,w,c
 10754  0054A6  6EDA               	movwf	fsr2h,c
 10755  0054A8  0EFF               	movlw	255
 10756  0054AA  22DA               	addwfc	fsr2h,f,c
 10757  0054AC  006F FF78  F014    	movff	postinc2,_UART2_TxInterruptHandler
 10758  0054B2  006F FF78  F015    	movff	postinc2,_UART2_TxInterruptHandler+1
 10759  0054B8  006F FF74  F016    	movff	postdec2,_UART2_TxInterruptHandler+2
 10760                           
 10761                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10762  0054BE  52E5               	movf	postdec1,f,c
 10763  0054C0  52E5               	movf	postdec1,f,c
 10764  0054C2  52E5               	movf	postdec1,f,c
 10765  0054C4  0012               	return		;funcret
 10766  0054C6                     __end_of_UART2_SetTxInterruptHandler:
 10767                           	opt callstack 0
 10768                           
 10769 ;; *************** function _UART2_SetRxInterruptHandler *****************
 10770 ;; Defined at:
 10771 ;;		line 248 in file "mcc_generated_files/uart2.c"
 10772 ;; Parameters:    Size  Location     Type
 10773 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10774 ;;		 -> UART2_Receive_ISR(1), 
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;		None
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1  [STACK] void 
 10779 ;; Registers used:
 10780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10781 ;; Tracked objects:
 10782 ;;		On entry : 3F/39
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10790 ;;Total ram usage:        0 bytes
 10791 ;; Hardware stack levels used:    1
 10792 ;; Hardware stack levels required when called:    3
 10793 ;; This function calls:
 10794 ;;		Nothing
 10795 ;; This function is called by:
 10796 ;;		_UART2_Initialize
 10797 ;; This function uses a reentrant model
 10798 ;;
 10799                           
 10800                           	psect	text50
 10801  0054C6                     __ptext50:
 10802                           	opt callstack 0
 10803  0054C6                     _UART2_SetRxInterruptHandler:
 10804                           	opt callstack 25
 10805                           
 10806                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 10807                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10808                           
 10809                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10810                           ;incstack = 0
 10811  0054C6  50E1               	movf	fsr1l,w,c
 10812  0054C8  0FFD               	addlw	-3
 10813  0054CA  6ED9               	movwf	fsr2l,c
 10814  0054CC  50E2               	movf	fsr1h,w,c
 10815  0054CE  6EDA               	movwf	fsr2h,c
 10816  0054D0  0EFF               	movlw	255
 10817  0054D2  22DA               	addwfc	fsr2h,f,c
 10818  0054D4  006F FF78  F017    	movff	postinc2,_UART2_RxInterruptHandler
 10819  0054DA  006F FF78  F018    	movff	postinc2,_UART2_RxInterruptHandler+1
 10820  0054E0  006F FF74  F019    	movff	postdec2,_UART2_RxInterruptHandler+2
 10821                           
 10822                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10823  0054E6  52E5               	movf	postdec1,f,c
 10824  0054E8  52E5               	movf	postdec1,f,c
 10825  0054EA  52E5               	movf	postdec1,f,c
 10826  0054EC  0012               	return		;funcret
 10827  0054EE                     __end_of_UART2_SetRxInterruptHandler:
 10828                           	opt callstack 0
 10829                           
 10830 ;; *************** function _UART1_Initialize *****************
 10831 ;; Defined at:
 10832 ;;		line 78 in file "mcc_generated_files/uart1.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;		None
 10835 ;; Auto vars:     Size  Location     Type
 10836 ;;		None
 10837 ;; Return value:  Size  Location     Type
 10838 ;;                  1  [STACK] void 
 10839 ;; Registers used:
 10840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10841 ;; Tracked objects:
 10842 ;;		On entry : 3F/3C
 10843 ;;		On exit  : 3F/39
 10844 ;;		Unchanged: 0/0
 10845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10850 ;;Total ram usage:        0 bytes
 10851 ;; Hardware stack levels used:    1
 10852 ;; Hardware stack levels required when called:    4
 10853 ;; This function calls:
 10854 ;;		_UART1_SetRxInterruptHandler
 10855 ;;		_UART1_SetTxInterruptHandler
 10856 ;; This function is called by:
 10857 ;;		_SYSTEM_Initialize
 10858 ;; This function uses a reentrant model
 10859 ;;
 10860                           
 10861                           	psect	text51
 10862  004E10                     __ptext51:
 10863                           	opt callstack 0
 10864  004E10                     _UART1_Initialize:
 10865                           	opt callstack 25
 10866                           
 10867                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 10868                           
 10869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10870                           ;incstack = 0
 10871  004E10  0139               	movlb	57	; () banked
 10872  004E12  9793               	bcf	147,3,b	;volatile
 10873                           
 10874                           ; BSR set to: 57
 10875                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 10876  004E14  0EE6               	movlw	low _UART1_Receive_ISR
 10877  004E16  6EE6               	movwf	postinc1,c
 10878  004E18  0E57               	movlw	high _UART1_Receive_ISR
 10879  004E1A  6EE6               	movwf	postinc1,c
 10880  004E1C  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 10881  004E1E  6EE6               	movwf	postinc1,c
 10882  004E20  EC8B  F02A         	call	_UART1_SetRxInterruptHandler	;wreg free
 10883                           
 10884                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 10885  004E24  0139               	movlb	57	; () banked
 10886  004E26  9993               	bcf	147,4,b	;volatile
 10887                           
 10888                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 10889  004E28  0E4E               	movlw	low _UART1_Transmit_ISR
 10890  004E2A  6EE6               	movwf	postinc1,c
 10891  004E2C  0E53               	movlw	high _UART1_Transmit_ISR
 10892  004E2E  6EE6               	movwf	postinc1,c
 10893  004E30  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 10894  004E32  6EE6               	movwf	postinc1,c
 10895  004E34  EC77  F02A         	call	_UART1_SetTxInterruptHandler	;wreg free
 10896                           
 10897                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 10898  004E38  013D               	movlb	61	; () banked
 10899  004E3A  6BEC               	clrf	236,b	;volatile
 10900                           
 10901                           ; BSR set to: 61
 10902                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 10903  004E3C  6BED               	clrf	237,b	;volatile
 10904                           
 10905                           ; BSR set to: 61
 10906                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 10907  004E3E  6BEE               	clrf	238,b	;volatile
 10908                           
 10909                           ; BSR set to: 61
 10910                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 10911  004E40  6BEF               	clrf	239,b	;volatile
 10912                           
 10913                           ; BSR set to: 61
 10914                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 10915  004E42  6BF0               	clrf	240,b	;volatile
 10916                           
 10917                           ; BSR set to: 61
 10918                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 10919  004E44  6BF1               	clrf	241,b	;volatile
 10920                           
 10921                           ; BSR set to: 61
 10922                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 10923  004E46  0EB0               	movlw	176
 10924  004E48  6FF2               	movwf	242,b	;volatile
 10925                           
 10926                           ; BSR set to: 61
 10927                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 10928  004E4A  0E80               	movlw	128
 10929  004E4C  6FF3               	movwf	243,b	;volatile
 10930                           
 10931                           ; BSR set to: 61
 10932                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 10933  004E4E  6BF4               	clrf	244,b	;volatile
 10934                           
 10935                           ; BSR set to: 61
 10936                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 10937  004E50  0E82               	movlw	130
 10938  004E52  6FF5               	movwf	245,b	;volatile
 10939                           
 10940                           ; BSR set to: 61
 10941                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 10942  004E54  0E06               	movlw	6
 10943  004E56  6FF6               	movwf	246,b	;volatile
 10944                           
 10945                           ; BSR set to: 61
 10946                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 10947  004E58  6BF7               	clrf	247,b	;volatile
 10948                           
 10949                           ; BSR set to: 61
 10950                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 10951  004E5A  6BF8               	clrf	248,b	;volatile
 10952                           
 10953                           ; BSR set to: 61
 10954                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 10955  004E5C  6BF9               	clrf	249,b	;volatile
 10956                           
 10957                           ; BSR set to: 61
 10958                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 10959  004E5E  6BFA               	clrf	250,b	;volatile
 10960                           
 10961                           ; BSR set to: 61
 10962                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 10963  004E60  6A3B               	clrf	_uart1TxHead,c	;volatile
 10964                           
 10965                           ; BSR set to: 61
 10966                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 10967  004E62  6A3A               	clrf	_uart1TxTail,c	;volatile
 10968                           
 10969                           ; BSR set to: 61
 10970                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 10971  004E64  0E40               	movlw	64
 10972  004E66  6E39               	movwf	_uart1TxBufferRemaining,c	;volatile
 10973                           
 10974                           ; BSR set to: 61
 10975                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 10976  004E68  6A38               	clrf	_uart1RxHead,c	;volatile
 10977                           
 10978                           ; BSR set to: 61
 10979                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 10980  004E6A  6A37               	clrf	_uart1RxTail,c	;volatile
 10981                           
 10982                           ; BSR set to: 61
 10983                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 10984  004E6C  6A36               	clrf	_uart1RxCount,c	;volatile
 10985                           
 10986                           ; BSR set to: 61
 10987                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 10988  004E6E  0139               	movlb	57	; () banked
 10989  004E70  8793               	bsf	147,3,b	;volatile
 10990                           
 10991                           ; BSR set to: 57
 10992                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10993  004E72  0012               	return		;funcret
 10994  004E74                     __end_of_UART1_Initialize:
 10995                           	opt callstack 0
 10996                           
 10997 ;; *************** function _UART1_SetTxInterruptHandler *****************
 10998 ;; Defined at:
 10999 ;;		line 244 in file "mcc_generated_files/uart1.c"
 11000 ;; Parameters:    Size  Location     Type
 11001 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11002 ;;		 -> UART1_Transmit_ISR(1), 
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;		None
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  1  [STACK] void 
 11007 ;; Registers used:
 11008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11009 ;; Tracked objects:
 11010 ;;		On entry : 3F/39
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11018 ;;Total ram usage:        0 bytes
 11019 ;; Hardware stack levels used:    1
 11020 ;; Hardware stack levels required when called:    3
 11021 ;; This function calls:
 11022 ;;		Nothing
 11023 ;; This function is called by:
 11024 ;;		_UART1_Initialize
 11025 ;; This function uses a reentrant model
 11026 ;;
 11027                           
 11028                           	psect	text52
 11029  0054EE                     __ptext52:
 11030                           	opt callstack 0
 11031  0054EE                     _UART1_SetTxInterruptHandler:
 11032                           	opt callstack 25
 11033                           
 11034                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 11035                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11036                           
 11037                           ; BSR set to: 57
 11038                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11039                           ;incstack = 0
 11040  0054EE  50E1               	movf	fsr1l,w,c
 11041  0054F0  0FFD               	addlw	-3
 11042  0054F2  6ED9               	movwf	fsr2l,c
 11043  0054F4  50E2               	movf	fsr1h,w,c
 11044  0054F6  6EDA               	movwf	fsr2h,c
 11045  0054F8  0EFF               	movlw	255
 11046  0054FA  22DA               	addwfc	fsr2h,f,c
 11047  0054FC  006F FF78  F00E    	movff	postinc2,_UART1_TxInterruptHandler
 11048  005502  006F FF78  F00F    	movff	postinc2,_UART1_TxInterruptHandler+1
 11049  005508  006F FF74  F010    	movff	postdec2,_UART1_TxInterruptHandler+2
 11050                           
 11051                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11052  00550E  52E5               	movf	postdec1,f,c
 11053  005510  52E5               	movf	postdec1,f,c
 11054  005512  52E5               	movf	postdec1,f,c
 11055  005514  0012               	return		;funcret
 11056  005516                     __end_of_UART1_SetTxInterruptHandler:
 11057                           	opt callstack 0
 11058                           
 11059 ;; *************** function _UART1_SetRxInterruptHandler *****************
 11060 ;; Defined at:
 11061 ;;		line 239 in file "mcc_generated_files/uart1.c"
 11062 ;; Parameters:    Size  Location     Type
 11063 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11064 ;;		 -> UART1_Receive_ISR(1), 
 11065 ;; Auto vars:     Size  Location     Type
 11066 ;;		None
 11067 ;; Return value:  Size  Location     Type
 11068 ;;                  1  [STACK] void 
 11069 ;; Registers used:
 11070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11071 ;; Tracked objects:
 11072 ;;		On entry : 3F/39
 11073 ;;		On exit  : 0/0
 11074 ;;		Unchanged: 0/0
 11075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11080 ;;Total ram usage:        0 bytes
 11081 ;; Hardware stack levels used:    1
 11082 ;; Hardware stack levels required when called:    3
 11083 ;; This function calls:
 11084 ;;		Nothing
 11085 ;; This function is called by:
 11086 ;;		_UART1_Initialize
 11087 ;; This function uses a reentrant model
 11088 ;;
 11089                           
 11090                           	psect	text53
 11091  005516                     __ptext53:
 11092                           	opt callstack 0
 11093  005516                     _UART1_SetRxInterruptHandler:
 11094                           	opt callstack 25
 11095                           
 11096                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 11097                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11098                           
 11099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11100                           ;incstack = 0
 11101  005516  50E1               	movf	fsr1l,w,c
 11102  005518  0FFD               	addlw	-3
 11103  00551A  6ED9               	movwf	fsr2l,c
 11104  00551C  50E2               	movf	fsr1h,w,c
 11105  00551E  6EDA               	movwf	fsr2h,c
 11106  005520  0EFF               	movlw	255
 11107  005522  22DA               	addwfc	fsr2h,f,c
 11108  005524  006F FF78  F011    	movff	postinc2,_UART1_RxInterruptHandler
 11109  00552A  006F FF78  F012    	movff	postinc2,_UART1_RxInterruptHandler+1
 11110  005530  006F FF74  F013    	movff	postdec2,_UART1_RxInterruptHandler+2
 11111                           
 11112                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11113  005536  52E5               	movf	postdec1,f,c
 11114  005538  52E5               	movf	postdec1,f,c
 11115  00553A  52E5               	movf	postdec1,f,c
 11116  00553C  0012               	return		;funcret
 11117  00553E                     __end_of_UART1_SetRxInterruptHandler:
 11118                           	opt callstack 0
 11119                           
 11120 ;; *************** function _TMR6_Initialize *****************
 11121 ;; Defined at:
 11122 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 11123 ;; Parameters:    Size  Location     Type
 11124 ;;		None
 11125 ;; Auto vars:     Size  Location     Type
 11126 ;;		None
 11127 ;; Return value:  Size  Location     Type
 11128 ;;                  1  [STACK] void 
 11129 ;; Registers used:
 11130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11131 ;; Tracked objects:
 11132 ;;		On entry : 3F/39
 11133 ;;		On exit  : 0/0
 11134 ;;		Unchanged: 0/0
 11135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11140 ;;Total ram usage:        0 bytes
 11141 ;; Hardware stack levels used:    1
 11142 ;; Hardware stack levels required when called:    4
 11143 ;; This function calls:
 11144 ;;		_TMR6_SetInterruptHandler
 11145 ;; This function is called by:
 11146 ;;		_SYSTEM_Initialize
 11147 ;; This function uses a reentrant model
 11148 ;;
 11149                           
 11150                           	psect	text54
 11151  00553E                     __ptext54:
 11152                           	opt callstack 0
 11153  00553E                     _TMR6_Initialize:
 11154                           	opt callstack 25
 11155                           
 11156                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 11157                           
 11158                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11159                           ;incstack = 0
 11160  00553E  0E01               	movlw	1
 11161  005540  6E96               	movwf	16278,c	;volatile
 11162                           
 11163                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 11164  005542  6A95               	clrf	16277,c	;volatile
 11165                           
 11166                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 11167  005544  6A97               	clrf	16279,c	;volatile
 11168                           
 11169                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 11170  005546  0E03               	movlw	3
 11171  005548  6E93               	movwf	16275,c	;volatile
 11172                           
 11173                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 11174  00554A  6A92               	clrf	16274,c	;volatile
 11175                           
 11176                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 11177  00554C  0139               	movlb	57	; () banked
 11178  00554E  91A9               	bcf	169,0,b	;volatile
 11179                           
 11180                           ; BSR set to: 57
 11181                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 11182  005550  8199               	bsf	153,0,b	;volatile
 11183                           
 11184                           ; BSR set to: 57
 11185                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 11186  005552  0E00               	movlw	low _TMR6_DefaultInterruptHandler
 11187  005554  6EE6               	movwf	postinc1,c
 11188  005556  0E51               	movlw	high _TMR6_DefaultInterruptHandler
 11189  005558  6EE6               	movwf	postinc1,c
 11190  00555A  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 11191  00555C  6EE6               	movwf	postinc1,c
 11192  00555E  ECB3  F02A         	call	_TMR6_SetInterruptHandler	;wreg free
 11193                           
 11194                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 11195  005562  6894               	setf	16276,c	;volatile
 11196                           
 11197                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11198  005564  0012               	return		;funcret
 11199  005566                     __end_of_TMR6_Initialize:
 11200                           	opt callstack 0
 11201                           
 11202 ;; *************** function _TMR6_SetInterruptHandler *****************
 11203 ;; Defined at:
 11204 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 11205 ;; Parameters:    Size  Location     Type
 11206 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11207 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 11208 ;; Auto vars:     Size  Location     Type
 11209 ;;		None
 11210 ;; Return value:  Size  Location     Type
 11211 ;;                  1  [STACK] void 
 11212 ;; Registers used:
 11213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11214 ;; Tracked objects:
 11215 ;;		On entry : 3F/39
 11216 ;;		On exit  : 0/0
 11217 ;;		Unchanged: 0/0
 11218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11223 ;;Total ram usage:        0 bytes
 11224 ;; Hardware stack levels used:    1
 11225 ;; Hardware stack levels required when called:    3
 11226 ;; This function calls:
 11227 ;;		Nothing
 11228 ;; This function is called by:
 11229 ;;		_TMR6_Initialize
 11230 ;; This function uses a reentrant model
 11231 ;;
 11232                           
 11233                           	psect	text55
 11234  005566                     __ptext55:
 11235                           	opt callstack 0
 11236  005566                     _TMR6_SetInterruptHandler:
 11237                           	opt callstack 25
 11238                           
 11239                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 11240                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11241                           
 11242                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11243                           ;incstack = 0
 11244  005566  50E1               	movf	fsr1l,w,c
 11245  005568  0FFD               	addlw	-3
 11246  00556A  6ED9               	movwf	fsr2l,c
 11247  00556C  50E2               	movf	fsr1h,w,c
 11248  00556E  6EDA               	movwf	fsr2h,c
 11249  005570  0EFF               	movlw	255
 11250  005572  22DA               	addwfc	fsr2h,f,c
 11251  005574  006F FF78  F008    	movff	postinc2,_TMR6_InterruptHandler
 11252  00557A  006F FF78  F009    	movff	postinc2,_TMR6_InterruptHandler+1
 11253  005580  006F FF74  F00A    	movff	postdec2,_TMR6_InterruptHandler+2
 11254                           
 11255                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11256  005586  52E5               	movf	postdec1,f,c
 11257  005588  52E5               	movf	postdec1,f,c
 11258  00558A  52E5               	movf	postdec1,f,c
 11259  00558C  0012               	return		;funcret
 11260  00558E                     __end_of_TMR6_SetInterruptHandler:
 11261                           	opt callstack 0
 11262                           
 11263 ;; *************** function _TMR5_Initialize *****************
 11264 ;; Defined at:
 11265 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;		None
 11268 ;; Auto vars:     Size  Location     Type
 11269 ;;		None
 11270 ;; Return value:  Size  Location     Type
 11271 ;;                  1  [STACK] void 
 11272 ;; Registers used:
 11273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 11274 ;; Tracked objects:
 11275 ;;		On entry : 3F/3C
 11276 ;;		On exit  : 0/0
 11277 ;;		Unchanged: 0/0
 11278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11283 ;;Total ram usage:        0 bytes
 11284 ;; Hardware stack levels used:    1
 11285 ;; Hardware stack levels required when called:    4
 11286 ;; This function calls:
 11287 ;;		_TMR5_SetInterruptHandler
 11288 ;; This function is called by:
 11289 ;;		_SYSTEM_Initialize
 11290 ;; This function uses a reentrant model
 11291 ;;
 11292                           
 11293                           	psect	text56
 11294  0050BA                     __ptext56:
 11295                           	opt callstack 0
 11296  0050BA                     _TMR5_Initialize:
 11297                           	opt callstack 25
 11298                           
 11299                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 11300                           
 11301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11302                           ;incstack = 0
 11303  0050BA  6A9B               	clrf	16283,c	;volatile
 11304                           
 11305                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 11306  0050BC  6A9C               	clrf	16284,c	;volatile
 11307                           
 11308                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 11309  0050BE  0E01               	movlw	1
 11310  0050C0  6E9D               	movwf	16285,c	;volatile
 11311                           
 11312                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 11313  0050C2  0E63               	movlw	99
 11314  0050C4  6E99               	movwf	16281,c	;volatile
 11315                           
 11316                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 11317  0050C6  0EC0               	movlw	192
 11318  0050C8  6E98               	movwf	16280,c	;volatile
 11319                           
 11320                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 11321  0050CA  5098               	movf	16280,w,c	;volatile
 11322  0050CC  006F FE64  F03C    	movff	16281,btemp	;volatile
 11323  0050D2  6A3D               	clrf	btemp+1,c
 11324  0050D4  0060  F0F0  F03D   	movff	btemp,btemp+1
 11325  0050DA  6A3C               	clrf	btemp,c
 11326  0050DC  103C               	iorwf	btemp,w,c
 11327  0050DE  6E2B               	movwf	_timer5ReloadVal,c	;volatile
 11328  0050E0  503D               	movf	btemp+1,w,c
 11329  0050E2  6E2C               	movwf	_timer5ReloadVal+1,c	;volatile
 11330                           
 11331                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 11332  0050E4  0139               	movlb	57	; () banked
 11333  0050E6  9DA8               	bcf	168,6,b	;volatile
 11334                           
 11335                           ; BSR set to: 57
 11336                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 11337  0050E8  8D98               	bsf	152,6,b	;volatile
 11338                           
 11339                           ; BSR set to: 57
 11340                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 11341  0050EA  0ECE               	movlw	low _TMR5_DefaultInterruptHandler
 11342  0050EC  6EE6               	movwf	postinc1,c
 11343  0050EE  0E58               	movlw	high _TMR5_DefaultInterruptHandler
 11344  0050F0  6EE6               	movwf	postinc1,c
 11345  0050F2  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 11346  0050F4  6EE6               	movwf	postinc1,c
 11347  0050F6  ECC7  F02A         	call	_TMR5_SetInterruptHandler	;wreg free
 11348                           
 11349                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 11350  0050FA  0E31               	movlw	49
 11351  0050FC  6E9A               	movwf	16282,c	;volatile
 11352                           
 11353                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11354  0050FE  0012               	return		;funcret
 11355  005100                     __end_of_TMR5_Initialize:
 11356                           	opt callstack 0
 11357                           
 11358 ;; *************** function _TMR5_SetInterruptHandler *****************
 11359 ;; Defined at:
 11360 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 11361 ;; Parameters:    Size  Location     Type
 11362 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11363 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 11364 ;; Auto vars:     Size  Location     Type
 11365 ;;		None
 11366 ;; Return value:  Size  Location     Type
 11367 ;;                  1  [STACK] void 
 11368 ;; Registers used:
 11369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11370 ;; Tracked objects:
 11371 ;;		On entry : 3F/39
 11372 ;;		On exit  : 0/0
 11373 ;;		Unchanged: 0/0
 11374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11379 ;;Total ram usage:        0 bytes
 11380 ;; Hardware stack levels used:    1
 11381 ;; Hardware stack levels required when called:    3
 11382 ;; This function calls:
 11383 ;;		Nothing
 11384 ;; This function is called by:
 11385 ;;		_TMR5_Initialize
 11386 ;; This function uses a reentrant model
 11387 ;;
 11388                           
 11389                           	psect	text57
 11390  00558E                     __ptext57:
 11391                           	opt callstack 0
 11392  00558E                     _TMR5_SetInterruptHandler:
 11393                           	opt callstack 25
 11394                           
 11395                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 11396                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11397                           
 11398                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11399                           ;incstack = 0
 11400  00558E  50E1               	movf	fsr1l,w,c
 11401  005590  0FFD               	addlw	-3
 11402  005592  6ED9               	movwf	fsr2l,c
 11403  005594  50E2               	movf	fsr1h,w,c
 11404  005596  6EDA               	movwf	fsr2h,c
 11405  005598  0EFF               	movlw	255
 11406  00559A  22DA               	addwfc	fsr2h,f,c
 11407  00559C  006F FF78  F090    	movff	postinc2,_TMR5_InterruptHandler
 11408  0055A2  006F FF78  F091    	movff	postinc2,_TMR5_InterruptHandler+1
 11409  0055A8  006F FF74  F092    	movff	postdec2,_TMR5_InterruptHandler+2
 11410                           
 11411                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11412  0055AE  52E5               	movf	postdec1,f,c
 11413  0055B0  52E5               	movf	postdec1,f,c
 11414  0055B2  52E5               	movf	postdec1,f,c
 11415  0055B4  0012               	return		;funcret
 11416  0055B6                     __end_of_TMR5_SetInterruptHandler:
 11417                           	opt callstack 0
 11418                           
 11419 ;; *************** function _SPI1_Initialize *****************
 11420 ;; Defined at:
 11421 ;;		line 64 in file "mcc_generated_files/spi1.c"
 11422 ;; Parameters:    Size  Location     Type
 11423 ;;		None
 11424 ;; Auto vars:     Size  Location     Type
 11425 ;;		None
 11426 ;; Return value:  Size  Location     Type
 11427 ;;                  1  [STACK] void 
 11428 ;; Registers used:
 11429 ;;		wreg, status,2
 11430 ;; Tracked objects:
 11431 ;;		On entry : 3F/39
 11432 ;;		On exit  : 3F/3D
 11433 ;;		Unchanged: 0/0
 11434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11439 ;;Total ram usage:        0 bytes
 11440 ;; Hardware stack levels used:    1
 11441 ;; Hardware stack levels required when called:    3
 11442 ;; This function calls:
 11443 ;;		Nothing
 11444 ;; This function is called by:
 11445 ;;		_SYSTEM_Initialize
 11446 ;; This function uses a reentrant model
 11447 ;;
 11448                           
 11449                           	psect	text58
 11450  0058E8                     __ptext58:
 11451                           	opt callstack 0
 11452  0058E8                     _SPI1_Initialize:
 11453                           	opt callstack 26
 11454                           
 11455                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 11456                           
 11457                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11458                           ;incstack = 0
 11459  0058E8  0E40               	movlw	64
 11460  0058EA  013D               	movlb	61	; () banked
 11461  0058EC  6F15               	movwf	21,b	;volatile
 11462                           
 11463                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 11464  0058EE  0E03               	movlw	3
 11465  0058F0  6F16               	movwf	22,b	;volatile
 11466                           
 11467                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 11468  0058F2  0E4F               	movlw	79
 11469  0058F4  6F19               	movwf	25,b	;volatile
 11470                           
 11471                           ; BSR set to: 61
 11472                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 11473  0058F6  6B1C               	clrf	28,b	;volatile
 11474                           
 11475                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 11476  0058F8  0E83               	movlw	131
 11477  0058FA  6F14               	movwf	20,b	;volatile
 11478                           
 11479                           ; BSR set to: 61
 11480                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11481  0058FC  0012               	return		;funcret
 11482  0058FE                     __end_of_SPI1_Initialize:
 11483                           	opt callstack 0
 11484                           
 11485 ;; *************** function _PMD_Initialize *****************
 11486 ;; Defined at:
 11487 ;;		line 88 in file "mcc_generated_files/mcc.c"
 11488 ;; Parameters:    Size  Location     Type
 11489 ;;		None
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;		None
 11492 ;; Return value:  Size  Location     Type
 11493 ;;                  1  [STACK] void 
 11494 ;; Registers used:
 11495 ;;		None
 11496 ;; Tracked objects:
 11497 ;;		On entry : 3F/39
 11498 ;;		On exit  : 3F/39
 11499 ;;		Unchanged: 0/0
 11500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11505 ;;Total ram usage:        0 bytes
 11506 ;; Hardware stack levels used:    1
 11507 ;; Hardware stack levels required when called:    3
 11508 ;; This function calls:
 11509 ;;		Nothing
 11510 ;; This function is called by:
 11511 ;;		_SYSTEM_Initialize
 11512 ;; This function uses a reentrant model
 11513 ;;
 11514                           
 11515                           	psect	text59
 11516  005914                     __ptext59:
 11517                           	opt callstack 0
 11518  005914                     _PMD_Initialize:
 11519                           	opt callstack 26
 11520                           
 11521                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 11522                           
 11523                           ; BSR set to: 61
 11524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11525                           ;incstack = 0
 11526  005914  0139               	movlb	57	; () banked
 11527  005916  6BC0               	clrf	192,b	;volatile
 11528                           
 11529                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 11530  005918  6BC1               	clrf	193,b	;volatile
 11531                           
 11532                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 11533  00591A  6BC2               	clrf	194,b	;volatile
 11534                           
 11535                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 11536  00591C  6BC3               	clrf	195,b	;volatile
 11537                           
 11538                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 11539  00591E  6BC4               	clrf	196,b	;volatile
 11540                           
 11541                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 11542  005920  6BC5               	clrf	197,b	;volatile
 11543                           
 11544                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 11545  005922  6BC6               	clrf	198,b	;volatile
 11546                           
 11547                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 11548  005924  6BC7               	clrf	199,b	;volatile
 11549                           
 11550                           ; BSR set to: 57
 11551                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11552  005926  0012               	return		;funcret
 11553  005928                     __end_of_PMD_Initialize:
 11554                           	opt callstack 0
 11555                           
 11556 ;; *************** function _PIN_MANAGER_Initialize *****************
 11557 ;; Defined at:
 11558 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11559 ;; Parameters:    Size  Location     Type
 11560 ;;		None
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;		None
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  1  [STACK] void 
 11565 ;; Registers used:
 11566 ;;		wreg, status,2
 11567 ;; Tracked objects:
 11568 ;;		On entry : 3F/39
 11569 ;;		On exit  : 3F/3A
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11576 ;;Total ram usage:        0 bytes
 11577 ;; Hardware stack levels used:    1
 11578 ;; Hardware stack levels required when called:    3
 11579 ;; This function calls:
 11580 ;;		Nothing
 11581 ;; This function is called by:
 11582 ;;		_SYSTEM_Initialize
 11583 ;; This function uses a reentrant model
 11584 ;;
 11585                           
 11586                           	psect	text60
 11587  0049BA                     __ptext60:
 11588                           	opt callstack 0
 11589  0049BA                     _PIN_MANAGER_Initialize:
 11590                           	opt callstack 26
 11591                           
 11592                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 11593                           
 11594                           ; BSR set to: 57
 11595                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11596                           ;incstack = 0
 11597  0049BA  0E07               	movlw	7
 11598  0049BC  6EBE               	movwf	16318,c	;volatile
 11599                           
 11600                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 11601  0049BE  6ABD               	clrf	16317,c	;volatile
 11602                           
 11603                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 11604  0049C0  6ABA               	clrf	16314,c	;volatile
 11605                           
 11606                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 11607  0049C2  6ABF               	clrf	16319,c	;volatile
 11608                           
 11609                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 11610  0049C4  6ABB               	clrf	16315,c	;volatile
 11611                           
 11612                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 11613  0049C6  0E06               	movlw	6
 11614  0049C8  6EBC               	movwf	16316,c	;volatile
 11615                           
 11616                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 11617  0049CA  6AC6               	clrf	16326,c	;volatile
 11618                           
 11619                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 11620  0049CC  68C7               	setf	16327,c	;volatile
 11621                           
 11622                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 11623  0049CE  0E8F               	movlw	143
 11624  0049D0  6EC2               	movwf	16322,c	;volatile
 11625                           
 11626                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 11627  0049D2  0EBF               	movlw	191
 11628  0049D4  6EC3               	movwf	16323,c	;volatile
 11629                           
 11630                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 11631  0049D6  0E91               	movlw	145
 11632  0049D8  6EC4               	movwf	16324,c	;volatile
 11633                           
 11634                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFC;
 11635  0049DA  0EFC               	movlw	252
 11636  0049DC  6EC5               	movwf	16325,c	;volatile
 11637                           
 11638                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xF0;
 11639  0049DE  0EF0               	movlw	240
 11640  0049E0  013A               	movlb	58	; () banked
 11641  0049E2  6F70               	movwf	112,b	;volatile
 11642                           
 11643                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 11644  0049E4  0E01               	movlw	1
 11645  0049E6  6F60               	movwf	96,b	;volatile
 11646                           
 11647                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 11648  0049E8  0E38               	movlw	56
 11649  0049EA  6F50               	movwf	80,b	;volatile
 11650                           
 11651                           ; BSR set to: 58
 11652                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 11653  0049EC  6B80               	clrf	128,b	;volatile
 11654                           
 11655                           ; BSR set to: 58
 11656                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 11657  0049EE  6990               	setf	144,b	;volatile
 11658                           
 11659                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 11660  0049F0  0E8F               	movlw	143
 11661  0049F2  6F40               	movwf	64,b	;volatile
 11662                           
 11663                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 11664  0049F4  0E0C               	movlw	12
 11665  0049F6  6F71               	movwf	113,b	;volatile
 11666                           
 11667                           ; BSR set to: 58
 11668                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 11669  0049F8  6B91               	clrf	145,b	;volatile
 11670                           
 11671                           ; BSR set to: 58
 11672                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 11673  0049FA  6B81               	clrf	129,b	;volatile
 11674                           
 11675                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 11676  0049FC  0E87               	movlw	135
 11677  0049FE  6F51               	movwf	81,b	;volatile
 11678                           
 11679                           ; BSR set to: 58
 11680                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 11681  004A00  6B41               	clrf	65,b	;volatile
 11682                           
 11683                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 11684  004A02  0E90               	movlw	144
 11685  004A04  6F61               	movwf	97,b	;volatile
 11686                           
 11687                           ; BSR set to: 58
 11688                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 11689  004A06  6B82               	clrf	130,b	;volatile
 11690                           
 11691                           ; BSR set to: 58
 11692                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 11693  004A08  6B92               	clrf	146,b	;volatile
 11694                           
 11695                           ; BSR set to: 58
 11696                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 11697  004A0A  6B42               	clrf	66,b	;volatile
 11698                           
 11699                           ; BSR set to: 58
 11700                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 11701  004A0C  6B52               	clrf	82,b	;volatile
 11702                           
 11703                           ; BSR set to: 58
 11704                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 11705  004A0E  6B62               	clrf	98,b	;volatile
 11706                           
 11707                           ; BSR set to: 58
 11708                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 11709  004A10  6B72               	clrf	114,b	;volatile
 11710                           
 11711                           ; BSR set to: 58
 11712                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 11713  004A12  6943               	setf	67,b	;volatile
 11714                           
 11715                           ; BSR set to: 58
 11716                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 11717  004A14  6953               	setf	83,b	;volatile
 11718                           
 11719                           ; BSR set to: 58
 11720                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 11721  004A16  6963               	setf	99,b	;volatile
 11722                           
 11723                           ; BSR set to: 58
 11724                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 11725  004A18  6973               	setf	115,b	;volatile
 11726                           
 11727                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 11728  004A1A  0E07               	movlw	7
 11729  004A1C  6F83               	movwf	131,b	;volatile
 11730                           
 11731                           ; BSR set to: 58
 11732                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 11733  004A1E  6993               	setf	147,b	;volatile
 11734                           
 11735                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 11736  004A20  0E0F               	movlw	15
 11737  004A22  6FE8               	movwf	232,b	;volatile
 11738                           
 11739                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 11740  004A24  0E16               	movlw	22
 11741  004A26  6F0E               	movwf	14,b	;volatile
 11742                           
 11743                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 11744  004A28  0E1E               	movlw	30
 11745  004A2A  6F13               	movwf	19,b	;volatile
 11746                           
 11747                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 11748  004A2C  0E08               	movlw	8
 11749  004A2E  6FC0               	movwf	192,b	;volatile
 11750                           
 11751                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 11752  004A30  0E0A               	movlw	10
 11753  004A32  6FC2               	movwf	194,b	;volatile
 11754                           
 11755                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 11756  004A34  0E09               	movlw	9
 11757  004A36  6FC1               	movwf	193,b	;volatile
 11758                           
 11759                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 11760  004A38  0E17               	movlw	23
 11761  004A3A  6FE5               	movwf	229,b	;volatile
 11762                           
 11763                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 11764  004A3C  0E13               	movlw	19
 11765  004A3E  6FDE               	movwf	222,b	;volatile
 11766                           
 11767                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 11768  004A40  0E01               	movlw	1
 11769  004A42  6F04               	movwf	4,b	;volatile
 11770                           
 11771                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 11772  004A44  0E26               	movlw	38
 11773  004A46  6F05               	movwf	5,b	;volatile
 11774                           
 11775                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 11776  004A48  0E28               	movlw	40
 11777  004A4A  6F06               	movwf	6,b	;volatile
 11778                           
 11779                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 11780  004A4C  0E1F               	movlw	31
 11781  004A4E  6F15               	movwf	21,b	;volatile
 11782                           
 11783                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 11784  004A50  0E13               	movlw	19
 11785  004A52  6F16               	movwf	22,b	;volatile
 11786                           
 11787                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 11788  004A54  0E14               	movlw	20
 11789  004A56  6FDF               	movwf	223,b	;volatile
 11790                           
 11791                           ; BSR set to: 58
 11792                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 11793  004A58  0012               	return		;funcret
 11794  004A5A                     __end_of_PIN_MANAGER_Initialize:
 11795                           	opt callstack 0
 11796                           
 11797 ;; *************** function _OSCILLATOR_Initialize *****************
 11798 ;; Defined at:
 11799 ;;		line 70 in file "mcc_generated_files/mcc.c"
 11800 ;; Parameters:    Size  Location     Type
 11801 ;;		None
 11802 ;; Auto vars:     Size  Location     Type
 11803 ;;		None
 11804 ;; Return value:  Size  Location     Type
 11805 ;;                  1  [STACK] void 
 11806 ;; Registers used:
 11807 ;;		wreg, status,2
 11808 ;; Tracked objects:
 11809 ;;		On entry : 3F/3A
 11810 ;;		On exit  : 3F/39
 11811 ;;		Unchanged: 0/0
 11812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11817 ;;Total ram usage:        0 bytes
 11818 ;; Hardware stack levels used:    1
 11819 ;; Hardware stack levels required when called:    3
 11820 ;; This function calls:
 11821 ;;		Nothing
 11822 ;; This function is called by:
 11823 ;;		_SYSTEM_Initialize
 11824 ;; This function uses a reentrant model
 11825 ;;
 11826                           
 11827                           	psect	text61
 11828  0058FE                     __ptext61:
 11829                           	opt callstack 0
 11830  0058FE                     _OSCILLATOR_Initialize:
 11831                           	opt callstack 26
 11832                           
 11833                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 11834                           
 11835                           ; BSR set to: 58
 11836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11837                           ;incstack = 0
 11838  0058FE  0E20               	movlw	32
 11839  005900  0139               	movlb	57	; () banked
 11840  005902  6FD9               	movwf	217,b	;volatile
 11841                           
 11842                           ; BSR set to: 57
 11843                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 11844  005904  6BDB               	clrf	219,b	;volatile
 11845                           
 11846                           ; BSR set to: 57
 11847                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 11848  005906  6BDD               	clrf	221,b	;volatile
 11849                           
 11850                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 11851  005908  0E02               	movlw	2
 11852  00590A  6FDF               	movwf	223,b	;volatile
 11853                           
 11854                           ; BSR set to: 57
 11855                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 11856  00590C  6BDE               	clrf	222,b	;volatile
 11857  00590E                     l194:
 11858                           
 11859                           ; BSR set to: 57
 11860                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 11861  00590E  B1DC               	btfsc	220,0,b	;volatile
 11862  005910  0012               	return	
 11863  005912  D7FD               	goto	l194
 11864  005914                     __end_of_OSCILLATOR_Initialize:
 11865                           	opt callstack 0
 11866                           
 11867 ;; *************** function _NCO1_Initialize *****************
 11868 ;; Defined at:
 11869 ;;		line 58 in file "mcc_generated_files/nco1.c"
 11870 ;; Parameters:    Size  Location     Type
 11871 ;;		None
 11872 ;; Auto vars:     Size  Location     Type
 11873 ;;		None
 11874 ;; Return value:  Size  Location     Type
 11875 ;;                  1  [STACK] void 
 11876 ;; Registers used:
 11877 ;;		wreg, status,2
 11878 ;; Tracked objects:
 11879 ;;		On entry : 0/39
 11880 ;;		On exit  : 3F/3F
 11881 ;;		Unchanged: 0/0
 11882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11887 ;;Total ram usage:        0 bytes
 11888 ;; Hardware stack levels used:    1
 11889 ;; Hardware stack levels required when called:    3
 11890 ;; This function calls:
 11891 ;;		Nothing
 11892 ;; This function is called by:
 11893 ;;		_SYSTEM_Initialize
 11894 ;; This function uses a reentrant model
 11895 ;;
 11896                           
 11897                           	psect	text62
 11898  005860                     __ptext62:
 11899                           	opt callstack 0
 11900  005860                     _NCO1_Initialize:
 11901                           	opt callstack 26
 11902                           
 11903                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 11904                           
 11905                           ; BSR set to: 57
 11906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11907                           ;incstack = 0
 11908  005860  013F               	movlb	63	; () banked
 11909  005862  6B3E               	clrf	62,b	;volatile
 11910                           
 11911                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 11912  005864  6B3F               	clrf	63,b	;volatile
 11913                           
 11914                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 11915  005866  6B3A               	clrf	58,b	;volatile
 11916                           
 11917                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 11918  005868  6B39               	clrf	57,b	;volatile
 11919                           
 11920                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 11921  00586A  6B38               	clrf	56,b	;volatile
 11922                           
 11923                           ; BSR set to: 63
 11924                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 11925  00586C  0E06               	movlw	6
 11926  00586E  6F3D               	movwf	61,b	;volatile
 11927                           
 11928                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 11929  005870  0EC7               	movlw	199
 11930  005872  6F3C               	movwf	60,b	;volatile
 11931                           
 11932                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 11933  005874  0EAE               	movlw	174
 11934  005876  6F3B               	movwf	59,b	;volatile
 11935                           
 11936                           ; BSR set to: 63
 11937                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 11938  005878  8F3E               	bsf	62,7,b	;volatile
 11939                           
 11940                           ; BSR set to: 63
 11941                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11942  00587A  0012               	return		;funcret
 11943  00587C                     __end_of_NCO1_Initialize:
 11944                           	opt callstack 0
 11945                           
 11946 ;; *************** function _INTERRUPT_Initialize *****************
 11947 ;; Defined at:
 11948 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11949 ;; Parameters:    Size  Location     Type
 11950 ;;		None
 11951 ;; Auto vars:     Size  Location     Type
 11952 ;;  state           1  [STACK] _Bool 
 11953 ;; Return value:  Size  Location     Type
 11954 ;;                  1  [STACK] void 
 11955 ;; Registers used:
 11956 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 11957 ;; Tracked objects:
 11958 ;;		On entry : 0/0
 11959 ;;		On exit  : 3F/39
 11960 ;;		Unchanged: 0/0
 11961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11966 ;;Total ram usage:        0 bytes
 11967 ;; Hardware stack levels used:    1
 11968 ;; Hardware stack levels required when called:    3
 11969 ;; This function calls:
 11970 ;;		Nothing
 11971 ;; This function is called by:
 11972 ;;		_SYSTEM_Initialize
 11973 ;; This function uses a reentrant model
 11974 ;;
 11975                           
 11976                           	psect	text63
 11977  004DAA                     __ptext63:
 11978                           	opt callstack 0
 11979  004DAA                     _INTERRUPT_Initialize:
 11980                           	opt callstack 0
 11981                           
 11982                           ; BSR set to: 63
 11983                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11984  004DAA  52E6               	movf	postinc1,f,c
 11985                           
 11986                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 11987                           
 11988                           ;incstack = 0
 11989  004DAC  8AD2               	bsf	16338,5,c	;volatile
 11990                           
 11991                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 11992  004DAE  AED2               	btfss	16338,7,c	;volatile
 11993  004DB0  D003               	goto	u940
 11994  004DB2  6A47               	clrf	btemp+11,c
 11995  004DB4  2A47               	incf	btemp+11,f,c
 11996  004DB6  D001               	goto	u958
 11997  004DB8                     u940:
 11998  004DB8  6A47               	clrf	btemp+11,c
 11999  004DBA                     u958:
 12000                           
 12001                           ;stkvar	_state @ sp[(-1)+0]
 12002  004DBA  0EFF               	movlw	-1
 12003  004DBC  0060  F11F  FFE3   	movff	btemp+11,plusw1
 12004                           
 12005                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 12006  004DC2  9ED2               	bcf	16338,7,c	;volatile
 12007                           
 12008                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 12009  004DC4  0E55               	movlw	85
 12010  004DC6  6ED4               	movwf	16340,c	;volatile
 12011                           
 12012                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 12013  004DC8  0EAA               	movlw	170
 12014  004DCA  6ED4               	movwf	16340,c	;volatile
 12015                           
 12016                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 12017  004DCC  90D4               	bcf	16340,0,c	;volatile
 12018                           
 12019                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 12020  004DCE  0138               	movlb	56	; () banked
 12021  004DD0  6B9F               	clrf	159,b	;volatile
 12022                           
 12023                           ; BSR set to: 56
 12024                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 12025  004DD2  6B9E               	clrf	158,b	;volatile
 12026                           
 12027                           ; BSR set to: 56
 12028                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 12029  004DD4  0E08               	movlw	8
 12030  004DD6  6F9D               	movwf	157,b	;volatile
 12031                           
 12032                           ; BSR set to: 56
 12033                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 12034  004DD8  0E55               	movlw	85
 12035  004DDA  6ED4               	movwf	16340,c	;volatile
 12036                           
 12037                           ; BSR set to: 56
 12038                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 12039  004DDC  0EAA               	movlw	170
 12040  004DDE  6ED4               	movwf	16340,c	;volatile
 12041                           
 12042                           ; BSR set to: 56
 12043                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 12044  004DE0  80D4               	bsf	16340,0,c	;volatile
 12045                           
 12046                           ; BSR set to: 56
 12047                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 12048                           ;stkvar	_state @ sp[(-1)+0]
 12049  004DE2  0EFF               	movlw	-1
 12050  004DE4  B0E3               	btfsc	plusw1,0,c
 12051  004DE6  D002               	bra	u965
 12052  004DE8  9ED2               	bcf	16338,7,c	;volatile
 12053  004DEA  D001               	bra	u966
 12054  004DEC                     u965:
 12055  004DEC  8ED2               	bsf	16338,7,c	;volatile
 12056  004DEE                     u966:
 12057                           
 12058                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 12059  004DEE  0139               	movlb	57	; () banked
 12060  004DF0  8782               	bsf	130,3,b	;volatile
 12061                           
 12062                           ; BSR set to: 57
 12063                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 12064  004DF2  8382               	bsf	130,1,b	;volatile
 12065                           
 12066                           ; BSR set to: 57
 12067                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 12068  004DF4  8182               	bsf	130,0,b	;volatile
 12069                           
 12070                           ; BSR set to: 57
 12071                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 12072  004DF6  8582               	bsf	130,2,b	;volatile
 12073                           
 12074                           ; BSR set to: 57
 12075                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 12076  004DF8  8786               	bsf	134,3,b	;volatile
 12077                           
 12078                           ; BSR set to: 57
 12079                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 12080  004DFA  8586               	bsf	134,2,b	;volatile
 12081                           
 12082                           ; BSR set to: 57
 12083                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 12084  004DFC  8983               	bsf	131,4,b	;volatile
 12085                           
 12086                           ; BSR set to: 57
 12087                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 12088  004DFE  8783               	bsf	131,3,b	;volatile
 12089                           
 12090                           ; BSR set to: 57
 12091                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 12092  004E00  8181               	bsf	129,0,b	;volatile
 12093                           
 12094                           ; BSR set to: 57
 12095                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 12096  004E02  8185               	bsf	133,0,b	;volatile
 12097                           
 12098                           ; BSR set to: 57
 12099                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 12100  004E04  8B87               	bsf	135,5,b	;volatile
 12101                           
 12102                           ; BSR set to: 57
 12103                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 12104  004E06  8189               	bsf	137,0,b	;volatile
 12105                           
 12106                           ; BSR set to: 57
 12107                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 12108  004E08  8D88               	bsf	136,6,b	;volatile
 12109                           
 12110                           ; BSR set to: 57
 12111                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 12112  004E0A  8581               	bsf	129,2,b	;volatile
 12113                           
 12114                           ; BSR set to: 57
 12115                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 12116  004E0C  52E5               	movf	postdec1,f,c
 12117  004E0E  0012               	return		;funcret
 12118  004E10                     __end_of_INTERRUPT_Initialize:
 12119                           	opt callstack 0
 12120                           
 12121 ;; *************** function _EXT_INT_Initialize *****************
 12122 ;; Defined at:
 12123 ;;		line 114 in file "mcc_generated_files/ext_int.c"
 12124 ;; Parameters:    Size  Location     Type
 12125 ;;		None
 12126 ;; Auto vars:     Size  Location     Type
 12127 ;;		None
 12128 ;; Return value:  Size  Location     Type
 12129 ;;                  1  [STACK] void 
 12130 ;; Registers used:
 12131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12132 ;; Tracked objects:
 12133 ;;		On entry : 3F/3F
 12134 ;;		On exit  : 3F/39
 12135 ;;		Unchanged: 0/0
 12136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12141 ;;Total ram usage:        0 bytes
 12142 ;; Hardware stack levels used:    1
 12143 ;; Hardware stack levels required when called:    4
 12144 ;; This function calls:
 12145 ;;		_INT0_SetInterruptHandler
 12146 ;;		_INT1_SetInterruptHandler
 12147 ;;		_INT2_SetInterruptHandler
 12148 ;; This function is called by:
 12149 ;;		_SYSTEM_Initialize
 12150 ;; This function uses a reentrant model
 12151 ;;
 12152                           
 12153                           	psect	text64
 12154  004FDE                     __ptext64:
 12155                           	opt callstack 0
 12156  004FDE                     _EXT_INT_Initialize:
 12157                           	opt callstack 25
 12158                           
 12159                           ;mcc_generated_files/ext_int.c: 119:     (PIR1bits.INT0IF = 0);
 12160                           
 12161                           ; BSR set to: 57
 12162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12163                           ;incstack = 0
 12164  004FDE  0139               	movlb	57	; () banked
 12165  004FE0  91A1               	bcf	161,0,b	;volatile
 12166                           
 12167                           ;mcc_generated_files/ext_int.c: 120:     (INTCON0bits.INT0EDG = 0);
 12168  004FE2  90D2               	bcf	16338,0,c	;volatile
 12169                           
 12170                           ; BSR set to: 57
 12171                           ;mcc_generated_files/ext_int.c: 122:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
 12172  004FE4  0ECE               	movlw	low _INT0_DefaultInterruptHandler
 12173  004FE6  6EE6               	movwf	postinc1,c
 12174  004FE8  0E59               	movlw	high _INT0_DefaultInterruptHandler
 12175  004FEA  6EE6               	movwf	postinc1,c
 12176  004FEC  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 12177  004FEE  6EE6               	movwf	postinc1,c
 12178  004FF0  EC03  F02B         	call	_INT0_SetInterruptHandler	;wreg free
 12179                           
 12180                           ;mcc_generated_files/ext_int.c: 123:     (PIE1bits.INT0IE = 1);
 12181  004FF4  0139               	movlb	57	; () banked
 12182  004FF6  8191               	bsf	145,0,b	;volatile
 12183                           
 12184                           ; BSR set to: 57
 12185                           ;mcc_generated_files/ext_int.c: 128:     (PIR5bits.INT1IF = 0);
 12186  004FF8  91A5               	bcf	165,0,b	;volatile
 12187                           
 12188                           ; BSR set to: 57
 12189                           ;mcc_generated_files/ext_int.c: 129:     (INTCON0bits.INT1EDG = 0);
 12190  004FFA  92D2               	bcf	16338,1,c	;volatile
 12191                           
 12192                           ;mcc_generated_files/ext_int.c: 131:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
 12193  004FFC  0ED0               	movlw	low _INT1_DefaultInterruptHandler
 12194  004FFE  6EE6               	movwf	postinc1,c
 12195  005000  0E59               	movlw	high _INT1_DefaultInterruptHandler
 12196  005002  6EE6               	movwf	postinc1,c
 12197  005004  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 12198  005006  6EE6               	movwf	postinc1,c
 12199  005008  ECEF  F02A         	call	_INT1_SetInterruptHandler	;wreg free
 12200                           
 12201                           ;mcc_generated_files/ext_int.c: 132:     (PIE5bits.INT1IE = 1);
 12202  00500C  0139               	movlb	57	; () banked
 12203  00500E  8195               	bsf	149,0,b	;volatile
 12204                           
 12205                           ; BSR set to: 57
 12206                           ;mcc_generated_files/ext_int.c: 137:     (PIR7bits.INT2IF = 0);
 12207  005010  9BA7               	bcf	167,5,b	;volatile
 12208                           
 12209                           ; BSR set to: 57
 12210                           ;mcc_generated_files/ext_int.c: 138:     (INTCON0bits.INT2EDG = 0);
 12211  005012  94D2               	bcf	16338,2,c	;volatile
 12212                           
 12213                           ;mcc_generated_files/ext_int.c: 140:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
 12214  005014  0ED2               	movlw	low _INT2_DefaultInterruptHandler
 12215  005016  6EE6               	movwf	postinc1,c
 12216  005018  0E59               	movlw	high _INT2_DefaultInterruptHandler
 12217  00501A  6EE6               	movwf	postinc1,c
 12218  00501C  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 12219  00501E  6EE6               	movwf	postinc1,c
 12220  005020  ECDB  F02A         	call	_INT2_SetInterruptHandler	;wreg free
 12221                           
 12222                           ;mcc_generated_files/ext_int.c: 141:     (PIE7bits.INT2IE = 1);
 12223  005024  0139               	movlb	57	; () banked
 12224  005026  8B97               	bsf	151,5,b	;volatile
 12225                           
 12226                           ; BSR set to: 57
 12227                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 12228  005028  0012               	return		;funcret
 12229  00502A                     __end_of_EXT_INT_Initialize:
 12230                           	opt callstack 0
 12231                           
 12232 ;; *************** function _INT2_SetInterruptHandler *****************
 12233 ;; Defined at:
 12234 ;;		line 105 in file "mcc_generated_files/ext_int.c"
 12235 ;; Parameters:    Size  Location     Type
 12236 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12237 ;;		 -> INT2_DefaultInterruptHandler(1), 
 12238 ;; Auto vars:     Size  Location     Type
 12239 ;;		None
 12240 ;; Return value:  Size  Location     Type
 12241 ;;                  1  [STACK] void 
 12242 ;; Registers used:
 12243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12244 ;; Tracked objects:
 12245 ;;		On entry : 3F/39
 12246 ;;		On exit  : 0/0
 12247 ;;		Unchanged: 0/0
 12248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12253 ;;Total ram usage:        0 bytes
 12254 ;; Hardware stack levels used:    1
 12255 ;; Hardware stack levels required when called:    3
 12256 ;; This function calls:
 12257 ;;		Nothing
 12258 ;; This function is called by:
 12259 ;;		_EXT_INT_Initialize
 12260 ;; This function uses a reentrant model
 12261 ;;
 12262                           
 12263                           	psect	text65
 12264  0055B6                     __ptext65:
 12265                           	opt callstack 0
 12266  0055B6                     _INT2_SetInterruptHandler:
 12267                           	opt callstack 25
 12268                           
 12269                           ;mcc_generated_files/ext_int.c: 106:     INT2_InterruptHandler = InterruptHandler;
 12270                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12271                           
 12272                           ; BSR set to: 57
 12273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12274                           ;incstack = 0
 12275  0055B6  50E1               	movf	fsr1l,w,c
 12276  0055B8  0FFD               	addlw	-3
 12277  0055BA  6ED9               	movwf	fsr2l,c
 12278  0055BC  50E2               	movf	fsr1h,w,c
 12279  0055BE  6EDA               	movwf	fsr2h,c
 12280  0055C0  0EFF               	movlw	255
 12281  0055C2  22DA               	addwfc	fsr2h,f,c
 12282  0055C4  006F FF78  F01A    	movff	postinc2,_INT2_InterruptHandler
 12283  0055CA  006F FF78  F01B    	movff	postinc2,_INT2_InterruptHandler+1
 12284  0055D0  006F FF74  F01C    	movff	postdec2,_INT2_InterruptHandler+2
 12285                           
 12286                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12287  0055D6  52E5               	movf	postdec1,f,c
 12288  0055D8  52E5               	movf	postdec1,f,c
 12289  0055DA  52E5               	movf	postdec1,f,c
 12290  0055DC  0012               	return		;funcret
 12291  0055DE                     __end_of_INT2_SetInterruptHandler:
 12292                           	opt callstack 0
 12293                           
 12294 ;; *************** function _INT1_SetInterruptHandler *****************
 12295 ;; Defined at:
 12296 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 12297 ;; Parameters:    Size  Location     Type
 12298 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12299 ;;		 -> INT1_DefaultInterruptHandler(1), 
 12300 ;; Auto vars:     Size  Location     Type
 12301 ;;		None
 12302 ;; Return value:  Size  Location     Type
 12303 ;;                  1  [STACK] void 
 12304 ;; Registers used:
 12305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12306 ;; Tracked objects:
 12307 ;;		On entry : 3F/39
 12308 ;;		On exit  : 0/0
 12309 ;;		Unchanged: 0/0
 12310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12315 ;;Total ram usage:        0 bytes
 12316 ;; Hardware stack levels used:    1
 12317 ;; Hardware stack levels required when called:    3
 12318 ;; This function calls:
 12319 ;;		Nothing
 12320 ;; This function is called by:
 12321 ;;		_EXT_INT_Initialize
 12322 ;; This function uses a reentrant model
 12323 ;;
 12324                           
 12325                           	psect	text66
 12326  0055DE                     __ptext66:
 12327                           	opt callstack 0
 12328  0055DE                     _INT1_SetInterruptHandler:
 12329                           	opt callstack 25
 12330                           
 12331                           ;mcc_generated_files/ext_int.c: 80:     INT1_InterruptHandler = InterruptHandler;
 12332                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12333                           
 12334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12335                           ;incstack = 0
 12336  0055DE  50E1               	movf	fsr1l,w,c
 12337  0055E0  0FFD               	addlw	-3
 12338  0055E2  6ED9               	movwf	fsr2l,c
 12339  0055E4  50E2               	movf	fsr1h,w,c
 12340  0055E6  6EDA               	movwf	fsr2h,c
 12341  0055E8  0EFF               	movlw	255
 12342  0055EA  22DA               	addwfc	fsr2h,f,c
 12343  0055EC  006F FF78  F01D    	movff	postinc2,_INT1_InterruptHandler
 12344  0055F2  006F FF78  F01E    	movff	postinc2,_INT1_InterruptHandler+1
 12345  0055F8  006F FF74  F01F    	movff	postdec2,_INT1_InterruptHandler+2
 12346                           
 12347                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12348  0055FE  52E5               	movf	postdec1,f,c
 12349  005600  52E5               	movf	postdec1,f,c
 12350  005602  52E5               	movf	postdec1,f,c
 12351  005604  0012               	return		;funcret
 12352  005606                     __end_of_INT1_SetInterruptHandler:
 12353                           	opt callstack 0
 12354                           
 12355 ;; *************** function _INT0_SetInterruptHandler *****************
 12356 ;; Defined at:
 12357 ;;		line 53 in file "mcc_generated_files/ext_int.c"
 12358 ;; Parameters:    Size  Location     Type
 12359 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12360 ;;		 -> INT0_DefaultInterruptHandler(1), 
 12361 ;; Auto vars:     Size  Location     Type
 12362 ;;		None
 12363 ;; Return value:  Size  Location     Type
 12364 ;;                  1  [STACK] void 
 12365 ;; Registers used:
 12366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12367 ;; Tracked objects:
 12368 ;;		On entry : 3F/39
 12369 ;;		On exit  : 0/0
 12370 ;;		Unchanged: 0/0
 12371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12376 ;;Total ram usage:        0 bytes
 12377 ;; Hardware stack levels used:    1
 12378 ;; Hardware stack levels required when called:    3
 12379 ;; This function calls:
 12380 ;;		Nothing
 12381 ;; This function is called by:
 12382 ;;		_EXT_INT_Initialize
 12383 ;; This function uses a reentrant model
 12384 ;;
 12385                           
 12386                           	psect	text67
 12387  005606                     __ptext67:
 12388                           	opt callstack 0
 12389  005606                     _INT0_SetInterruptHandler:
 12390                           	opt callstack 25
 12391                           
 12392                           ;mcc_generated_files/ext_int.c: 54:     INT0_InterruptHandler = InterruptHandler;
 12393                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12394                           
 12395                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12396                           ;incstack = 0
 12397  005606  50E1               	movf	fsr1l,w,c
 12398  005608  0FFD               	addlw	-3
 12399  00560A  6ED9               	movwf	fsr2l,c
 12400  00560C  50E2               	movf	fsr1h,w,c
 12401  00560E  6EDA               	movwf	fsr2h,c
 12402  005610  0EFF               	movlw	255
 12403  005612  22DA               	addwfc	fsr2h,f,c
 12404  005614  006F FF78  F020    	movff	postinc2,_INT0_InterruptHandler
 12405  00561A  006F FF78  F021    	movff	postinc2,_INT0_InterruptHandler+1
 12406  005620  006F FF74  F022    	movff	postdec2,_INT0_InterruptHandler+2
 12407                           
 12408                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12409  005626  52E5               	movf	postdec1,f,c
 12410  005628  52E5               	movf	postdec1,f,c
 12411  00562A  52E5               	movf	postdec1,f,c
 12412  00562C  0012               	return		;funcret
 12413  00562E                     __end_of_INT0_SetInterruptHandler:
 12414                           	opt callstack 0
 12415                           
 12416 ;; *************** function _DSM_Initialize *****************
 12417 ;; Defined at:
 12418 ;;		line 58 in file "mcc_generated_files/dsm.c"
 12419 ;; Parameters:    Size  Location     Type
 12420 ;;		None
 12421 ;; Auto vars:     Size  Location     Type
 12422 ;;		None
 12423 ;; Return value:  Size  Location     Type
 12424 ;;                  1  [STACK] void 
 12425 ;; Registers used:
 12426 ;;		wreg, status,2
 12427 ;; Tracked objects:
 12428 ;;		On entry : 0/3C
 12429 ;;		On exit  : 3F/3C
 12430 ;;		Unchanged: 0/0
 12431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12436 ;;Total ram usage:        0 bytes
 12437 ;; Hardware stack levels used:    1
 12438 ;; Hardware stack levels required when called:    3
 12439 ;; This function calls:
 12440 ;;		Nothing
 12441 ;; This function is called by:
 12442 ;;		_SYSTEM_Initialize
 12443 ;; This function uses a reentrant model
 12444 ;;
 12445                           
 12446                           	psect	text68
 12447  00587C                     __ptext68:
 12448                           	opt callstack 0
 12449  00587C                     _DSM_Initialize:
 12450                           	opt callstack 26
 12451                           
 12452                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 12453                           
 12454                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12455                           ;incstack = 0
 12456  00587C  013C               	movlb	60	; () banked
 12457  00587E  99FA               	bcf	250,4,b	;volatile
 12458                           
 12459                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 12460  005880  81FB               	bsf	251,0,b	;volatile
 12461                           
 12462                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 12463  005882  93FB               	bcf	251,1,b	;volatile
 12464                           
 12465                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 12466  005884  89FB               	bsf	251,4,b	;volatile
 12467                           
 12468                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 12469  005886  9BFB               	bcf	251,5,b	;volatile
 12470                           
 12471                           ; BSR set to: 60
 12472                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 12473  005888  0E13               	movlw	19
 12474  00588A  6FFC               	movwf	252,b	;volatile
 12475                           
 12476                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 12477  00588C  0E0E               	movlw	14
 12478  00588E  6FFE               	movwf	254,b	;volatile
 12479                           
 12480                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 12481  005890  0E04               	movlw	4
 12482  005892  6FFD               	movwf	253,b	;volatile
 12483                           
 12484                           ; BSR set to: 60
 12485                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 12486  005894  8FFA               	bsf	250,7,b	;volatile
 12487                           
 12488                           ; BSR set to: 60
 12489                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12490  005896  0012               	return		;funcret
 12491  005898                     __end_of_DSM_Initialize:
 12492                           	opt callstack 0
 12493                           
 12494 ;; *************** function _DMA1_Initialize *****************
 12495 ;; Defined at:
 12496 ;;		line 86 in file "mcc_generated_files/dma1.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;		None
 12499 ;; Auto vars:     Size  Location     Type
 12500 ;;		None
 12501 ;; Return value:  Size  Location     Type
 12502 ;;                  1  [STACK] void 
 12503 ;; Registers used:
 12504 ;;		wreg, status,2
 12505 ;; Tracked objects:
 12506 ;;		On entry : 3F/3D
 12507 ;;		On exit  : 3F/3B
 12508 ;;		Unchanged: 0/0
 12509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12514 ;;Total ram usage:        0 bytes
 12515 ;; Hardware stack levels used:    1
 12516 ;; Hardware stack levels required when called:    3
 12517 ;; This function calls:
 12518 ;;		Nothing
 12519 ;; This function is called by:
 12520 ;;		_SYSTEM_Initialize
 12521 ;; This function uses a reentrant model
 12522 ;;
 12523                           
 12524                           	psect	text69
 12525  004D40                     __ptext69:
 12526                           	opt callstack 0
 12527  004D40                     _DMA1_Initialize:
 12528                           	opt callstack 26
 12529                           
 12530                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 12531                           
 12532                           ; BSR set to: 60
 12533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12534                           ;incstack = 0
 12535  004D40  0E00               	movlw	0
 12536  004D42  013B               	movlb	59	; () banked
 12537  004D44  6FF9               	movwf	249,b	;volatile
 12538  004D46  0E10               	movlw	16
 12539  004D48  6FFA               	movwf	250,b	;volatile
 12540  004D4A  0E00               	movlw	0
 12541  004D4C  6FFB               	movwf	251,b	;volatile
 12542                           
 12543                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 12544  004D4E  0E3D               	movlw	61
 12545  004D50  6FF1               	movwf	241,b	;volatile
 12546  004D52  0E11               	movlw	17
 12547  004D54  6FF0               	movwf	240,b	;volatile
 12548                           
 12549                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 12550  004D56  0E03               	movlw	3
 12551  004D58  6FFD               	movwf	253,b	;volatile
 12552                           
 12553                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 12554  004D5A  0E00               	movlw	0
 12555  004D5C  6FF8               	movwf	248,b	;volatile
 12556  004D5E  0E01               	movlw	1
 12557  004D60  6FF7               	movwf	247,b	;volatile
 12558                           
 12559                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 12560  004D62  0E00               	movlw	0
 12561  004D64  6FEF               	movwf	239,b	;volatile
 12562  004D66  0E01               	movlw	1
 12563  004D68  6FEE               	movwf	238,b	;volatile
 12564                           
 12565                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 12566  004D6A  0E15               	movlw	21
 12567  004D6C  6FFF               	movwf	255,b	;volatile
 12568                           
 12569                           ; BSR set to: 59
 12570                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 12571  004D6E  6BFE               	clrf	254,b	;volatile
 12572                           
 12573                           ; BSR set to: 59
 12574                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 12575  004D70  0139               	movlb	57	; () banked
 12576  004D72  93A2               	bcf	162,1,b	;volatile
 12577                           
 12578                           ; BSR set to: 57
 12579                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 12580  004D74  91A2               	bcf	162,0,b	;volatile
 12581                           
 12582                           ; BSR set to: 57
 12583                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 12584  004D76  97A2               	bcf	162,3,b	;volatile
 12585                           
 12586                           ; BSR set to: 57
 12587                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 12588  004D78  95A2               	bcf	162,2,b	;volatile
 12589                           
 12590                           ; BSR set to: 57
 12591                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 12592  004D7A  8392               	bsf	146,1,b	;volatile
 12593                           
 12594                           ; BSR set to: 57
 12595                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 12596  004D7C  8192               	bsf	146,0,b	;volatile
 12597                           
 12598                           ; BSR set to: 57
 12599                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 12600  004D7E  8792               	bsf	146,3,b	;volatile
 12601                           
 12602                           ; BSR set to: 57
 12603                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 12604  004D80  8592               	bsf	146,2,b	;volatile
 12605                           
 12606                           ; BSR set to: 57
 12607                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 12608  004D82  6BF1               	clrf	241,b	;volatile
 12609                           
 12610                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 12611  004D84  0E01               	movlw	1
 12612  004D86  6FF2               	movwf	242,b	;volatile
 12613                           
 12614                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 12615  004D88  0E04               	movlw	4
 12616  004D8A  6FF3               	movwf	243,b	;volatile
 12617                           
 12618                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 12619  004D8C  0E02               	movlw	2
 12620  004D8E  6FF4               	movwf	244,b	;volatile
 12621                           
 12622                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 12623  004D90  0E03               	movlw	3
 12624  004D92  6FF7               	movwf	247,b	;volatile
 12625  004D94  9ED2               	bcf	16338,7,c	;# 
 12626  004D96  0139               	banksel	14831	;# 
 12627  004D98  0E55               	movlw	85	;# 
 12628  004D9A  6FEF               	movwf	14831,b	;# 
 12629  004D9C  0EAA               	movlw	170	;# 
 12630  004D9E  6FEF               	movwf	14831,b	;# 
 12631  004DA0  81EF               	bsf	14831,0,b	;# 
 12632  004DA2  8ED2               	bsf	16338,7,c	;# 
 12633                           
 12634                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 12635  004DA4  013B               	movlb	59	; () banked
 12636  004DA6  6BFC               	clrf	252,b	;volatile
 12637                           
 12638                           ; BSR set to: 59
 12639                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12640  004DA8  0012               	return		;funcret
 12641  004DAA                     __end_of_DMA1_Initialize:
 12642                           	opt callstack 0
 12643                           
 12644 ;; *************** function _CLKREF_Initialize *****************
 12645 ;; Defined at:
 12646 ;;		line 58 in file "mcc_generated_files/clkref.c"
 12647 ;; Parameters:    Size  Location     Type
 12648 ;;		None
 12649 ;; Auto vars:     Size  Location     Type
 12650 ;;		None
 12651 ;; Return value:  Size  Location     Type
 12652 ;;                  1  [STACK] void 
 12653 ;; Registers used:
 12654 ;;		wreg, status,2
 12655 ;; Tracked objects:
 12656 ;;		On entry : 3F/3B
 12657 ;;		On exit  : 3F/3C
 12658 ;;		Unchanged: 0/0
 12659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12664 ;;Total ram usage:        0 bytes
 12665 ;; Hardware stack levels used:    1
 12666 ;; Hardware stack levels required when called:    3
 12667 ;; This function calls:
 12668 ;;		Nothing
 12669 ;; This function is called by:
 12670 ;;		_SYSTEM_Initialize
 12671 ;; This function uses a reentrant model
 12672 ;;
 12673                           
 12674                           	psect	text70
 12675  005976                     __ptext70:
 12676                           	opt callstack 0
 12677  005976                     _CLKREF_Initialize:
 12678                           	opt callstack 26
 12679                           
 12680                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 12681                           
 12682                           ; BSR set to: 59
 12683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12684                           ;incstack = 0
 12685  005976  013C               	movlb	60	; () banked
 12686  005978  6BE6               	clrf	230,b	;volatile
 12687                           
 12688                           ; BSR set to: 60
 12689                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 12690  00597A  0E94               	movlw	148
 12691  00597C  6FE5               	movwf	229,b	;volatile
 12692                           
 12693                           ; BSR set to: 60
 12694                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12695  00597E  0012               	return		;funcret
 12696  005980                     __end_of_CLKREF_Initialize:
 12697                           	opt callstack 0
 12698                           
 12699 ;; *************** function _CLC1_Initialize *****************
 12700 ;; Defined at:
 12701 ;;		line 58 in file "mcc_generated_files/clc1.c"
 12702 ;; Parameters:    Size  Location     Type
 12703 ;;		None
 12704 ;; Auto vars:     Size  Location     Type
 12705 ;;		None
 12706 ;; Return value:  Size  Location     Type
 12707 ;;                  1  [STACK] void 
 12708 ;; Registers used:
 12709 ;;		wreg, status,2
 12710 ;; Tracked objects:
 12711 ;;		On entry : 0/39
 12712 ;;		On exit  : 3F/3C
 12713 ;;		Unchanged: 0/0
 12714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12719 ;;Total ram usage:        0 bytes
 12720 ;; Hardware stack levels used:    1
 12721 ;; Hardware stack levels required when called:    3
 12722 ;; This function calls:
 12723 ;;		Nothing
 12724 ;; This function is called by:
 12725 ;;		_SYSTEM_Initialize
 12726 ;; This function uses a reentrant model
 12727 ;;
 12728                           
 12729                           	psect	text71
 12730  00573C                     __ptext71:
 12731                           	opt callstack 0
 12732  00573C                     _CLC1_Initialize:
 12733                           	opt callstack 26
 12734                           
 12735                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 12736                           
 12737                           ; BSR set to: 60
 12738                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12739                           ;incstack = 0
 12740  00573C  013C               	movlb	60	; () banked
 12741  00573E  6B75               	clrf	117,b	;volatile
 12742                           
 12743                           ; BSR set to: 60
 12744                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 12745  005740  0E04               	movlw	4
 12746  005742  6F76               	movwf	118,b	;volatile
 12747                           
 12748                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 12749  005744  0E04               	movlw	4
 12750  005746  6F77               	movwf	119,b	;volatile
 12751                           
 12752                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 12753  005748  0E04               	movlw	4
 12754  00574A  6F78               	movwf	120,b	;volatile
 12755                           
 12756                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 12757  00574C  0E04               	movlw	4
 12758  00574E  6F79               	movwf	121,b	;volatile
 12759                           
 12760                           ; BSR set to: 60
 12761                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 12762  005750  6B7A               	clrf	122,b	;volatile
 12763                           
 12764                           ; BSR set to: 60
 12765                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 12766  005752  6B7B               	clrf	123,b	;volatile
 12767                           
 12768                           ; BSR set to: 60
 12769                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 12770  005754  6B7C               	clrf	124,b	;volatile
 12771                           
 12772                           ; BSR set to: 60
 12773                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 12774  005756  6B7D               	clrf	125,b	;volatile
 12775                           
 12776                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 12777  005758  0E81               	movlw	129
 12778  00575A  6F74               	movwf	116,b	;volatile
 12779                           
 12780                           ; BSR set to: 60
 12781                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12782  00575C  0012               	return		;funcret
 12783  00575E                     __end_of_CLC1_Initialize:
 12784                           	opt callstack 0
 12785                           
 12786 ;; *************** function _ADCC_Initialize *****************
 12787 ;; Defined at:
 12788 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12789 ;; Parameters:    Size  Location     Type
 12790 ;;		None
 12791 ;; Auto vars:     Size  Location     Type
 12792 ;;		None
 12793 ;; Return value:  Size  Location     Type
 12794 ;;                  1  [STACK] void 
 12795 ;; Registers used:
 12796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12797 ;; Tracked objects:
 12798 ;;		On entry : 3F/39
 12799 ;;		On exit  : 0/0
 12800 ;;		Unchanged: 0/0
 12801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12806 ;;Total ram usage:        0 bytes
 12807 ;; Hardware stack levels used:    1
 12808 ;; Hardware stack levels required when called:    4
 12809 ;; This function calls:
 12810 ;;		_ADCC_SetADIInterruptHandler
 12811 ;; This function is called by:
 12812 ;;		_SYSTEM_Initialize
 12813 ;; This function uses a reentrant model
 12814 ;;
 12815                           
 12816                           	psect	text72
 12817  00502A                     __ptext72:
 12818                           	opt callstack 0
 12819  00502A                     _ADCC_Initialize:
 12820                           	opt callstack 25
 12821                           
 12822                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12823                           
 12824                           ; BSR set to: 60
 12825                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12826                           ;incstack = 0
 12827  00502A  013E               	movlb	62	; () banked
 12828  00502C  6BDE               	clrf	222,b	;volatile
 12829                           
 12830                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12831  00502E  6BDF               	clrf	223,b	;volatile
 12832                           
 12833                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12834  005030  6BE0               	clrf	224,b	;volatile
 12835                           
 12836                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12837  005032  6BE1               	clrf	225,b	;volatile
 12838                           
 12839                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12840  005034  6BE4               	clrf	228,b	;volatile
 12841                           
 12842                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12843  005036  6BE5               	clrf	229,b	;volatile
 12844                           
 12845                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12846  005038  6BEA               	clrf	234,b	;volatile
 12847                           
 12848                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12849  00503A  6BEC               	clrf	236,b	;volatile
 12850                           
 12851                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12852  00503C  6BF1               	clrf	241,b	;volatile
 12853                           
 12854                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12855  00503E  6BF3               	clrf	243,b	;volatile
 12856                           
 12857                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12858  005040  6BF4               	clrf	244,b	;volatile
 12859                           
 12860                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12861  005042  6BF5               	clrf	245,b	;volatile
 12862                           
 12863                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12864  005044  6BF6               	clrf	246,b	;volatile
 12865                           
 12866                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12867  005046  6BF7               	clrf	247,b	;volatile
 12868                           
 12869                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12870  005048  6BF9               	clrf	249,b	;volatile
 12871                           
 12872                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 12873  00504A  6BFA               	clrf	250,b	;volatile
 12874                           
 12875                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 12876  00504C  6BFB               	clrf	251,b	;volatile
 12877                           
 12878                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12879  00504E  6BFC               	clrf	252,b	;volatile
 12880                           
 12881                           ; BSR set to: 62
 12882                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 12883  005050  0E02               	movlw	2
 12884  005052  6FFD               	movwf	253,b	;volatile
 12885                           
 12886                           ; BSR set to: 62
 12887                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 12888  005054  6BFE               	clrf	254,b	;volatile
 12889                           
 12890                           ; BSR set to: 62
 12891                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 12892  005056  6BFF               	clrf	255,b	;volatile
 12893                           
 12894                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 12895  005058  0E94               	movlw	148
 12896  00505A  6FF8               	movwf	248,b	;volatile
 12897                           
 12898                           ; BSR set to: 62
 12899                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 12900  00505C  0139               	movlb	57	; () banked
 12901  00505E  95A1               	bcf	161,2,b	;volatile
 12902                           
 12903                           ; BSR set to: 57
 12904                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 12905  005060  8591               	bsf	145,2,b	;volatile
 12906                           
 12907                           ; BSR set to: 57
 12908                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 12909  005062  0ED4               	movlw	low _ADCC_DefaultInterruptHandler
 12910  005064  6EE6               	movwf	postinc1,c
 12911  005066  0E59               	movlw	high _ADCC_DefaultInterruptHandler
 12912  005068  6EE6               	movwf	postinc1,c
 12913  00506A  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 12914  00506C  6EE6               	movwf	postinc1,c
 12915  00506E  EC17  F02B         	call	_ADCC_SetADIInterruptHandler	;wreg free
 12916                           
 12917                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12918  005072  0012               	return		;funcret
 12919  005074                     __end_of_ADCC_Initialize:
 12920                           	opt callstack 0
 12921                           
 12922 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 12923 ;; Defined at:
 12924 ;;		line 316 in file "mcc_generated_files/adcc.c"
 12925 ;; Parameters:    Size  Location     Type
 12926 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12927 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 12928 ;; Auto vars:     Size  Location     Type
 12929 ;;		None
 12930 ;; Return value:  Size  Location     Type
 12931 ;;                  1  [STACK] void 
 12932 ;; Registers used:
 12933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12934 ;; Tracked objects:
 12935 ;;		On entry : 3F/39
 12936 ;;		On exit  : 0/0
 12937 ;;		Unchanged: 0/0
 12938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12943 ;;Total ram usage:        0 bytes
 12944 ;; Hardware stack levels used:    1
 12945 ;; Hardware stack levels required when called:    3
 12946 ;; This function calls:
 12947 ;;		Nothing
 12948 ;; This function is called by:
 12949 ;;		_ADCC_Initialize
 12950 ;; This function uses a reentrant model
 12951 ;;
 12952                           
 12953                           	psect	text73
 12954  00562E                     __ptext73:
 12955                           	opt callstack 0
 12956  00562E                     _ADCC_SetADIInterruptHandler:
 12957                           	opt callstack 25
 12958                           
 12959                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 12960                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12961                           
 12962                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12963                           ;incstack = 0
 12964  00562E  50E1               	movf	fsr1l,w,c
 12965  005630  0FFD               	addlw	-3
 12966  005632  6ED9               	movwf	fsr2l,c
 12967  005634  50E2               	movf	fsr1h,w,c
 12968  005636  6EDA               	movwf	fsr2h,c
 12969  005638  0EFF               	movlw	255
 12970  00563A  22DA               	addwfc	fsr2h,f,c
 12971  00563C  006F FF78  F00B    	movff	postinc2,_ADCC_ADI_InterruptHandler
 12972  005642  006F FF78  F00C    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 12973  005648  006F FF74  F00D    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 12974                           
 12975                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12976  00564E  52E5               	movf	postdec1,f,c
 12977  005650  52E5               	movf	postdec1,f,c
 12978  005652  52E5               	movf	postdec1,f,c
 12979  005654  0012               	return		;funcret
 12980  005656                     __end_of_ADCC_SetADIInterruptHandler:
 12981                           	opt callstack 0
 12982                           
 12983 ;; *************** function _INT0_ISR *****************
 12984 ;; Defined at:
 12985 ;;		line 35 in file "mcc_generated_files/ext_int.c"
 12986 ;; Parameters:    Size  Location     Type
 12987 ;;		None
 12988 ;; Auto vars:     Size  Location     Type
 12989 ;;		None
 12990 ;; Return value:  Size  Location     Type
 12991 ;;                  1    wreg      void 
 12992 ;; Registers used:
 12993 ;;		wreg, status,2, status,0, pclath, tosl
 12994 ;; Tracked objects:
 12995 ;;		On entry : 0/0
 12996 ;;		On exit  : 0/0
 12997 ;;		Unchanged: 0/0
 12998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13003 ;;Total ram usage:        0 bytes
 13004 ;; Hardware stack levels used:    1
 13005 ;; Hardware stack levels required when called:    2
 13006 ;; This function calls:
 13007 ;;		_INT0_CallBack
 13008 ;; This function is called by:
 13009 ;;		Interrupt level 2
 13010 ;; This function uses a non-reentrant model
 13011 ;;
 13012                           
 13013                           	psect	text74
 13014  005938                     __ptext74:
 13015                           	opt callstack 0
 13016  005938                     _INT0_ISR:
 13017                           	opt callstack 17
 13018                           
 13019                           ;incstack = 0
 13020  005938  EE13  F130         	lfsr	1,___inthi_sp
 13021                           
 13022                           ;mcc_generated_files/ext_int.c: 37:     (PIR1bits.INT0IF = 0);
 13023  00593C  0139               	movlb	57	; () banked
 13024  00593E  91A1               	bcf	161,0,b	;volatile
 13025                           
 13026                           ; BSR set to: 57
 13027                           ;mcc_generated_files/ext_int.c: 40:     INT0_CallBack();
 13028  005940  ECAF  F02B         	call	_INT0_CallBack	;wreg free
 13029  005944  0011               	retfie		f
 13030  005946                     __end_of_INT0_ISR:
 13031                           	opt callstack 0
 13032                           
 13033 ;; *************** function _INT0_CallBack *****************
 13034 ;; Defined at:
 13035 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 13036 ;; Parameters:    Size  Location     Type
 13037 ;;		None
 13038 ;; Auto vars:     Size  Location     Type
 13039 ;;		None
 13040 ;; Return value:  Size  Location     Type
 13041 ;;                  1  [STACK] void 
 13042 ;; Registers used:
 13043 ;;		wreg, status,2, status,0, pclath, tosl
 13044 ;; Tracked objects:
 13045 ;;		On entry : 3F/39
 13046 ;;		On exit  : 0/0
 13047 ;;		Unchanged: 0/0
 13048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13053 ;;Total ram usage:        0 bytes
 13054 ;; Hardware stack levels used:    1
 13055 ;; Hardware stack levels required when called:    1
 13056 ;; This function calls:
 13057 ;;		Absolute function
 13058 ;;		_INT0_DefaultInterruptHandler
 13059 ;; This function is called by:
 13060 ;;		_INT0_ISR
 13061 ;; This function uses a reentrant model
 13062 ;;
 13063                           
 13064                           	psect	text75
 13065  00575E                     __ptext75:
 13066                           	opt callstack 0
 13067  00575E                     _INT0_CallBack:
 13068                           	opt callstack 17
 13069                           
 13070                           ;mcc_generated_files/ext_int.c: 47:     if(INT0_InterruptHandler)
 13071                           
 13072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13073                           ;incstack = 0
 13074  00575E  5020               	movf	_INT0_InterruptHandler,w,c
 13075  005760  1021               	iorwf	_INT0_InterruptHandler+1,w,c
 13076  005762  1022               	iorwf	_INT0_InterruptHandler+2,w,c
 13077  005764  B4D8               	btfsc	status,2,c
 13078  005766  0012               	return	
 13079                           
 13080                           ;mcc_generated_files/ext_int.c: 48:     {;mcc_generated_files/ext_int.c: 49:         INT
      +                          0_InterruptHandler();
 13081  005768  D801               	call	u112_48
 13082  00576A  0012               	return	
 13083  00576C                     u112_48:
 13084  00576C  0005               	push	
 13085  00576E  6EFA               	movwf	pclath,c
 13086  005770  5020               	movf	_INT0_InterruptHandler,w,c
 13087  005772  6EFD               	movwf	tosl,c
 13088  005774  5021               	movf	_INT0_InterruptHandler+1,w,c
 13089  005776  6EFE               	movwf	tosh,c
 13090  005778  5022               	movf	_INT0_InterruptHandler+2,w,c
 13091  00577A  6EFF               	movwf	tosu,c
 13092  00577C  50FA               	movf	pclath,w,c
 13093  00577E  0012               	return		;indir
 13094  005780                     __end_of_INT0_CallBack:
 13095                           	opt callstack 0
 13096                           
 13097 ;; *************** function _INT0_DefaultInterruptHandler *****************
 13098 ;; Defined at:
 13099 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 13100 ;; Parameters:    Size  Location     Type
 13101 ;;		None
 13102 ;; Auto vars:     Size  Location     Type
 13103 ;;		None
 13104 ;; Return value:  Size  Location     Type
 13105 ;;                  1  [STACK] void 
 13106 ;; Registers used:
 13107 ;;		None
 13108 ;; Tracked objects:
 13109 ;;		On entry : 0/39
 13110 ;;		On exit  : 0/0
 13111 ;;		Unchanged: 0/0
 13112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13117 ;;Total ram usage:        0 bytes
 13118 ;; Hardware stack levels used:    1
 13119 ;; This function calls:
 13120 ;;		Nothing
 13121 ;; This function is called by:
 13122 ;;		_EXT_INT_Initialize
 13123 ;;		_INT0_CallBack
 13124 ;; This function uses a reentrant model
 13125 ;;
 13126                           
 13127                           	psect	text76
 13128  0059CE                     __ptext76:
 13129                           	opt callstack 0
 13130  0059CE                     _INT0_DefaultInterruptHandler:
 13131                           	opt callstack 17
 13132                           
 13133                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13134                           
 13135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13136                           ;incstack = 0
 13137  0059CE  0012               	return		;funcret
 13138  0059D0                     __end_of_INT0_DefaultInterruptHandler:
 13139                           	opt callstack 0
 13140                           
 13141 ;; *************** function _INT1_ISR *****************
 13142 ;; Defined at:
 13143 ;;		line 61 in file "mcc_generated_files/ext_int.c"
 13144 ;; Parameters:    Size  Location     Type
 13145 ;;		None
 13146 ;; Auto vars:     Size  Location     Type
 13147 ;;		None
 13148 ;; Return value:  Size  Location     Type
 13149 ;;                  1    wreg      void 
 13150 ;; Registers used:
 13151 ;;		wreg, status,2, status,0, pclath, tosl
 13152 ;; Tracked objects:
 13153 ;;		On entry : 0/0
 13154 ;;		On exit  : 0/0
 13155 ;;		Unchanged: 0/0
 13156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13161 ;;Total ram usage:        0 bytes
 13162 ;; Hardware stack levels used:    1
 13163 ;; Hardware stack levels required when called:    2
 13164 ;; This function calls:
 13165 ;;		_INT1_CallBack
 13166 ;; This function is called by:
 13167 ;;		Interrupt level 2
 13168 ;; This function uses a non-reentrant model
 13169 ;;
 13170                           
 13171                           	psect	text77
 13172  005948                     __ptext77:
 13173                           	opt callstack 0
 13174  005948                     _INT1_ISR:
 13175                           	opt callstack 17
 13176                           
 13177                           ;incstack = 0
 13178  005948  EE13  F130         	lfsr	1,___inthi_sp
 13179                           
 13180                           ;mcc_generated_files/ext_int.c: 63:     (PIR5bits.INT1IF = 0);
 13181  00594C  0139               	movlb	57	; () banked
 13182  00594E  91A5               	bcf	165,0,b	;volatile
 13183                           
 13184                           ; BSR set to: 57
 13185                           ;mcc_generated_files/ext_int.c: 66:     INT1_CallBack();
 13186  005950  ECC0  F02B         	call	_INT1_CallBack	;wreg free
 13187  005954  0011               	retfie		f
 13188  005956                     __end_of_INT1_ISR:
 13189                           	opt callstack 0
 13190                           
 13191 ;; *************** function _INT1_CallBack *****************
 13192 ;; Defined at:
 13193 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 13194 ;; Parameters:    Size  Location     Type
 13195 ;;		None
 13196 ;; Auto vars:     Size  Location     Type
 13197 ;;		None
 13198 ;; Return value:  Size  Location     Type
 13199 ;;                  1  [STACK] void 
 13200 ;; Registers used:
 13201 ;;		wreg, status,2, status,0, pclath, tosl
 13202 ;; Tracked objects:
 13203 ;;		On entry : 3F/39
 13204 ;;		On exit  : 0/0
 13205 ;;		Unchanged: 0/0
 13206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13211 ;;Total ram usage:        0 bytes
 13212 ;; Hardware stack levels used:    1
 13213 ;; Hardware stack levels required when called:    1
 13214 ;; This function calls:
 13215 ;;		Absolute function
 13216 ;;		_INT1_DefaultInterruptHandler
 13217 ;; This function is called by:
 13218 ;;		_INT1_ISR
 13219 ;; This function uses a reentrant model
 13220 ;;
 13221                           
 13222                           	psect	text78
 13223  005780                     __ptext78:
 13224                           	opt callstack 0
 13225  005780                     _INT1_CallBack:
 13226                           	opt callstack 17
 13227                           
 13228                           ;mcc_generated_files/ext_int.c: 73:     if(INT1_InterruptHandler)
 13229                           
 13230                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13231                           ;incstack = 0
 13232  005780  501D               	movf	_INT1_InterruptHandler,w,c
 13233  005782  101E               	iorwf	_INT1_InterruptHandler+1,w,c
 13234  005784  101F               	iorwf	_INT1_InterruptHandler+2,w,c
 13235  005786  B4D8               	btfsc	status,2,c
 13236  005788  0012               	return	
 13237                           
 13238                           ;mcc_generated_files/ext_int.c: 74:     {;mcc_generated_files/ext_int.c: 75:         INT
      +                          1_InterruptHandler();
 13239  00578A  D801               	call	u114_48
 13240  00578C  0012               	return	
 13241  00578E                     u114_48:
 13242  00578E  0005               	push	
 13243  005790  6EFA               	movwf	pclath,c
 13244  005792  501D               	movf	_INT1_InterruptHandler,w,c
 13245  005794  6EFD               	movwf	tosl,c
 13246  005796  501E               	movf	_INT1_InterruptHandler+1,w,c
 13247  005798  6EFE               	movwf	tosh,c
 13248  00579A  501F               	movf	_INT1_InterruptHandler+2,w,c
 13249  00579C  6EFF               	movwf	tosu,c
 13250  00579E  50FA               	movf	pclath,w,c
 13251  0057A0  0012               	return		;indir
 13252  0057A2                     __end_of_INT1_CallBack:
 13253                           	opt callstack 0
 13254                           
 13255 ;; *************** function _INT1_DefaultInterruptHandler *****************
 13256 ;; Defined at:
 13257 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;		None
 13260 ;; Auto vars:     Size  Location     Type
 13261 ;;		None
 13262 ;; Return value:  Size  Location     Type
 13263 ;;                  1  [STACK] void 
 13264 ;; Registers used:
 13265 ;;		None
 13266 ;; Tracked objects:
 13267 ;;		On entry : 0/39
 13268 ;;		On exit  : 0/0
 13269 ;;		Unchanged: 0/0
 13270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13275 ;;Total ram usage:        0 bytes
 13276 ;; Hardware stack levels used:    1
 13277 ;; This function calls:
 13278 ;;		Nothing
 13279 ;; This function is called by:
 13280 ;;		_EXT_INT_Initialize
 13281 ;;		_INT1_CallBack
 13282 ;; This function uses a reentrant model
 13283 ;;
 13284                           
 13285                           	psect	text79
 13286  0059D0                     __ptext79:
 13287                           	opt callstack 0
 13288  0059D0                     _INT1_DefaultInterruptHandler:
 13289                           	opt callstack 17
 13290                           
 13291                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13292                           
 13293                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13294                           ;incstack = 0
 13295  0059D0  0012               	return		;funcret
 13296  0059D2                     __end_of_INT1_DefaultInterruptHandler:
 13297                           	opt callstack 0
 13298                           
 13299 ;; *************** function _INT2_ISR *****************
 13300 ;; Defined at:
 13301 ;;		line 87 in file "mcc_generated_files/ext_int.c"
 13302 ;; Parameters:    Size  Location     Type
 13303 ;;		None
 13304 ;; Auto vars:     Size  Location     Type
 13305 ;;		None
 13306 ;; Return value:  Size  Location     Type
 13307 ;;                  1    wreg      void 
 13308 ;; Registers used:
 13309 ;;		wreg, status,2, status,0, pclath, tosl
 13310 ;; Tracked objects:
 13311 ;;		On entry : 0/0
 13312 ;;		On exit  : 0/0
 13313 ;;		Unchanged: 0/0
 13314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13319 ;;Total ram usage:        0 bytes
 13320 ;; Hardware stack levels used:    1
 13321 ;; Hardware stack levels required when called:    2
 13322 ;; This function calls:
 13323 ;;		_INT2_CallBack
 13324 ;; This function is called by:
 13325 ;;		Interrupt level 2
 13326 ;; This function uses a non-reentrant model
 13327 ;;
 13328                           
 13329                           	psect	text80
 13330  005958                     __ptext80:
 13331                           	opt callstack 0
 13332  005958                     _INT2_ISR:
 13333                           	opt callstack 17
 13334                           
 13335                           ;incstack = 0
 13336  005958  EE13  F130         	lfsr	1,___inthi_sp
 13337                           
 13338                           ;mcc_generated_files/ext_int.c: 89:     (PIR7bits.INT2IF = 0);
 13339  00595C  0139               	movlb	57	; () banked
 13340  00595E  9BA7               	bcf	167,5,b	;volatile
 13341                           
 13342                           ; BSR set to: 57
 13343                           ;mcc_generated_files/ext_int.c: 92:     INT2_CallBack();
 13344  005960  ECD1  F02B         	call	_INT2_CallBack	;wreg free
 13345  005964  0011               	retfie		f
 13346  005966                     __end_of_INT2_ISR:
 13347                           	opt callstack 0
 13348                           
 13349 ;; *************** function _INT2_CallBack *****************
 13350 ;; Defined at:
 13351 ;;		line 96 in file "mcc_generated_files/ext_int.c"
 13352 ;; Parameters:    Size  Location     Type
 13353 ;;		None
 13354 ;; Auto vars:     Size  Location     Type
 13355 ;;		None
 13356 ;; Return value:  Size  Location     Type
 13357 ;;                  1  [STACK] void 
 13358 ;; Registers used:
 13359 ;;		wreg, status,2, status,0, pclath, tosl
 13360 ;; Tracked objects:
 13361 ;;		On entry : 3F/39
 13362 ;;		On exit  : 0/0
 13363 ;;		Unchanged: 0/0
 13364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13369 ;;Total ram usage:        0 bytes
 13370 ;; Hardware stack levels used:    1
 13371 ;; Hardware stack levels required when called:    1
 13372 ;; This function calls:
 13373 ;;		Absolute function
 13374 ;;		_INT2_DefaultInterruptHandler
 13375 ;; This function is called by:
 13376 ;;		_INT2_ISR
 13377 ;; This function uses a reentrant model
 13378 ;;
 13379                           
 13380                           	psect	text81
 13381  0057A2                     __ptext81:
 13382                           	opt callstack 0
 13383  0057A2                     _INT2_CallBack:
 13384                           	opt callstack 17
 13385                           
 13386                           ;mcc_generated_files/ext_int.c: 99:     if(INT2_InterruptHandler)
 13387                           
 13388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13389                           ;incstack = 0
 13390  0057A2  501A               	movf	_INT2_InterruptHandler,w,c
 13391  0057A4  101B               	iorwf	_INT2_InterruptHandler+1,w,c
 13392  0057A6  101C               	iorwf	_INT2_InterruptHandler+2,w,c
 13393  0057A8  B4D8               	btfsc	status,2,c
 13394  0057AA  0012               	return	
 13395                           
 13396                           ;mcc_generated_files/ext_int.c: 100:     {;mcc_generated_files/ext_int.c: 101:         I
      +                          NT2_InterruptHandler();
 13397  0057AC  D801               	call	u116_48
 13398  0057AE  0012               	return	
 13399  0057B0                     u116_48:
 13400  0057B0  0005               	push	
 13401  0057B2  6EFA               	movwf	pclath,c
 13402  0057B4  501A               	movf	_INT2_InterruptHandler,w,c
 13403  0057B6  6EFD               	movwf	tosl,c
 13404  0057B8  501B               	movf	_INT2_InterruptHandler+1,w,c
 13405  0057BA  6EFE               	movwf	tosh,c
 13406  0057BC  501C               	movf	_INT2_InterruptHandler+2,w,c
 13407  0057BE  6EFF               	movwf	tosu,c
 13408  0057C0  50FA               	movf	pclath,w,c
 13409  0057C2  0012               	return		;indir
 13410  0057C4                     __end_of_INT2_CallBack:
 13411                           	opt callstack 0
 13412                           
 13413 ;; *************** function _INT2_DefaultInterruptHandler *****************
 13414 ;; Defined at:
 13415 ;;		line 109 in file "mcc_generated_files/ext_int.c"
 13416 ;; Parameters:    Size  Location     Type
 13417 ;;		None
 13418 ;; Auto vars:     Size  Location     Type
 13419 ;;		None
 13420 ;; Return value:  Size  Location     Type
 13421 ;;                  1  [STACK] void 
 13422 ;; Registers used:
 13423 ;;		None
 13424 ;; Tracked objects:
 13425 ;;		On entry : 0/39
 13426 ;;		On exit  : 0/0
 13427 ;;		Unchanged: 0/0
 13428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13433 ;;Total ram usage:        0 bytes
 13434 ;; Hardware stack levels used:    1
 13435 ;; This function calls:
 13436 ;;		Nothing
 13437 ;; This function is called by:
 13438 ;;		_EXT_INT_Initialize
 13439 ;;		_INT2_CallBack
 13440 ;; This function uses a reentrant model
 13441 ;;
 13442                           
 13443                           	psect	text82
 13444  0059D2                     __ptext82:
 13445                           	opt callstack 0
 13446  0059D2                     _INT2_DefaultInterruptHandler:
 13447                           	opt callstack 17
 13448                           
 13449                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13450                           
 13451                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13452                           ;incstack = 0
 13453  0059D2  0012               	return		;funcret
 13454  0059D4                     __end_of_INT2_DefaultInterruptHandler:
 13455                           	opt callstack 0
 13456                           
 13457 ;; *************** function _Default_ISR *****************
 13458 ;; Defined at:
 13459 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 13460 ;; Parameters:    Size  Location     Type
 13461 ;;		None
 13462 ;; Auto vars:     Size  Location     Type
 13463 ;;		None
 13464 ;; Return value:  Size  Location     Type
 13465 ;;                  1    wreg      void 
 13466 ;; Registers used:
 13467 ;;		None
 13468 ;; Tracked objects:
 13469 ;;		On entry : 0/0
 13470 ;;		On exit  : 0/0
 13471 ;;		Unchanged: 0/0
 13472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13477 ;;Total ram usage:        0 bytes
 13478 ;; Hardware stack levels used:    1
 13479 ;; This function calls:
 13480 ;;		Nothing
 13481 ;; This function is called by:
 13482 ;;		Interrupt level 2
 13483 ;; This function uses a non-reentrant model
 13484 ;;
 13485                           
 13486                           	psect	text83
 13487  0059C8                     __ptext83:
 13488                           	opt callstack 0
 13489  0059C8                     _Default_ISR:
 13490                           	opt callstack 19
 13491                           
 13492                           ;incstack = 0
 13493  0059C8  EE13  F130         	lfsr	1,___inthi_sp
 13494  0059CC  0011               	retfie		f
 13495  0059CE                     __end_of_Default_ISR:
 13496                           	opt callstack 0
 13497                           
 13498 ;; *************** function _ADCC_ISR *****************
 13499 ;; Defined at:
 13500 ;;		line 307 in file "mcc_generated_files/adcc.c"
 13501 ;; Parameters:    Size  Location     Type
 13502 ;;		None
 13503 ;; Auto vars:     Size  Location     Type
 13504 ;;		None
 13505 ;; Return value:  Size  Location     Type
 13506 ;;                  1    wreg      void 
 13507 ;; Registers used:
 13508 ;;		wreg, status,2, status,0, pclath, tosl
 13509 ;; Tracked objects:
 13510 ;;		On entry : 0/0
 13511 ;;		On exit  : 0/0
 13512 ;;		Unchanged: 0/0
 13513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13518 ;;Total ram usage:        0 bytes
 13519 ;; Hardware stack levels used:    1
 13520 ;; Hardware stack levels required when called:    1
 13521 ;; This function calls:
 13522 ;;		Absolute function
 13523 ;;		_ADCC_DefaultInterruptHandler
 13524 ;; This function is called by:
 13525 ;;		Interrupt level 2
 13526 ;; This function uses a non-reentrant model
 13527 ;;
 13528                           
 13529                           	psect	text84
 13530  0053FC                     __ptext84:
 13531                           	opt callstack 0
 13532  0053FC                     _ADCC_ISR:
 13533                           	opt callstack 18
 13534                           
 13535                           ;incstack = 0
 13536  0053FC  EE13  F130         	lfsr	1,___inthi_sp
 13537                           
 13538                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 13539  005400  0139               	movlb	57	; () banked
 13540  005402  95A1               	bcf	161,2,b	;volatile
 13541                           
 13542                           ; BSR set to: 57
 13543                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 13544  005404  500B               	movf	_ADCC_ADI_InterruptHandler,w,c
 13545  005406  100C               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 13546  005408  100D               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 13547  00540A  B4D8               	btfsc	status,2,c
 13548  00540C  0011               	retfie		f
 13549                           
 13550                           ; BSR set to: 57
 13551                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 13552  00540E  D801               	call	i2u161_48
 13553  005410  0011               	retfie		f
 13554  005412                     i2u161_48:
 13555  005412  0005               	push	
 13556  005414  6EFA               	movwf	pclath,c
 13557  005416  500B               	movf	_ADCC_ADI_InterruptHandler,w,c
 13558  005418  6EFD               	movwf	tosl,c
 13559  00541A  500C               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 13560  00541C  6EFE               	movwf	tosh,c
 13561  00541E  500D               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 13562  005420  6EFF               	movwf	tosu,c
 13563  005422  50FA               	movf	pclath,w,c
 13564  005424  0012               	return		;indir
 13565  005426                     __end_of_ADCC_ISR:
 13566                           	opt callstack 0
 13567                           
 13568 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13569 ;; Defined at:
 13570 ;;		line 320 in file "mcc_generated_files/adcc.c"
 13571 ;; Parameters:    Size  Location     Type
 13572 ;;		None
 13573 ;; Auto vars:     Size  Location     Type
 13574 ;;		None
 13575 ;; Return value:  Size  Location     Type
 13576 ;;                  1  [STACK] void 
 13577 ;; Registers used:
 13578 ;;		None
 13579 ;; Tracked objects:
 13580 ;;		On entry : 3F/39
 13581 ;;		On exit  : 0/0
 13582 ;;		Unchanged: 0/0
 13583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13588 ;;Total ram usage:        0 bytes
 13589 ;; Hardware stack levels used:    1
 13590 ;; This function calls:
 13591 ;;		Nothing
 13592 ;; This function is called by:
 13593 ;;		_ADCC_Initialize
 13594 ;;		_ADCC_ISR
 13595 ;; This function uses a reentrant model
 13596 ;;
 13597                           
 13598                           	psect	text85
 13599  0059D4                     __ptext85:
 13600                           	opt callstack 0
 13601  0059D4                     _ADCC_DefaultInterruptHandler:
 13602                           	opt callstack 18
 13603                           
 13604                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13605                           
 13606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13607                           ;incstack = 0
 13608  0059D4  0012               	return		;funcret
 13609  0059D6                     __end_of_ADCC_DefaultInterruptHandler:
 13610                           	opt callstack 0
 13611                           
 13612 ;; *************** function _UART1_tx_vect_isr *****************
 13613 ;; Defined at:
 13614 ;;		line 197 in file "mcc_generated_files/uart1.c"
 13615 ;; Parameters:    Size  Location     Type
 13616 ;;		None
 13617 ;; Auto vars:     Size  Location     Type
 13618 ;;		None
 13619 ;; Return value:  Size  Location     Type
 13620 ;;                  1    wreg      void 
 13621 ;; Registers used:
 13622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13623 ;; Tracked objects:
 13624 ;;		On entry : 0/0
 13625 ;;		On exit  : 0/0
 13626 ;;		Unchanged: 0/0
 13627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13632 ;;Total ram usage:        0 bytes
 13633 ;; Hardware stack levels used:    1
 13634 ;; Hardware stack levels required when called:    1
 13635 ;; This function calls:
 13636 ;;		Absolute function
 13637 ;;		_UART1_Transmit_ISR
 13638 ;; This function is called by:
 13639 ;;		Interrupt level 2
 13640 ;; This function uses a non-reentrant model
 13641 ;;
 13642                           
 13643                           	psect	text86
 13644  005658                     __ptext86:
 13645                           	opt callstack 0
 13646  005658                     _UART1_tx_vect_isr:
 13647                           	opt callstack 18
 13648                           
 13649                           ;incstack = 0
 13650  005658  EE13  F130         	lfsr	1,___inthi_sp
 13651                           
 13652                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 13653  00565C  500E               	movf	_UART1_TxInterruptHandler,w,c
 13654  00565E  100F               	iorwf	_UART1_TxInterruptHandler+1,w,c
 13655  005660  1010               	iorwf	_UART1_TxInterruptHandler+2,w,c
 13656  005662  B4D8               	btfsc	status,2,c
 13657  005664  0011               	retfie		f
 13658                           
 13659                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 13660  005666  D801               	call	i2u327_48
 13661  005668  0011               	retfie		f
 13662  00566A                     i2u327_48:
 13663  00566A  0005               	push	
 13664  00566C  6EFA               	movwf	pclath,c
 13665  00566E  500E               	movf	_UART1_TxInterruptHandler,w,c
 13666  005670  6EFD               	movwf	tosl,c
 13667  005672  500F               	movf	_UART1_TxInterruptHandler+1,w,c
 13668  005674  6EFE               	movwf	tosh,c
 13669  005676  5010               	movf	_UART1_TxInterruptHandler+2,w,c
 13670  005678  6EFF               	movwf	tosu,c
 13671  00567A  50FA               	movf	pclath,w,c
 13672  00567C  0012               	return		;indir
 13673  00567E                     __end_of_UART1_tx_vect_isr:
 13674                           	opt callstack 0
 13675                           
 13676 ;; *************** function _UART1_Transmit_ISR *****************
 13677 ;; Defined at:
 13678 ;;		line 211 in file "mcc_generated_files/uart1.c"
 13679 ;; Parameters:    Size  Location     Type
 13680 ;;		None
 13681 ;; Auto vars:     Size  Location     Type
 13682 ;;		None
 13683 ;; Return value:  Size  Location     Type
 13684 ;;                  1  [STACK] void 
 13685 ;; Registers used:
 13686 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13687 ;; Tracked objects:
 13688 ;;		On entry : 0/0
 13689 ;;		On exit  : 3B/39
 13690 ;;		Unchanged: 0/0
 13691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13696 ;;Total ram usage:        0 bytes
 13697 ;; Hardware stack levels used:    1
 13698 ;; This function calls:
 13699 ;;		Nothing
 13700 ;; This function is called by:
 13701 ;;		_UART1_Initialize
 13702 ;;		_UART1_tx_vect_isr
 13703 ;; This function uses a reentrant model
 13704 ;;
 13705                           
 13706                           	psect	text87
 13707  00534E                     __ptext87:
 13708                           	opt callstack 0
 13709  00534E                     _UART1_Transmit_ISR:
 13710                           	opt callstack 18
 13711                           
 13712                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 13713                           
 13714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13715                           ;incstack = 0
 13716  00534E  0E40               	movlw	64
 13717  005350  6039               	cpfslt	_uart1TxBufferRemaining,c
 13718  005352  D010               	goto	l597
 13719                           
 13720                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 13721  005354  0E80               	movlw	low _uart1TxBuffer
 13722  005356  243A               	addwf	_uart1TxTail,w,c	;volatile
 13723  005358  6ED9               	movwf	fsr2l,c
 13724  00535A  6ADA               	clrf	fsr2h,c
 13725  00535C  0E02               	movlw	high _uart1TxBuffer
 13726  00535E  22DA               	addwfc	fsr2h,f,c
 13727  005360  50DF               	movf	indf2,w,c
 13728  005362  013D               	movlb	61	; () banked
 13729  005364  6FEA               	movwf	234,b	;volatile
 13730                           
 13731                           ; BSR set to: 61
 13732  005366  2A3A               	incf	_uart1TxTail,f,c	;volatile
 13733                           
 13734                           ; BSR set to: 61
 13735                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 13736  005368  0E3F               	movlw	63
 13737  00536A  643A               	cpfsgt	_uart1TxTail,c
 13738  00536C  D001               	goto	l5759
 13739                           
 13740                           ; BSR set to: 61
 13741                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 13742  00536E  6A3A               	clrf	_uart1TxTail,c	;volatile
 13743  005370                     l5759:
 13744                           
 13745                           ; BSR set to: 61
 13746                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 13747  005370  2A39               	incf	_uart1TxBufferRemaining,f,c	;volatile
 13748                           
 13749                           ;mcc_generated_files/uart1.c: 220:  } else {
 13750  005372  0012               	return	
 13751  005374                     l597:
 13752                           
 13753                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 13754  005374  0139               	movlb	57	; () banked
 13755  005376  9993               	bcf	147,4,b	;volatile
 13756                           
 13757                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13758  005378  0012               	return		;funcret
 13759  00537A                     __end_of_UART1_Transmit_ISR:
 13760                           	opt callstack 0
 13761                           
 13762 ;; *************** function _UART1_rx_vect_isr *****************
 13763 ;; Defined at:
 13764 ;;		line 204 in file "mcc_generated_files/uart1.c"
 13765 ;; Parameters:    Size  Location     Type
 13766 ;;		None
 13767 ;; Auto vars:     Size  Location     Type
 13768 ;;		None
 13769 ;; Return value:  Size  Location     Type
 13770 ;;                  1    wreg      void 
 13771 ;; Registers used:
 13772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13773 ;; Tracked objects:
 13774 ;;		On entry : 0/0
 13775 ;;		On exit  : 0/0
 13776 ;;		Unchanged: 0/0
 13777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13782 ;;Total ram usage:        0 bytes
 13783 ;; Hardware stack levels used:    1
 13784 ;; Hardware stack levels required when called:    1
 13785 ;; This function calls:
 13786 ;;		Absolute function
 13787 ;;		_UART1_Receive_ISR
 13788 ;; This function is called by:
 13789 ;;		Interrupt level 2
 13790 ;; This function uses a non-reentrant model
 13791 ;;
 13792                           
 13793                           	psect	text88
 13794  005680                     __ptext88:
 13795                           	opt callstack 0
 13796  005680                     _UART1_rx_vect_isr:
 13797                           	opt callstack 18
 13798                           
 13799                           ;incstack = 0
 13800  005680  EE13  F130         	lfsr	1,___inthi_sp
 13801                           
 13802                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 13803  005684  5011               	movf	_UART1_RxInterruptHandler,w,c
 13804  005686  1012               	iorwf	_UART1_RxInterruptHandler+1,w,c
 13805  005688  1013               	iorwf	_UART1_RxInterruptHandler+2,w,c
 13806  00568A  B4D8               	btfsc	status,2,c
 13807  00568C  0011               	retfie		f
 13808                           
 13809                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 13810  00568E  D801               	call	i2u448_48
 13811  005690  0011               	retfie		f
 13812  005692                     i2u448_48:
 13813  005692  0005               	push	
 13814  005694  6EFA               	movwf	pclath,c
 13815  005696  5011               	movf	_UART1_RxInterruptHandler,w,c
 13816  005698  6EFD               	movwf	tosl,c
 13817  00569A  5012               	movf	_UART1_RxInterruptHandler+1,w,c
 13818  00569C  6EFE               	movwf	tosh,c
 13819  00569E  5013               	movf	_UART1_RxInterruptHandler+2,w,c
 13820  0056A0  6EFF               	movwf	tosu,c
 13821  0056A2  50FA               	movf	pclath,w,c
 13822  0056A4  0012               	return		;indir
 13823  0056A6                     __end_of_UART1_rx_vect_isr:
 13824                           	opt callstack 0
 13825                           
 13826 ;; *************** function _UART1_Receive_ISR *****************
 13827 ;; Defined at:
 13828 ;;		line 227 in file "mcc_generated_files/uart1.c"
 13829 ;; Parameters:    Size  Location     Type
 13830 ;;		None
 13831 ;; Auto vars:     Size  Location     Type
 13832 ;;		None
 13833 ;; Return value:  Size  Location     Type
 13834 ;;                  1  [STACK] void 
 13835 ;; Registers used:
 13836 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13837 ;; Tracked objects:
 13838 ;;		On entry : 0/0
 13839 ;;		On exit  : 0/0
 13840 ;;		Unchanged: 0/0
 13841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13846 ;;Total ram usage:        0 bytes
 13847 ;; Hardware stack levels used:    1
 13848 ;; This function calls:
 13849 ;;		Nothing
 13850 ;; This function is called by:
 13851 ;;		_UART1_Initialize
 13852 ;;		_UART1_rx_vect_isr
 13853 ;; This function uses a reentrant model
 13854 ;;
 13855                           
 13856                           	psect	text89
 13857  0057E6                     __ptext89:
 13858                           	opt callstack 0
 13859  0057E6                     _UART1_Receive_ISR:
 13860                           	opt callstack 18
 13861                           
 13862                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 13863                           
 13864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13865                           ;incstack = 0
 13866  0057E6  0E40               	movlw	low _uart1RxBuffer
 13867  0057E8  2438               	addwf	_uart1RxHead,w,c	;volatile
 13868  0057EA  6ED9               	movwf	fsr2l,c
 13869  0057EC  6ADA               	clrf	fsr2h,c
 13870  0057EE  0E02               	movlw	high _uart1RxBuffer
 13871  0057F0  22DA               	addwfc	fsr2h,f,c
 13872  0057F2  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 13873  0057F8  2A38               	incf	_uart1RxHead,f,c	;volatile
 13874                           
 13875                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 13876  0057FA  0E3F               	movlw	63
 13877  0057FC  6438               	cpfsgt	_uart1RxHead,c
 13878  0057FE  D001               	goto	l7431
 13879                           
 13880                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 13881  005800  6A38               	clrf	_uart1RxHead,c	;volatile
 13882  005802                     l7431:
 13883                           
 13884                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 13885  005802  2A36               	incf	_uart1RxCount,f,c	;volatile
 13886                           
 13887                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13888  005804  0012               	return		;funcret
 13889  005806                     __end_of_UART1_Receive_ISR:
 13890                           	opt callstack 0
 13891                           
 13892 ;; *************** function _UART2_tx_vect_isr *****************
 13893 ;; Defined at:
 13894 ;;		line 195 in file "mcc_generated_files/uart2.c"
 13895 ;; Parameters:    Size  Location     Type
 13896 ;;		None
 13897 ;; Auto vars:     Size  Location     Type
 13898 ;;		None
 13899 ;; Return value:  Size  Location     Type
 13900 ;;                  1    wreg      void 
 13901 ;; Registers used:
 13902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13903 ;; Tracked objects:
 13904 ;;		On entry : 0/0
 13905 ;;		On exit  : 0/0
 13906 ;;		Unchanged: 0/0
 13907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13912 ;;Total ram usage:        0 bytes
 13913 ;; Hardware stack levels used:    1
 13914 ;; Hardware stack levels required when called:    1
 13915 ;; This function calls:
 13916 ;;		Absolute function
 13917 ;;		_UART2_Transmit_ISR
 13918 ;; This function is called by:
 13919 ;;		Interrupt level 2
 13920 ;; This function uses a non-reentrant model
 13921 ;;
 13922                           
 13923                           	psect	text90
 13924  0056A8                     __ptext90:
 13925                           	opt callstack 0
 13926  0056A8                     _UART2_tx_vect_isr:
 13927                           	opt callstack 18
 13928                           
 13929                           ;incstack = 0
 13930  0056A8  EE13  F130         	lfsr	1,___inthi_sp
 13931                           
 13932                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 13933  0056AC  5014               	movf	_UART2_TxInterruptHandler,w,c
 13934  0056AE  1015               	iorwf	_UART2_TxInterruptHandler+1,w,c
 13935  0056B0  1016               	iorwf	_UART2_TxInterruptHandler+2,w,c
 13936  0056B2  B4D8               	btfsc	status,2,c
 13937  0056B4  0011               	retfie		f
 13938                           
 13939                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 13940  0056B6  D801               	call	i2u331_48
 13941  0056B8  0011               	retfie		f
 13942  0056BA                     i2u331_48:
 13943  0056BA  0005               	push	
 13944  0056BC  6EFA               	movwf	pclath,c
 13945  0056BE  5014               	movf	_UART2_TxInterruptHandler,w,c
 13946  0056C0  6EFD               	movwf	tosl,c
 13947  0056C2  5015               	movf	_UART2_TxInterruptHandler+1,w,c
 13948  0056C4  6EFE               	movwf	tosh,c
 13949  0056C6  5016               	movf	_UART2_TxInterruptHandler+2,w,c
 13950  0056C8  6EFF               	movwf	tosu,c
 13951  0056CA  50FA               	movf	pclath,w,c
 13952  0056CC  0012               	return		;indir
 13953  0056CE                     __end_of_UART2_tx_vect_isr:
 13954                           	opt callstack 0
 13955                           
 13956 ;; *************** function _UART2_Transmit_ISR *****************
 13957 ;; Defined at:
 13958 ;;		line 213 in file "mcc_generated_files/uart2.c"
 13959 ;; Parameters:    Size  Location     Type
 13960 ;;		None
 13961 ;; Auto vars:     Size  Location     Type
 13962 ;;		None
 13963 ;; Return value:  Size  Location     Type
 13964 ;;                  1  [STACK] void 
 13965 ;; Registers used:
 13966 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13967 ;; Tracked objects:
 13968 ;;		On entry : 0/0
 13969 ;;		On exit  : 3B/39
 13970 ;;		Unchanged: 0/0
 13971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13976 ;;Total ram usage:        0 bytes
 13977 ;; Hardware stack levels used:    1
 13978 ;; This function calls:
 13979 ;;		Nothing
 13980 ;; This function is called by:
 13981 ;;		_UART2_Initialize
 13982 ;;		_UART2_tx_vect_isr
 13983 ;; This function uses a reentrant model
 13984 ;;
 13985                           
 13986                           	psect	text91
 13987  00537A                     __ptext91:
 13988                           	opt callstack 0
 13989  00537A                     _UART2_Transmit_ISR:
 13990                           	opt callstack 18
 13991                           
 13992                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 13993                           
 13994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13995                           ;incstack = 0
 13996  00537A  0E40               	movlw	64
 13997  00537C  6033               	cpfslt	_uart2TxBufferRemaining,c
 13998  00537E  D010               	goto	l717
 13999                           
 14000                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 14001  005380  0E00               	movlw	low _uart2TxBuffer
 14002  005382  2434               	addwf	_uart2TxTail,w,c	;volatile
 14003  005384  6ED9               	movwf	fsr2l,c
 14004  005386  6ADA               	clrf	fsr2h,c
 14005  005388  0E02               	movlw	high _uart2TxBuffer
 14006  00538A  22DA               	addwfc	fsr2h,f,c
 14007  00538C  50DF               	movf	indf2,w,c
 14008  00538E  013D               	movlb	61	; () banked
 14009  005390  6FD2               	movwf	210,b	;volatile
 14010                           
 14011                           ; BSR set to: 61
 14012  005392  2A34               	incf	_uart2TxTail,f,c	;volatile
 14013                           
 14014                           ; BSR set to: 61
 14015                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 14016  005394  0E3F               	movlw	63
 14017  005396  6434               	cpfsgt	_uart2TxTail,c
 14018  005398  D001               	goto	l5781
 14019                           
 14020                           ; BSR set to: 61
 14021                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 14022  00539A  6A34               	clrf	_uart2TxTail,c	;volatile
 14023  00539C                     l5781:
 14024                           
 14025                           ; BSR set to: 61
 14026                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 14027  00539C  2A33               	incf	_uart2TxBufferRemaining,f,c	;volatile
 14028                           
 14029                           ;mcc_generated_files/uart2.c: 224:     }
 14030  00539E  0012               	return	
 14031  0053A0                     l717:
 14032                           
 14033                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 14034  0053A0  0139               	movlb	57	; () banked
 14035  0053A2  9796               	bcf	150,3,b	;volatile
 14036                           
 14037                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14038  0053A4  0012               	return		;funcret
 14039  0053A6                     __end_of_UART2_Transmit_ISR:
 14040                           	opt callstack 0
 14041                           
 14042 ;; *************** function _UART2_rx_vect_isr *****************
 14043 ;; Defined at:
 14044 ;;		line 203 in file "mcc_generated_files/uart2.c"
 14045 ;; Parameters:    Size  Location     Type
 14046 ;;		None
 14047 ;; Auto vars:     Size  Location     Type
 14048 ;;		None
 14049 ;; Return value:  Size  Location     Type
 14050 ;;                  1    wreg      void 
 14051 ;; Registers used:
 14052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14053 ;; Tracked objects:
 14054 ;;		On entry : 0/0
 14055 ;;		On exit  : 0/0
 14056 ;;		Unchanged: 0/0
 14057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14062 ;;Total ram usage:        0 bytes
 14063 ;; Hardware stack levels used:    1
 14064 ;; Hardware stack levels required when called:    1
 14065 ;; This function calls:
 14066 ;;		Absolute function
 14067 ;;		_UART2_Receive_ISR
 14068 ;; This function is called by:
 14069 ;;		Interrupt level 2
 14070 ;; This function uses a non-reentrant model
 14071 ;;
 14072                           
 14073                           	psect	text92
 14074  0056D0                     __ptext92:
 14075                           	opt callstack 0
 14076  0056D0                     _UART2_rx_vect_isr:
 14077                           	opt callstack 18
 14078                           
 14079                           ;incstack = 0
 14080  0056D0  EE13  F130         	lfsr	1,___inthi_sp
 14081                           
 14082                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 14083  0056D4  5017               	movf	_UART2_RxInterruptHandler,w,c
 14084  0056D6  1018               	iorwf	_UART2_RxInterruptHandler+1,w,c
 14085  0056D8  1019               	iorwf	_UART2_RxInterruptHandler+2,w,c
 14086  0056DA  B4D8               	btfsc	status,2,c
 14087  0056DC  0011               	retfie		f
 14088                           
 14089                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 14090  0056DE  D801               	call	i2u450_48
 14091  0056E0  0011               	retfie		f
 14092  0056E2                     i2u450_48:
 14093  0056E2  0005               	push	
 14094  0056E4  6EFA               	movwf	pclath,c
 14095  0056E6  5017               	movf	_UART2_RxInterruptHandler,w,c
 14096  0056E8  6EFD               	movwf	tosl,c
 14097  0056EA  5018               	movf	_UART2_RxInterruptHandler+1,w,c
 14098  0056EC  6EFE               	movwf	tosh,c
 14099  0056EE  5019               	movf	_UART2_RxInterruptHandler+2,w,c
 14100  0056F0  6EFF               	movwf	tosu,c
 14101  0056F2  50FA               	movf	pclath,w,c
 14102  0056F4  0012               	return		;indir
 14103  0056F6                     __end_of_UART2_rx_vect_isr:
 14104                           	opt callstack 0
 14105                           
 14106 ;; *************** function _UART2_Receive_ISR *****************
 14107 ;; Defined at:
 14108 ;;		line 233 in file "mcc_generated_files/uart2.c"
 14109 ;; Parameters:    Size  Location     Type
 14110 ;;		None
 14111 ;; Auto vars:     Size  Location     Type
 14112 ;;		None
 14113 ;; Return value:  Size  Location     Type
 14114 ;;                  1  [STACK] void 
 14115 ;; Registers used:
 14116 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14117 ;; Tracked objects:
 14118 ;;		On entry : 0/0
 14119 ;;		On exit  : 0/0
 14120 ;;		Unchanged: 0/0
 14121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14126 ;;Total ram usage:        0 bytes
 14127 ;; Hardware stack levels used:    1
 14128 ;; This function calls:
 14129 ;;		Nothing
 14130 ;; This function is called by:
 14131 ;;		_UART2_Initialize
 14132 ;;		_UART2_rx_vect_isr
 14133 ;; This function uses a reentrant model
 14134 ;;
 14135                           
 14136                           	psect	text93
 14137  005806                     __ptext93:
 14138                           	opt callstack 0
 14139  005806                     _UART2_Receive_ISR:
 14140                           	opt callstack 18
 14141                           
 14142                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 14143                           
 14144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14145                           ;incstack = 0
 14146  005806  0E00               	movlw	low _uart2RxBuffer
 14147  005808  2432               	addwf	_uart2RxHead,w,c	;volatile
 14148  00580A  6ED9               	movwf	fsr2l,c
 14149  00580C  6ADA               	clrf	fsr2h,c
 14150  00580E  0E03               	movlw	high _uart2RxBuffer
 14151  005810  22DA               	addwfc	fsr2h,f,c
 14152  005812  006F F743 FFDF     	movff	15824,indf2	;volatile
 14153  005818  2A32               	incf	_uart2RxHead,f,c	;volatile
 14154                           
 14155                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 14156  00581A  0E3F               	movlw	63
 14157  00581C  6432               	cpfsgt	_uart2RxHead,c
 14158  00581E  D001               	goto	l7441
 14159                           
 14160                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 14161  005820  6A32               	clrf	_uart2RxHead,c	;volatile
 14162  005822                     l7441:
 14163                           
 14164                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 14165  005822  2A30               	incf	_uart2RxCount,f,c	;volatile
 14166                           
 14167                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14168  005824  0012               	return		;funcret
 14169  005826                     __end_of_UART2_Receive_ISR:
 14170                           	opt callstack 0
 14171                           
 14172 ;; *************** function _TMR6_ISR *****************
 14173 ;; Defined at:
 14174 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 14175 ;; Parameters:    Size  Location     Type
 14176 ;;		None
 14177 ;; Auto vars:     Size  Location     Type
 14178 ;;		None
 14179 ;; Return value:  Size  Location     Type
 14180 ;;                  1    wreg      void 
 14181 ;; Registers used:
 14182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 14183 ;; Tracked objects:
 14184 ;;		On entry : 0/0
 14185 ;;		On exit  : 0/0
 14186 ;;		Unchanged: 0/0
 14187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14190 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14191 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14192 ;;Total ram usage:        1 bytes
 14193 ;; Hardware stack levels used:    1
 14194 ;; Hardware stack levels required when called:    2
 14195 ;; This function calls:
 14196 ;;		_TMR6_CallBack
 14197 ;; This function is called by:
 14198 ;;		Interrupt level 2
 14199 ;; This function uses a non-reentrant model
 14200 ;;
 14201                           
 14202                           	psect	text94
 14203  0058B4                     __ptext94:
 14204                           	opt callstack 0
 14205  0058B4                     _TMR6_ISR:
 14206                           	opt callstack 17
 14207                           
 14208                           ;incstack = 0
 14209  0058B4  0060  F0F0  F05C   	movff	btemp,??_TMR6_ISR
 14210  0058BA  EE13  F130         	lfsr	1,___inthi_sp
 14211                           
 14212                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 14213  0058BE  0139               	movlb	57	; () banked
 14214  0058C0  91A9               	bcf	169,0,b	;volatile
 14215                           
 14216                           ; BSR set to: 57
 14217                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 14218  0058C2  ECE2  F02B         	call	_TMR6_CallBack	;wreg free
 14219  0058C6  0060  F170  F03C   	movff	??_TMR6_ISR,btemp
 14220  0058CC  0011               	retfie		f
 14221  0058CE                     __end_of_TMR6_ISR:
 14222                           	opt callstack 0
 14223                           
 14224 ;; *************** function _TMR6_CallBack *****************
 14225 ;; Defined at:
 14226 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 14227 ;; Parameters:    Size  Location     Type
 14228 ;;		None
 14229 ;; Auto vars:     Size  Location     Type
 14230 ;;		None
 14231 ;; Return value:  Size  Location     Type
 14232 ;;                  1  [STACK] void 
 14233 ;; Registers used:
 14234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 14235 ;; Tracked objects:
 14236 ;;		On entry : 3F/39
 14237 ;;		On exit  : 0/0
 14238 ;;		Unchanged: 0/0
 14239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14244 ;;Total ram usage:        0 bytes
 14245 ;; Hardware stack levels used:    1
 14246 ;; Hardware stack levels required when called:    1
 14247 ;; This function calls:
 14248 ;;		Absolute function
 14249 ;;		_TMR6_DefaultInterruptHandler
 14250 ;; This function is called by:
 14251 ;;		_TMR6_ISR
 14252 ;; This function uses a reentrant model
 14253 ;;
 14254                           
 14255                           	psect	text95
 14256  0057C4                     __ptext95:
 14257                           	opt callstack 0
 14258  0057C4                     _TMR6_CallBack:
 14259                           	opt callstack 17
 14260                           
 14261                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 14262                           
 14263                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14264                           ;incstack = 0
 14265  0057C4  5008               	movf	_TMR6_InterruptHandler,w,c
 14266  0057C6  1009               	iorwf	_TMR6_InterruptHandler+1,w,c
 14267  0057C8  100A               	iorwf	_TMR6_InterruptHandler+2,w,c
 14268  0057CA  B4D8               	btfsc	status,2,c
 14269  0057CC  0012               	return	
 14270                           
 14271                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 14272  0057CE  D801               	call	u293_48
 14273  0057D0  0012               	return	
 14274  0057D2                     u293_48:
 14275  0057D2  0005               	push	
 14276  0057D4  6EFA               	movwf	pclath,c
 14277  0057D6  5008               	movf	_TMR6_InterruptHandler,w,c
 14278  0057D8  6EFD               	movwf	tosl,c
 14279  0057DA  5009               	movf	_TMR6_InterruptHandler+1,w,c
 14280  0057DC  6EFE               	movwf	tosh,c
 14281  0057DE  500A               	movf	_TMR6_InterruptHandler+2,w,c
 14282  0057E0  6EFF               	movwf	tosu,c
 14283  0057E2  50FA               	movf	pclath,w,c
 14284  0057E4  0012               	return		;indir
 14285  0057E6                     __end_of_TMR6_CallBack:
 14286                           	opt callstack 0
 14287                           
 14288 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 14289 ;; Defined at:
 14290 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 14291 ;; Parameters:    Size  Location     Type
 14292 ;;		None
 14293 ;; Auto vars:     Size  Location     Type
 14294 ;;  i               1  [STACK] unsigned char 
 14295 ;; Return value:  Size  Location     Type
 14296 ;;                  1  [STACK] void 
 14297 ;; Registers used:
 14298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 14299 ;; Tracked objects:
 14300 ;;		On entry : 0/39
 14301 ;;		On exit  : 0/0
 14302 ;;		Unchanged: 0/0
 14303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14308 ;;Total ram usage:        0 bytes
 14309 ;; Hardware stack levels used:    1
 14310 ;; This function calls:
 14311 ;;		Nothing
 14312 ;; This function is called by:
 14313 ;;		_TMR6_Initialize
 14314 ;;		_TMR6_CallBack
 14315 ;; This function uses a reentrant model
 14316 ;;
 14317                           
 14318                           	psect	text96
 14319  005100                     __ptext96:
 14320                           	opt callstack 0
 14321  005100                     _TMR6_DefaultInterruptHandler:
 14322                           	opt callstack 0
 14323                           
 14324                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14325  005100  52E6               	movf	postinc1,f,c
 14326                           
 14327                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 14328                           ;stkvar	_i @ sp[(-1)+0]
 14329                           
 14330                           ;incstack = 0
 14331  005102  0EFF               	movlw	-1
 14332  005104  6AE3               	clrf	plusw1,c
 14333  005106                     l5413:
 14334                           
 14335                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 14336                           ;stkvar	_i @ sp[(-1)+0]
 14337  005106  0EFF               	movlw	-1
 14338  005108  50E3               	movf	plusw1,w,c
 14339  00510A  0D02               	mullw	2
 14340  00510C  50F3               	movf	prodl,w,c
 14341  00510E  0F79               	addlw	low _tickCount
 14342  005110  6ED9               	movwf	fsr2l,c
 14343  005112  6ADA               	clrf	fsr2h,c
 14344  005114  50DE               	movf	postinc2,w,c
 14345  005116  10DE               	iorwf	postinc2,w,c
 14346  005118  B4D8               	btfsc	status,2,c
 14347  00511A  D00A               	goto	l5417
 14348                           
 14349                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 14350                           ;stkvar	_i @ sp[(-1)+0]
 14351  00511C  0EFF               	movlw	-1
 14352  00511E  50E3               	movf	plusw1,w,c
 14353  005120  0D02               	mullw	2
 14354  005122  50F3               	movf	prodl,w,c
 14355  005124  0F79               	addlw	low _tickCount
 14356  005126  6ED9               	movwf	fsr2l,c
 14357  005128  6ADA               	clrf	fsr2h,c
 14358  00512A  06DE               	decf	postinc2,f,c
 14359  00512C  0E00               	movlw	0
 14360  00512E  5ADD               	subwfb	postdec2,f,c
 14361  005130                     l5417:
 14362                           
 14363                           ;mcc_generated_files/tmr6.c: 207:  }
 14364                           ;stkvar	_i @ sp[(-1)+0]
 14365  005130  0EFF               	movlw	-1
 14366  005132  2AE3               	incf	plusw1,f,c
 14367                           
 14368                           ;stkvar	_i @ sp[(-1)+0]
 14369  005134  0EFF               	movlw	-1
 14370  005136  006F FF8C  F03C    	movff	plusw1,btemp
 14371  00513C  0E05               	movlw	5
 14372  00513E  643C               	cpfsgt	btemp,c
 14373  005140  D7E2               	goto	l5413
 14374                           
 14375                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14376  005142  52E5               	movf	postdec1,f,c
 14377  005144  0012               	return		;funcret
 14378  005146                     __end_of_TMR6_DefaultInterruptHandler:
 14379                           	opt callstack 0
 14380                           
 14381 ;; *************** function _DMA1_DMASCNT_ISR *****************
 14382 ;; Defined at:
 14383 ;;		line 126 in file "mcc_generated_files/dma1.c"
 14384 ;; Parameters:    Size  Location     Type
 14385 ;;		None
 14386 ;; Auto vars:     Size  Location     Type
 14387 ;;		None
 14388 ;; Return value:  Size  Location     Type
 14389 ;;                  1    wreg      void 
 14390 ;; Registers used:
 14391 ;;		None
 14392 ;; Tracked objects:
 14393 ;;		On entry : 0/0
 14394 ;;		On exit  : 3F/0
 14395 ;;		Unchanged: 0/0
 14396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14401 ;;Total ram usage:        0 bytes
 14402 ;; Hardware stack levels used:    1
 14403 ;; This function calls:
 14404 ;;		Nothing
 14405 ;; This function is called by:
 14406 ;;		Interrupt level 2
 14407 ;; This function uses a non-reentrant model
 14408 ;;
 14409                           
 14410                           	psect	text97
 14411  005968                     __ptext97:
 14412                           	opt callstack 0
 14413  005968                     _DMA1_DMASCNT_ISR:
 14414                           	opt callstack 19
 14415                           
 14416                           ;incstack = 0
 14417  005968  EE13  F130         	lfsr	1,___inthi_sp
 14418                           
 14419                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 14420  00596C  0139               	movlb	57	; () banked
 14421  00596E  91A2               	bcf	162,0,b	;volatile
 14422                           
 14423                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 14424  005970  0100               	movlb	0	; () banked
 14425  005972  976D               	bcf	_spi_link& (0+255),3,b	;volatile
 14426                           
 14427                           ; BSR set to: 0
 14428  005974  0011               	retfie		f
 14429  005976                     __end_of_DMA1_DMASCNT_ISR:
 14430                           	opt callstack 0
 14431                           
 14432 ;; *************** function _DMA1_DMADCNT_ISR *****************
 14433 ;; Defined at:
 14434 ;;		line 133 in file "mcc_generated_files/dma1.c"
 14435 ;; Parameters:    Size  Location     Type
 14436 ;;		None
 14437 ;; Auto vars:     Size  Location     Type
 14438 ;;		None
 14439 ;; Return value:  Size  Location     Type
 14440 ;;                  1    wreg      void 
 14441 ;; Registers used:
 14442 ;;		None
 14443 ;; Tracked objects:
 14444 ;;		On entry : 0/0
 14445 ;;		On exit  : 3F/39
 14446 ;;		Unchanged: 0/0
 14447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14452 ;;Total ram usage:        0 bytes
 14453 ;; Hardware stack levels used:    1
 14454 ;; This function calls:
 14455 ;;		Nothing
 14456 ;; This function is called by:
 14457 ;;		Interrupt level 2
 14458 ;; This function uses a non-reentrant model
 14459 ;;
 14460                           
 14461                           	psect	text98
 14462  005980                     __ptext98:
 14463                           	opt callstack 0
 14464  005980                     _DMA1_DMADCNT_ISR:
 14465                           	opt callstack 19
 14466                           
 14467                           ; BSR set to: 0
 14468                           ;incstack = 0
 14469  005980  EE13  F130         	lfsr	1,___inthi_sp
 14470                           
 14471                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 14472  005984  0139               	movlb	57	; () banked
 14473  005986  93A2               	bcf	162,1,b	;volatile
 14474                           
 14475                           ; BSR set to: 57
 14476  005988  0011               	retfie		f
 14477  00598A                     __end_of_DMA1_DMADCNT_ISR:
 14478                           	opt callstack 0
 14479                           
 14480 ;; *************** function _DMA1_DMAA_ISR *****************
 14481 ;; Defined at:
 14482 ;;		line 143 in file "mcc_generated_files/dma1.c"
 14483 ;; Parameters:    Size  Location     Type
 14484 ;;		None
 14485 ;; Auto vars:     Size  Location     Type
 14486 ;;		None
 14487 ;; Return value:  Size  Location     Type
 14488 ;;                  1    wreg      void 
 14489 ;; Registers used:
 14490 ;;		None
 14491 ;; Tracked objects:
 14492 ;;		On entry : 0/0
 14493 ;;		On exit  : 3F/39
 14494 ;;		Unchanged: 0/0
 14495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14500 ;;Total ram usage:        0 bytes
 14501 ;; Hardware stack levels used:    1
 14502 ;; This function calls:
 14503 ;;		Nothing
 14504 ;; This function is called by:
 14505 ;;		Interrupt level 2
 14506 ;; This function uses a non-reentrant model
 14507 ;;
 14508                           
 14509                           	psect	text99
 14510  00598C                     __ptext99:
 14511                           	opt callstack 0
 14512  00598C                     _DMA1_DMAA_ISR:
 14513                           	opt callstack 19
 14514                           
 14515                           ; BSR set to: 57
 14516                           ;incstack = 0
 14517  00598C  EE13  F130         	lfsr	1,___inthi_sp
 14518                           
 14519                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 14520  005990  0139               	movlb	57	; () banked
 14521  005992  97A2               	bcf	162,3,b	;volatile
 14522                           
 14523                           ; BSR set to: 57
 14524  005994  0011               	retfie		f
 14525  005996                     __end_of_DMA1_DMAA_ISR:
 14526                           	opt callstack 0
 14527                           
 14528 ;; *************** function _DMA1_DMAOR_ISR *****************
 14529 ;; Defined at:
 14530 ;;		line 154 in file "mcc_generated_files/dma1.c"
 14531 ;; Parameters:    Size  Location     Type
 14532 ;;		None
 14533 ;; Auto vars:     Size  Location     Type
 14534 ;;		None
 14535 ;; Return value:  Size  Location     Type
 14536 ;;                  1    wreg      void 
 14537 ;; Registers used:
 14538 ;;		None
 14539 ;; Tracked objects:
 14540 ;;		On entry : 0/0
 14541 ;;		On exit  : 3F/39
 14542 ;;		Unchanged: 0/0
 14543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14548 ;;Total ram usage:        0 bytes
 14549 ;; Hardware stack levels used:    1
 14550 ;; This function calls:
 14551 ;;		Nothing
 14552 ;; This function is called by:
 14553 ;;		Interrupt level 2
 14554 ;; This function uses a non-reentrant model
 14555 ;;
 14556                           
 14557                           	psect	text100
 14558  005998                     __ptext100:
 14559                           	opt callstack 0
 14560  005998                     _DMA1_DMAOR_ISR:
 14561                           	opt callstack 19
 14562                           
 14563                           ; BSR set to: 57
 14564                           ;incstack = 0
 14565  005998  EE13  F130         	lfsr	1,___inthi_sp
 14566                           
 14567                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 14568  00599C  0139               	movlb	57	; () banked
 14569  00599E  95A2               	bcf	162,2,b	;volatile
 14570                           
 14571                           ; BSR set to: 57
 14572  0059A0  0011               	retfie		f
 14573  0059A2                     __end_of_DMA1_DMAOR_ISR:
 14574                           	opt callstack 0
 14575                           
 14576 ;; *************** function _TMR5_ISR *****************
 14577 ;; Defined at:
 14578 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 14579 ;; Parameters:    Size  Location     Type
 14580 ;;		None
 14581 ;; Auto vars:     Size  Location     Type
 14582 ;;		None
 14583 ;; Return value:  Size  Location     Type
 14584 ;;                  1    wreg      void 
 14585 ;; Registers used:
 14586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 14587 ;; Tracked objects:
 14588 ;;		On entry : 0/0
 14589 ;;		On exit  : 0/0
 14590 ;;		Unchanged: 0/0
 14591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14594 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14595 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14596 ;;Total ram usage:        1 bytes
 14597 ;; Hardware stack levels used:    1
 14598 ;; Hardware stack levels required when called:    2
 14599 ;; This function calls:
 14600 ;;		_TMR5_CallBack
 14601 ;;		_TMR5_WriteTimer
 14602 ;; This function is called by:
 14603 ;;		Interrupt level 2
 14604 ;; This function uses a non-reentrant model
 14605 ;;
 14606                           
 14607                           	psect	text101
 14608  005244                     __ptext101:
 14609                           	opt callstack 0
 14610  005244                     _TMR5_ISR:
 14611                           	opt callstack 17
 14612                           
 14613                           ; BSR set to: 57
 14614                           ;incstack = 0
 14615  005244  0060  F11C  F05D   	movff	btemp+11,??_TMR5_ISR
 14616  00524A  EE13  F130         	lfsr	1,___inthi_sp
 14617                           
 14618                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 14619  00524E  0139               	movlb	57	; () banked
 14620  005250  9DA8               	bcf	168,6,b	;volatile
 14621                           
 14622                           ; BSR set to: 57
 14623                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 14624  005252  0060  F0AF  FFE6   	movff	_timer5ReloadVal,postinc1
 14625  005258  0060  F0B3  FFE6   	movff	_timer5ReloadVal+1,postinc1
 14626  00525E  ECC4  F028         	call	_TMR5_WriteTimer	;wreg free
 14627                           
 14628                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 14629  005262  4A29               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 14630  005264  2A2A               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 14631  005266  502A               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 14632  005268  E104               	bnz	i2u462_40
 14633  00526A  0E32               	movlw	50
 14634  00526C  5C29               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 14635  00526E  A0D8               	btfss	status,0,c
 14636  005270  D004               	goto	i2l1135
 14637  005272                     i2u462_40:
 14638                           
 14639                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 14640  005272  EC7B  F02B         	call	_TMR5_CallBack	;wreg free
 14641                           
 14642                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 14643  005276  6A29               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 14644  005278  6A2A               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 14645  00527A                     i2l1135:
 14646  00527A  0060  F174  F047   	movff	??_TMR5_ISR,btemp+11
 14647  005280  0011               	retfie		f
 14648  005282                     __end_of_TMR5_ISR:
 14649                           	opt callstack 0
 14650                           
 14651 ;; *************** function _TMR5_WriteTimer *****************
 14652 ;; Defined at:
 14653 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 14654 ;; Parameters:    Size  Location     Type
 14655 ;;  timerVal        2  [STACK] unsigned short 
 14656 ;; Auto vars:     Size  Location     Type
 14657 ;;		None
 14658 ;; Return value:  Size  Location     Type
 14659 ;;                  1  [STACK] void 
 14660 ;; Registers used:
 14661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14662 ;; Tracked objects:
 14663 ;;		On entry : 3F/39
 14664 ;;		On exit  : 0/0
 14665 ;;		Unchanged: 0/0
 14666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14671 ;;Total ram usage:        0 bytes
 14672 ;; Hardware stack levels used:    1
 14673 ;; This function calls:
 14674 ;;		Nothing
 14675 ;; This function is called by:
 14676 ;;		_TMR5_ISR
 14677 ;; This function uses a reentrant model
 14678 ;;
 14679                           
 14680                           	psect	text102
 14681  005188                     __ptext102:
 14682                           	opt callstack 0
 14683  005188                     _TMR5_WriteTimer:
 14684                           	opt callstack 18
 14685                           
 14686                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 14687                           
 14688                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14689                           ;incstack = 0
 14690  005188  A49A               	btfss	16282,2,c	;volatile
 14691  00518A  D00F               	goto	l3823
 14692                           
 14693                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 14694  00518C  909A               	bcf	16282,0,c	;volatile
 14695                           
 14696                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 14697                           ;stkvar	_timerVal @ sp[(0)+-2]
 14698  00518E  0EFF               	movlw	255
 14699  005190  24E1               	addwf	fsr1l,w,c
 14700  005192  6ED9               	movwf	fsr2l,c
 14701  005194  0EFF               	movlw	255
 14702  005196  20E2               	addwfc	fsr1h,w,c
 14703  005198  6EDA               	movwf	fsr2h,c
 14704  00519A  50DF               	movf	indf2,w,c
 14705  00519C  6E99               	movwf	16281,c	;volatile
 14706                           
 14707                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 14708                           ;stkvar	_timerVal @ sp[(0)+-2]
 14709  00519E  0EFE               	movlw	-2
 14710  0051A0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 14711                           
 14712                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 14713  0051A6  809A               	bsf	16282,0,c	;volatile
 14714                           
 14715                           ;mcc_generated_files/tmr5.c: 141:  } else {
 14716  0051A8  D00C               	goto	l1118
 14717  0051AA                     l3823:
 14718                           
 14719                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 14720                           ;stkvar	_timerVal @ sp[(0)+-2]
 14721  0051AA  0EFF               	movlw	255
 14722  0051AC  24E1               	addwf	fsr1l,w,c
 14723  0051AE  6ED9               	movwf	fsr2l,c
 14724  0051B0  0EFF               	movlw	255
 14725  0051B2  20E2               	addwfc	fsr1h,w,c
 14726  0051B4  6EDA               	movwf	fsr2h,c
 14727  0051B6  50DF               	movf	indf2,w,c
 14728  0051B8  6E99               	movwf	16281,c	;volatile
 14729                           
 14730                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 14731                           ;stkvar	_timerVal @ sp[(0)+-2]
 14732  0051BA  0EFE               	movlw	-2
 14733  0051BC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 14734  0051C2                     l1118:
 14735                           
 14736                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 14737  0051C2  52E5               	movf	postdec1,f,c
 14738  0051C4  52E5               	movf	postdec1,f,c
 14739  0051C6  0012               	return		;funcret
 14740  0051C8                     __end_of_TMR5_WriteTimer:
 14741                           	opt callstack 0
 14742                           
 14743 ;; *************** function _TMR5_CallBack *****************
 14744 ;; Defined at:
 14745 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 14746 ;; Parameters:    Size  Location     Type
 14747 ;;		None
 14748 ;; Auto vars:     Size  Location     Type
 14749 ;;		None
 14750 ;; Return value:  Size  Location     Type
 14751 ;;                  1  [STACK] void 
 14752 ;; Registers used:
 14753 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 14754 ;; Tracked objects:
 14755 ;;		On entry : 0/39
 14756 ;;		On exit  : 0/0
 14757 ;;		Unchanged: 0/0
 14758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14763 ;;Total ram usage:        0 bytes
 14764 ;; Hardware stack levels used:    1
 14765 ;; Hardware stack levels required when called:    1
 14766 ;; This function calls:
 14767 ;;		Absolute function
 14768 ;;		_TMR5_DefaultInterruptHandler
 14769 ;; This function is called by:
 14770 ;;		_TMR5_ISR
 14771 ;; This function uses a reentrant model
 14772 ;;
 14773                           
 14774                           	psect	text103
 14775  0056F6                     __ptext103:
 14776                           	opt callstack 0
 14777  0056F6                     _TMR5_CallBack:
 14778                           	opt callstack 17
 14779                           
 14780                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 14781                           
 14782                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14783                           ;incstack = 0
 14784  0056F6  0100               	movlb	0	; () banked
 14785  0056F8  5190               	movf	_TMR5_InterruptHandler& (0+255),w,b
 14786  0056FA  1191               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 14787  0056FC  1192               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 14788  0056FE  B4D8               	btfsc	status,2,c
 14789  005700  0012               	return	
 14790                           
 14791                           ; BSR set to: 0
 14792                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 14793  005702  D801               	call	u414_48
 14794  005704  0012               	return	
 14795  005706                     u414_48:
 14796  005706  0005               	push	
 14797  005708  6EFA               	movwf	pclath,c
 14798  00570A  5190               	movf	_TMR5_InterruptHandler& (0+255),w,b
 14799  00570C  6EFD               	movwf	tosl,c
 14800  00570E  5191               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 14801  005710  6EFE               	movwf	tosh,c
 14802  005712  5192               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 14803  005714  6EFF               	movwf	tosu,c
 14804  005716  50FA               	movf	pclath,w,c
 14805  005718  0012               	return		;indir
 14806  00571A                     __end_of_TMR5_CallBack:
 14807                           	opt callstack 0
 14808                           
 14809 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 14810 ;; Defined at:
 14811 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 14812 ;; Parameters:    Size  Location     Type
 14813 ;;		None
 14814 ;; Auto vars:     Size  Location     Type
 14815 ;;		None
 14816 ;; Return value:  Size  Location     Type
 14817 ;;                  1  [STACK] void 
 14818 ;; Registers used:
 14819 ;;		wreg, status,2, status,0, btemp+11
 14820 ;; Tracked objects:
 14821 ;;		On entry : 3F/0
 14822 ;;		On exit  : 0/0
 14823 ;;		Unchanged: 0/0
 14824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14829 ;;Total ram usage:        0 bytes
 14830 ;; Hardware stack levels used:    1
 14831 ;; This function calls:
 14832 ;;		Nothing
 14833 ;; This function is called by:
 14834 ;;		_TMR5_Initialize
 14835 ;;		_TMR5_CallBack
 14836 ;; This function uses a reentrant model
 14837 ;;
 14838                           
 14839                           	psect	text104
 14840  0058CE                     __ptext104:
 14841                           	opt callstack 0
 14842  0058CE                     _TMR5_DefaultInterruptHandler:
 14843                           	opt callstack 17
 14844                           
 14845                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 14846                           
 14847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14848                           ;incstack = 0
 14849  0058CE  A0BE               	btfss	16318,0,c	;volatile
 14850  0058D0  D002               	goto	u404_40
 14851  0058D2  0E01               	movlw	1
 14852  0058D4  D001               	goto	u404_46
 14853  0058D6                     u404_40:
 14854  0058D6  0E00               	movlw	0
 14855  0058D8                     u404_46:
 14856  0058D8  0AFF               	xorlw	255
 14857  0058DA  6E47               	movwf	btemp+11,c
 14858  0058DC  50BE               	movf	16318,w,c	;volatile
 14859  0058DE  1847               	xorwf	btemp+11,w,c
 14860  0058E0  0BFE               	andlw	-2
 14861  0058E2  1847               	xorwf	btemp+11,w,c
 14862  0058E4  6EBE               	movwf	16318,c	;volatile
 14863                           
 14864                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14865  0058E6  0012               	return		;funcret
 14866  0058E8                     __end_of_TMR5_DefaultInterruptHandler:
 14867                           	opt callstack 0
 14868                           
 14869                           ;
 14870                           ; Interrupt Vector Table @ 0x8
 14871                           ;
 14872                           
 14873                           	psect	ivt0x8
 14874  000008                     __pivt0x8:
 14875                           	opt callstack 0
 14876  000008                     ivt0x8_base:
 14877                           	opt callstack 0
 14878                           
 14879                           ; Vector 0 : SWINT
 14880  000008  1672               	dw	_Default_ISR shr (0+2)
 14881                           
 14882                           ; Vector 1 : HLVD
 14883  00000A  1672               	dw	_Default_ISR shr (0+2)
 14884                           
 14885                           ; Vector 2 : OSF
 14886  00000C  1672               	dw	_Default_ISR shr (0+2)
 14887                           
 14888                           ; Vector 3 : CSW
 14889  00000E  1672               	dw	_Default_ISR shr (0+2)
 14890                           
 14891                           ; Vector 4 : NVM
 14892  000010  1672               	dw	_Default_ISR shr (0+2)
 14893                           
 14894                           ; Vector 5 : SCAN
 14895  000012  1672               	dw	_Default_ISR shr (0+2)
 14896                           
 14897                           ; Vector 6 : CRC
 14898  000014  1672               	dw	_Default_ISR shr (0+2)
 14899                           
 14900                           ; Vector 7 : IOC
 14901  000016  1672               	dw	_Default_ISR shr (0+2)
 14902                           
 14903                           ; Vector 8 : INT0
 14904  000018  164E               	dw	_INT0_ISR shr (0+2)
 14905                           
 14906                           ; Vector 9 : ZCD
 14907  00001A  1672               	dw	_Default_ISR shr (0+2)
 14908                           
 14909                           ; Vector 10 : AD
 14910  00001C  14FF               	dw	_ADCC_ISR shr (0+2)
 14911                           
 14912                           ; Vector 11 : ADT
 14913  00001E  1672               	dw	_Default_ISR shr (0+2)
 14914                           
 14915                           ; Vector 12 : CMP1
 14916  000020  1672               	dw	_Default_ISR shr (0+2)
 14917                           
 14918                           ; Vector 13 : SMT1
 14919  000022  1672               	dw	_Default_ISR shr (0+2)
 14920                           
 14921                           ; Vector 14 : SMT1PRA
 14922  000024  1672               	dw	_Default_ISR shr (0+2)
 14923                           
 14924                           ; Vector 15 : SMT1PRW
 14925  000026  1672               	dw	_Default_ISR shr (0+2)
 14926                           
 14927                           ; Vector 16 : DMA1SCNT
 14928  000028  165A               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 14929                           
 14930                           ; Vector 17 : DMA1DCNT
 14931  00002A  1660               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 14932                           
 14933                           ; Vector 18 : DMA1OR
 14934  00002C  1666               	dw	_DMA1_DMAOR_ISR shr (0+2)
 14935                           
 14936                           ; Vector 19 : DMA1A
 14937  00002E  1663               	dw	_DMA1_DMAA_ISR shr (0+2)
 14938                           
 14939                           ; Vector 20 : SPI1RX
 14940  000030  1672               	dw	_Default_ISR shr (0+2)
 14941                           
 14942                           ; Vector 21 : SPI1TX
 14943  000032  1672               	dw	_Default_ISR shr (0+2)
 14944                           
 14945                           ; Vector 22 : SPI1
 14946  000034  1672               	dw	_Default_ISR shr (0+2)
 14947                           
 14948                           ; Vector 23 : I2C1RX
 14949  000036  1672               	dw	_Default_ISR shr (0+2)
 14950                           
 14951                           ; Vector 24 : I2C1TX
 14952  000038  1672               	dw	_Default_ISR shr (0+2)
 14953                           
 14954                           ; Vector 25 : I2C1
 14955  00003A  1672               	dw	_Default_ISR shr (0+2)
 14956                           
 14957                           ; Vector 26 : I2C1E
 14958  00003C  1672               	dw	_Default_ISR shr (0+2)
 14959                           
 14960                           ; Vector 27 : U1RX
 14961  00003E  15A0               	dw	_UART1_rx_vect_isr shr (0+2)
 14962                           
 14963                           ; Vector 28 : U1TX
 14964  000040  1596               	dw	_UART1_tx_vect_isr shr (0+2)
 14965                           
 14966                           ; Vector 29 : U1E
 14967  000042  1672               	dw	_Default_ISR shr (0+2)
 14968                           
 14969                           ; Vector 30 : U1
 14970  000044  1672               	dw	_Default_ISR shr (0+2)
 14971                           
 14972                           ; Vector 31 : TMR0
 14973  000046  1672               	dw	_Default_ISR shr (0+2)
 14974                           
 14975                           ; Vector 32 : TMR1
 14976  000048  1672               	dw	_Default_ISR shr (0+2)
 14977                           
 14978                           ; Vector 33 : TMR1G
 14979  00004A  1672               	dw	_Default_ISR shr (0+2)
 14980                           
 14981                           ; Vector 34 : TMR2
 14982  00004C  1672               	dw	_Default_ISR shr (0+2)
 14983                           
 14984                           ; Vector 35 : CCP1
 14985  00004E  1672               	dw	_Default_ISR shr (0+2)
 14986                           
 14987                           ; Vector 36 : Undefined
 14988  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 14989                           
 14990                           ; Vector 37 : NCO1
 14991  000052  1672               	dw	_Default_ISR shr (0+2)
 14992                           
 14993                           ; Vector 38 : CWG1
 14994  000054  1672               	dw	_Default_ISR shr (0+2)
 14995                           
 14996                           ; Vector 39 : CLC1
 14997  000056  1672               	dw	_Default_ISR shr (0+2)
 14998                           
 14999                           ; Vector 40 : INT1
 15000  000058  1652               	dw	_INT1_ISR shr (0+2)
 15001                           
 15002                           ; Vector 41 : CMP2
 15003  00005A  1672               	dw	_Default_ISR shr (0+2)
 15004                           
 15005                           ; Vector 42 : DMA2SCNT
 15006  00005C  1672               	dw	_Default_ISR shr (0+2)
 15007                           
 15008                           ; Vector 43 : DMA2DCNT
 15009  00005E  1672               	dw	_Default_ISR shr (0+2)
 15010                           
 15011                           ; Vector 44 : DMA2OR
 15012  000060  1672               	dw	_Default_ISR shr (0+2)
 15013                           
 15014                           ; Vector 45 : DMA2A
 15015  000062  1672               	dw	_Default_ISR shr (0+2)
 15016                           
 15017                           ; Vector 46 : I2C2RX
 15018  000064  1672               	dw	_Default_ISR shr (0+2)
 15019                           
 15020                           ; Vector 47 : I2C2TX
 15021  000066  1672               	dw	_Default_ISR shr (0+2)
 15022                           
 15023                           ; Vector 48 : I2C2
 15024  000068  1672               	dw	_Default_ISR shr (0+2)
 15025                           
 15026                           ; Vector 49 : I2C2E
 15027  00006A  1672               	dw	_Default_ISR shr (0+2)
 15028                           
 15029                           ; Vector 50 : U2RX
 15030  00006C  15B4               	dw	_UART2_rx_vect_isr shr (0+2)
 15031                           
 15032                           ; Vector 51 : U2TX
 15033  00006E  15AA               	dw	_UART2_tx_vect_isr shr (0+2)
 15034                           
 15035                           ; Vector 52 : U2E
 15036  000070  1672               	dw	_Default_ISR shr (0+2)
 15037                           
 15038                           ; Vector 53 : U2
 15039  000072  1672               	dw	_Default_ISR shr (0+2)
 15040                           
 15041                           ; Vector 54 : TMR3
 15042  000074  1672               	dw	_Default_ISR shr (0+2)
 15043                           
 15044                           ; Vector 55 : TMR3G
 15045  000076  1672               	dw	_Default_ISR shr (0+2)
 15046                           
 15047                           ; Vector 56 : TMR4
 15048  000078  1672               	dw	_Default_ISR shr (0+2)
 15049                           
 15050                           ; Vector 57 : CCP2
 15051  00007A  1672               	dw	_Default_ISR shr (0+2)
 15052                           
 15053                           ; Vector 58 : Undefined
 15054  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 15055                           
 15056                           ; Vector 59 : CWG2
 15057  00007E  1672               	dw	_Default_ISR shr (0+2)
 15058                           
 15059                           ; Vector 60 : CLC2
 15060  000080  1672               	dw	_Default_ISR shr (0+2)
 15061                           
 15062                           ; Vector 61 : INT2
 15063  000082  1656               	dw	_INT2_ISR shr (0+2)
 15064                           
 15065                           ; Vector 62 : Undefined
 15066  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 15067                           
 15068                           ; Vector 63 : Undefined
 15069  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 15070                           
 15071                           ; Vector 64 : Undefined
 15072  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 15073                           
 15074                           ; Vector 65 : Undefined
 15075  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 15076                           
 15077                           ; Vector 66 : Undefined
 15078  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 15079                           
 15080                           ; Vector 67 : Undefined
 15081  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 15082                           
 15083                           ; Vector 68 : Undefined
 15084  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 15085                           
 15086                           ; Vector 69 : Undefined
 15087  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 15088                           
 15089                           ; Vector 70 : TMR5
 15090  000094  1491               	dw	_TMR5_ISR shr (0+2)
 15091                           
 15092                           ; Vector 71 : TMR5G
 15093  000096  1672               	dw	_Default_ISR shr (0+2)
 15094                           
 15095                           ; Vector 72 : TMR6
 15096  000098  162D               	dw	_TMR6_ISR shr (0+2)
 15097                           
 15098                           ; Vector 73 : CCP3
 15099  00009A  1672               	dw	_Default_ISR shr (0+2)
 15100                           
 15101                           ; Vector 74 : CWG3
 15102  00009C  1672               	dw	_Default_ISR shr (0+2)
 15103                           
 15104                           ; Vector 75 : CLC3
 15105  00009E  1672               	dw	_Default_ISR shr (0+2)
 15106                           
 15107                           ; Vector 76 : Undefined
 15108  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 15109                           
 15110                           ; Vector 77 : Undefined
 15111  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 15112                           
 15113                           ; Vector 78 : Undefined
 15114  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 15115                           
 15116                           ; Vector 79 : Undefined
 15117  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 15118                           
 15119                           ; Vector 80 : CCP4
 15120  0000A8  1672               	dw	_Default_ISR shr (0+2)
 15121                           
 15122                           ; Vector 81 : CLC4
 15123  0000AA  1672               	dw	_Default_ISR shr (0+2)
 15124  0000AC                     ivt0x8_undefint:
 15125                           	opt callstack 0
 15126  0000AC  00FF               	reset	
 15127                           
 15128                           	psect	text105
 15129  000000                     __ptext105:
 15130                           	opt callstack 0
 15131                           
 15132                           	psect	rparam
 15133  0000                     
 15134                           	psect	temp
 15135  00003C                     btemp:
 15136                           	opt callstack 0
 15137  00003C                     	ds	32
 15138  0000                     wtemp0	set	btemp
 15139  0000                     wtemp1	set	btemp+2
 15140  0000                     wtemp2	set	btemp+4
 15141  0000                     wtemp3	set	btemp+6
 15142  0000                     wtemp4	set	btemp+8
 15143  0000                     wtemp5	set	btemp+10
 15144  0000                     wtemp8	set	btemp+1
 15145  0000                     ttemp0	set	btemp
 15146  0000                     ttemp1	set	btemp+3
 15147  0000                     ttemp2	set	btemp+6
 15148  0000                     ttemp3	set	btemp+9
 15149  0000                     ttemp5	set	btemp+1
 15150  0000                     ttemp6	set	btemp+4
 15151  0000                     ttemp7	set	btemp+8
 15152  0000                     ltemp0	set	btemp
 15153  0000                     ltemp1	set	btemp+4
 15154  0000                     ltemp2	set	btemp+8
 15155  0000                     lltemp0	set	btemp
 15156  0000                     lltemp1	set	btemp+8
 15157  0000                     lltemp2	set	btemp+16
 15158  0000                     lltemp3	set	btemp+24
 15159                           tosu	equ	0x3FFF
 15160                           tosh	equ	0x3FFE
 15161                           tosl	equ	0x3FFD
 15162                           stkptr	equ	0x3FFC
 15163                           pclatu	equ	0x3FFB
 15164                           pclath	equ	0x3FFA
 15165                           pcl	equ	0x3FF9
 15166                           tblptru	equ	0x3FF8
 15167                           tblptrh	equ	0x3FF7
 15168                           tblptrl	equ	0x3FF6
 15169                           tablat	equ	0x3FF5
 15170                           prodh	equ	0x3FF4
 15171                           prodl	equ	0x3FF3
 15172                           indf0	equ	0x3FEF
 15173                           postinc0	equ	0x3FEE
 15174                           postdec0	equ	0x3FED
 15175                           preinc0	equ	0x3FEC
 15176                           plusw0	equ	0x3FEB
 15177                           fsr0h	equ	0x3FEA
 15178                           fsr0l	equ	0x3FE9
 15179                           wreg	equ	0x3FE8
 15180                           indf1	equ	0x3FE7
 15181                           postinc1	equ	0x3FE6
 15182                           postdec1	equ	0x3FE5
 15183                           preinc1	equ	0x3FE4
 15184                           plusw1	equ	0x3FE3
 15185                           fsr1h	equ	0x3FE2
 15186                           fsr1l	equ	0x3FE1
 15187                           bsr	equ	0x3FE0
 15188                           indf2	equ	0x3FDF
 15189                           postinc2	equ	0x3FDE
 15190                           postdec2	equ	0x3FDD
 15191                           preinc2	equ	0x3FDC
 15192                           plusw2	equ	0x3FDB
 15193                           fsr2h	equ	0x3FDA
 15194                           fsr2l	equ	0x3FD9
 15195                           status	equ	0x3FD8


Data Sizes:
    Strings     162
    Constant    0
    Data        239
    BSS         622
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      2      62
    BANK0           160      0     148
    BANK1           256      0     207
    BANK2           256      0     248
    BANK3           256      0     198
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H12(BANK1[30]), H10(BANK1[65]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_21(CODE[3]), STR_17(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_21(CODE[3]), STR_17(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[19]), STR_8(CODE[20]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[19]), STR_8(CODE[20]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 86
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[86]), 

    a	PTR const unsigned char  size(2) Largest target is 86
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[86]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_11(CODE[21]), STR_10(CODE[17]), STR_9(CODE[19]), STR_8(CODE[20]), 
		 -> STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4249_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[19]), STR_8(CODE[20]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[21]), 
		 -> STR_10(CODE[17]), STR_9(CODE[19]), STR_8(CODE[20]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), STR_5(CODE[14]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[86]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[86]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[86]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16609.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H12(BANK1[30]), H10(BANK1[65]), 

    F16609.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    t_link	PTR enum E16163 size(1) Largest target is 86
		 -> V(BANK0[86]), 

    S3578response_type$reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H12(BANK1[30]), H10(BANK1[65]), 

    F16598.reply	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H12(BANK1[30]), H10(BANK1[65]), 

    S3578response_type$header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    F16598.header	PTR unsigned char  size(2) Largest target is 65
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK1[16]), 
		 -> H12(BANK1[30]), H10(BANK1[65]), 

    r_link	PTR enum E16163 size(1) Largest target is 86
		 -> V(BANK0[86]), 

    byte_block	PTR unsigned char  size(2) Largest target is 65
		 -> H53(BANK2[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[30]), H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    strPtr	PTR unsigned char  size(1) Largest target is 86
		 -> V(BANK0[86]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1984spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1984spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   40635
                  _SYSTEM_Initialize
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _r_protocol
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    1748
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                            9     5      4     864
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      31
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     186
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19     9     10    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1     833
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      62
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      37
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     172
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      30
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      30
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      15
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      45
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      15
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      15
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              1 COMRAM     1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F8       9       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      CF       7       80.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      94       5       92.5%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      2      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     35F      58        0.0%
DATA                 0      0     35F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Mar 13 00:43:41 2019

                    _SPI1_Exchange8bit 5826                                      _V 0097  
     __end_of_TMR5_SetInterruptHandler 55B6                            __CFG_CP$OFF 000000  
              __size_of_ringBufS_flush 0092                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 0141  
                                  _H13 019F                                    _H14 018E  
                                  _H24 015F                                    _H17 017A  
                                  _H53 02C0                                    l194 590E  
                                  l572 5230                                    l717 53A0  
                                  l579 51DE                                    l597 5374  
                                  l847 5834                                    _GIE 01FE97  
                                  u940 4DB8                                    u965 4DEC  
                                  u966 4DEE                                    u958 4DBA  
                                  _abs 5074                                    _pad 4252  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 575E  
                         _run_checksum 52F6                     _UART1_Transmit_ISR 534E  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 5780  
                         __CFG_ZCD$OFF 000000                                   l1118 51C2  
                                 l1230 2BAC                                   l1215 2AA2  
                                 l1232 2BB0                                   l1225 2B42  
                                 l1236 2C96                                   l1237 2CC2  
                                 l1433 4CB0                                   l1505 3042  
                                 l1429 4910                                   l2430 50B4  
                                 l1542 381A                                   l1297 4F40  
                                 l2452 4468                                   l1716 33C2  
                                 l1556 3976                                   l1735 2548  
                                 l5033 4126                                   l1577 40B8  
                                 l2484 4248                                   l1669 42AE  
                                 l5037 4156                                   l1689 2630  
                                 l5129 4F52                                   l5413 5106  
                                 l3823 51AA                                   l5423 53E6  
                                 l5417 5130                                   l7201 3B24  
                                 l7211 3B46                                   l4821 35F8  
                                 l5269 5734                                   l7213 3B6C  
                                 l7301 3CA6                                   l7231 3B90  
                                 l4833 3692                                   l4809 50A4  
                                 l7233 3BAA                                   l4827 364C  
                                 l7155 4AA6                                   l4845 3764  
                                 l5485 5304                                   l7261 3BE2  
                                 l7181 3ACC                                   l7431 5802  
                                 l4767 493E                                   l7263 3C20  
                                 l7167 3A8E                                   l7441 5822  
                                 l4769 4960                                   l4881 3E50  
                                 l4873 3DA4                                   l4865 3D1C  
                                 l6705 266A                                   l7249 3BC8  
                                 l6643 4BDC                                   l7099 5208  
                                 l7603 31EC                                   l7187 3AEA  
                                 l5781 539C                                   l6629 4396  
                                 l6653 42A6                                   l6709 2688  
                                 l6901 2EDC                                   l7373 4036  
                                 l7365 3F88                                   l5759 5370  
                                 l6639 4B9E                                   l6663 433E  
                                 l6655 42B8                                   l6671 4CD6  
                                 l6743 2988                                   l6719 289A  
                                 l7623 326C                                   l7287 3C5A  
                                 l6649 427E                                   l6673 4D02  
                                 l6841 23DE                                   l6825 2266  
                                 l6817 2182                                   l6921 4B10  
                                 l7625 3270                                   l7553 3098  
                                 l7545 3068                                   l7529 300C  
                                 l7385 408A                                   l7377 4050  
                                 l7713 39AE                                   l7705 3992  
                                 l6659 42F4                                   l6739 294C  
                                 l6771 33F8                                   l6755 3344  
                                 l6851 2486                                   l6923 4B52  
                                 l7619 3256                                   l7571 30F6  
                                 l7555 30A4                                   l7635 3284  
                                 l7299 3C74                                   l7387 40B2  
                                 l7731 3A06                                   l6861 24DE  
                                 l6829 22B8                                   l6909 2F8A  
                                 l7629 327C                                   l7637 32C6  
                                 l7733 3A0A                                   l7709 39A6  
                                 l7741 3A28                                   l6775 3434  
                                 l7591 31C4                                   l7583 3176  
                                 l7575 311A                                   l7567 30D8  
                                 l7735 3A12                                   l7719 39CA  
                                 l7743 3A6A                                   l6697 2620  
                                 l6793 3556                                   l6785 34EE  
                                 l6857 24DA                                   l7593 31C8  
                                 l6961 53C8                                   l7737 3A1A  
                                 l7729 39F8                                   l7681 38E2  
                                 l7665 3876                                   l7657 3846  
                                 l7833 2B0A                                   l7817 2AAA  
                                 l6779 3464                                   l6867 24FA  
                                 l6947 51FE                                   l7579 3146  
                                 l7683 38EE                                   l7667 3888  
                                 l7843 2B36                                   l7835 2B0E  
                                 l6789 351A                                   l6949 5200  
                                 l6981 4576                                   l7677 38CA  
                                 l7861 2B94                                   l6895 2E72  
                                 l7695 394C                                   l7687 3914  
                                 l7839 2B1E                                   l7791 2A04  
                                 l6889 2DB4                                   l6985 45E8  
                                 l7857 2B7E                                   l7883 2C68  
                                 l7875 2BFE                                   l7779 29E2  
                                 l7877 2C30                                   l7889 2C82  
                                 l7899 2C9A                                   STR_1 204E  
                                 STR_2 207C                                   STR_3 2094  
                                 STR_4 205F                                   STR_5 206E  
                                 STR_6 208E                                   STR_7 2088  
                                 STR_8 2016                                   STR_9 202A  
                                 u2000 36BE                                   u2020 379C  
                                 u2100 3D9E                                   u2110 3DD0  
                                 u2040 37EE                                   u2130 3E88  
                                 _LATA 003FBA                                   u2150 3EDA  
                                 u2070 3D16                                   _LATB 003FBB  
                                 _LATC 003FBC                                   _LATD 003FBD  
                                 _LATE 003FBE                                   u2090 3D6C  
                                 _LATF 003FBF                                   u4050 4A96  
                                 u4070 3F82                                   u4305 3236  
                                 u1930 5088                                   u3610 2606  
                                 u2490 41FE                                   u4307 323A  
                                 u3460 438A                                   u1860 498E  
                                 u3700 2922                                   u1950 35F2  
                                 u3630 2656                                   u3480 4406  
                                 u3640 28AE                                   u3560 2582  
                                 u1970 3648                                   u3570 2584  
                                 u3810 357C                                   _T6PR 003F93  
                                 u1867 4980                                   u3651 28DE  
                                 u3660 28F4                                   _PMD0 0039C0  
                                 u1981 3652                                   u3661 28F2  
                                 u4285 3216                                   u4381 3908  
                                 _PMD1 0039C1                                   u1990 368C  
                                 u3670 2908                                   u3590 25F4  
                                 u4550 2B18                                   _PMD2 0039C2  
                                 u4295 3226                                   u4287 321A  
                                 _PMD3 0039C3                                   u3680 290C  
                                 _PMD4 0039C4                                   u4297 322A  
                                 _PMD5 0039C5                                   u3770 345A  
                                 u3850 21D2                                   _PMD6 0039C6  
                                 _PMD7 0039C7                                   u3780 34A0  
                                 u3940 2FFE                                   u3870 2310  
                                 u4590 2B4E                                   u3787 3492  
                                 u4596 2B50                                   _PLLR 01CEE0  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                        _INT2_CallBack 57A2                       __end_of_ADCC_ISR 5426  
                        __CFG_FCMEN$ON 000000                                   _dbuf 01AF  
                                 _ctoa 4CB8                                   _main 29D2  
                                 _dtoa 2552                                   _prec 0025  
                                 _nout 0093                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 32D8                                   btemp 003C  
    __size_of_INT2_SetInterruptHandler 0028                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 002B  
            __end_of_SPI1_Exchange8bit 5844                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 5680                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 005C  
           __size_of_UART1_is_tx_ready 0008                       __end_of_INT0_ISR 5946  
                     __end_of_INT1_ISR 5956                       __end_of_INT2_ISR 5966  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 4918  
        __end_of_OSCILLATOR_Initialize 5914                                  PRLOCK 0039EF  
                      __end_of___aodiv 3816                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 3EFE                                  _ADPCH 003EF1  
                                _ADREF 003EFD                                  STR_10 203D  
                                STR_11 2001                                  STR_12 2085  
                                STR_21 209D                                  STR_13 20A0  
                                STR_15 209A                                  STR_17 209A  
                        __CFG_WDTE$OFF 000000                                  STR_19 209D  
                                _ADRPT 003EEC                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _U1UIR 003DF8  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 005C  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 59C8      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 5658                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 5282                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 58CE                           _DMA1CON1bits 003BFD  
                   r_protocol@rxData_l 002F                                  _flags 0027  
                                _fputc 4366             __size_of_send_lcd_cmd_long 0028  
                                _fputs 4B8E                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 005C                                  _width 0023  
                                _putch 5898               _INT1_SetInterruptHandler 55DE  
                                pclath 003FFA                                  tablat 003FF5  
              __size_of_DSM_Initialize 001C                                  ltemp0 003C  
                                ltemp1 0040                                  ltemp2 0044  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 003C  
                                ttemp1 003F                                  ttemp2 0042  
                                ttemp3 0045                                  ttemp5 003D  
                                ttemp6 0040                                  ttemp7 0044  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 553E  
          _UART1_SetRxInterruptHandler 5516                                  wtemp0 003C  
                                wtemp1 003E                                  wtemp2 0040  
                                wtemp3 0042                                  wtemp4 0044  
                                wtemp5 0046                                  wtemp8 003D  
                      __end_of_sprintf 47BE                        __end_of_strncmp 4252  
                  ??_UART1_tx_vect_isr 005C              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 56A6               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 50BA                  __end_of_ringBufS_init 549E  
                      __initialization 462E                      _UART2_rx_vect_isr 56D0  
                         __end_of_ctoa 4D40                           __end_of_main 2D1C  
                         __end_of_dtoa 29D2                           __end_of_stoa 3596  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005C  
             _TMR5_SetInterruptHandler 558E                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005C              __end_of_UART1_tx_vect_isr 567E  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 553E  
                     _UART1_Initialize 4E10                      _UART2_tx_vect_isr 56A8  
                   _UART2_Transmit_ISR 537A                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005C  
                               _MD1SRC 003CFC                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                               u112_48 576C                                 i2l1135 527A  
                               u114_48 578E                         __CFG_WDTCCS$SC 000000  
                               u116_48 57B0                                 u404_40 58D6  
                               u404_46 58D8                                 _SCANPR 0039F7  
                               u414_48 5706                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
                               u293_48 57D2           __size_of_eaDogM_WriteCommand 000E  
                               _OSCFRQ 0039DF               __end_of_send_lcd_cmd_dma 4FDE  
                  ??_UART2_tx_vect_isr 005C              __end_of_UART2_rx_vect_isr 56F6  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 5976  
                     _UART2_Initialize 4ED6                                 _WaitMs 53D0  
 __size_of_ADCC_SetADIInterruptHandler 0028                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 4C26                                 _memset 2D1C  
                               clear_0 46AE                                 clear_1 46BA  
                               clear_2 46C6                                 clear_3 46D2  
                               clear_4 46DE                                 _printf 4E74  
                   _eaDogM_WriteString 4A5A                              ?_ADCC_ISR 005C  
                               _strlen 4918                     __size_of_TimerDone 0022  
                      _ADCC_Initialize 502A                         _PMD_Initialize 5914  
 __end_of_INT2_DefaultInterruptHandler 59D4  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 59D2                           __pdataCOMRAM 005E  
            __end_of_UART2_tx_vect_isr 56CE                                 lltemp0 003C  
                               lltemp1 0044                                 lltemp2 004C  
                               lltemp3 0054                           __mediumconst 0000  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 4F90  
                     __end_of_vfprintf 4B8E                             _StartTimer 5282  
                      _CLC1_Initialize 573C          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 5100                      _SYSTEM_Initialize 5146  
                           __accesstop 0060                __end_of__initialization 46F0  
                            ?_INT0_ISR 005C                              ?_INT1_ISR 005C  
                            ?_INT2_ISR 005C              __end_of_CLKREF_Initialize 5980  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 5188                 __end_of_ringBufS_flush 4CB8  
                       __pcstackCOMRAM 005C                             ___inthi_sp 0D30  
                         __pidataBANK0 59B2                           __pidataBANK1 47BE  
                         __pidataBANK2 52BE                              ?_TMR5_ISR 005C  
                            ?_TMR6_ISR 005C                         ivt0x8_undefint 00AC  
                        __end_of_fputc 4472                          __end_of_fputs 4C26  
                __end_of_TMR5_CallBack 571A                          __end_of_putch 58B2  
              __end_of_TMR6_Initialize 5566                 __end_of_PMD_Initialize 5928  
              __size_of_block_checksum 00D2                             ??_ADCC_ISR 005C  
                __end_of_TMR6_CallBack 57E6            __size_of_EXT_INT_Initialize 004C  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 598C  
     __end_of_INT2_SetInterruptHandler 55DE               _UART2_RxInterruptHandler 0017  
            __end_of_SYSTEM_Initialize 5188                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                         _DSM_Initialize 587C  
                           __pbssBANK0 0060                             __pbssBANK1 01AF  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                _INT0_InterruptHandler 0020                             ??_INT0_ISR 005C  
                           ??_INT1_ISR 005C                             ??_INT2_ISR 005C  
                    __end_of_TimerDone 573C                       _DMA1_DMADCNT_ISR 5980  
            __size_of_UART1_put_buffer 002A             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                  __end_of_wait_lcd_done 5860  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 558E  
              __end_of_ADCC_Initialize 5074                             ??_TMR5_ISR 005D  
                           ??_TMR6_ISR 005C                     __size_of_secs_send 01C4  
                              _CLC1CON 003C74                                _CLC1POL 003C75  
                              _DMA1DSA 003BF0                                _DMA1DSZ 003BEE  
                              _DMA1SSA 003BF9                                _DMA1SSZ 003BF7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                              _MD1CARH 003CFE                                _MD1CARL 003CFD  
                    _UART1_Receive_ISR 57E6                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                                _NCO1CLK 003F3F  
                       ?_DMA1_DMAA_ISR 005C                       _DMA1_DMASCNT_ISR 5968  
                              _NCO1CON 003F3E                                _U1ERRIE 003DFA  
                              _U1ERRIR 003DF9                __end_of_CLC1_Initialize 575E  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                                _INT2PPS 003AC2  
                         ?_Default_ISR 005C                   __size_of_UART1_Write 003E  
           __size_of_UART2_tx_vect_isr 0026                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 04AE                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                 __end_of_DSM_Initialize 5898  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 51C8  
                   __end_of_UART1_Read 5244      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000                                __Lparam 0000  
             __end_of_UART1_Initialize 4E74                        __size_of_WaitMs 002A  
                              ___aodiv 3596                                ___aomod 3CBE  
            __end_of_UART1_Receive_ISR 5806                           __psmallconst 2000  
                 __end_of_init_display 455C                                __pcinit 462E  
                      __size_of_memset 02EC                    _eaDogM_WriteCommand 5928  
                              __ramtop 2000            __size_of_UART1_Transmit_ISR 002C  
             __size_of_NCO1_Initialize 001C                                __ptext0 29D2  
                              __ptext1 3816                                __ptext2 3EFE  
                              __ptext3 455C                                __ptext4 53A6  
                              __ptext5 59A2                                __ptext6 3A7C  
                              __ptext7 46F6                                __ptext8 3008  
                              __ptext9 52F6                      _UART2_Receive_ISR 5806  
                      __size_of_printf 0062                        __CFG_WRTAPP$OFF 000000  
                      __size_of_strlen 00A2                                us205999 3800  
                              us216999 3EEC                                us406999 3CB0  
                              us355999 256C                  _OSCILLATOR_Initialize 58FE  
                              us372999 32EA                           __size_of_abs 0046  
                              _r_block 0060                           __size_of_pad 0114  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 4F34             __size_of_SYSTEM_Initialize 0042  
                              _sprintf 46F6                                _strncmp 40C2  
                 end_of_initialization 46F0                      __end_of_secs_send 40C2  
             _INT2_SetInterruptHandler 55B6               __size_of_secs_II_message 0242  
                           _r_protocol 3008    __end_of_UART1_SetTxInterruptHandler 5516  
          _UART1_SetTxInterruptHandler 54EE    __end_of_UART2_SetRxInterruptHandler 54EE  
          _UART2_SetRxInterruptHandler 54C6                             _t_protocol 3816  
                    __end_of_vfpfcnvrt 2552                              _SPI1TCNTL 003D12  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE                    __size_of_StartTimer 003C  
                    __end_of_start_lcd 59C6              __end_of_UART2_Receive_ISR 5826  
                       wdtdelay@dcount 008C                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 005D                         _block_checksum 455C  
                _INT1_InterruptHandler 001D                              _PORTDbits 003FCD  
             _TMR6_SetInterruptHandler 5566                  _TMR5_InterruptHandler 0090  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 002A  
  __end_of_ADCC_SetADIInterruptHandler 5656            _ADCC_SetADIInterruptHandler 562E  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
                      _DMA1_Initialize 4D40                        _SPI1_Initialize 58E8  
                     _UART1_put_buffer 53A6                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                      __size_of_INT2_ISR 000E  
                       __end_of_WaitMs 53FA           __end_of_INTERRUPT_Initialize 4E10  
               __end_of_block_checksum 462E   __end_of_INT0_DefaultInterruptHandler 59D0  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 59CE  
           __size_of_UART1_Receive_ISR 0020                          __pidataCOMRAM 59D6  
                    __size_of_TMR5_ISR 003E                      __size_of_TMR6_ISR 001A  
          __size_of_UART2_Transmit_ISR 002C                         __end_of_memset 3008  
                       __end_of_printf 4ED6               __end_of_DMA1_DMADCNT_ISR 598A  
                __end_of_INT0_CallBack 5780                         __end_of_strlen 49BA  
                  start_initialization 462E   __end_of_TMR5_DefaultInterruptHandler 58E8  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 58CE  
      __size_of_PIN_MANAGER_Initialize 00A0                            __end_of_abs 50BA  
                __end_of_INT1_CallBack 57A2                            __end_of_pad 4366  
                 __size_of_Default_ISR 0006                   __end_of_send_lcd_cmd 5476  
                           ivt0x8_base 0008                  __end_of_INT2_CallBack 57C4  
                 secs_II_message@block 0001                          _uart1RxBuffer 0240  
                        _uart2RxBuffer 0300                          _uart1TxBuffer 0280  
             __end_of_DMA1_DMASCNT_ISR 5976                          _uart2TxBuffer 0200  
                       _DMA1_DMAOR_ISR 5998                       __CFG_LPBOREN$OFF 000000  
                __size_of_init_display 00EA            __size_of_eaDogM_WriteString 009C  
                            _TimerDone 571A                          _ringBufS_init 5476  
                          _MD1CON0bits 003CFA                            _MD1CON1bits 003CFB  
                          __pdataBANK0 00ED                            __pdataBANK1 0100  
                          __pdataBANK2 02C0             __size_of_UART2_Receive_ISR 0020  
           __end_of_EXT_INT_Initialize 502A                        run_checksum@sum 0095  
      __end_of_eaDogM_WriteStringAtPos 534E                __end_of_DMA1_Initialize 4DAA  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 562E  
              __end_of_SPI1_Initialize 58FE               _UART1_RxInterruptHandler 0011  
             _UART2_TxInterruptHandler 0014              __size_of_ringBufS_put_dma 00AA  
                         _init_display 4472                 __end_of_DMA1_DMAOR_ISR 59A2  
               __size_of_TMR5_CallBack 0024                  _INT2_InterruptHandler 001A  
                _TMR6_InterruptHandler 0008                 __size_of_TMR6_CallBack 0022  
               _PIN_MANAGER_Initialize 49BA                   __end_of_wait_lcd_set 59C0  
                            __ptext100 5998                              __ptext101 5244  
                            __ptext102 5188                              __ptext103 56F6  
                            __ptext104 58CE                              __ptext105 0000  
                   __end_of_StartTimer 52BE                      __size_of_wdtdelay 005C  
                    __size_of_vfprintf 0098                               _ADCC_ISR 53FC  
                  __size_of_r_protocol 02D0                 __CFG_BBSIZE$BBSIZE_512 000000  
                          __smallconst 2000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 0266                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 010C                         __size_of_fputs 0098  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 4DAA                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 005C  
                             _INT0_ISR 5938                               _INT1_ISR 5948  
                             _INT2_ISR 5958                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 3EFE  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 0079  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                             i2u161_48 5412                              _ring_buf1 0383  
                            _ring_buf2 0340                               i2u331_48 56BA  
                             i2u327_48 566A                               _PIR1bits 0039A1  
                             i2u450_48 56E2                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               i2u462_40 5272  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               i2u448_48 5692  
                             _PIR5bits 0039A5                               _PIR7bits 0039A7  
                             _PIR8bits 0039A8                               _PIR9bits 0039A9  
             __size_of_TMR5_Initialize 0046             __end_of_UART1_Transmit_ISR 537A  
                             _TMR5_ISR 5244                               _TMR6_ISR 58B4  
                            _vfpfcnvrt 20A4                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 56F6                              _start_lcd 59C0  
            __size_of_send_lcd_cmd_dma 004E                          _TMR6_CallBack 57C4  
             __end_of_UART1_put_buffer 53D0                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                    __end_of_UART1_Write 5206  
             __size_of_TMR6_Initialize 0028                            _INTCON0bits 003FD2  
                            copy_data0 4642                              copy_data1 4664  
                            copy_data2 4686               _INT0_SetInterruptHandler 5606  
               _uart1TxBufferRemaining 0039    __end_of_UART2_SetTxInterruptHandler 54C6  
          _UART2_SetTxInterruptHandler 549E                           _uart1RxCount 0036  
                         _uart2RxCount 0030                               __Hrparam 0000  
     __size_of_eaDogM_WriteStringAtPos 002C                __CFG_RSTOSC$EXTOSC_4PLL 000000  
                 __end_of_run_checksum 5322                               __Lrparam 0000  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 5844  
                         _send_lcd_cmd 544E                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 5860  
                __end_of_DMA1_DMAA_ISR 5996   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 005C               __size_of_ADCC_Initialize 004A  
          __end_of_eaDogM_WriteCommand 5936                               __pivt0x8 0008  
                   ??_DMA1_DMADCNT_ISR 005D                               __ptext10 53D0  
                             __ptext11 571A                               __ptext20 5476  
                             __ptext12 5282                               __ptext21 5322  
                             __ptext13 59AA                               __ptext30 2D1C  
                             __ptext22 4A5A                               __ptext14 51C8  
                             __ptext31 4E74                               __ptext23 5928  
                             __ptext15 5206                               __ptext40 4CB8  
                             __ptext32 4AF6                               __ptext24 4F90  
                             __ptext16 4472                               __ptext41 4252  
                             __ptext33 20A4                               __ptext25 59BA  
                             __ptext17 5426                               __ptext50 54C6  
                             __ptext42 4918                               __ptext34 40C2  
                             __ptext26 5844                               __ptext18 544E  
                             __ptext51 4E10                               __ptext43 4B8E  
                             __ptext35 32D8                               __ptext27 4F34  
                             __ptext19 5826                               __ptext60 49BA  
                             __ptext52 54EE                               __ptext44 4366  
                             __ptext36 2552                               __ptext28 59C0  
                             __ptext61 58FE                               __ptext53 5516  
                             __ptext45 5898                               __ptext37 5074  
                             __ptext29 4C26                               __ptext70 5976  
                             __ptext62 5860                               __ptext54 553E  
                             __ptext46 486E                               __ptext38 3CBE  
                             __ptext71 573C                               __ptext63 4DAA  
                             __ptext55 5566                               __ptext47 5146  
                             __ptext39 3596                               __ptext80 5958  
                             __ptext72 502A                               __ptext64 4FDE  
                             __ptext56 50BA                               __ptext48 4ED6  
                             __ptext81 57A2                               __ptext73 562E  
                             __ptext65 55B6                               __ptext57 558E  
                             __ptext49 549E                               __ptext90 56A8  
                             __ptext82 59D2                               __ptext74 5938  
                             __ptext66 55DE                               __ptext58 58E8  
                             __ptext91 537A                               __ptext83 59C8  
                             __ptext75 575E                               __ptext67 5606  
                             __ptext59 5914                               __ptext92 56D0  
                             __ptext84 53FC                               __ptext76 59CE  
                             __ptext68 587C                               __ptext93 5806  
                             __ptext85 59D4                               __ptext77 5948  
                             __ptext69 4D40                               __ptext94 58B4  
                             __ptext86 5658                               __ptext78 5780  
                             __ptext95 57C4                               __ptext87 534E  
                             __ptext79 59D0                               __ptext96 5100  
                             __ptext88 5680                               __ptext97 5968  
                             __ptext89 57E6                               __ptext98 5980  
                             __ptext99 598C                        _secs_II_message 3A7C  
             __size_of_CLC1_Initialize 0022                       __size_of_sprintf 00C8  
                     __size_of_strncmp 0190                       _ringBufS_put_dma 486E  
                        __size_of_ctoa 0088                          __size_of_main 034A  
                        __size_of_dtoa 0480                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 005C                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 000B  
                            stoa@F1142 00ED                     ??_DMA1_DMASCNT_ISR 005D  
                             _spi_link 006D                               _wdtdelay 4F34  
           __end_of_UART2_Transmit_ISR 53A6                               _vfprintf 4AF6  
                    _UART1_is_rx_ready 59AA                            _UART1_Write 51C8  
 __end_of_INT1_DefaultInterruptHandler 59D2  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 59D0                      _UART1_is_tx_ready 59A2  
                      r_protocol@retry 005E                      t_protocol@requeue 002D  
                        ??_Default_ISR 005C                     __end_of_r_protocol 32D8  
                          _uart1RxHead 0038                            _uart1TxHead 003B  
                          _uart2RxHead 0032                            _uart1RxTail 0037  
                          _uart2TxHead 0035                            _uart1TxTail 003A  
                          _uart2RxTail 0031                            _uart2TxTail 0034  
                         _wait_lcd_set 59BA                     _EXT_INT_Initialize 4FDE  
 __end_of_TMR6_DefaultInterruptHandler 5146  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 5100                     __end_of_t_protocol 3A7C  
 __end_of_ADCC_DefaultInterruptHandler 59D6  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 59D4                               intlevel2 0000  
                    _send_lcd_cmd_long 5426                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 4AF6                __end_of_NCO1_Initialize 587C  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF              __end_of_UART1_is_rx_ready 59B2  
                           _UART1_Read 5206                 __size_of_INT1_CallBack 0022  
            __end_of_UART1_is_tx_ready 59AA                 __size_of_INT2_CallBack 0022  
               _uart2TxBufferRemaining 0033                       _send_lcd_cmd_dma 4F90  
                TMR5_ISR@CountCallBack 0029                __end_of_secs_II_message 3CBE  
     __end_of_INT1_SetInterruptHandler 5606              __size_of_UART1_Initialize 0064  
                      t_protocol@block 0085                       ??_DMA1_DMAOR_ISR 005D  
             _UART1_TxInterruptHandler 000E                        t_protocol@retry 002E  
            __end_of_send_lcd_cmd_long 544E                    __end_of_Default_ISR 59CE  
       __end_of_PIN_MANAGER_Initialize 4A5A                  __size_of_run_checksum 002C  
              _eaDogM_WriteStringAtPos 5322              __size_of_UART2_Initialize 005E  
