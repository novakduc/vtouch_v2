

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jan  3 04:43:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=4,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=4,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=4,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text157,global,reloc=4,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=4,class=CODE,delta=1
   182                           	psect	text161,global,reloc=4,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	text165,global,reloc=4,class=CODE,delta=1
   187                           	psect	text166,global,reloc=4,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=4,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=4,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=4,class=CODE,delta=1
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=4,class=CODE,delta=1
   197                           	psect	text176,global,reloc=4,class=CODE,delta=1
   198                           	psect	text177,global,reloc=4,class=CODE,delta=1
   199                           	psect	text178,global,reloc=4,class=CODE,delta=1
   200                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   201                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   202                           	psect	text179,global,reloc=4,class=CODE,delta=1
   203                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   204                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   205  0000                     
   206                           ; Version 2.10
   207                           ; Generated 31/07/2019 GMT
   208                           ; 
   209                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   210                           ; All rights reserved.
   211                           ; 
   212                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   213                           ; 
   214                           ; Redistribution and use in source and binary forms, with or without modification, are
   215                           ; permitted provided that the following conditions are met:
   216                           ; 
   217                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   218                           ;        conditions and the following disclaimer.
   219                           ; 
   220                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   221                           ;        of conditions and the following disclaimer in the documentation and/or other
   222                           ;        materials provided with the distribution.
   223                           ; 
   224                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   225                           ;        software without specific prior written permission.
   226                           ; 
   227                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   228                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   229                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   230                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   231                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   232                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   233                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   234                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   235                           ; 
   236                           ; 
   237                           ; Code-generator required, PIC18F57K42 Definitions
   238                           ; 
   239                           ; SFR Addresses
   240  0000                     
   241 ;;_main$3756	offset	0
   242 ;;_main$3752	offset	2
   243 ;;_esr_temp	offset	4
   244 ;;_i_esr	offset	8
   245 ;;_shape	offset	10
   246 ;;_k	offset	11
   247 ;;_j	offset	12
   248 ;;_i	offset	13
   249 ;;_inp_index	offset	14
   250 ;;_mode	offset	15
   251 ;;_i_ror	offset	16
   252 ;;_s	offset=-2 (param)
   253 ;;_c	offset	0
   254 ;;_shape	offset=-1 (param)
   255 ;;_reset	offset=-2 (param)
   256 ;;_z	offset	0
   257 ;;_data	offset=-1 (param)
   258 ;;_cmd	offset=-1 (param)
   259 ;;_cmd	offset=-1 (param)
   260 ;;_data	offset=-1 (param)
   261 ;;__this	offset=-2 (param)
   262 ;;_soc	offset	0
   263 ;;_slot	offset	4
   264 ;;_cvoltage	offset=-4 (param)
   265 ;;_h	offset=-1 (param)
   266 ;;_h	offset=-1 (param)
   267 ;;_i	offset=-1 (param)
   268 ;;_fsm	offset=-1 (param)
   269 ;;_channel	offset=-1 (param)
   270 ;;_mode	offset=-1 (param)
   271 ;;_mode	offset=-1 (param)
   272 ;;_cmd	offset=-1 (param)
   273 ;;_i	offset	0
   274 ;;_h	offset=-1 (param)
   275 ;;_flipper	offset=-1 (param)
   276 ;;_f	offset	0
   277 ;;_ap	offset	6
   278 ;;_s	offset=-3 (param)
   279 ;;_fmt	offset=-5 (param)
   280 ;;_line	offset=-1 (param)
   281 ;;_vterm	offset=-2 (param)
   282 ;;_numMilliseconds	offset=-2 (param)
   283 ;;_vterm	offset=-1 (param)
   284 ;;_row	offset	0
   285 ;;_r	offset=-1 (param)
   286 ;;_c	offset=-2 (param)
   287 ;;_strPtr	offset=-4 (param)
   288 ;;_strPtr	offset=-1 (param)
   289 ;;_delay	offset=-4 (param)
   290 ;;_strPtr	offset=-1 (param)
   291 ;;_strPtr	offset=-2 (param)
   292 ;;__this	offset=-2 (param)
   293 ;;_clearBuffer	offset=-3 (param)
   294 ;;_s	offset	0
   295 ;;_k	offset	2
   296 ;;_dest	offset=-2 (param)
   297 ;;_c	offset=-4 (param)
   298 ;;_n	offset=-6 (param)
   299 ;;_ap	offset	0
   300 ;;_fmt	offset=-3 (param)
   301 ;;_cfmt	offset	0
   302 ;;_fp	offset=-2 (param)
   303 ;;_fmt	offset=-4 (param)
   304 ;;_ap	offset=-6 (param)
   305 ;;_vfpfcnvrt$5594	offset	0
   306 ;;_vfpfcnvrt$5605	offset	2
   307 ;;_vfpfcnvrt$5593	offset	4
   308 ;;_llu	offset	6
   309 ;;_ll	offset	14
   310 ;;_f	offset	22
   311 ;;_ct	offset	26
   312 ;;_cp	offset	29
   313 ;;_c	offset	31
   314 ;;_fp	offset=-2 (param)
   315 ;;_fmt	offset=-4 (param)
   316 ;;_ap	offset=-6 (param)
   317 ;;_xtoa$5579	offset	0
   318 ;;_xtoa$5578	offset	2
   319 ;;_n	offset	4
   320 ;;_c	offset	12
   321 ;;_i	offset	14
   322 ;;_w	offset	16
   323 ;;_p	offset	18
   324 ;;_fp	offset=-2 (param)
   325 ;;_d	offset=-10 (param)
   326 ;;_x	offset=-11 (param)
   327 ;;_toupper$6385	offset	0
   328 ;;_c	offset=-2 (param)
   329 ;;_c	offset=-2 (param)
   330 ;;_c	offset=-2 (param)
   331 ;;_n	offset	0
   332 ;;_i	offset	8
   333 ;;_w	offset	10
   334 ;;_p	offset	12
   335 ;;_fp	offset=-2 (param)
   336 ;;_d	offset=-10 (param)
   337 ;;_counter	offset	0
   338 ;;_dividend	offset=-8 (param)
   339 ;;_divisor	offset=-16 (param)
   340 ;;_quotient	offset	0
   341 ;;_counter	offset	8
   342 ;;_dividend	offset=-8 (param)
   343 ;;_divisor	offset=-16 (param)
   344 ;;_r	offset	0
   345 ;;_l	offset	2
   346 ;;__l	offset=-2 (param)
   347 ;;__r	offset=-4 (param)
   348 ;;_n	offset=-6 (param)
   349 ;;_nuls	offset	0
   350 ;;_l	offset	7
   351 ;;_p	offset	9
   352 ;;_cp	offset	11
   353 ;;_w	offset	13
   354 ;;_i	offset	15
   355 ;;_fp	offset=-2 (param)
   356 ;;_s	offset=-4 (param)
   357 ;;_efgtoa$5551	offset	0
   358 ;;_efgtoa$5550	offset	2
   359 ;;_efgtoa$5549	offset	4
   360 ;;_efgtoa$5545	offset	6
   361 ;;_efgtoa$5541	offset	8
   362 ;;_efgtoa$5540	offset	10
   363 ;;_u	offset	12
   364 ;;_g	offset	16
   365 ;;_l	offset	20
   366 ;;_h	offset	24
   367 ;;_ou	offset	28
   368 ;;_n	offset	32
   369 ;;_e	offset	34
   370 ;;_i	offset	36
   371 ;;_w	offset	38
   372 ;;_p	offset	40
   373 ;;_sign	offset	42
   374 ;;_d	offset	44
   375 ;;_ne	offset	46
   376 ;;_m	offset	48
   377 ;;_pp	offset	50
   378 ;;_t	offset	52
   379 ;;_mode	offset	54
   380 ;;_nmode	offset	55
   381 ;;_fp	offset=-2 (param)
   382 ;;_f	offset=-6 (param)
   383 ;;_c	offset=-7 (param)
   384 ;;_tolower$6370	offset	0
   385 ;;_c	offset=-2 (param)
   386 ;;_c	offset=-2 (param)
   387 ;;_d	offset	0
   388 ;;_s	offset	2
   389 ;;_dest	offset=-2 (param)
   390 ;;_src	offset=-4 (param)
   391 ;;_u	offset	0
   392 ;;_m	offset	4
   393 ;;_e	offset	8
   394 ;;_x	offset=-4 (param)
   395 ;;_u	offset	0
   396 ;;_e	offset	4
   397 ;;_x	offset=-4 (param)
   398 ;;_exp1	offset	0
   399 ;;_sign1	offset	1
   400 ;;_f1	offset=-4 (param)
   401 ;;_f1	offset=-4 (param)
   402 ;;_ff1	offset=-4 (param)
   403 ;;_ff2	offset=-8 (param)
   404 ;;_sign	offset	0
   405 ;;_counter	offset	1
   406 ;;_dividend	offset=-2 (param)
   407 ;;_divisor	offset=-4 (param)
   408 ;;_quotient	offset	0
   409 ;;_sign	offset	2
   410 ;;_counter	offset	3
   411 ;;_dividend	offset=-2 (param)
   412 ;;_divisor	offset=-4 (param)
   413 ;;_dtoa$5517	offset	0
   414 ;;_n	offset	2
   415 ;;_i	offset	10
   416 ;;_s	offset	12
   417 ;;_w	offset	14
   418 ;;_p	offset	16
   419 ;;_fp	offset=-2 (param)
   420 ;;_d	offset=-10 (param)
   421 ;;_a	offset=-2 (param)
   422 ;;_sign	offset	0
   423 ;;_counter	offset	1
   424 ;;_dividend	offset=-8 (param)
   425 ;;_divisor	offset=-16 (param)
   426 ;;_quotient	offset	0
   427 ;;_sign	offset	8
   428 ;;_counter	offset	9
   429 ;;_dividend	offset=-8 (param)
   430 ;;_divisor	offset=-16 (param)
   431 ;;_w	offset	0
   432 ;;_fp	offset=-2 (param)
   433 ;;_c	offset=-3 (param)
   434 ;;_w	offset	0
   435 ;;_i	offset	2
   436 ;;_fp	offset=-2 (param)
   437 ;;_buf	offset=-4 (param)
   438 ;;_p	offset=-6 (param)
   439 ;;_a	offset	0
   440 ;;_s	offset=-2 (param)
   441 ;;_i	offset	0
   442 ;;_c	offset	2
   443 ;;_s	offset=-2 (param)
   444 ;;_fp	offset=-4 (param)
   445 ;;_c	offset=-2 (param)
   446 ;;_fp	offset=-4 (param)
   447 ;;_c	offset=-1 (param)
   448 ;;__this	offset=-2 (param)
   449 ;;_c	offset=-3 (param)
   450 ;;_atoi$6101	offset	0
   451 ;;_atoi$6099	offset	2
   452 ;;_atoi$6100	offset	4
   453 ;;_n	offset	5
   454 ;;_neg	offset	7
   455 ;;_s	offset=-2 (param)
   456 ;;_isspace$6150	offset	0
   457 ;;_c	offset=-2 (param)
   458 ;;_c	offset=-2 (param)
   459 ;;_vterm	offset=-1 (param)
   460 ;;_new_response_info	offset=-1 (param)
   461 ;;_new_response_info	offset=-1 (param)
   462 ;;_level	offset=-2 (param)
   463 ;;_dutyValue	offset=-2 (param)
   464 ;;_timer	offset=-1 (param)
   465 ;;_timer	offset=-1 (param)
   466 ;;_count	offset=-3 (param)
   467 ;;_h	offset=-1 (param)
   468 ;;_u	offset	0
   469 ;;_x	offset=-4 (param)
   470 ;;_chan	offset=-1 (param)
   471 ;;_to_what	offset=-2 (param)
   472 ;;_u	offset	0
   473 ;;_s	offset=-2 (param)
   474 ;;_index	offset=-1 (param)
   475 ;;_arg	offset	0
   476 ;;_exp	offset	4
   477 ;;_sign	offset=-1 (param)
   478 ;;_val	offset=-5 (param)
   479 ;;_grs	offset	0
   480 ;;_rem	offset	4
   481 ;;_new_exp	offset	8
   482 ;;_aexp	offset	10
   483 ;;_bexp	offset	11
   484 ;;_sign	offset	12
   485 ;;_b	offset=-4 (param)
   486 ;;_a	offset=-8 (param)
   487 ;;_ff1	offset=-4 (param)
   488 ;;_ff2	offset=-8 (param)
   489 ;;_lp_speed	offset	0
   490 ;;_new	offset=-4 (param)
   491 ;;_bn	offset=-5 (param)
   492 ;;_slow	offset=-6 (param)
   493 ;;_b	offset=-4 (param)
   494 ;;_a	offset=-8 (param)
   495 ;;_grs	offset	0
   496 ;;_bexp	offset	1
   497 ;;_aexp	offset	2
   498 ;;_signs	offset	3
   499 ;;_b	offset=-4 (param)
   500 ;;_a	offset=-8 (param)
   501 ;;_prod	offset	0
   502 ;;_grs	offset	4
   503 ;;_temp	offset	8
   504 ;;_bexp	offset	10
   505 ;;_aexp	offset	11
   506 ;;_sign	offset	12
   507 ;;_b	offset=-4 (param)
   508 ;;_a	offset=-8 (param)
   509 ;;_InterruptHandler	offset=-3 (param)
   510 ;;_InterruptHandler	offset=-3 (param)
   511 ;;_InterruptHandler	offset=-3 (param)
   512 ;;_InterruptHandler	offset=-3 (param)
   513 ;;_InterruptHandler	offset=-3 (param)
   514 ;;_InterruptHandler	offset=-3 (param)
   515 ;;_state	offset	0
   516 ;;_InterruptHandler	offset=-3 (param)
   517 ;;_InterruptHandler	offset=-3 (param)
   518 ;;_InterruptHandler	offset=-3 (param)
   519 ;;_InterruptHandler	offset=-3 (param)
   520 ;;_i	offset	0
   521 ;;_sw_value	offset	1
   522 ;;_timerVal	offset=-2 (param)
   523 ;;_light	offset	0
   524 ;;_mode	offset=-1 (param)
   525 ;;_chan	offset=-1 (param)
   526 ;;_to_what	offset=-2 (param)
   527 ;;_u	offset	0
   528 ;;_s	offset=-2 (param)
   529 ;;_index	offset=-1 (param)
   530 ;;_arg	offset	0
   531 ;;_exp	offset	4
   532 ;;_sign	offset=-1 (param)
   533 ;;_val	offset=-5 (param)
   534 ;;_b	offset=-4 (param)
   535 ;;_a	offset=-8 (param)
   536 ;;_grs	offset	0
   537 ;;_bexp	offset	1
   538 ;;_aexp	offset	2
   539 ;;_signs	offset	3
   540 ;;_b	offset=-4 (param)
   541 ;;_a	offset=-8 (param)
   542 ;;_prod	offset	0
   543 ;;_grs	offset	4
   544 ;;_temp	offset	8
   545 ;;_bexp	offset	10
   546 ;;_aexp	offset	11
   547 ;;_sign	offset	12
   548 ;;_b	offset=-4 (param)
   549 ;;_a	offset=-8 (param)
   550 ;;_grs	offset	0
   551 ;;_rem	offset	4
   552 ;;_new_exp	offset	8
   553 ;;_aexp	offset	10
   554 ;;_bexp	offset	11
   555 ;;_sign	offset	12
   556 ;;_b	offset=-4 (param)
   557 ;;_a	offset=-8 (param)
   558 ;;_ff1	offset=-4 (param)
   559 ;;_ff2	offset=-8 (param)
   560 ;;_timerVal	offset=-2 (param)
   561 ;;_adj	offset	0
   562 ;;_log_ptr	offset	4
   563 ;;_f	offset	0
   564 ;;_ap	offset	6
   565 ;;_s	offset=-3 (param)
   566 ;;_fmt	offset=-5 (param)
   567 ;;_cfmt	offset	0
   568 ;;_fp	offset=-2 (param)
   569 ;;_fmt	offset=-4 (param)
   570 ;;_ap	offset=-6 (param)
   571 ;;_vfpfcnvrt$5594	offset	0
   572 ;;_vfpfcnvrt$5605	offset	2
   573 ;;_vfpfcnvrt$5593	offset	4
   574 ;;_llu	offset	6
   575 ;;_ll	offset	14
   576 ;;_f	offset	22
   577 ;;_ct	offset	26
   578 ;;_cp	offset	29
   579 ;;_c	offset	31
   580 ;;_fp	offset=-2 (param)
   581 ;;_fmt	offset=-4 (param)
   582 ;;_ap	offset=-6 (param)
   583 ;;_xtoa$5579	offset	0
   584 ;;_xtoa$5578	offset	2
   585 ;;_n	offset	4
   586 ;;_c	offset	12
   587 ;;_i	offset	14
   588 ;;_w	offset	16
   589 ;;_p	offset	18
   590 ;;_fp	offset=-2 (param)
   591 ;;_d	offset=-10 (param)
   592 ;;_x	offset=-11 (param)
   593 ;;_toupper$6385	offset	0
   594 ;;_c	offset=-2 (param)
   595 ;;_c	offset=-2 (param)
   596 ;;_c	offset=-2 (param)
   597 ;;_n	offset	0
   598 ;;_i	offset	8
   599 ;;_w	offset	10
   600 ;;_p	offset	12
   601 ;;_fp	offset=-2 (param)
   602 ;;_d	offset=-10 (param)
   603 ;;_counter	offset	0
   604 ;;_dividend	offset=-8 (param)
   605 ;;_divisor	offset=-16 (param)
   606 ;;_quotient	offset	0
   607 ;;_counter	offset	8
   608 ;;_dividend	offset=-8 (param)
   609 ;;_divisor	offset=-16 (param)
   610 ;;_r	offset	0
   611 ;;_l	offset	2
   612 ;;__l	offset=-2 (param)
   613 ;;__r	offset=-4 (param)
   614 ;;_n	offset=-6 (param)
   615 ;;_nuls	offset	0
   616 ;;_l	offset	7
   617 ;;_p	offset	9
   618 ;;_cp	offset	11
   619 ;;_w	offset	13
   620 ;;_i	offset	15
   621 ;;_fp	offset=-2 (param)
   622 ;;_s	offset=-4 (param)
   623 ;;_efgtoa$5551	offset	0
   624 ;;_efgtoa$5550	offset	2
   625 ;;_efgtoa$5549	offset	4
   626 ;;_efgtoa$5545	offset	6
   627 ;;_efgtoa$5541	offset	8
   628 ;;_efgtoa$5540	offset	10
   629 ;;_u	offset	12
   630 ;;_g	offset	16
   631 ;;_l	offset	20
   632 ;;_h	offset	24
   633 ;;_ou	offset	28
   634 ;;_n	offset	32
   635 ;;_e	offset	34
   636 ;;_i	offset	36
   637 ;;_w	offset	38
   638 ;;_p	offset	40
   639 ;;_sign	offset	42
   640 ;;_d	offset	44
   641 ;;_ne	offset	46
   642 ;;_m	offset	48
   643 ;;_pp	offset	50
   644 ;;_t	offset	52
   645 ;;_mode	offset	54
   646 ;;_nmode	offset	55
   647 ;;_fp	offset=-2 (param)
   648 ;;_f	offset=-6 (param)
   649 ;;_c	offset=-7 (param)
   650 ;;_tolower$6370	offset	0
   651 ;;_c	offset=-2 (param)
   652 ;;_c	offset=-2 (param)
   653 ;;_d	offset	0
   654 ;;_s	offset	2
   655 ;;_dest	offset=-2 (param)
   656 ;;_src	offset=-4 (param)
   657 ;;_u	offset	0
   658 ;;_m	offset	4
   659 ;;_e	offset	8
   660 ;;_x	offset=-4 (param)
   661 ;;_u	offset	0
   662 ;;_e	offset	4
   663 ;;_x	offset=-4 (param)
   664 ;;_exp1	offset	0
   665 ;;_sign1	offset	1
   666 ;;_f1	offset=-4 (param)
   667 ;;_f1	offset=-4 (param)
   668 ;;_ff1	offset=-4 (param)
   669 ;;_ff2	offset=-8 (param)
   670 ;;_sign	offset	0
   671 ;;_counter	offset	1
   672 ;;_dividend	offset=-2 (param)
   673 ;;_divisor	offset=-4 (param)
   674 ;;_quotient	offset	0
   675 ;;_sign	offset	2
   676 ;;_counter	offset	3
   677 ;;_dividend	offset=-2 (param)
   678 ;;_divisor	offset=-4 (param)
   679 ;;_dtoa$5517	offset	0
   680 ;;_n	offset	2
   681 ;;_i	offset	10
   682 ;;_s	offset	12
   683 ;;_w	offset	14
   684 ;;_p	offset	16
   685 ;;_fp	offset=-2 (param)
   686 ;;_d	offset=-10 (param)
   687 ;;_a	offset=-2 (param)
   688 ;;_sign	offset	0
   689 ;;_counter	offset	1
   690 ;;_dividend	offset=-8 (param)
   691 ;;_divisor	offset=-16 (param)
   692 ;;_quotient	offset	0
   693 ;;_sign	offset	8
   694 ;;_counter	offset	9
   695 ;;_dividend	offset=-8 (param)
   696 ;;_divisor	offset=-16 (param)
   697 ;;_w	offset	0
   698 ;;_fp	offset=-2 (param)
   699 ;;_c	offset=-3 (param)
   700 ;;_w	offset	0
   701 ;;_i	offset	2
   702 ;;_fp	offset=-2 (param)
   703 ;;_buf	offset=-4 (param)
   704 ;;_p	offset=-6 (param)
   705 ;;_a	offset	0
   706 ;;_s	offset=-2 (param)
   707 ;;_i	offset	0
   708 ;;_c	offset	2
   709 ;;_s	offset=-2 (param)
   710 ;;_fp	offset=-4 (param)
   711 ;;_c	offset=-2 (param)
   712 ;;_fp	offset=-4 (param)
   713 ;;_c	offset=-1 (param)
   714 ;;__this	offset=-2 (param)
   715 ;;_c	offset=-3 (param)
   716 ;;_atoi$6101	offset	0
   717 ;;_atoi$6099	offset	2
   718 ;;_atoi$6100	offset	4
   719 ;;_n	offset	5
   720 ;;_neg	offset	7
   721 ;;_s	offset=-2 (param)
   722 ;;_isspace$6150	offset	0
   723 ;;_c	offset=-2 (param)
   724 ;;_c	offset=-2 (param)
   725 ;;_dsize	offset=-2 (param)
   726 ;;_u	offset	0
   727 ;;_x	offset=-4 (param)
   728 ;;_f1p	offset=-2 (param)
   729 ;;_f2	offset=-6 (param)
   730 ;;_timer	offset=-1 (param)
   731 ;;_count	offset=-3 (param)
   732 ;;_channel	offset=-1 (param)
   733 ;;_i	offset	0
   734                           
   735                           	psect	idataBIGRAM
   736  016B00                     __pidataBIGRAM:
   737                           	opt callstack 0
   738                           
   739                           ;initializer for _port_data
   740  016B00  FF                 	db	255
   741  016B01  00                 	db	0
   742  016B02  FF                 	db	255
   743  016B03  00                 	db	0
   744  016B04  FF                 	db	255
   745  016B05  00                 	db	0
   746  016B06  FF                 	db	255
   747  016B07  00                 	db	0
   748  016B08  FF                 	db	255
   749  016B09  00                 	db	0
   750  016B0A  FF                 	db	255
   751  016B0B  00                 	db	0
   752  016B0C  FF                 	db	255
   753  016B0D  00                 	db	0
   754  016B0E  FF                 	db	255
   755  016B0F  00                 	db	0
   756  016B10  00                 	db	0
   757  016B11  00                 	db	0
   758  016B12  00                 	db	0
   759  016B13  00                 	db	0
   760  016B14  00                 	db	0
   761  016B15  00                 	db	0
   762  016B16  00                 	db	0
   763  016B17  00                 	db	0
   764  016B18  00                 	db	0
   765  016B19  00                 	db	0
   766  016B1A  00                 	db	0
   767  016B1B  00                 	db	0
   768  016B1C  00                 	db	0
   769  016B1D  00                 	db	0
   770  016B1E  00                 	db	0
   771  016B1F  00                 	db	0
   772  016B20  00                 	db	0
   773  016B21  00                 	db	0
   774  016B22  00                 	db	0
   775  016B23  00                 	db	0
   776  016B24  00                 	db	0
   777  016B25  00                 	db	0
   778  016B26  00                 	db	0
   779  016B27  00                 	db	0
   780  016B28  00                 	db	0
   781  016B29  00                 	db	0
   782  016B2A  00                 	db	0
   783  016B2B  00                 	db	0
   784  016B2C  00                 	db	0
   785  016B2D  00                 	db	0
   786  016B2E  00                 	db	0
   787  016B2F  00                 	db	0
   788  016B30  00                 	db	0
   789  016B31  00                 	db	0
   790  016B32  00                 	db	0
   791  016B33  00                 	db	0
   792  016B34  00                 	db	0
   793  016B35  00                 	db	0
   794  016B36  00                 	db	0
   795  016B37  00                 	db	0
   796  016B38  00                 	db	0
   797  016B39  00                 	db	0
   798  016B3A  00                 	db	0
   799  016B3B  00                 	db	0
   800  016B3C  00                 	db	0
   801  016B3D  00                 	db	0
   802  016B3E  00                 	db	0
   803  016B3F  00                 	db	0
   804  016B40  00                 	db	0
   805  016B41  00                 	db	0
   806  016B42  00                 	db	0
   807  016B43  00                 	db	0
   808  016B44  00                 	db	0
   809  016B45  00                 	db	0
   810  016B46  00                 	db	0
   811  016B47  00                 	db	0
   812  016B48  00                 	db	0
   813  016B49  00                 	db	0
   814  016B4A  00                 	db	0
   815  016B4B  00                 	db	0
   816  016B4C  00                 	db	0
   817  016B4D  00                 	db	0
   818  016B4E  00                 	db	0
   819  016B4F  00                 	db	0
   820  016B50  00                 	db	0
   821  016B51  00                 	db	0
   822  016B52  00                 	db	0
   823  016B53  00                 	db	0
   824  016B54  00                 	db	0
   825  016B55  00                 	db	0
   826  016B56  00                 	db	0
   827  016B57  00                 	db	0
   828  016B58  00                 	db	0
   829  016B59  00                 	db	0
   830  016B5A  00                 	db	0
   831  016B5B  00                 	db	0
   832  016B5C  00                 	db	0
   833  016B5D  00                 	db	0
   834  016B5E  00                 	db	0
   835  016B5F  00                 	db	0
   836  016B60  00                 	db	0
   837  016B61  00                 	db	0
   838  016B62  00                 	db	0
   839  016B63  00                 	db	0
   840  016B64  00                 	db	0
   841  016B65  00                 	db	0
   842  016B66  00                 	db	0
   843  016B67  00                 	db	0
   844  016B68  00                 	db	0
   845  016B69  00                 	db	0
   846  016B6A  00                 	db	0
   847  016B6B  00                 	db	0
   848  016B6C  00                 	db	0
   849  016B6D  00                 	db	0
   850  016B6E  00                 	db	0
   851  016B6F  00                 	db	0
   852  016B70  00                 	db	0
   853  016B71  00                 	db	0
   854  016B72  00                 	db	0
   855  016B73  00                 	db	0
   856  016B74  00                 	db	0
   857  016B75  00                 	db	0
   858  016B76  00                 	db	0
   859  016B77  00                 	db	0
   860  016B78  00                 	db	0
   861  016B79  00                 	db	0
   862  016B7A  00                 	db	0
   863  016B7B  00                 	db	0
   864  016B7C  00                 	db	0
   865  016B7D  00                 	db	0
   866  016B7E  00                 	db	0
   867  016B7F  00                 	db	0
   868  016B80  00                 	db	0
   869  016B81  00                 	db	0
   870  016B82  00                 	db	0
   871  016B83  00                 	db	0
   872  016B84  00                 	db	0
   873  016B85  00                 	db	0
   874  016B86  00                 	db	0
   875  016B87  00                 	db	0
   876  016B88  00                 	db	0
   877  016B89  00                 	db	0
   878  016B8A  00                 	db	0
   879  016B8B  00                 	db	0
   880  016B8C  00                 	db	0
   881  016B8D  00                 	db	0
   882  016B8E  00                 	db	0
   883  016B8F  00                 	db	0
   884  016B90  00                 	db	0
   885  016B91  00                 	db	0
   886  016B92  00                 	db	0
   887  016B93  00                 	db	0
   888  016B94  00                 	db	0
   889  016B95  00                 	db	0
   890  016B96  00                 	db	0
   891  016B97  00                 	db	0
   892  016B98  00                 	db	0
   893  016B99  00                 	db	0
   894  016B9A  00                 	db	0
   895  016B9B  00                 	db	0
   896  016B9C  00                 	db	0
   897  016B9D  00                 	db	0
   898  016B9E  00                 	db	0
   899  016B9F  00                 	db	0
   900  016BA0  00                 	db	0
   901  016BA1  00                 	db	0
   902  016BA2  00                 	db	0
   903  016BA3  00                 	db	0
   904  016BA4  00                 	db	0
   905  016BA5  00                 	db	0
   906  016BA6  00                 	db	0
   907  016BA7  00                 	db	0
   908  016BA8  00                 	db	0
   909  016BA9  00                 	db	0
   910  016BAA  00                 	db	0
   911  016BAB  00                 	db	0
   912  016BAC  00                 	db	0
   913  016BAD  00                 	db	0
   914  016BAE  00                 	db	0
   915  016BAF  00                 	db	0
   916  016BB0  00                 	db	0
   917  016BB1  00                 	db	0
   918  016BB2  00                 	db	0
   919  016BB3  00                 	db	0
   920  016BB4  00                 	db	0
   921  016BB5  00                 	db	0
   922  016BB6  00                 	db	0
   923  016BB7  00                 	db	0
   924  016BB8  00                 	db	0
   925  016BB9  00                 	db	0
   926  016BBA  00                 	db	0
   927  016BBB  00                 	db	0
   928  016BBC  00                 	db	0
   929  016BBD  00                 	db	0
   930  016BBE  00                 	db	0
   931  016BBF  00                 	db	0
   932  016BC0  00                 	db	0
   933  016BC1  00                 	db	0
   934  016BC2  00                 	db	0
   935  016BC3  00                 	db	0
   936  016BC4  00                 	db	0
   937  016BC5  00                 	db	0
   938  016BC6  00                 	db	0
   939  016BC7  00                 	db	0
   940  016BC8  00                 	db	0
   941  016BC9  00                 	db	0
   942  016BCA  00                 	db	0
   943  016BCB  00                 	db	0
   944  016BCC  00                 	db	0
   945  016BCD  00                 	db	0
   946  016BCE  00                 	db	0
   947  016BCF  00                 	db	0
   948  016BD0  00                 	db	0
   949  016BD1  00                 	db	0
   950  016BD2  00                 	db	0
   951  016BD3  00                 	db	0
   952  016BD4  00                 	db	0
   953  016BD5  00                 	db	0
   954  016BD6  00                 	db	0
   955  016BD7  00                 	db	0
   956  016BD8  00                 	db	0
   957  016BD9  00                 	db	0
   958  016BDA  00                 	db	0
   959  016BDB  00                 	db	0
   960  016BDC  00                 	db	0
   961  016BDD  00                 	db	0
   962  016BDE  00                 	db	0
   963  016BDF  00                 	db	0
   964  016BE0  00                 	db	0
   965  016BE1  00                 	db	0
   966  016BE2  00                 	db	0
   967  016BE3  00                 	db	0
   968  016BE4  00                 	db	0
   969  016BE5  00                 	db	0
   970  016BE6  00                 	db	0
   971  016BE7  00                 	db	0
   972  016BE8  00                 	db	0
   973  016BE9  00                 	db	0
   974  016BEA  00                 	db	0
   975  016BEB  00                 	db	0
   976  016BEC  00                 	db	0
   977  016BED  00                 	db	0
   978  016BEE  00                 	db	0
   979  016BEF  00                 	db	0
   980  016BF0  00                 	db	0
   981  016BF1  00                 	db	0
   982  016BF2  00                 	db	0
   983  016BF3  00                 	db	0
   984  016BF4  00                 	db	0
   985  016BF5  00                 	db	0
   986  016BF6  00                 	db	0
   987  016BF7  00                 	db	0
   988  016BF8  00                 	db	0
   989  016BF9  00                 	db	0
   990  016BFA  00                 	db	0
   991  016BFB  00                 	db	0
   992  016BFC  00                 	db	0
   993  016BFD  00                 	db	0
   994  016BFE  00                 	db	0
   995  016BFF  00                 	db	0
   996  016C00  00                 	db	0
   997  016C01  00                 	db	0
   998  016C02  00                 	db	0
   999  016C03  00                 	db	0
  1000  016C04  00                 	db	0
  1001  016C05  00                 	db	0
  1002  016C06  00                 	db	0
  1003  016C07  00                 	db	0
  1004  016C08  00                 	db	0
  1005  016C09  00                 	db	0
  1006  016C0A  00                 	db	0
  1007  016C0B  00                 	db	0
  1008  016C0C  00                 	db	0
  1009  016C0D  00                 	db	0
  1010  016C0E  00                 	db	0
  1011  016C0F  00                 	db	0
  1012  016C10  00                 	db	0
  1013  016C11  00                 	db	0
  1014  016C12  00                 	db	0
  1015  016C13  00                 	db	0
  1016  016C14  00                 	db	0
  1017  016C15  00                 	db	0
  1018  016C16  00                 	db	0
  1019  016C17  00                 	db	0
  1020  016C18  00                 	db	0
  1021  016C19  00                 	db	0
  1022  016C1A  00                 	db	0
  1023  016C1B  00                 	db	0
  1024  016C1C  00                 	db	0
  1025  016C1D  00                 	db	0
  1026  016C1E  00                 	db	0
  1027  016C1F  00                 	db	0
  1028  016C20  00                 	db	0
  1029  016C21  00                 	db	0
  1030  016C22  00                 	db	0
  1031  016C23  00                 	db	0
  1032  016C24  00                 	db	0
  1033  016C25  00                 	db	0
  1034  016C26  00                 	db	0
  1035  016C27  00                 	db	0
  1036  016C28  00                 	db	0
  1037  016C29  00                 	db	0
  1038  016C2A  00                 	db	0
  1039  016C2B  00                 	db	0
  1040  016C2C  00                 	db	0
  1041  016C2D  00                 	db	0
  1042  016C2E  00                 	db	0
  1043  016C2F  00                 	db	0
  1044  016C30  00                 	db	0
  1045  016C31  00                 	db	0
  1046  016C32  00                 	db	0
  1047  016C33  00                 	db	0
  1048  016C34  00                 	db	0
  1049  016C35  00                 	db	0
  1050  016C36  00                 	db	0
  1051  016C37  00                 	db	0
  1052  016C38  00                 	db	0
  1053  016C39  00                 	db	0
  1054  016C3A  00                 	db	0
  1055  016C3B  00                 	db	0
  1056  016C3C  00                 	db	0
  1057  016C3D  00                 	db	0
  1058  016C3E  00                 	db	0
  1059  016C3F  00                 	db	0
  1060  016C40  00                 	db	0
  1061  016C41  00                 	db	0
  1062  016C42  00                 	db	0
  1063  016C43  00                 	db	0
  1064  016C44  00                 	db	0
  1065  016C45  00                 	db	0
  1066  016C46  00                 	db	0
  1067  016C47  00                 	db	0
  1068  016C48  00                 	db	0
  1069  016C49  00                 	db	0
  1070  016C4A  00                 	db	0
  1071  016C4B  00                 	db	0
  1072  016C4C  00                 	db	0
  1073  016C4D  00                 	db	0
  1074  016C4E  00                 	db	0
  1075  016C4F  00                 	db	0
  1076  016C50  00                 	db	0
  1077  016C51  00                 	db	0
  1078  016C52  00                 	db	0
  1079  016C53  00                 	db	0
  1080  016C54  00                 	db	0
  1081  016C55  00                 	db	0
  1082  016C56  00                 	db	0
  1083  016C57  00                 	db	0
  1084  016C58  00                 	db	0
  1085  016C59  00                 	db	0
  1086  016C5A  00                 	db	0
  1087  016C5B  00                 	db	0
  1088  016C5C  00                 	db	0
  1089  016C5D  00                 	db	0
  1090  016C5E  00                 	db	0
  1091  016C5F  00                 	db	0
  1092  016C60  00                 	db	0
  1093  016C61  00                 	db	0
  1094  016C62  00                 	db	0
  1095  016C63  00                 	db	0
  1096  016C64  00                 	db	0
  1097  016C65  00                 	db	0
  1098  016C66  00                 	db	0
  1099  016C67  00                 	db	0
  1100  016C68  00                 	db	0
  1101  016C69  00                 	db	0
  1102  016C6A  00                 	db	0
  1103  016C6B  00                 	db	0
  1104  016C6C  00                 	db	0
  1105  016C6D  00                 	db	0
  1106  016C6E  00                 	db	0
  1107  016C6F  00                 	db	0
  1108  016C70  00                 	db	0
  1109  016C71  00                 	db	0
  1110  016C72  00                 	db	0
  1111  016C73  00                 	db	0
  1112  016C74  00                 	db	0
  1113  016C75  00                 	db	0
  1114  016C76  00                 	db	0
  1115  016C77  00                 	db	0
  1116  016C78  00                 	db	0
  1117  016C79  00                 	db	0
  1118  016C7A  00                 	db	0
  1119  016C7B  00                 	db	0
  1120  016C7C  00                 	db	0
  1121  016C7D  00                 	db	0
  1122  016C7E  00                 	db	0
  1123  016C7F  00                 	db	0
  1124  016C80  00                 	db	0
  1125  016C81  00                 	db	0
  1126  016C82  00                 	db	0
  1127  016C83  00                 	db	0
  1128  016C84  00                 	db	0
  1129  016C85  00                 	db	0
  1130  016C86  00                 	db	0
  1131  016C87  00                 	db	0
  1132  016C88  00                 	db	0
  1133  016C89  00                 	db	0
  1134  016C8A  00                 	db	0
  1135  016C8B  00                 	db	0
  1136  016C8C  00                 	db	0
  1137  016C8D  00                 	db	0
  1138  016C8E  00                 	db	0
  1139  016C8F  00                 	db	0
  1140  016C90  00                 	db	0
  1141  016C91  00                 	db	0
  1142  016C92  00                 	db	0
  1143  016C93  00                 	db	0
  1144  016C94  00                 	db	0
  1145  016C95  00                 	db	0
  1146  016C96  00                 	db	0
  1147  016C97  00                 	db	0
  1148  016C98  00                 	db	0
  1149  016C99  00                 	db	0
  1150  016C9A  00                 	db	0
  1151  016C9B  00                 	db	0
  1152  016C9C  00                 	db	0
  1153  016C9D  00                 	db	0
  1154  016C9E  00                 	db	0
  1155  016C9F  00                 	db	0
  1156  016CA0  00                 	db	0
  1157  016CA1  00                 	db	0
  1158  016CA2  00                 	db	0
  1159  016CA3  00                 	db	0
  1160  016CA4  00                 	db	0
  1161  016CA5  00                 	db	0
  1162  016CA6  00                 	db	0
  1163  016CA7  00                 	db	0
  1164  016CA8  00                 	db	0
  1165  016CA9  00                 	db	0
  1166  016CAA  00                 	db	0
  1167  016CAB  00                 	db	0
  1168  016CAC  00                 	db	0
  1169  016CAD  00                 	db	0
  1170  016CAE  00                 	db	0
  1171  016CAF  00                 	db	0
  1172  016CB0  00                 	db	0
  1173  016CB1  00                 	db	0
  1174  016CB2  00                 	db	0
  1175  016CB3  00                 	db	0
  1176  016CB4  00                 	db	0
  1177  016CB5  00                 	db	0
  1178  016CB6  00                 	db	0
  1179  016CB7  00                 	db	0
  1180  016CB8  00                 	db	0
  1181  016CB9  00                 	db	0
  1182  016CBA  00                 	db	0
  1183  016CBB  00                 	db	0
  1184  016CBC  00                 	db	0
  1185  016CBD  00                 	db	0
  1186  016CBE  00                 	db	0
  1187  016CBF  00                 	db	0
  1188  016CC0  00                 	db	0
  1189  016CC1  00                 	db	0
  1190  016CC2  00                 	db	0
  1191  016CC3  00                 	db	0
  1192  016CC4  00                 	db	0
  1193  016CC5  00                 	db	0
  1194  016CC6  00                 	db	0
  1195  016CC7  00                 	db	0
  1196  016CC8  00                 	db	0
  1197  016CC9  00                 	db	0
  1198  016CCA  00                 	db	0
  1199  016CCB  00                 	db	0
  1200  016CCC  00                 	db	0
  1201  016CCD  00                 	db	0
  1202  016CCE  00                 	db	0
  1203  016CCF  00                 	db	0
  1204  016CD0  00                 	db	0
  1205  016CD1  00                 	db	0
  1206  016CD2  00                 	db	0
  1207  016CD3  00                 	db	0
  1208  016CD4  00                 	db	0
  1209  016CD5  00                 	db	0
  1210  016CD6  00                 	db	0
  1211  016CD7  00                 	db	0
  1212  016CD8  00                 	db	0
  1213  016CD9  00                 	db	0
  1214  016CDA  00                 	db	0
  1215  016CDB  00                 	db	0
  1216  016CDC  00                 	db	0
  1217  016CDD  00                 	db	0
  1218  016CDE  00                 	db	0
  1219  016CDF  00                 	db	0
  1220  016CE0  00                 	db	0
  1221  016CE1  00                 	db	0
  1222  016CE2  00                 	db	0
  1223  016CE3  00                 	db	0
  1224  016CE4  00                 	db	0
  1225  016CE5  00                 	db	0
  1226  016CE6  00                 	db	0
  1227  016CE7  00                 	db	0
  1228  016CE8  00                 	db	0
  1229  016CE9  00                 	db	0
  1230  016CEA  00                 	db	0
  1231  016CEB  00                 	db	0
  1232  016CEC  00                 	db	0
  1233  016CED  00                 	db	0
  1234  016CEE  00                 	db	0
  1235  016CEF  00                 	db	0
  1236  016CF0  00                 	db	0
  1237  016CF1  00                 	db	0
  1238  016CF2  00                 	db	0
  1239  016CF3  00                 	db	0
  1240  016CF4  00                 	db	0
  1241  016CF5  00                 	db	0
  1242  016CF6  00                 	db	0
  1243  016CF7  00                 	db	0
  1244  016CF8  00                 	db	0
  1245  016CF9  00                 	db	0
  1246  016CFA  00                 	db	0
  1247  016CFB  00                 	db	0
  1248  016CFC  00                 	db	0
  1249  016CFD  00                 	db	0
  1250  016CFE  00                 	db	0
  1251  016CFF  00                 	db	0
  1252                           
  1253                           ;initializer for _C
  1254  016D00  0000               	dw	0
  1255  016D02  0000               	dw	0
  1256  016D04  0000               	dw	0
  1257  016D06  0000               	dw	0
  1258  016D08  0000               	dw	0
  1259  016D0A  0000               	dw	0
  1260  016D0C  0000               	dw	0
  1261  016D0E  0000               	dw	0
  1262  016D10  0000               	dw	0
  1263  016D12  0000               	dw	0
  1264  016D14  0000               	dw	0
  1265  016D16  0000               	dw	0
  1266  016D18  0000               	dw	0
  1267  016D1A  0000               	dw	0
  1268  016D1C  0000               	dw	0
  1269  016D1E  0000               	dw	0
  1270  016D20  0000               	dw	0
  1271  016D22  0000               	dw	0
  1272  016D24  0000               	dw	0
  1273  016D26  0000               	dw	0
  1274  016D28  0000               	dw	0
  1275  016D2A  0000               	dw	0
  1276  016D2C  0000               	dw	0
  1277  016D2E  0000               	dw	0
  1278  016D30  0000               	dw	0
  1279  016D32  0000               	dw	0
  1280  016D34  0000               	dw	0
  1281  016D36  0000               	dw	0
  1282  016D38  0000               	dw	0
  1283  016D3A  0000               	dw	0
  1284  016D3C  0000               	dw	0
  1285  016D3E  0000               	dw	0
  1286  016D40  0000               	dw	0
  1287  016D42  0000               	dw	0
  1288  016D44  0000               	dw	0
  1289  016D46  0000               	dw	0
  1290  016D48  0000               	dw	0
  1291  016D4A  0000               	dw	0
  1292  016D4C  0000               	dw	0
  1293  016D4E  0000               	dw	0
  1294  016D50  0000               	dw	0
  1295  016D52  0000               	dw	0
  1296  016D54  0000               	dw	0
  1297  016D56  0000               	dw	0
  1298  016D58  0000               	dw	0
  1299  016D5A  0000               	dw	0
  1300  016D5C  0000               	dw	0
  1301  016D5E  0000               	dw	0
  1302  016D60  0000               	dw	0
  1303  016D62  0000               	dw	0
  1304  016D64  0000               	dw	0
  1305  016D66  0000               	dw	0
  1306  016D68  0000               	dw	0
  1307  016D6A  0000               	dw	0
  1308  016D6C  0000               	dw	0
  1309  016D6E  0000               	dw	0
  1310  016D70  0000               	dw	0
  1311  016D72  0000               	dw	0
  1312  016D74  0000               	dw	0
  1313  016D76  0000               	dw	0
  1314  016D78  0000               	dw	0
  1315  016D7A  0000               	dw	0
  1316  016D7C  0000               	dw	0
  1317  016D7E  0000               	dw	0
  1318  016D80  0000               	dw	0
  1319  016D82  0000               	dw	0
  1320  016D84  0000               	dw	0
  1321  016D86  0000               	dw	0
  1322  016D88  0000               	dw	0
  1323  016D8A  0000               	dw	0
  1324  016D8C  0000               	dw	0
  1325  016D8E  42FA               	dw	17146
  1326  016D90  0000               	dw	0
  1327  016D92  0000               	dw	0
  1328  016D94  0000               	dw	0
  1329  016D96  0000               	dw	0
  1330  016D98  0000               	dw	0
  1331  016D9A  0000               	dw	0
  1332  016D9C  0000               	dw	0
  1333  016D9E  0000               	dw	0
  1334  016DA0  0000               	dw	0
  1335  016DA2  0000               	dw	0
  1336  016DA4  0000               	dw	0
  1337  016DA6  0000               	dw	0
  1338  016DA8  0000               	dw	0
  1339  016DAA  0000               	dw	0
  1340  016DAC  0000               	dw	0
  1341  016DAE  0000               	dw	0
  1342  016DB0  0000               	dw	0
  1343  016DB2  0000               	dw	0
  1344  016DB4  0000               	dw	0
  1345  016DB6  0000               	dw	0
  1346  016DB8  00                 	db	0
  1347  016DB9  01                 	db	1
  1348  016DBA  0000               	dw	0
  1349  016DBC  3F80               	dw	16256
  1350  016DBE  0000               	dw	0
  1351  016DC0  3F80               	dw	16256
  1352  016DC2  00                 	db	0
  1353  016DC3  00                 	db	0
  1354  016DC4  00                 	db	0
  1355  016DC5  00                 	db	0
  1356  016DC6  00                 	db	0
  1357  016DC7  00                 	db	0
  1358  016DC8  00                 	db	0
  1359  016DC9  00                 	db	0
  1360  016DCA  00                 	db	0
  1361  016DCB  00                 	db	0
  1362  016DCC  00                 	db	0
  1363  016DCD  00                 	db	0
  1364  016DCE  00                 	db	0
  1365  016DCF  00                 	db	0
  1366  016DD0  00                 	db	0
  1367  016DD1  00                 	db	0
  1368  016DD2  00                 	db	0
  1369  016DD3  00                 	db	0
  1370  016DD4  00                 	db	0
  1371  016DD5  00                 	db	0
  1372  016DD6  00                 	db	0
  1373  016DD7  00                 	db	0
  1374  016DD8  00                 	db	0
  1375  016DD9  00                 	db	0
  1376  016DDA  00                 	db	0
  1377  016DDB  00                 	db	0
  1378  016DDC  00                 	db	0
  1379  016DDD  00                 	db	0
  1380  016DDE  00                 	db	0
  1381  016DDF  00                 	db	0
  1382  016DE0  00                 	db	0
  1383  016DE1  00                 	db	0
  1384  016DE2  00                 	db	0
  1385  016DE3  00                 	db	0
  1386  016DE4  00                 	db	0
  1387  016DE5  00                 	db	0
  1388  016DE6  00                 	db	0
  1389  016DE7  00                 	db	0
  1390  016DE8  00                 	db	0
  1391  016DE9  00                 	db	0
  1392  016DEA  00                 	db	0
  1393  016DEB  00                 	db	0
  1394  016DEC  00                 	db	0
  1395  016DED  00                 	db	0
  1396  016DEE  00                 	db	0
  1397  016DEF  00                 	db	0
  1398  016DF0  00                 	db	0
  1399  016DF1  00                 	db	0
  1400  016DF2  00                 	db	0
  1401  016DF3  00                 	db	0
  1402  016DF4  00                 	db	0
  1403  016DF5  00                 	db	0
  1404  016DF6  00                 	db	0
  1405  016DF7  00                 	db	0
  1406  016DF8  00                 	db	0
  1407  016DF9  00                 	db	0
  1408  016DFA  00                 	db	0
  1409  016DFB  00                 	db	0
  1410  016DFC  00                 	db	0
  1411  016DFD  00                 	db	0
  1412  016DFE  00                 	db	0
  1413  016DFF  00                 	db	0
  1414  016E00  00                 	db	0
  1415  016E01  00                 	db	0
  1416  016E02  00                 	db	0
  1417  016E03  00                 	db	0
  1418  016E04  00                 	db	0
  1419  016E05  00                 	db	0
  1420  016E06  00                 	db	0
  1421  016E07  00                 	db	0
  1422  016E08  00                 	db	0
  1423  016E09  00                 	db	0
  1424  016E0A  00                 	db	0
  1425  016E0B  00                 	db	0
  1426  016E0C  00                 	db	0
  1427  016E0D  00                 	db	0
  1428  016E0E  0000               	dw	0
  1429  016E10  0000               	dw	0
  1430  016E12  0000               	dw	0
  1431  016E14  0000               	dw	0
  1432  016E16  0000               	dw	0
  1433  016E18  0000               	dw	0
  1434  016E1A  0000               	dw	0
  1435  016E1C  0000               	dw	0
  1436  016E1E  0000               	dw	0
  1437  016E20  0000               	dw	0
  1438  016E22  01                 	db	1
  1439  016E23  00                 	db	0
  1440  016E24  00                 	db	0
  1441  016E25  00                 	db	0
  1442  016E26  00                 	db	0
  1443  016E27  00                 	db	0
  1444  016E28  00                 	db	0
  1445  016E29  00                 	db	0
  1446  016E2A  00                 	db	0
  1447                           
  1448                           	psect	idataBANK0
  1449  01C10E                     __pidataBANK0:
  1450                           	opt callstack 0
  1451                           
  1452                           ;initializer for stoa@F1166
  1453  01C10E  28                 	db	40
  1454  01C10F  6E                 	db	110
  1455  01C110  75                 	db	117
  1456  01C111  6C                 	db	108
  1457  01C112  6C                 	db	108
  1458  01C113  29                 	db	41
  1459  01C114  00                 	db	0
  1460                           
  1461                           ;initializer for _H
  1462  01C115  00                 	db	0
  1463  01C116  00                 	db	0
  1464  01C117  01                 	db	1
  1465  01C118  00                 	db	0
  1466  01C119  01                 	db	1
  1467  01C11A  00                 	db	0
  1468  01C11B  00                 	db	0
  1469                           
  1470                           	psect	idataBANK1
  1471  01A030                     __pidataBANK1:
  1472                           	opt callstack 0
  1473                           
  1474                           ;initializer for _R
  1475  01A030  0000               	dw	0
  1476  01A032  0000               	dw	0
  1477  01A034  0000               	dw	0
  1478  01A036  0000               	dw	0
  1479  01A038  0000               	dw	0
  1480  01A03A  0000               	dw	0
  1481  01A03C  0000               	dw	0
  1482  01A03E  0000               	dw	0
  1483  01A040  0000               	dw	0
  1484  01A042  0000               	dw	0
  1485  01A044  0000               	dw	0
  1486  01A046  0000               	dw	0
  1487  01A048  0000               	dw	0
  1488  01A04A  0000               	dw	0
  1489  01A04C  0000               	dw	0
  1490  01A04E  0000               	dw	0
  1491  01A050  0F67               	dw	3943
  1492  01A052  0F8F               	dw	3983
  1493  01A054  0000               	dw	0
  1494  01A056  0000               	dw	0
  1495  01A058  0000               	dw	0
  1496  01A05A  0000               	dw	0
  1497  01A05C  00                 	db	0
  1498  01A05D  0000               	dw	0
  1499  01A05F  00                 	db	0
  1500                           
  1501                           ;initializer for _V
  1502  01A060  00                 	db	0
  1503  01A061  00                 	db	0
  1504  01A062  00                 	db	0
  1505  01A063  00                 	db	0
  1506  01A064  00                 	db	0
  1507  01A065  00                 	db	0
  1508  01A066  00                 	db	0
  1509  01A067  00                 	db	0
  1510  01A068  00                 	db	0
  1511  01A069  00                 	db	0
  1512  01A06A  00                 	db	0
  1513  01A06B  00                 	db	0
  1514  01A06C  00                 	db	0
  1515  01A06D  00                 	db	0
  1516  01A06E  00                 	db	0
  1517  01A06F  00                 	db	0
  1518  01A070  00                 	db	0
  1519  01A071  00                 	db	0
  1520  01A072  00                 	db	0
  1521  01A073  00                 	db	0
  1522  01A074  00                 	db	0
  1523  01A075  00                 	db	0
  1524  01A076  00                 	db	0
  1525  01A077  00                 	db	0
  1526  01A078  00                 	db	0
  1527  01A079  00                 	db	0
  1528  01A07A  00                 	db	0
  1529  01A07B  00                 	db	0
  1530  01A07C  00                 	db	0
  1531  01A07D  00                 	db	0
  1532  01A07E  00                 	db	0
  1533  01A07F  00                 	db	0
  1534  01A080  00                 	db	0
  1535  01A081  00                 	db	0
  1536  01A082  00                 	db	0
  1537  01A083  00                 	db	0
  1538  01A084  00                 	db	0
  1539  01A085  00                 	db	0
  1540  01A086  00                 	db	0
  1541  01A087  00                 	db	0
  1542  01A088  00                 	db	0
  1543  01A089  00                 	db	0
  1544  01A08A  00                 	db	0
  1545  01A08B  00                 	db	0
  1546  01A08C  00                 	db	0
  1547  01A08D  00                 	db	0
  1548  01A08E  00                 	db	0
  1549  01A08F  00                 	db	0
  1550  01A090  00                 	db	0
  1551  01A091  00                 	db	0
  1552  01A092  00                 	db	0
  1553  01A093  00                 	db	0
  1554  01A094  00                 	db	0
  1555  01A095  00                 	db	0
  1556  01A096  00                 	db	0
  1557  01A097  00                 	db	0
  1558  01A098  00                 	db	0
  1559  01A099  00                 	db	0
  1560  01A09A  00                 	db	0
  1561  01A09B  00                 	db	0
  1562  01A09C  00                 	db	0
  1563  01A09D  00                 	db	0
  1564  01A09E  00                 	db	0
  1565  01A09F  00                 	db	0
  1566  01A0A0  00                 	db	0
  1567  01A0A1  00                 	db	0
  1568  01A0A2  00                 	db	0
  1569  01A0A3  00                 	db	0
  1570  01A0A4  00                 	db	0
  1571  01A0A5  00                 	db	0
  1572  01A0A6  00                 	db	0
  1573  01A0A7  00                 	db	0
  1574  01A0A8  00                 	db	0
  1575  01A0A9  00                 	db	0
  1576  01A0AA  00                 	db	0
  1577  01A0AB  00                 	db	0
  1578  01A0AC  00                 	db	0
  1579  01A0AD  00                 	db	0
  1580  01A0AE  00                 	db	0
  1581  01A0AF  00                 	db	0
  1582  01A0B0  00                 	db	0
  1583  01A0B1  00                 	db	0
  1584  01A0B2  00                 	db	0
  1585  01A0B3  00                 	db	0
  1586  01A0B4  00                 	db	0
  1587  01A0B5  00                 	db	0
  1588  01A0B6  00                 	db	0
  1589  01A0B7  00                 	db	0
  1590  01A0B8  00                 	db	0
  1591  01A0B9  00                 	db	0
  1592  01A0BA  00                 	db	0
  1593  01A0BB  00                 	db	0
  1594  01A0BC  00                 	db	0
  1595  01A0BD  00                 	db	0
  1596  01A0BE  00                 	db	0
  1597  01A0BF  00                 	db	0
  1598  01A0C0  00                 	db	0
  1599  01A0C1  00                 	db	0
  1600  01A0C2  00                 	db	0
  1601  01A0C3  00                 	db	0
  1602  01A0C4  00                 	db	0
  1603  01A0C5  00                 	db	0
  1604  01A0C6  00                 	db	0
  1605  01A0C7  00                 	db	0
  1606  01A0C8  00                 	db	0
  1607  01A0C9  00                 	db	0
  1608  01A0CA  00                 	db	0
  1609  01A0CB  00                 	db	0
  1610  01A0CC  00                 	db	0
  1611  01A0CD  00                 	db	0
  1612  01A0CE  00                 	db	0
  1613  01A0CF  00                 	db	0
  1614  01A0D0  00                 	db	0
  1615  01A0D1  00                 	db	0
  1616  01A0D2  00                 	db	0
  1617  01A0D3  00                 	db	0
  1618  01A0D4  00                 	db	0
  1619  01A0D5  00                 	db	0
  1620  01A0D6  00                 	db	0
  1621  01A0D7  00                 	db	0
  1622  01A0D8  00                 	db	0
  1623  01A0D9  00                 	db	0
  1624  01A0DA  00                 	db	0
  1625  01A0DB  00                 	db	0
  1626  01A0DC  00                 	db	0
  1627  01A0DD  00                 	db	0
  1628  01A0DE  00                 	db	0
  1629  01A0DF  00                 	db	0
  1630  01A0E0  00                 	db	0
  1631  01A0E1  0000               	dw	0
  1632  01A0E3  0000               	dw	0
  1633  01A0E5  0000               	dw	0
  1634  01A0E7  0000               	dw	0
  1635  01A0E9  00                 	db	0
  1636  01A0EA  00                 	db	0
  1637  01A0EB  00                 	db	0
  1638  01A0EC  00                 	db	0
  1639  01A0ED  00                 	db	0
  1640  01A0EE  00                 	db	0
  1641  01A0EF  0000               	dw	0
  1642  01A0F1  0000               	dw	0
  1643  01A0F3  0000               	dw	0
  1644  01A0F5  0000               	dw	0
  1645  01A0F7  0000               	dw	0
  1646  01A0F9  0000               	dw	0
  1647  01A0FB  00                 	db	0
  1648  01A0FC  00                 	db	0
  1649  01A0FD  00                 	db	0
  1650  01A0FE  00                 	db	0
  1651  01A0FF  00                 	db	0
  1652  01A100  00                 	db	0
  1653  01A101  00                 	db	0
  1654  01A102  00                 	db	0
  1655  01A103  00                 	db	0
  1656  01A104  00                 	db	0
  1657  01A105  00                 	db	0
  1658  01A106  0000               	dw	0
  1659  01A108  0000               	dw	0
  1660  01A10A  2D                 	db	45
  1661  01A10B  00                 	db	0
  1662  01A10C  00                 	db	0
  1663  01A10D  00                 	db	0
  1664  01A10E  00                 	db	0
  1665  01A10F  0000               	dw	0
  1666  01A111  0000               	dw	0
  1667  01A113  0000               	dw	0
  1668  01A115  0000               	dw	0
  1669  01A117  0000               	dw	0
  1670  01A119  0000               	dw	0
  1671  01A11B  0000               	dw	0
  1672  01A11D  0000               	dw	0
  1673                           
  1674                           	psect	mediumconst
  1675  00FA34                     __pmediumconst:
  1676                           	opt callstack 0
  1677  00FA34  00                 	db	0
  1678  00FA35                     _BVSOC_TABLE:
  1679                           	opt callstack 0
  1680  00FA35  59D8               	dw	23000
  1681  00FA37  0000               	dw	0
  1682  00FA39  0005               	dw	5
  1683  00FA3B  0000               	dw	0
  1684  00FA3D  5B68               	dw	23400
  1685  00FA3F  0000               	dw	0
  1686  00FA41  000A               	dw	10
  1687  00FA43  0000               	dw	0
  1688  00FA45  5C30               	dw	23600
  1689  00FA47  0000               	dw	0
  1690  00FA49  0014               	dw	20
  1691  00FA4B  0000               	dw	0
  1692  00FA4D  5E38               	dw	24120
  1693  00FA4F  0000               	dw	0
  1694  00FA51  0019               	dw	25
  1695  00FA53  0000               	dw	0
  1696  00FA55  5E88               	dw	24200
  1697  00FA57  0000               	dw	0
  1698  00FA59  001E               	dw	30
  1699  00FA5B  0000               	dw	0
  1700  00FA5D  5F78               	dw	24440
  1701  00FA5F  0000               	dw	0
  1702  00FA61  0028               	dw	40
  1703  00FA63  0000               	dw	0
  1704  00FA65  5FDC               	dw	24540
  1705  00FA67  0000               	dw	0
  1706  00FA69  002D               	dw	45
  1707  00FA6B  0000               	dw	0
  1708  00FA6D  6018               	dw	24600
  1709  00FA6F  0000               	dw	0
  1710  00FA71  0032               	dw	50
  1711  00FA73  0000               	dw	0
  1712  00FA75  6046               	dw	24646
  1713  00FA77  0000               	dw	0
  1714  00FA79  0035               	dw	53
  1715  00FA7B  0000               	dw	0
  1716  00FA7D  607C               	dw	24700
  1717  00FA7F  0000               	dw	0
  1718  00FA81  0037               	dw	55
  1719  00FA83  0000               	dw	0
  1720  00FA85  60AE               	dw	24750
  1721  00FA87  0000               	dw	0
  1722  00FA89  0039               	dw	57
  1723  00FA8B  0000               	dw	0
  1724  00FA8D  60E0               	dw	24800
  1725  00FA8F  0000               	dw	0
  1726  00FA91  003C               	dw	60
  1727  00FA93  0000               	dw	0
  1728  00FA95  6112               	dw	24850
  1729  00FA97  0000               	dw	0
  1730  00FA99  003F               	dw	63
  1731  00FA9B  0000               	dw	0
  1732  00FA9D  615D               	dw	24925
  1733  00FA9F  0000               	dw	0
  1734  00FAA1  0043               	dw	67
  1735  00FAA3  0000               	dw	0
  1736  00FAA5  61A8               	dw	25000
  1737  00FAA7  0000               	dw	0
  1738  00FAA9  0046               	dw	70
  1739  00FAAB  0000               	dw	0
  1740  00FAAD  61BC               	dw	25020
  1741  00FAAF  0000               	dw	0
  1742  00FAB1  0048               	dw	72
  1743  00FAB3  0000               	dw	0
  1744  00FAB5  61D0               	dw	25040
  1745  00FAB7  0000               	dw	0
  1746  00FAB9  004B               	dw	75
  1747  00FABB  0000               	dw	0
  1748  00FABD  61DA               	dw	25050
  1749  00FABF  0000               	dw	0
  1750  00FAC1  0050               	dw	80
  1751  00FAC3  0000               	dw	0
  1752  00FAC5  61E4               	dw	25060
  1753  00FAC7  0000               	dw	0
  1754  00FAC9  0055               	dw	85
  1755  00FACB  0000               	dw	0
  1756  00FACD  61F8               	dw	25080
  1757  00FACF  0000               	dw	0
  1758  00FAD1  005A               	dw	90
  1759  00FAD3  0000               	dw	0
  1760  00FAD5  6208               	dw	25096
  1761  00FAD7  0000               	dw	0
  1762  00FAD9  005C               	dw	92
  1763  00FADB  0000               	dw	0
  1764  00FADD  6222               	dw	25122
  1765  00FADF  0000               	dw	0
  1766  00FAE1  005D               	dw	93
  1767  00FAE3  0000               	dw	0
  1768  00FAE5  6234               	dw	25140
  1769  00FAE7  0000               	dw	0
  1770  00FAE9  005F               	dw	95
  1771  00FAEB  0000               	dw	0
  1772  00FAED  6248               	dw	25160
  1773  00FAEF  0000               	dw	0
  1774  00FAF1  0061               	dw	97
  1775  00FAF3  0000               	dw	0
  1776  00FAF5  625C               	dw	25180
  1777  00FAF7  0000               	dw	0
  1778  00FAF9  0064               	dw	100
  1779  00FAFB  0000               	dw	0
  1780  00FAFD  6784               	dw	26500
  1781  00FAFF  0000               	dw	0
  1782  00FB01  0062               	dw	98
  1783  00FB03  0000               	dw	0
  1784  00FB05                     __end_of_BVSOC_TABLE:
  1785                           	opt callstack 0
  1786  00FB05                     _T:
  1787                           	opt callstack 0
  1788  00FB05  63                 	db	99
  1789  00FB06  6F                 	db	111
  1790  00FB07  6D                 	db	109
  1791  00FB08  6D                 	db	109
  1792  00FB09  61                 	db	97
  1793  00FB0A  6E                 	db	110
  1794  00FB0B  64                 	db	100
  1795  00FB0C  73                 	db	115
  1796  00FB0D  20                 	db	32
  1797  00FB0E  31                 	db	49
  1798  00FB0F  00                 	db	0
  1799  00FB10  00                 	db	0
  1800  00FB11  00                 	db	0
  1801  00FB12  00                 	db	0
  1802  00FB13  00                 	db	0
  1803  00FB14  00                 	db	0
  1804  00FB15  00                 	db	0
  1805  00FB16  00                 	db	0
  1806  00FB17  64                 	db	100
  1807  00FB18  69                 	db	105
  1808  00FB19  73                 	db	115
  1809  00FB1A  70                 	db	112
  1810  00FB1B  6C                 	db	108
  1811  00FB1C  61                 	db	97
  1812  00FB1D  79                 	db	121
  1813  00FB1E  73                 	db	115
  1814  00FB1F  20                 	db	32
  1815  00FB20  31                 	db	49
  1816  00FB21  00                 	db	0
  1817  00FB22  00                 	db	0
  1818  00FB23  00                 	db	0
  1819  00FB24  00                 	db	0
  1820  00FB25  00                 	db	0
  1821  00FB26  00                 	db	0
  1822  00FB27  00                 	db	0
  1823  00FB28  00                 	db	0
  1824  00FB29  63                 	db	99
  1825  00FB2A  6F                 	db	111
  1826  00FB2B  6D                 	db	109
  1827  00FB2C  6D                 	db	109
  1828  00FB2D  61                 	db	97
  1829  00FB2E  6E                 	db	110
  1830  00FB2F  64                 	db	100
  1831  00FB30  73                 	db	115
  1832  00FB31  20                 	db	32
  1833  00FB32  32                 	db	50
  1834  00FB33  00                 	db	0
  1835  00FB34  00                 	db	0
  1836  00FB35  00                 	db	0
  1837  00FB36  00                 	db	0
  1838  00FB37  00                 	db	0
  1839  00FB38  00                 	db	0
  1840  00FB39  00                 	db	0
  1841  00FB3A  00                 	db	0
  1842  00FB3B  64                 	db	100
  1843  00FB3C  69                 	db	105
  1844  00FB3D  73                 	db	115
  1845  00FB3E  70                 	db	112
  1846  00FB3F  6C                 	db	108
  1847  00FB40  61                 	db	97
  1848  00FB41  79                 	db	121
  1849  00FB42  73                 	db	115
  1850  00FB43  20                 	db	32
  1851  00FB44  32                 	db	50
  1852  00FB45  00                 	db	0
  1853  00FB46  00                 	db	0
  1854  00FB47  00                 	db	0
  1855  00FB48  00                 	db	0
  1856  00FB49  00                 	db	0
  1857  00FB4A  00                 	db	0
  1858  00FB4B  00                 	db	0
  1859  00FB4C  00                 	db	0
  1860  00FB4D  63                 	db	99
  1861  00FB4E  6F                 	db	111
  1862  00FB4F  6D                 	db	109
  1863  00FB50  6D                 	db	109
  1864  00FB51  61                 	db	97
  1865  00FB52  6E                 	db	110
  1866  00FB53  64                 	db	100
  1867  00FB54  73                 	db	115
  1868  00FB55  20                 	db	32
  1869  00FB56  33                 	db	51
  1870  00FB57  00                 	db	0
  1871  00FB58  00                 	db	0
  1872  00FB59  00                 	db	0
  1873  00FB5A  00                 	db	0
  1874  00FB5B  00                 	db	0
  1875  00FB5C  00                 	db	0
  1876  00FB5D  00                 	db	0
  1877  00FB5E  00                 	db	0
  1878  00FB5F  64                 	db	100
  1879  00FB60  69                 	db	105
  1880  00FB61  73                 	db	115
  1881  00FB62  70                 	db	112
  1882  00FB63  6C                 	db	108
  1883  00FB64  61                 	db	97
  1884  00FB65  79                 	db	121
  1885  00FB66  73                 	db	115
  1886  00FB67  20                 	db	32
  1887  00FB68  33                 	db	51
  1888  00FB69  00                 	db	0
  1889  00FB6A  00                 	db	0
  1890  00FB6B  00                 	db	0
  1891  00FB6C  00                 	db	0
  1892  00FB6D  00                 	db	0
  1893  00FB6E  00                 	db	0
  1894  00FB6F  00                 	db	0
  1895  00FB70  00                 	db	0
  1896  00FB71  63                 	db	99
  1897  00FB72  6F                 	db	111
  1898  00FB73  6D                 	db	109
  1899  00FB74  6D                 	db	109
  1900  00FB75  61                 	db	97
  1901  00FB76  6E                 	db	110
  1902  00FB77  64                 	db	100
  1903  00FB78  73                 	db	115
  1904  00FB79  20                 	db	32
  1905  00FB7A  34                 	db	52
  1906  00FB7B  00                 	db	0
  1907  00FB7C  00                 	db	0
  1908  00FB7D  00                 	db	0
  1909  00FB7E  00                 	db	0
  1910  00FB7F  00                 	db	0
  1911  00FB80  00                 	db	0
  1912  00FB81  00                 	db	0
  1913  00FB82  00                 	db	0
  1914  00FB83  64                 	db	100
  1915  00FB84  69                 	db	105
  1916  00FB85  73                 	db	115
  1917  00FB86  70                 	db	112
  1918  00FB87  6C                 	db	108
  1919  00FB88  61                 	db	97
  1920  00FB89  79                 	db	121
  1921  00FB8A  73                 	db	115
  1922  00FB8B  20                 	db	32
  1923  00FB8C  34                 	db	52
  1924  00FB8D  00                 	db	0
  1925  00FB8E  00                 	db	0
  1926  00FB8F  00                 	db	0
  1927  00FB90  00                 	db	0
  1928  00FB91  00                 	db	0
  1929  00FB92  00                 	db	0
  1930  00FB93  00                 	db	0
  1931  00FB94  00                 	db	0
  1932  00FB95                     __end_of_T:
  1933                           	opt callstack 0
  1934  00FB95                     _spin:
  1935                           	opt callstack 0
  1936  00FB95  7C                 	db	124
  1937  00FB96  7C                 	db	124
  1938  00FB97  2F                 	db	47
  1939  00FB98  2F                 	db	47
  1940  00FB99  2D                 	db	45
  1941  00FB9A  2D                 	db	45
  1942  00FB9B  00                 	db	0
  1943  00FB9C  00                 	db	0
  1944  00FB9D  00                 	db	0
  1945  00FB9E  00                 	db	0
  1946  00FB9F  00                 	db	0
  1947  00FBA0  00                 	db	0
  1948  00FBA1  00                 	db	0
  1949  00FBA2  00                 	db	0
  1950  00FBA3  00                 	db	0
  1951  00FBA4  00                 	db	0
  1952  00FBA5  00                 	db	0
  1953  00FBA6  00                 	db	0
  1954  00FBA7  00                 	db	0
  1955  00FBA8  00                 	db	0
  1956  00FBA9  7C                 	db	124
  1957  00FBAA  7C                 	db	124
  1958  00FBAB  2F                 	db	47
  1959  00FBAC  2F                 	db	47
  1960  00FBAD  2D                 	db	45
  1961  00FBAE  2D                 	db	45
  1962  00FBAF  5C                 	db	92
  1963  00FBB0  5C                 	db	92
  1964  00FBB1  00                 	db	0
  1965  00FBB2  00                 	db	0
  1966  00FBB3  00                 	db	0
  1967  00FBB4  00                 	db	0
  1968  00FBB5  00                 	db	0
  1969  00FBB6  00                 	db	0
  1970  00FBB7  00                 	db	0
  1971  00FBB8  00                 	db	0
  1972  00FBB9  00                 	db	0
  1973  00FBBA  00                 	db	0
  1974  00FBBB  00                 	db	0
  1975  00FBBC  00                 	db	0
  1976  00FBBD  4F                 	db	79
  1977  00FBBE  4F                 	db	79
  1978  00FBBF  4F                 	db	79
  1979  00FBC0  4F                 	db	79
  1980  00FBC1  4F                 	db	79
  1981  00FBC2  4F                 	db	79
  1982  00FBC3  2D                 	db	45
  1983  00FBC4  2D                 	db	45
  1984  00FBC5  5F                 	db	95
  1985  00FBC6  5F                 	db	95
  1986  00FBC7  2D                 	db	45
  1987  00FBC8  00                 	db	0
  1988  00FBC9  00                 	db	0
  1989  00FBCA  00                 	db	0
  1990  00FBCB  00                 	db	0
  1991  00FBCC  00                 	db	0
  1992  00FBCD  00                 	db	0
  1993  00FBCE  00                 	db	0
  1994  00FBCF  00                 	db	0
  1995  00FBD0  00                 	db	0
  1996  00FBD1  76                 	db	118
  1997  00FBD2  76                 	db	118
  1998  00FBD3  3C                 	db	60
  1999  00FBD4  3C                 	db	60
  2000  00FBD5  5E                 	db	94
  2001  00FBD6  5E                 	db	94
  2002  00FBD7  3E                 	db	62
  2003  00FBD8  3E                 	db	62
  2004  00FBD9  00                 	db	0
  2005  00FBDA  00                 	db	0
  2006  00FBDB  00                 	db	0
  2007  00FBDC  00                 	db	0
  2008  00FBDD  00                 	db	0
  2009  00FBDE  00                 	db	0
  2010  00FBDF  00                 	db	0
  2011  00FBE0  00                 	db	0
  2012  00FBE1  00                 	db	0
  2013  00FBE2  00                 	db	0
  2014  00FBE3  00                 	db	0
  2015  00FBE4  00                 	db	0
  2016  00FBE5  2E                 	db	46
  2017  00FBE6  2E                 	db	46
  2018  00FBE7  2A                 	db	42
  2019  00FBE8  2A                 	db	42
  2020  00FBE9  78                 	db	120
  2021  00FBEA  23                 	db	35
  2022  00FBEB  78                 	db	120
  2023  00FBEC  23                 	db	35
  2024  00FBED  58                 	db	88
  2025  00FBEE  58                 	db	88
  2026  00FBEF  7C                 	db	124
  2027  00FBF0  7C                 	db	124
  2028  00FBF1  2D                 	db	45
  2029  00FBF2  2D                 	db	45
  2030  00FBF3  00                 	db	0
  2031  00FBF4  00                 	db	0
  2032  00FBF5  00                 	db	0
  2033  00FBF6  00                 	db	0
  2034  00FBF7  00                 	db	0
  2035  00FBF8  00                 	db	0
  2036  00FBF9  2E                 	db	46
  2037  00FBFA  2E                 	db	46
  2038  00FBFB  6F                 	db	111
  2039  00FBFC  6F                 	db	111
  2040  00FBFD  4F                 	db	79
  2041  00FBFE  4F                 	db	79
  2042  00FBFF  6F                 	db	111
  2043  00FC00  6F                 	db	111
  2044  00FC01  00                 	db	0
  2045  00FC02  00                 	db	0
  2046  00FC03  00                 	db	0
  2047  00FC04  00                 	db	0
  2048  00FC05  00                 	db	0
  2049  00FC06  00                 	db	0
  2050  00FC07  00                 	db	0
  2051  00FC08  00                 	db	0
  2052  00FC09  00                 	db	0
  2053  00FC0A  00                 	db	0
  2054  00FC0B  00                 	db	0
  2055  00FC0C  00                 	db	0
  2056  00FC0D                     __end_of_spin:
  2057                           	opt callstack 0
  2058  00FC0D  0000               	dw	0
  2059  00FC0F  3F80               	dw	16256
  2060  00FC11  0000               	dw	0
  2061  00FC13  3FC0               	dw	16320
  2062  00FC15                     __end_of_bp:
  2063                           	opt callstack 0
  2064  00FC15  AA00               	dw	43520
  2065  00FC17  3FB8               	dw	16312
  2066  00FC19                     __end_of_ivln2_h:
  2067                           	opt callstack 0
  2068  00FC19  23C6               	dw	9158
  2069  00FC1B  B8F6               	dw	47350
  2070  00FC1D                     __end_of_cp_l:
  2071                           	opt callstack 0
  2072  00FC1D  4000               	dw	16384
  2073  00FC1F  3F76               	dw	16246
  2074  00FC21                     __end_of_cp_h:
  2075                           	opt callstack 0
  2076  0000                     _IVTADL	set	14493
  2077  0000                     _IVTADH	set	14494
  2078  0000                     _IVTADU	set	14495
  2079  0000                     _PIR6bits	set	14758
  2080  0000                     _PIR4bits	set	14756
  2081  0000                     _PIE8bits	set	14744
  2082  0000                     _PIR8bits	set	14760
  2083  0000                     _SCANPR	set	14839
  2084  0000                     _DMA2PR	set	14836
  2085  0000                     _DMA1PR	set	14835
  2086  0000                     _MAINPR	set	14834
  2087  0000                     _ISRPR	set	14833
  2088  0000                     _PIE2bits	set	14738
  2089  0000                     _PIR2bits	set	14754
  2090  0000                     _PIE9bits	set	14745
  2091  0000                     _PIR9bits	set	14761
  2092  0000                     _PIE6bits	set	14742
  2093  0000                     _PIE3bits	set	14739
  2094  0000                     _PMD7	set	14791
  2095  0000                     _PMD6	set	14790
  2096  0000                     _PMD5	set	14789
  2097  0000                     _PMD4	set	14788
  2098  0000                     _PMD3	set	14787
  2099  0000                     _PMD2	set	14786
  2100  0000                     _PMD1	set	14785
  2101  0000                     _PMD0	set	14784
  2102  0000                     _OSCTUNE	set	14814
  2103  0000                     _OSCFRQ	set	14815
  2104  0000                     _OSCEN	set	14813
  2105  0000                     _OSCCON3	set	14811
  2106  0000                     _OSCCON1	set	14809
  2107  0000                     _IPR8bits	set	14728
  2108  0000                     _IPR9bits	set	14729
  2109  0000                     _IPR5bits	set	14725
  2110  0000                     _IPR1bits	set	14721
  2111  0000                     _IPR3bits	set	14723
  2112  0000                     _IPR6bits	set	14726
  2113  0000                     _IPR2bits	set	14722
  2114  0000                     _PIE5bits	set	14741
  2115  0000                     _PIE1bits	set	14737
  2116  0000                     _PIR5bits	set	14757
  2117  0000                     _PIR1bits	set	14753
  2118  0000                     _PLLR	set	118496
  2119  0000                     _SPI1SDIPPS	set	15071
  2120  0000                     _U1RXPPS	set	15077
  2121  0000                     _RC6PPS	set	14870
  2122  0000                     _RC5PPS	set	14869
  2123  0000                     _INT1PPS	set	15041
  2124  0000                     _RD1PPS	set	14873
  2125  0000                     _INT0PPS	set	15040
  2126  0000                     _RC3PPS	set	14867
  2127  0000                     _RB6PPS	set	14862
  2128  0000                     _SPI1SCKPPS	set	15070
  2129  0000                     _U2RXPPS	set	15080
  2130  0000                     _SLRCONF	set	14995
  2131  0000                     _SLRCONE	set	14979
  2132  0000                     _SLRCOND	set	14963
  2133  0000                     _SLRCONC	set	14947
  2134  0000                     _SLRCONB	set	14931
  2135  0000                     _SLRCONA	set	14915
  2136  0000                     _ODCOND	set	14962
  2137  0000                     _ODCONC	set	14946
  2138  0000                     _ODCONB	set	14930
  2139  0000                     _ODCONA	set	14914
  2140  0000                     _ODCONF	set	14994
  2141  0000                     _ODCONE	set	14978
  2142  0000                     _WPUC	set	14945
  2143  0000                     _WPUA	set	14913
  2144  0000                     _WPUB	set	14929
  2145  0000                     _WPUE	set	14977
  2146  0000                     _WPUF	set	14993
  2147  0000                     _WPUD	set	14961
  2148  0000                     _ANSELA	set	14912
  2149  0000                     _ANSELF	set	14992
  2150  0000                     _ANSELE	set	14976
  2151  0000                     _ANSELB	set	14928
  2152  0000                     _ANSELC	set	14944
  2153  0000                     _ANSELD	set	14960
  2154  0000                     _DMA2SSA	set	15321
  2155  0000                     _DMA1SSA	set	15353
  2156  0000                     _DMA2DSZ	set	15310
  2157  0000                     _DMA2SSZ	set	15319
  2158  0000                     _DMA2DSA	set	15312
  2159  0000                     _DMA1DSZ	set	15342
  2160  0000                     _DMA1SSZ	set	15351
  2161  0000                     _DMA1DSA	set	15344
  2162  0000                     _DMA2CON0bits	set	15324
  2163  0000                     _DMA2CON1bits	set	15325
  2164  0000                     _DMA1CON0bits	set	15356
  2165  0000                     _DMA1CON1bits	set	15357
  2166  0000                     _DMA2CON0	set	15324
  2167  0000                     _DMA2AIRQ	set	15326
  2168  0000                     _DMA2SIRQ	set	15327
  2169  0000                     _DMA2CON1	set	15325
  2170  0000                     _DMA1CON0	set	15356
  2171  0000                     _DMA1AIRQ	set	15358
  2172  0000                     _DMA1SIRQ	set	15359
  2173  0000                     _DMA1CON1	set	15357
  2174  0000                     _CLKRCON	set	15589
  2175  0000                     _CLKRCLK	set	15590
  2176  0000                     _SPI1INTFbits	set	15642
  2177  0000                     _SPI1CON0bits	set	15636
  2178  0000                     _SPI1RXB	set	15632
  2179  0000                     _SPI1TXB	set	15633
  2180  0000                     _SPI1TCNTL	set	15634
  2181  0000                     _SPI1CON0	set	15636
  2182  0000                     _SPI1CLK	set	15644
  2183  0000                     _SPI1BAUD	set	15641
  2184  0000                     _SPI1CON2	set	15638
  2185  0000                     _SPI1CON1	set	15637
  2186  0000                     _U2RXB	set	15824
  2187  0000                     _U2TXB	set	15826
  2188  0000                     _U2ERRIE	set	15842
  2189  0000                     _U2ERRIR	set	15841
  2190  0000                     _U2UIR	set	15840
  2191  0000                     _U2FIFO	set	15839
  2192  0000                     _U2BRGH	set	15838
  2193  0000                     _U2BRGL	set	15837
  2194  0000                     _U2CON2	set	15836
  2195  0000                     _U2CON1	set	15835
  2196  0000                     _U2CON0	set	15834
  2197  0000                     _U2P3L	set	15832
  2198  0000                     _U2P2L	set	15830
  2199  0000                     _U2P1L	set	15828
  2200  0000                     _U1RXB	set	15848
  2201  0000                     _U1ERRIE	set	15866
  2202  0000                     _U1ERRIR	set	15865
  2203  0000                     _U1UIR	set	15864
  2204  0000                     _U1FIFO	set	15863
  2205  0000                     _U1BRGH	set	15862
  2206  0000                     _U1BRGL	set	15861
  2207  0000                     _U1CON2	set	15860
  2208  0000                     _U1CON1	set	15859
  2209  0000                     _U1CON0	set	15858
  2210  0000                     _U1P3H	set	15857
  2211  0000                     _U1P3L	set	15856
  2212  0000                     _U1P2H	set	15855
  2213  0000                     _U1P2L	set	15854
  2214  0000                     _U1P1H	set	15853
  2215  0000                     _U1P1L	set	15852
  2216  0000                     _FVRCON	set	16065
  2217  0000                     _ADFLTRL	set	16102
  2218  0000                     _ADFLTRH	set	16103
  2219  0000                     _ADCON0bits	set	16120
  2220  0000                     _ADCON0	set	16120
  2221  0000                     _ADCLK	set	16127
  2222  0000                     _ADACT	set	16126
  2223  0000                     _ADREF	set	16125
  2224  0000                     _ADSTAT	set	16124
  2225  0000                     _ADCON3	set	16123
  2226  0000                     _ADCON2	set	16122
  2227  0000                     _ADCON1	set	16121
  2228  0000                     _ADPREH	set	16119
  2229  0000                     _ADPREL	set	16118
  2230  0000                     _ADCAP	set	16117
  2231  0000                     _ADACQH	set	16116
  2232  0000                     _ADACQL	set	16115
  2233  0000                     _ADPCH	set	16113
  2234  0000                     _ADRPT	set	16108
  2235  0000                     _ADACCU	set	16106
  2236  0000                     _ADSTPTH	set	16101
  2237  0000                     _ADSTPTL	set	16100
  2238  0000                     _ADUTHH	set	16097
  2239  0000                     _ADUTHL	set	16096
  2240  0000                     _ADLTHH	set	16095
  2241  0000                     _ADLTHL	set	16094
  2242  0000                     _CCPTMRS1bits	set	16223
  2243  0000                     _PORTFbits	set	16335
  2244  0000                     _LATFbits	set	16319
  2245  0000                     _LATCbits	set	16316
  2246  0000                     _LATDbits	set	16317
  2247  0000                     _PORTBbits	set	16331
  2248  0000                     _T3CONbits	set	16294
  2249  0000                     _T3CON	set	16294
  2250  0000                     _TMR3L	set	16292
  2251  0000                     _TMR3H	set	16293
  2252  0000                     _T3CLK	set	16297
  2253  0000                     _T3GATE	set	16296
  2254  0000                     _T3GCON	set	16295
  2255  0000                     _T2CON	set	16300
  2256  0000                     _T2TMR	set	16298
  2257  0000                     _T2PR	set	16299
  2258  0000                     _T2RST	set	16303
  2259  0000                     _T2HLT	set	16301
  2260  0000                     _T2CLKCON	set	16302
  2261  0000                     _PWM8DCL	set	16224
  2262  0000                     _PWM8DCH	set	16225
  2263  0000                     _PWM8CON	set	16226
  2264  0000                     _LATEbits	set	16318
  2265  0000                     _T5CONbits	set	16282
  2266  0000                     _T5CON	set	16282
  2267  0000                     _TMR5L	set	16280
  2268  0000                     _TMR5H	set	16281
  2269  0000                     _T5CLK	set	16285
  2270  0000                     _T5GATE	set	16284
  2271  0000                     _T5GCON	set	16283
  2272  0000                     _T6CON	set	16276
  2273  0000                     _T6TMR	set	16274
  2274  0000                     _T6PR	set	16275
  2275  0000                     _T6RST	set	16279
  2276  0000                     _T6HLT	set	16277
  2277  0000                     _T6CLKCON	set	16278
  2278  0000                     _TRISD	set	16325
  2279  0000                     _TRISC	set	16324
  2280  0000                     _TRISB	set	16323
  2281  0000                     _TRISA	set	16322
  2282  0000                     _TRISF	set	16327
  2283  0000                     _TRISE	set	16326
  2284  0000                     _LATC	set	16316
  2285  0000                     _LATB	set	16315
  2286  0000                     _LATF	set	16319
  2287  0000                     _LATA	set	16314
  2288  0000                     _LATD	set	16317
  2289  0000                     _LATE	set	16318
  2290  0000                     _IVTLOCKbits	set	16340
  2291  0000                     _IVTLOCK	set	16340
  2292  0000                     _INTCON0bits	set	16338
  2293  0000                     _GIE	set	130711
  2294  00FC21                     STR_64:
  2295                           
  2296                           ; BSR set to: 57
  2297  00FC21  20                 	db	32
  2298  00FC22  25                 	db	37
  2299  00FC23  63                 	db	99	;'c'
  2300  00FC24  20                 	db	32
  2301  00FC25  2C                 	db	44
  2302  00FC26  25                 	db	37
  2303  00FC27  6C                 	db	108	;'l'
  2304  00FC28  75                 	db	117	;'u'
  2305  00FC29  2C                 	db	44
  2306  00FC2A  25                 	db	37
  2307  00FC2B  34                 	db	52	;'4'
  2308  00FC2C  2E                 	db	46
  2309  00FC2D  34                 	db	52	;'4'
  2310  00FC2E  66                 	db	102	;'f'
  2311  00FC2F  2C                 	db	44
  2312  00FC30  25                 	db	37
  2313  00FC31  34                 	db	52	;'4'
  2314  00FC32  2E                 	db	46
  2315  00FC33  34                 	db	52	;'4'
  2316  00FC34  66                 	db	102	;'f'
  2317  00FC35  2C                 	db	44
  2318  00FC36  25                 	db	37
  2319  00FC37  34                 	db	52	;'4'
  2320  00FC38  2E                 	db	46
  2321  00FC39  34                 	db	52	;'4'
  2322  00FC3A  66                 	db	102	;'f'
  2323  00FC3B  2C                 	db	44
  2324  00FC3C  25                 	db	37
  2325  00FC3D  34                 	db	52	;'4'
  2326  00FC3E  2E                 	db	46
  2327  00FC3F  34                 	db	52	;'4'
  2328  00FC40  66                 	db	102	;'f'
  2329  00FC41  2C                 	db	44
  2330  00FC42  25                 	db	37
  2331  00FC43  34                 	db	52	;'4'
  2332  00FC44  2E                 	db	46
  2333  00FC45  33                 	db	51	;'3'
  2334  00FC46  66                 	db	102	;'f'
  2335  00FC47  2C                 	db	44
  2336  00FC48  25                 	db	37
  2337  00FC49  34                 	db	52	;'4'
  2338  00FC4A  2E                 	db	46
  2339  00FC4B  33                 	db	51	;'3'
  2340  00FC4C  66                 	db	102	;'f'
  2341  00FC4D  2C                 	db	44
  2342  00FC4E  25                 	db	37
  2343  00FC4F  34                 	db	52	;'4'
  2344  00FC50  2E                 	db	46
  2345  00FC51  33                 	db	51	;'3'
  2346  00FC52  66                 	db	102	;'f'
  2347  00FC53  2C                 	db	44
  2348  00FC54  25                 	db	37
  2349  00FC55  34                 	db	52	;'4'
  2350  00FC56  2E                 	db	46
  2351  00FC57  33                 	db	51	;'3'
  2352  00FC58  66                 	db	102	;'f'
  2353  00FC59  2C                 	db	44
  2354  00FC5A  25                 	db	37
  2355  00FC5B  34                 	db	52	;'4'
  2356  00FC5C  2E                 	db	46
  2357  00FC5D  33                 	db	51	;'3'
  2358  00FC5E  66                 	db	102	;'f'
  2359  00FC5F  2C                 	db	44
  2360  00FC60  25                 	db	37
  2361  00FC61  34                 	db	52	;'4'
  2362  00FC62  2E                 	db	46
  2363  00FC63  33                 	db	51	;'3'
  2364  00FC64  66                 	db	102	;'f'
  2365  00FC65  2C                 	db	44
  2366  00FC66  25                 	db	37
  2367  00FC67  64                 	db	100	;'d'
  2368  00FC68  2C                 	db	44
  2369  00FC69  25                 	db	37
  2370  00FC6A  64                 	db	100	;'d'
  2371  00FC6B  2C                 	db	44
  2372  00FC6C  25                 	db	37
  2373  00FC6D  32                 	db	50	;'2'
  2374  00FC6E  2E                 	db	46
  2375  00FC6F  36                 	db	54	;'6'
  2376  00FC70  66                 	db	102	;'f'
  2377  00FC71  2C                 	db	44
  2378  00FC72  25                 	db	37
  2379  00FC73  34                 	db	52	;'4'
  2380  00FC74  2E                 	db	46
  2381  00FC75  33                 	db	51	;'3'
  2382  00FC76  66                 	db	102	;'f'
  2383  00FC77  2C                 	db	44
  2384  00FC78  25                 	db	37
  2385  00FC79  64                 	db	100	;'d'
  2386  00FC7A  2C                 	db	44
  2387  00FC7B  25                 	db	37
  2388  00FC7C  64                 	db	100	;'d'
  2389  00FC7D  2C                 	db	44
  2390  00FC7E  25                 	db	37
  2391  00FC7F  6C                 	db	108	;'l'
  2392  00FC80  75                 	db	117	;'u'
  2393  00FC81  2C                 	db	44
  2394  00FC82  25                 	db	37
  2395  00FC83  6C                 	db	108	;'l'
  2396  00FC84  75                 	db	117	;'u'
  2397  00FC85  2C                 	db	44
  2398  00FC86  25                 	db	37
  2399  00FC87  34                 	db	52	;'4'
  2400  00FC88  2E                 	db	46
  2401  00FC89  33                 	db	51	;'3'
  2402  00FC8A  66                 	db	102	;'f'
  2403  00FC8B  2C                 	db	44
  2404  00FC8C  25                 	db	37
  2405  00FC8D  34                 	db	52	;'4'
  2406  00FC8E  2E                 	db	46
  2407  00FC8F  33                 	db	51	;'3'
  2408  00FC90  66                 	db	102	;'f'
  2409  00FC91  2C                 	db	44
  2410  00FC92  25                 	db	37
  2411  00FC93  34                 	db	52	;'4'
  2412  00FC94  2E                 	db	46
  2413  00FC95  33                 	db	51	;'3'
  2414  00FC96  66                 	db	102	;'f'
  2415  00FC97  0D                 	db	13
  2416  00FC98  0A                 	db	10
  2417  00FC99  00                 	db	0
  2418  00FC9A                     STR_17:
  2419                           
  2420                           ; BSR set to: 57
  2421  00FC9A  52                 	db	82	;'R'
  2422  00FC9B  31                 	db	49	;'1'
  2423  00FC9C  20                 	db	32
  2424  00FC9D  25                 	db	37
  2425  00FC9E  32                 	db	50	;'2'
  2426  00FC9F  2E                 	db	46
  2427  00FCA0  33                 	db	51	;'3'
  2428  00FCA1  66                 	db	102	;'f'
  2429  00FCA2  20                 	db	32
  2430  00FCA3  25                 	db	37
  2431  00FCA4  33                 	db	51	;'3'
  2432  00FCA5  2E                 	db	46
  2433  00FCA6  34                 	db	52	;'4'
  2434  00FCA7  66                 	db	102	;'f'
  2435  00FCA8  20                 	db	32
  2436  00FCA9  20                 	db	32
  2437  00FCAA  20                 	db	32
  2438  00FCAB  20                 	db	32
  2439  00FCAC  20                 	db	32
  2440  00FCAD  20                 	db	32
  2441  00FCAE  20                 	db	32
  2442  00FCAF  20                 	db	32
  2443  00FCB0  20                 	db	32
  2444  00FCB1  20                 	db	32
  2445  00FCB2  20                 	db	32
  2446  00FCB3  00                 	db	0
  2447  00FCB4                     STR_18:
  2448                           
  2449                           ; BSR set to: 57
  2450  00FCB4  52                 	db	82	;'R'
  2451  00FCB5  32                 	db	50	;'2'
  2452  00FCB6  20                 	db	32
  2453  00FCB7  25                 	db	37
  2454  00FCB8  32                 	db	50	;'2'
  2455  00FCB9  2E                 	db	46
  2456  00FCBA  33                 	db	51	;'3'
  2457  00FCBB  66                 	db	102	;'f'
  2458  00FCBC  20                 	db	32
  2459  00FCBD  25                 	db	37
  2460  00FCBE  33                 	db	51	;'3'
  2461  00FCBF  2E                 	db	46
  2462  00FCC0  34                 	db	52	;'4'
  2463  00FCC1  66                 	db	102	;'f'
  2464  00FCC2  20                 	db	32
  2465  00FCC3  20                 	db	32
  2466  00FCC4  20                 	db	32
  2467  00FCC5  20                 	db	32
  2468  00FCC6  20                 	db	32
  2469  00FCC7  20                 	db	32
  2470  00FCC8  20                 	db	32
  2471  00FCC9  20                 	db	32
  2472  00FCCA  20                 	db	32
  2473  00FCCB  20                 	db	32
  2474  00FCCC  20                 	db	32
  2475  00FCCD  00                 	db	0
  2476  00FCCE                     STR_9:
  2477                           
  2478                           ; BSR set to: 57
  2479  00FCCE  53                 	db	83	;'S'
  2480  00FCCF  20                 	db	32
  2481  00FCD0  53                 	db	83	;'S'
  2482  00FCD1  25                 	db	37
  2483  00FCD2  63                 	db	99	;'c'
  2484  00FCD3  43                 	db	67	;'C'
  2485  00FCD4  20                 	db	32
  2486  00FCD5  25                 	db	37
  2487  00FCD6  64                 	db	100	;'d'
  2488  00FCD7  20                 	db	32
  2489  00FCD8  25                 	db	37
  2490  00FCD9  32                 	db	50	;'2'
  2491  00FCDA  2E                 	db	46
  2492  00FCDB  34                 	db	52	;'4'
  2493  00FCDC  66                 	db	102	;'f'
  2494  00FCDD  20                 	db	32
  2495  00FCDE  20                 	db	32
  2496  00FCDF  20                 	db	32
  2497  00FCE0  20                 	db	32
  2498  00FCE1  20                 	db	32
  2499  00FCE2  20                 	db	32
  2500  00FCE3  20                 	db	32
  2501  00FCE4  20                 	db	32
  2502  00FCE5  20                 	db	32
  2503  00FCE6  20                 	db	32
  2504  00FCE7  00                 	db	0
  2505  00FCE8                     
  2506                           ; BSR set to: 57
  2507  00FCE8  20                 	db	32
  2508  00FCE9  4D                 	db	77	;'M'
  2509  00FCEA  65                 	db	101	;'e'
  2510  00FCEB  73                 	db	115	;'s'
  2511  00FCEC  67                 	db	103	;'g'
  2512  00FCED  20                 	db	32
  2513  00FCEE  25                 	db	37
  2514  00FCEF  64                 	db	100	;'d'
  2515  00FCF0  20                 	db	32
  2516  00FCF1  53                 	db	83	;'S'
  2517  00FCF2  74                 	db	116	;'t'
  2518  00FCF3  61                 	db	97	;'a'
  2519  00FCF4  63                 	db	99	;'c'
  2520  00FCF5  6B                 	db	107	;'k'
  2521  00FCF6  20                 	db	32
  2522  00FCF7  25                 	db	37
  2523  00FCF8  64                 	db	100	;'d'
  2524  00FCF9  20                 	db	32
  2525  00FCFA  20                 	db	32
  2526  00FCFB  20                 	db	32
  2527  00FCFC  20                 	db	32
  2528  00FCFD  20                 	db	32
  2529  00FCFE  20                 	db	32
  2530  00FCFF  00                 	db	0
  2531  00FD00                     STR_16:
  2532                           
  2533                           ; BSR set to: 57
  2534  00FD00  45                 	db	69	;'E'
  2535  00FD01  53                 	db	83	;'S'
  2536  00FD02  52                 	db	82	;'R'
  2537  00FD03  20                 	db	32
  2538  00FD04  20                 	db	32
  2539  00FD05  25                 	db	37
  2540  00FD06  32                 	db	50	;'2'
  2541  00FD07  2E                 	db	46
  2542  00FD08  36                 	db	54	;'6'
  2543  00FD09  66                 	db	102	;'f'
  2544  00FD0A  20                 	db	32
  2545  00FD0B  20                 	db	32
  2546  00FD0C  20                 	db	32
  2547  00FD0D  20                 	db	32
  2548  00FD0E  20                 	db	32
  2549  00FD0F  20                 	db	32
  2550  00FD10  20                 	db	32
  2551  00FD11  20                 	db	32
  2552  00FD12  20                 	db	32
  2553  00FD13  20                 	db	32
  2554  00FD14  20                 	db	32
  2555  00FD15  00                 	db	0
  2556  00FD16                     STR_10:
  2557                           
  2558                           ; BSR set to: 57
  2559  00FD16  53                 	db	83	;'S'
  2560  00FD17  74                 	db	116	;'t'
  2561  00FD18  61                 	db	97	;'a'
  2562  00FD19  74                 	db	116	;'t'
  2563  00FD1A  69                 	db	105	;'i'
  2564  00FD1B  63                 	db	99	;'c'
  2565  00FD1C  20                 	db	32
  2566  00FD1D  53                 	db	83	;'S'
  2567  00FD1E  4F                 	db	79	;'O'
  2568  00FD1F  43                 	db	67	;'C'
  2569  00FD20  20                 	db	32
  2570  00FD21  25                 	db	37
  2571  00FD22  64                 	db	100	;'d'
  2572  00FD23  20                 	db	32
  2573  00FD24  20                 	db	32
  2574  00FD25  20                 	db	32
  2575  00FD26  20                 	db	32
  2576  00FD27  20                 	db	32
  2577  00FD28  20                 	db	32
  2578  00FD29  20                 	db	32
  2579  00FD2A  20                 	db	32
  2580  00FD2B  00                 	db	0
  2581  00FD2C                     STR_11:
  2582                           
  2583                           ; BSR set to: 57
  2584  00FD2C  42                 	db	66	;'B'
  2585  00FD2D  61                 	db	97	;'a'
  2586  00FD2E  74                 	db	116	;'t'
  2587  00FD2F  74                 	db	116	;'t'
  2588  00FD30  65                 	db	101	;'e'
  2589  00FD31  72                 	db	114	;'r'
  2590  00FD32  79                 	db	121	;'y'
  2591  00FD33  20                 	db	32
  2592  00FD34  41                 	db	65	;'A'
  2593  00FD35  68                 	db	104	;'h'
  2594  00FD36  20                 	db	32
  2595  00FD37  25                 	db	37
  2596  00FD38  33                 	db	51	;'3'
  2597  00FD39  2E                 	db	46
  2598  00FD3A  32                 	db	50	;'2'
  2599  00FD3B  66                 	db	102	;'f'
  2600  00FD3C  20                 	db	32
  2601  00FD3D  20                 	db	32
  2602  00FD3E  20                 	db	32
  2603  00FD3F  20                 	db	32
  2604  00FD40  20                 	db	32
  2605  00FD41  00                 	db	0
  2606  00FD42                     STR_5:
  2607                           
  2608                           ; BSR set to: 57
  2609  00FD42  20                 	db	32
  2610  00FD43  20                 	db	32
  2611  00FD44  20                 	db	32
  2612  00FD45  20                 	db	32
  2613  00FD46  20                 	db	32
  2614  00FD47  20                 	db	32
  2615  00FD48  20                 	db	32
  2616  00FD49  20                 	db	32
  2617  00FD4A  20                 	db	32
  2618  00FD4B  20                 	db	32
  2619  00FD4C  20                 	db	32
  2620  00FD4D  20                 	db	32
  2621  00FD4E  20                 	db	32
  2622  00FD4F  20                 	db	32
  2623  00FD50  20                 	db	32
  2624  00FD51  20                 	db	32
  2625  00FD52  20                 	db	32
  2626  00FD53  20                 	db	32
  2627  00FD54  20                 	db	32
  2628  00FD55  20                 	db	32
  2629  00FD56  00                 	db	0
  2630  00FD57                     STR_8:
  2631                           
  2632                           ; BSR set to: 57
  2633  00FD57  42                 	db	66	;'B'
  2634  00FD58  56                 	db	86	;'V'
  2635  00FD59  20                 	db	32
  2636  00FD5A  25                 	db	37
  2637  00FD5B  32                 	db	50	;'2'
  2638  00FD5C  2E                 	db	46
  2639  00FD5D  34                 	db	52	;'4'
  2640  00FD5E  66                 	db	102	;'f'
  2641  00FD5F  20                 	db	32
  2642  00FD60  20                 	db	32
  2643  00FD61  20                 	db	32
  2644  00FD62  20                 	db	32
  2645  00FD63  20                 	db	32
  2646  00FD64  20                 	db	32
  2647  00FD65  20                 	db	32
  2648  00FD66  20                 	db	32
  2649  00FD67  20                 	db	32
  2650  00FD68  20                 	db	32
  2651  00FD69  20                 	db	32
  2652  00FD6A  20                 	db	32
  2653  00FD6B  00                 	db	0
  2654  00FD6C                     STR_4:
  2655                           
  2656                           ; BSR set to: 57
  2657  00FD6C  20                 	db	32
  2658  00FD6D  4E                 	db	78	;'N'
  2659  00FD6E  53                 	db	83	;'S'
  2660  00FD6F  41                 	db	65	;'A'
  2661  00FD70  53                 	db	83	;'S'
  2662  00FD71  50                 	db	80	;'P'
  2663  00FD72  4F                 	db	79	;'O'
  2664  00FD73  4F                 	db	79	;'O'
  2665  00FD74  4B                 	db	75	;'K'
  2666  00FD75  20                 	db	32
  2667  00FD76  20                 	db	32
  2668  00FD77  20                 	db	32
  2669  00FD78  20                 	db	32
  2670  00FD79  20                 	db	32
  2671  00FD7A  20                 	db	32
  2672  00FD7B  20                 	db	32
  2673  00FD7C  20                 	db	32
  2674  00FD7D  20                 	db	32
  2675  00FD7E  20                 	db	32
  2676  00FD7F  20                 	db	32
  2677  00FD80  00                 	db	0
  2678  00FD81                     STR_12:
  2679                           
  2680                           ; BSR set to: 57
  2681  00FD81  42                 	db	66	;'B'
  2682  00FD82  61                 	db	97	;'a'
  2683  00FD83  74                 	db	116	;'t'
  2684  00FD84  74                 	db	116	;'t'
  2685  00FD85  65                 	db	101	;'e'
  2686  00FD86  72                 	db	114	;'r'
  2687  00FD87  79                 	db	121	;'y'
  2688  00FD88  20                 	db	32
  2689  00FD89  45                 	db	69	;'E'
  2690  00FD8A  53                 	db	83	;'S'
  2691  00FD8B  52                 	db	82	;'R'
  2692  00FD8C  20                 	db	32
  2693  00FD8D  20                 	db	32
  2694  00FD8E  20                 	db	32
  2695  00FD8F  20                 	db	32
  2696  00FD90  20                 	db	32
  2697  00FD91  20                 	db	32
  2698  00FD92  20                 	db	32
  2699  00FD93  20                 	db	32
  2700  00FD94  20                 	db	32
  2701  00FD95  00                 	db	0
  2702  00FD96                     STR_13:
  2703                           
  2704                           ; BSR set to: 57
  2705  00FD96  43                 	db	67	;'C'
  2706  00FD97  61                 	db	97	;'a'
  2707  00FD98  6C                 	db	108	;'l'
  2708  00FD99  63                 	db	99	;'c'
  2709  00FD9A  75                 	db	117	;'u'
  2710  00FD9B  6C                 	db	108	;'l'
  2711  00FD9C  61                 	db	97	;'a'
  2712  00FD9D  74                 	db	116	;'t'
  2713  00FD9E  69                 	db	105	;'i'
  2714  00FD9F  6F                 	db	111	;'o'
  2715  00FDA0  6E                 	db	110	;'n'
  2716  00FDA1  20                 	db	32
  2717  00FDA2  20                 	db	32
  2718  00FDA3  20                 	db	32
  2719  00FDA4  20                 	db	32
  2720  00FDA5  20                 	db	32
  2721  00FDA6  20                 	db	32
  2722  00FDA7  20                 	db	32
  2723  00FDA8  20                 	db	32
  2724  00FDA9  20                 	db	32
  2725  00FDAA  00                 	db	0
  2726  00FDAB                     STR_2:
  2727                           
  2728                           ; BSR set to: 57
  2729  00FDAB  20                 	db	32
  2730  00FDAC  56                 	db	86	;'V'
  2731  00FDAD  65                 	db	101	;'e'
  2732  00FDAE  72                 	db	114	;'r'
  2733  00FDAF  73                 	db	115	;'s'
  2734  00FDB0  69                 	db	105	;'i'
  2735  00FDB1  6F                 	db	111	;'o'
  2736  00FDB2  6E                 	db	110	;'n'
  2737  00FDB3  20                 	db	32
  2738  00FDB4  25                 	db	37
  2739  00FDB5  73                 	db	115	;'s'
  2740  00FDB6  20                 	db	32
  2741  00FDB7  20                 	db	32
  2742  00FDB8  20                 	db	32
  2743  00FDB9  20                 	db	32
  2744  00FDBA  20                 	db	32
  2745  00FDBB  20                 	db	32
  2746  00FDBC  20                 	db	32
  2747  00FDBD  20                 	db	32
  2748  00FDBE  20                 	db	32
  2749  00FDBF  00                 	db	0
  2750  00FDC0                     STR_1:
  2751                           
  2752                           ; BSR set to: 57
  2753  00FDC0  20                 	db	32
  2754  00FDC1  4D                 	db	77	;'M'
  2755  00FDC2  42                 	db	66	;'B'
  2756  00FDC3  4D                 	db	77	;'M'
  2757  00FDC4  43                 	db	67	;'C'
  2758  00FDC5  20                 	db	32
  2759  00FDC6  53                 	db	83	;'S'
  2760  00FDC7  4F                 	db	79	;'O'
  2761  00FDC8  4C                 	db	76	;'L'
  2762  00FDC9  41                 	db	65	;'A'
  2763  00FDCA  52                 	db	82	;'R'
  2764  00FDCB  4D                 	db	77	;'M'
  2765  00FDCC  4F                 	db	79	;'O'
  2766  00FDCD  4E                 	db	78	;'N'
  2767  00FDCE  20                 	db	32
  2768  00FDCF  20                 	db	32
  2769  00FDD0  20                 	db	32
  2770  00FDD1  20                 	db	32
  2771  00FDD2  20                 	db	32
  2772  00FDD3  20                 	db	32
  2773  00FDD4  00                 	db	0
  2774  00FDD5                     STR_15:
  2775                           
  2776                           ; BSR set to: 57
  2777  00FDD5  43                 	db	67	;'C'
  2778  00FDD6  68                 	db	104	;'h'
  2779  00FDD7  65                 	db	101	;'e'
  2780  00FDD8  63                 	db	99	;'c'
  2781  00FDD9  6B                 	db	107	;'k'
  2782  00FDDA  69                 	db	105	;'i'
  2783  00FDDB  6E                 	db	110	;'n'
  2784  00FDDC  67                 	db	103	;'g'
  2785  00FDDD  20                 	db	32
  2786  00FDDE  25                 	db	37
  2787  00FDDF  63                 	db	99	;'c'
  2788  00FDE0  20                 	db	32
  2789  00FDE1  25                 	db	37
  2790  00FDE2  63                 	db	99	;'c'
  2791  00FDE3  20                 	db	32
  2792  00FDE4  20                 	db	32
  2793  00FDE5  20                 	db	32
  2794  00FDE6  20                 	db	32
  2795  00FDE7  20                 	db	32
  2796  00FDE8  20                 	db	32
  2797  00FDE9  00                 	db	0
  2798  00FDEA                     STR_14:
  2799                           
  2800                           ; BSR set to: 57
  2801  00FDEA  43                 	db	67	;'C'
  2802  00FDEB  68                 	db	104	;'h'
  2803  00FDEC  65                 	db	101	;'e'
  2804  00FDED  63                 	db	99	;'c'
  2805  00FDEE  6B                 	db	107	;'k'
  2806  00FDEF  20                 	db	32
  2807  00FDF0  33                 	db	51	;'3'
  2808  00FDF1  30                 	db	48	;'0'
  2809  00FDF2  20                 	db	32
  2810  00FDF3  73                 	db	115	;'s'
  2811  00FDF4  65                 	db	101	;'e'
  2812  00FDF5  63                 	db	99	;'c'
  2813  00FDF6  6F                 	db	111	;'o'
  2814  00FDF7  6E                 	db	110	;'n'
  2815  00FDF8  64                 	db	100	;'d'
  2816  00FDF9  73                 	db	115	;'s'
  2817  00FDFA  20                 	db	32
  2818  00FDFB  20                 	db	32
  2819  00FDFC  20                 	db	32
  2820  00FDFD  20                 	db	32
  2821  00FDFE  00                 	db	0
  2822  00FDFF                     STR_37:
  2823                           
  2824                           ; BSR set to: 57
  2825  00FDFF  45                 	db	69	;'E'
  2826  00FE00  53                 	db	83	;'S'
  2827  00FE01  52                 	db	82	;'R'
  2828  00FE02  20                 	db	32
  2829  00FE03  20                 	db	32
  2830  00FE04  25                 	db	37
  2831  00FE05  32                 	db	50	;'2'
  2832  00FE06  2E                 	db	46
  2833  00FE07  36                 	db	54	;'6'
  2834  00FE08  66                 	db	102	;'f'
  2835  00FE09  20                 	db	32
  2836  00FE0A  20                 	db	32
  2837  00FE0B  20                 	db	32
  2838  00FE0C  20                 	db	32
  2839  00FE0D  20                 	db	32
  2840  00FE0E  20                 	db	32
  2841  00FE0F  20                 	db	32
  2842  00FE10  20                 	db	32
  2843  00FE11  20                 	db	32
  2844  00FE12  00                 	db	0
  2845  00FE13                     STR_36:
  2846                           
  2847                           ; BSR set to: 57
  2848  00FE13  53                 	db	83	;'S'
  2849  00FE14  25                 	db	37
  2850  00FE15  63                 	db	99	;'c'
  2851  00FE16  43                 	db	67	;'C'
  2852  00FE17  20                 	db	32
  2853  00FE18  25                 	db	37
  2854  00FE19  64                 	db	100	;'d'
  2855  00FE1A  20                 	db	32
  2856  00FE1B  52                 	db	82	;'R'
  2857  00FE1C  55                 	db	85	;'U'
  2858  00FE1D  4E                 	db	78	;'N'
  2859  00FE1E  20                 	db	32
  2860  00FE1F  25                 	db	37
  2861  00FE20  64                 	db	100	;'d'
  2862  00FE21  20                 	db	32
  2863  00FE22  20                 	db	32
  2864  00FE23  20                 	db	32
  2865  00FE24  20                 	db	32
  2866  00FE25  20                 	db	32
  2867  00FE26  00                 	db	0
  2868  00FE27                     STR_25:
  2869                           
  2870                           ; BSR set to: 57
  2871  00FE27  50                 	db	80	;'P'
  2872  00FE28  56                 	db	86	;'V'
  2873  00FE29  20                 	db	32
  2874  00FE2A  25                 	db	37
  2875  00FE2B  63                 	db	99	;'c'
  2876  00FE2C  20                 	db	32
  2877  00FE2D  57                 	db	87	;'W'
  2878  00FE2E  48                 	db	72	;'H'
  2879  00FE2F  20                 	db	32
  2880  00FE30  25                 	db	37
  2881  00FE31  33                 	db	51	;'3'
  2882  00FE32  2E                 	db	46
  2883  00FE33  32                 	db	50	;'2'
  2884  00FE34  66                 	db	102	;'f'
  2885  00FE35  20                 	db	32
  2886  00FE36  20                 	db	32
  2887  00FE37  20                 	db	32
  2888  00FE38  20                 	db	32
  2889  00FE39  20                 	db	32
  2890  00FE3A  00                 	db	0
  2891  00FE3B                     STR_34:
  2892                           
  2893                           ; BSR set to: 57
  2894  00FE3B  42                 	db	66	;'B'
  2895  00FE3C  41                 	db	65	;'A'
  2896  00FE3D  54                 	db	84	;'T'
  2897  00FE3E  54                 	db	84	;'T'
  2898  00FE3F  20                 	db	32
  2899  00FE40  50                 	db	80	;'P'
  2900  00FE41  57                 	db	87	;'W'
  2901  00FE42  52                 	db	82	;'R'
  2902  00FE43  20                 	db	32
  2903  00FE44  25                 	db	37
  2904  00FE45  33                 	db	51	;'3'
  2905  00FE46  2E                 	db	46
  2906  00FE47  32                 	db	50	;'2'
  2907  00FE48  66                 	db	102	;'f'
  2908  00FE49  20                 	db	32
  2909  00FE4A  20                 	db	32
  2910  00FE4B  20                 	db	32
  2911  00FE4C  20                 	db	32
  2912  00FE4D  20                 	db	32
  2913  00FE4E  00                 	db	0
  2914  00FE4F                     STR_38:
  2915                           
  2916                           ; BSR set to: 57
  2917  00FE4F  52                 	db	82	;'R'
  2918  00FE50  31                 	db	49	;'1'
  2919  00FE51  20                 	db	32
  2920  00FE52  25                 	db	37
  2921  00FE53  32                 	db	50	;'2'
  2922  00FE54  2E                 	db	46
  2923  00FE55  33                 	db	51	;'3'
  2924  00FE56  66                 	db	102	;'f'
  2925  00FE57  20                 	db	32
  2926  00FE58  25                 	db	37
  2927  00FE59  33                 	db	51	;'3'
  2928  00FE5A  2E                 	db	46
  2929  00FE5B  34                 	db	52	;'4'
  2930  00FE5C  66                 	db	102	;'f'
  2931  00FE5D  20                 	db	32
  2932  00FE5E  20                 	db	32
  2933  00FE5F  20                 	db	32
  2934  00FE60  20                 	db	32
  2935  00FE61  20                 	db	32
  2936  00FE62  00                 	db	0
  2937  00FE63                     STR_39:
  2938                           
  2939                           ; BSR set to: 57
  2940  00FE63  52                 	db	82	;'R'
  2941  00FE64  32                 	db	50	;'2'
  2942  00FE65  20                 	db	32
  2943  00FE66  25                 	db	37
  2944  00FE67  32                 	db	50	;'2'
  2945  00FE68  2E                 	db	46
  2946  00FE69  33                 	db	51	;'3'
  2947  00FE6A  66                 	db	102	;'f'
  2948  00FE6B  20                 	db	32
  2949  00FE6C  25                 	db	37
  2950  00FE6D  33                 	db	51	;'3'
  2951  00FE6E  2E                 	db	46
  2952  00FE6F  34                 	db	52	;'4'
  2953  00FE70  66                 	db	102	;'f'
  2954  00FE71  20                 	db	32
  2955  00FE72  20                 	db	32
  2956  00FE73  20                 	db	32
  2957  00FE74  20                 	db	32
  2958  00FE75  20                 	db	32
  2959  00FE76  00                 	db	0
  2960  00FE77                     STR_22:
  2961                           
  2962                           ; BSR set to: 57
  2963  00FE77  50                 	db	80	;'P'
  2964  00FE78  56                 	db	86	;'V'
  2965  00FE79  20                 	db	32
  2966  00FE7A  25                 	db	37
  2967  00FE7B  63                 	db	99	;'c'
  2968  00FE7C  20                 	db	32
  2969  00FE7D  50                 	db	80	;'P'
  2970  00FE7E  57                 	db	87	;'W'
  2971  00FE7F  52                 	db	82	;'R'
  2972  00FE80  20                 	db	32
  2973  00FE81  25                 	db	37
  2974  00FE82  33                 	db	51	;'3'
  2975  00FE83  2E                 	db	46
  2976  00FE84  32                 	db	50	;'2'
  2977  00FE85  66                 	db	102	;'f'
  2978  00FE86  20                 	db	32
  2979  00FE87  20                 	db	32
  2980  00FE88  20                 	db	32
  2981  00FE89  20                 	db	32
  2982  00FE8A  00                 	db	0
  2983  00FE8B                     STR_35:
  2984                           
  2985                           ; BSR set to: 57
  2986  00FE8B  42                 	db	66	;'B'
  2987  00FE8C  41                 	db	65	;'A'
  2988  00FE8D  48                 	db	72	;'H'
  2989  00FE8E  20                 	db	32
  2990  00FE8F  25                 	db	37
  2991  00FE90  33                 	db	51	;'3'
  2992  00FE91  2E                 	db	46
  2993  00FE92  32                 	db	50	;'2'
  2994  00FE93  66                 	db	102	;'f'
  2995  00FE94  20                 	db	32
  2996  00FE95  50                 	db	80	;'P'
  2997  00FE96  25                 	db	37
  2998  00FE97  33                 	db	51	;'3'
  2999  00FE98  2E                 	db	46
  3000  00FE99  32                 	db	50	;'2'
  3001  00FE9A  66                 	db	102	;'f'
  3002  00FE9B  20                 	db	32
  3003  00FE9C  20                 	db	32
  3004  00FE9D  20                 	db	32
  3005  00FE9E  00                 	db	0
  3006  00FE9F                     STR_47:
  3007                           
  3008                           ; BSR set to: 57
  3009  00FE9F  48                 	db	72	;'H'
  3010  00FEA0  45                 	db	69	;'E'
  3011  00FEA1  4C                 	db	76	;'L'
  3012  00FEA2  50                 	db	80	;'P'
  3013  00FEA3  20                 	db	32
  3014  00FEA4  25                 	db	37
  3015  00FEA5  73                 	db	115	;'s'
  3016  00FEA6  20                 	db	32
  3017  00FEA7  20                 	db	32
  3018  00FEA8  20                 	db	32
  3019  00FEA9  20                 	db	32
  3020  00FEAA  20                 	db	32
  3021  00FEAB  20                 	db	32
  3022  00FEAC  20                 	db	32
  3023  00FEAD  20                 	db	32
  3024  00FEAE  20                 	db	32
  3025  00FEAF  20                 	db	32
  3026  00FEB0  20                 	db	32
  3027  00FEB1  00                 	db	0
  3028  00FEB2                     
  3029                           ; BSR set to: 57
  3030  00FEB2  44                 	db	68	;'D'
  3031  00FEB3  49                 	db	73	;'I'
  3032  00FEB4  53                 	db	83	;'S'
  3033  00FEB5  50                 	db	80	;'P'
  3034  00FEB6  4C                 	db	76	;'L'
  3035  00FEB7  41                 	db	65	;'A'
  3036  00FEB8  59                 	db	89	;'Y'
  3037  00FEB9  20                 	db	32
  3038  00FEBA  25                 	db	37
  3039  00FEBB  73                 	db	115	;'s'
  3040  00FEBC  20                 	db	32
  3041  00FEBD  20                 	db	32
  3042  00FEBE  20                 	db	32
  3043  00FEBF  20                 	db	32
  3044  00FEC0  20                 	db	32
  3045  00FEC1  20                 	db	32
  3046  00FEC2  20                 	db	32
  3047  00FEC3  20                 	db	32
  3048  00FEC4  00                 	db	0
  3049  00FEC5                     STR_31:
  3050                           
  3051                           ; BSR set to: 57
  3052  00FEC5  42                 	db	66	;'B'
  3053  00FEC6  41                 	db	65	;'A'
  3054  00FEC7  54                 	db	84	;'T'
  3055  00FEC8  20                 	db	32
  3056  00FEC9  49                 	db	73	;'I'
  3057  00FECA  57                 	db	87	;'W'
  3058  00FECB  48                 	db	72	;'H'
  3059  00FECC  20                 	db	32
  3060  00FECD  25                 	db	37
  3061  00FECE  34                 	db	52	;'4'
  3062  00FECF  2E                 	db	46
  3063  00FED0  31                 	db	49	;'1'
  3064  00FED1  66                 	db	102	;'f'
  3065  00FED2  20                 	db	32
  3066  00FED3  20                 	db	32
  3067  00FED4  20                 	db	32
  3068  00FED5  20                 	db	32
  3069  00FED6  20                 	db	32
  3070  00FED7  00                 	db	0
  3071  00FED8                     STR_32:
  3072                           
  3073                           ; BSR set to: 57
  3074  00FED8  42                 	db	66	;'B'
  3075  00FED9  41                 	db	65	;'A'
  3076  00FEDA  54                 	db	84	;'T'
  3077  00FEDB  20                 	db	32
  3078  00FEDC  4F                 	db	79	;'O'
  3079  00FEDD  57                 	db	87	;'W'
  3080  00FEDE  48                 	db	72	;'H'
  3081  00FEDF  20                 	db	32
  3082  00FEE0  25                 	db	37
  3083  00FEE1  34                 	db	52	;'4'
  3084  00FEE2  2E                 	db	46
  3085  00FEE3  31                 	db	49	;'1'
  3086  00FEE4  66                 	db	102	;'f'
  3087  00FEE5  20                 	db	32
  3088  00FEE6  20                 	db	32
  3089  00FEE7  20                 	db	32
  3090  00FEE8  20                 	db	32
  3091  00FEE9  20                 	db	32
  3092  00FEEA  00                 	db	0
  3093  00FEEB                     STR_33:
  3094                           
  3095                           ; BSR set to: 57
  3096  00FEEB  42                 	db	66	;'B'
  3097  00FEEC  41                 	db	65	;'A'
  3098  00FEED  54                 	db	84	;'T'
  3099  00FEEE  20                 	db	32
  3100  00FEEF  54                 	db	84	;'T'
  3101  00FEF0  57                 	db	87	;'W'
  3102  00FEF1  48                 	db	72	;'H'
  3103  00FEF2  20                 	db	32
  3104  00FEF3  25                 	db	37
  3105  00FEF4  34                 	db	52	;'4'
  3106  00FEF5  2E                 	db	46
  3107  00FEF6  31                 	db	49	;'1'
  3108  00FEF7  66                 	db	102	;'f'
  3109  00FEF8  20                 	db	32
  3110  00FEF9  20                 	db	32
  3111  00FEFA  20                 	db	32
  3112  00FEFB  20                 	db	32
  3113  00FEFC  20                 	db	32
  3114  00FEFD  00                 	db	0
  3115  00FEFE                     STR_27:
  3116                           
  3117                           ; BSR set to: 57
  3118  00FEFE  49                 	db	73	;'I'
  3119  00FEFF  4E                 	db	78	;'N'
  3120  00FF00  56                 	db	86	;'V'
  3121  00FF01  20                 	db	32
  3122  00FF02  20                 	db	32
  3123  00FF03  57                 	db	87	;'W'
  3124  00FF04  48                 	db	72	;'H'
  3125  00FF05  20                 	db	32
  3126  00FF06  25                 	db	37
  3127  00FF07  33                 	db	51	;'3'
  3128  00FF08  2E                 	db	46
  3129  00FF09  32                 	db	50	;'2'
  3130  00FF0A  66                 	db	102	;'f'
  3131  00FF0B  20                 	db	32
  3132  00FF0C  20                 	db	32
  3133  00FF0D  20                 	db	32
  3134  00FF0E  20                 	db	32
  3135  00FF0F  20                 	db	32
  3136  00FF10  00                 	db	0
  3137  00FF11                     STR_26:
  3138                           
  3139                           ; BSR set to: 57
  3140  00FF11  4C                 	db	76	;'L'
  3141  00FF12  4F                 	db	79	;'O'
  3142  00FF13  41                 	db	65	;'A'
  3143  00FF14  44                 	db	68	;'D'
  3144  00FF15  20                 	db	32
  3145  00FF16  57                 	db	87	;'W'
  3146  00FF17  48                 	db	72	;'H'
  3147  00FF18  20                 	db	32
  3148  00FF19  25                 	db	37
  3149  00FF1A  33                 	db	51	;'3'
  3150  00FF1B  2E                 	db	46
  3151  00FF1C  32                 	db	50	;'2'
  3152  00FF1D  66                 	db	102	;'f'
  3153  00FF1E  20                 	db	32
  3154  00FF1F  20                 	db	32
  3155  00FF20  20                 	db	32
  3156  00FF21  20                 	db	32
  3157  00FF22  20                 	db	32
  3158  00FF23  00                 	db	0
  3159  00FF24                     STR_24:
  3160                           
  3161                           ; BSR set to: 57
  3162  00FF24  49                 	db	73	;'I'
  3163  00FF25  4E                 	db	78	;'N'
  3164  00FF26  56                 	db	86	;'V'
  3165  00FF27  20                 	db	32
  3166  00FF28  20                 	db	32
  3167  00FF29  50                 	db	80	;'P'
  3168  00FF2A  57                 	db	87	;'W'
  3169  00FF2B  52                 	db	82	;'R'
  3170  00FF2C  20                 	db	32
  3171  00FF2D  25                 	db	37
  3172  00FF2E  33                 	db	51	;'3'
  3173  00FF2F  2E                 	db	46
  3174  00FF30  32                 	db	50	;'2'
  3175  00FF31  66                 	db	102	;'f'
  3176  00FF32  20                 	db	32
  3177  00FF33  20                 	db	32
  3178  00FF34  20                 	db	32
  3179  00FF35  20                 	db	32
  3180  00FF36  00                 	db	0
  3181  00FF37                     STR_23:
  3182                           
  3183                           ; BSR set to: 57
  3184  00FF37  4C                 	db	76	;'L'
  3185  00FF38  4F                 	db	79	;'O'
  3186  00FF39  41                 	db	65	;'A'
  3187  00FF3A  44                 	db	68	;'D'
  3188  00FF3B  20                 	db	32
  3189  00FF3C  50                 	db	80	;'P'
  3190  00FF3D  57                 	db	87	;'W'
  3191  00FF3E  52                 	db	82	;'R'
  3192  00FF3F  20                 	db	32
  3193  00FF40  25                 	db	37
  3194  00FF41  33                 	db	51	;'3'
  3195  00FF42  2E                 	db	46
  3196  00FF43  32                 	db	50	;'2'
  3197  00FF44  66                 	db	102	;'f'
  3198  00FF45  20                 	db	32
  3199  00FF46  20                 	db	32
  3200  00FF47  20                 	db	32
  3201  00FF48  20                 	db	32
  3202  00FF49  00                 	db	0
  3203  00FF4A                     STR_29:
  3204                           
  3205                           ; BSR set to: 57
  3206  00FF4A  42                 	db	66	;'B'
  3207  00FF4B  56                 	db	86	;'V'
  3208  00FF4C  20                 	db	32
  3209  00FF4D  25                 	db	37
  3210  00FF4E  32                 	db	50	;'2'
  3211  00FF4F  2E                 	db	46
  3212  00FF50  32                 	db	50	;'2'
  3213  00FF51  66                 	db	102	;'f'
  3214  00FF52  20                 	db	32
  3215  00FF53  42                 	db	66	;'B'
  3216  00FF54  41                 	db	65	;'A'
  3217  00FF55  20                 	db	32
  3218  00FF56  25                 	db	37
  3219  00FF57  32                 	db	50	;'2'
  3220  00FF58  2E                 	db	46
  3221  00FF59  32                 	db	50	;'2'
  3222  00FF5A  66                 	db	102	;'f'
  3223  00FF5B  20                 	db	32
  3224  00FF5C  00                 	db	0
  3225  00FF5D                     STR_30:
  3226                           
  3227                           ; BSR set to: 57
  3228  00FF5D  43                 	db	67	;'C'
  3229  00FF5E  56                 	db	86	;'V'
  3230  00FF5F  20                 	db	32
  3231  00FF60  25                 	db	37
  3232  00FF61  32                 	db	50	;'2'
  3233  00FF62  2E                 	db	46
  3234  00FF63  32                 	db	50	;'2'
  3235  00FF64  66                 	db	102	;'f'
  3236  00FF65  20                 	db	32
  3237  00FF66  4C                 	db	76	;'L'
  3238  00FF67  41                 	db	65	;'A'
  3239  00FF68  20                 	db	32
  3240  00FF69  25                 	db	37
  3241  00FF6A  32                 	db	50	;'2'
  3242  00FF6B  2E                 	db	46
  3243  00FF6C  32                 	db	50	;'2'
  3244  00FF6D  66                 	db	102	;'f'
  3245  00FF6E  20                 	db	32
  3246  00FF6F  00                 	db	0
  3247  00FF70                     STR_28:
  3248                           
  3249                           ; BSR set to: 57
  3250  00FF70  50                 	db	80	;'P'
  3251  00FF71  56                 	db	86	;'V'
  3252  00FF72  20                 	db	32
  3253  00FF73  25                 	db	37
  3254  00FF74  32                 	db	50	;'2'
  3255  00FF75  2E                 	db	46
  3256  00FF76  32                 	db	50	;'2'
  3257  00FF77  66                 	db	102	;'f'
  3258  00FF78  20                 	db	32
  3259  00FF79  50                 	db	80	;'P'
  3260  00FF7A  41                 	db	65	;'A'
  3261  00FF7B  20                 	db	32
  3262  00FF7C  25                 	db	37
  3263  00FF7D  32                 	db	50	;'2'
  3264  00FF7E  2E                 	db	46
  3265  00FF7F  32                 	db	50	;'2'
  3266  00FF80  66                 	db	102	;'f'
  3267  00FF81  20                 	db	32
  3268  00FF82  00                 	db	0
  3269  00FF83                     STR_21:
  3270                           
  3271                           ; BSR set to: 57
  3272  00FF83  25                 	db	37
  3273  00FF84  64                 	db	100	;'d'
  3274  00FF85  20                 	db	32
  3275  00FF86  25                 	db	37
  3276  00FF87  32                 	db	50	;'2'
  3277  00FF88  2E                 	db	46
  3278  00FF89  34                 	db	52	;'4'
  3279  00FF8A  66                 	db	102	;'f'
  3280  00FF8B  2C                 	db	44
  3281  00FF8C  20                 	db	32
  3282  00FF8D  25                 	db	37
  3283  00FF8E  64                 	db	100	;'d'
  3284  00FF8F  20                 	db	32
  3285  00FF90  20                 	db	32
  3286  00FF91  20                 	db	32
  3287  00FF92  23                 	db	35
  3288  00FF93  00                 	db	0
  3289  00FF94                     STR_19:
  3290                           
  3291                           ; BSR set to: 57
  3292  00FF94  25                 	db	37
  3293  00FF95  64                 	db	100	;'d'
  3294  00FF96  20                 	db	32
  3295  00FF97  25                 	db	37
  3296  00FF98  32                 	db	50	;'2'
  3297  00FF99  2E                 	db	46
  3298  00FF9A  34                 	db	52	;'4'
  3299  00FF9B  66                 	db	102	;'f'
  3300  00FF9C  20                 	db	32
  3301  00FF9D  20                 	db	32
  3302  00FF9E  20                 	db	32
  3303  00FF9F  25                 	db	37
  3304  00FFA0  64                 	db	100	;'d'
  3305  00FFA1  20                 	db	32
  3306  00FFA2  20                 	db	32
  3307  00FFA3  00                 	db	0
  3308  00FFA4                     STR_51:
  3309                           
  3310                           ; BSR set to: 57
  3311  00FFA4  76                 	db	118	;'v'
  3312  00FFA5  74                 	db	116	;'t'
  3313  00FFA6  65                 	db	101	;'e'
  3314  00FFA7  72                 	db	114	;'r'
  3315  00FFA8  6D                 	db	109	;'m'
  3316  00FFA9  20                 	db	32
  3317  00FFAA  25                 	db	37
  3318  00FFAB  78                 	db	120	;'x'
  3319  00FFAC  3A                 	db	58	;':'
  3320  00FFAD  25                 	db	37
  3321  00FFAE  78                 	db	120	;'x'
  3322  00FFAF  20                 	db	32
  3323  00FFB0  20                 	db	32
  3324  00FFB1  20                 	db	32
  3325  00FFB2  00                 	db	0
  3326  00FFB3                     STR_45:
  3327                           
  3328                           ; BSR set to: 57
  3329  00FFB3  4A                 	db	74	;'J'
  3330  00FFB4  61                 	db	97	;'a'
  3331  00FFB5  6E                 	db	110	;'n'
  3332  00FFB6  20                 	db	32
  3333  00FFB7  20                 	db	32
  3334  00FFB8  32                 	db	50	;'2'
  3335  00FFB9  20                 	db	32
  3336  00FFBA  32                 	db	50	;'2'
  3337  00FFBB  30                 	db	48	;'0'
  3338  00FFBC  32                 	db	50	;'2'
  3339  00FFBD  30                 	db	48	;'0'
  3340  00FFBE  00                 	db	0
  3341  00FFBF                     STR_49:
  3342                           
  3343                           ; BSR set to: 57
  3344  00FFBF  25                 	db	37
  3345  00FFC0  73                 	db	115	;'s'
  3346  00FFC1  20                 	db	32
  3347  00FFC2  20                 	db	32
  3348  00FFC3  20                 	db	32
  3349  00FFC4  20                 	db	32
  3350  00FFC5  20                 	db	32
  3351  00FFC6  20                 	db	32
  3352  00FFC7  20                 	db	32
  3353  00FFC8  00                 	db	0
  3354  00FFC9                     STR_46:
  3355                           
  3356                           ; BSR set to: 57
  3357  00FFC9  31                 	db	49	;'1'
  3358  00FFCA  36                 	db	54	;'6'
  3359  00FFCB  3A                 	db	58	;':'
  3360  00FFCC  35                 	db	53	;'5'
  3361  00FFCD  35                 	db	53	;'5'
  3362  00FFCE  3A                 	db	58	;':'
  3363  00FFCF  30                 	db	48	;'0'
  3364  00FFD0  36                 	db	54	;'6'
  3365  00FFD1  00                 	db	0
  3366  00FFD2                     STR_3:
  3367                           
  3368                           ; BSR set to: 57
  3369  00FFD2  31                 	db	49	;'1'
  3370  00FFD3  2E                 	db	46
  3371  00FFD4  30                 	db	48	;'0'
  3372  00FFD5  38                 	db	56	;'8'
  3373  00FFD6  00                 	db	0
  3374  00FFD7                     STR_65:
  3375                           
  3376                           ; BSR set to: 57
  3377  00FFD7  49                 	db	73	;'I'
  3378  00FFD8  4E                 	db	78	;'N'
  3379  00FFD9  46                 	db	70	;'F'
  3380  00FFDA  00                 	db	0
  3381  00FFDB                     STR_69:
  3382                           
  3383                           ; BSR set to: 57
  3384  00FFDB  4E                 	db	78	;'N'
  3385  00FFDC  41                 	db	65	;'A'
  3386  00FFDD  4E                 	db	78	;'N'
  3387  00FFDE  00                 	db	0
  3388  00FFDF                     STR_66:
  3389                           
  3390                           ; BSR set to: 57
  3391  00FFDF  69                 	db	105	;'i'
  3392  00FFE0  6E                 	db	110	;'n'
  3393  00FFE1  66                 	db	102	;'f'
  3394  00FFE2  00                 	db	0
  3395  00FFE3                     STR_70:
  3396                           
  3397                           ; BSR set to: 57
  3398  00FFE3  6E                 	db	110	;'n'
  3399  00FFE4  61                 	db	97	;'a'
  3400  00FFE5  6E                 	db	110	;'n'
  3401  00FFE6  00                 	db	0
  3402  00FFE7                     STR_96:
  3403                           
  3404                           ; BSR set to: 57
  3405  00FFE7  6C                 	db	108	;'l'
  3406  00FFE8  58                 	db	88	;'X'
  3407  00FFE9  00                 	db	0
  3408  00FFEA                     STR_73:
  3409                           
  3410                           ; BSR set to: 57
  3411  00FFEA  6C                 	db	108	;'l'
  3412  00FFEB  64                 	db	100	;'d'
  3413  00FFEC  00                 	db	0
  3414  00FFED                     STR_82:
  3415                           
  3416                           ; BSR set to: 57
  3417  00FFED  6C                 	db	108	;'l'
  3418  00FFEE  66                 	db	102	;'f'
  3419  00FFEF  00                 	db	0
  3420  00FFF0                     STR_77:
  3421                           
  3422                           ; BSR set to: 57
  3423  00FFF0  6C                 	db	108	;'l'
  3424  00FFF1  69                 	db	105	;'i'
  3425  00FFF2  00                 	db	0
  3426  00FFF3                     STR_87:
  3427                           
  3428                           ; BSR set to: 57
  3429  00FFF3  6C                 	db	108	;'l'
  3430  00FFF4  75                 	db	117	;'u'
  3431  00FFF5  00                 	db	0
  3432  00FFF6                     STR_92:
  3433                           
  3434                           ; BSR set to: 57
  3435  00FFF6  6C                 	db	108	;'l'
  3436  00FFF7  78                 	db	120	;'x'
  3437  00FFF8  00                 	db	0
  3438  00FFF9                     STR_44:
  3439                           
  3440                           ; BSR set to: 57
  3441  00FFF9  25                 	db	37
  3442  00FFFA  63                 	db	99	;'c'
  3443  00FFFB  00                 	db	0
  3444  00FFFC                     STR_43:
  3445                           
  3446                           ; BSR set to: 57
  3447  00FFFC  25                 	db	37
  3448  00FFFD  73                 	db	115	;'s'
  3449  00FFFE  00                 	db	0
  3450  0000                     
  3451                           ; #config settings
  3452  00FFFF  00                 	db	0	; dummy byte at the end
  3453  0000                     
  3454                           	psect	cinit
  3455  01A2EA                     __pcinit:
  3456                           	opt callstack 0
  3457  01A2EA                     start_initialization:
  3458                           	opt callstack 0
  3459  01A2EA                     __initialization:
  3460                           	opt callstack 0
  3461                           
  3462                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3463                           ; load TBLPTR registers with __pidataBIGRAM
  3464  01A2EA  0E00               	movlw	low __pidataBIGRAM
  3465  01A2EC  6EF6               	movwf	tblptrl,c
  3466  01A2EE  0E6B               	movlw	high __pidataBIGRAM
  3467  01A2F0  6EF7               	movwf	tblptrh,c
  3468  01A2F2  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3469  01A2F4  6EF8               	movwf	tblptru,c
  3470  01A2F6  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3471  01A2FA  EE20 F32B          	lfsr	2,811
  3472  01A2FE                     copy_data0:
  3473  01A2FE  0009               	tblrd		*+
  3474  01A300  006F FFD7 FFEE     	movff	tablat,postinc0
  3475  01A306  50DD               	movf	postdec2,w,c
  3476  01A308  50D9               	movf	fsr2l,w,c
  3477  01A30A  E1F9               	bnz	copy_data0
  3478  01A30C  50DA               	movf	fsr2h,w,c
  3479  01A30E  E1F7               	bnz	copy_data0
  3480                           
  3481                           ; Initialize objects allocated to BANK1 (239 bytes)
  3482                           ; load TBLPTR registers with __pidataBANK1
  3483  01A310  0E30               	movlw	low __pidataBANK1
  3484  01A312  6EF6               	movwf	tblptrl,c
  3485  01A314  0EA0               	movlw	high __pidataBANK1
  3486  01A316  6EF7               	movwf	tblptrh,c
  3487  01A318  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3488  01A31A  6EF8               	movwf	tblptru,c
  3489  01A31C  EE00  F100         	lfsr	0,__pdataBANK1
  3490  01A320  EE20 F0EF          	lfsr	2,239
  3491  01A324                     copy_data1:
  3492  01A324  0009               	tblrd		*+
  3493  01A326  006F FFD7 FFEE     	movff	tablat,postinc0
  3494  01A32C  50DD               	movf	postdec2,w,c
  3495  01A32E  50D9               	movf	fsr2l,w,c
  3496  01A330  E1F9               	bnz	copy_data1
  3497                           
  3498                           ; Initialize objects allocated to BANK0 (14 bytes)
  3499                           ; load TBLPTR registers with __pidataBANK0
  3500  01A332  0E0E               	movlw	low __pidataBANK0
  3501  01A334  6EF6               	movwf	tblptrl,c
  3502  01A336  0EC1               	movlw	high __pidataBANK0
  3503  01A338  6EF7               	movwf	tblptrh,c
  3504  01A33A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3505  01A33C  6EF8               	movwf	tblptru,c
  3506  01A33E  EE00  F0F0         	lfsr	0,__pdataBANK0
  3507  01A342  EE20 F00E          	lfsr	2,14
  3508  01A346                     copy_data2:
  3509  01A346  0009               	tblrd		*+
  3510  01A348  006F FFD7 FFEE     	movff	tablat,postinc0
  3511  01A34E  50DD               	movf	postdec2,w,c
  3512  01A350  50D9               	movf	fsr2l,w,c
  3513  01A352  E1F9               	bnz	copy_data2
  3514                           
  3515                           ; Clear objects allocated to BIGRAM (482 bytes)
  3516  01A354  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3517  01A358  EE20 F1E2          	lfsr	2,482
  3518  01A35C                     clear_0:
  3519  01A35C  6AEE               	clrf	postinc0,c
  3520  01A35E  50DD               	movf	postdec2,w,c
  3521  01A360  50D9               	movf	fsr2l,w,c
  3522  01A362  E1FC               	bnz	clear_0
  3523  01A364  50DA               	movf	fsr2h,w,c
  3524  01A366  E1FA               	bnz	clear_0
  3525                           
  3526                           ; Clear objects allocated to BANK4 (255 bytes)
  3527  01A368  EE01  F000         	lfsr	0,__pbssBANK4
  3528  01A36C  EE20 F0FF          	lfsr	2,255
  3529  01A370                     clear_1:
  3530  01A370  6AEE               	clrf	postinc0,c
  3531  01A372  50DD               	movf	postdec2,w,c
  3532  01A374  50D9               	movf	fsr2l,w,c
  3533  01A376  E1FC               	bnz	clear_1
  3534  01A378  50DA               	movf	fsr2h,w,c
  3535  01A37A  E1FA               	bnz	clear_1
  3536                           
  3537                           ; Clear objects allocated to BANK3 (198 bytes)
  3538  01A37C  EE00  F300         	lfsr	0,__pbssBANK3
  3539  01A380  0EC6               	movlw	198
  3540  01A382                     clear_2:
  3541  01A382  6AEE               	clrf	postinc0,c
  3542  01A384  06E8               	decf	wreg,f,c
  3543  01A386  E1FD               	bnz	clear_2
  3544                           
  3545                           ; Clear objects allocated to BANK2 (231 bytes)
  3546  01A388  EE00  F200         	lfsr	0,__pbssBANK2
  3547  01A38C  0EE7               	movlw	231
  3548  01A38E                     clear_3:
  3549  01A38E  6AEE               	clrf	postinc0,c
  3550  01A390  06E8               	decf	wreg,f,c
  3551  01A392  E1FD               	bnz	clear_3
  3552                           
  3553                           ; Clear objects allocated to BANK0 (119 bytes)
  3554  01A394  EE00  F060         	lfsr	0,__pbssBANK0
  3555  01A398  0E77               	movlw	119
  3556  01A39A                     clear_4:
  3557  01A39A  6AEE               	clrf	postinc0,c
  3558  01A39C  06E8               	decf	wreg,f,c
  3559  01A39E  E1FD               	bnz	clear_4
  3560                           
  3561                           ; Clear objects allocated to COMRAM (14 bytes)
  3562  01A3A0  EE00  F03A         	lfsr	0,__pbssCOMRAM
  3563  01A3A4  0E0E               	movlw	14
  3564  01A3A6                     clear_5:
  3565  01A3A6  6AEE               	clrf	postinc0,c
  3566  01A3A8  06E8               	decf	wreg,f,c
  3567  01A3AA  E1FD               	bnz	clear_5
  3568                           
  3569                           ;
  3570                           ; Setup IVTBASE
  3571                           ;
  3572  01A3AC  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3573  01A3AE  6ED5               	movwf	213,c
  3574  01A3B0  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3575  01A3B2  6ED6               	movwf	214,c
  3576  01A3B4  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3577  01A3B6  6ED7               	movwf	215,c
  3578  01A3B8                     end_of_initialization:
  3579                           	opt callstack 0
  3580  01A3B8                     __end_of__initialization:
  3581                           	opt callstack 0
  3582  01A3B8  0100               	movlb	0
  3583  01A3BA  EF22  F089         	goto	_main	;jump to C main() function
  3584                           
  3585                           	psect	bssCOMRAM
  3586  00003A                     __pbssCOMRAM:
  3587                           	opt callstack 0
  3588  00003A                     _width:
  3589                           	opt callstack 0
  3590  00003A                     	ds	2
  3591  00003C                     _prec:
  3592                           	opt callstack 0
  3593  00003C                     	ds	2
  3594  00003E                     _flags:
  3595                           	opt callstack 0
  3596  00003E                     	ds	2
  3597  000040                     esr_check@esr_state:
  3598                           	opt callstack 0
  3599  000040                     	ds	1
  3600  000041                     calc_bsoc@log_update_wait:
  3601                           	opt callstack 0
  3602  000041                     	ds	1
  3603  000042                     check_day_time@day_delay:
  3604                           	opt callstack 0
  3605  000042                     	ds	1
  3606  000043                     _uart2RxHead:
  3607                           	opt callstack 0
  3608  000043                     	ds	1
  3609  000044                     _uart2TxBufferRemaining:
  3610                           	opt callstack 0
  3611  000044                     	ds	1
  3612  000045                     _uart2TxTail:
  3613                           	opt callstack 0
  3614  000045                     	ds	1
  3615  000046                     _uart1RxTail:
  3616                           	opt callstack 0
  3617  000046                     	ds	1
  3618  000047                     _uart1RxHead:
  3619                           	opt callstack 0
  3620  000047                     	ds	1
  3621                           
  3622                           	psect	bssBANK0
  3623  000060                     __pbssBANK0:
  3624                           	opt callstack 0
  3625  000060                     _spi_link:
  3626                           	opt callstack 0
  3627  000060                     	ds	12
  3628  00006C                     _uart1RxBuffer:
  3629                           	opt callstack 0
  3630  00006C                     	ds	8
  3631  000074                     spinners@s:
  3632                           	opt callstack 0
  3633  000074                     	ds	6
  3634  00007A                     floorf@F524:
  3635                           	opt callstack 0
  3636  00007A                     	ds	4
  3637  00007E                     fabsf@F463:
  3638                           	opt callstack 0
  3639  00007E                     	ds	4
  3640  000082                     ___fpclassifyf@F463:
  3641                           	opt callstack 0
  3642  000082                     	ds	4
  3643  000086                     calc_ror_data@bcror:
  3644                           	opt callstack 0
  3645  000086                     	ds	4
  3646  00008A                     calc_ror_data@bvror:
  3647                           	opt callstack 0
  3648  00008A                     	ds	4
  3649  00008E                     calc_model_data@bcror:
  3650                           	opt callstack 0
  3651  00008E                     	ds	4
  3652  000092                     calc_model_data@bvror:
  3653                           	opt callstack 0
  3654  000092                     	ds	4
  3655  000096                     _utctime:
  3656                           	opt callstack 0
  3657  000096                     	ds	4
  3658  00009A                     wdtdelay@dcount:
  3659                           	opt callstack 0
  3660  00009A                     	ds	4
  3661  00009E                     _P:
  3662                           	opt callstack 0
  3663  00009E                     	ds	4
  3664  0000A2                     _TMR3_InterruptHandler:
  3665                           	opt callstack 0
  3666  0000A2                     	ds	3
  3667  0000A5                     _TMR5_InterruptHandler:
  3668                           	opt callstack 0
  3669  0000A5                     	ds	3
  3670  0000A8                     _TMR6_InterruptHandler:
  3671                           	opt callstack 0
  3672  0000A8                     	ds	3
  3673  0000AB                     _ADCC_ADTI_InterruptHandler:
  3674                           	opt callstack 0
  3675  0000AB                     	ds	3
  3676  0000AE                     _ADCC_ADI_InterruptHandler:
  3677                           	opt callstack 0
  3678  0000AE                     	ds	3
  3679  0000B1                     _UART1_RxInterruptHandler:
  3680                           	opt callstack 0
  3681  0000B1                     	ds	3
  3682  0000B4                     _UART2_TxInterruptHandler:
  3683                           	opt callstack 0
  3684  0000B4                     	ds	3
  3685  0000B7                     _UART2_RxInterruptHandler:
  3686                           	opt callstack 0
  3687  0000B7                     	ds	3
  3688  0000BA                     _INT1_InterruptHandler:
  3689                           	opt callstack 0
  3690  0000BA                     	ds	3
  3691  0000BD                     _INT0_InterruptHandler:
  3692                           	opt callstack 0
  3693  0000BD                     	ds	3
  3694  0000C0                     _nout:
  3695                           	opt callstack 0
  3696  0000C0                     	ds	2
  3697  0000C2                     TMR3_ISR@CountCallBack:
  3698                           	opt callstack 0
  3699  0000C2                     	ds	2
  3700  0000C4                     _timer3ReloadVal:
  3701                           	opt callstack 0
  3702  0000C4                     	ds	2
  3703  0000C6                     TMR5_ISR@CountCallBack:
  3704                           	opt callstack 0
  3705  0000C6                     	ds	2
  3706  0000C8                     _timer5ReloadVal:
  3707                           	opt callstack 0
  3708  0000C8                     	ds	2
  3709  0000CA                     _mode_sw:
  3710                           	opt callstack 0
  3711  0000CA                     	ds	1
  3712  0000CB                     _uart2RxCount:
  3713                           	opt callstack 0
  3714  0000CB                     	ds	1
  3715  0000CC                     _uart2RxTail:
  3716                           	opt callstack 0
  3717  0000CC                     	ds	1
  3718  0000CD                     _uart2TxHead:
  3719                           	opt callstack 0
  3720  0000CD                     	ds	1
  3721  0000CE                     _uart1RxCount:
  3722                           	opt callstack 0
  3723  0000CE                     	ds	1
  3724  0000CF                     _seed:
  3725                           	opt callstack 0
  3726  0000CF                     	ds	8
  3727                           
  3728                           	psect	dataBANK0
  3729  0000F0                     __pdataBANK0:
  3730                           	opt callstack 0
  3731  0000F0                     stoa@F1166:
  3732                           	opt callstack 0
  3733  0000F0                     	ds	7
  3734  0000F7                     _H:
  3735                           	opt callstack 0
  3736  0000F7                     	ds	7
  3737                           
  3738                           	psect	dataBANK1
  3739  000100                     __pdataBANK1:
  3740                           	opt callstack 0
  3741  000100                     _R:
  3742                           	opt callstack 0
  3743  000100                     	ds	48
  3744  000130                     _V:
  3745                           	opt callstack 0
  3746  000130                     	ds	191
  3747                           
  3748                           	psect	bssBANK2
  3749  000200                     __pbssBANK2:
  3750                           	opt callstack 0
  3751  000200                     lp_filter@smooth:
  3752                           	opt callstack 0
  3753  000200                     	ds	84
  3754  000254                     _S:
  3755                           	opt callstack 0
  3756  000254                     	ds	41
  3757  00027D                     _tickCount:
  3758                           	opt callstack 0
  3759  00027D                     	ds	26
  3760  000297                     _dbuf:
  3761                           	opt callstack 0
  3762  000297                     	ds	80
  3763                           
  3764                           	psect	bssBANK3
  3765  000300                     __pbssBANK3:
  3766                           	opt callstack 0
  3767  000300                     _uart2TxBuffer:
  3768                           	opt callstack 0
  3769  000300                     	ds	64
  3770  000340                     _ring_buf2:
  3771                           	opt callstack 0
  3772  000340                     	ds	67
  3773  000383                     _ring_buf1:
  3774                           	opt callstack 0
  3775  000383                     	ds	67
  3776                           
  3777                           	psect	bssBANK4
  3778  000400                     __pbssBANK4:
  3779                           	opt callstack 0
  3780  000400                     _uart2RxBuffer:
  3781                           	opt callstack 0
  3782  000400                     	ds	255
  3783                           
  3784                           	psect	bssBIGRAM
  3785  00082A                     __pbssBIGRAM:
  3786                           	opt callstack 0
  3787  00082A                     _D:
  3788                           	opt callstack 0
  3789  00082A                     	ds	482
  3790                           
  3791                           	psect	dataBIGRAM
  3792  0004FF                     __pdataBIGRAM:
  3793                           	opt callstack 0
  3794  0004FF                     _port_data:
  3795                           	opt callstack 0
  3796  0004FF                     	ds	512
  3797  0006FF                     _C:
  3798                           	opt callstack 0
  3799  0006FF                     	ds	299
  3800                           
  3801                           	psect	cstackBANK0
  3802  0000D7                     __pcstackBANK0:
  3803                           	opt callstack 0
  3804  0000D7                     ??_TMR3_ISR:
  3805                           
  3806                           ; 1 bytes @ 0x0
  3807  0000D7                     	ds	25
  3808                           
  3809                           	psect	cstackCOMRAM
  3810  000021                     __pcstackCOMRAM:
  3811                           	opt callstack 0
  3812  000021                     ??_ADCC_ThresholdISR:
  3813  000021                     
  3814                           ; 1 bytes @ 0x0
  3815  000021                     	ds	5
  3816  000026                     ??_TMR6_ISR:
  3817                           
  3818                           ; 1 bytes @ 0x5
  3819  000026                     	ds	1
  3820  000027                     ??_INT1_ISR:
  3821  000027                     
  3822                           ; 1 bytes @ 0x6
  3823  000027                     	ds	4
  3824  00002B                     ??_TMR5_ISR:
  3825                           
  3826                           ; 1 bytes @ 0xA
  3827  00002B                     	ds	15
  3828                           
  3829 ;;
  3830 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  3831 ;;
  3832 ;; *************** function _main *****************
  3833 ;; Defined at:
  3834 ;;		line 187 in file "main.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;		None
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;  esr_temp        4  [STACK] float 
  3839 ;;  i_esr           2  [STACK] unsigned short 
  3840 ;;  shape           1  [STACK] unsigned char 
  3841 ;;  k               1  [STACK] unsigned char 
  3842 ;;  j               1  [STACK] unsigned char 
  3843 ;;  i               1  [STACK] unsigned char 
  3844 ;;  inp_index       1  [STACK] unsigned char 
  3845 ;;  mode            1  [STACK] enum E17013
  3846 ;;  i_ror           1  [STACK] unsigned char 
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  1  [STACK] void 
  3849 ;; Registers used:
  3850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3860 ;;Total ram usage:        0 bytes
  3861 ;; Hardware stack levels required when called:   29
  3862 ;; This function calls:
  3863 ;;		_SYSTEM_Initialize
  3864 ;;		_StartTimer
  3865 ;;		_TimerDone
  3866 ;;		_WaitMs
  3867 ;;		___fladd
  3868 ;;		___flge
  3869 ;;		___fltol
  3870 ;;		_calc_model_data
  3871 ;;		_calc_ror_data
  3872 ;;		_check_adc_scan
  3873 ;;		_check_enter_button
  3874 ;;		_check_help
  3875 ;;		_clear_adc_scan
  3876 ;;		_clear_hid_pflags
  3877 ;;		_conv_raw_result
  3878 ;;		_convert_adc_data
  3879 ;;		_eaDogM_WriteCommand
  3880 ;;		_esr_check
  3881 ;;		_fabsf
  3882 ;;		_get_raw_result
  3883 ;;		_get_switch
  3884 ;;		_get_vterm_ptr
  3885 ;;		_hid_display
  3886 ;;		_init_bsoc
  3887 ;;		_init_display
  3888 ;;		_init_port_dma
  3889 ;;		_lp_filter
  3890 ;;		_mode_lamp_dim
  3891 ;;		_set_display_info
  3892 ;;		_set_load_relay_one
  3893 ;;		_set_load_relay_two
  3894 ;;		_set_vterm
  3895 ;;		_spinners
  3896 ;;		_sprintf
  3897 ;;		_srand
  3898 ;;		_start_adc_scan
  3899 ;;		_start_switch_handler
  3900 ;;		_static_soc
  3901 ;;		_update_lcd
  3902 ;; This function is called by:
  3903 ;;		Startup code after reset
  3904 ;; This function uses a reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text0
  3908  011244                     __ptext0:
  3909                           	opt callstack 0
  3910  011244                     _main:
  3911                           	opt callstack 0
  3912                           
  3913                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3914  011244  0E11               	movlw	17
  3915  011246  26E1               	addwf	fsr1l,f,c
  3916  011248  0E00               	movlw	0
  3917  01124A  22E2               	addwfc	fsr1h,f,c
  3918                           
  3919                           ;main.c: 189:  UI_STATES mode;;main.c: 190:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3920                           ;stkvar	_inp_index @ sp[(-17)+14]
  3921                           
  3922                           ;incstack = 0
  3923  01124C  0EFD               	movlw	-3
  3924  01124E  6AE3               	clrf	plusw1,c
  3925                           
  3926                           ;stkvar	_i @ sp[(-17)+13]
  3927  011250  0EFC               	movlw	-4
  3928  011252  6AE3               	clrf	plusw1,c
  3929                           
  3930                           ;stkvar	_j @ sp[(-17)+12]
  3931  011254  0EFB               	movlw	-5
  3932  011256  6AE3               	clrf	plusw1,c
  3933  011258  2AE3               	incf	plusw1,f,c
  3934                           
  3935                           ;stkvar	_k @ sp[(-17)+11]
  3936  01125A  0EFA               	movlw	-6
  3937  01125C  6AE3               	clrf	plusw1,c
  3938  01125E  82E3               	bsf	plusw1,1,c
  3939                           
  3940                           ;main.c: 193:  SYSTEM_Initialize();
  3941  011260  EC2B  F0DA         	call	_SYSTEM_Initialize	;wreg free
  3942                           
  3943                           ; BSR set to: 60
  3944                           ;main.c: 196:  (INTCON0bits.GIEH = 1);
  3945  011264  8ED2               	bsf	210,7,c	;volatile
  3946                           
  3947                           ; BSR set to: 60
  3948                           ;main.c: 199:  (INTCON0bits.GIEL = 1);
  3949  011266  8CD2               	bsf	210,6,c	;volatile
  3950                           
  3951                           ; BSR set to: 60
  3952                           ;main.c: 201:  V.ui_state = UI_STATE_INIT;
  3953  011268  0101               	movlb	1	; () banked
  3954  01126A  6B30               	clrf	_V& (0+255),b	;volatile
  3955                           
  3956                           ; BSR set to: 1
  3957                           ;main.c: 206:  WaitMs(300);
  3958  01126C  0E2C               	movlw	44
  3959  01126E  6EE6               	movwf	postinc1,c
  3960  011270  0E01               	movlw	1
  3961  011272  6EE6               	movwf	postinc1,c
  3962  011274  EC9E  F0DC         	call	_WaitMs	;wreg free
  3963                           
  3964                           ;main.c: 207:  if (PORTBbits.RB0) {
  3965  011278  A0CB               	btfss	203,0,c	;volatile
  3966  01127A  D004               	goto	l13074
  3967                           
  3968                           ;main.c: 208:   mode = UI_STATE_HOST;
  3969                           ;stkvar	_mode @ sp[(-17)+15]
  3970  01127C  0EFE               	movlw	-2
  3971  01127E  6AE3               	clrf	plusw1,c
  3972  011280  2AE3               	incf	plusw1,f,c
  3973                           
  3974                           ;main.c: 209:  } else {
  3975  011282  D004               	goto	l13076
  3976  011284                     l13074:
  3977                           
  3978                           ;main.c: 210:   mode = UI_STATE_LOG;
  3979                           ;stkvar	_mode @ sp[(-17)+15]
  3980  011284  0EFE               	movlw	-2
  3981  011286  6AE3               	clrf	plusw1,c
  3982  011288  80E3               	bsf	plusw1,0,c
  3983  01128A  82E3               	bsf	plusw1,1,c	;indir
  3984  01128C                     l13076:
  3985                           
  3986                           ;main.c: 213:  if (mode == UI_STATE_HOST) {
  3987                           ;stkvar	_mode @ sp[(-17)+15]
  3988  01128C  0EFE               	movlw	-2
  3989  01128E  04E3               	decf	plusw1,w,c
  3990  011290  A4D8               	btfss	status,2,c
  3991  011292  D007               	goto	l1324
  3992                           
  3993                           ;main.c: 214:   do { LATDbits.LATD0 = 1; } while(0);
  3994  011294  80BD               	bsf	189,0,c	;volatile
  3995                           
  3996                           ;main.c: 215:   V.mode_pwm = 70;
  3997  011296  0E00               	movlw	0
  3998  011298  0101               	movlb	1	; () banked
  3999  01129A  6FC6               	movwf	(_V+150)& (0+255),b	;volatile
  4000  01129C  0E46               	movlw	70
  4001  01129E  6FC5               	movwf	(_V+149)& (0+255),b	;volatile
  4002                           
  4003                           ;main.c: 216:  } else {
  4004  0112A0  D004               	goto	l13080
  4005  0112A2                     l1324:
  4006  0112A2  90BD               	bcf	189,0,c	;volatile
  4007                           
  4008                           ;main.c: 218:   V.mode_pwm = 0;
  4009  0112A4  0101               	movlb	1	; () banked
  4010  0112A6  6BC5               	clrf	(_V+149)& (0+255),b	;volatile
  4011  0112A8  6BC6               	clrf	(_V+150)& (0+255),b	;volatile
  4012  0112AA                     l13080:
  4013                           
  4014                           ; BSR set to: 1
  4015                           ;main.c: 220:  mode_lamp_dim(V.mode_pwm);
  4016  0112AA  0060  F717  FFE6   	movff	_V+149,postinc1
  4017  0112B0  0060  F71B  FFE6   	movff	_V+150,postinc1
  4018  0112B6  EC1B  F0E0         	call	_mode_lamp_dim	;wreg free
  4019  0112BA  D32C               	goto	l13202
  4020  0112BC                     l13082:
  4021                           
  4022                           ; BSR set to: 1
  4023                           ;main.c: 228:    init_port_dma();
  4024  0112BC  ECED  F0DC         	call	_init_port_dma	;wreg free
  4025                           
  4026                           ; BSR set to: 59
  4027                           ;main.c: 230:    init_display();
  4028  0112C0  EC56  F0CC         	call	_init_display	;wreg free
  4029                           
  4030                           ; BSR set to: 61
  4031                           ;main.c: 231:    eaDogM_WriteCommand(0b00001100);
  4032  0112C4  0E0C               	movlw	12
  4033  0112C6  6EE6               	movwf	postinc1,c
  4034  0112C8  EC8E  F0E0         	call	_eaDogM_WriteCommand	;wreg free
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;main.c: 235:    set_load_relay_one(1);
  4038  0112CC  0E01               	movlw	1
  4039  0112CE  6EE6               	movwf	postinc1,c
  4040  0112D0  EC6F  F0E0         	call	_set_load_relay_one	;wreg free
  4041                           
  4042                           ;main.c: 236:    set_load_relay_two(1);
  4043  0112D4  0E01               	movlw	1
  4044  0112D6  6EE6               	movwf	postinc1,c
  4045  0112D8  EC67  F0E0         	call	_set_load_relay_two	;wreg free
  4046                           
  4047                           ;main.c: 238:    V.ui_state = mode;
  4048                           ;stkvar	_mode @ sp[(-17)+15]
  4049  0112DC  0EFE               	movlw	-2
  4050  0112DE  006F FF8C  F130    	movff	plusw1,_V	;volatile
  4051                           
  4052                           ;main.c: 239:    srand(1957);
  4053  0112E4  0EA5               	movlw	165
  4054  0112E6  6EE6               	movwf	postinc1,c
  4055  0112E8  0E07               	movlw	7
  4056  0112EA  6EE6               	movwf	postinc1,c
  4057  0112EC  ECB9  F0DC         	call	_srand	;wreg free
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;main.c: 240:    set_vterm(0);
  4061  0112F0  0E00               	movlw	0
  4062  0112F2  6EE6               	movwf	postinc1,c
  4063  0112F4  ECC6  F0DF         	call	_set_vterm	;wreg free
  4064                           
  4065                           ;main.c: 241:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4066  0112F8  0EC0               	movlw	low STR_1
  4067  0112FA  6EE6               	movwf	postinc1,c
  4068  0112FC  0EFD               	movlw	high STR_1
  4069  0112FE  6EE6               	movwf	postinc1,c
  4070  011300  0E00               	movlw	0
  4071  011302  6EE6               	movwf	postinc1,c
  4072  011304  0E00               	movlw	0
  4073  011306  6EE6               	movwf	postinc1,c
  4074  011308  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4075  01130C  0060  F007  FFE6   	movff	btemp,postinc1
  4076  011312  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4077  011318  0E04               	movlw	4
  4078  01131A  6EE6               	movwf	postinc1,c
  4079  01131C  EC12  F0CF         	call	_sprintf	;wreg free
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;main.c: 242:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.08");
  4083  011320  0ED2               	movlw	low STR_3
  4084  011322  6EE6               	movwf	postinc1,c
  4085  011324  0EFF               	movlw	high STR_3
  4086  011326  6EE6               	movwf	postinc1,c
  4087  011328  0EAB               	movlw	low STR_2
  4088  01132A  6EE6               	movwf	postinc1,c
  4089  01132C  0EFD               	movlw	high STR_2
  4090  01132E  6EE6               	movwf	postinc1,c
  4091  011330  0E00               	movlw	0
  4092  011332  6EE6               	movwf	postinc1,c
  4093  011334  0E01               	movlw	1
  4094  011336  6EE6               	movwf	postinc1,c
  4095  011338  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4096  01133C  0060  F007  FFE6   	movff	btemp,postinc1
  4097  011342  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4098  011348  0E06               	movlw	6
  4099  01134A  6EE6               	movwf	postinc1,c
  4100  01134C  EC12  F0CF         	call	_sprintf	;wreg free
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;main.c: 243:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4104  011350  0E6C               	movlw	low STR_4
  4105  011352  6EE6               	movwf	postinc1,c
  4106  011354  0EFD               	movlw	high STR_4
  4107  011356  6EE6               	movwf	postinc1,c
  4108  011358  0E00               	movlw	0
  4109  01135A  6EE6               	movwf	postinc1,c
  4110  01135C  0E02               	movlw	2
  4111  01135E  6EE6               	movwf	postinc1,c
  4112  011360  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4113  011364  0060  F007  FFE6   	movff	btemp,postinc1
  4114  01136A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4115  011370  0E04               	movlw	4
  4116  011372  6EE6               	movwf	postinc1,c
  4117  011374  EC12  F0CF         	call	_sprintf	;wreg free
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4121  011378  0E42               	movlw	low STR_5
  4122  01137A  6EE6               	movwf	postinc1,c
  4123  01137C  0EFD               	movlw	high STR_5
  4124  01137E  6EE6               	movwf	postinc1,c
  4125  011380  0E02               	movlw	2
  4126  011382  6EE6               	movwf	postinc1,c
  4127  011384  0E00               	movlw	0
  4128  011386  6EE6               	movwf	postinc1,c
  4129  011388  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4130  01138C  0060  F007  FFE6   	movff	btemp,postinc1
  4131  011392  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4132  011398  0E04               	movlw	4
  4133  01139A  6EE6               	movwf	postinc1,c
  4134  01139C  EC12  F0CF         	call	_sprintf	;wreg free
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4138  0113A0  0E42               	movlw	low STR_5
  4139  0113A2  6EE6               	movwf	postinc1,c
  4140  0113A4  0EFD               	movlw	high STR_5
  4141  0113A6  6EE6               	movwf	postinc1,c
  4142  0113A8  0E02               	movlw	2
  4143  0113AA  6EE6               	movwf	postinc1,c
  4144  0113AC  0E01               	movlw	1
  4145  0113AE  6EE6               	movwf	postinc1,c
  4146  0113B0  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4147  0113B4  0060  F007  FFE6   	movff	btemp,postinc1
  4148  0113BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4149  0113C0  0E04               	movlw	4
  4150  0113C2  6EE6               	movwf	postinc1,c
  4151  0113C4  EC12  F0CF         	call	_sprintf	;wreg free
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4155  0113C8  0E42               	movlw	low STR_5
  4156  0113CA  6EE6               	movwf	postinc1,c
  4157  0113CC  0EFD               	movlw	high STR_5
  4158  0113CE  6EE6               	movwf	postinc1,c
  4159  0113D0  0E02               	movlw	2
  4160  0113D2  6EE6               	movwf	postinc1,c
  4161  0113D4  0E02               	movlw	2
  4162  0113D6  6EE6               	movwf	postinc1,c
  4163  0113D8  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4164  0113DC  0060  F007  FFE6   	movff	btemp,postinc1
  4165  0113E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4166  0113E8  0E04               	movlw	4
  4167  0113EA  6EE6               	movwf	postinc1,c
  4168  0113EC  EC12  F0CF         	call	_sprintf	;wreg free
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;main.c: 247:    update_lcd(0);
  4172  0113F0  0E00               	movlw	0
  4173  0113F2  6EE6               	movwf	postinc1,c
  4174  0113F4  EC8A  F0CE         	call	_update_lcd	;wreg free
  4175                           
  4176                           ;main.c: 248:    WaitMs(1000);
  4177  0113F8  0EE8               	movlw	232
  4178  0113FA  6EE6               	movwf	postinc1,c
  4179  0113FC  0E03               	movlw	3
  4180  0113FE  6EE6               	movwf	postinc1,c
  4181  011400  EC9E  F0DC         	call	_WaitMs	;wreg free
  4182                           
  4183                           ;main.c: 249:    StartTimer(TMR_DISPLAY, 250);
  4184  011404  0EFA               	movlw	250
  4185  011406  6EE6               	movwf	postinc1,c
  4186  011408  0E00               	movlw	0
  4187  01140A  6EE6               	movwf	postinc1,c
  4188  01140C  0E0A               	movlw	10
  4189  01140E  6EE6               	movwf	postinc1,c
  4190  011410  ECA9  F0DB         	call	_StartTimer	;wreg free
  4191                           
  4192                           ;main.c: 250:    StartTimer(TMR_ADC, 200);
  4193  011414  0EC8               	movlw	200
  4194  011416  6EE6               	movwf	postinc1,c
  4195  011418  0E00               	movlw	0
  4196  01141A  6EE6               	movwf	postinc1,c
  4197  01141C  0E01               	movlw	1
  4198  01141E  6EE6               	movwf	postinc1,c
  4199  011420  ECA9  F0DB         	call	_StartTimer	;wreg free
  4200                           
  4201                           ;main.c: 251:    StartTimer(TMR_INFO, 3000);
  4202  011424  0EB8               	movlw	184
  4203  011426  6EE6               	movwf	postinc1,c
  4204  011428  0E0B               	movlw	11
  4205  01142A  6EE6               	movwf	postinc1,c
  4206  01142C  0E07               	movlw	7
  4207  01142E  6EE6               	movwf	postinc1,c
  4208  011430  ECA9  F0DB         	call	_StartTimer	;wreg free
  4209                           
  4210                           ;main.c: 252:    StartTimer(TMR_FLIPPER, 1500);
  4211  011434  0EDC               	movlw	220
  4212  011436  6EE6               	movwf	postinc1,c
  4213  011438  0E05               	movlw	5
  4214  01143A  6EE6               	movwf	postinc1,c
  4215  01143C  0E0B               	movlw	11
  4216  01143E  6EE6               	movwf	postinc1,c
  4217  011440  ECA9  F0DB         	call	_StartTimer	;wreg free
  4218                           
  4219                           ;main.c: 253:    StartTimer(TMR_HELPDIS, 3000);
  4220  011444  0EB8               	movlw	184
  4221  011446  6EE6               	movwf	postinc1,c
  4222  011448  0E0B               	movlw	11
  4223  01144A  6EE6               	movwf	postinc1,c
  4224  01144C  0E09               	movlw	9
  4225  01144E  6EE6               	movwf	postinc1,c
  4226  011450  ECA9  F0DB         	call	_StartTimer	;wreg free
  4227                           
  4228                           ;main.c: 255:    start_adc_scan();
  4229  011454  EC42  F0D8         	call	_start_adc_scan	;wreg free
  4230                           
  4231                           ;main.c: 256:    start_switch_handler();
  4232  011458  EC88  F0DF         	call	_start_switch_handler	;wreg free
  4233                           
  4234                           ; BSR set to: 57
  4235                           ;main.c: 257:    WaitMs(1000);
  4236  01145C  0EE8               	movlw	232
  4237  01145E  6EE6               	movwf	postinc1,c
  4238  011460  0E03               	movlw	3
  4239  011462  6EE6               	movwf	postinc1,c
  4240  011464  EC9E  F0DC         	call	_WaitMs	;wreg free
  4241                           
  4242                           ;main.c: 262:    i_ror = 1;
  4243                           ;stkvar	_i_ror @ sp[(-17)+16]
  4244  011468  0EFF               	movlw	-1
  4245  01146A  6AE3               	clrf	plusw1,c
  4246  01146C  2AE3               	incf	plusw1,f,c
  4247  01146E                     l13132:
  4248                           
  4249                           ;main.c: 264:     calc_ror_data();
  4250  01146E  ECA4  F0C5         	call	_calc_ror_data	;wreg free
  4251                           
  4252                           ;main.c: 265:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4253  011472  0E00               	movlw	0
  4254  011474  6EE6               	movwf	postinc1,c
  4255  011476  0E04               	movlw	4
  4256  011478  6EE6               	movwf	postinc1,c
  4257  01147A  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  4258  01147E  0060  F007  FFE6   	movff	btemp,postinc1
  4259  011484  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4260  01148A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4261  011490  0060  F013  FFE6   	movff	btemp+3,postinc1
  4262  011496  0E57               	movlw	low STR_8
  4263  011498  6EE6               	movwf	postinc1,c
  4264  01149A  0EFD               	movlw	high STR_8
  4265  01149C  6EE6               	movwf	postinc1,c
  4266  01149E  0E00               	movlw	0
  4267  0114A0  6EE6               	movwf	postinc1,c
  4268  0114A2  0E01               	movlw	1
  4269  0114A4  6EE6               	movwf	postinc1,c
  4270  0114A6  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4271  0114AA  0060  F007  FFE6   	movff	btemp,postinc1
  4272  0114B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4273  0114B6  0E08               	movlw	8
  4274  0114B8  6EE6               	movwf	postinc1,c
  4275  0114BA  EC12  F0CF         	call	_sprintf	;wreg free
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;main.c: 266:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4279  0114BE  EE21  F36B         	lfsr	2,_C+108	;volatile
  4280  0114C2  006F FF7B FFE6     	movff	postinc2,postinc1
  4281  0114C8  006F FF7B FFE6     	movff	postinc2,postinc1
  4282  0114CE  006F FF7B FFE6     	movff	postinc2,postinc1
  4283  0114D4  006F FF7B FFE6     	movff	postinc2,postinc1
  4284                           
  4285                           ;stkvar	_i_ror @ sp[(-21)+16]
  4286  0114DA  0EFB               	movlw	-5
  4287  0114DC  50E3               	movf	plusw1,w,c
  4288  0114DE  6EE6               	movwf	postinc1,c
  4289  0114E0  0E00               	movlw	0
  4290  0114E2  6EE6               	movwf	postinc1,c
  4291  0114E4  0E00               	movlw	0
  4292  0114E6  6EE6               	movwf	postinc1,c
  4293  0114E8  0E05               	movlw	5
  4294  0114EA  6EE6               	movwf	postinc1,c
  4295  0114EC  EC90  F0D0         	call	_spinners	;wreg free
  4296  0114F0  5001               	movf	btemp^0,w,c
  4297  0114F2  6EE6               	movwf	postinc1,c
  4298  0114F4  0E00               	movlw	0
  4299  0114F6  6EE6               	movwf	postinc1,c
  4300  0114F8  0ECE               	movlw	low STR_9
  4301  0114FA  6EE6               	movwf	postinc1,c
  4302  0114FC  0EFC               	movlw	high STR_9
  4303  0114FE  6EE6               	movwf	postinc1,c
  4304  011500  0E00               	movlw	0
  4305  011502  6EE6               	movwf	postinc1,c
  4306  011504  0E02               	movlw	2
  4307  011506  6EE6               	movwf	postinc1,c
  4308  011508  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4309  01150C  0060  F007  FFE6   	movff	btemp,postinc1
  4310  011512  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4311  011518  0E0C               	movlw	12
  4312  01151A  6EE6               	movwf	postinc1,c
  4313  01151C  EC12  F0CF         	call	_sprintf	;wreg free
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;main.c: 267:     update_lcd(0);
  4317  011520  0E00               	movlw	0
  4318  011522  6EE6               	movwf	postinc1,c
  4319  011524  EC8A  F0CE         	call	_update_lcd	;wreg free
  4320                           
  4321                           ;main.c: 268:     WaitMs(2000);
  4322  011528  0ED0               	movlw	208
  4323  01152A  6EE6               	movwf	postinc1,c
  4324  01152C  0E07               	movlw	7
  4325  01152E  6EE6               	movwf	postinc1,c
  4326  011530  EC9E  F0DC         	call	_WaitMs	;wreg free
  4327                           
  4328                           ;main.c: 269:     clear_adc_scan();
  4329  011534  ECE3  F0E0         	call	_clear_adc_scan	;wreg free
  4330                           
  4331                           ; BSR set to: 1
  4332                           ;main.c: 270:     start_adc_scan();
  4333  011538  EC42  F0D8         	call	_start_adc_scan	;wreg free
  4334                           
  4335                           ;main.c: 271:     WaitMs(500);
  4336  01153C  0EF4               	movlw	244
  4337  01153E  6EE6               	movwf	postinc1,c
  4338  011540  0E01               	movlw	1
  4339  011542  6EE6               	movwf	postinc1,c
  4340  011544  EC9E  F0DC         	call	_WaitMs	;wreg free
  4341                           
  4342                           ;main.c: 272:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4343                           ;stkvar	_i_ror @ sp[(-17)+16]
  4344  011548  0EFF               	movlw	-1
  4345  01154A  006F FF8C  F00C    	movff	plusw1,btemp+11
  4346  011550  2A0C               	incf	(btemp+11)^0,f,c
  4347  011552  0060  F033  FFE3   	movff	btemp+11,plusw1
  4348  011558  060C               	decf	(btemp+11)^0,f,c
  4349  01155A  0E1E               	movlw	30
  4350  01155C  600C               	cpfslt	(btemp+11)^0,c
  4351  01155E  D01A               	goto	u12630
  4352  011560  EE21  F36B         	lfsr	2,_C+108	;volatile
  4353  011564  006F FF7B FFE6     	movff	postinc2,postinc1
  4354  01156A  006F FF7B FFE6     	movff	postinc2,postinc1
  4355  011570  006F FF7B FFE6     	movff	postinc2,postinc1
  4356  011576  006F FF7B FFE6     	movff	postinc2,postinc1
  4357  01157C  0E42               	movlw	66
  4358  01157E  6EE6               	movwf	postinc1,c
  4359  011580  0E60               	movlw	96
  4360  011582  6EE6               	movwf	postinc1,c
  4361  011584  0E65               	movlw	101
  4362  011586  6EE6               	movwf	postinc1,c
  4363  011588  0E3C               	movlw	60
  4364  01158A  6EE6               	movwf	postinc1,c
  4365  01158C  ECE0  F0C7         	call	___flge	;wreg free
  4366  011590  A001               	btfss	btemp& (0+255),0,c
  4367  011592  D76D               	goto	l13132
  4368  011594                     u12630:
  4369                           
  4370                           ;main.c: 274:    static_soc();
  4371  011594  EC06  F0D9         	call	_static_soc	;wreg free
  4372                           
  4373                           ;main.c: 275:    init_bsoc();
  4374  011598  ECCD  F0BD         	call	_init_bsoc	;wreg free
  4375                           
  4376                           ;main.c: 276:    set_load_relay_one(0);
  4377  01159C  0E00               	movlw	0
  4378  01159E  6EE6               	movwf	postinc1,c
  4379  0115A0  EC6F  F0E0         	call	_set_load_relay_one	;wreg free
  4380                           
  4381                           ;main.c: 277:    set_load_relay_two(0);
  4382  0115A4  0E00               	movlw	0
  4383  0115A6  6EE6               	movwf	postinc1,c
  4384  0115A8  EC67  F0E0         	call	_set_load_relay_two	;wreg free
  4385                           
  4386                           ;main.c: 278:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4387  0115AC  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4388  0115B0  006F FF78  F00B    	movff	postinc2,btemp+10
  4389  0115B6  006F FF74  F00C    	movff	postdec2,btemp+11
  4390  0115BC  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4391  0115C2  0060  F033  FFE6   	movff	btemp+11,postinc1
  4392  0115C8  0E16               	movlw	low STR_10
  4393  0115CA  6EE6               	movwf	postinc1,c
  4394  0115CC  0EFD               	movlw	high STR_10
  4395  0115CE  6EE6               	movwf	postinc1,c
  4396  0115D0  0E00               	movlw	0
  4397  0115D2  6EE6               	movwf	postinc1,c
  4398  0115D4  0E00               	movlw	0
  4399  0115D6  6EE6               	movwf	postinc1,c
  4400  0115D8  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4401  0115DC  0060  F007  FFE6   	movff	btemp,postinc1
  4402  0115E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4403  0115E8  0E06               	movlw	6
  4404  0115EA  6EE6               	movwf	postinc1,c
  4405  0115EC  EC12  F0CF         	call	_sprintf	;wreg free
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;main.c: 279:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4409  0115F0  EE21  F38F         	lfsr	2,_C+144	;volatile
  4410  0115F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4411  0115FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4412  011600  006F FF7B FFE6     	movff	postinc2,postinc1
  4413  011606  006F FF7B FFE6     	movff	postinc2,postinc1
  4414  01160C  0E2C               	movlw	low STR_11
  4415  01160E  6EE6               	movwf	postinc1,c
  4416  011610  0EFD               	movlw	high STR_11
  4417  011612  6EE6               	movwf	postinc1,c
  4418  011614  0E00               	movlw	0
  4419  011616  6EE6               	movwf	postinc1,c
  4420  011618  0E01               	movlw	1
  4421  01161A  6EE6               	movwf	postinc1,c
  4422  01161C  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4423  011620  0060  F007  FFE6   	movff	btemp,postinc1
  4424  011626  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4425  01162C  0E08               	movlw	8
  4426  01162E  6EE6               	movwf	postinc1,c
  4427  011630  EC12  F0CF         	call	_sprintf	;wreg free
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;main.c: 280:    update_lcd(0);
  4431  011634  0E00               	movlw	0
  4432  011636  6EE6               	movwf	postinc1,c
  4433  011638  EC8A  F0CE         	call	_update_lcd	;wreg free
  4434                           
  4435                           ;main.c: 281:    WaitMs(2000);
  4436  01163C  0ED0               	movlw	208
  4437  01163E  6EE6               	movwf	postinc1,c
  4438  011640  0E07               	movlw	7
  4439  011642  6EE6               	movwf	postinc1,c
  4440  011644  EC9E  F0DC         	call	_WaitMs	;wreg free
  4441                           
  4442                           ;main.c: 282:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4443  011648  0E81               	movlw	low STR_12
  4444  01164A  6EE6               	movwf	postinc1,c
  4445  01164C  0EFD               	movlw	high STR_12
  4446  01164E  6EE6               	movwf	postinc1,c
  4447  011650  0E00               	movlw	0
  4448  011652  6EE6               	movwf	postinc1,c
  4449  011654  0E00               	movlw	0
  4450  011656  6EE6               	movwf	postinc1,c
  4451  011658  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4452  01165C  0060  F007  FFE6   	movff	btemp,postinc1
  4453  011662  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4454  011668  0E04               	movlw	4
  4455  01166A  6EE6               	movwf	postinc1,c
  4456  01166C  EC12  F0CF         	call	_sprintf	;wreg free
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;main.c: 283:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  4460  011670  0E96               	movlw	low STR_13
  4461  011672  6EE6               	movwf	postinc1,c
  4462  011674  0EFD               	movlw	high STR_13
  4463  011676  6EE6               	movwf	postinc1,c
  4464  011678  0E00               	movlw	0
  4465  01167A  6EE6               	movwf	postinc1,c
  4466  01167C  0E01               	movlw	1
  4467  01167E  6EE6               	movwf	postinc1,c
  4468  011680  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4469  011684  0060  F007  FFE6   	movff	btemp,postinc1
  4470  01168A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4471  011690  0E04               	movlw	4
  4472  011692  6EE6               	movwf	postinc1,c
  4473  011694  EC12  F0CF         	call	_sprintf	;wreg free
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;main.c: 284:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  4477  011698  0EEA               	movlw	low STR_14
  4478  01169A  6EE6               	movwf	postinc1,c
  4479  01169C  0EFD               	movlw	high STR_14
  4480  01169E  6EE6               	movwf	postinc1,c
  4481  0116A0  0E00               	movlw	0
  4482  0116A2  6EE6               	movwf	postinc1,c
  4483  0116A4  0E02               	movlw	2
  4484  0116A6  6EE6               	movwf	postinc1,c
  4485  0116A8  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4486  0116AC  0060  F007  FFE6   	movff	btemp,postinc1
  4487  0116B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4488  0116B8  0E04               	movlw	4
  4489  0116BA  6EE6               	movwf	postinc1,c
  4490  0116BC  EC12  F0CF         	call	_sprintf	;wreg free
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;main.c: 285:    update_lcd(0);
  4494  0116C0  0E00               	movlw	0
  4495  0116C2  6EE6               	movwf	postinc1,c
  4496  0116C4  EC8A  F0CE         	call	_update_lcd	;wreg free
  4497                           
  4498                           ;main.c: 286:    uint16_t i_esr = 1;
  4499  0116C8  0E01               	movlw	1
  4500  0116CA  6E0B               	movwf	(btemp+10)^0,c
  4501  0116CC  0E00               	movlw	0
  4502  0116CE  6E0C               	movwf	(btemp+11)^0,c
  4503                           
  4504                           ;stkvar	_i_esr @ sp[(-17)+8]
  4505  0116D0  0EF7               	movlw	-9
  4506  0116D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4507  0116D8  0EF8               	movlw	-8
  4508  0116DA  0060  F033  FFE3   	movff	btemp+11,plusw1
  4509                           
  4510                           ;main.c: 288:    float esr_temp;;main.c: 289:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4511  0116E0  D06D               	goto	l13192
  4512  0116E2                     l13180:
  4513                           
  4514                           ;main.c: 290:     WaitMs(110);
  4515  0116E2  0E6E               	movlw	110
  4516  0116E4  6EE6               	movwf	postinc1,c
  4517  0116E6  0E00               	movlw	0
  4518  0116E8  6EE6               	movwf	postinc1,c
  4519  0116EA  EC9E  F0DC         	call	_WaitMs	;wreg free
  4520                           
  4521                           ;main.c: 291:     shape = (uint8_t) fabsf(esr_temp);
  4522                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4523  0116EE  0EF3               	movlw	-13
  4524  0116F0  006F FF8F FFE6     	movff	plusw1,postinc1
  4525  0116F6  006F FF8F FFE6     	movff	plusw1,postinc1
  4526  0116FC  006F FF8F FFE6     	movff	plusw1,postinc1
  4527  011702  006F FF8F FFE6     	movff	plusw1,postinc1
  4528  011708  EC5E  F0D3         	call	_fabsf	;wreg free
  4529  01170C  0060  F007  FFE6   	movff	btemp,postinc1
  4530  011712  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4531  011718  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4532  01171E  0060  F013  FFE6   	movff	btemp+3,postinc1
  4533  011724  EC27  F0C7         	call	___fltol	;wreg free
  4534  011728  0060  F004  F00C   	movff	btemp,btemp+11
  4535                           
  4536                           ;stkvar	_shape @ sp[(-17)+10]
  4537  01172E  0EF9               	movlw	-7
  4538  011730  0060  F033  FFE3   	movff	btemp+11,plusw1
  4539                           
  4540                           ;main.c: 292:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4541  011736  0E00               	movlw	0
  4542  011738  6EE6               	movwf	postinc1,c
  4543                           
  4544                           ;stkvar	_shape @ sp[(-18)+10]
  4545  01173A  0EF8               	movlw	-8
  4546  01173C  50E3               	movf	plusw1,w,c
  4547  01173E  6EE6               	movwf	postinc1,c
  4548  011740  EC90  F0D0         	call	_spinners	;wreg free
  4549  011744  5001               	movf	btemp^0,w,c
  4550  011746  6EE6               	movwf	postinc1,c
  4551  011748  0E00               	movlw	0
  4552  01174A  6EE6               	movwf	postinc1,c
  4553  01174C  0E00               	movlw	0
  4554  01174E  6EE6               	movwf	postinc1,c
  4555  011750  0E00               	movlw	0
  4556  011752  6EE6               	movwf	postinc1,c
  4557  011754  EC90  F0D0         	call	_spinners	;wreg free
  4558  011758  5001               	movf	btemp^0,w,c
  4559  01175A  6EE6               	movwf	postinc1,c
  4560  01175C  0E00               	movlw	0
  4561  01175E  6EE6               	movwf	postinc1,c
  4562  011760  0ED5               	movlw	low STR_15
  4563  011762  6EE6               	movwf	postinc1,c
  4564  011764  0EFD               	movlw	high STR_15
  4565  011766  6EE6               	movwf	postinc1,c
  4566  011768  0E00               	movlw	0
  4567  01176A  6EE6               	movwf	postinc1,c
  4568  01176C  0E02               	movlw	2
  4569  01176E  6EE6               	movwf	postinc1,c
  4570  011770  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4571  011774  0060  F007  FFE6   	movff	btemp,postinc1
  4572  01177A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4573  011780  0E08               	movlw	8
  4574  011782  6EE6               	movwf	postinc1,c
  4575  011784  EC12  F0CF         	call	_sprintf	;wreg free
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;main.c: 293:     update_lcd(0);
  4579  011788  0E00               	movlw	0
  4580  01178A  6EE6               	movwf	postinc1,c
  4581  01178C  EC8A  F0CE         	call	_update_lcd	;wreg free
  4582                           
  4583                           ;main.c: 295:     if (i_esr++ > 512)
  4584                           ;stkvar	_i_esr @ sp[(-17)+8]
  4585  011790  50E1               	movf	fsr1l,w,c
  4586  011792  0FF7               	addlw	-9
  4587  011794  6ED9               	movwf	fsr2l,c
  4588  011796  50E2               	movf	fsr1h,w,c
  4589  011798  6EDA               	movwf	fsr2h,c
  4590  01179A  0EFF               	movlw	255
  4591  01179C  22DA               	addwfc	fsr2h,f,c
  4592  01179E  006F FF7C  F00B    	movff	indf2,btemp+10
  4593  0117A4  0E01               	movlw	1
  4594  0117A6  26DE               	addwf	postinc2,f,c
  4595  0117A8  006F FF7C  F00C    	movff	indf2,btemp+11
  4596  0117AE  0E00               	movlw	0
  4597  0117B0  22DD               	addwfc	postdec2,f,c
  4598  0117B2  040B               	decf	(btemp+10)^0,w,c
  4599  0117B4  0E02               	movlw	2
  4600  0117B6  580C               	subwfb	(btemp+11)^0,w,c
  4601  0117B8  B0D8               	btfsc	status,0,c
  4602  0117BA  D017               	goto	u12650
  4603  0117BC                     l13192:
  4604                           
  4605                           ;main.c: 289:    while ((esr_temp = esr_check(0)) < 0.0) {
  4606  0117BC  0E00               	movlw	0
  4607  0117BE  6EE6               	movwf	postinc1,c
  4608  0117C0  EC8C  F0B8         	call	_esr_check	;wreg free
  4609                           
  4610                           ;stkvar	_esr_temp @ sp[(-17)+4]
  4611  0117C4  0EF3               	movlw	-13
  4612  0117C6  0060  F007  FFE3   	movff	btemp,plusw1
  4613  0117CC  0EF4               	movlw	-12
  4614  0117CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
  4615  0117D4  0EF5               	movlw	-11
  4616  0117D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
  4617  0117DC  0EF6               	movlw	-10
  4618  0117DE  0060  F013  FFE3   	movff	btemp+3,plusw1
  4619  0117E4  0EF6               	movlw	-10
  4620  0117E6  BEE3               	btfsc	plusw1,7,c
  4621  0117E8  D77C               	goto	l13180
  4622  0117EA                     u12650:
  4623                           
  4624                           ;main.c: 298:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4625  0117EA  EE21  F387         	lfsr	2,_C+136	;volatile
  4626  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  4627  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  4628  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
  4629  011800  006F FF7B FFE6     	movff	postinc2,postinc1
  4630  011806  0E00               	movlw	low STR_16
  4631  011808  6EE6               	movwf	postinc1,c
  4632  01180A  0EFD               	movlw	high STR_16
  4633  01180C  6EE6               	movwf	postinc1,c
  4634  01180E  0E00               	movlw	0
  4635  011810  6EE6               	movwf	postinc1,c
  4636  011812  0E00               	movlw	0
  4637  011814  6EE6               	movwf	postinc1,c
  4638  011816  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4639  01181A  0060  F007  FFE6   	movff	btemp,postinc1
  4640  011820  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4641  011826  0E08               	movlw	8
  4642  011828  6EE6               	movwf	postinc1,c
  4643  01182A  EC12  F0CF         	call	_sprintf	;wreg free
  4644                           
  4645                           ;main.c: 299:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4646  01182E  EE22  F00D         	lfsr	2,_C+270	;volatile
  4647  011832  006F FF7B FFE6     	movff	postinc2,postinc1
  4648  011838  006F FF7B FFE6     	movff	postinc2,postinc1
  4649  01183E  006F FF7B FFE6     	movff	postinc2,postinc1
  4650  011844  006F FF7B FFE6     	movff	postinc2,postinc1
  4651  01184A  EE22  F019         	lfsr	2,_C+282	;volatile
  4652  01184E  006F FF7B FFE6     	movff	postinc2,postinc1
  4653  011854  006F FF7B FFE6     	movff	postinc2,postinc1
  4654  01185A  006F FF7B FFE6     	movff	postinc2,postinc1
  4655  011860  006F FF7B FFE6     	movff	postinc2,postinc1
  4656  011866  0E9A               	movlw	low STR_17
  4657  011868  6EE6               	movwf	postinc1,c
  4658  01186A  0EFC               	movlw	high STR_17
  4659  01186C  6EE6               	movwf	postinc1,c
  4660  01186E  0E00               	movlw	0
  4661  011870  6EE6               	movwf	postinc1,c
  4662  011872  0E01               	movlw	1
  4663  011874  6EE6               	movwf	postinc1,c
  4664  011876  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4665  01187A  0060  F007  FFE6   	movff	btemp,postinc1
  4666  011880  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4667  011886  0E0C               	movlw	12
  4668  011888  6EE6               	movwf	postinc1,c
  4669  01188A  EC12  F0CF         	call	_sprintf	;wreg free
  4670                           
  4671                           ;main.c: 300:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4672  01188E  EE22  F011         	lfsr	2,_C+274	;volatile
  4673  011892  006F FF7B FFE6     	movff	postinc2,postinc1
  4674  011898  006F FF7B FFE6     	movff	postinc2,postinc1
  4675  01189E  006F FF7B FFE6     	movff	postinc2,postinc1
  4676  0118A4  006F FF7B FFE6     	movff	postinc2,postinc1
  4677  0118AA  EE22  F01D         	lfsr	2,_C+286	;volatile
  4678  0118AE  006F FF7B FFE6     	movff	postinc2,postinc1
  4679  0118B4  006F FF7B FFE6     	movff	postinc2,postinc1
  4680  0118BA  006F FF7B FFE6     	movff	postinc2,postinc1
  4681  0118C0  006F FF7B FFE6     	movff	postinc2,postinc1
  4682  0118C6  0EB4               	movlw	low STR_18
  4683  0118C8  6EE6               	movwf	postinc1,c
  4684  0118CA  0EFC               	movlw	high STR_18
  4685  0118CC  6EE6               	movwf	postinc1,c
  4686  0118CE  0E00               	movlw	0
  4687  0118D0  6EE6               	movwf	postinc1,c
  4688  0118D2  0E02               	movlw	2
  4689  0118D4  6EE6               	movwf	postinc1,c
  4690  0118D6  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4691  0118DA  0060  F007  FFE6   	movff	btemp,postinc1
  4692  0118E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4693  0118E6  0E0C               	movlw	12
  4694  0118E8  6EE6               	movwf	postinc1,c
  4695  0118EA  EC12  F0CF         	call	_sprintf	;wreg free
  4696                           
  4697                           ;main.c: 301:    update_lcd(0);
  4698  0118EE  0E00               	movlw	0
  4699  0118F0  6EE6               	movwf	postinc1,c
  4700  0118F2  EC8A  F0CE         	call	_update_lcd	;wreg free
  4701                           
  4702                           ;main.c: 302:    WaitMs(5000);
  4703  0118F6  0E88               	movlw	136
  4704  0118F8  6EE6               	movwf	postinc1,c
  4705  0118FA  0E13               	movlw	19
  4706  0118FC  6EE6               	movwf	postinc1,c
  4707  0118FE  EC9E  F0DC         	call	_WaitMs	;wreg free
  4708                           
  4709                           ;main.c: 303:    V.system_stable = 1;
  4710  011902  0E01               	movlw	1
  4711  011904  0101               	movlb	1	; () banked
  4712  011906  6FDE               	movwf	(_V+174)& (0+255),b	;volatile
  4713                           
  4714                           ;main.c: 304:    break;
  4715  011908  D01C               	goto	l13204
  4716  01190A                     l1340:
  4717                           
  4718                           ; BSR set to: 1
  4719                           ;main.c: 310:    P.SYSTEM_STABLE = 1;
  4720  01190A  0100               	movlb	0	; () banked
  4721  01190C  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4722                           
  4723                           ;main.c: 311:    break;
  4724  01190E  D019               	goto	l13204
  4725  011910                     l1342:
  4726                           
  4727                           ; BSR set to: 1
  4728                           ;main.c: 314:    V.ui_state = UI_STATE_INIT;
  4729  011910  6B30               	clrf	_V& (0+255),b	;volatile
  4730                           
  4731                           ;main.c: 315:    break;
  4732  011912  D017               	goto	l13204
  4733  011914                     l13202:
  4734  011914  0101               	movlb	1	; () banked
  4735  011916  5130               	movf	_V& (0+255),w,b	;volatile
  4736  011918  6E0B               	movwf	(btemp+10)^0,c
  4737  01191A  6A0C               	clrf	(btemp+11)^0,c
  4738                           
  4739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4740                           ; Switch size 1, requested type "simple"
  4741                           ; Number of cases is 1, Range of values is 0 to 0
  4742                           ; switch strategies available:
  4743                           ; Name         Instructions Cycles
  4744                           ; simple_byte            4     3 (average)
  4745                           ;	Chosen strategy is simple_byte
  4746  01191C  500C               	movf	(btemp+11)^0,w,c
  4747  01191E  0A00               	xorlw	0	; case 0
  4748  011920  A4D8               	btfss	status,2,c
  4749  011922  D7F6               	goto	l1342
  4750                           
  4751                           ; BSR set to: 1
  4752                           ; Switch size 1, requested type "simple"
  4753                           ; Number of cases is 5, Range of values is 0 to 5
  4754                           ; switch strategies available:
  4755                           ; Name         Instructions Cycles
  4756                           ; simple_byte           16     9 (average)
  4757                           ;	Chosen strategy is simple_byte
  4758  011924  500B               	movf	(btemp+10)^0,w,c
  4759  011926  0A00               	xorlw	0	; case 0
  4760  011928  B4D8               	btfsc	status,2,c
  4761  01192A  D4C8               	goto	l13082
  4762  01192C  0A01               	xorlw	1	; case 1
  4763  01192E  B4D8               	btfsc	status,2,c
  4764  011930  D008               	goto	l13204
  4765  011932  0A02               	xorlw	2	; case 3
  4766  011934  B4D8               	btfsc	status,2,c
  4767  011936  D005               	goto	l13204
  4768  011938  0A07               	xorlw	7	; case 4
  4769  01193A  B4D8               	btfsc	status,2,c
  4770  01193C  D7E6               	goto	l1340
  4771  01193E  0A01               	xorlw	1	; case 5
  4772  011940  D7E7               	goto	l1342
  4773  011942                     l13204:
  4774                           
  4775                           ;main.c: 318:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4776  011942  0E01               	movlw	1
  4777  011944  6EE6               	movwf	postinc1,c
  4778  011946  ECCF  F0DD         	call	_TimerDone	;wreg free
  4779  01194A  5001               	movf	btemp^0,w,c
  4780  01194C  B4D8               	btfsc	status,2,c
  4781  01194E  D013               	goto	l13216
  4782  011950  ECD3  F0E0         	call	_check_adc_scan	;wreg free
  4783  011954  5001               	movf	btemp^0,w,c
  4784  011956  B4D8               	btfsc	status,2,c
  4785  011958  D00E               	goto	l13216
  4786                           
  4787                           ;main.c: 322:    convert_adc_data();
  4788  01195A  ECAB  F0D2         	call	_convert_adc_data	;wreg free
  4789                           
  4790                           ;main.c: 326:    clear_adc_scan();
  4791  01195E  ECE3  F0E0         	call	_clear_adc_scan	;wreg free
  4792                           
  4793                           ; BSR set to: 1
  4794                           ;main.c: 327:    start_adc_scan();
  4795  011962  EC42  F0D8         	call	_start_adc_scan	;wreg free
  4796                           
  4797                           ;main.c: 328:    StartTimer(TMR_ADC, 200);
  4798  011966  0EC8               	movlw	200
  4799  011968  6EE6               	movwf	postinc1,c
  4800  01196A  0E00               	movlw	0
  4801  01196C  6EE6               	movwf	postinc1,c
  4802  01196E  0E01               	movlw	1
  4803  011970  6EE6               	movwf	postinc1,c
  4804  011972  ECA9  F0DB         	call	_StartTimer	;wreg free
  4805  011976                     l13216:
  4806                           
  4807                           ;main.c: 335:   if (TimerDone(TMR_DISPLAY)) {
  4808                           
  4809                           ;main.c: 331:   if (V.ticks) {
  4810  011976  0E0A               	movlw	10
  4811  011978  6EE6               	movwf	postinc1,c
  4812  01197A  ECCF  F0DD         	call	_TimerDone	;wreg free
  4813  01197E  5001               	movf	btemp^0,w,c
  4814  011980  B4D8               	btfsc	status,2,c
  4815  011982  EF3F  F091         	goto	l13292
  4816                           
  4817                           ;main.c: 336:    if (TimerDone(TMR_HELPDIS)) {
  4818  011986  0E09               	movlw	9
  4819  011988  6EE6               	movwf	postinc1,c
  4820  01198A  ECCF  F0DD         	call	_TimerDone	;wreg free
  4821  01198E  5001               	movf	btemp^0,w,c
  4822  011990  B4D8               	btfsc	status,2,c
  4823  011992  D004               	goto	l13224
  4824                           
  4825                           ;main.c: 337:     set_display_info(DIS_STR);
  4826  011994  0E00               	movlw	0
  4827  011996  6EE6               	movwf	postinc1,c
  4828  011998  ECD5  F0DF         	call	_set_display_info	;wreg free
  4829  01199C                     l13224:
  4830                           
  4831                           ;main.c: 339:    calc_model_data();
  4832  01199C  EC27  F0AE         	call	_calc_model_data	;wreg free
  4833                           
  4834                           ; BSR set to: 57
  4835                           ;main.c: 346:     hid_display(&H);
  4836                           
  4837                           ;main.c: 341:    if (0) {
  4838  0119A0  0EF7               	movlw	_H& (0+255)
  4839  0119A2  6EE6               	movwf	postinc1,c
  4840  0119A4  EC97  F0CF         	call	_hid_display	;wreg free
  4841                           
  4842                           ;main.c: 347:     switch (H.hid_display) {
  4843  0119A8  EFEE  F090         	goto	l13272
  4844  0119AC                     l1350:
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;main.c: 349:      V.calib = 0;
  4848  0119AC  0101               	movlb	1	; () banked
  4849  0119AE  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  4850                           
  4851                           ; BSR set to: 1
  4852                           ;main.c: 350:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f    ", (C.day) ? 'D' : '
      +                           ', C.p_pv);
  4853  0119B0  EE22  F021         	lfsr	2,_C+290	;volatile
  4854  0119B4  50DF               	movf	indf2,w,c
  4855  0119B6  A4D8               	btfss	status,2,c
  4856  0119B8  D002               	goto	l13234
  4857                           
  4858                           ; BSR set to: 1
  4859  0119BA  0E20               	movlw	32
  4860  0119BC  D001               	goto	L1
  4861  0119BE                     l13234:
  4862                           
  4863                           ; BSR set to: 1
  4864  0119BE  0E44               	movlw	68
  4865  0119C0                     L1:
  4866  0119C0  6E0B               	movwf	(btemp+10)^0,c
  4867  0119C2  0E00               	movlw	0
  4868  0119C4  6E0C               	movwf	(btemp+11)^0,c
  4869                           
  4870                           ;stkvar	_main$3752 @ sp[(-17)+2]
  4871  0119C6  0EF1               	movlw	-15
  4872  0119C8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4873  0119CE  0EF2               	movlw	-14
  4874  0119D0  0060  F033  FFE3   	movff	btemp+11,plusw1
  4875                           
  4876                           ; BSR set to: 1
  4877  0119D6  EE21  F37B         	lfsr	2,_C+124	;volatile
  4878  0119DA  006F FF7B FFE6     	movff	postinc2,postinc1
  4879  0119E0  006F FF7B FFE6     	movff	postinc2,postinc1
  4880  0119E6  006F FF7B FFE6     	movff	postinc2,postinc1
  4881  0119EC  006F FF7B FFE6     	movff	postinc2,postinc1
  4882                           
  4883                           ;stkvar	_main$3752 @ sp[(-21)+2]
  4884  0119F2  0EED               	movlw	-19
  4885  0119F4  006F FF8F FFE6     	movff	plusw1,postinc1
  4886  0119FA  006F FF8F FFE6     	movff	plusw1,postinc1
  4887  011A00  0E77               	movlw	low STR_22
  4888  011A02  6EE6               	movwf	postinc1,c
  4889  011A04  0EFE               	movlw	high STR_22
  4890  011A06  6EE6               	movwf	postinc1,c
  4891  011A08  0E00               	movlw	0
  4892  011A0A  6EE6               	movwf	postinc1,c
  4893  011A0C  0E00               	movlw	0
  4894  011A0E  6EE6               	movwf	postinc1,c
  4895  011A10  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4896  011A14  0060  F007  FFE6   	movff	btemp,postinc1
  4897  011A1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4898  011A20  0E0A               	movlw	10
  4899  011A22  6EE6               	movwf	postinc1,c
  4900  011A24  EC12  F0CF         	call	_sprintf	;wreg free
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;main.c: 351:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4904  011A28  EE21  F373         	lfsr	2,_C+116	;volatile
  4905  011A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  4906  011A32  006F FF7B FFE6     	movff	postinc2,postinc1
  4907  011A38  006F FF7B FFE6     	movff	postinc2,postinc1
  4908  011A3E  006F FF7B FFE6     	movff	postinc2,postinc1
  4909  011A44  0E37               	movlw	low STR_23
  4910  011A46  6EE6               	movwf	postinc1,c
  4911  011A48  0EFF               	movlw	high STR_23
  4912  011A4A  6EE6               	movwf	postinc1,c
  4913  011A4C  0E00               	movlw	0
  4914  011A4E  6EE6               	movwf	postinc1,c
  4915  011A50  0E01               	movlw	1
  4916  011A52  6EE6               	movwf	postinc1,c
  4917  011A54  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4918  011A58  0060  F007  FFE6   	movff	btemp,postinc1
  4919  011A5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4920  011A64  0E08               	movlw	8
  4921  011A66  6EE6               	movwf	postinc1,c
  4922  011A68  EC12  F0CF         	call	_sprintf	;wreg free
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;main.c: 352:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4926  011A6C  EE21  F377         	lfsr	2,_C+120	;volatile
  4927  011A70  006F FF7B FFE6     	movff	postinc2,postinc1
  4928  011A76  006F FF7B FFE6     	movff	postinc2,postinc1
  4929  011A7C  006F FF7B FFE6     	movff	postinc2,postinc1
  4930  011A82  006F FF7B FFE6     	movff	postinc2,postinc1
  4931  011A88  0E24               	movlw	low STR_24
  4932  011A8A  6EE6               	movwf	postinc1,c
  4933  011A8C  0EFF               	movlw	high STR_24
  4934  011A8E  6EE6               	movwf	postinc1,c
  4935  011A90  0E00               	movlw	0
  4936  011A92  6EE6               	movwf	postinc1,c
  4937  011A94  0E02               	movlw	2
  4938  011A96  6EE6               	movwf	postinc1,c
  4939  011A98  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4940  011A9C  0060  F007  FFE6   	movff	btemp,postinc1
  4941  011AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4942  011AA8  0E08               	movlw	8
  4943  011AAA  6EE6               	movwf	postinc1,c
  4944  011AAC  EC12  F0CF         	call	_sprintf	;wreg free
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;main.c: 354:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f     ", (C.day) ? 'D' : '
      +                           ', C.pvkw);
  4948  011AB0  EE22  F021         	lfsr	2,_C+290	;volatile
  4949  011AB4  50DF               	movf	indf2,w,c
  4950  011AB6  A4D8               	btfss	status,2,c
  4951  011AB8  D002               	goto	l13246
  4952                           
  4953                           ; BSR set to: 0
  4954  011ABA  0E20               	movlw	32
  4955  011ABC  D001               	goto	L2
  4956  011ABE                     l13246:
  4957                           
  4958                           ; BSR set to: 0
  4959  011ABE  0E44               	movlw	68
  4960  011AC0                     L2:
  4961  011AC0  6E0B               	movwf	(btemp+10)^0,c
  4962  011AC2  0E00               	movlw	0
  4963  011AC4  6E0C               	movwf	(btemp+11)^0,c
  4964                           
  4965                           ;stkvar	_main$3756 @ sp[(-17)+0]
  4966  011AC6  0EEF               	movlw	-17
  4967  011AC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  4968  011ACE  0EF0               	movlw	-16
  4969  011AD0  0060  F033  FFE3   	movff	btemp+11,plusw1
  4970                           
  4971                           ; BSR set to: 0
  4972  011AD6  EE21  F3A7         	lfsr	2,_C+168	;volatile
  4973  011ADA  006F FF7B FFE6     	movff	postinc2,postinc1
  4974  011AE0  006F FF7B FFE6     	movff	postinc2,postinc1
  4975  011AE6  006F FF7B FFE6     	movff	postinc2,postinc1
  4976  011AEC  006F FF7B FFE6     	movff	postinc2,postinc1
  4977                           
  4978                           ;stkvar	_main$3756 @ sp[(-21)+0]
  4979  011AF2  0EEB               	movlw	-21
  4980  011AF4  006F FF8F FFE6     	movff	plusw1,postinc1
  4981  011AFA  006F FF8F FFE6     	movff	plusw1,postinc1
  4982  011B00  0E27               	movlw	low STR_25
  4983  011B02  6EE6               	movwf	postinc1,c
  4984  011B04  0EFE               	movlw	high STR_25
  4985  011B06  6EE6               	movwf	postinc1,c
  4986  011B08  0E01               	movlw	1
  4987  011B0A  6EE6               	movwf	postinc1,c
  4988  011B0C  0E00               	movlw	0
  4989  011B0E  6EE6               	movwf	postinc1,c
  4990  011B10  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  4991  011B14  0060  F007  FFE6   	movff	btemp,postinc1
  4992  011B1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4993  011B20  0E0A               	movlw	10
  4994  011B22  6EE6               	movwf	postinc1,c
  4995  011B24  EC12  F0CF         	call	_sprintf	;wreg free
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;main.c: 355:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4999  011B28  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5000  011B2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5001  011B32  006F FF7B FFE6     	movff	postinc2,postinc1
  5002  011B38  006F FF7B FFE6     	movff	postinc2,postinc1
  5003  011B3E  006F FF7B FFE6     	movff	postinc2,postinc1
  5004  011B44  0E11               	movlw	low STR_26
  5005  011B46  6EE6               	movwf	postinc1,c
  5006  011B48  0EFF               	movlw	high STR_26
  5007  011B4A  6EE6               	movwf	postinc1,c
  5008  011B4C  0E01               	movlw	1
  5009  011B4E  6EE6               	movwf	postinc1,c
  5010  011B50  0E01               	movlw	1
  5011  011B52  6EE6               	movwf	postinc1,c
  5012  011B54  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5013  011B58  0060  F007  FFE6   	movff	btemp,postinc1
  5014  011B5E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5015  011B64  0E08               	movlw	8
  5016  011B66  6EE6               	movwf	postinc1,c
  5017  011B68  EC12  F0CF         	call	_sprintf	;wreg free
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;main.c: 356:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  5021  011B6C  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5022  011B70  006F FF7B FFE6     	movff	postinc2,postinc1
  5023  011B76  006F FF7B FFE6     	movff	postinc2,postinc1
  5024  011B7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5025  011B82  006F FF7B FFE6     	movff	postinc2,postinc1
  5026  011B88  0EFE               	movlw	low STR_27
  5027  011B8A  6EE6               	movwf	postinc1,c
  5028  011B8C  0EFE               	movlw	high STR_27
  5029  011B8E  6EE6               	movwf	postinc1,c
  5030  011B90  0E01               	movlw	1
  5031  011B92  6EE6               	movwf	postinc1,c
  5032  011B94  0E02               	movlw	2
  5033  011B96  6EE6               	movwf	postinc1,c
  5034  011B98  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5035  011B9C  0060  F007  FFE6   	movff	btemp,postinc1
  5036  011BA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5037  011BA8  0E08               	movlw	8
  5038  011BAA  6EE6               	movwf	postinc1,c
  5039  011BAC  EC12  F0CF         	call	_sprintf	;wreg free
  5040                           
  5041                           ;main.c: 357:      break;
  5042  011BB0  D32B               	goto	l13274
  5043  011BB2                     l1360:
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;main.c: 359:      V.calib = 0;
  5047  011BB2  0101               	movlb	1	; () banked
  5048  011BB4  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5049                           
  5050                           ; BSR set to: 1
  5051                           ;main.c: 360:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  5052  011BB6  EE21  F303         	lfsr	2,_C+4	;volatile
  5053  011BBA  006F FF7B FFE6     	movff	postinc2,postinc1
  5054  011BC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5055  011BC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5056  011BCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5057  011BD2  EE21  F313         	lfsr	2,_C+20	;volatile
  5058  011BD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5059  011BDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5060  011BE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5061  011BE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5062  011BEE  0E70               	movlw	low STR_28
  5063  011BF0  6EE6               	movwf	postinc1,c
  5064  011BF2  0EFF               	movlw	high STR_28
  5065  011BF4  6EE6               	movwf	postinc1,c
  5066  011BF6  0E00               	movlw	0
  5067  011BF8  6EE6               	movwf	postinc1,c
  5068  011BFA  0E00               	movlw	0
  5069  011BFC  6EE6               	movwf	postinc1,c
  5070  011BFE  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5071  011C02  0060  F007  FFE6   	movff	btemp,postinc1
  5072  011C08  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5073  011C0E  0E0C               	movlw	12
  5074  011C10  6EE6               	movwf	postinc1,c
  5075  011C12  EC12  F0CF         	call	_sprintf	;wreg free
  5076                           
  5077                           ;main.c: 361:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  5078  011C16  EE21  F2FF         	lfsr	2,_C
  5079  011C1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5080  011C20  006F FF7B FFE6     	movff	postinc2,postinc1
  5081  011C26  006F FF7B FFE6     	movff	postinc2,postinc1
  5082  011C2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5083  011C32  EE21  F30F         	lfsr	2,_C+16	;volatile
  5084  011C36  006F FF7B FFE6     	movff	postinc2,postinc1
  5085  011C3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5086  011C42  006F FF7B FFE6     	movff	postinc2,postinc1
  5087  011C48  006F FF7B FFE6     	movff	postinc2,postinc1
  5088  011C4E  0E4A               	movlw	low STR_29
  5089  011C50  6EE6               	movwf	postinc1,c
  5090  011C52  0EFF               	movlw	high STR_29
  5091  011C54  6EE6               	movwf	postinc1,c
  5092  011C56  0E00               	movlw	0
  5093  011C58  6EE6               	movwf	postinc1,c
  5094  011C5A  0E01               	movlw	1
  5095  011C5C  6EE6               	movwf	postinc1,c
  5096  011C5E  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5097  011C62  0060  F007  FFE6   	movff	btemp,postinc1
  5098  011C68  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5099  011C6E  0E0C               	movlw	12
  5100  011C70  6EE6               	movwf	postinc1,c
  5101  011C72  EC12  F0CF         	call	_sprintf	;wreg free
  5102                           
  5103                           ;main.c: 362:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  5104  011C76  EE21  F33F         	lfsr	2,_C+64	;volatile
  5105  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5106  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  5107  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  5108  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  5109  011C92  EE21  F307         	lfsr	2,_C+8	;volatile
  5110  011C96  006F FF7B FFE6     	movff	postinc2,postinc1
  5111  011C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  5112  011CA2  006F FF7B FFE6     	movff	postinc2,postinc1
  5113  011CA8  006F FF7B FFE6     	movff	postinc2,postinc1
  5114  011CAE  0E5D               	movlw	low STR_30
  5115  011CB0  6EE6               	movwf	postinc1,c
  5116  011CB2  0EFF               	movlw	high STR_30
  5117  011CB4  6EE6               	movwf	postinc1,c
  5118  011CB6  0E00               	movlw	0
  5119  011CB8  6EE6               	movwf	postinc1,c
  5120  011CBA  0E02               	movlw	2
  5121  011CBC  6EE6               	movwf	postinc1,c
  5122  011CBE  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5123  011CC2  0060  F007  FFE6   	movff	btemp,postinc1
  5124  011CC8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5125  011CCE  0E0C               	movlw	12
  5126  011CD0  6EE6               	movwf	postinc1,c
  5127  011CD2  EC12  F0CF         	call	_sprintf	;wreg free
  5128                           
  5129                           ;main.c: 364:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  5130  011CD6  EE21  F39F         	lfsr	2,_C+160	;volatile
  5131  011CDA  006F FF7B FFE6     	movff	postinc2,postinc1
  5132  011CE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5133  011CE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5134  011CEC  006F FF7B FFE6     	movff	postinc2,postinc1
  5135  011CF2  0EC5               	movlw	low STR_31
  5136  011CF4  6EE6               	movwf	postinc1,c
  5137  011CF6  0EFE               	movlw	high STR_31
  5138  011CF8  6EE6               	movwf	postinc1,c
  5139  011CFA  0E01               	movlw	1
  5140  011CFC  6EE6               	movwf	postinc1,c
  5141  011CFE  0E00               	movlw	0
  5142  011D00  6EE6               	movwf	postinc1,c
  5143  011D02  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5144  011D06  0060  F007  FFE6   	movff	btemp,postinc1
  5145  011D0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5146  011D12  0E08               	movlw	8
  5147  011D14  6EE6               	movwf	postinc1,c
  5148  011D16  EC12  F0CF         	call	_sprintf	;wreg free
  5149                           
  5150                           ;main.c: 365:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  5151  011D1A  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5152  011D1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5153  011D24  006F FF7B FFE6     	movff	postinc2,postinc1
  5154  011D2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5155  011D30  006F FF7B FFE6     	movff	postinc2,postinc1
  5156  011D36  0ED8               	movlw	low STR_32
  5157  011D38  6EE6               	movwf	postinc1,c
  5158  011D3A  0EFE               	movlw	high STR_32
  5159  011D3C  6EE6               	movwf	postinc1,c
  5160  011D3E  0E01               	movlw	1
  5161  011D40  6EE6               	movwf	postinc1,c
  5162  011D42  0E01               	movlw	1
  5163  011D44  6EE6               	movwf	postinc1,c
  5164  011D46  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5165  011D4A  0060  F007  FFE6   	movff	btemp,postinc1
  5166  011D50  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5167  011D56  0E08               	movlw	8
  5168  011D58  6EE6               	movwf	postinc1,c
  5169  011D5A  EC12  F0CF         	call	_sprintf	;wreg free
  5170                           
  5171                           ;main.c: 366:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  5172  011D5E  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5173  011D62  006F FF7B FFE6     	movff	postinc2,postinc1
  5174  011D68  006F FF7B FFE6     	movff	postinc2,postinc1
  5175  011D6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5176  011D74  006F FF7B FFE6     	movff	postinc2,postinc1
  5177  011D7A  EE21  F39F         	lfsr	2,_C+160	;volatile
  5178  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  5179  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  5180  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  5181  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
  5182  011D96  ECC2  F0A2         	call	___fladd	;wreg free
  5183  011D9A  0060  F007  FFE6   	movff	btemp,postinc1
  5184  011DA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5185  011DA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5186  011DAC  0060  F013  FFE6   	movff	btemp+3,postinc1
  5187  011DB2  0EEB               	movlw	low STR_33
  5188  011DB4  6EE6               	movwf	postinc1,c
  5189  011DB6  0EFE               	movlw	high STR_33
  5190  011DB8  6EE6               	movwf	postinc1,c
  5191  011DBA  0E01               	movlw	1
  5192  011DBC  6EE6               	movwf	postinc1,c
  5193  011DBE  0E02               	movlw	2
  5194  011DC0  6EE6               	movwf	postinc1,c
  5195  011DC2  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5196  011DC6  0060  F007  FFE6   	movff	btemp,postinc1
  5197  011DCC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5198  011DD2  0E08               	movlw	8
  5199  011DD4  6EE6               	movwf	postinc1,c
  5200  011DD6  EC12  F0CF         	call	_sprintf	;wreg free
  5201                           
  5202                           ;main.c: 367:      break;
  5203  011DDA  D216               	goto	l13274
  5204  011DDC                     l1361:
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;main.c: 369:      V.calib = 0;
  5208  011DDC  0101               	movlb	1	; () banked
  5209  011DDE  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5210                           
  5211                           ; BSR set to: 1
  5212                           ;main.c: 370:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5213  011DE0  EE21  F37F         	lfsr	2,_C+128	;volatile
  5214  011DE4  006F FF7B FFE6     	movff	postinc2,postinc1
  5215  011DEA  006F FF7B FFE6     	movff	postinc2,postinc1
  5216  011DF0  006F FF7B FFE6     	movff	postinc2,postinc1
  5217  011DF6  006F FF7B FFE6     	movff	postinc2,postinc1
  5218  011DFC  0E3B               	movlw	low STR_34
  5219  011DFE  6EE6               	movwf	postinc1,c
  5220  011E00  0EFE               	movlw	high STR_34
  5221  011E02  6EE6               	movwf	postinc1,c
  5222  011E04  0E00               	movlw	0
  5223  011E06  6EE6               	movwf	postinc1,c
  5224  011E08  0E00               	movlw	0
  5225  011E0A  6EE6               	movwf	postinc1,c
  5226  011E0C  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5227  011E10  0060  F007  FFE6   	movff	btemp,postinc1
  5228  011E16  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5229  011E1C  0E08               	movlw	8
  5230  011E1E  6EE6               	movwf	postinc1,c
  5231  011E20  EC12  F0CF         	call	_sprintf	;wreg free
  5232                           
  5233                           ;main.c: 371:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5234  011E24  EE21  F393         	lfsr	2,_C+148	;volatile
  5235  011E28  006F FF7B FFE6     	movff	postinc2,postinc1
  5236  011E2E  006F FF7B FFE6     	movff	postinc2,postinc1
  5237  011E34  006F FF7B FFE6     	movff	postinc2,postinc1
  5238  011E3A  006F FF7B FFE6     	movff	postinc2,postinc1
  5239  011E40  EE21  F38F         	lfsr	2,_C+144	;volatile
  5240  011E44  006F FF7B FFE6     	movff	postinc2,postinc1
  5241  011E4A  006F FF7B FFE6     	movff	postinc2,postinc1
  5242  011E50  006F FF7B FFE6     	movff	postinc2,postinc1
  5243  011E56  006F FF7B FFE6     	movff	postinc2,postinc1
  5244  011E5C  0E8B               	movlw	low STR_35
  5245  011E5E  6EE6               	movwf	postinc1,c
  5246  011E60  0EFE               	movlw	high STR_35
  5247  011E62  6EE6               	movwf	postinc1,c
  5248  011E64  0E00               	movlw	0
  5249  011E66  6EE6               	movwf	postinc1,c
  5250  011E68  0E01               	movlw	1
  5251  011E6A  6EE6               	movwf	postinc1,c
  5252  011E6C  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5253  011E70  0060  F007  FFE6   	movff	btemp,postinc1
  5254  011E76  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5255  011E7C  0E0C               	movlw	12
  5256  011E7E  6EE6               	movwf	postinc1,c
  5257  011E80  EC12  F0CF         	call	_sprintf	;wreg free
  5258                           
  5259                           ;main.c: 372:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5260  011E84  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5261  011E88  006F FF78  F00B    	movff	postinc2,btemp+10
  5262  011E8E  006F FF74  F00C    	movff	postdec2,btemp+11
  5263  011E94  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5264  011E9A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5265  011EA0  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5266  011EA4  006F FF78  F00B    	movff	postinc2,btemp+10
  5267  011EAA  006F FF74  F00C    	movff	postdec2,btemp+11
  5268  011EB0  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5269  011EB6  0060  F033  FFE6   	movff	btemp+11,postinc1
  5270  011EBC  0E00               	movlw	0
  5271  011EBE  6EE6               	movwf	postinc1,c
  5272  011EC0  0E05               	movlw	5
  5273  011EC2  6EE6               	movwf	postinc1,c
  5274  011EC4  EC90  F0D0         	call	_spinners	;wreg free
  5275  011EC8  5001               	movf	btemp^0,w,c
  5276  011ECA  6EE6               	movwf	postinc1,c
  5277  011ECC  0E00               	movlw	0
  5278  011ECE  6EE6               	movwf	postinc1,c
  5279  011ED0  0E13               	movlw	low STR_36
  5280  011ED2  6EE6               	movwf	postinc1,c
  5281  011ED4  0EFE               	movlw	high STR_36
  5282  011ED6  6EE6               	movwf	postinc1,c
  5283  011ED8  0E00               	movlw	0
  5284  011EDA  6EE6               	movwf	postinc1,c
  5285  011EDC  0E02               	movlw	2
  5286  011EDE  6EE6               	movwf	postinc1,c
  5287  011EE0  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5288  011EE4  0060  F007  FFE6   	movff	btemp,postinc1
  5289  011EEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5290  011EF0  0E0A               	movlw	10
  5291  011EF2  6EE6               	movwf	postinc1,c
  5292  011EF4  EC12  F0CF         	call	_sprintf	;wreg free
  5293                           
  5294                           ;main.c: 374:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5295  011EF8  EE21  F387         	lfsr	2,_C+136	;volatile
  5296  011EFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5297  011F02  006F FF7B FFE6     	movff	postinc2,postinc1
  5298  011F08  006F FF7B FFE6     	movff	postinc2,postinc1
  5299  011F0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5300  011F14  0EFF               	movlw	low STR_37
  5301  011F16  6EE6               	movwf	postinc1,c
  5302  011F18  0EFD               	movlw	high STR_37
  5303  011F1A  6EE6               	movwf	postinc1,c
  5304  011F1C  0E01               	movlw	1
  5305  011F1E  6EE6               	movwf	postinc1,c
  5306  011F20  0E00               	movlw	0
  5307  011F22  6EE6               	movwf	postinc1,c
  5308  011F24  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5309  011F28  0060  F007  FFE6   	movff	btemp,postinc1
  5310  011F2E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5311  011F34  0E08               	movlw	8
  5312  011F36  6EE6               	movwf	postinc1,c
  5313  011F38  EC12  F0CF         	call	_sprintf	;wreg free
  5314                           
  5315                           ;main.c: 375:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5316  011F3C  EE22  F00D         	lfsr	2,_C+270	;volatile
  5317  011F40  006F FF7B FFE6     	movff	postinc2,postinc1
  5318  011F46  006F FF7B FFE6     	movff	postinc2,postinc1
  5319  011F4C  006F FF7B FFE6     	movff	postinc2,postinc1
  5320  011F52  006F FF7B FFE6     	movff	postinc2,postinc1
  5321  011F58  EE22  F019         	lfsr	2,_C+282	;volatile
  5322  011F5C  006F FF7B FFE6     	movff	postinc2,postinc1
  5323  011F62  006F FF7B FFE6     	movff	postinc2,postinc1
  5324  011F68  006F FF7B FFE6     	movff	postinc2,postinc1
  5325  011F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5326  011F74  0E4F               	movlw	low STR_38
  5327  011F76  6EE6               	movwf	postinc1,c
  5328  011F78  0EFE               	movlw	high STR_38
  5329  011F7A  6EE6               	movwf	postinc1,c
  5330  011F7C  0E01               	movlw	1
  5331  011F7E  6EE6               	movwf	postinc1,c
  5332  011F80  0E01               	movlw	1
  5333  011F82  6EE6               	movwf	postinc1,c
  5334  011F84  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5335  011F88  0060  F007  FFE6   	movff	btemp,postinc1
  5336  011F8E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5337  011F94  0E0C               	movlw	12
  5338  011F96  6EE6               	movwf	postinc1,c
  5339  011F98  EC12  F0CF         	call	_sprintf	;wreg free
  5340                           
  5341                           ;main.c: 376:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5342  011F9C  EE22  F011         	lfsr	2,_C+274	;volatile
  5343  011FA0  006F FF7B FFE6     	movff	postinc2,postinc1
  5344  011FA6  006F FF7B FFE6     	movff	postinc2,postinc1
  5345  011FAC  006F FF7B FFE6     	movff	postinc2,postinc1
  5346  011FB2  006F FF7B FFE6     	movff	postinc2,postinc1
  5347  011FB8  EE22  F01D         	lfsr	2,_C+286	;volatile
  5348  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5349  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5350  011FC8  006F FF7B FFE6     	movff	postinc2,postinc1
  5351  011FCE  006F FF7B FFE6     	movff	postinc2,postinc1
  5352  011FD4  0E63               	movlw	low STR_39
  5353  011FD6  6EE6               	movwf	postinc1,c
  5354  011FD8  0EFE               	movlw	high STR_39
  5355  011FDA  6EE6               	movwf	postinc1,c
  5356  011FDC  0E01               	movlw	1
  5357  011FDE  6EE6               	movwf	postinc1,c
  5358  011FE0  0E02               	movlw	2
  5359  011FE2  6EE6               	movwf	postinc1,c
  5360  011FE4  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5361  011FE8  0060  F007  FFE6   	movff	btemp,postinc1
  5362  011FEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5363  011FF4  0E0C               	movlw	12
  5364  011FF6  6EE6               	movwf	postinc1,c
  5365  011FF8  EC12  F0CF         	call	_sprintf	;wreg free
  5366                           
  5367                           ;main.c: 377:      break;
  5368  011FFC  D105               	goto	l13274
  5369  011FFE                     l13258:
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;main.c: 379:      if (!V.calib) {
  5373  011FFE  0101               	movlb	1	; () banked
  5374  012000  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
  5375  012002  A4D8               	btfss	status,2,c
  5376  012004  D02D               	goto	l13262
  5377                           
  5378                           ; BSR set to: 1
  5379                           ;main.c: 380:       lp_filter(0.0, i, -1);
  5380  012006  0EFF               	movlw	255
  5381  012008  6EE6               	movwf	postinc1,c
  5382                           
  5383                           ;stkvar	_i @ sp[(-18)+13]
  5384  01200A  0EFB               	movlw	-5
  5385  01200C  50E3               	movf	plusw1,w,c
  5386  01200E  6EE6               	movwf	postinc1,c
  5387  012010  0E00               	movlw	0
  5388  012012  6EE6               	movwf	postinc1,c
  5389  012014  0E00               	movlw	0
  5390  012016  6EE6               	movwf	postinc1,c
  5391  012018  0E00               	movlw	0
  5392  01201A  6EE6               	movwf	postinc1,c
  5393  01201C  0E00               	movlw	0
  5394  01201E  6EE6               	movwf	postinc1,c
  5395  012020  EC2B  F0C3         	call	_lp_filter	;wreg free
  5396                           
  5397                           ;main.c: 381:       lp_filter(0.0, j, -1);
  5398  012024  0EFF               	movlw	255
  5399  012026  6EE6               	movwf	postinc1,c
  5400                           
  5401                           ;stkvar	_j @ sp[(-18)+12]
  5402  012028  0EFA               	movlw	-6
  5403  01202A  50E3               	movf	plusw1,w,c
  5404  01202C  6EE6               	movwf	postinc1,c
  5405  01202E  0E00               	movlw	0
  5406  012030  6EE6               	movwf	postinc1,c
  5407  012032  0E00               	movlw	0
  5408  012034  6EE6               	movwf	postinc1,c
  5409  012036  0E00               	movlw	0
  5410  012038  6EE6               	movwf	postinc1,c
  5411  01203A  0E00               	movlw	0
  5412  01203C  6EE6               	movwf	postinc1,c
  5413  01203E  EC2B  F0C3         	call	_lp_filter	;wreg free
  5414                           
  5415                           ;main.c: 382:       lp_filter(0.0, k, -1);
  5416  012042  0EFF               	movlw	255
  5417  012044  6EE6               	movwf	postinc1,c
  5418                           
  5419                           ;stkvar	_k @ sp[(-18)+11]
  5420  012046  0EF9               	movlw	-7
  5421  012048  50E3               	movf	plusw1,w,c
  5422  01204A  6EE6               	movwf	postinc1,c
  5423  01204C  0E00               	movlw	0
  5424  01204E  6EE6               	movwf	postinc1,c
  5425  012050  0E00               	movlw	0
  5426  012052  6EE6               	movwf	postinc1,c
  5427  012054  0E00               	movlw	0
  5428  012056  6EE6               	movwf	postinc1,c
  5429  012058  0E00               	movlw	0
  5430  01205A  6EE6               	movwf	postinc1,c
  5431  01205C  EC2B  F0C3         	call	_lp_filter	;wreg free
  5432  012060                     l13262:
  5433                           
  5434                           ;main.c: 384:      V.calib = 1;
  5435  012060  0E01               	movlw	1
  5436  012062  0101               	movlb	1	; () banked
  5437  012064  6FDC               	movwf	(_V+172)& (0+255),b	;volatile
  5438                           
  5439                           ; BSR set to: 1
  5440                           ;main.c: 385:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5441  012066  0E02               	movlw	2
  5442  012068  6EE6               	movwf	postinc1,c
  5443  01206A  EC64  F0DD         	call	_get_switch	;wreg free
  5444  01206E  5001               	movf	btemp^0,w,c
  5445  012070  6EE6               	movwf	postinc1,c
  5446  012072  0E00               	movlw	0
  5447  012074  6EE6               	movwf	postinc1,c
  5448                           
  5449                           ;stkvar	_i @ sp[(-19)+13]
  5450  012076  0EFA               	movlw	-6
  5451  012078  50E3               	movf	plusw1,w,c
  5452  01207A  0D04               	mullw	4
  5453  01207C  0EFF               	movlw	low _C
  5454  01207E  24F3               	addwf	243,w,c
  5455  012080  6ED9               	movwf	fsr2l,c
  5456  012082  0E06               	movlw	high _C
  5457  012084  20F4               	addwfc	prodh,w,c
  5458  012086  6EDA               	movwf	fsr2h,c
  5459  012088  006F FF7B FFE6     	movff	postinc2,postinc1
  5460  01208E  006F FF7B FFE6     	movff	postinc2,postinc1
  5461  012094  006F FF7B FFE6     	movff	postinc2,postinc1
  5462  01209A  006F FF7B FFE6     	movff	postinc2,postinc1
  5463                           
  5464                           ;stkvar	_i @ sp[(-23)+13]
  5465  0120A0  0EF6               	movlw	-10
  5466  0120A2  50E3               	movf	plusw1,w,c
  5467  0120A4  6EE6               	movwf	postinc1,c
  5468  0120A6  EC66  F0DF         	call	_get_raw_result	;wreg free
  5469  0120AA  0060  F007  FFE6   	movff	btemp,postinc1
  5470  0120B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5471  0120B6  0E94               	movlw	low STR_19
  5472  0120B8  6EE6               	movwf	postinc1,c
  5473  0120BA  0EFF               	movlw	high STR_19
  5474  0120BC  6EE6               	movwf	postinc1,c
  5475  0120BE  0E00               	movlw	0
  5476  0120C0  6EE6               	movwf	postinc1,c
  5477  0120C2  0E00               	movlw	0
  5478  0120C4  6EE6               	movwf	postinc1,c
  5479  0120C6  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5480  0120CA  0060  F007  FFE6   	movff	btemp,postinc1
  5481  0120D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5482  0120D6  0E0C               	movlw	12
  5483  0120D8  6EE6               	movwf	postinc1,c
  5484  0120DA  EC12  F0CF         	call	_sprintf	;wreg free
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;main.c: 386:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5488  0120DE  0E03               	movlw	3
  5489  0120E0  6EE6               	movwf	postinc1,c
  5490  0120E2  EC64  F0DD         	call	_get_switch	;wreg free
  5491  0120E6  5001               	movf	btemp^0,w,c
  5492  0120E8  6EE6               	movwf	postinc1,c
  5493  0120EA  0E00               	movlw	0
  5494  0120EC  6EE6               	movwf	postinc1,c
  5495                           
  5496                           ;stkvar	_j @ sp[(-19)+12]
  5497  0120EE  0EF9               	movlw	-7
  5498  0120F0  50E3               	movf	plusw1,w,c
  5499  0120F2  0D04               	mullw	4
  5500  0120F4  0EFF               	movlw	low _C
  5501  0120F6  24F3               	addwf	243,w,c
  5502  0120F8  6ED9               	movwf	fsr2l,c
  5503  0120FA  0E06               	movlw	high _C
  5504  0120FC  20F4               	addwfc	prodh,w,c
  5505  0120FE  6EDA               	movwf	fsr2h,c
  5506  012100  006F FF7B FFE6     	movff	postinc2,postinc1
  5507  012106  006F FF7B FFE6     	movff	postinc2,postinc1
  5508  01210C  006F FF7B FFE6     	movff	postinc2,postinc1
  5509  012112  006F FF7B FFE6     	movff	postinc2,postinc1
  5510                           
  5511                           ;stkvar	_j @ sp[(-23)+12]
  5512  012118  0EF5               	movlw	-11
  5513  01211A  50E3               	movf	plusw1,w,c
  5514  01211C  6EE6               	movwf	postinc1,c
  5515  01211E  EC66  F0DF         	call	_get_raw_result	;wreg free
  5516  012122  0060  F007  FFE6   	movff	btemp,postinc1
  5517  012128  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5518  01212E  0E94               	movlw	low STR_19
  5519  012130  6EE6               	movwf	postinc1,c
  5520  012132  0EFF               	movlw	high STR_19
  5521  012134  6EE6               	movwf	postinc1,c
  5522  012136  0E00               	movlw	0
  5523  012138  6EE6               	movwf	postinc1,c
  5524  01213A  0E01               	movlw	1
  5525  01213C  6EE6               	movwf	postinc1,c
  5526  01213E  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5527  012142  0060  F007  FFE6   	movff	btemp,postinc1
  5528  012148  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5529  01214E  0E0C               	movlw	12
  5530  012150  6EE6               	movwf	postinc1,c
  5531  012152  EC12  F0CF         	call	_sprintf	;wreg free
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;main.c: 387:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5535                           ;stkvar	_inp_index @ sp[(-17)+14]
  5536  012156  0EFD               	movlw	-3
  5537  012158  50E3               	movf	plusw1,w,c
  5538  01215A  6E0B               	movwf	(btemp+10)^0,c
  5539  01215C  6A0C               	clrf	(btemp+11)^0,c
  5540  01215E  0E01               	movlw	1
  5541  012160  260B               	addwf	(btemp+10)^0,f,c
  5542  012162  0E00               	movlw	0
  5543  012164  220C               	addwfc	(btemp+11)^0,f,c
  5544  012166  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5545  01216C  0060  F033  FFE6   	movff	btemp+11,postinc1
  5546                           
  5547                           ;stkvar	_k @ sp[(-19)+11]
  5548  012172  0EF8               	movlw	-8
  5549  012174  50E3               	movf	plusw1,w,c
  5550  012176  0D04               	mullw	4
  5551  012178  0EFF               	movlw	low _C
  5552  01217A  24F3               	addwf	243,w,c
  5553  01217C  6ED9               	movwf	fsr2l,c
  5554  01217E  0E06               	movlw	high _C
  5555  012180  20F4               	addwfc	prodh,w,c
  5556  012182  6EDA               	movwf	fsr2h,c
  5557  012184  006F FF7B FFE6     	movff	postinc2,postinc1
  5558  01218A  006F FF7B FFE6     	movff	postinc2,postinc1
  5559  012190  006F FF7B FFE6     	movff	postinc2,postinc1
  5560  012196  006F FF7B FFE6     	movff	postinc2,postinc1
  5561                           
  5562                           ;stkvar	_k @ sp[(-23)+11]
  5563  01219C  0EF4               	movlw	-12
  5564  01219E  50E3               	movf	plusw1,w,c
  5565  0121A0  6EE6               	movwf	postinc1,c
  5566  0121A2  EC66  F0DF         	call	_get_raw_result	;wreg free
  5567  0121A6  0060  F007  FFE6   	movff	btemp,postinc1
  5568  0121AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5569  0121B2  0E83               	movlw	low STR_21
  5570  0121B4  6EE6               	movwf	postinc1,c
  5571  0121B6  0EFF               	movlw	high STR_21
  5572  0121B8  6EE6               	movwf	postinc1,c
  5573  0121BA  0E00               	movlw	0
  5574  0121BC  6EE6               	movwf	postinc1,c
  5575  0121BE  0E02               	movlw	2
  5576  0121C0  6EE6               	movwf	postinc1,c
  5577  0121C2  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  5578  0121C6  0060  F007  FFE6   	movff	btemp,postinc1
  5579  0121CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5580  0121D2  0E0C               	movlw	12
  5581  0121D4  6EE6               	movwf	postinc1,c
  5582  0121D6  EC12  F0CF         	call	_sprintf	;wreg free
  5583                           
  5584                           ;main.c: 388:      break;
  5585  0121DA  D016               	goto	l13274
  5586  0121DC                     l13272:
  5587  0121DC  0100               	movlb	0	; () banked
  5588  0121DE  51F7               	movf	_H& (0+255),w,b
  5589  0121E0  6E0B               	movwf	(btemp+10)^0,c
  5590  0121E2  6A0C               	clrf	(btemp+11)^0,c
  5591                           
  5592                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5593                           ; Switch size 1, requested type "simple"
  5594                           ; Number of cases is 1, Range of values is 0 to 0
  5595                           ; switch strategies available:
  5596                           ; Name         Instructions Cycles
  5597                           ; simple_byte            4     3 (average)
  5598                           ;	Chosen strategy is simple_byte
  5599  0121E4  500C               	movf	(btemp+11)^0,w,c
  5600  0121E6  0A00               	xorlw	0	; case 0
  5601  0121E8  A4D8               	btfss	status,2,c
  5602  0121EA  D00E               	goto	l13274
  5603                           
  5604                           ; BSR set to: 0
  5605                           ; Switch size 1, requested type "simple"
  5606                           ; Number of cases is 4, Range of values is 0 to 3
  5607                           ; switch strategies available:
  5608                           ; Name         Instructions Cycles
  5609                           ; simple_byte           13     7 (average)
  5610                           ;	Chosen strategy is simple_byte
  5611  0121EC  500B               	movf	(btemp+10)^0,w,c
  5612  0121EE  0A00               	xorlw	0	; case 0
  5613  0121F0  B4D8               	btfsc	status,2,c
  5614  0121F2  D4DF               	goto	l1360
  5615  0121F4  0A01               	xorlw	1	; case 1
  5616  0121F6  B4D8               	btfsc	status,2,c
  5617  0121F8  EFD6  F08C         	goto	l1350
  5618  0121FC  0A03               	xorlw	3	; case 2
  5619  0121FE  B4D8               	btfsc	status,2,c
  5620  012200  D5ED               	goto	l1361
  5621  012202  0A01               	xorlw	1	; case 3
  5622  012204  B4D8               	btfsc	status,2,c
  5623  012206  D6FB               	goto	l13258
  5624  012208                     l13274:
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;main.c: 392:     clear_hid_pflags(&H);
  5628  012208  0EF7               	movlw	_H& (0+255)
  5629  01220A  6EE6               	movwf	postinc1,c
  5630  01220C  ECFA  F0DE         	call	_clear_hid_pflags	;wreg free
  5631                           
  5632                           ;main.c: 394:    StartTimer(TMR_DISPLAY, 250);
  5633  012210  0EFA               	movlw	250
  5634  012212  6EE6               	movwf	postinc1,c
  5635  012214  0E00               	movlw	0
  5636  012216  6EE6               	movwf	postinc1,c
  5637  012218  0E0A               	movlw	10
  5638  01221A  6EE6               	movwf	postinc1,c
  5639  01221C  ECA9  F0DB         	call	_StartTimer	;wreg free
  5640                           
  5641                           ;main.c: 395:    V.enter = check_enter_button(&H);
  5642  012220  0EF7               	movlw	_H& (0+255)
  5643  012222  6EE6               	movwf	postinc1,c
  5644  012224  ECC9  F0DB         	call	_check_enter_button	;wreg free
  5645  012228  5001               	movf	btemp^0,w,c
  5646  01222A  0101               	movlb	1	; () banked
  5647  01222C  6FDD               	movwf	(_V+173)& (0+255),b	;volatile
  5648                           
  5649                           ; BSR set to: 1
  5650                           ;main.c: 396:    if (V.enter && (H.hid_display != HID_AUX)) {
  5651  01222E  51DD               	movf	(_V+173)& (0+255),w,b	;volatile
  5652  012230  B4D8               	btfsc	status,2,c
  5653  012232  D013               	goto	l13288
  5654                           
  5655                           ; BSR set to: 1
  5656  012234  0E03               	movlw	3
  5657  012236  0100               	movlb	0	; () banked
  5658  012238  19F7               	xorwf	_H& (0+255),w,b
  5659  01223A  B4D8               	btfsc	status,2,c
  5660  01223C  D00E               	goto	l13288
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;main.c: 397:     V.enter = 0;
  5664  01223E  0101               	movlb	1	; () banked
  5665  012240  6BDD               	clrf	(_V+173)& (0+255),b	;volatile
  5666                           
  5667                           ; BSR set to: 1
  5668                           ;main.c: 398:     V.screen = ~V.screen;
  5669  012242  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5670  012244  D002               	goto	u12750
  5671  012246  0E01               	movlw	1
  5672  012248  D001               	goto	u12756
  5673  01224A                     u12750:
  5674  01224A  0E00               	movlw	0
  5675  01224C                     u12756:
  5676  01224C  0AFF               	xorlw	255
  5677  01224E  6E0C               	movwf	(btemp+11)^0,c
  5678  012250  51CC               	movf	(_V+156)& (0+255),w,b	;volatile
  5679  012252  180C               	xorwf	(btemp+11)^0,w,c
  5680  012254  0BFE               	andlw	-2
  5681  012256  180C               	xorwf	(btemp+11)^0,w,c
  5682  012258  6FCC               	movwf	(_V+156)& (0+255),b	;volatile
  5683  01225A                     l13288:
  5684                           
  5685                           ;main.c: 400:    set_vterm(V.screen);
  5686  01225A  0101               	movlb	1	; () banked
  5687  01225C  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5688  01225E  D002               	goto	u12760
  5689  012260  0E01               	movlw	1
  5690  012262  D001               	goto	u12766
  5691  012264                     u12760:
  5692  012264  0E00               	movlw	0
  5693  012266                     u12766:
  5694  012266  6EE6               	movwf	postinc1,c
  5695  012268  ECC6  F0DF         	call	_set_vterm	;wreg free
  5696                           
  5697                           ;main.c: 401:    update_lcd(V.screen);
  5698  01226C  0101               	movlb	1	; () banked
  5699  01226E  A1CC               	btfss	(_V+156)& (0+255),0,b	;volatile
  5700  012270  D002               	goto	u12770
  5701  012272  0E01               	movlw	1
  5702  012274  D001               	goto	u12776
  5703  012276                     u12770:
  5704  012276  0E00               	movlw	0
  5705  012278                     u12776:
  5706  012278  6EE6               	movwf	postinc1,c
  5707  01227A  EC8A  F0CE         	call	_update_lcd	;wreg free
  5708  01227E                     l13292:
  5709                           
  5710                           ;main.c: 407:   check_help(V.flipper);
  5711  01227E  0101               	movlb	1	; () banked
  5712  012280  51DB               	movf	(_V+171)& (0+255),w,b	;volatile
  5713  012282  6EE6               	movwf	postinc1,c
  5714  012284  EC20  F0C1         	call	_check_help	;wreg free
  5715                           
  5716                           ;main.c: 409:   if (V.enter) {
  5717  012288  0101               	movlb	1	; () banked
  5718  01228A  51DD               	movf	(_V+173)& (0+255),w,b	;volatile
  5719  01228C  B4D8               	btfsc	status,2,c
  5720  01228E  D062               	goto	l1366
  5721                           
  5722                           ; BSR set to: 1
  5723                           ;main.c: 410:    V.enter = 0;
  5724  012290  6BDD               	clrf	(_V+173)& (0+255),b	;volatile
  5725                           
  5726                           ;main.c: 411:    V.calib = 0;
  5727  012292  6BDC               	clrf	(_V+172)& (0+255),b	;volatile
  5728                           
  5729                           ; BSR set to: 1
  5730                           ;main.c: 412:    inp_index += 3;
  5731                           ;stkvar	_inp_index @ sp[(-17)+14]
  5732  012294  0EFD               	movlw	-3
  5733  012296  006F FF8C  F001    	movff	plusw1,btemp
  5734  01229C  0E03               	movlw	3
  5735  01229E  2601               	addwf	btemp^0,f,c
  5736  0122A0  0EFD               	movlw	-3
  5737  0122A2  0060  F007  FFE3   	movff	btemp,plusw1
  5738                           
  5739                           ;main.c: 413:    if (inp_index > 9)
  5740                           ;stkvar	_inp_index @ sp[(-17)+14]
  5741  0122A8  0EFD               	movlw	-3
  5742  0122AA  006F FF8C  F001    	movff	plusw1,btemp
  5743  0122B0  0E09               	movlw	9
  5744  0122B2  6401               	cpfsgt	btemp^0,c
  5745  0122B4  D03A               	goto	l13320
  5746                           
  5747                           ; BSR set to: 1
  5748                           ;main.c: 414:     inp_index = 0;
  5749                           ;stkvar	_inp_index @ sp[(-17)+14]
  5750  0122B6  0EFD               	movlw	-3
  5751  0122B8  6AE3               	clrf	plusw1,c
  5752  0122BA  D037               	goto	l13320
  5753  0122BC                     l13302:
  5754                           
  5755                           ; BSR set to: 1
  5756                           ;main.c: 417:     i = C_BATT;
  5757                           ;stkvar	_i @ sp[(-17)+13]
  5758  0122BC  0EFC               	movlw	-4
  5759  0122BE  6AE3               	clrf	plusw1,c
  5760                           
  5761                           ; BSR set to: 1
  5762                           ;main.c: 418:     j = C_PV;
  5763                           ;stkvar	_j @ sp[(-17)+12]
  5764  0122C0  0EFB               	movlw	-5
  5765  0122C2  6AE3               	clrf	plusw1,c
  5766  0122C4  2AE3               	incf	plusw1,f,c
  5767                           
  5768                           ; BSR set to: 1
  5769                           ;main.c: 419:     k = V_CC;
  5770                           ;stkvar	_k @ sp[(-17)+11]
  5771  0122C6  0EFA               	movlw	-6
  5772  0122C8  6AE3               	clrf	plusw1,c
  5773  0122CA  82E3               	bsf	plusw1,1,c
  5774                           
  5775                           ;main.c: 420:     break;
  5776  0122CC  D043               	goto	l1366
  5777  0122CE                     l13308:
  5778                           
  5779                           ; BSR set to: 1
  5780                           ;main.c: 422:     i = V_BAT;
  5781                           ;stkvar	_i @ sp[(-17)+13]
  5782  0122CE  0EFC               	movlw	-4
  5783  0122D0  6AE3               	clrf	plusw1,c
  5784  0122D2  84E3               	bsf	plusw1,2,c
  5785                           
  5786                           ;main.c: 423:     j = V_PV;
  5787                           ;stkvar	_j @ sp[(-17)+12]
  5788  0122D4  0EFB               	movlw	-5
  5789  0122D6  6AE3               	clrf	plusw1,c
  5790  0122D8  80E3               	bsf	plusw1,0,c
  5791  0122DA  84E3               	bsf	plusw1,2,c	;indir
  5792                           
  5793                           ;main.c: 424:     k = V_CBUS;
  5794                           ;stkvar	_k @ sp[(-17)+11]
  5795  0122DC  0EFA               	movlw	-6
  5796  0122DE  6AE3               	clrf	plusw1,c
  5797  0122E0  82E3               	bsf	plusw1,1,c
  5798  0122E2  84E3               	bsf	plusw1,2,c	;indir
  5799                           
  5800                           ;main.c: 425:     break;
  5801  0122E4  D037               	goto	l1366
  5802  0122E6                     l13310:
  5803                           
  5804                           ; BSR set to: 1
  5805                           ;main.c: 427:     i = V_BBAT;
  5806                           ;stkvar	_i @ sp[(-17)+13]
  5807  0122E6  0EFC               	movlw	-4
  5808  0122E8  6AE3               	clrf	plusw1,c
  5809  0122EA  82E3               	bsf	plusw1,1,c
  5810  0122EC  86E3               	bsf	plusw1,3,c	;indir
  5811                           
  5812                           ; BSR set to: 1
  5813                           ;main.c: 428:     j = V_TEMP;
  5814  0122EE  0E0B               	movlw	11
  5815  0122F0  6E0C               	movwf	(btemp+11)^0,c
  5816                           
  5817                           ;stkvar	_j @ sp[(-17)+12]
  5818  0122F2  0EFB               	movlw	-5
  5819  0122F4  0060  F033  FFE3   	movff	btemp+11,plusw1
  5820                           
  5821                           ; BSR set to: 1
  5822                           ;main.c: 429:     k = V_INVERTER;
  5823                           ;stkvar	_k @ sp[(-17)+11]
  5824  0122FA  0EFA               	movlw	-6
  5825  0122FC  6AE3               	clrf	plusw1,c
  5826  0122FE  84E3               	bsf	plusw1,2,c
  5827  012300  86E3               	bsf	plusw1,3,c	;indir
  5828                           
  5829                           ;main.c: 430:     break;
  5830  012302  D028               	goto	l1366
  5831  012304                     l13316:
  5832                           
  5833                           ; BSR set to: 1
  5834                           ;main.c: 432:     i = V_LIGHT_SENSOR;
  5835  012304  0E0D               	movlw	13
  5836  012306  6E0C               	movwf	(btemp+11)^0,c
  5837                           
  5838                           ;stkvar	_i @ sp[(-17)+13]
  5839  012308  0EFC               	movlw	-4
  5840  01230A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5841                           
  5842                           ;main.c: 433:     j = V_LIGHT_SENSOR;
  5843  012310  0E0D               	movlw	13
  5844  012312  6E0C               	movwf	(btemp+11)^0,c
  5845                           
  5846                           ;stkvar	_j @ sp[(-17)+12]
  5847  012314  0EFB               	movlw	-5
  5848  012316  0060  F033  FFE3   	movff	btemp+11,plusw1
  5849                           
  5850                           ;main.c: 434:     k = V_LIGHT_SENSOR;
  5851  01231C  0E0D               	movlw	13
  5852  01231E  6E0C               	movwf	(btemp+11)^0,c
  5853                           
  5854                           ;stkvar	_k @ sp[(-17)+11]
  5855  012320  0EFA               	movlw	-6
  5856  012322  0060  F033  FFE3   	movff	btemp+11,plusw1
  5857                           
  5858                           ;main.c: 435:     break;
  5859  012328  D015               	goto	l1366
  5860  01232A                     l13320:
  5861                           
  5862                           ; BSR set to: 1
  5863                           ;stkvar	_inp_index @ sp[(-17)+14]
  5864  01232A  0EFD               	movlw	-3
  5865  01232C  50E3               	movf	plusw1,w,c
  5866  01232E  6E0B               	movwf	(btemp+10)^0,c
  5867  012330  6A0C               	clrf	(btemp+11)^0,c
  5868                           
  5869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5870                           ; Switch size 1, requested type "simple"
  5871                           ; Number of cases is 1, Range of values is 0 to 0
  5872                           ; switch strategies available:
  5873                           ; Name         Instructions Cycles
  5874                           ; simple_byte            4     3 (average)
  5875                           ;	Chosen strategy is simple_byte
  5876  012332  500C               	movf	(btemp+11)^0,w,c
  5877  012334  0A00               	xorlw	0	; case 0
  5878  012336  A4D8               	btfss	status,2,c
  5879  012338  D00D               	goto	l1366
  5880                           
  5881                           ; BSR set to: 1
  5882                           ; Switch size 1, requested type "simple"
  5883                           ; Number of cases is 4, Range of values is 0 to 9
  5884                           ; switch strategies available:
  5885                           ; Name         Instructions Cycles
  5886                           ; simple_byte           13     7 (average)
  5887                           ;	Chosen strategy is simple_byte
  5888  01233A  500B               	movf	(btemp+10)^0,w,c
  5889  01233C  0A00               	xorlw	0	; case 0
  5890  01233E  B4D8               	btfsc	status,2,c
  5891  012340  D7BD               	goto	l13302
  5892  012342  0A03               	xorlw	3	; case 3
  5893  012344  B4D8               	btfsc	status,2,c
  5894  012346  D7C3               	goto	l13308
  5895  012348  0A05               	xorlw	5	; case 6
  5896  01234A  B4D8               	btfsc	status,2,c
  5897  01234C  D7CC               	goto	l13310
  5898  01234E  0A0F               	xorlw	15	; case 9
  5899  012350  B4D8               	btfsc	status,2,c
  5900  012352  D7D8               	goto	l13316
  5901  012354                     l1366:
  5902                           
  5903                           ; BSR set to: 1
  5904                           ;main.c: 444:   if (V.set_sequ) {
  5905  012354  A1CB               	btfss	(_V+155)& (0+255),0,b	;volatile
  5906  012356  EF8A  F08C         	goto	l13202
  5907                           
  5908                           ; BSR set to: 1
  5909                           ;main.c: 445:    if (TimerDone(TMR_INFO)) {
  5910  01235A  0E07               	movlw	7
  5911  01235C  6EE6               	movwf	postinc1,c
  5912  01235E  ECCF  F0DD         	call	_TimerDone	;wreg free
  5913  012362  5001               	movf	btemp^0,w,c
  5914  012364  B4D8               	btfsc	status,2,c
  5915  012366  D00C               	goto	l13330
  5916                           
  5917                           ;main.c: 446:     V.set_sequ = 0;
  5918  012368  0101               	movlb	1	; () banked
  5919  01236A  91CB               	bcf	(_V+155)& (0+255),0,b	;volatile
  5920                           
  5921                           ; BSR set to: 1
  5922                           ;main.c: 447:     set_vterm(0);
  5923  01236C  0E00               	movlw	0
  5924  01236E  6EE6               	movwf	postinc1,c
  5925  012370  ECC6  F0DF         	call	_set_vterm	;wreg free
  5926                           
  5927                           ;main.c: 448:     update_lcd(0);
  5928  012374  0E00               	movlw	0
  5929  012376  6EE6               	movwf	postinc1,c
  5930  012378  EC8A  F0CE         	call	_update_lcd	;wreg free
  5931                           
  5932                           ;main.c: 449:    } else {
  5933  01237C  EF8A  F08C         	goto	l13202
  5934  012380                     l13330:
  5935                           
  5936                           ;main.c: 450:     set_vterm(2);
  5937  012380  0E02               	movlw	2
  5938  012382  6EE6               	movwf	postinc1,c
  5939  012384  ECC6  F0DF         	call	_set_vterm	;wreg free
  5940                           
  5941                           ;main.c: 451:     update_lcd(2);
  5942  012388  0E02               	movlw	2
  5943  01238A  6EE6               	movwf	postinc1,c
  5944  01238C  EC8A  F0CE         	call	_update_lcd	;wreg free
  5945  012390  EF8A  F08C         	goto	l13202
  5946  012394                     __end_of_main:
  5947                           	opt callstack 0
  5948                           
  5949 ;; *************** function _static_soc *****************
  5950 ;; Defined at:
  5951 ;;		line 117 in file "mbmc.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;		None
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;		None
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  1  [STACK] void 
  5958 ;; Registers used:
  5959 ;;		wreg, fsr2l, fsr2h
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/1
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5969 ;;Total ram usage:        0 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; Hardware stack levels required when called:   15
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_main
  5976 ;; This function uses a reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text1
  5980  01B20C                     __ptext1:
  5981                           	opt callstack 0
  5982  01B20C                     _static_soc:
  5983                           	opt callstack 15
  5984                           
  5985                           ;mbmc.c: 119:  C.runtime = 120;
  5986                           
  5987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5988                           ;incstack = 0
  5989  01B20C  0E78               	movlw	120
  5990  01B20E  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  5991  01B214  0E00               	movlw	0
  5992  01B216  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  5993                           
  5994                           ;mbmc.c: 120:  C.soc = 100;
  5995  01B21C  0E64               	movlw	100
  5996  01B21E  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  5997  01B224  0E00               	movlw	0
  5998  01B226  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  5999                           
  6000                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6001  01B22C  EE21  F38B         	lfsr	2,_C+140	;volatile
  6002  01B230  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6003  01B236  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6004  01B23C  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6005  01B242  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6006                           
  6007                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6008  01B248  EE21  F38F         	lfsr	2,_C+144	;volatile
  6009  01B24C  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6010  01B252  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6011  01B258  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6012  01B25E  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6013                           
  6014                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6015  01B264  0012               	return		;funcret
  6016  01B266                     __end_of_static_soc:
  6017                           	opt callstack 0
  6018                           
  6019 ;; *************** function _start_switch_handler *****************
  6020 ;; Defined at:
  6021 ;;		line 124 in file "dio.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;		None
  6024 ;; Auto vars:     Size  Location     Type
  6025 ;;		None
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  1  [STACK] void 
  6028 ;; Registers used:
  6029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 3F/39
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6039 ;;Total ram usage:        0 bytes
  6040 ;; Hardware stack levels used:    1
  6041 ;; Hardware stack levels required when called:   16
  6042 ;; This function calls:
  6043 ;;		_INT1_SetInterruptHandler
  6044 ;; This function is called by:
  6045 ;;		_main
  6046 ;; This function uses a reentrant model
  6047 ;;
  6048                           
  6049                           	psect	text2
  6050  01BF10                     __ptext2:
  6051                           	opt callstack 0
  6052  01BF10                     _start_switch_handler:
  6053                           	opt callstack 14
  6054                           
  6055                           ;dio.c: 126:  (PIE5bits.INT1IE = 0);
  6056                           
  6057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6058                           ;incstack = 0
  6059  01BF10  0139               	movlb	57	; () banked
  6060  01BF12  9195               	bcf	149,0,b	;volatile
  6061                           
  6062                           ; BSR set to: 57
  6063                           ;dio.c: 127:  INT1_SetInterruptHandler(switch_handler);
  6064  01BF14  0ED4               	movlw	low _switch_handler
  6065  01BF16  6EE6               	movwf	postinc1,c
  6066  01BF18  0E93               	movlw	high _switch_handler
  6067  01BF1A  6EE6               	movwf	postinc1,c
  6068  01BF1C  0E01               	movlw	low (_switch_handler shr (0+16))
  6069  01BF1E  6EE6               	movwf	postinc1,c
  6070  01BF20  EC5B  F0DE         	call	_INT1_SetInterruptHandler	;wreg free
  6071                           
  6072                           ;dio.c: 128:  S.button[SNULL].sw = SW_INVALID;
  6073  01BF24  0E02               	movlw	2
  6074  01BF26  0102               	movlb	2	; () banked
  6075  01BF28  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6076                           
  6077                           ; BSR set to: 2
  6078                           ;dio.c: 129:  (PIE5bits.INT1IE = 1);
  6079  01BF2A  0139               	movlb	57	; () banked
  6080  01BF2C  8195               	bsf	149,0,b	;volatile
  6081                           
  6082                           ; BSR set to: 57
  6083                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6084  01BF2E  0012               	return		;funcret
  6085  01BF30                     __end_of_start_switch_handler:
  6086                           	opt callstack 0
  6087                           
  6088 ;; *************** function _srand *****************
  6089 ;; Defined at:
  6090 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;  s               2  [STACK] unsigned int 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;		None
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  1  [STACK] void 
  6097 ;; Registers used:
  6098 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 3F/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6108 ;;Total ram usage:        0 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; Hardware stack levels required when called:   15
  6111 ;; This function calls:
  6112 ;;		Nothing
  6113 ;; This function is called by:
  6114 ;;		_main
  6115 ;; This function uses a reentrant model
  6116 ;;
  6117                           
  6118                           	psect	text3
  6119  01B972                     __ptext3:
  6120                           	opt callstack 0
  6121  01B972                     _srand:
  6122                           	opt callstack 15
  6123                           
  6124                           ;stkvar	_s @ sp[(0)+-2]
  6125                           
  6126                           ; BSR set to: 57
  6127                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6128                           ;incstack = 0
  6129  01B972  0EFE               	movlw	-2
  6130  01B974  50E3               	movf	plusw1,w,c
  6131  01B976  0FFF               	addlw	255
  6132  01B978  6E0B               	movwf	(btemp+10)^0,c
  6133  01B97A  0EFF               	movlw	-1
  6134  01B97C  006F FF8C  F00C    	movff	plusw1,btemp+11
  6135  01B982  0EFF               	movlw	255
  6136  01B984  220C               	addwfc	(btemp+11)^0,f,c
  6137  01B986  0060  F02C  F0CF   	movff	btemp+10,_seed
  6138  01B98C  0060  F030  F0D0   	movff	btemp+11,_seed+1
  6139  01B992  0100               	movlb	0	; () banked
  6140  01B994  6BD1               	clrf	(_seed+2)& (0+255),b
  6141  01B996  6BD2               	clrf	(_seed+3)& (0+255),b
  6142  01B998  6BD3               	clrf	(_seed+4)& (0+255),b
  6143  01B99A  6BD4               	clrf	(_seed+5)& (0+255),b
  6144  01B99C  6BD5               	clrf	(_seed+6)& (0+255),b
  6145  01B99E  6BD6               	clrf	(_seed+7)& (0+255),b
  6146                           
  6147                           ; BSR set to: 0
  6148                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6149  01B9A0  52E5               	movf	postdec1,f,c
  6150  01B9A2  52E5               	movf	postdec1,f,c
  6151  01B9A4  0012               	return		;funcret
  6152  01B9A6                     __end_of_srand:
  6153                           	opt callstack 0
  6154                           
  6155 ;; *************** function _spinners *****************
  6156 ;; Defined at:
  6157 ;;		line 146 in file "mbmc.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;  shape           1  [STACK] unsigned char 
  6160 ;;  reset           1  [STACK] unsigned char 
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;  c               1  [STACK] unsigned char 
  6163 ;; Return value:  Size  Location     Type
  6164 ;;                  1  [STACK] unsigned char 
  6165 ;; Registers used:
  6166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  6167 ;; Tracked objects:
  6168 ;;		On entry : 0/0
  6169 ;;		On exit  : 0/0
  6170 ;;		Unchanged: 0/0
  6171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6176 ;;Total ram usage:        0 bytes
  6177 ;; Hardware stack levels used:    1
  6178 ;; Hardware stack levels required when called:   16
  6179 ;; This function calls:
  6180 ;;		_strlen
  6181 ;; This function is called by:
  6182 ;;		_main
  6183 ;; This function uses a reentrant model
  6184 ;;
  6185                           
  6186                           	psect	text4
  6187  01A120                     __ptext4:
  6188                           	opt callstack 0
  6189  01A120                     _spinners:
  6190                           	opt callstack 0
  6191                           
  6192                           ; BSR set to: 0
  6193                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6194  01A120  52E6               	movf	postinc1,f,c
  6195                           
  6196                           ;mbmc.c: 146: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 147: {;mbmc.c: 148:  s
      +                          tatic uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
  6197                           ;stkvar	_shape @ sp[(-1)+-1]
  6198                           
  6199                           ;incstack = 0
  6200  01A122  0EFE               	movlw	-2
  6201  01A124  006F FF8C  F001    	movff	plusw1,btemp
  6202  01A12A  0E05               	movlw	5
  6203  01A12C  6401               	cpfsgt	btemp^0,c
  6204  01A12E  D002               	goto	l1881
  6205                           
  6206                           ;mbmc.c: 152:   shape = 0;
  6207                           ;stkvar	_shape @ sp[(-1)+-1]
  6208  01A130  0EFE               	movlw	-2
  6209  01A132  6AE3               	clrf	plusw1,c
  6210  01A134                     l1881:
  6211                           
  6212                           ;mbmc.c: 153:  if (reset)
  6213                           ;stkvar	_reset @ sp[(-1)+-2]
  6214  01A134  0EFD               	movlw	-3
  6215  01A136  50E3               	movf	plusw1,w,c
  6216  01A138  B4D8               	btfsc	status,2,c
  6217  01A13A  D00A               	goto	l10914
  6218                           
  6219                           ;mbmc.c: 154:   s[shape] = 0;
  6220                           ;stkvar	_shape @ sp[(-1)+-1]
  6221  01A13C  0EFE               	movlw	-2
  6222  01A13E  006F FF8C  F00C    	movff	plusw1,btemp+11
  6223  01A144  500C               	movf	(btemp+11)^0,w,c
  6224  01A146  0F74               	addlw	low spinners@s
  6225  01A148  6ED9               	movwf	fsr2l,c
  6226  01A14A  6ADA               	clrf	fsr2h,c
  6227  01A14C  0E00               	movlw	0
  6228  01A14E  6EDF               	movwf	indf2,c
  6229  01A150                     l10914:
  6230                           
  6231                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
  6232                           ;stkvar	_shape @ sp[(-1)+-1]
  6233  01A150  0EFE               	movlw	-2
  6234  01A152  50E3               	movf	plusw1,w,c
  6235  01A154  0D14               	mullw	20
  6236  01A156  0E95               	movlw	low _spin
  6237  01A158  6E0B               	movwf	(btemp+10)^0,c
  6238  01A15A  0EFB               	movlw	high _spin
  6239  01A15C  6E0C               	movwf	(btemp+11)^0,c
  6240  01A15E  50F3               	movf	243,w,c
  6241  01A160  260B               	addwf	(btemp+10)^0,f,c
  6242  01A162  50F4               	movf	244,w,c
  6243  01A164  220C               	addwfc	(btemp+11)^0,f,c
  6244                           
  6245                           ;stkvar	_shape @ sp[(-1)+-1]
  6246  01A166  0EFE               	movlw	-2
  6247  01A168  006F FF8C  F00A    	movff	plusw1,btemp+9
  6248  01A16E  500A               	movf	(btemp+9)^0,w,c
  6249  01A170  0F74               	addlw	low spinners@s
  6250  01A172  6ED9               	movwf	fsr2l,c
  6251  01A174  6ADA               	clrf	fsr2h,c
  6252  01A176  50DF               	movf	indf2,w,c
  6253  01A178  260B               	addwf	(btemp+10)^0,f,c
  6254  01A17A  0E00               	movlw	0
  6255  01A17C  220C               	addwfc	(btemp+11)^0,f,c
  6256  01A17E  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  6257  01A184  0060  F033  FFF7   	movff	btemp+11,tblptrh
  6258  01A18A                     	if	0	;tblptru may be non-zero
  6259  01A18A                     	endif
  6260  01A18A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6261  01A18A  0E00               	movlw	low (__mediumconst shr (0+16))
  6262  01A18C  6EF8               	movwf	tblptru,c
  6263  01A18E                     	endif
  6264                           
  6265                           ;stkvar	_c @ sp[(-1)+0]
  6266  01A18E  0008               	tblrd		*
  6267  01A190  0EFF               	movlw	-1
  6268  01A192  006F FFD7 FFE3     	movff	tablat,plusw1
  6269                           
  6270                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
  6271                           ;stkvar	_shape @ sp[(-1)+-1]
  6272  01A198  0EFE               	movlw	-2
  6273  01A19A  50E3               	movf	plusw1,w,c
  6274  01A19C  0D14               	mullw	20
  6275  01A19E  0E95               	movlw	low _spin
  6276  01A1A0  6E0B               	movwf	(btemp+10)^0,c
  6277  01A1A2  0EFB               	movlw	high _spin
  6278  01A1A4  6E0C               	movwf	(btemp+11)^0,c
  6279  01A1A6  50F3               	movf	243,w,c
  6280  01A1A8  260B               	addwf	(btemp+10)^0,f,c
  6281  01A1AA  50F4               	movf	244,w,c
  6282  01A1AC  220C               	addwfc	(btemp+11)^0,f,c
  6283  01A1AE  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6284  01A1B4  0060  F033  FFE6   	movff	btemp+11,postinc1
  6285  01A1BA  ECB3  F0D4         	call	_strlen	;wreg free
  6286                           
  6287                           ;stkvar	_shape @ sp[(-1)+-1]
  6288  01A1BE  0EFE               	movlw	-2
  6289  01A1C0  006F FF8C  F00C    	movff	plusw1,btemp+11
  6290  01A1C6  500C               	movf	(btemp+11)^0,w,c
  6291  01A1C8  0F74               	addlw	low spinners@s
  6292  01A1CA  6ED9               	movwf	fsr2l,c
  6293  01A1CC  6ADA               	clrf	fsr2h,c
  6294  01A1CE  2ADF               	incf	indf2,f,c
  6295  01A1D0  50DF               	movf	indf2,w,c
  6296  01A1D2  6E0B               	movwf	(btemp+10)^0,c
  6297  01A1D4  6A0C               	clrf	(btemp+11)^0,c
  6298  01A1D6  5001               	movf	btemp^0,w,c
  6299  01A1D8  5C0B               	subwf	(btemp+10)^0,w,c
  6300  01A1DA  5002               	movf	(btemp+1)^0,w,c
  6301  01A1DC  580C               	subwfb	(btemp+11)^0,w,c
  6302  01A1DE  A0D8               	btfss	status,0,c
  6303  01A1E0  D00A               	goto	l10920
  6304                           
  6305                           ;mbmc.c: 157:   s[shape] = 0;
  6306                           ;stkvar	_shape @ sp[(-1)+-1]
  6307  01A1E2  0EFE               	movlw	-2
  6308  01A1E4  006F FF8C  F00C    	movff	plusw1,btemp+11
  6309  01A1EA  500C               	movf	(btemp+11)^0,w,c
  6310  01A1EC  0F74               	addlw	low spinners@s
  6311  01A1EE  6ED9               	movwf	fsr2l,c
  6312  01A1F0  6ADA               	clrf	fsr2h,c
  6313  01A1F2  0E00               	movlw	0
  6314  01A1F4  6EDF               	movwf	indf2,c
  6315  01A1F6                     l10920:
  6316                           
  6317                           ;mbmc.c: 158:  return c;
  6318                           ;stkvar	_c @ sp[(-1)+0]
  6319  01A1F6  0EFF               	movlw	-1
  6320  01A1F8  006F FF8C  F001    	movff	plusw1,btemp
  6321                           
  6322                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6323  01A1FE  52E5               	movf	postdec1,f,c
  6324  01A200  52E5               	movf	postdec1,f,c
  6325  01A202  52E5               	movf	postdec1,f,c
  6326  01A204  0012               	return		;funcret
  6327  01A206                     __end_of_spinners:
  6328                           	opt callstack 0
  6329                           
  6330 ;; *************** function _init_port_dma *****************
  6331 ;; Defined at:
  6332 ;;		line 110 in file "eadog.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;		None
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;		None
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  1  [STACK] void 
  6339 ;; Registers used:
  6340 ;;		wreg, status,2
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/1
  6343 ;;		On exit  : 3F/3B
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6350 ;;Total ram usage:        0 bytes
  6351 ;; Hardware stack levels used:    1
  6352 ;; Hardware stack levels required when called:   15
  6353 ;; This function calls:
  6354 ;;		Nothing
  6355 ;; This function is called by:
  6356 ;;		_main
  6357 ;; This function uses a reentrant model
  6358 ;;
  6359                           
  6360                           	psect	text5
  6361  01B9DA                     __ptext5:
  6362                           	opt callstack 0
  6363  01B9DA                     _init_port_dma:
  6364                           	opt callstack 15
  6365                           
  6366                           ;eadog.c: 112:  DMA2CON1bits.DMODE = 0;
  6367                           
  6368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6369                           ;incstack = 0
  6370  01B9DA  0E3F               	movlw	-193
  6371  01B9DC  013B               	movlb	59	; () banked
  6372  01B9DE  17DD               	andwf	221,f,b	;volatile
  6373                           
  6374                           ; BSR set to: 59
  6375                           ;eadog.c: 113:  DMA2CON1bits.DSTP = 0;
  6376  01B9E0  9BDD               	bcf	221,5,b	;volatile
  6377                           
  6378                           ;eadog.c: 114:  DMA2CON1bits.SMODE = 1;
  6379  01B9E2  51DD               	movf	221,w,b	;volatile
  6380  01B9E4  0BF9               	andlw	-7
  6381  01B9E6  0902               	iorlw	2
  6382  01B9E8  6FDD               	movwf	221,b	;volatile
  6383                           
  6384                           ;eadog.c: 115:  DMA2CON1bits.SMR = 0;
  6385  01B9EA  0EE7               	movlw	-25
  6386  01B9EC  17DD               	andwf	221,f,b	;volatile
  6387                           
  6388                           ; BSR set to: 59
  6389                           ;eadog.c: 116:  DMA2CON1bits.SSTP = 1;
  6390  01B9EE  81DD               	bsf	221,0,b	;volatile
  6391                           
  6392                           ; BSR set to: 59
  6393                           ;eadog.c: 117:  DMA2CON0bits.SIRQEN = 0;
  6394  01B9F0  9DDC               	bcf	220,6,b	;volatile
  6395                           
  6396                           ;eadog.c: 118:  DMA2DSA = 0x3DEA;
  6397  01B9F2  0E3D               	movlw	61
  6398  01B9F4  6FD1               	movwf	209,b	;volatile
  6399  01B9F6  0EEA               	movlw	234
  6400  01B9F8  6FD0               	movwf	208,b	;volatile
  6401                           
  6402                           ;eadog.c: 119:  DMA2SSA = (uint32_t) port_data;
  6403  01B9FA  0EFF               	movlw	low _port_data
  6404  01B9FC  6FD9               	movwf	217,b	;volatile
  6405  01B9FE  0E04               	movlw	high _port_data
  6406  01BA00  6FDA               	movwf	218,b	;volatile
  6407  01BA02  0E00               	movlw	low (_port_data shr (0+16))
  6408  01BA04  6FDB               	movwf	219,b	;volatile
  6409                           
  6410                           ; BSR set to: 59
  6411                           ;eadog.c: 120:  DMA2CON0bits.DGO = 0;
  6412  01BA06  9BDC               	bcf	220,5,b	;volatile
  6413                           
  6414                           ; BSR set to: 59
  6415                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6416  01BA08  0012               	return		;funcret
  6417  01BA0A                     __end_of_init_port_dma:
  6418                           	opt callstack 0
  6419                           
  6420 ;; *************** function _init_display *****************
  6421 ;; Defined at:
  6422 ;;		line 38 in file "eadog.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;		None
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  z               1  [STACK] unsigned char 
  6427 ;; Return value:  Size  Location     Type
  6428 ;;                  1  [STACK] void 
  6429 ;; Registers used:
  6430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6431 ;; Tracked objects:
  6432 ;;		On entry : 3F/3B
  6433 ;;		On exit  : 3F/3D
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6440 ;;Total ram usage:        0 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; Hardware stack levels required when called:   17
  6443 ;; This function calls:
  6444 ;;		_ringBufS_init
  6445 ;;		_send_lcd_cmd
  6446 ;;		_send_lcd_cmd_long
  6447 ;;		_send_lcd_data
  6448 ;;		_wdtdelay
  6449 ;; This function is called by:
  6450 ;;		_main
  6451 ;; This function uses a reentrant model
  6452 ;;
  6453                           
  6454                           	psect	text6
  6455  0198AC                     __ptext6:
  6456                           	opt callstack 0
  6457  0198AC                     _init_display:
  6458                           	opt callstack 0
  6459                           
  6460                           ; BSR set to: 59
  6461                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6462  0198AC  52E6               	movf	postinc1,f,c
  6463                           
  6464                           ;eadog.c: 40:  uint8_t z = 1;
  6465                           ;stkvar	_z @ sp[(-1)+0]
  6466                           
  6467                           ;incstack = 0
  6468  0198AE  0EFF               	movlw	-1
  6469  0198B0  6AE3               	clrf	plusw1,c
  6470  0198B2  2AE3               	incf	plusw1,f,c
  6471                           
  6472                           ;eadog.c: 41:  spi_link.tx1a = &ring_buf1;
  6473  0198B4  0E83               	movlw	low _ring_buf1
  6474  0198B6  0100               	movlb	0	; () banked
  6475  0198B8  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6476  0198BA  0E03               	movlw	high _ring_buf1
  6477  0198BC  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;eadog.c: 42:  spi_link.tx1b = &ring_buf2;
  6481  0198BE  0E40               	movlw	low _ring_buf2
  6482  0198C0  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6483  0198C2  0E03               	movlw	high _ring_buf2
  6484  0198C4  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6485                           
  6486                           ; BSR set to: 0
  6487                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1a);
  6488  0198C6  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6489  0198CC  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6490  0198D2  ECBB  F0DD         	call	_ringBufS_init	;wreg free
  6491                           
  6492                           ;eadog.c: 44:  ringBufS_init(spi_link.tx1b);
  6493  0198D6  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6494  0198DC  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6495  0198E2  ECBB  F0DD         	call	_ringBufS_init	;wreg free
  6496                           
  6497                           ;eadog.c: 46:  LATEbits.LATE2 = 1;
  6498  0198E6  84BE               	bsf	190,2,c	;volatile
  6499                           
  6500                           ;eadog.c: 48:  SPI1CON0bits.EN = 0;
  6501  0198E8  013D               	movlb	61	; () banked
  6502  0198EA  9F14               	bcf	20,7,b	;volatile
  6503                           
  6504                           ; BSR set to: 61
  6505                           ;eadog.c: 50:  SPI1CON1 = 0x20;
  6506  0198EC  0E20               	movlw	32
  6507  0198EE  6F15               	movwf	21,b	;volatile
  6508                           
  6509                           ; BSR set to: 61
  6510                           ;eadog.c: 52:  SPI1CON2 = 0x03;
  6511  0198F0  0E03               	movlw	3
  6512  0198F2  6F16               	movwf	22,b	;volatile
  6513                           
  6514                           ; BSR set to: 61
  6515                           ;eadog.c: 54:  SPI1BAUD = 0x04;
  6516  0198F4  0E04               	movlw	4
  6517  0198F6  6F19               	movwf	25,b	;volatile
  6518                           
  6519                           ; BSR set to: 61
  6520                           ;eadog.c: 56:  SPI1CLK = 0x02;
  6521  0198F8  0E02               	movlw	2
  6522  0198FA  6F1C               	movwf	28,b	;volatile
  6523                           
  6524                           ; BSR set to: 61
  6525                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  6526  0198FC  0E83               	movlw	131
  6527  0198FE  6F14               	movwf	20,b	;volatile
  6528                           
  6529                           ; BSR set to: 61
  6530                           ;eadog.c: 59:  SPI1CON0bits.EN = 1;
  6531  019900  8F14               	bsf	20,7,b	;volatile
  6532                           
  6533                           ; BSR set to: 61
  6534                           ;eadog.c: 61:  wdtdelay(350000);
  6535  019902  0E30               	movlw	48
  6536  019904  6EE6               	movwf	postinc1,c
  6537  019906  0E57               	movlw	87
  6538  019908  6EE6               	movwf	postinc1,c
  6539  01990A  0E05               	movlw	5
  6540  01990C  6EE6               	movwf	postinc1,c
  6541  01990E  0E00               	movlw	0
  6542  019910  6EE6               	movwf	postinc1,c
  6543  019912  EC33  F0D9         	call	_wdtdelay	;wreg free
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;eadog.c: 62:  send_lcd_cmd_long(0x46);
  6547  019916  0E46               	movlw	70
  6548  019918  6EE6               	movwf	postinc1,c
  6549  01991A  EC69  F0DB         	call	_send_lcd_cmd_long	;wreg free
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;eadog.c: 63:  send_lcd_cmd(0x41);
  6553  01991E  0E41               	movlw	65
  6554  019920  6EE6               	movwf	postinc1,c
  6555  019922  EC89  F0DB         	call	_send_lcd_cmd	;wreg free
  6556                           
  6557                           ; BSR set to: 0
  6558                           ;eadog.c: 64:  wdtdelay(80);
  6559  019926  0E50               	movlw	80
  6560  019928  6EE6               	movwf	postinc1,c
  6561  01992A  0E00               	movlw	0
  6562  01992C  6EE6               	movwf	postinc1,c
  6563  01992E  0E00               	movlw	0
  6564  019930  6EE6               	movwf	postinc1,c
  6565  019932  0E00               	movlw	0
  6566  019934  6EE6               	movwf	postinc1,c
  6567  019936  EC33  F0D9         	call	_wdtdelay	;wreg free
  6568                           
  6569                           ; BSR set to: 0
  6570                           ;eadog.c: 65:  send_lcd_cmd(0x53);
  6571  01993A  0E53               	movlw	83
  6572  01993C  6EE6               	movwf	postinc1,c
  6573  01993E  EC89  F0DB         	call	_send_lcd_cmd	;wreg free
  6574                           
  6575                           ; BSR set to: 0
  6576                           ;eadog.c: 66:  send_lcd_data(8);
  6577  019942  0E08               	movlw	8
  6578  019944  6EE6               	movwf	postinc1,c
  6579  019946  ECE8  F0DE         	call	_send_lcd_data	;wreg free
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;eadog.c: 67:  wdtdelay(80);
  6583  01994A  0E50               	movlw	80
  6584  01994C  6EE6               	movwf	postinc1,c
  6585  01994E  0E00               	movlw	0
  6586  019950  6EE6               	movwf	postinc1,c
  6587  019952  0E00               	movlw	0
  6588  019954  6EE6               	movwf	postinc1,c
  6589  019956  0E00               	movlw	0
  6590  019958  6EE6               	movwf	postinc1,c
  6591  01995A  EC33  F0D9         	call	_wdtdelay	;wreg free
  6592  01995E                     l12950:
  6593                           
  6594                           ; BSR set to: 0
  6595                           ;eadog.c: 69:   send_lcd_data('0' + (z & 0x07));
  6596                           ;stkvar	_z @ sp[(-1)+0]
  6597  01995E  0EFF               	movlw	-1
  6598  019960  50E3               	movf	plusw1,w,c
  6599  019962  0B07               	andlw	7
  6600  019964  0F30               	addlw	48
  6601  019966  6EE6               	movwf	postinc1,c
  6602  019968  ECE8  F0DE         	call	_send_lcd_data	;wreg free
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;eadog.c: 70:  } while (z++);
  6606                           ;stkvar	_z @ sp[(-1)+0]
  6607  01996C  0EFF               	movlw	-1
  6608  01996E  2AE3               	incf	plusw1,f,c
  6609  019970  0EFF               	movlw	-1
  6610  019972  04E3               	decf	plusw1,w,c
  6611  019974  A4D8               	btfss	status,2,c
  6612  019976  D7F3               	goto	l12950
  6613                           
  6614                           ; BSR set to: 0
  6615                           ;eadog.c: 71:  wdtdelay(250000);
  6616  019978  0E90               	movlw	144
  6617  01997A  6EE6               	movwf	postinc1,c
  6618  01997C  0ED0               	movlw	208
  6619  01997E  6EE6               	movwf	postinc1,c
  6620  019980  0E03               	movlw	3
  6621  019982  6EE6               	movwf	postinc1,c
  6622  019984  0E00               	movlw	0
  6623  019986  6EE6               	movwf	postinc1,c
  6624  019988  EC33  F0D9         	call	_wdtdelay	;wreg free
  6625                           
  6626                           ;eadog.c: 73:  send_lcd_cmd_long(0x51);
  6627  01998C  0E51               	movlw	81
  6628  01998E  6EE6               	movwf	postinc1,c
  6629  019990  EC69  F0DB         	call	_send_lcd_cmd_long	;wreg free
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;eadog.c: 74:  SPI1CON0bits.EN = 0;
  6633  019994  013D               	movlb	61	; () banked
  6634  019996  9F14               	bcf	20,7,b	;volatile
  6635                           
  6636                           ; BSR set to: 61
  6637                           ;eadog.c: 75:  SPI1CON2 = 0x02;
  6638  019998  0E02               	movlw	2
  6639  01999A  6F16               	movwf	22,b	;volatile
  6640                           
  6641                           ; BSR set to: 61
  6642                           ;eadog.c: 76:  SPI1CON0bits.EN = 1;
  6643  01999C  8F14               	bsf	20,7,b	;volatile
  6644                           
  6645                           ; BSR set to: 61
  6646                           ;eadog.c: 95:  SPI1INTFbits.SPI1TXUIF = 0;
  6647  01999E  931A               	bcf	26,1,b	;volatile
  6648                           
  6649                           ; BSR set to: 61
  6650                           ;eadog.c: 96:  DMA1CON1bits.DMODE = 0;
  6651  0199A0  0E3F               	movlw	-193
  6652  0199A2  013B               	movlb	59	; () banked
  6653  0199A4  17FD               	andwf	253,f,b	;volatile
  6654                           
  6655                           ; BSR set to: 59
  6656                           ;eadog.c: 97:  DMA1CON1bits.DSTP = 0;
  6657  0199A6  9BFD               	bcf	253,5,b	;volatile
  6658                           
  6659                           ; BSR set to: 59
  6660                           ;eadog.c: 98:  DMA1CON1bits.SMODE = 1;
  6661  0199A8  51FD               	movf	253,w,b	;volatile
  6662  0199AA  0BF9               	andlw	-7
  6663  0199AC  0902               	iorlw	2
  6664  0199AE  6FFD               	movwf	253,b	;volatile
  6665                           
  6666                           ; BSR set to: 59
  6667                           ;eadog.c: 99:  DMA1CON1bits.SMR = 0;
  6668  0199B0  0EE7               	movlw	-25
  6669  0199B2  17FD               	andwf	253,f,b	;volatile
  6670                           
  6671                           ; BSR set to: 59
  6672                           ;eadog.c: 100:  DMA1CON1bits.SSTP = 1;
  6673  0199B4  81FD               	bsf	253,0,b	;volatile
  6674                           
  6675                           ; BSR set to: 59
  6676                           ;eadog.c: 101:  DMA1SSA = (uint32_t) & ring_buf1;
  6677  0199B6  0E83               	movlw	low _ring_buf1
  6678  0199B8  6FF9               	movwf	249,b	;volatile
  6679  0199BA  0E03               	movlw	high _ring_buf1
  6680  0199BC  6FFA               	movwf	250,b	;volatile
  6681  0199BE  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6682  0199C0  6FFB               	movwf	251,b	;volatile
  6683                           
  6684                           ; BSR set to: 59
  6685                           ;eadog.c: 102:  DMA1CON0bits.DGO = 0;
  6686  0199C2  9BFC               	bcf	252,5,b	;volatile
  6687                           
  6688                           ; BSR set to: 59
  6689                           ;eadog.c: 103:  SPI1INTFbits.SPI1TXUIF = 1;
  6690  0199C4  013D               	movlb	61	; () banked
  6691  0199C6  831A               	bsf	26,1,b	;volatile
  6692                           
  6693                           ; BSR set to: 61
  6694                           ;eadog.c: 104:  LATEbits.LATE2 = 0;
  6695  0199C8  94BE               	bcf	190,2,c	;volatile
  6696                           
  6697                           ; BSR set to: 61
  6698                           ; _init_display: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6699  0199CA  52E5               	movf	postdec1,f,c
  6700  0199CC  0012               	return		;funcret
  6701  0199CE                     __end_of_init_display:
  6702                           	opt callstack 0
  6703                           
  6704 ;; *************** function _send_lcd_data *****************
  6705 ;; Defined at:
  6706 ;;		line 129 in file "eadog.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  data            1  [STACK] const unsigned char 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;		None
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  1  [STACK] void 
  6713 ;; Registers used:
  6714 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 3F/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6724 ;;Total ram usage:        0 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; Hardware stack levels required when called:   16
  6727 ;; This function calls:
  6728 ;;		_SPI1_Exchange8bit
  6729 ;;		_wdtdelay
  6730 ;; This function is called by:
  6731 ;;		_init_display
  6732 ;; This function uses a reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text7
  6736  01BDD0                     __ptext7:
  6737                           	opt callstack 0
  6738  01BDD0                     _send_lcd_data:
  6739                           	opt callstack 13
  6740                           
  6741                           ; BSR set to: 61
  6742                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6743                           ;incstack = 0
  6744                           ;eadog.c: 129: static void send_lcd_data(const uint8_t data);eadog.c: 130: {;eadog.c: 13
      +                          1:  do { LATCbits.LATC2 = 0; } while(0);
  6745  01BDD0  94BC               	bcf	188,2,c	;volatile
  6746                           
  6747                           ;eadog.c: 132:  SPI1_Exchange8bit(data);
  6748                           ;stkvar	_data @ sp[(0)+-1]
  6749  01BDD2  0EFF               	movlw	-1
  6750  01BDD4  50E3               	movf	plusw1,w,c
  6751  01BDD6  6EE6               	movwf	postinc1,c
  6752  01BDD8  ECA8  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6753                           
  6754                           ; BSR set to: 57
  6755                           ;eadog.c: 133:  wdtdelay(8);
  6756  01BDDC  0E08               	movlw	8
  6757  01BDDE  6EE6               	movwf	postinc1,c
  6758  01BDE0  0E00               	movlw	0
  6759  01BDE2  6EE6               	movwf	postinc1,c
  6760  01BDE4  0E00               	movlw	0
  6761  01BDE6  6EE6               	movwf	postinc1,c
  6762  01BDE8  0E00               	movlw	0
  6763  01BDEA  6EE6               	movwf	postinc1,c
  6764  01BDEC  EC33  F0D9         	call	_wdtdelay	;wreg free
  6765                           
  6766                           ; BSR set to: 0
  6767                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  6768  01BDF0  52E5               	movf	postdec1,f,c
  6769  01BDF2  0012               	return		;funcret
  6770  01BDF4                     __end_of_send_lcd_data:
  6771                           	opt callstack 0
  6772                           
  6773 ;; *************** function _send_lcd_cmd_long *****************
  6774 ;; Defined at:
  6775 ;;		line 145 in file "eadog.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  cmd             1  [STACK] const unsigned char 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;		None
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1  [STACK] void 
  6782 ;; Registers used:
  6783 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6784 ;; Tracked objects:
  6785 ;;		On entry : 3F/0
  6786 ;;		On exit  : 3F/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6793 ;;Total ram usage:        0 bytes
  6794 ;; Hardware stack levels used:    1
  6795 ;; Hardware stack levels required when called:   16
  6796 ;; This function calls:
  6797 ;;		_SPI1_Exchange8bit
  6798 ;;		_wdtdelay
  6799 ;; This function is called by:
  6800 ;;		_init_display
  6801 ;; This function uses a reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text8
  6805  01B6D2                     __ptext8:
  6806                           	opt callstack 0
  6807  01B6D2                     _send_lcd_cmd_long:
  6808                           	opt callstack 13
  6809                           
  6810                           ; BSR set to: 0
  6811                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6812                           ;incstack = 0
  6813                           ;eadog.c: 145: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 146: {;eadog.c:
      +                           147:  do { LATCbits.LATC2 = 0; } while(0);
  6814  01B6D2  94BC               	bcf	188,2,c	;volatile
  6815                           
  6816                           ;eadog.c: 148:  SPI1_Exchange8bit(0xFE);
  6817  01B6D4  0EFE               	movlw	254
  6818  01B6D6  6EE6               	movwf	postinc1,c
  6819  01B6D8  ECA8  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6820                           
  6821                           ; BSR set to: 57
  6822                           ;eadog.c: 149:  wdtdelay(8);
  6823  01B6DC  0E08               	movlw	8
  6824  01B6DE  6EE6               	movwf	postinc1,c
  6825  01B6E0  0E00               	movlw	0
  6826  01B6E2  6EE6               	movwf	postinc1,c
  6827  01B6E4  0E00               	movlw	0
  6828  01B6E6  6EE6               	movwf	postinc1,c
  6829  01B6E8  0E00               	movlw	0
  6830  01B6EA  6EE6               	movwf	postinc1,c
  6831  01B6EC  EC33  F0D9         	call	_wdtdelay	;wreg free
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;eadog.c: 150:  SPI1_Exchange8bit(cmd);
  6835                           ;stkvar	_cmd @ sp[(0)+-1]
  6836  01B6F0  0EFF               	movlw	-1
  6837  01B6F2  50E3               	movf	plusw1,w,c
  6838  01B6F4  6EE6               	movwf	postinc1,c
  6839  01B6F6  ECA8  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6840                           
  6841                           ;eadog.c: 151:  wdtdelay(800);
  6842  01B6FA  0E20               	movlw	32
  6843  01B6FC  6EE6               	movwf	postinc1,c
  6844  01B6FE  0E03               	movlw	3
  6845  01B700  6EE6               	movwf	postinc1,c
  6846  01B702  0E00               	movlw	0
  6847  01B704  6EE6               	movwf	postinc1,c
  6848  01B706  0E00               	movlw	0
  6849  01B708  6EE6               	movwf	postinc1,c
  6850  01B70A  EC33  F0D9         	call	_wdtdelay	;wreg free
  6851                           
  6852                           ; BSR set to: 0
  6853                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6854  01B70E  52E5               	movf	postdec1,f,c
  6855  01B710  0012               	return		;funcret
  6856  01B712                     __end_of_send_lcd_cmd_long:
  6857                           	opt callstack 0
  6858                           
  6859 ;; *************** function _send_lcd_cmd *****************
  6860 ;; Defined at:
  6861 ;;		line 136 in file "eadog.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  cmd             1  [STACK] const unsigned char 
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;		None
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  1  [STACK] void 
  6868 ;; Registers used:
  6869 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6870 ;; Tracked objects:
  6871 ;;		On entry : 3F/0
  6872 ;;		On exit  : 3F/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6879 ;;Total ram usage:        0 bytes
  6880 ;; Hardware stack levels used:    1
  6881 ;; Hardware stack levels required when called:   16
  6882 ;; This function calls:
  6883 ;;		_SPI1_Exchange8bit
  6884 ;;		_wdtdelay
  6885 ;; This function is called by:
  6886 ;;		_init_display
  6887 ;; This function uses a reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text9
  6891  01B712                     __ptext9:
  6892                           	opt callstack 0
  6893  01B712                     _send_lcd_cmd:
  6894                           	opt callstack 13
  6895                           
  6896                           ; BSR set to: 0
  6897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6898                           ;incstack = 0
  6899                           ;eadog.c: 136: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 137: {;eadog.c: 138:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  6900  01B712  94BC               	bcf	188,2,c	;volatile
  6901                           
  6902                           ;eadog.c: 139:  SPI1_Exchange8bit(0xFE);
  6903  01B714  0EFE               	movlw	254
  6904  01B716  6EE6               	movwf	postinc1,c
  6905  01B718  ECA8  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6906                           
  6907                           ; BSR set to: 57
  6908                           ;eadog.c: 140:  wdtdelay(8);
  6909  01B71C  0E08               	movlw	8
  6910  01B71E  6EE6               	movwf	postinc1,c
  6911  01B720  0E00               	movlw	0
  6912  01B722  6EE6               	movwf	postinc1,c
  6913  01B724  0E00               	movlw	0
  6914  01B726  6EE6               	movwf	postinc1,c
  6915  01B728  0E00               	movlw	0
  6916  01B72A  6EE6               	movwf	postinc1,c
  6917  01B72C  EC33  F0D9         	call	_wdtdelay	;wreg free
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;eadog.c: 141:  SPI1_Exchange8bit(cmd);
  6921                           ;stkvar	_cmd @ sp[(0)+-1]
  6922  01B730  0EFF               	movlw	-1
  6923  01B732  50E3               	movf	plusw1,w,c
  6924  01B734  6EE6               	movwf	postinc1,c
  6925  01B736  ECA8  F0DF         	call	_SPI1_Exchange8bit	;wreg free
  6926                           
  6927                           ;eadog.c: 142:  wdtdelay(8);
  6928  01B73A  0E08               	movlw	8
  6929  01B73C  6EE6               	movwf	postinc1,c
  6930  01B73E  0E00               	movlw	0
  6931  01B740  6EE6               	movwf	postinc1,c
  6932  01B742  0E00               	movlw	0
  6933  01B744  6EE6               	movwf	postinc1,c
  6934  01B746  0E00               	movlw	0
  6935  01B748  6EE6               	movwf	postinc1,c
  6936  01B74A  EC33  F0D9         	call	_wdtdelay	;wreg free
  6937                           
  6938                           ; BSR set to: 0
  6939                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6940  01B74E  52E5               	movf	postdec1,f,c
  6941  01B750  0012               	return		;funcret
  6942  01B752                     __end_of_send_lcd_cmd:
  6943                           	opt callstack 0
  6944                           
  6945 ;; *************** function _SPI1_Exchange8bit *****************
  6946 ;; Defined at:
  6947 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  data            1  [STACK] unsigned char 
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;		None
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  1  [STACK] unsigned char 
  6954 ;; Registers used:
  6955 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 3F/39
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6965 ;;Total ram usage:        0 bytes
  6966 ;; Hardware stack levels used:    1
  6967 ;; Hardware stack levels required when called:   15
  6968 ;; This function calls:
  6969 ;;		Nothing
  6970 ;; This function is called by:
  6971 ;;		_send_lcd_data
  6972 ;;		_send_lcd_cmd
  6973 ;;		_send_lcd_cmd_long
  6974 ;; This function uses a reentrant model
  6975 ;;
  6976                           
  6977                           	psect	text10
  6978  01BF50                     __ptext10:
  6979                           	opt callstack 0
  6980  01BF50                     _SPI1_Exchange8bit:
  6981                           	opt callstack 13
  6982                           
  6983                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6984                           
  6985                           ; BSR set to: 0
  6986                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6987                           ;incstack = 0
  6988  01BF50  0E01               	movlw	1
  6989  01BF52  013D               	movlb	61	; () banked
  6990  01BF54  6F12               	movwf	18,b	;volatile
  6991                           
  6992                           ; BSR set to: 61
  6993                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6994                           ;stkvar	_data @ sp[(0)+-1]
  6995  01BF56  0EFF               	movlw	-1
  6996  01BF58  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6997  01BF5E                     l807:
  6998                           
  6999                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  7000  01BF5E  0139               	movlb	57	; () banked
  7001  01BF60  A9A2               	btfss	162,4,b	;volatile
  7002  01BF62  D7FD               	goto	l807
  7003                           
  7004                           ; BSR set to: 57
  7005                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  7006  01BF64  006F F440  F001    	movff	15632,btemp	;volatile
  7007                           
  7008                           ; BSR set to: 57
  7009                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7010  01BF6A  52E5               	movf	postdec1,f,c
  7011  01BF6C  0012               	return		;funcret
  7012  01BF6E                     __end_of_SPI1_Exchange8bit:
  7013                           	opt callstack 0
  7014                           
  7015 ;; *************** function _ringBufS_init *****************
  7016 ;; Defined at:
  7017 ;;		line 22 in file "ringbufs.c"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;  _this           2  [STACK] PTR volatile struct ring
  7020 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;		None
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  1  [STACK] void 
  7025 ;; Registers used:
  7026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7036 ;;Total ram usage:        0 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:   16
  7039 ;; This function calls:
  7040 ;;		_memset
  7041 ;; This function is called by:
  7042 ;;		_init_display
  7043 ;; This function uses a reentrant model
  7044 ;;
  7045                           
  7046                           	psect	text11
  7047  01BB76                     __ptext11:
  7048                           	opt callstack 0
  7049  01BB76                     _ringBufS_init:
  7050                           	opt callstack 13
  7051                           
  7052                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  7053                           
  7054                           ; BSR set to: 57
  7055                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7056                           ;incstack = 0
  7057  01BB76  0E43               	movlw	67
  7058  01BB78  6EE6               	movwf	postinc1,c
  7059  01BB7A  0E00               	movlw	0
  7060  01BB7C  6EE6               	movwf	postinc1,c
  7061  01BB7E  0E00               	movlw	0
  7062  01BB80  6EE6               	movwf	postinc1,c
  7063  01BB82  0E00               	movlw	0
  7064  01BB84  6EE6               	movwf	postinc1,c
  7065                           
  7066                           ;stkvar	__this @ sp[(-4)+-2]
  7067  01BB86  0EFA               	movlw	-6
  7068  01BB88  006F FF8F FFE6     	movff	plusw1,postinc1
  7069  01BB8E  006F FF8F FFE6     	movff	plusw1,postinc1
  7070  01BB94  EC16  F0B7         	call	_memset	;wreg free
  7071                           
  7072                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7073  01BB98  52E5               	movf	postdec1,f,c
  7074  01BB9A  52E5               	movf	postdec1,f,c
  7075  01BB9C  0012               	return		;funcret
  7076  01BB9E                     __end_of_ringBufS_init:
  7077                           	opt callstack 0
  7078                           
  7079 ;; *************** function _init_bsoc *****************
  7080 ;; Defined at:
  7081 ;;		line 107 in file "bsoc.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;		None
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;		None
  7086 ;; Return value:  Size  Location     Type
  7087 ;;                  1  [STACK] void 
  7088 ;; Registers used:
  7089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/1
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7099 ;;Total ram usage:        0 bytes
  7100 ;; Hardware stack levels used:    1
  7101 ;; Hardware stack levels required when called:   18
  7102 ;; This function calls:
  7103 ;;		_TMR3_SetInterruptHandler
  7104 ;;		_Volts_to_SOC
  7105 ;;		___fldiv
  7106 ;;		___flmul
  7107 ;;		___fltol
  7108 ;;		___xxtofl
  7109 ;;		_conv_raw_result
  7110 ;; This function is called by:
  7111 ;;		_main
  7112 ;; This function uses a reentrant model
  7113 ;;
  7114                           
  7115                           	psect	text12
  7116  017B9A                     __ptext12:
  7117                           	opt callstack 0
  7118  017B9A                     _init_bsoc:
  7119                           	opt callstack 12
  7120                           
  7121                           ;bsoc.c: 112:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  7122                           
  7123                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7124                           ;incstack = 0
  7125  017B9A  0E00               	movlw	0
  7126  017B9C  6EE6               	movwf	postinc1,c
  7127  017B9E  0E00               	movlw	0
  7128  017BA0  6EE6               	movwf	postinc1,c
  7129  017BA2  0E7A               	movlw	122
  7130  017BA4  6EE6               	movwf	postinc1,c
  7131  017BA6  0E44               	movlw	68
  7132  017BA8  6EE6               	movwf	postinc1,c
  7133  017BAA  0E00               	movlw	0
  7134  017BAC  6EE6               	movwf	postinc1,c
  7135  017BAE  0E04               	movlw	4
  7136  017BB0  6EE6               	movwf	postinc1,c
  7137  017BB2  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  7138  017BB6  0060  F007  FFE6   	movff	btemp,postinc1
  7139  017BBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7140  017BC2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7141  017BC8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7142  017BCE  EC27  F0C7         	call	___fltol	;wreg free
  7143  017BD2  0060  F007  FFE6   	movff	btemp,postinc1
  7144  017BD8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7145  017BDE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7146  017BE4  0060  F013  FFE6   	movff	btemp+3,postinc1
  7147  017BEA  0E00               	movlw	0
  7148  017BEC  6EE6               	movwf	postinc1,c
  7149  017BEE  EC29  F0C2         	call	___xxtofl	;wreg free
  7150  017BF2  0060  F007  FFE6   	movff	btemp,postinc1
  7151  017BF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7152  017BFE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7153  017C04  0060  F013  FFE6   	movff	btemp+3,postinc1
  7154  017C0A  ECAD  F09E         	call	___flmul	;wreg free
  7155  017C0E  0060  F007  FFE6   	movff	btemp,postinc1
  7156  017C14  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7157  017C1A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7158  017C20  0060  F013  FFE6   	movff	btemp+3,postinc1
  7159  017C26  EC27  F0C7         	call	___fltol	;wreg free
  7160  017C2A  0060  F007  FFE6   	movff	btemp,postinc1
  7161  017C30  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7162  017C36  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7163  017C3C  0060  F013  FFE6   	movff	btemp+3,postinc1
  7164  017C42  ECE7  F0CC         	call	_Volts_to_SOC	;wreg free
  7165  017C46  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  7166  017C4C  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  7167                           
  7168                           ;bsoc.c: 113:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  7169  017C52  EE21  F38B         	lfsr	2,_C+140	;volatile
  7170  017C56  006F FF7B FFE6     	movff	postinc2,postinc1
  7171  017C5C  006F FF7B FFE6     	movff	postinc2,postinc1
  7172  017C62  006F FF7B FFE6     	movff	postinc2,postinc1
  7173  017C68  006F FF7B FFE6     	movff	postinc2,postinc1
  7174  017C6E  0E00               	movlw	0
  7175  017C70  6EE6               	movwf	postinc1,c
  7176  017C72  0E00               	movlw	0
  7177  017C74  6EE6               	movwf	postinc1,c
  7178  017C76  0EC8               	movlw	200
  7179  017C78  6EE6               	movwf	postinc1,c
  7180  017C7A  0E42               	movlw	66
  7181  017C7C  6EE6               	movwf	postinc1,c
  7182  017C7E  0E00               	movlw	0
  7183  017C80  6EE6               	movwf	postinc1,c
  7184  017C82  0E00               	movlw	0
  7185  017C84  6EE6               	movwf	postinc1,c
  7186  017C86  0E7A               	movlw	122
  7187  017C88  6EE6               	movwf	postinc1,c
  7188  017C8A  0E44               	movlw	68
  7189  017C8C  6EE6               	movwf	postinc1,c
  7190  017C8E  0E00               	movlw	0
  7191  017C90  6EE6               	movwf	postinc1,c
  7192  017C92  0E04               	movlw	4
  7193  017C94  6EE6               	movwf	postinc1,c
  7194  017C96  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  7195  017C9A  0060  F007  FFE6   	movff	btemp,postinc1
  7196  017CA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7197  017CA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7198  017CAC  0060  F013  FFE6   	movff	btemp+3,postinc1
  7199  017CB2  EC27  F0C7         	call	___fltol	;wreg free
  7200  017CB6  0060  F007  FFE6   	movff	btemp,postinc1
  7201  017CBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7202  017CC2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7203  017CC8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7204  017CCE  0E00               	movlw	0
  7205  017CD0  6EE6               	movwf	postinc1,c
  7206  017CD2  EC29  F0C2         	call	___xxtofl	;wreg free
  7207  017CD6  0060  F007  FFE6   	movff	btemp,postinc1
  7208  017CDC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7209  017CE2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7210  017CE8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7211  017CEE  ECAD  F09E         	call	___flmul	;wreg free
  7212  017CF2  0060  F007  FFE6   	movff	btemp,postinc1
  7213  017CF8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7214  017CFE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7215  017D04  0060  F013  FFE6   	movff	btemp+3,postinc1
  7216  017D0A  EC27  F0C7         	call	___fltol	;wreg free
  7217  017D0E  0060  F007  FFE6   	movff	btemp,postinc1
  7218  017D14  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7219  017D1A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7220  017D20  0060  F013  FFE6   	movff	btemp+3,postinc1
  7221  017D26  ECE7  F0CC         	call	_Volts_to_SOC	;wreg free
  7222  017D2A  0060  F004  F00B   	movff	btemp,btemp+10
  7223  017D30  0060  F008  F00C   	movff	btemp+1,btemp+11
  7224  017D36  500B               	movf	(btemp+10)^0,w,c
  7225  017D38  6E05               	movwf	(btemp+4)^0,c
  7226  017D3A  500C               	movf	(btemp+11)^0,w,c
  7227  017D3C  6E06               	movwf	(btemp+5)^0,c
  7228  017D3E  6A07               	clrf	(btemp+6)^0,c
  7229  017D40  6A08               	clrf	(btemp+7)^0,c
  7230  017D42  0060  F017  FFE6   	movff	btemp+4,postinc1
  7231  017D48  0060  F01B  FFE6   	movff	btemp+5,postinc1
  7232  017D4E  0060  F01F  FFE6   	movff	btemp+6,postinc1
  7233  017D54  0060  F023  FFE6   	movff	btemp+7,postinc1
  7234  017D5A  0E00               	movlw	0
  7235  017D5C  6EE6               	movwf	postinc1,c
  7236  017D5E  EC29  F0C2         	call	___xxtofl	;wreg free
  7237  017D62  0060  F007  FFE6   	movff	btemp,postinc1
  7238  017D68  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7239  017D6E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7240  017D74  0060  F013  FFE6   	movff	btemp+3,postinc1
  7241  017D7A  ECA0  F0A6         	call	___fldiv	;wreg free
  7242  017D7E  0060  F007  FFE6   	movff	btemp,postinc1
  7243  017D84  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7244  017D8A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7245  017D90  0060  F013  FFE6   	movff	btemp+3,postinc1
  7246  017D96  ECAD  F09E         	call	___flmul	;wreg free
  7247  017D9A  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  7248  017DA0  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  7249  017DA6  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  7250  017DAC  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  7251                           
  7252                           ;bsoc.c: 114:  C.dynamic_ah_adj = C.dynamic_ah;
  7253  017DB2  EE21  F38F         	lfsr	2,_C+144	;volatile
  7254  017DB6  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  7255  017DBC  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  7256  017DC2  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  7257  017DC8  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  7258                           
  7259                           ;bsoc.c: 115:  TMR3_SetInterruptHandler(calc_bsoc);
  7260  017DCE  0E40               	movlw	low _calc_bsoc
  7261  017DD0  6EE6               	movwf	postinc1,c
  7262  017DD2  0E33               	movlw	high _calc_bsoc
  7263  017DD4  6EE6               	movwf	postinc1,c
  7264  017DD6  0E01               	movlw	low (_calc_bsoc shr (0+16))
  7265  017DD8  6EE6               	movwf	postinc1,c
  7266  017DDA  EC47  F0DE         	call	_TMR3_SetInterruptHandler	;wreg free
  7267                           
  7268                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7269  017DDE  0012               	return		;funcret
  7270  017DE0                     __end_of_init_bsoc:
  7271                           	opt callstack 0
  7272                           
  7273 ;; *************** function _Volts_to_SOC *****************
  7274 ;; Defined at:
  7275 ;;		line 172 in file "bsoc.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;  cvoltage        4  [STACK] unsigned long 
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;  soc             4  [STACK] float 
  7280 ;;  slot            1  [STACK] unsigned char 
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  2  [STACK] unsigned short 
  7283 ;; Registers used:
  7284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/1
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7294 ;;Total ram usage:        0 bytes
  7295 ;; Hardware stack levels used:    1
  7296 ;; Hardware stack levels required when called:   16
  7297 ;; This function calls:
  7298 ;;		___fltol
  7299 ;;		___xxtofl
  7300 ;; This function is called by:
  7301 ;;		_init_bsoc
  7302 ;; This function uses a reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text13
  7306  0199CE                     __ptext13:
  7307                           	opt callstack 0
  7308  0199CE                     _Volts_to_SOC:
  7309                           	opt callstack 0
  7310                           
  7311                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7312  0199CE  0E05               	movlw	5
  7313  0199D0  26E1               	addwf	fsr1l,f,c
  7314  0199D2  0E00               	movlw	0
  7315  0199D4  22E2               	addwfc	fsr1h,f,c
  7316                           
  7317                           ;bsoc.c: 172: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 173: {;bsoc.c: 174:  uint
      +                          8_t slot;;bsoc.c: 175:  float soc = 0;
  7318                           
  7319                           ;incstack = 0
  7320  0199D6  0E00               	movlw	0
  7321  0199D8  6E09               	movwf	(btemp+8)^0,c
  7322  0199DA  0E00               	movlw	0
  7323  0199DC  6E0A               	movwf	(btemp+9)^0,c
  7324  0199DE  0E00               	movlw	0
  7325  0199E0  6E0B               	movwf	(btemp+10)^0,c
  7326  0199E2  0E00               	movlw	0
  7327  0199E4  6E0C               	movwf	(btemp+11)^0,c
  7328                           
  7329                           ;stkvar	_soc @ sp[(-5)+0]
  7330  0199E6  0EFB               	movlw	-5
  7331  0199E8  0060  F027  FFE3   	movff	btemp+8,plusw1
  7332  0199EE  0EFC               	movlw	-4
  7333  0199F0  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7334  0199F6  0EFD               	movlw	-3
  7335  0199F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7336  0199FE  0EFE               	movlw	-2
  7337  019A00  0060  F033  FFE3   	movff	btemp+11,plusw1
  7338                           
  7339                           ;bsoc.c: 177:  for (slot = 0; slot < 26; slot++) {
  7340                           ;stkvar	_slot @ sp[(-5)+4]
  7341  019A06  0EFF               	movlw	-1
  7342  019A08  6AE3               	clrf	plusw1,c
  7343  019A0A                     l10678:
  7344                           
  7345                           ;bsoc.c: 178:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  7346                           ;stkvar	_cvoltage @ sp[(-5)+-4]
  7347                           ;stkvar	_slot @ sp[(-5)+4]
  7348  019A0A  0EFF               	movlw	-1
  7349  019A0C  50E3               	movf	plusw1,w,c
  7350  019A0E  0D08               	mullw	8
  7351  019A10  0E35               	movlw	low _BVSOC_TABLE
  7352  019A12  24F3               	addwf	243,w,c
  7353  019A14  6EF6               	movwf	tblptrl,c
  7354  019A16  0EFA               	movlw	high _BVSOC_TABLE
  7355  019A18  20F4               	addwfc	244,w,c
  7356  019A1A  6EF7               	movwf	tblptrh,c
  7357  019A1C                     	if	1	;There are 3 active tblptr bytes
  7358  019A1C  6AF8               	clrf	tblptru,c
  7359  019A1E  0E00               	movlw	low (__mediumconst shr (0+16))
  7360  019A20  22F8               	addwfc	tblptru,f,c
  7361  019A22                     	endif
  7362  019A22  0EF7               	movlw	-9
  7363  019A24  50E3               	movf	plusw1,w,c
  7364  019A26  0009               	tblrd		*+
  7365  019A28  5CF5               	subwf	tablat,w,c
  7366  019A2A  0EF8               	movlw	-8
  7367  019A2C  50E3               	movf	plusw1,w,c
  7368  019A2E  0009               	tblrd		*+
  7369  019A30  58F5               	subwfb	tablat,w,c
  7370  019A32  0EF9               	movlw	-7
  7371  019A34  50E3               	movf	plusw1,w,c
  7372  019A36  0009               	tblrd		*+
  7373  019A38  58F5               	subwfb	tablat,w,c
  7374  019A3A  0EFA               	movlw	-6
  7375  019A3C  50E3               	movf	plusw1,w,c
  7376  019A3E  0009               	tblrd		*+
  7377  019A40  58F5               	subwfb	tablat,w,c
  7378  019A42  B0D8               	btfsc	status,0,c
  7379  019A44  D034               	goto	l10682
  7380                           
  7381                           ;bsoc.c: 179:    soc = BVSOC_TABLE[slot][1];
  7382                           ;stkvar	_slot @ sp[(-5)+4]
  7383  019A46  0EFF               	movlw	-1
  7384  019A48  50E3               	movf	plusw1,w,c
  7385  019A4A  0D08               	mullw	8
  7386  019A4C  0E04               	movlw	4
  7387  019A4E  26F3               	addwf	243,f,c
  7388  019A50  0E00               	movlw	0
  7389  019A52  22F4               	addwfc	244,f,c
  7390  019A54  0E35               	movlw	low _BVSOC_TABLE
  7391  019A56  24F3               	addwf	243,w,c
  7392  019A58  6EF6               	movwf	tblptrl,c
  7393  019A5A  0EFA               	movlw	high _BVSOC_TABLE
  7394  019A5C  20F4               	addwfc	244,w,c
  7395  019A5E  6EF7               	movwf	tblptrh,c
  7396  019A60                     	if	1	;There are 3 active tblptr bytes
  7397  019A60  6AF8               	clrf	tblptru,c
  7398  019A62  0E00               	movlw	low (__mediumconst shr (0+16))
  7399  019A64  22F8               	addwfc	tblptru,f,c
  7400  019A66                     	endif
  7401  019A66  0009               	tblrd		*+
  7402  019A68  006F FFD7 FFE6     	movff	tablat,postinc1
  7403  019A6E  0009               	tblrd		*+
  7404  019A70  006F FFD7 FFE6     	movff	tablat,postinc1
  7405  019A76  0009               	tblrd		*+
  7406  019A78  006F FFD7 FFE6     	movff	tablat,postinc1
  7407  019A7E  0009               	tblrd		*+
  7408  019A80  006F FFD7 FFE6     	movff	tablat,postinc1
  7409  019A86  0E00               	movlw	0
  7410  019A88  6EE6               	movwf	postinc1,c
  7411  019A8A  EC29  F0C2         	call	___xxtofl	;wreg free
  7412                           
  7413                           ;stkvar	_soc @ sp[(-5)+0]
  7414  019A8E  0EFB               	movlw	-5
  7415  019A90  0060  F007  FFE3   	movff	btemp,plusw1
  7416  019A96  0EFC               	movlw	-4
  7417  019A98  0060  F00B  FFE3   	movff	btemp+1,plusw1
  7418  019A9E  0EFD               	movlw	-3
  7419  019AA0  0060  F00F  FFE3   	movff	btemp+2,plusw1
  7420  019AA6  0EFE               	movlw	-2
  7421  019AA8  0060  F013  FFE3   	movff	btemp+3,plusw1
  7422  019AAE                     l10682:
  7423                           
  7424                           ;bsoc.c: 181:  }
  7425                           ;stkvar	_slot @ sp[(-5)+4]
  7426  019AAE  0EFF               	movlw	-1
  7427  019AB0  2AE3               	incf	plusw1,f,c
  7428                           
  7429                           ;stkvar	_slot @ sp[(-5)+4]
  7430  019AB2  0EFF               	movlw	-1
  7431  019AB4  006F FF8C  F001    	movff	plusw1,btemp
  7432  019ABA  0E19               	movlw	25
  7433  019ABC  6401               	cpfsgt	btemp^0,c
  7434  019ABE  D7A5               	goto	l10678
  7435                           
  7436                           ;bsoc.c: 182:  return soc;
  7437                           ;stkvar	_soc @ sp[(-5)+0]
  7438  019AC0  0EFB               	movlw	-5
  7439  019AC2  006F FF8F FFE6     	movff	plusw1,postinc1
  7440  019AC8  006F FF8F FFE6     	movff	plusw1,postinc1
  7441  019ACE  006F FF8F FFE6     	movff	plusw1,postinc1
  7442  019AD4  006F FF8F FFE6     	movff	plusw1,postinc1
  7443  019ADA  EC27  F0C7         	call	___fltol	;wreg free
  7444                           
  7445                           ; _Volts_to_SOC: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  7446  019ADE  0EF7               	movlw	247
  7447  019AE0  26E1               	addwf	fsr1l,f,c
  7448  019AE2  0EFF               	movlw	255
  7449  019AE4  22E2               	addwfc	fsr1h,f,c
  7450  019AE6  0012               	return		;funcret
  7451  019AE8                     __end_of_Volts_to_SOC:
  7452                           	opt callstack 0
  7453                           
  7454 ;; *************** function _hid_display *****************
  7455 ;; Defined at:
  7456 ;;		line 17 in file "hid.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;  h               1  [STACK] PTR struct H_data
  7459 ;;		 -> H(7), 
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;		None
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  1  [STACK] PTR struct H_data
  7464 ;; Registers used:
  7465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  7466 ;; Tracked objects:
  7467 ;;		On entry : 3F/39
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7475 ;;Total ram usage:        0 bytes
  7476 ;; Hardware stack levels used:    1
  7477 ;; Hardware stack levels required when called:   17
  7478 ;; This function calls:
  7479 ;;		_hid_input
  7480 ;; This function is called by:
  7481 ;;		_main
  7482 ;; This function uses a reentrant model
  7483 ;;
  7484                           
  7485                           	psect	text14
  7486  019F2E                     __ptext14:
  7487                           	opt callstack 0
  7488  019F2E                     _hid_display:
  7489                           	opt callstack 13
  7490                           
  7491                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7492                           ;stkvar	_h @ sp[(0)+-1]
  7493                           
  7494                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7495                           ;incstack = 0
  7496  019F2E  0EFF               	movlw	-1
  7497  019F30  50E3               	movf	plusw1,w,c
  7498  019F32  6EE6               	movwf	postinc1,c
  7499  019F34  ECE3  F0D5         	call	_hid_input	;wreg free
  7500                           
  7501                           ;hid.c: 21:  switch (h->h_state) {
  7502  019F38  D066               	goto	l11098
  7503  019F3A                     l11076:
  7504                           
  7505                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7506                           ;stkvar	_h @ sp[(0)+-1]
  7507  019F3A  0EFF               	movlw	-1
  7508  019F3C  50E3               	movf	plusw1,w,c
  7509  019F3E  6ED9               	movwf	fsr2l,c
  7510  019F40  6ADA               	clrf	fsr2h,c
  7511  019F42  0E01               	movlw	1
  7512  019F44  26D9               	addwf	fsr2l,f,c
  7513  019F46  0E01               	movlw	1
  7514  019F48  6EDF               	movwf	indf2,c
  7515                           
  7516                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7517                           ;stkvar	_h @ sp[(0)+-1]
  7518  019F4A  0EFF               	movlw	-1
  7519  019F4C  50E3               	movf	plusw1,w,c
  7520  019F4E  6ED9               	movwf	fsr2l,c
  7521  019F50  6ADA               	clrf	fsr2h,c
  7522  019F52  0E00               	movlw	0
  7523  019F54  6EDF               	movwf	indf2,c
  7524                           
  7525                           ;hid.c: 25:   h->wait_enter = 1;
  7526                           ;stkvar	_h @ sp[(0)+-1]
  7527  019F56  0EFF               	movlw	-1
  7528  019F58  50E3               	movf	plusw1,w,c
  7529  019F5A  6ED9               	movwf	fsr2l,c
  7530  019F5C  6ADA               	clrf	fsr2h,c
  7531  019F5E  0E04               	movlw	4
  7532  019F60  26D9               	addwf	fsr2l,f,c
  7533  019F62  0E01               	movlw	1
  7534  019F64  6EDF               	movwf	indf2,c
  7535                           
  7536                           ;hid.c: 26:   h->wait_select = 1;
  7537                           ;stkvar	_h @ sp[(0)+-1]
  7538  019F66  0EFF               	movlw	-1
  7539  019F68  50E3               	movf	plusw1,w,c
  7540  019F6A  6ED9               	movwf	fsr2l,c
  7541  019F6C  6ADA               	clrf	fsr2h,c
  7542  019F6E  0E02               	movlw	2
  7543  019F70  26D9               	addwf	fsr2l,f,c
  7544  019F72  0E01               	movlw	1
  7545  019F74  6EDF               	movwf	indf2,c
  7546                           
  7547                           ;hid.c: 27:   h->select_p = SW_OFF;
  7548                           ;stkvar	_h @ sp[(0)+-1]
  7549  019F76  0EFF               	movlw	-1
  7550  019F78  50E3               	movf	plusw1,w,c
  7551  019F7A  6ED9               	movwf	fsr2l,c
  7552  019F7C  6ADA               	clrf	fsr2h,c
  7553  019F7E  0E03               	movlw	3
  7554  019F80  26D9               	addwf	fsr2l,f,c
  7555  019F82  0E00               	movlw	0
  7556  019F84  6EDF               	movwf	indf2,c
  7557                           
  7558                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7559                           ;stkvar	_h @ sp[(0)+-1]
  7560  019F86  0EFF               	movlw	-1
  7561  019F88  50E3               	movf	plusw1,w,c
  7562  019F8A  6ED9               	movwf	fsr2l,c
  7563  019F8C  6ADA               	clrf	fsr2h,c
  7564  019F8E  0E05               	movlw	5
  7565  019F90  26D9               	addwf	fsr2l,f,c
  7566  019F92  0E00               	movlw	0
  7567  019F94  D036               	goto	L3
  7568  019F96                     l11088:
  7569                           
  7570                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7571                           ;stkvar	_h @ sp[(0)+-1]
  7572  019F96  0EFF               	movlw	-1
  7573  019F98  50E3               	movf	plusw1,w,c
  7574  019F9A  6ED9               	movwf	fsr2l,c
  7575  019F9C  6ADA               	clrf	fsr2h,c
  7576  019F9E  0E02               	movlw	2
  7577  019FA0  26D9               	addwf	fsr2l,f,c
  7578  019FA2  50DF               	movf	indf2,w,c
  7579  019FA4  A4D8               	btfss	status,2,c
  7580  019FA6  D042               	goto	l1975
  7581                           
  7582                           ;stkvar	_h @ sp[(0)+-1]
  7583  019FA8  0EFF               	movlw	-1
  7584  019FAA  50E3               	movf	plusw1,w,c
  7585  019FAC  6ED9               	movwf	fsr2l,c
  7586  019FAE  6ADA               	clrf	fsr2h,c
  7587  019FB0  0E03               	movlw	3
  7588  019FB2  26D9               	addwf	fsr2l,f,c
  7589  019FB4  50DF               	movf	indf2,w,c
  7590  019FB6  A4D8               	btfss	status,2,c
  7591  019FB8  D039               	goto	l1975
  7592                           
  7593                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7594                           ;stkvar	_h @ sp[(0)+-1]
  7595  019FBA  0EFF               	movlw	-1
  7596  019FBC  50E3               	movf	plusw1,w,c
  7597  019FBE  6ED9               	movwf	fsr2l,c
  7598  019FC0  6ADA               	clrf	fsr2h,c
  7599  019FC2  0E06               	movlw	6
  7600  019FC4  26D9               	addwf	fsr2l,f,c
  7601                           
  7602                           ;stkvar	_h @ sp[(0)+-1]
  7603  019FC6  0EFF               	movlw	-1
  7604  019FC8  50E3               	movf	plusw1,w,c
  7605  019FCA  6EE9               	movwf	fsr0l,c
  7606  019FCC  6AEA               	clrf	fsr0h,c
  7607  019FCE  0E06               	movlw	6
  7608  019FD0  26E9               	addwf	fsr0l,f,c
  7609  019FD2  2AEF               	incf	indf0,f,c
  7610  019FD4  50EF               	movf	indf0,w,c
  7611  019FD6  0B03               	andlw	3
  7612  019FD8  6EDF               	movwf	indf2,c
  7613                           
  7614                           ;hid.c: 34:    h->hid_display = h->sequence;
  7615                           ;stkvar	_h @ sp[(0)+-1]
  7616  019FDA  0EFF               	movlw	-1
  7617  019FDC  50E3               	movf	plusw1,w,c
  7618  019FDE  6ED9               	movwf	fsr2l,c
  7619  019FE0  6ADA               	clrf	fsr2h,c
  7620  019FE2  0E06               	movlw	6
  7621  019FE4  26D9               	addwf	fsr2l,f,c
  7622                           
  7623                           ;stkvar	_h @ sp[(0)+-1]
  7624  019FE6  0EFF               	movlw	-1
  7625  019FE8  50E3               	movf	plusw1,w,c
  7626  019FEA  6EE9               	movwf	fsr0l,c
  7627  019FEC  6AEA               	clrf	fsr0h,c
  7628  019FEE  006F FF7F FFEF     	movff	indf2,indf0
  7629                           
  7630                           ;hid.c: 35:    h->wait_select = 1;
  7631                           ;stkvar	_h @ sp[(0)+-1]
  7632  019FF4  0EFF               	movlw	-1
  7633  019FF6  50E3               	movf	plusw1,w,c
  7634  019FF8  6ED9               	movwf	fsr2l,c
  7635  019FFA  6ADA               	clrf	fsr2h,c
  7636  019FFC  0E02               	movlw	2
  7637  019FFE  26D9               	addwf	fsr2l,f,c
  7638  01A000  0E01               	movlw	1
  7639  01A002                     L3:
  7640  01A002  6EDF               	movwf	indf2,c
  7641  01A004  D013               	goto	l1975
  7642  01A006                     l11098:
  7643                           
  7644                           ;stkvar	_h @ sp[(0)+-1]
  7645  01A006  0EFF               	movlw	-1
  7646  01A008  50E3               	movf	plusw1,w,c
  7647  01A00A  6ED9               	movwf	fsr2l,c
  7648  01A00C  6ADA               	clrf	fsr2h,c
  7649  01A00E  0E01               	movlw	1
  7650  01A010  26D9               	addwf	fsr2l,f,c
  7651  01A012  50DF               	movf	indf2,w,c
  7652  01A014  6E0B               	movwf	(btemp+10)^0,c
  7653  01A016  6A0C               	clrf	(btemp+11)^0,c
  7654                           
  7655                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7656                           ; Switch size 1, requested type "simple"
  7657                           ; Number of cases is 1, Range of values is 0 to 0
  7658                           ; switch strategies available:
  7659                           ; Name         Instructions Cycles
  7660                           ; simple_byte            4     3 (average)
  7661                           ;	Chosen strategy is simple_byte
  7662  01A018  500C               	movf	(btemp+11)^0,w,c
  7663  01A01A  0A00               	xorlw	0	; case 0
  7664  01A01C  A4D8               	btfss	status,2,c
  7665  01A01E  D7BB               	goto	l11088
  7666                           
  7667                           ; Switch size 1, requested type "simple"
  7668                           ; Number of cases is 2, Range of values is 0 to 1
  7669                           ; switch strategies available:
  7670                           ; Name         Instructions Cycles
  7671                           ; simple_byte            7     4 (average)
  7672                           ;	Chosen strategy is simple_byte
  7673  01A020  500B               	movf	(btemp+10)^0,w,c
  7674  01A022  0A00               	xorlw	0	; case 0
  7675  01A024  B4D8               	btfsc	status,2,c
  7676  01A026  D789               	goto	l11076
  7677  01A028  0A01               	xorlw	1	; case 1
  7678  01A02A  D7B5               	goto	l11088
  7679  01A02C                     l1975:
  7680                           
  7681                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7682  01A02C  52E5               	movf	postdec1,f,c
  7683  01A02E  0012               	return		;funcret
  7684  01A030                     __end_of_hid_display:
  7685                           	opt callstack 0
  7686                           
  7687 ;; *************** function _hid_input *****************
  7688 ;; Defined at:
  7689 ;;		line 3 in file "hid.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;  h               1  [STACK] PTR struct H_data
  7692 ;;		 -> H(7), 
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;		None
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  1  [STACK] PTR struct H_data
  7697 ;; Registers used:
  7698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/39
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7708 ;;Total ram usage:        0 bytes
  7709 ;; Hardware stack levels used:    1
  7710 ;; Hardware stack levels required when called:   16
  7711 ;; This function calls:
  7712 ;;		_get_switch
  7713 ;; This function is called by:
  7714 ;;		_hid_display
  7715 ;; This function uses a reentrant model
  7716 ;;
  7717                           
  7718                           	psect	text15
  7719  01ABC6                     __ptext15:
  7720                           	opt callstack 0
  7721  01ABC6                     _hid_input:
  7722                           	opt callstack 13
  7723                           
  7724                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7725                           
  7726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7727                           ;incstack = 0
  7728  01ABC6  0E02               	movlw	2
  7729  01ABC8  6EE6               	movwf	postinc1,c
  7730  01ABCA  EC64  F0DD         	call	_get_switch	;wreg free
  7731  01ABCE  5001               	movf	btemp^0,w,c
  7732  01ABD0  B4D8               	btfsc	status,2,c
  7733  01ABD2  D01C               	goto	l10590
  7734                           
  7735                           ;hid.c: 6:   h->wait_select = 0;
  7736                           ;stkvar	_h @ sp[(0)+-1]
  7737  01ABD4  0EFF               	movlw	-1
  7738  01ABD6  50E3               	movf	plusw1,w,c
  7739  01ABD8  6ED9               	movwf	fsr2l,c
  7740  01ABDA  6ADA               	clrf	fsr2h,c
  7741  01ABDC  0E02               	movlw	2
  7742  01ABDE  26D9               	addwf	fsr2l,f,c
  7743  01ABE0  0E00               	movlw	0
  7744  01ABE2  6EDF               	movwf	indf2,c
  7745                           
  7746                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7747  01ABE4  0E02               	movlw	2
  7748  01ABE6  6EE6               	movwf	postinc1,c
  7749  01ABE8  EC64  F0DD         	call	_get_switch	;wreg free
  7750  01ABEC  5001               	movf	btemp^0,w,c
  7751  01ABEE  B4D8               	btfsc	status,2,c
  7752  01ABF0  D003               	goto	u9760
  7753  01ABF2  6A0C               	clrf	(btemp+11)^0,c
  7754  01ABF4  2A0C               	incf	(btemp+11)^0,f,c
  7755  01ABF6  D001               	goto	u9778
  7756  01ABF8                     u9760:
  7757  01ABF8  6A0C               	clrf	(btemp+11)^0,c
  7758  01ABFA                     u9778:
  7759                           
  7760                           ;stkvar	_h @ sp[(0)+-1]
  7761  01ABFA  0EFF               	movlw	-1
  7762  01ABFC  50E3               	movf	plusw1,w,c
  7763  01ABFE  6ED9               	movwf	fsr2l,c
  7764  01AC00  6ADA               	clrf	fsr2h,c
  7765  01AC02  0E03               	movlw	3
  7766  01AC04  26D9               	addwf	fsr2l,f,c
  7767  01AC06  0060  F033  FFDF   	movff	btemp+11,indf2
  7768  01AC0C                     l10590:
  7769                           
  7770                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7771  01AC0C  0E03               	movlw	3
  7772  01AC0E  6EE6               	movwf	postinc1,c
  7773  01AC10  EC64  F0DD         	call	_get_switch	;wreg free
  7774  01AC14  5001               	movf	btemp^0,w,c
  7775  01AC16  B4D8               	btfsc	status,2,c
  7776  01AC18  D01C               	goto	l1966
  7777                           
  7778                           ;hid.c: 11:   h->wait_enter = 0;
  7779                           ;stkvar	_h @ sp[(0)+-1]
  7780  01AC1A  0EFF               	movlw	-1
  7781  01AC1C  50E3               	movf	plusw1,w,c
  7782  01AC1E  6ED9               	movwf	fsr2l,c
  7783  01AC20  6ADA               	clrf	fsr2h,c
  7784  01AC22  0E04               	movlw	4
  7785  01AC24  26D9               	addwf	fsr2l,f,c
  7786  01AC26  0E00               	movlw	0
  7787  01AC28  6EDF               	movwf	indf2,c
  7788                           
  7789                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7790  01AC2A  0E03               	movlw	3
  7791  01AC2C  6EE6               	movwf	postinc1,c
  7792  01AC2E  EC64  F0DD         	call	_get_switch	;wreg free
  7793  01AC32  5001               	movf	btemp^0,w,c
  7794  01AC34  B4D8               	btfsc	status,2,c
  7795  01AC36  D003               	goto	u9790
  7796  01AC38  6A0C               	clrf	(btemp+11)^0,c
  7797  01AC3A  2A0C               	incf	(btemp+11)^0,f,c
  7798  01AC3C  D001               	goto	u9808
  7799  01AC3E                     u9790:
  7800  01AC3E  6A0C               	clrf	(btemp+11)^0,c
  7801  01AC40                     u9808:
  7802                           
  7803                           ;stkvar	_h @ sp[(0)+-1]
  7804  01AC40  0EFF               	movlw	-1
  7805  01AC42  50E3               	movf	plusw1,w,c
  7806  01AC44  6ED9               	movwf	fsr2l,c
  7807  01AC46  6ADA               	clrf	fsr2h,c
  7808  01AC48  0E05               	movlw	5
  7809  01AC4A  26D9               	addwf	fsr2l,f,c
  7810  01AC4C  0060  F033  FFDF   	movff	btemp+11,indf2
  7811  01AC52                     l1966:
  7812                           
  7813                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7814  01AC52  52E5               	movf	postdec1,f,c
  7815  01AC54  0012               	return		;funcret
  7816  01AC56                     __end_of_hid_input:
  7817                           	opt callstack 0
  7818                           
  7819 ;; *************** function _get_switch *****************
  7820 ;; Defined at:
  7821 ;;		line 18 in file "dio.c"
  7822 ;; Parameters:    Size  Location     Type
  7823 ;;  i               1  [STACK] unsigned char 
  7824 ;; Auto vars:     Size  Location     Type
  7825 ;;		None
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  1  [STACK] enum E17021
  7828 ;; Registers used:
  7829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/1
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7839 ;;Total ram usage:        0 bytes
  7840 ;; Hardware stack levels used:    1
  7841 ;; Hardware stack levels required when called:   15
  7842 ;; This function calls:
  7843 ;;		Nothing
  7844 ;; This function is called by:
  7845 ;;		_main
  7846 ;;		_hid_input
  7847 ;; This function uses a reentrant model
  7848 ;;
  7849                           
  7850                           	psect	text16
  7851  01BAC8                     __ptext16:
  7852                           	opt callstack 0
  7853  01BAC8                     _get_switch:
  7854                           	opt callstack 13
  7855                           
  7856                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7857                           ;stkvar	_i @ sp[(0)+-1]
  7858                           
  7859                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7860                           ;incstack = 0
  7861  01BAC8  0EFF               	movlw	-1
  7862  01BACA  006F FF8C  F001    	movff	plusw1,btemp
  7863  01BAD0  0E03               	movlw	3
  7864  01BAD2  6401               	cpfsgt	btemp^0,c
  7865  01BAD4  D002               	goto	l9942
  7866                           
  7867                           ;dio.c: 21:   return SW_OFF;
  7868  01BAD6  0E00               	movlw	0
  7869  01BAD8  D00A               	goto	L4
  7870  01BADA                     l9942:
  7871                           
  7872                           ;dio.c: 23:  return S.button[i].sw;
  7873                           ;stkvar	_i @ sp[(0)+-1]
  7874  01BADA  0EFF               	movlw	-1
  7875  01BADC  50E3               	movf	plusw1,w,c
  7876  01BADE  0D05               	mullw	5
  7877  01BAE0  0E54               	movlw	low _S
  7878  01BAE2  24F3               	addwf	243,w,c
  7879  01BAE4  6ED9               	movwf	fsr2l,c
  7880  01BAE6  0E02               	movlw	high _S
  7881  01BAE8  20F4               	addwfc	prodh,w,c
  7882  01BAEA  6EDA               	movwf	fsr2h,c
  7883  01BAEC  50DF               	movf	indf2,w,c
  7884  01BAEE                     L4:
  7885  01BAEE  6E01               	movwf	btemp^0,c
  7886                           
  7887                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7888  01BAF0  52E5               	movf	postdec1,f,c
  7889  01BAF2  0012               	return		;funcret
  7890  01BAF4                     __end_of_get_switch:
  7891                           	opt callstack 0
  7892                           
  7893 ;; *************** function _esr_check *****************
  7894 ;; Defined at:
  7895 ;;		line 191 in file "bsoc.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;  fsm             1  [STACK] unsigned char 
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;		None
  7900 ;; Return value:  Size  Location     Type
  7901 ;;                  4  [STACK] float 
  7902 ;; Registers used:
  7903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/0
  7906 ;;		On exit  : 0/0
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7913 ;;Total ram usage:        0 bytes
  7914 ;; Hardware stack levels used:    1
  7915 ;; Hardware stack levels required when called:   18
  7916 ;; This function calls:
  7917 ;;		_StartTimer
  7918 ;;		_TimerDone
  7919 ;;		___fldiv
  7920 ;;		___flsub
  7921 ;;		_conv_raw_result
  7922 ;;		_fabsf
  7923 ;;		_set_load_relay_one
  7924 ;;		_set_load_relay_two
  7925 ;;		_update_adc_result
  7926 ;; This function is called by:
  7927 ;;		_main
  7928 ;; This function uses a reentrant model
  7929 ;;
  7930                           
  7931                           	psect	text17
  7932  017118                     __ptext17:
  7933                           	opt callstack 0
  7934  017118                     _esr_check:
  7935                           	opt callstack 12
  7936                           
  7937                           ;bsoc.c: 191: float esr_check(uint8_t fsm);bsoc.c: 192: {;bsoc.c: 193:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 195:  if (fsm) {
  7938                           ;stkvar	_fsm @ sp[(0)+-1]
  7939                           
  7940                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7941                           ;incstack = 0
  7942  017118  0EFF               	movlw	-1
  7943  01711A  50E3               	movf	plusw1,w,c
  7944  01711C  B4D8               	btfsc	status,2,c
  7945  01711E  D146               	goto	l11010
  7946                           
  7947                           ;bsoc.c: 196:   esr_state = 0;
  7948  017120  6A40               	clrf	esr_check@esr_state^0,c
  7949                           
  7950                           ;bsoc.c: 197:   return -10.0;
  7951  017122  0E00               	movlw	0
  7952  017124  6E01               	movwf	btemp^0,c
  7953  017126  0E00               	movlw	0
  7954  017128  6E02               	movwf	(btemp+1)^0,c
  7955  01712A  0E20               	movlw	32
  7956  01712C  6E03               	movwf	(btemp+2)^0,c
  7957  01712E  0EC1               	movlw	193
  7958  017130  D158               	goto	L5
  7959  017132                     l10942:
  7960                           
  7961                           ;bsoc.c: 202:   StartTimer(TMR_ESR, 10000);
  7962  017132  0E10               	movlw	16
  7963  017134  6EE6               	movwf	postinc1,c
  7964  017136  0E27               	movlw	39
  7965  017138  6EE6               	movwf	postinc1,c
  7966  01713A  0E0C               	movlw	12
  7967  01713C  6EE6               	movwf	postinc1,c
  7968  01713E  ECA9  F0DB         	call	_StartTimer	;wreg free
  7969  017142                     l10944:
  7970                           
  7971                           ;bsoc.c: 203:   esr_state++;
  7972  017142  2A40               	incf	esr_check@esr_state^0,f,c
  7973                           
  7974                           ;bsoc.c: 204:   break;
  7975  017144  D147               	goto	l11012
  7976  017146                     l10946:
  7977                           
  7978                           ;bsoc.c: 209:   set_load_relay_one(0);
  7979  017146  0E00               	movlw	0
  7980  017148  6EE6               	movwf	postinc1,c
  7981  01714A  EC6F  F0E0         	call	_set_load_relay_one	;wreg free
  7982                           
  7983                           ;bsoc.c: 210:   set_load_relay_two(0);
  7984  01714E  0E00               	movlw	0
  7985  017150  6EE6               	movwf	postinc1,c
  7986  017152  EC67  F0E0         	call	_set_load_relay_two	;wreg free
  7987                           
  7988                           ;bsoc.c: 211:   if (TimerDone(TMR_ESR)) {
  7989  017156  0E0C               	movlw	12
  7990  017158  6EE6               	movwf	postinc1,c
  7991  01715A  ECCF  F0DD         	call	_TimerDone	;wreg free
  7992  01715E  5001               	movf	btemp^0,w,c
  7993  017160  B4D8               	btfsc	status,2,c
  7994  017162  D009               	goto	l10952
  7995                           
  7996                           ;bsoc.c: 212:    StartTimer(TMR_ESR, 10000);
  7997  017164  0E10               	movlw	16
  7998  017166  6EE6               	movwf	postinc1,c
  7999  017168  0E27               	movlw	39
  8000  01716A  6EE6               	movwf	postinc1,c
  8001  01716C  0E0C               	movlw	12
  8002  01716E  6EE6               	movwf	postinc1,c
  8003  017170  ECA9  F0DB         	call	_StartTimer	;wreg free
  8004                           
  8005                           ;bsoc.c: 213:   } else {
  8006  017174  D006               	goto	l10956
  8007  017176                     l10952:
  8008                           
  8009                           ;bsoc.c: 214:    return -2.0;
  8010  017176  0E00               	movlw	0
  8011  017178  6E01               	movwf	btemp^0,c
  8012  01717A  0E00               	movlw	0
  8013  01717C  6E02               	movwf	(btemp+1)^0,c
  8014  01717E  0E00               	movlw	0
  8015  017180  D066               	goto	L7
  8016  017182                     l10956:
  8017                           
  8018                           ;bsoc.c: 219:   update_adc_result();
  8019  017182  EC49  F0DC         	call	_update_adc_result	;wreg free
  8020                           
  8021                           ;bsoc.c: 220:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  8022  017186  0E00               	movlw	0
  8023  017188  6EE6               	movwf	postinc1,c
  8024  01718A  0E04               	movlw	4
  8025  01718C  6EE6               	movwf	postinc1,c
  8026  01718E  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  8027  017192  0060  F004  F815   	movff	btemp,_C+278	;volatile
  8028  017198  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  8029  01719E  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  8030  0171A4  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  8031  0171AA  D7CB               	goto	l10944
  8032  0171AC                     l10962:
  8033                           
  8034                           ;bsoc.c: 224:   set_load_relay_one(1);
  8035  0171AC  0E01               	movlw	1
  8036  0171AE  6EE6               	movwf	postinc1,c
  8037  0171B0  EC6F  F0E0         	call	_set_load_relay_one	;wreg free
  8038                           
  8039                           ;bsoc.c: 225:   if (TimerDone(TMR_ESR)) {
  8040  0171B4  0E0C               	movlw	12
  8041  0171B6  6EE6               	movwf	postinc1,c
  8042  0171B8  ECCF  F0DD         	call	_TimerDone	;wreg free
  8043  0171BC  5001               	movf	btemp^0,w,c
  8044  0171BE  B4D8               	btfsc	status,2,c
  8045  0171C0  D009               	goto	l10968
  8046                           
  8047                           ;bsoc.c: 226:    StartTimer(TMR_ESR, 10000);
  8048  0171C2  0E10               	movlw	16
  8049  0171C4  6EE6               	movwf	postinc1,c
  8050  0171C6  0E27               	movlw	39
  8051  0171C8  6EE6               	movwf	postinc1,c
  8052  0171CA  0E0C               	movlw	12
  8053  0171CC  6EE6               	movwf	postinc1,c
  8054  0171CE  ECA9  F0DB         	call	_StartTimer	;wreg free
  8055                           
  8056                           ;bsoc.c: 227:   } else {
  8057  0171D2  D006               	goto	l10972
  8058  0171D4                     l10968:
  8059                           
  8060                           ;bsoc.c: 228:    return -3.0;
  8061  0171D4  0E00               	movlw	0
  8062  0171D6  6E01               	movwf	btemp^0,c
  8063  0171D8  0E00               	movlw	0
  8064  0171DA  6E02               	movwf	(btemp+1)^0,c
  8065  0171DC  0E40               	movlw	64
  8066  0171DE  D037               	goto	L7
  8067  0171E0                     l10972:
  8068                           
  8069                           ;bsoc.c: 231:   update_adc_result();
  8070  0171E0  EC49  F0DC         	call	_update_adc_result	;wreg free
  8071                           
  8072                           ;bsoc.c: 232:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  8073  0171E4  0E00               	movlw	0
  8074  0171E6  6EE6               	movwf	postinc1,c
  8075  0171E8  0E04               	movlw	4
  8076  0171EA  6EE6               	movwf	postinc1,c
  8077  0171EC  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  8078  0171F0  0060  F004  F819   	movff	btemp,_C+282	;volatile
  8079  0171F6  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  8080  0171FC  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  8081  017202  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  8082                           
  8083                           ;bsoc.c: 233:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  8084  017208  0E00               	movlw	0
  8085  01720A  6EE6               	movwf	postinc1,c
  8086  01720C  0E00               	movlw	0
  8087  01720E  6EE6               	movwf	postinc1,c
  8088  017210  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  8089  017214  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  8090  01721A  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  8091  017220  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  8092  017226  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  8093  01722C  D78A               	goto	l10944
  8094  01722E                     l10980:
  8095                           
  8096                           ;bsoc.c: 237:   set_load_relay_two(1);
  8097  01722E  0E01               	movlw	1
  8098  017230  6EE6               	movwf	postinc1,c
  8099  017232  EC67  F0E0         	call	_set_load_relay_two	;wreg free
  8100                           
  8101                           ;bsoc.c: 238:   if (!TimerDone(TMR_ESR))
  8102  017236  0E0C               	movlw	12
  8103  017238  6EE6               	movwf	postinc1,c
  8104  01723A  ECCF  F0DD         	call	_TimerDone	;wreg free
  8105  01723E  5001               	movf	btemp^0,w,c
  8106  017240  A4D8               	btfss	status,2,c
  8107  017242  D008               	goto	l10988
  8108                           
  8109                           ;bsoc.c: 239:    return -4.0;
  8110  017244  0E00               	movlw	0
  8111  017246  6E01               	movwf	btemp^0,c
  8112  017248  0E00               	movlw	0
  8113  01724A  6E02               	movwf	(btemp+1)^0,c
  8114  01724C  0E80               	movlw	128
  8115  01724E                     L7:
  8116  01724E  6E03               	movwf	(btemp+2)^0,c
  8117  017250  0EC0               	movlw	192
  8118  017252  D0C7               	goto	L5
  8119  017254                     l10988:
  8120                           
  8121                           ;bsoc.c: 241:   update_adc_result();
  8122  017254  EC49  F0DC         	call	_update_adc_result	;wreg free
  8123                           
  8124                           ;bsoc.c: 242:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  8125  017258  0E00               	movlw	0
  8126  01725A  6EE6               	movwf	postinc1,c
  8127  01725C  0E04               	movlw	4
  8128  01725E  6EE6               	movwf	postinc1,c
  8129  017260  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  8130  017264  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  8131  01726A  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  8132  017270  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  8133  017276  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  8134                           
  8135                           ;bsoc.c: 243:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  8136  01727C  0E00               	movlw	0
  8137  01727E  6EE6               	movwf	postinc1,c
  8138  017280  0E00               	movlw	0
  8139  017282  6EE6               	movwf	postinc1,c
  8140  017284  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  8141  017288  0060  F004  F811   	movff	btemp,_C+274	;volatile
  8142  01728E  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  8143  017294  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  8144  01729A  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  8145                           
  8146                           ;bsoc.c: 245:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  8147  0172A0  EE22  F011         	lfsr	2,_C+274	;volatile
  8148  0172A4  006F FF7B FFE6     	movff	postinc2,postinc1
  8149  0172AA  006F FF7B FFE6     	movff	postinc2,postinc1
  8150  0172B0  006F FF7B FFE6     	movff	postinc2,postinc1
  8151  0172B6  006F FF7B FFE6     	movff	postinc2,postinc1
  8152  0172BC  EE22  F00D         	lfsr	2,_C+270	;volatile
  8153  0172C0  006F FF7B FFE6     	movff	postinc2,postinc1
  8154  0172C6  006F FF7B FFE6     	movff	postinc2,postinc1
  8155  0172CC  006F FF7B FFE6     	movff	postinc2,postinc1
  8156  0172D2  006F FF7B FFE6     	movff	postinc2,postinc1
  8157  0172D8  EC03  F0DB         	call	___flsub	;wreg free
  8158  0172DC  0060  F007  FFE6   	movff	btemp,postinc1
  8159  0172E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8160  0172E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8161  0172EE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8162  0172F4  EE22  F01D         	lfsr	2,_C+286	;volatile
  8163  0172F8  006F FF7B FFE6     	movff	postinc2,postinc1
  8164  0172FE  006F FF7B FFE6     	movff	postinc2,postinc1
  8165  017304  006F FF7B FFE6     	movff	postinc2,postinc1
  8166  01730A  006F FF7B FFE6     	movff	postinc2,postinc1
  8167  017310  EE22  F019         	lfsr	2,_C+282	;volatile
  8168  017314  006F FF7B FFE6     	movff	postinc2,postinc1
  8169  01731A  006F FF7B FFE6     	movff	postinc2,postinc1
  8170  017320  006F FF7B FFE6     	movff	postinc2,postinc1
  8171  017326  006F FF7B FFE6     	movff	postinc2,postinc1
  8172  01732C  EC03  F0DB         	call	___flsub	;wreg free
  8173  017330  0060  F007  FFE6   	movff	btemp,postinc1
  8174  017336  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8175  01733C  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8176  017342  0060  F013  FFE6   	movff	btemp+3,postinc1
  8177  017348  ECA0  F0A6         	call	___fldiv	;wreg free
  8178  01734C  0060  F007  FFE6   	movff	btemp,postinc1
  8179  017352  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8180  017358  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8181  01735E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8182  017364  EC5E  F0D3         	call	_fabsf	;wreg free
  8183  017368  0060  F004  F787   	movff	btemp,_C+136	;volatile
  8184  01736E  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  8185  017374  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  8186  01737A  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  8187                           
  8188                           ;bsoc.c: 246:   set_load_relay_one(0);
  8189  017380  0E00               	movlw	0
  8190  017382  6EE6               	movwf	postinc1,c
  8191  017384  EC6F  F0E0         	call	_set_load_relay_one	;wreg free
  8192                           
  8193                           ;bsoc.c: 247:   set_load_relay_two(0);
  8194  017388  0E00               	movlw	0
  8195  01738A  6EE6               	movwf	postinc1,c
  8196  01738C  EC67  F0E0         	call	_set_load_relay_two	;wreg free
  8197                           
  8198                           ;bsoc.c: 248:   esr_state = 0;
  8199  017390  6A40               	clrf	esr_check@esr_state^0,c
  8200                           
  8201                           ;bsoc.c: 249:   return C.esr;
  8202  017392  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  8203  017398  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  8204  01739E  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  8205  0173A4  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  8206  0173AA  D01C               	goto	l2087
  8207  0173AC                     l11010:
  8208  0173AC  5040               	movf	esr_check@esr_state^0,w,c
  8209  0173AE  6E0B               	movwf	(btemp+10)^0,c
  8210  0173B0  6A0C               	clrf	(btemp+11)^0,c
  8211                           
  8212                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8213                           ; Switch size 1, requested type "simple"
  8214                           ; Number of cases is 1, Range of values is 0 to 0
  8215                           ; switch strategies available:
  8216                           ; Name         Instructions Cycles
  8217                           ; simple_byte            4     3 (average)
  8218                           ;	Chosen strategy is simple_byte
  8219  0173B2  500C               	movf	(btemp+11)^0,w,c
  8220  0173B4  0A00               	xorlw	0	; case 0
  8221  0173B6  A4D8               	btfss	status,2,c
  8222  0173B8  D00D               	goto	l11012
  8223                           
  8224                           ; Switch size 1, requested type "simple"
  8225                           ; Number of cases is 4, Range of values is 0 to 3
  8226                           ; switch strategies available:
  8227                           ; Name         Instructions Cycles
  8228                           ; simple_byte           13     7 (average)
  8229                           ;	Chosen strategy is simple_byte
  8230  0173BA  500B               	movf	(btemp+10)^0,w,c
  8231  0173BC  0A00               	xorlw	0	; case 0
  8232  0173BE  B4D8               	btfsc	status,2,c
  8233  0173C0  D6B8               	goto	l10942
  8234  0173C2  0A01               	xorlw	1	; case 1
  8235  0173C4  B4D8               	btfsc	status,2,c
  8236  0173C6  D6BF               	goto	l10946
  8237  0173C8  0A03               	xorlw	3	; case 2
  8238  0173CA  B4D8               	btfsc	status,2,c
  8239  0173CC  D6EF               	goto	l10962
  8240  0173CE  0A01               	xorlw	1	; case 3
  8241  0173D0  B4D8               	btfsc	status,2,c
  8242  0173D2  D72D               	goto	l10980
  8243  0173D4                     l11012:
  8244                           
  8245                           ;bsoc.c: 254:  return -1.0;
  8246  0173D4  0E00               	movlw	0
  8247  0173D6  6E01               	movwf	btemp^0,c
  8248  0173D8  0E00               	movlw	0
  8249  0173DA  6E02               	movwf	(btemp+1)^0,c
  8250  0173DC  0E80               	movlw	128
  8251  0173DE  6E03               	movwf	(btemp+2)^0,c
  8252  0173E0  0EBF               	movlw	191
  8253  0173E2                     L5:
  8254  0173E2  6E04               	movwf	(btemp+3)^0,c
  8255  0173E4                     l2087:
  8256                           
  8257                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  8258  0173E4  52E5               	movf	postdec1,f,c
  8259  0173E6  0012               	return		;funcret
  8260  0173E8                     __end_of_esr_check:
  8261                           	opt callstack 0
  8262                           
  8263 ;; *************** function _update_adc_result *****************
  8264 ;; Defined at:
  8265 ;;		line 74 in file "daq.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;		None
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1  [STACK] _Bool 
  8272 ;; Registers used:
  8273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8283 ;;Total ram usage:        0 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:   17
  8286 ;; This function calls:
  8287 ;;		_StartTimer
  8288 ;;		_TimerDone
  8289 ;;		_check_adc_scan
  8290 ;;		_clear_adc_scan
  8291 ;;		_start_adc_scan
  8292 ;; This function is called by:
  8293 ;;		_esr_check
  8294 ;; This function uses a reentrant model
  8295 ;;
  8296                           
  8297                           	psect	text18
  8298  01B892                     __ptext18:
  8299                           	opt callstack 0
  8300  01B892                     _update_adc_result:
  8301                           	opt callstack 12
  8302                           
  8303                           ;daq.c: 76:  if (R.done) {
  8304                           
  8305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8306                           ;incstack = 0
  8307  01B892  0101               	movlb	1	; () banked
  8308  01B894  512F               	movf	(_R+47)& (0+255),w,b	;volatile
  8309  01B896  B4D8               	btfsc	status,2,c
  8310  01B898  0012               	return	
  8311                           
  8312                           ; BSR set to: 1
  8313                           ;daq.c: 77:   clear_adc_scan();
  8314  01B89A  ECE3  F0E0         	call	_clear_adc_scan	;wreg free
  8315                           
  8316                           ; BSR set to: 1
  8317                           ;daq.c: 78:   start_adc_scan();
  8318  01B89E  EC42  F0D8         	call	_start_adc_scan	;wreg free
  8319                           
  8320                           ;daq.c: 79:   StartTimer(TMR_ADC, 200);
  8321  01B8A2  0EC8               	movlw	200
  8322  01B8A4  6EE6               	movwf	postinc1,c
  8323  01B8A6  0E00               	movlw	0
  8324  01B8A8  6EE6               	movwf	postinc1,c
  8325  01B8AA  0E01               	movlw	1
  8326  01B8AC  6EE6               	movwf	postinc1,c
  8327  01B8AE  ECA9  F0DB         	call	_StartTimer	;wreg free
  8328  01B8B2                     l10520:
  8329  01B8B2  0E01               	movlw	1
  8330  01B8B4  6EE6               	movwf	postinc1,c
  8331  01B8B6  ECCF  F0DD         	call	_TimerDone	;wreg free
  8332  01B8BA  5001               	movf	btemp^0,w,c
  8333  01B8BC  A4D8               	btfss	status,2,c
  8334  01B8BE  0012               	return	
  8335  01B8C0  ECD3  F0E0         	call	_check_adc_scan	;wreg free
  8336  01B8C4  5001               	movf	btemp^0,w,c
  8337  01B8C6  A4D8               	btfss	status,2,c
  8338  01B8C8  0012               	return	
  8339  01B8CA  D7F3               	goto	l10520
  8340  01B8CC                     __end_of_update_adc_result:
  8341                           	opt callstack 0
  8342                           
  8343 ;; *************** function _start_adc_scan *****************
  8344 ;; Defined at:
  8345 ;;		line 35 in file "daq.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;		None
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;		None
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  1  [STACK] _Bool 
  8352 ;; Registers used:
  8353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8363 ;;Total ram usage:        0 bytes
  8364 ;; Hardware stack levels used:    1
  8365 ;; Hardware stack levels required when called:   16
  8366 ;; This function calls:
  8367 ;;		_ADCC_DischargeSampleCapacitor
  8368 ;;		_ADCC_SetADIInterruptHandler
  8369 ;;		_ADCC_SetADTIInterruptHandler
  8370 ;;		_ADCC_StartConversion
  8371 ;; This function is called by:
  8372 ;;		_main
  8373 ;;		_update_adc_result
  8374 ;; This function uses a reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text19
  8378  01B084                     __ptext19:
  8379                           	opt callstack 0
  8380  01B084                     _start_adc_scan:
  8381                           	opt callstack 14
  8382                           
  8383                           ;daq.c: 37:  if (R.done)
  8384                           
  8385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8386                           ;incstack = 0
  8387  01B084  0101               	movlb	1	; () banked
  8388  01B086  512F               	movf	(_R+47)& (0+255),w,b	;volatile
  8389  01B088  A4D8               	btfss	status,2,c
  8390  01B08A  0012               	return	
  8391                           
  8392                           ; BSR set to: 1
  8393                           ;daq.c: 40:  R.scan_index = 0;
  8394  01B08C  6B2C               	clrf	(_R+44)& (0+255),b	;volatile
  8395                           
  8396                           ; BSR set to: 1
  8397                           ;daq.c: 41:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  8398  01B08E  013A               	movlb	58	; () banked
  8399  01B090  5140               	movf	64,w,b	;volatile
  8400  01B092  006E F940  F001    	movff	14928,btemp	;volatile
  8401  01B098  6A02               	clrf	(btemp+1)^0,c
  8402  01B09A  0060  F004  F002   	movff	btemp,btemp+1
  8403  01B0A0  6A01               	clrf	btemp^0,c
  8404  01B0A2  2601               	addwf	btemp^0,f,c
  8405  01B0A4  0E00               	movlw	0
  8406  01B0A6  2202               	addwfc	(btemp+1)^0,f,c
  8407  01B0A8  0E77               	movlw	119
  8408  01B0AA  1401               	andwf	btemp^0,w,c
  8409  01B0AC  0101               	movlb	1	; () banked
  8410  01B0AE  6F2D               	movwf	(_R+45)& (0+255),b	;volatile
  8411  01B0B0  0E3C               	movlw	60
  8412  01B0B2  1402               	andwf	(btemp+1)^0,w,c
  8413  01B0B4  6F2E               	movwf	(_R+46)& (0+255),b	;volatile
  8414                           
  8415                           ; BSR set to: 1
  8416                           ;daq.c: 42:  ADCC_SetADIInterruptHandler(adc_int_handler);
  8417  01B0B6  0EEE               	movlw	low _adc_int_handler
  8418  01B0B8  6EE6               	movwf	postinc1,c
  8419  01B0BA  0EC1               	movlw	high _adc_int_handler
  8420  01B0BC  6EE6               	movwf	postinc1,c
  8421  01B0BE  0E01               	movlw	low (_adc_int_handler shr (0+16))
  8422  01B0C0  6EE6               	movwf	postinc1,c
  8423  01B0C2  EC97  F0DE         	call	_ADCC_SetADIInterruptHandler	;wreg free
  8424                           
  8425                           ;daq.c: 43:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  8426  01B0C6  0EE6               	movlw	low _adc_int_t_handler
  8427  01B0C8  6EE6               	movwf	postinc1,c
  8428  01B0CA  0EAD               	movlw	high _adc_int_t_handler
  8429  01B0CC  6EE6               	movwf	postinc1,c
  8430  01B0CE  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  8431  01B0D0  6EE6               	movwf	postinc1,c
  8432  01B0D2  EC83  F0DE         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  8433                           
  8434                           ;daq.c: 44:  ADCC_DischargeSampleCapacitor();
  8435  01B0D6  ECCF  F0E0         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  8436                           
  8437                           ; BSR set to: 62
  8438                           ;daq.c: 45:  ADCC_StartConversion(R.scan_index & 0xf);
  8439  01B0DA  0101               	movlb	1	; () banked
  8440  01B0DC  512C               	movf	(_R+44)& (0+255),w,b	;volatile
  8441  01B0DE  0B0F               	andlw	15
  8442  01B0E0  6EE6               	movwf	postinc1,c
  8443  01B0E2  EC5E  F0E0         	call	_ADCC_StartConversion	;wreg free
  8444                           
  8445                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8446  01B0E6  0012               	return		;funcret
  8447  01B0E8                     __end_of_start_adc_scan:
  8448                           	opt callstack 0
  8449                           
  8450 ;; *************** function _ADCC_StartConversion *****************
  8451 ;; Defined at:
  8452 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;  channel         1  [STACK] enum E16136
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;		None
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  1  [STACK] void 
  8459 ;; Registers used:
  8460 ;;		fsr1l, fsr1h
  8461 ;; Tracked objects:
  8462 ;;		On entry : 3F/1
  8463 ;;		On exit  : 3F/3E
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8470 ;;Total ram usage:        0 bytes
  8471 ;; Hardware stack levels used:    1
  8472 ;; Hardware stack levels required when called:   15
  8473 ;; This function calls:
  8474 ;;		Nothing
  8475 ;; This function is called by:
  8476 ;;		_start_adc_scan
  8477 ;;		_adc_int_t_handler
  8478 ;; This function uses a reentrant model
  8479 ;;
  8480                           
  8481                           	psect	text20
  8482  01C0BC                     __ptext20:
  8483                           	opt callstack 0
  8484  01C0BC                     _ADCC_StartConversion:
  8485                           	opt callstack 0
  8486                           
  8487                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8488                           ;stkvar	_channel @ sp[(0)+-1]
  8489                           
  8490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8491                           ;incstack = 0
  8492 ;; hardware stack exceeded
  8493  01C0BC  0EFF               	movlw	-1
  8494  01C0BE  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8495                           
  8496                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8497  01C0C4  013E               	movlb	62	; () banked
  8498  01C0C6  8FF8               	bsf	248,7,b	;volatile
  8499                           
  8500                           ; BSR set to: 62
  8501                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8502  01C0C8  81F8               	bsf	248,0,b	;volatile
  8503                           
  8504                           ; BSR set to: 62
  8505                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8506  01C0CA  52E5               	movf	postdec1,f,c
  8507  01C0CC  0012               	return		;funcret
  8508  01C0CE                     __end_of_ADCC_StartConversion:
  8509                           	opt callstack 0
  8510                           
  8511 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8512 ;; Defined at:
  8513 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;		None
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;		None
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  1  [STACK] void 
  8520 ;; Registers used:
  8521 ;;		wreg, status,2
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/1
  8524 ;;		On exit  : 3F/3E
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8531 ;;Total ram usage:        0 bytes
  8532 ;; Hardware stack levels used:    1
  8533 ;; Hardware stack levels required when called:   15
  8534 ;; This function calls:
  8535 ;;		Nothing
  8536 ;; This function is called by:
  8537 ;;		_start_adc_scan
  8538 ;;		_adc_int_t_handler
  8539 ;; This function uses a reentrant model
  8540 ;;
  8541                           
  8542                           	psect	text21
  8543  01C19E                     __ptext21:
  8544                           	opt callstack 0
  8545  01C19E                     _ADCC_DischargeSampleCapacitor:
  8546                           	opt callstack 0
  8547                           
  8548                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8549                           
  8550                           ; BSR set to: 62
  8551                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8552                           ;incstack = 0
  8553 ;; hardware stack exceeded
  8554  01C19E  0E3B               	movlw	59
  8555  01C1A0  013E               	movlb	62	; () banked
  8556  01C1A2  6FF1               	movwf	241,b	;volatile
  8557                           
  8558                           ; BSR set to: 62
  8559                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8560  01C1A4  0012               	return		;funcret
  8561  01C1A6                     __end_of_ADCC_DischargeSampleCapacitor:
  8562                           	opt callstack 0
  8563                           
  8564 ;; *************** function _clear_adc_scan *****************
  8565 ;; Defined at:
  8566 ;;		line 66 in file "daq.c"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;		None
  8569 ;; Auto vars:     Size  Location     Type
  8570 ;;		None
  8571 ;; Return value:  Size  Location     Type
  8572 ;;                  1  [STACK] void 
  8573 ;; Registers used:
  8574 ;;		None
  8575 ;; Tracked objects:
  8576 ;;		On entry : 0/0
  8577 ;;		On exit  : 3F/1
  8578 ;;		Unchanged: 0/0
  8579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8584 ;;Total ram usage:        0 bytes
  8585 ;; Hardware stack levels used:    1
  8586 ;; Hardware stack levels required when called:   15
  8587 ;; This function calls:
  8588 ;;		Nothing
  8589 ;; This function is called by:
  8590 ;;		_main
  8591 ;;		_update_adc_result
  8592 ;; This function uses a reentrant model
  8593 ;;
  8594                           
  8595                           	psect	text22
  8596  01C1C6                     __ptext22:
  8597                           	opt callstack 0
  8598  01C1C6                     _clear_adc_scan:
  8599                           	opt callstack 13
  8600                           
  8601                           ;daq.c: 68:  R.done = 0;
  8602                           
  8603                           ; BSR set to: 62
  8604                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8605                           ;incstack = 0
  8606  01C1C6  0101               	movlb	1	; () banked
  8607  01C1C8  6B2F               	clrf	(_R+47)& (0+255),b	;volatile
  8608                           
  8609                           ; BSR set to: 1
  8610                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8611  01C1CA  0012               	return		;funcret
  8612  01C1CC                     __end_of_clear_adc_scan:
  8613                           	opt callstack 0
  8614                           
  8615 ;; *************** function _check_adc_scan *****************
  8616 ;; Defined at:
  8617 ;;		line 58 in file "daq.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;		None
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;		None
  8622 ;; Return value:  Size  Location     Type
  8623 ;;                  1  [STACK] _Bool 
  8624 ;; Registers used:
  8625 ;;		btemp
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/1
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8635 ;;Total ram usage:        0 bytes
  8636 ;; Hardware stack levels used:    1
  8637 ;; Hardware stack levels required when called:   15
  8638 ;; This function calls:
  8639 ;;		Nothing
  8640 ;; This function is called by:
  8641 ;;		_main
  8642 ;;		_update_adc_result
  8643 ;; This function uses a reentrant model
  8644 ;;
  8645                           
  8646                           	psect	text23
  8647  01C1A6                     __ptext23:
  8648                           	opt callstack 0
  8649  01C1A6                     _check_adc_scan:
  8650                           	opt callstack 13
  8651                           
  8652                           ;daq.c: 60:  return R.done;
  8653                           
  8654                           ; BSR set to: 1
  8655                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8656                           ;incstack = 0
  8657  01C1A6  0060  F4BC  F001   	movff	_R+47,btemp	;volatile
  8658                           
  8659                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8660  01C1AC  0012               	return		;funcret
  8661  01C1AE                     __end_of_check_adc_scan:
  8662                           	opt callstack 0
  8663                           
  8664 ;; *************** function _set_load_relay_two *****************
  8665 ;; Defined at:
  8666 ;;		line 130 in file "mbmc.c"
  8667 ;; Parameters:    Size  Location     Type
  8668 ;;  mode            1  [STACK] _Bool 
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;		None
  8671 ;; Return value:  Size  Location     Type
  8672 ;;                  1  [STACK] void 
  8673 ;; Registers used:
  8674 ;;		wreg, fsr1l, fsr1h
  8675 ;; Tracked objects:
  8676 ;;		On entry : 0/0
  8677 ;;		On exit  : 0/0
  8678 ;;		Unchanged: 0/0
  8679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8684 ;;Total ram usage:        0 bytes
  8685 ;; Hardware stack levels used:    1
  8686 ;; Hardware stack levels required when called:   15
  8687 ;; This function calls:
  8688 ;;		Nothing
  8689 ;; This function is called by:
  8690 ;;		_main
  8691 ;;		_esr_check
  8692 ;; This function uses a reentrant model
  8693 ;;
  8694                           
  8695                           	psect	text24
  8696  01C0CE                     __ptext24:
  8697                           	opt callstack 0
  8698  01C0CE                     _set_load_relay_two:
  8699                           	opt callstack 15
  8700                           
  8701                           ;mbmc.c: 130: void set_load_relay_two(_Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LATDbits.
      +                          LATD5 = mode;
  8702                           ;stkvar	_mode @ sp[(0)+-1]
  8703                           
  8704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8705                           ;incstack = 0
  8706  01C0CE  0EFF               	movlw	-1
  8707  01C0D0  B0E3               	btfsc	plusw1,0,c
  8708  01C0D2  D002               	bra	u9525
  8709  01C0D4  9ABD               	bcf	189,5,c	;volatile
  8710  01C0D6  D001               	bra	u9526
  8711  01C0D8                     u9525:
  8712  01C0D8  8ABD               	bsf	189,5,c	;volatile
  8713  01C0DA                     u9526:
  8714                           
  8715                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8716  01C0DA  52E5               	movf	postdec1,f,c
  8717  01C0DC  0012               	return		;funcret
  8718  01C0DE                     __end_of_set_load_relay_two:
  8719                           	opt callstack 0
  8720                           
  8721 ;; *************** function _set_load_relay_one *****************
  8722 ;; Defined at:
  8723 ;;		line 125 in file "mbmc.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;  mode            1  [STACK] _Bool 
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;		None
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  1  [STACK] void 
  8730 ;; Registers used:
  8731 ;;		wreg, fsr1l, fsr1h
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8741 ;;Total ram usage:        0 bytes
  8742 ;; Hardware stack levels used:    1
  8743 ;; Hardware stack levels required when called:   15
  8744 ;; This function calls:
  8745 ;;		Nothing
  8746 ;; This function is called by:
  8747 ;;		_main
  8748 ;;		_esr_check
  8749 ;; This function uses a reentrant model
  8750 ;;
  8751                           
  8752                           	psect	text25
  8753  01C0DE                     __ptext25:
  8754                           	opt callstack 0
  8755  01C0DE                     _set_load_relay_one:
  8756                           	opt callstack 15
  8757                           
  8758                           ;mbmc.c: 125: void set_load_relay_one(_Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LATDbits.
      +                          LATD4 = mode;
  8759                           ;stkvar	_mode @ sp[(0)+-1]
  8760                           
  8761                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8762                           ;incstack = 0
  8763  01C0DE  0EFF               	movlw	-1
  8764  01C0E0  B0E3               	btfsc	plusw1,0,c
  8765  01C0E2  D002               	bra	u9515
  8766  01C0E4  98BD               	bcf	189,4,c	;volatile
  8767  01C0E6  D001               	bra	u9516
  8768  01C0E8                     u9515:
  8769  01C0E8  88BD               	bsf	189,4,c	;volatile
  8770  01C0EA                     u9516:
  8771                           
  8772                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8773  01C0EA  52E5               	movf	postdec1,f,c
  8774  01C0EC  0012               	return		;funcret
  8775  01C0EE                     __end_of_set_load_relay_one:
  8776                           	opt callstack 0
  8777                           
  8778 ;; *************** function _eaDogM_WriteCommand *****************
  8779 ;; Defined at:
  8780 ;;		line 391 in file "eadog.c"
  8781 ;; Parameters:    Size  Location     Type
  8782 ;;  cmd             1  [STACK] const unsigned char 
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;		None
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  1  [STACK] void 
  8787 ;; Registers used:
  8788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8789 ;; Tracked objects:
  8790 ;;		On entry : 3F/3D
  8791 ;;		On exit  : 3F/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8798 ;;Total ram usage:        0 bytes
  8799 ;; Hardware stack levels used:    1
  8800 ;; Hardware stack levels required when called:   26
  8801 ;; This function calls:
  8802 ;;		_send_lcd_cmd_dma
  8803 ;; This function is called by:
  8804 ;;		_main
  8805 ;; This function uses a reentrant model
  8806 ;;
  8807                           
  8808                           	psect	text26
  8809  01C11C                     __ptext26:
  8810                           	opt callstack 0
  8811  01C11C                     _eaDogM_WriteCommand:
  8812                           	opt callstack 4
  8813                           
  8814                           ;eadog.c: 391: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 392: {;eadog.c: 393:
      +                            send_lcd_cmd_dma(cmd);
  8815                           ;stkvar	_cmd @ sp[(0)+-1]
  8816                           
  8817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8818                           ;incstack = 0
  8819  01C11C  0EFF               	movlw	-1
  8820  01C11E  50E3               	movf	plusw1,w,c
  8821  01C120  6EE6               	movwf	postinc1,c
  8822  01C122  ECB7  F0DF         	call	_send_lcd_cmd_dma	;wreg free
  8823                           
  8824                           ; BSR set to: 0
  8825                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8826  01C126  52E5               	movf	postdec1,f,c
  8827  01C128  0012               	return		;funcret
  8828  01C12A                     __end_of_eaDogM_WriteCommand:
  8829                           	opt callstack 0
  8830                           
  8831 ;; *************** function _convert_adc_data *****************
  8832 ;; Defined at:
  8833 ;;		line 51 in file "mbmc.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;		None
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;  i               1  [STACK] unsigned char 
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  1  [STACK] void 
  8840 ;; Registers used:
  8841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/1
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8851 ;;Total ram usage:        0 bytes
  8852 ;; Hardware stack levels used:    1
  8853 ;; Hardware stack levels required when called:   18
  8854 ;; This function calls:
  8855 ;;		_conv_raw_result
  8856 ;;		_lp_filter
  8857 ;; This function is called by:
  8858 ;;		_main
  8859 ;; This function uses a reentrant model
  8860 ;;
  8861                           
  8862                           	psect	text27
  8863  01A556                     __ptext27:
  8864                           	opt callstack 0
  8865  01A556                     _convert_adc_data:
  8866                           	opt callstack 0
  8867                           
  8868                           ; BSR set to: 0
  8869                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8870  01A556  52E6               	movf	postinc1,f,c
  8871                           
  8872                           ;mbmc.c: 53:  uint8_t i = 0;
  8873                           ;stkvar	_i @ sp[(-1)+0]
  8874                           
  8875                           ;incstack = 0
  8876  01A558  0EFF               	movlw	-1
  8877  01A55A  6AE3               	clrf	plusw1,c
  8878  01A55C                     l11022:
  8879                           
  8880                           ;mbmc.c: 56:   if (V.calib) {
  8881  01A55C  0101               	movlb	1	; () banked
  8882  01A55E  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
  8883  01A560  B4D8               	btfsc	status,2,c
  8884  01A562  D01B               	goto	l11026
  8885                           
  8886                           ; BSR set to: 1
  8887                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8888  01A564  0E01               	movlw	1
  8889  01A566  6EE6               	movwf	postinc1,c
  8890                           
  8891                           ;stkvar	_i @ sp[(-2)+0]
  8892  01A568  0EFE               	movlw	-2
  8893  01A56A  50E3               	movf	plusw1,w,c
  8894  01A56C  6EE6               	movwf	postinc1,c
  8895  01A56E  0E01               	movlw	1
  8896  01A570  6EE6               	movwf	postinc1,c
  8897                           
  8898                           ;stkvar	_i @ sp[(-4)+0]
  8899  01A572  0EFC               	movlw	-4
  8900  01A574  50E3               	movf	plusw1,w,c
  8901  01A576  6EE6               	movwf	postinc1,c
  8902  01A578  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  8903  01A57C  0060  F007  FFE6   	movff	btemp,postinc1
  8904  01A582  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8905  01A588  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8906  01A58E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8907  01A594  EC2B  F0C3         	call	_lp_filter	;wreg free
  8908  01A598  D01A               	goto	L8
  8909  01A59A                     l11026:
  8910                           
  8911                           ; BSR set to: 1
  8912                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8913  01A59A  0E00               	movlw	0
  8914  01A59C  6EE6               	movwf	postinc1,c
  8915                           
  8916                           ;stkvar	_i @ sp[(-2)+0]
  8917  01A59E  0EFE               	movlw	-2
  8918  01A5A0  50E3               	movf	plusw1,w,c
  8919  01A5A2  6EE6               	movwf	postinc1,c
  8920  01A5A4  0E00               	movlw	0
  8921  01A5A6  6EE6               	movwf	postinc1,c
  8922                           
  8923                           ;stkvar	_i @ sp[(-4)+0]
  8924  01A5A8  0EFC               	movlw	-4
  8925  01A5AA  50E3               	movf	plusw1,w,c
  8926  01A5AC  6EE6               	movwf	postinc1,c
  8927  01A5AE  EC5D  F0A9         	call	_conv_raw_result	;wreg free
  8928  01A5B2  0060  F007  FFE6   	movff	btemp,postinc1
  8929  01A5B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8930  01A5BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8931  01A5C4  0060  F013  FFE6   	movff	btemp+3,postinc1
  8932  01A5CA  EC2B  F0C3         	call	_lp_filter	;wreg free
  8933  01A5CE                     L8:
  8934                           
  8935                           ;stkvar	_i @ sp[(-1)+0]
  8936  01A5CE  0EFF               	movlw	-1
  8937  01A5D0  50E3               	movf	plusw1,w,c
  8938  01A5D2  0D04               	mullw	4
  8939  01A5D4  0EFF               	movlw	low _C
  8940  01A5D6  24F3               	addwf	243,w,c
  8941  01A5D8  6ED9               	movwf	fsr2l,c
  8942  01A5DA  0E06               	movlw	high _C
  8943  01A5DC  20F4               	addwfc	prodh,w,c
  8944  01A5DE  6EDA               	movwf	fsr2h,c
  8945  01A5E0  0060  F007  FFDE   	movff	btemp,postinc2
  8946  01A5E6  0060  F00B  FFDE   	movff	btemp+1,postinc2
  8947  01A5EC  0060  F00F  FFDE   	movff	btemp+2,postinc2
  8948  01A5F2  0060  F013  FFDE   	movff	btemp+3,postinc2
  8949                           
  8950                           ;mbmc.c: 61:  } while (++i < 16);
  8951                           ;stkvar	_i @ sp[(-1)+0]
  8952  01A5F8  0EFF               	movlw	-1
  8953  01A5FA  2AE3               	incf	plusw1,f,c
  8954  01A5FC  0EFF               	movlw	-1
  8955  01A5FE  006F FF8C  F001    	movff	plusw1,btemp
  8956  01A604  0E0F               	movlw	15
  8957  01A606  6401               	cpfsgt	btemp^0,c
  8958  01A608  D7A9               	goto	l11022
  8959                           
  8960                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8961  01A60A  52E5               	movf	postdec1,f,c
  8962  01A60C  0012               	return		;funcret
  8963  01A60E                     __end_of_convert_adc_data:
  8964                           	opt callstack 0
  8965                           
  8966 ;; *************** function _clear_hid_pflags *****************
  8967 ;; Defined at:
  8968 ;;		line 51 in file "hid.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;  h               1  [STACK] PTR struct H_data
  8971 ;;		 -> H(7), 
  8972 ;; Auto vars:     Size  Location     Type
  8973 ;;		None
  8974 ;; Return value:  Size  Location     Type
  8975 ;;                  1  [STACK] void 
  8976 ;; Registers used:
  8977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8978 ;; Tracked objects:
  8979 ;;		On entry : 3F/0
  8980 ;;		On exit  : 0/0
  8981 ;;		Unchanged: 0/0
  8982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8987 ;;Total ram usage:        0 bytes
  8988 ;; Hardware stack levels used:    1
  8989 ;; Hardware stack levels required when called:   15
  8990 ;; This function calls:
  8991 ;;		Nothing
  8992 ;; This function is called by:
  8993 ;;		_main
  8994 ;; This function uses a reentrant model
  8995 ;;
  8996                           
  8997                           	psect	text28
  8998  01BDF4                     __ptext28:
  8999                           	opt callstack 0
  9000  01BDF4                     _clear_hid_pflags:
  9001                           	opt callstack 15
  9002                           
  9003                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  9004                           ;stkvar	_h @ sp[(0)+-1]
  9005                           
  9006                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9007                           ;incstack = 0
  9008  01BDF4  0EFF               	movlw	-1
  9009  01BDF6  50E3               	movf	plusw1,w,c
  9010  01BDF8  6ED9               	movwf	fsr2l,c
  9011  01BDFA  6ADA               	clrf	fsr2h,c
  9012  01BDFC  0E03               	movlw	3
  9013  01BDFE  26D9               	addwf	fsr2l,f,c
  9014  01BE00  0E00               	movlw	0
  9015  01BE02  6EDF               	movwf	indf2,c
  9016                           
  9017                           ;hid.c: 54:  h->enter_p = SW_OFF;
  9018                           ;stkvar	_h @ sp[(0)+-1]
  9019  01BE04  0EFF               	movlw	-1
  9020  01BE06  50E3               	movf	plusw1,w,c
  9021  01BE08  6ED9               	movwf	fsr2l,c
  9022  01BE0A  6ADA               	clrf	fsr2h,c
  9023  01BE0C  0E05               	movlw	5
  9024  01BE0E  26D9               	addwf	fsr2l,f,c
  9025  01BE10  0E00               	movlw	0
  9026  01BE12  6EDF               	movwf	indf2,c
  9027                           
  9028                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9029  01BE14  52E5               	movf	postdec1,f,c
  9030  01BE16  0012               	return		;funcret
  9031  01BE18                     __end_of_clear_hid_pflags:
  9032                           	opt callstack 0
  9033                           
  9034 ;; *************** function _check_help *****************
  9035 ;; Defined at:
  9036 ;;		line 40 in file "mconfig.c"
  9037 ;; Parameters:    Size  Location     Type
  9038 ;;  flipper         1  [STACK] const _Bool 
  9039 ;; Auto vars:     Size  Location     Type
  9040 ;;  estatus         1    0        _Bool 
  9041 ;; Return value:  Size  Location     Type
  9042 ;;                  1  [STACK] _Bool 
  9043 ;; Registers used:
  9044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9045 ;; Tracked objects:
  9046 ;;		On entry : 3F/1
  9047 ;;		On exit  : 0/0
  9048 ;;		Unchanged: 0/0
  9049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9054 ;;Total ram usage:        0 bytes
  9055 ;; Hardware stack levels used:    1
  9056 ;; Hardware stack levels required when called:   28
  9057 ;; This function calls:
  9058 ;;		_StartTimer
  9059 ;;		_TimerDone
  9060 ;;		_display_help
  9061 ;;		_display_info
  9062 ;;		_get_vterm_ptr
  9063 ;;		_help_button
  9064 ;;		_mode_lamp_bright
  9065 ;;		_mode_lamp_dim
  9066 ;;		_set_display_info
  9067 ;;		_set_temp_display_help
  9068 ;;		_set_vterm
  9069 ;;		_sprintf
  9070 ;;		_update_lcd
  9071 ;;		_vterm_dump
  9072 ;; This function is called by:
  9073 ;;		_main
  9074 ;; This function uses a reentrant model
  9075 ;;
  9076                           
  9077                           	psect	text29
  9078  018240                     __ptext29:
  9079                           	opt callstack 0
  9080  018240                     _check_help:
  9081                           	opt callstack 2
  9082                           
  9083                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  9084                           
  9085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9086                           ;incstack = 0
  9087  018240  EC66  F0DC         	call	_help_button	;wreg free
  9088  018244  5001               	movf	btemp^0,w,c
  9089  018246  B4D8               	btfsc	status,2,c
  9090  018248  D0D0               	goto	l13026
  9091  01824A  ECD7  F0E0         	call	_display_info	;wreg free
  9092  01824E  0401               	decf	btemp^0,w,c
  9093  018250  B4D8               	btfsc	status,2,c
  9094  018252  D0CB               	goto	l13026
  9095                           
  9096                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  9097  018254  0EDC               	movlw	220
  9098  018256  6EE6               	movwf	postinc1,c
  9099  018258  0E05               	movlw	5
  9100  01825A  6EE6               	movwf	postinc1,c
  9101  01825C  0E0B               	movlw	11
  9102  01825E  6EE6               	movwf	postinc1,c
  9103  018260  ECA9  F0DB         	call	_StartTimer	;wreg free
  9104                           
  9105                           ;mconfig.c: 48:   if (V.debug)
  9106  018264  0101               	movlb	1	; () banked
  9107  018266  B3CB               	btfsc	(_V+155)& (0+255),1,b	;volatile
  9108                           
  9109                           ; BSR set to: 1
  9110                           ;mconfig.c: 49:    vterm_dump();
  9111  018268  EC2D  F0CB         	call	_vterm_dump	;wreg free
  9112                           
  9113                           ;mconfig.c: 51:   set_vterm(1);
  9114  01826C  0E01               	movlw	1
  9115  01826E  6EE6               	movwf	postinc1,c
  9116  018270  ECC6  F0DF         	call	_set_vterm	;wreg free
  9117                           
  9118                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  9119  018274  ECD7  F0E0         	call	_display_info	;wreg free
  9120  018278  5001               	movf	btemp^0,w,c
  9121  01827A  6EE6               	movwf	postinc1,c
  9122  01827C  EC77  F0E0         	call	_set_temp_display_help	;wreg free
  9123                           
  9124                           ; BSR set to: 1
  9125                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  9126  018280  0E01               	movlw	1
  9127  018282  6EE6               	movwf	postinc1,c
  9128  018284  ECD5  F0DF         	call	_set_display_info	;wreg free
  9129                           
  9130                           ;mconfig.c: 54:   if (flipper) {
  9131                           ;stkvar	_flipper @ sp[(0)+-1]
  9132  018288  0EFF               	movlw	-1
  9133  01828A  50E3               	movf	plusw1,w,c
  9134  01828C  B4D8               	btfsc	status,2,c
  9135  01828E  D019               	goto	l13012
  9136                           
  9137                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  9138  018290  0EB3               	movlw	low STR_45
  9139  018292  6EE6               	movwf	postinc1,c
  9140  018294  0EFF               	movlw	high STR_45
  9141  018296  6EE6               	movwf	postinc1,c
  9142  018298  0E9F               	movlw	low STR_47
  9143  01829A  6EE6               	movwf	postinc1,c
  9144  01829C  0EFE               	movlw	high STR_47
  9145  01829E  6EE6               	movwf	postinc1,c
  9146  0182A0  0E01               	movlw	1
  9147  0182A2  6EE6               	movwf	postinc1,c
  9148  0182A4  0E00               	movlw	0
  9149  0182A6  6EE6               	movwf	postinc1,c
  9150  0182A8  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  9151  0182AC  0060  F007  FFE6   	movff	btemp,postinc1
  9152  0182B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9153  0182B8  0E06               	movlw	6
  9154  0182BA  6EE6               	movwf	postinc1,c
  9155  0182BC  EC12  F0CF         	call	_sprintf	;wreg free
  9156                           
  9157                           ;mconfig.c: 56:   } else {
  9158  0182C0  D018               	goto	l1673
  9159  0182C2                     l13012:
  9160                           
  9161                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  9162  0182C2  0EC9               	movlw	low STR_46
  9163  0182C4  6EE6               	movwf	postinc1,c
  9164  0182C6  0EFF               	movlw	high STR_46
  9165  0182C8  6EE6               	movwf	postinc1,c
  9166  0182CA  0E9F               	movlw	low STR_47
  9167  0182CC  6EE6               	movwf	postinc1,c
  9168  0182CE  0EFE               	movlw	high STR_47
  9169  0182D0  6EE6               	movwf	postinc1,c
  9170  0182D2  0E01               	movlw	1
  9171  0182D4  6EE6               	movwf	postinc1,c
  9172  0182D6  0E00               	movlw	0
  9173  0182D8  6EE6               	movwf	postinc1,c
  9174  0182DA  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  9175  0182DE  0060  F007  FFE6   	movff	btemp,postinc1
  9176  0182E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9177  0182EA  0E06               	movlw	6
  9178  0182EC  6EE6               	movwf	postinc1,c
  9179  0182EE  EC12  F0CF         	call	_sprintf	;wreg free
  9180  0182F2                     l1673:
  9181                           
  9182                           ; BSR set to: 0
  9183                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  9184  0182F2  0101               	movlb	1	; () banked
  9185  0182F4  39CB               	swapf	(_V+155)& (0+255),w,b	;volatile
  9186  0182F6  32E8               	rrcf	wreg,f,c
  9187  0182F8  32E8               	rrcf	wreg,f,c
  9188  0182FA  0B03               	andlw	3
  9189  0182FC  0D24               	mullw	36
  9190  0182FE  0E12               	movlw	18
  9191  018300  26F3               	addwf	243,f,c
  9192  018302  0E00               	movlw	0
  9193  018304  22F4               	addwfc	244,f,c
  9194  018306  0E05               	movlw	low _T
  9195  018308  6E0B               	movwf	(btemp+10)^0,c
  9196  01830A  0EFB               	movlw	high _T
  9197  01830C  6E0C               	movwf	(btemp+11)^0,c
  9198  01830E  50F3               	movf	243,w,c
  9199  018310  260B               	addwf	(btemp+10)^0,f,c
  9200  018312  50F4               	movf	244,w,c
  9201  018314  220C               	addwfc	(btemp+11)^0,f,c
  9202  018316  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9203  01831C  0060  F033  FFE6   	movff	btemp+11,postinc1
  9204  018322  0EBF               	movlw	low STR_49
  9205  018324  6EE6               	movwf	postinc1,c
  9206  018326  0EFF               	movlw	high STR_49
  9207  018328  6EE6               	movwf	postinc1,c
  9208  01832A  0E01               	movlw	1
  9209  01832C  6EE6               	movwf	postinc1,c
  9210  01832E  0E01               	movlw	1
  9211  018330  6EE6               	movwf	postinc1,c
  9212  018332  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  9213  018336  0060  F007  FFE6   	movff	btemp,postinc1
  9214  01833C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9215  018342  0E06               	movlw	6
  9216  018344  6EE6               	movwf	postinc1,c
  9217  018346  EC12  F0CF         	call	_sprintf	;wreg free
  9218                           
  9219                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  9220  01834A  0101               	movlb	1	; () banked
  9221  01834C  39CB               	swapf	(_V+155)& (0+255),w,b	;volatile
  9222  01834E  32E8               	rrcf	wreg,f,c
  9223  018350  32E8               	rrcf	wreg,f,c
  9224  018352  0B03               	andlw	3
  9225  018354  0D24               	mullw	36
  9226  018356  0E05               	movlw	low _T
  9227  018358  6E0B               	movwf	(btemp+10)^0,c
  9228  01835A  0EFB               	movlw	high _T
  9229  01835C  6E0C               	movwf	(btemp+11)^0,c
  9230  01835E  50F3               	movf	243,w,c
  9231  018360  260B               	addwf	(btemp+10)^0,f,c
  9232  018362  50F4               	movf	244,w,c
  9233  018364  220C               	addwfc	(btemp+11)^0,f,c
  9234  018366  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9235  01836C  0060  F033  FFE6   	movff	btemp+11,postinc1
  9236  018372  0EBF               	movlw	low STR_49
  9237  018374  6EE6               	movwf	postinc1,c
  9238  018376  0EFF               	movlw	high STR_49
  9239  018378  6EE6               	movwf	postinc1,c
  9240  01837A  0E01               	movlw	1
  9241  01837C  6EE6               	movwf	postinc1,c
  9242  01837E  0E02               	movlw	2
  9243  018380  6EE6               	movwf	postinc1,c
  9244  018382  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  9245  018386  0060  F007  FFE6   	movff	btemp,postinc1
  9246  01838C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9247  018392  0E06               	movlw	6
  9248  018394  6EE6               	movwf	postinc1,c
  9249  018396  EC12  F0CF         	call	_sprintf	;wreg free
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;mconfig.c: 61:   V.help_id++;
  9253  01839A  EE20  F1CB         	lfsr	2,_V+155	;volatile
  9254  01839E  38DF               	swapf	223,w,c
  9255  0183A0  6E0C               	movwf	(btemp+11)^0,c
  9256  0183A2  320C               	rrcf	(btemp+11)^0,f,c
  9257  0183A4  300C               	rrcf	(btemp+11)^0,w,c
  9258  0183A6  0B03               	andlw	3
  9259  0183A8  6E0C               	movwf	(btemp+11)^0,c
  9260  0183AA  2A0C               	incf	(btemp+11)^0,f,c
  9261  0183AC  3A0C               	swapf	(btemp+11)^0,f,c
  9262  0183AE  360C               	rlcf	(btemp+11)^0,f,c
  9263  0183B0  360C               	rlcf	(btemp+11)^0,f,c
  9264  0183B2  50DF               	movf	223,w,c
  9265  0183B4  180C               	xorwf	(btemp+11)^0,w,c
  9266  0183B6  0B3F               	andlw	-193
  9267  0183B8  180C               	xorwf	(btemp+11)^0,w,c
  9268  0183BA  6EDF               	movwf	223,c
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  9272  0183BC  0EB8               	movlw	184
  9273  0183BE  6EE6               	movwf	postinc1,c
  9274  0183C0  0E0B               	movlw	11
  9275  0183C2  6EE6               	movwf	postinc1,c
  9276  0183C4  0E09               	movlw	9
  9277  0183C6  6EE6               	movwf	postinc1,c
  9278  0183C8  ECA9  F0DB         	call	_StartTimer	;wreg free
  9279                           
  9280                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  9281  0183CC  0EB8               	movlw	184
  9282  0183CE  6EE6               	movwf	postinc1,c
  9283  0183D0  0E0B               	movlw	11
  9284  0183D2  6EE6               	movwf	postinc1,c
  9285  0183D4  0E07               	movlw	7
  9286  0183D6  6EE6               	movwf	postinc1,c
  9287  0183D8  ECA9  F0DB         	call	_StartTimer	;wreg free
  9288                           
  9289                           ;mconfig.c: 64:   mode_lamp_bright();
  9290  0183DC  EC95  F0E0         	call	_mode_lamp_bright	;wreg free
  9291                           
  9292                           ;mconfig.c: 65:   update_lcd(1);
  9293  0183E0  0E01               	movlw	1
  9294  0183E2  6EE6               	movwf	postinc1,c
  9295  0183E4  EC8A  F0CE         	call	_update_lcd	;wreg free
  9296                           
  9297                           ;mconfig.c: 67:  } else {
  9298  0183E8  D032               	goto	l1674
  9299  0183EA                     l13026:
  9300                           
  9301                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  9302  0183EA  0E09               	movlw	9
  9303  0183EC  6EE6               	movwf	postinc1,c
  9304  0183EE  ECCF  F0DD         	call	_TimerDone	;wreg free
  9305  0183F2  5001               	movf	btemp^0,w,c
  9306  0183F4  B4D8               	btfsc	status,2,c
  9307  0183F6  D02B               	goto	l1674
  9308                           
  9309                           ;mconfig.c: 69:    set_vterm(0);
  9310  0183F8  0E00               	movlw	0
  9311  0183FA  6EE6               	movwf	postinc1,c
  9312  0183FC  ECC6  F0DF         	call	_set_vterm	;wreg free
  9313                           
  9314                           ;mconfig.c: 70:    V.help = 0;
  9315  018400  0101               	movlb	1	; () banked
  9316  018402  95CB               	bcf	(_V+155)& (0+255),2,b	;volatile
  9317                           
  9318                           ; BSR set to: 1
  9319                           ;mconfig.c: 71:    set_display_info(display_help());
  9320  018404  ECDB  F0E0         	call	_display_help	;wreg free
  9321  018408  5001               	movf	btemp^0,w,c
  9322  01840A  6EE6               	movwf	postinc1,c
  9323  01840C  ECD5  F0DF         	call	_set_display_info	;wreg free
  9324                           
  9325                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  9326  018410  0060  F717  FFE6   	movff	_V+149,postinc1
  9327  018416  0060  F71B  FFE6   	movff	_V+150,postinc1
  9328  01841C  EC1B  F0E0         	call	_mode_lamp_dim	;wreg free
  9329                           
  9330                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  9331  018420  0E0B               	movlw	11
  9332  018422  6EE6               	movwf	postinc1,c
  9333  018424  ECCF  F0DD         	call	_TimerDone	;wreg free
  9334  018428  5001               	movf	btemp^0,w,c
  9335  01842A  B4D8               	btfsc	status,2,c
  9336  01842C  D010               	goto	l1674
  9337                           
  9338                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  9339  01842E  0101               	movlb	1	; () banked
  9340  018430  51DB               	movf	(_V+171)& (0+255),w,b	;volatile
  9341  018432  A4D8               	btfss	status,2,c
  9342  018434  D002               	goto	u12570
  9343  018436  0E01               	movlw	1
  9344  018438  D001               	goto	u12580
  9345  01843A                     u12570:
  9346  01843A  0E00               	movlw	0
  9347  01843C                     u12580:
  9348  01843C  6FDB               	movwf	(_V+171)& (0+255),b	;volatile
  9349                           
  9350                           ; BSR set to: 1
  9351                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  9352  01843E  0EDC               	movlw	220
  9353  018440  6EE6               	movwf	postinc1,c
  9354  018442  0E05               	movlw	5
  9355  018444  6EE6               	movwf	postinc1,c
  9356  018446  0E0B               	movlw	11
  9357  018448  6EE6               	movwf	postinc1,c
  9358  01844A  ECA9  F0DB         	call	_StartTimer	;wreg free
  9359  01844E                     l1674:
  9360                           
  9361                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9362  01844E  52E5               	movf	postdec1,f,c
  9363  018450  0012               	return		;funcret
  9364  018452                     __end_of_check_help:
  9365                           	opt callstack 0
  9366                           
  9367 ;; *************** function _vterm_dump *****************
  9368 ;; Defined at:
  9369 ;;		line 121 in file "mconfig.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;		None
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;		None
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  1  [STACK] void 
  9376 ;; Registers used:
  9377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9378 ;; Tracked objects:
  9379 ;;		On entry : 3F/1
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9387 ;;Total ram usage:        0 bytes
  9388 ;; Hardware stack levels used:    1
  9389 ;; Hardware stack levels required when called:   27
  9390 ;; This function calls:
  9391 ;;		_WaitMs
  9392 ;;		_eaDogM_WriteStringAtPos
  9393 ;;		_get_vterm_ptr
  9394 ;;		_sprintf
  9395 ;;		_wait_lcd_done
  9396 ;; This function is called by:
  9397 ;;		_check_help
  9398 ;; This function uses a reentrant model
  9399 ;;
  9400                           
  9401                           	psect	text30
  9402  01965A                     __ptext30:
  9403                           	opt callstack 0
  9404  01965A                     _vterm_dump:
  9405                           	opt callstack 2
  9406                           
  9407                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  9408                           
  9409                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9410                           ;incstack = 0
  9411  01965A  0E01               	movlw	1
  9412  01965C  6EE6               	movwf	postinc1,c
  9413  01965E  0E00               	movlw	0
  9414  019660  6EE6               	movwf	postinc1,c
  9415  019662  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  9416  019666  0060  F007  FFE6   	movff	btemp,postinc1
  9417  01966C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9418  019672  0E00               	movlw	0
  9419  019674  6EE6               	movwf	postinc1,c
  9420  019676  0E00               	movlw	0
  9421  019678  6EE6               	movwf	postinc1,c
  9422  01967A  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  9423  01967E  0060  F007  FFE6   	movff	btemp,postinc1
  9424  019684  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9425  01968A  0EA4               	movlw	low STR_51
  9426  01968C  6EE6               	movwf	postinc1,c
  9427  01968E  0EFF               	movlw	high STR_51
  9428  019690  6EE6               	movwf	postinc1,c
  9429  019692  0E31               	movlw	low (_V+1)
  9430  019694  6EE6               	movwf	postinc1,c
  9431  019696  0E01               	movlw	high (_V+1)
  9432  019698  6EE6               	movwf	postinc1,c
  9433  01969A  0E08               	movlw	8
  9434  01969C  6EE6               	movwf	postinc1,c
  9435  01969E  EC12  F0CF         	call	_sprintf	;wreg free
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;mconfig.c: 124:  wait_lcd_done();
  9439  0196A2  ECF3  F0DF         	call	_wait_lcd_done	;wreg free
  9440                           
  9441                           ; BSR set to: 0
  9442                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  9443  0196A6  0E31               	movlw	low (_V+1)
  9444  0196A8  6EE6               	movwf	postinc1,c
  9445  0196AA  0E01               	movlw	high (_V+1)
  9446  0196AC  6EE6               	movwf	postinc1,c
  9447  0196AE  0E00               	movlw	0
  9448  0196B0  6EE6               	movwf	postinc1,c
  9449  0196B2  0E00               	movlw	0
  9450  0196B4  6EE6               	movwf	postinc1,c
  9451  0196B6  EC07  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  9452                           
  9453                           ; BSR set to: 59
  9454                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9455  0196BA  0E01               	movlw	1
  9456  0196BC  6EE6               	movwf	postinc1,c
  9457  0196BE  0E01               	movlw	1
  9458  0196C0  6EE6               	movwf	postinc1,c
  9459  0196C2  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  9460  0196C6  0060  F007  FFE6   	movff	btemp,postinc1
  9461  0196CC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9462  0196D2  0E00               	movlw	0
  9463  0196D4  6EE6               	movwf	postinc1,c
  9464  0196D6  0E01               	movlw	1
  9465  0196D8  6EE6               	movwf	postinc1,c
  9466  0196DA  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  9467  0196DE  0060  F007  FFE6   	movff	btemp,postinc1
  9468  0196E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9469  0196EA  0EA4               	movlw	low STR_51
  9470  0196EC  6EE6               	movwf	postinc1,c
  9471  0196EE  0EFF               	movlw	high STR_51
  9472  0196F0  6EE6               	movwf	postinc1,c
  9473  0196F2  0E31               	movlw	low (_V+1)
  9474  0196F4  6EE6               	movwf	postinc1,c
  9475  0196F6  0E01               	movlw	high (_V+1)
  9476  0196F8  6EE6               	movwf	postinc1,c
  9477  0196FA  0E08               	movlw	8
  9478  0196FC  6EE6               	movwf	postinc1,c
  9479  0196FE  EC12  F0CF         	call	_sprintf	;wreg free
  9480                           
  9481                           ; BSR set to: 0
  9482                           ;mconfig.c: 127:  wait_lcd_done();
  9483  019702  ECF3  F0DF         	call	_wait_lcd_done	;wreg free
  9484                           
  9485                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9486  019706  0E31               	movlw	low (_V+1)
  9487  019708  6EE6               	movwf	postinc1,c
  9488  01970A  0E01               	movlw	high (_V+1)
  9489  01970C  6EE6               	movwf	postinc1,c
  9490  01970E  0E00               	movlw	0
  9491  019710  6EE6               	movwf	postinc1,c
  9492  019712  0E01               	movlw	1
  9493  019714  6EE6               	movwf	postinc1,c
  9494  019716  EC07  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  9495                           
  9496                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9497  01971A  0E01               	movlw	1
  9498  01971C  6EE6               	movwf	postinc1,c
  9499  01971E  0E02               	movlw	2
  9500  019720  6EE6               	movwf	postinc1,c
  9501  019722  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  9502  019726  0060  F007  FFE6   	movff	btemp,postinc1
  9503  01972C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9504  019732  0E00               	movlw	0
  9505  019734  6EE6               	movwf	postinc1,c
  9506  019736  0E02               	movlw	2
  9507  019738  6EE6               	movwf	postinc1,c
  9508  01973A  EC4D  F0DD         	call	_get_vterm_ptr	;wreg free
  9509  01973E  0060  F007  FFE6   	movff	btemp,postinc1
  9510  019744  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9511  01974A  0EA4               	movlw	low STR_51
  9512  01974C  6EE6               	movwf	postinc1,c
  9513  01974E  0EFF               	movlw	high STR_51
  9514  019750  6EE6               	movwf	postinc1,c
  9515  019752  0E31               	movlw	low (_V+1)
  9516  019754  6EE6               	movwf	postinc1,c
  9517  019756  0E01               	movlw	high (_V+1)
  9518  019758  6EE6               	movwf	postinc1,c
  9519  01975A  0E08               	movlw	8
  9520  01975C  6EE6               	movwf	postinc1,c
  9521  01975E  EC12  F0CF         	call	_sprintf	;wreg free
  9522                           
  9523                           ; BSR set to: 0
  9524                           ;mconfig.c: 130:  wait_lcd_done();
  9525  019762  ECF3  F0DF         	call	_wait_lcd_done	;wreg free
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9529  019766  0E31               	movlw	low (_V+1)
  9530  019768  6EE6               	movwf	postinc1,c
  9531  01976A  0E01               	movlw	high (_V+1)
  9532  01976C  6EE6               	movwf	postinc1,c
  9533  01976E  0E00               	movlw	0
  9534  019770  6EE6               	movwf	postinc1,c
  9535  019772  0E02               	movlw	2
  9536  019774  6EE6               	movwf	postinc1,c
  9537  019776  EC07  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
  9538                           
  9539                           ; BSR set to: 59
  9540                           ;mconfig.c: 132:  WaitMs(3000);
  9541  01977A  0EB8               	movlw	184
  9542  01977C  6EE6               	movwf	postinc1,c
  9543  01977E  0E0B               	movlw	11
  9544  019780  6EE6               	movwf	postinc1,c
  9545  019782  EC9E  F0DC         	call	_WaitMs	;wreg free
  9546                           
  9547                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9548  019786  0012               	return		;funcret
  9549  019788                     __end_of_vterm_dump:
  9550                           	opt callstack 0
  9551                           
  9552 ;; *************** function _sprintf *****************
  9553 ;; Defined at:
  9554 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;  s               2  [STACK] PTR unsigned char 
  9557 ;;		 -> D.lcd(480), D(482), port_data(512), V(191), 
  9558 ;;  fmt             2  [STACK] PTR const unsigned char 
  9559 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
  9560 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
  9561 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
  9562 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
  9563 ;;		 -> STR_47(19), STR_42(17), STR_41(16), STR_40(16), 
  9564 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9565 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9566 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9567 ;;		 -> STR_27(19), STR_26(19), STR_25(20), STR_24(19), 
  9568 ;;		 -> STR_23(19), STR_22(20), STR_21(17), STR_20(16), 
  9569 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9570 ;;		 -> STR_15(21), STR_14(21), STR_13(21), STR_12(21), 
  9571 ;;		 -> STR_11(22), STR_10(22), STR_9(26), STR_8(21), 
  9572 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
  9573 ;;		 -> STR_2(21), STR_1(21), 
  9574 ;; Auto vars:     Size  Location     Type
  9575 ;;  f               6  [STACK] struct _IO_FILE
  9576 ;;  ap              2  [STACK] PTR void [1]
  9577 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9578 ;;  ret             2    0        int 
  9579 ;; Return value:  Size  Location     Type
  9580 ;;                  2  [STACK] int 
  9581 ;; Registers used:
  9582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9583 ;; Tracked objects:
  9584 ;;		On entry : 0/0
  9585 ;;		On exit  : 3F/0
  9586 ;;		Unchanged: 0/0
  9587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9592 ;;Total ram usage:        0 bytes
  9593 ;; Hardware stack levels used:    1
  9594 ;; Hardware stack levels required when called:   23
  9595 ;; This function calls:
  9596 ;;		_vfprintf
  9597 ;; This function is called by:
  9598 ;;		_main
  9599 ;;		_check_help
  9600 ;;		_vterm_dump
  9601 ;;		_calc_bsoc
  9602 ;; This function uses a reentrant model
  9603 ;;
  9604                           
  9605                           	psect	text31
  9606  019E24                     __ptext31:
  9607                           	opt callstack 0
  9608  019E24                     _sprintf:
  9609                           	opt callstack 0
  9610                           
  9611                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9612  019E24  0E08               	movlw	8
  9613  019E26  26E1               	addwf	fsr1l,f,c
  9614  019E28  0E00               	movlw	0
  9615  019E2A  22E2               	addwfc	fsr1h,f,c
  9616                           
  9617                           ;incstack = 0
  9618 ;; hardware stack exceeded
  9619  019E2C  0EFE               	movlw	254
  9620  019E2E  6E0B               	movwf	(btemp+10)^0,c
  9621  019E30  0EFF               	movlw	255
  9622  019E32  6E0C               	movwf	(btemp+11)^0,c
  9623                           
  9624                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9625  019E34  0EF5               	movlw	245
  9626  019E36  24E1               	addwf	fsr1l,w,c
  9627  019E38  6E09               	movwf	(btemp+8)^0,c
  9628  019E3A  0EFF               	movlw	255
  9629  019E3C  20E2               	addwfc	fsr1h,w,c
  9630  019E3E  6E0A               	movwf	(btemp+9)^0,c
  9631  019E40  500B               	movf	(btemp+10)^0,w,c
  9632  019E42  2609               	addwf	(btemp+8)^0,f,c
  9633  019E44  500C               	movf	(btemp+11)^0,w,c
  9634  019E46  220A               	addwfc	(btemp+9)^0,f,c
  9635                           
  9636                           ;stkvar	_ap @ sp[(-8)+6]
  9637  019E48  0EFF               	movlw	-1
  9638  019E4A  0060  F02B  FFE3   	movff	btemp+9,plusw1
  9639  019E50  0EFE               	movlw	-2
  9640  019E52  0060  F027  FFE3   	movff	btemp+8,plusw1
  9641                           
  9642                           ;stkvar	_s @ sp[(-8)+-3]
  9643  019E58  0EF5               	movlw	-11
  9644  019E5A  006F FF8C  F00B    	movff	plusw1,btemp+10
  9645  019E60  0EF6               	movlw	-10
  9646  019E62  006F FF8C  F00C    	movff	plusw1,btemp+11
  9647                           
  9648                           ;stkvar	_f @ sp[(-8)+0]
  9649  019E68  0EF9               	movlw	-7
  9650  019E6A  0060  F033  FFE3   	movff	btemp+11,plusw1
  9651  019E70  0EF8               	movlw	-8
  9652  019E72  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9653                           
  9654                           ;stkvar	_f @ sp[(-8)+0]
  9655  019E78  0EFA               	movlw	250
  9656  019E7A  24E1               	addwf	fsr1l,w,c
  9657  019E7C  6ED9               	movwf	fsr2l,c
  9658  019E7E  0EFF               	movlw	255
  9659  019E80  20E2               	addwfc	fsr1h,w,c
  9660  019E82  6EDA               	movwf	fsr2h,c
  9661  019E84  0E00               	movlw	0
  9662  019E86  6EDE               	movwf	postinc2,c
  9663  019E88  0E00               	movlw	0
  9664  019E8A  6EDD               	movwf	postdec2,c
  9665                           
  9666                           ;stkvar	_f @ sp[(-8)+0]
  9667  019E8C  0EFC               	movlw	252
  9668  019E8E  24E1               	addwf	fsr1l,w,c
  9669  019E90  6ED9               	movwf	fsr2l,c
  9670  019E92  0EFF               	movlw	255
  9671  019E94  20E2               	addwfc	fsr1h,w,c
  9672  019E96  6EDA               	movwf	fsr2h,c
  9673  019E98  0E00               	movlw	0
  9674  019E9A  6EDE               	movwf	postinc2,c
  9675  019E9C  0E00               	movlw	0
  9676  019E9E  6EDD               	movwf	postdec2,c
  9677                           
  9678                           ;stkvar	_ap @ sp[(-8)+6]
  9679  019EA0  0EFE               	movlw	254
  9680  019EA2  24E1               	addwf	fsr1l,w,c
  9681  019EA4  6E01               	movwf	btemp^0,c
  9682  019EA6  0EFF               	movlw	255
  9683  019EA8  20E2               	addwfc	fsr1h,w,c
  9684  019EAA  6E02               	movwf	(btemp+1)^0,c
  9685  019EAC  0060  F007  FFE6   	movff	btemp,postinc1
  9686  019EB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9687                           
  9688                           ;stkvar	_fmt @ sp[(-10)+-5]
  9689  019EB8  0EF1               	movlw	-15
  9690  019EBA  006F FF8F FFE6     	movff	plusw1,postinc1
  9691  019EC0  006F FF8F FFE6     	movff	plusw1,postinc1
  9692                           
  9693                           ;stkvar	_f @ sp[(-12)+0]
  9694  019EC6  0EF4               	movlw	244
  9695  019EC8  24E1               	addwf	fsr1l,w,c
  9696  019ECA  6E01               	movwf	btemp^0,c
  9697  019ECC  0EFF               	movlw	255
  9698  019ECE  20E2               	addwfc	fsr1h,w,c
  9699  019ED0  6E02               	movwf	(btemp+1)^0,c
  9700  019ED2  0060  F007  FFE6   	movff	btemp,postinc1
  9701  019ED8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9702  019EDE  ECB5  F0D3         	call	_vfprintf	;wreg free
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;stkvar	_f @ sp[(-8)+0]
  9706  019EE2  0EFA               	movlw	250
  9707  019EE4  24E1               	addwf	fsr1l,w,c
  9708  019EE6  6ED9               	movwf	fsr2l,c
  9709  019EE8  0EFF               	movlw	255
  9710  019EEA  20E2               	addwfc	fsr1h,w,c
  9711  019EEC  6EDA               	movwf	fsr2h,c
  9712  019EEE  006F FF78  F00B    	movff	postinc2,btemp+10
  9713  019EF4  006F FF74  F00C    	movff	postdec2,btemp+11
  9714                           
  9715                           ;stkvar	_s @ sp[(-8)+-3]
  9716  019EFA  0EF5               	movlw	-11
  9717  019EFC  006F FF8C  F009    	movff	plusw1,btemp+8
  9718  019F02  0EF6               	movlw	-10
  9719  019F04  006F FF8C  F00A    	movff	plusw1,btemp+9
  9720  019F0A  500B               	movf	(btemp+10)^0,w,c
  9721  019F0C  2409               	addwf	(btemp+8)^0,w,c
  9722  019F0E  6ED9               	movwf	fsr2l,c
  9723  019F10  500C               	movf	(btemp+11)^0,w,c
  9724  019F12  200A               	addwfc	(btemp+9)^0,w,c
  9725  019F14  6EDA               	movwf	fsr2h,c
  9726  019F16  0E00               	movlw	0
  9727  019F18  6EDF               	movwf	indf2,c
  9728                           
  9729                           ; BSR set to: 0
  9730                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 86, args
      +                          ize = 4, vargsize = 0
  9731  019F1A  0EF8               	movlw	248
  9732  019F1C  26E1               	addwf	fsr1l,f,c
  9733  019F1E  0EFF               	movlw	255
  9734  019F20  22E2               	addwfc	fsr1h,f,c
  9735  019F22  52E5               	movf	postdec1,f,c
  9736  019F24  50E7               	movf	indf1,w,c
  9737  019F26  5EE1               	subwf	fsr1l,f,c
  9738  019F28  0E00               	movlw	0
  9739  019F2A  5AE2               	subwfb	fsr1h,f,c
  9740  019F2C  0012               	return		;funcret
  9741  019F2E                     __end_of_sprintf:
  9742                           	opt callstack 0
  9743                           
  9744 ;; *************** function _get_vterm_ptr *****************
  9745 ;; Defined at:
  9746 ;;		line 116 in file "mconfig.c"
  9747 ;; Parameters:    Size  Location     Type
  9748 ;;  line            1  [STACK] const unsigned char 
  9749 ;;  vterm           1  [STACK] const unsigned char 
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;		None
  9752 ;; Return value:  Size  Location     Type
  9753 ;;                  2  [STACK] PTR unsigned char 
  9754 ;; Registers used:
  9755 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9756 ;; Tracked objects:
  9757 ;;		On entry : 0/0
  9758 ;;		On exit  : 0/0
  9759 ;;		Unchanged: 0/0
  9760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9765 ;;Total ram usage:        0 bytes
  9766 ;; Hardware stack levels used:    1
  9767 ;; Hardware stack levels required when called:   15
  9768 ;; This function calls:
  9769 ;;		Nothing
  9770 ;; This function is called by:
  9771 ;;		_main
  9772 ;;		_check_help
  9773 ;;		_vterm_dump
  9774 ;; This function uses a reentrant model
  9775 ;;
  9776                           
  9777                           	psect	text32
  9778  01BA9A                     __ptext32:
  9779                           	opt callstack 0
  9780  01BA9A                     _get_vterm_ptr:
  9781                           	opt callstack 15
  9782                           
  9783                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9784                           ;stkvar	_vterm @ sp[(0)+-2]
  9785                           
  9786                           ; BSR set to: 0
  9787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9788                           ;incstack = 0
  9789  01BA9A  0EFE               	movlw	-2
  9790  01BA9C  50E3               	movf	plusw1,w,c
  9791  01BA9E  0B03               	andlw	3
  9792  01BAA0  0D78               	mullw	120
  9793  01BAA2  0E2A               	movlw	low _D
  9794  01BAA4  6E01               	movwf	btemp^0,c
  9795  01BAA6  0E08               	movlw	high _D
  9796  01BAA8  6E02               	movwf	(btemp+1)^0,c
  9797  01BAAA  50F3               	movf	243,w,c
  9798  01BAAC  2601               	addwf	btemp^0,f,c
  9799  01BAAE  50F4               	movf	244,w,c
  9800  01BAB0  2202               	addwfc	(btemp+1)^0,f,c
  9801                           
  9802                           ;stkvar	_line @ sp[(0)+-1]
  9803  01BAB2  0EFF               	movlw	-1
  9804  01BAB4  50E3               	movf	plusw1,w,c
  9805  01BAB6  0B03               	andlw	3
  9806  01BAB8  0D28               	mullw	40
  9807  01BABA  50F3               	movf	243,w,c
  9808  01BABC  2601               	addwf	btemp^0,f,c
  9809  01BABE  50F4               	movf	244,w,c
  9810  01BAC0  2202               	addwfc	(btemp+1)^0,f,c
  9811                           
  9812                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9813  01BAC2  52E5               	movf	postdec1,f,c
  9814  01BAC4  52E5               	movf	postdec1,f,c
  9815  01BAC6  0012               	return		;funcret
  9816  01BAC8                     __end_of_get_vterm_ptr:
  9817                           	opt callstack 0
  9818                           
  9819 ;; *************** function _WaitMs *****************
  9820 ;; Defined at:
  9821 ;;		line 32 in file "timers.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;  numMilliseco    2  [STACK] const unsigned short 
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;		None
  9826 ;; Return value:  Size  Location     Type
  9827 ;;                  1  [STACK] void 
  9828 ;; Registers used:
  9829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9830 ;; Tracked objects:
  9831 ;;		On entry : 0/1
  9832 ;;		On exit  : 0/0
  9833 ;;		Unchanged: 0/0
  9834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9839 ;;Total ram usage:        0 bytes
  9840 ;; Hardware stack levels used:    1
  9841 ;; Hardware stack levels required when called:   16
  9842 ;; This function calls:
  9843 ;;		_StartTimer
  9844 ;;		_TimerDone
  9845 ;; This function is called by:
  9846 ;;		_main
  9847 ;;		_vterm_dump
  9848 ;; This function uses a reentrant model
  9849 ;;
  9850                           
  9851                           	psect	text33
  9852  01B93C                     __ptext33:
  9853                           	opt callstack 0
  9854  01B93C                     _WaitMs:
  9855                           	opt callstack 12
  9856                           
  9857                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9858                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9859                           
  9860                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9861                           ;incstack = 0
  9862  01B93C  0EFE               	movlw	-2
  9863  01B93E  006F FF8F FFE6     	movff	plusw1,postinc1
  9864  01B944  006F FF8F FFE6     	movff	plusw1,postinc1
  9865  01B94A  0E00               	movlw	0
  9866  01B94C  6EE6               	movwf	postinc1,c
  9867  01B94E  ECA9  F0DB         	call	_StartTimer	;wreg free
  9868                           
  9869                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9870  01B952  D005               	goto	l9884
  9871  01B954                     l1605:
  9872                           
  9873                           ;timers.c: 36:   __nop();
  9874  01B954  F000               	nop	
  9875                           
  9876                           ;timers.c: 37:   __nop();
  9877  01B956  F000               	nop	
  9878                           
  9879                           ;timers.c: 38:   __nop();
  9880  01B958  F000               	nop	
  9881                           
  9882                           ;timers.c: 39:   __nop();
  9883  01B95A  F000               	nop	
  9884  01B95C  0004               	clrwdt		;# 
  9885  01B95E                     l9884:
  9886                           
  9887                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9888  01B95E  0E00               	movlw	0
  9889  01B960  6EE6               	movwf	postinc1,c
  9890  01B962  ECCF  F0DD         	call	_TimerDone	;wreg free
  9891  01B966  5001               	movf	btemp^0,w,c
  9892  01B968  B4D8               	btfsc	status,2,c
  9893  01B96A  D7F4               	goto	l1605
  9894                           
  9895                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9896  01B96C  52E5               	movf	postdec1,f,c
  9897  01B96E  52E5               	movf	postdec1,f,c
  9898  01B970  0012               	return		;funcret
  9899  01B972                     __end_of_WaitMs:
  9900                           	opt callstack 0
  9901                           
  9902 ;; *************** function _update_lcd *****************
  9903 ;; Defined at:
  9904 ;;		line 85 in file "mconfig.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;  vterm           1  [STACK] unsigned char 
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;		None
  9909 ;; Return value:  Size  Location     Type
  9910 ;;                  1  [STACK] unsigned char 
  9911 ;; Registers used:
  9912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9913 ;; Tracked objects:
  9914 ;;		On entry : 0/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9922 ;;Total ram usage:        0 bytes
  9923 ;; Hardware stack levels used:    1
  9924 ;; Hardware stack levels required when called:   27
  9925 ;; This function calls:
  9926 ;;		_eaDogM_WriteStringAtPos
  9927 ;;		_wait_lcd_done
  9928 ;; This function is called by:
  9929 ;;		_main
  9930 ;;		_check_help
  9931 ;; This function uses a reentrant model
  9932 ;;
  9933                           
  9934                           	psect	text34
  9935  019D14                     __ptext34:
  9936                           	opt callstack 0
  9937  019D14                     _update_lcd:
  9938                           	opt callstack 3
  9939                           
  9940                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9941                           ;stkvar	_vterm @ sp[(0)+-1]
  9942                           
  9943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9944                           ;incstack = 0
  9945  019D14  0EFF               	movlw	-1
  9946  019D16  006F FF8C  F001    	movff	plusw1,btemp
  9947  019D1C  0E03               	movlw	3
  9948  019D1E  1601               	andwf	btemp^0,f,c
  9949  019D20  0EFF               	movlw	-1
  9950  019D22  0060  F007  FFE3   	movff	btemp,plusw1
  9951                           
  9952                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9953  019D28  EE22  F20A         	lfsr	2,_D+480
  9954  019D2C  A0DF               	btfss	indf2,0,c
  9955  019D2E  D004               	goto	l12800
  9956                           
  9957                           ;stkvar	_vterm @ sp[(0)+-1]
  9958  019D30  0EFF               	movlw	-1
  9959  019D32  50E3               	movf	plusw1,w,c
  9960  019D34  B4D8               	btfsc	status,2,c
  9961  019D36  D074               	goto	l1681
  9962  019D38                     l12800:
  9963                           
  9964                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
  9965                           ;stkvar	_vterm @ sp[(0)+-1]
  9966  019D38  0EFF               	movlw	-1
  9967  019D3A  50E3               	movf	plusw1,w,c
  9968  019D3C  0D78               	mullw	120
  9969  019D3E  0E3E               	movlw	low (_D+20)
  9970  019D40  24F3               	addwf	243,w,c
  9971  019D42  6ED9               	movwf	fsr2l,c
  9972  019D44  0E08               	movlw	high (_D+20)
  9973  019D46  20F4               	addwfc	prodh,w,c
  9974  019D48  6EDA               	movwf	fsr2h,c
  9975  019D4A  0E00               	movlw	0
  9976  019D4C  6EDF               	movwf	indf2,c
  9977                           
  9978                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
  9979                           ;stkvar	_vterm @ sp[(0)+-1]
  9980  019D4E  0EFF               	movlw	-1
  9981  019D50  50E3               	movf	plusw1,w,c
  9982  019D52  0D78               	mullw	120
  9983  019D54  0E66               	movlw	low (_D+60)
  9984  019D56  24F3               	addwf	243,w,c
  9985  019D58  6ED9               	movwf	fsr2l,c
  9986  019D5A  0E08               	movlw	high (_D+60)
  9987  019D5C  20F4               	addwfc	prodh,w,c
  9988  019D5E  6EDA               	movwf	fsr2h,c
  9989  019D60  0E00               	movlw	0
  9990  019D62  6EDF               	movwf	indf2,c
  9991                           
  9992                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
  9993                           ;stkvar	_vterm @ sp[(0)+-1]
  9994  019D64  0EFF               	movlw	-1
  9995  019D66  50E3               	movf	plusw1,w,c
  9996  019D68  0D78               	mullw	120
  9997  019D6A  0E8E               	movlw	low (_D+100)
  9998  019D6C  24F3               	addwf	243,w,c
  9999  019D6E  6ED9               	movwf	fsr2l,c
 10000  019D70  0E08               	movlw	high (_D+100)
 10001  019D72  20F4               	addwfc	prodh,w,c
 10002  019D74  6EDA               	movwf	fsr2h,c
 10003  019D76  0E00               	movlw	0
 10004  019D78  6EDF               	movwf	indf2,c
 10005                           
 10006                           ;mconfig.c: 95:  wait_lcd_done();
 10007  019D7A  ECF3  F0DF         	call	_wait_lcd_done	;wreg free
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 10011                           ;stkvar	_vterm @ sp[(0)+-1]
 10012  019D7E  0EFF               	movlw	-1
 10013  019D80  50E3               	movf	plusw1,w,c
 10014  019D82  0D78               	mullw	120
 10015  019D84  0E2A               	movlw	low _D
 10016  019D86  6E0B               	movwf	(btemp+10)^0,c
 10017  019D88  0E08               	movlw	high _D
 10018  019D8A  6E0C               	movwf	(btemp+11)^0,c
 10019  019D8C  50F3               	movf	243,w,c
 10020  019D8E  260B               	addwf	(btemp+10)^0,f,c
 10021  019D90  50F4               	movf	244,w,c
 10022  019D92  220C               	addwfc	(btemp+11)^0,f,c
 10023  019D94  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10024  019D9A  0060  F033  FFE6   	movff	btemp+11,postinc1
 10025  019DA0  0E00               	movlw	0
 10026  019DA2  6EE6               	movwf	postinc1,c
 10027  019DA4  0E00               	movlw	0
 10028  019DA6  6EE6               	movwf	postinc1,c
 10029  019DA8  EC07  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
 10030                           
 10031                           ; BSR set to: 59
 10032                           ;mconfig.c: 97:  wait_lcd_done();
 10033  019DAC  ECF3  F0DF         	call	_wait_lcd_done	;wreg free
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 10037                           ;stkvar	_vterm @ sp[(0)+-1]
 10038  019DB0  0EFF               	movlw	-1
 10039  019DB2  50E3               	movf	plusw1,w,c
 10040  019DB4  0D78               	mullw	120
 10041  019DB6  0E2A               	movlw	low _D
 10042  019DB8  6E0B               	movwf	(btemp+10)^0,c
 10043  019DBA  0E08               	movlw	high _D
 10044  019DBC  6E0C               	movwf	(btemp+11)^0,c
 10045  019DBE  0E28               	movlw	40
 10046  019DC0  260B               	addwf	(btemp+10)^0,f,c
 10047  019DC2  0E00               	movlw	0
 10048  019DC4  220C               	addwfc	(btemp+11)^0,f,c
 10049  019DC6  50F3               	movf	243,w,c
 10050  019DC8  260B               	addwf	(btemp+10)^0,f,c
 10051  019DCA  50F4               	movf	244,w,c
 10052  019DCC  220C               	addwfc	(btemp+11)^0,f,c
 10053  019DCE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10054  019DD4  0060  F033  FFE6   	movff	btemp+11,postinc1
 10055  019DDA  0E00               	movlw	0
 10056  019DDC  6EE6               	movwf	postinc1,c
 10057  019DDE  0E01               	movlw	1
 10058  019DE0  6EE6               	movwf	postinc1,c
 10059  019DE2  EC07  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
 10060                           
 10061                           ; BSR set to: 59
 10062                           ;mconfig.c: 99:  wait_lcd_done();
 10063  019DE6  ECF3  F0DF         	call	_wait_lcd_done	;wreg free
 10064                           
 10065                           ; BSR set to: 0
 10066                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 10067                           ;stkvar	_vterm @ sp[(0)+-1]
 10068  019DEA  0EFF               	movlw	-1
 10069  019DEC  50E3               	movf	plusw1,w,c
 10070  019DEE  0D78               	mullw	120
 10071  019DF0  0E2A               	movlw	low _D
 10072  019DF2  6E0B               	movwf	(btemp+10)^0,c
 10073  019DF4  0E08               	movlw	high _D
 10074  019DF6  6E0C               	movwf	(btemp+11)^0,c
 10075  019DF8  0E50               	movlw	80
 10076  019DFA  260B               	addwf	(btemp+10)^0,f,c
 10077  019DFC  0E00               	movlw	0
 10078  019DFE  220C               	addwfc	(btemp+11)^0,f,c
 10079  019E00  50F3               	movf	243,w,c
 10080  019E02  260B               	addwf	(btemp+10)^0,f,c
 10081  019E04  50F4               	movf	244,w,c
 10082  019E06  220C               	addwfc	(btemp+11)^0,f,c
 10083  019E08  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10084  019E0E  0060  F033  FFE6   	movff	btemp+11,postinc1
 10085  019E14  0E00               	movlw	0
 10086  019E16  6EE6               	movwf	postinc1,c
 10087  019E18  0E02               	movlw	2
 10088  019E1A  6EE6               	movwf	postinc1,c
 10089  019E1C  EC07  F0D3         	call	_eaDogM_WriteStringAtPos	;wreg free
 10090  019E20                     l1681:
 10091                           
 10092                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 10093  019E20  52E5               	movf	postdec1,f,c
 10094  019E22  0012               	return		;funcret
 10095  019E24                     __end_of_update_lcd:
 10096                           	opt callstack 0
 10097                           
 10098 ;; *************** function _eaDogM_WriteStringAtPos *****************
 10099 ;; Defined at:
 10100 ;;		line 201 in file "eadog.c"
 10101 ;; Parameters:    Size  Location     Type
 10102 ;;  r               1  [STACK] const unsigned char 
 10103 ;;  c               1  [STACK] const unsigned char 
 10104 ;;  strPtr          2  [STACK] PTR unsigned char 
 10105 ;;		 -> D.lcd(480), D(482), V(191), 
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;  row             1  [STACK] unsigned char 
 10108 ;; Return value:  Size  Location     Type
 10109 ;;                  1  [STACK] void 
 10110 ;; Registers used:
 10111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10112 ;; Tracked objects:
 10113 ;;		On entry : 3F/0
 10114 ;;		On exit  : 3F/3B
 10115 ;;		Unchanged: 0/0
 10116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10121 ;;Total ram usage:        0 bytes
 10122 ;; Hardware stack levels used:    1
 10123 ;; Hardware stack levels required when called:   26
 10124 ;; This function calls:
 10125 ;;		_eaDogM_WriteString
 10126 ;;		_send_lcd_cmd_dma
 10127 ;;		_send_lcd_data_dma
 10128 ;;		_wait_lcd_done
 10129 ;;		_wdtdelay
 10130 ;; This function is called by:
 10131 ;;		_update_lcd
 10132 ;;		_vterm_dump
 10133 ;; This function uses a reentrant model
 10134 ;;
 10135                           
 10136                           	psect	text35
 10137  01A60E                     __ptext35:
 10138                           	opt callstack 0
 10139  01A60E                     _eaDogM_WriteStringAtPos:
 10140                           	opt callstack 0
 10141                           
 10142                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10143  01A60E  52E6               	movf	postinc1,f,c
 10144                           
 10145                           ;eadog.c: 201: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 202: {;eadog.c: 203:  uint8_t row;;eadog.c: 205:  switch (r) {
 10146                           
 10147                           ;incstack = 0
 10148  01A610  D017               	goto	l12776
 10149  01A612                     l12764:
 10150                           
 10151                           ;eadog.c: 207:   row = 0x54;
 10152  01A612  0E54               	movlw	84
 10153  01A614  6E0C               	movwf	(btemp+11)^0,c
 10154                           
 10155                           ;stkvar	_row @ sp[(-1)+0]
 10156  01A616  0EFF               	movlw	-1
 10157  01A618  0060  F033  FFE3   	movff	btemp+11,plusw1
 10158                           
 10159                           ;eadog.c: 208:   break;
 10160  01A61E  D026               	goto	l12778
 10161  01A620                     l12766:
 10162                           
 10163                           ;eadog.c: 210:   row = 0x40;
 10164                           ;stkvar	_row @ sp[(-1)+0]
 10165  01A620  0EFF               	movlw	-1
 10166  01A622  6AE3               	clrf	plusw1,c
 10167  01A624  8CE3               	bsf	plusw1,6,c
 10168                           
 10169                           ;eadog.c: 211:   break;
 10170  01A626  D022               	goto	l12778
 10171  01A628                     l12768:
 10172                           
 10173                           ;eadog.c: 213:   row = 0x14;
 10174                           ;stkvar	_row @ sp[(-1)+0]
 10175  01A628  0EFF               	movlw	-1
 10176  01A62A  6AE3               	clrf	plusw1,c
 10177  01A62C  84E3               	bsf	plusw1,2,c
 10178  01A62E  88E3               	bsf	plusw1,4,c	;indir
 10179                           
 10180                           ;eadog.c: 214:   break;
 10181  01A630  D01D               	goto	l12778
 10182  01A632                     l12770:
 10183                           
 10184                           ;eadog.c: 216:   row = 0x1;
 10185                           ;stkvar	_row @ sp[(-1)+0]
 10186  01A632  0EFF               	movlw	-1
 10187  01A634  6AE3               	clrf	plusw1,c
 10188  01A636  2AE3               	incf	plusw1,f,c
 10189                           
 10190                           ;eadog.c: 217:   break;
 10191  01A638  D019               	goto	l12778
 10192  01A63A                     l12772:
 10193                           
 10194                           ;eadog.c: 219:   row = 0x00;
 10195                           ;stkvar	_row @ sp[(-1)+0]
 10196  01A63A  0EFF               	movlw	-1
 10197  01A63C  6AE3               	clrf	plusw1,c
 10198                           
 10199                           ;eadog.c: 220:   break;
 10200  01A63E  D016               	goto	l12778
 10201  01A640                     l12776:
 10202                           
 10203                           ;stkvar	_r @ sp[(-1)+-1]
 10204  01A640  0EFE               	movlw	-2
 10205  01A642  50E3               	movf	plusw1,w,c
 10206  01A644  6E0B               	movwf	(btemp+10)^0,c
 10207  01A646  6A0C               	clrf	(btemp+11)^0,c
 10208                           
 10209                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10210                           ; Switch size 1, requested type "simple"
 10211                           ; Number of cases is 1, Range of values is 0 to 0
 10212                           ; switch strategies available:
 10213                           ; Name         Instructions Cycles
 10214                           ; simple_byte            4     3 (average)
 10215                           ;	Chosen strategy is simple_byte
 10216  01A648  500C               	movf	(btemp+11)^0,w,c
 10217  01A64A  0A00               	xorlw	0	; case 0
 10218  01A64C  A4D8               	btfss	status,2,c
 10219  01A64E  D7F5               	goto	l12772
 10220                           
 10221                           ; Switch size 1, requested type "simple"
 10222                           ; Number of cases is 4, Range of values is 0 to 3
 10223                           ; switch strategies available:
 10224                           ; Name         Instructions Cycles
 10225                           ; simple_byte           13     7 (average)
 10226                           ;	Chosen strategy is simple_byte
 10227  01A650  500B               	movf	(btemp+10)^0,w,c
 10228  01A652  0A00               	xorlw	0	; case 0
 10229  01A654  B4D8               	btfsc	status,2,c
 10230  01A656  D7DD               	goto	l12764
 10231  01A658  0A01               	xorlw	1	; case 1
 10232  01A65A  B4D8               	btfsc	status,2,c
 10233  01A65C  D7E1               	goto	l12766
 10234  01A65E  0A03               	xorlw	3	; case 2
 10235  01A660  B4D8               	btfsc	status,2,c
 10236  01A662  D7E2               	goto	l12768
 10237  01A664  0A01               	xorlw	1	; case 3
 10238  01A666  B4D8               	btfsc	status,2,c
 10239  01A668  D7E4               	goto	l12770
 10240  01A66A  D7E7               	goto	l12772
 10241  01A66C                     l12778:
 10242                           
 10243                           ;eadog.c: 222:  send_lcd_cmd_dma(0x45);
 10244  01A66C  0E45               	movlw	69
 10245  01A66E  6EE6               	movwf	postinc1,c
 10246  01A670  ECB7  F0DF         	call	_send_lcd_cmd_dma	;wreg free
 10247                           
 10248                           ;eadog.c: 223:  send_lcd_data_dma(row + c);
 10249                           ;stkvar	_c @ sp[(-1)+-2]
 10250  01A674  0EFD               	movlw	-3
 10251  01A676  006F FF8C  F00C    	movff	plusw1,btemp+11
 10252                           
 10253                           ;stkvar	_row @ sp[(-1)+0]
 10254  01A67C  0EFF               	movlw	-1
 10255  01A67E  50E3               	movf	plusw1,w,c
 10256  01A680  240C               	addwf	(btemp+11)^0,w,c
 10257  01A682  6EE6               	movwf	postinc1,c
 10258  01A684  EC06  F0DA         	call	_send_lcd_data_dma	;wreg free
 10259                           
 10260                           ; BSR set to: 59
 10261                           ;eadog.c: 224:  wait_lcd_done();
 10262  01A688  ECF3  F0DF         	call	_wait_lcd_done	;wreg free
 10263                           
 10264                           ; BSR set to: 0
 10265                           ;eadog.c: 225:  wdtdelay(80);
 10266  01A68C  0E50               	movlw	80
 10267  01A68E  6EE6               	movwf	postinc1,c
 10268  01A690  0E00               	movlw	0
 10269  01A692  6EE6               	movwf	postinc1,c
 10270  01A694  0E00               	movlw	0
 10271  01A696  6EE6               	movwf	postinc1,c
 10272  01A698  0E00               	movlw	0
 10273  01A69A  6EE6               	movwf	postinc1,c
 10274  01A69C  EC33  F0D9         	call	_wdtdelay	;wreg free
 10275                           
 10276                           ;eadog.c: 226:  eaDogM_WriteString(strPtr);
 10277                           ;stkvar	_strPtr @ sp[(-1)+-4]
 10278  01A6A0  0EFB               	movlw	-5
 10279  01A6A2  006F FF8F FFE6     	movff	plusw1,postinc1
 10280  01A6A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10281  01A6AE  EC60  F0D4         	call	_eaDogM_WriteString	;wreg free
 10282                           
 10283                           ; BSR set to: 59
 10284                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 10285  01A6B2  0EFB               	movlw	251
 10286  01A6B4  26E1               	addwf	fsr1l,f,c
 10287  01A6B6  0EFF               	movlw	255
 10288  01A6B8  22E2               	addwfc	fsr1h,f,c
 10289  01A6BA  0012               	return		;funcret
 10290  01A6BC                     __end_of_eaDogM_WriteStringAtPos:
 10291                           	opt callstack 0
 10292                           
 10293 ;; *************** function _send_lcd_cmd_dma *****************
 10294 ;; Defined at:
 10295 ;;		line 177 in file "eadog.c"
 10296 ;; Parameters:    Size  Location     Type
 10297 ;;  strPtr          1  [STACK] unsigned char 
 10298 ;; Auto vars:     Size  Location     Type
 10299 ;;		None
 10300 ;; Return value:  Size  Location     Type
 10301 ;;                  1  [STACK] void 
 10302 ;; Registers used:
 10303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10304 ;; Tracked objects:
 10305 ;;		On entry : 0/3D
 10306 ;;		On exit  : 3F/0
 10307 ;;		Unchanged: 0/0
 10308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10313 ;;Total ram usage:        0 bytes
 10314 ;; Hardware stack levels used:    1
 10315 ;; Hardware stack levels required when called:   25
 10316 ;; This function calls:
 10317 ;;		_send_lcd_data_dma
 10318 ;;		_wait_lcd_done
 10319 ;; This function is called by:
 10320 ;;		_eaDogM_WriteStringAtPos
 10321 ;;		_eaDogM_WriteCommand
 10322 ;; This function uses a reentrant model
 10323 ;;
 10324                           
 10325                           	psect	text36
 10326  01BF6E                     __ptext36:
 10327                           	opt callstack 0
 10328  01BF6E                     _send_lcd_cmd_dma:
 10329                           	opt callstack 3
 10330                           
 10331                           ;eadog.c: 177: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 178: {;eadog.c: 179:  send
      +                          _lcd_data_dma(0xFE);
 10332                           
 10333                           ; BSR set to: 59
 10334                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10335                           ;incstack = 0
 10336  01BF6E  0EFE               	movlw	254
 10337  01BF70  6EE6               	movwf	postinc1,c
 10338  01BF72  EC06  F0DA         	call	_send_lcd_data_dma	;wreg free
 10339                           
 10340                           ; BSR set to: 59
 10341                           ;eadog.c: 180:  wait_lcd_done();
 10342  01BF76  ECF3  F0DF         	call	_wait_lcd_done	;wreg free
 10343                           
 10344                           ; BSR set to: 0
 10345                           ;eadog.c: 181:  send_lcd_data_dma(strPtr);
 10346                           ;stkvar	_strPtr @ sp[(0)+-1]
 10347  01BF7A  0EFF               	movlw	-1
 10348  01BF7C  50E3               	movf	plusw1,w,c
 10349  01BF7E  6EE6               	movwf	postinc1,c
 10350  01BF80  EC06  F0DA         	call	_send_lcd_data_dma	;wreg free
 10351                           
 10352                           ;eadog.c: 182:  wait_lcd_done();
 10353  01BF84  ECF3  F0DF         	call	_wait_lcd_done	;wreg free
 10354                           
 10355                           ; BSR set to: 0
 10356                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 10357  01BF88  52E5               	movf	postdec1,f,c
 10358  01BF8A  0012               	return		;funcret
 10359  01BF8C                     __end_of_send_lcd_cmd_dma:
 10360                           	opt callstack 0
 10361                           
 10362 ;; *************** function _wait_lcd_done *****************
 10363 ;; Defined at:
 10364 ;;		line 450 in file "eadog.c"
 10365 ;; Parameters:    Size  Location     Type
 10366 ;;		None
 10367 ;; Auto vars:     Size  Location     Type
 10368 ;;		None
 10369 ;; Return value:  Size  Location     Type
 10370 ;;                  1  [STACK] void 
 10371 ;; Registers used:
 10372 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10373 ;; Tracked objects:
 10374 ;;		On entry : 0/0
 10375 ;;		On exit  : 3F/0
 10376 ;;		Unchanged: 0/0
 10377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10382 ;;Total ram usage:        0 bytes
 10383 ;; Hardware stack levels used:    1
 10384 ;; Hardware stack levels required when called:   16
 10385 ;; This function calls:
 10386 ;;		_wdtdelay
 10387 ;; This function is called by:
 10388 ;;		_send_lcd_cmd_dma
 10389 ;;		_eaDogM_WriteStringAtPos
 10390 ;;		_update_lcd
 10391 ;;		_vterm_dump
 10392 ;; This function uses a reentrant model
 10393 ;;
 10394                           
 10395                           	psect	text37
 10396  01BFE6                     __ptext37:
 10397                           	opt callstack 0
 10398  01BFE6                     _wait_lcd_done:
 10399                           	opt callstack 13
 10400                           
 10401                           ;eadog.c: 452:  while (spi_link.LCD_DATA);
 10402                           
 10403                           ; BSR set to: 0
 10404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10405                           ;incstack = 0
 10406  01BFE6  0100               	movlb	0	; () banked
 10407  01BFE8  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
 10408  01BFEA  D7FD               	goto	_wait_lcd_done
 10409                           
 10410                           ; BSR set to: 0
 10411                           ;eadog.c: 453:  wdtdelay(50);
 10412  01BFEC  0E32               	movlw	50
 10413  01BFEE  6EE6               	movwf	postinc1,c
 10414  01BFF0  0E00               	movlw	0
 10415  01BFF2  6EE6               	movwf	postinc1,c
 10416  01BFF4  0E00               	movlw	0
 10417  01BFF6  6EE6               	movwf	postinc1,c
 10418  01BFF8  0E00               	movlw	0
 10419  01BFFA  6EE6               	movwf	postinc1,c
 10420  01BFFC  EC33  F0D9         	call	_wdtdelay	;wreg free
 10421                           
 10422                           ; BSR set to: 0
 10423                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 10424  01C000  0012               	return		;funcret
 10425  01C002                     __end_of_wait_lcd_done:
 10426                           	opt callstack 0
 10427                           
 10428 ;; *************** function _wdtdelay *****************
 10429 ;; Defined at:
 10430 ;;		line 23 in file "eadog.c"
 10431 ;; Parameters:    Size  Location     Type
 10432 ;;  delay           4  [STACK] const unsigned long 
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;		None
 10435 ;; Return value:  Size  Location     Type
 10436 ;;                  1  [STACK] void 
 10437 ;; Registers used:
 10438 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 10439 ;; Tracked objects:
 10440 ;;		On entry : 2/3D
 10441 ;;		On exit  : 3F/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10448 ;;Total ram usage:        0 bytes
 10449 ;; Hardware stack levels used:    1
 10450 ;; Hardware stack levels required when called:   15
 10451 ;; This function calls:
 10452 ;;		Nothing
 10453 ;; This function is called by:
 10454 ;;		_init_display
 10455 ;;		_send_lcd_data
 10456 ;;		_send_lcd_cmd
 10457 ;;		_send_lcd_cmd_long
 10458 ;;		_eaDogM_WriteStringAtPos
 10459 ;;		_wait_lcd_done
 10460 ;; This function uses a reentrant model
 10461 ;;
 10462                           
 10463                           	psect	text38
 10464  01B266                     __ptext38:
 10465                           	opt callstack 0
 10466  01B266                     _wdtdelay:
 10467                           	opt callstack 13
 10468                           
 10469                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 10470                           
 10471                           ; BSR set to: 0
 10472                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10473                           ;incstack = 0
 10474  01B266  0100               	movlb	0	; () banked
 10475  01B268  6B9A               	clrf	wdtdelay@dcount& (0+255),b
 10476  01B26A  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
 10477  01B26C  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
 10478  01B26E  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
 10479  01B270                     l1459:
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;eadog.c: 28:   __nop();
 10483  01B270  F000               	nop	
 10484  01B272  0004               	clrwdt		;# 
 10485                           
 10486                           ;eadog.c: 30:  };
 10487  01B274  0E01               	movlw	1
 10488  01B276  0100               	movlb	0	; () banked
 10489  01B278  279A               	addwf	wdtdelay@dcount& (0+255),f,b
 10490  01B27A  0E00               	movlw	0
 10491  01B27C  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 10492  01B27E  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 10493  01B280  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 10494                           
 10495                           ; BSR set to: 0
 10496                           ;stkvar	_delay @ sp[(0)+-4]
 10497  01B282  0EFC               	movlw	-4
 10498  01B284  006F FF8C  F001    	movff	plusw1,btemp
 10499  01B28A  519A               	movf	wdtdelay@dcount& (0+255),w,b
 10500  01B28C  5C01               	subwf	btemp^0,w,c
 10501  01B28E  0EFD               	movlw	-3
 10502  01B290  006F FF8C  F001    	movff	plusw1,btemp
 10503  01B296  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 10504  01B298  5801               	subwfb	btemp^0,w,c
 10505  01B29A  0EFE               	movlw	-2
 10506  01B29C  006F FF8C  F001    	movff	plusw1,btemp
 10507  01B2A2  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 10508  01B2A4  5801               	subwfb	btemp^0,w,c
 10509  01B2A6  0EFF               	movlw	-1
 10510  01B2A8  006F FF8C  F001    	movff	plusw1,btemp
 10511  01B2AE  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 10512  01B2B0  5801               	subwfb	btemp^0,w,c
 10513  01B2B2  B0D8               	btfsc	status,0,c
 10514  01B2B4  D7DD               	goto	l1459
 10515                           
 10516                           ; BSR set to: 0
 10517                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 10518  01B2B6  52E5               	movf	postdec1,f,c
 10519  01B2B8  52E5               	movf	postdec1,f,c
 10520  01B2BA  52E5               	movf	postdec1,f,c
 10521  01B2BC  52E5               	movf	postdec1,f,c
 10522  01B2BE  0012               	return		;funcret
 10523  01B2C0                     __end_of_wdtdelay:
 10524                           	opt callstack 0
 10525                           
 10526 ;; *************** function _send_lcd_data_dma *****************
 10527 ;; Defined at:
 10528 ;;		line 188 in file "eadog.c"
 10529 ;; Parameters:    Size  Location     Type
 10530 ;;  strPtr          1  [STACK] unsigned char 
 10531 ;; Auto vars:     Size  Location     Type
 10532 ;;		None
 10533 ;; Return value:  Size  Location     Type
 10534 ;;                  1  [STACK] void 
 10535 ;; Registers used:
 10536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10537 ;; Tracked objects:
 10538 ;;		On entry : 0/0
 10539 ;;		On exit  : 3F/3B
 10540 ;;		Unchanged: 0/0
 10541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10546 ;;Total ram usage:        0 bytes
 10547 ;; Hardware stack levels used:    1
 10548 ;; Hardware stack levels required when called:   24
 10549 ;; This function calls:
 10550 ;;		_printf
 10551 ;;		_ringBufS_flush
 10552 ;;		_start_lcd
 10553 ;;		_wait_lcd_set
 10554 ;; This function is called by:
 10555 ;;		_send_lcd_cmd_dma
 10556 ;;		_eaDogM_WriteStringAtPos
 10557 ;; This function uses a reentrant model
 10558 ;;
 10559                           
 10560                           	psect	text39
 10561  01B40C                     __ptext39:
 10562                           	opt callstack 0
 10563  01B40C                     _send_lcd_data_dma:
 10564                           	opt callstack 4
 10565                           
 10566                           ;eadog.c: 188: void send_lcd_data_dma(uint8_t strPtr);eadog.c: 189: {;eadog.c: 190:  wai
      +                          t_lcd_set();
 10567                           
 10568                           ; BSR set to: 0
 10569                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10570                           ;incstack = 0
 10571  01B40C  ECE6  F0E0         	call	_wait_lcd_set	;wreg free
 10572                           
 10573                           ; BSR set to: 0
 10574                           ;eadog.c: 192:  ringBufS_flush(spi_link.tx1a, 0);
 10575  01B410  0E00               	movlw	0
 10576  01B412  6EE6               	movwf	postinc1,c
 10577  01B414  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10578  01B41A  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10579  01B420  EC9A  F0D5         	call	_ringBufS_flush	;wreg free
 10580  01B424  94BC               	bcf	188,2,c	;volatile
 10581                           
 10582                           ;eadog.c: 194:  DMA1CON0bits.EN = 0;
 10583  01B426  013B               	movlb	59	; () banked
 10584  01B428  9FFC               	bcf	252,7,b	;volatile
 10585                           
 10586                           ; BSR set to: 59
 10587                           ;eadog.c: 195:  DMA1SSZ = 1;
 10588  01B42A  0E00               	movlw	0
 10589  01B42C  6FF8               	movwf	248,b	;volatile
 10590  01B42E  0E01               	movlw	1
 10591  01B430  6FF7               	movwf	247,b	;volatile
 10592                           
 10593                           ; BSR set to: 59
 10594                           ;eadog.c: 196:  DMA1CON0bits.EN = 1;
 10595  01B432  8FFC               	bsf	252,7,b	;volatile
 10596                           
 10597                           ; BSR set to: 59
 10598                           ;eadog.c: 197:  printf("%c", strPtr);
 10599                           ;stkvar	_strPtr @ sp[(0)+-1]
 10600  01B434  0EFF               	movlw	-1
 10601  01B436  50E3               	movf	plusw1,w,c
 10602  01B438  6EE6               	movwf	postinc1,c
 10603  01B43A  0E00               	movlw	0
 10604  01B43C  6EE6               	movwf	postinc1,c
 10605  01B43E  0EF9               	movlw	low STR_44
 10606  01B440  6EE6               	movwf	postinc1,c
 10607  01B442  0EFF               	movlw	high STR_44
 10608  01B444  6EE6               	movwf	postinc1,c
 10609  01B446  0E04               	movlw	4
 10610  01B448  6EE6               	movwf	postinc1,c
 10611  01B44A  EC74  F0D8         	call	_printf	;wreg free
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;eadog.c: 198:  start_lcd();
 10615  01B44E  ECE9  F0E0         	call	_start_lcd	;wreg free
 10616                           
 10617                           ; BSR set to: 59
 10618                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 10619  01B452  52E5               	movf	postdec1,f,c
 10620  01B454  0012               	return		;funcret
 10621  01B456                     __end_of_send_lcd_data_dma:
 10622                           	opt callstack 0
 10623                           
 10624 ;; *************** function _eaDogM_WriteString *****************
 10625 ;; Defined at:
 10626 ;;		line 157 in file "eadog.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;  strPtr          2  [STACK] PTR unsigned char 
 10629 ;;		 -> D.lcd(480), D(482), V(191), 
 10630 ;; Auto vars:     Size  Location     Type
 10631 ;;		None
 10632 ;; Return value:  Size  Location     Type
 10633 ;;                  1  [STACK] void 
 10634 ;; Registers used:
 10635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10636 ;; Tracked objects:
 10637 ;;		On entry : 3F/0
 10638 ;;		On exit  : 3F/3B
 10639 ;;		Unchanged: 0/0
 10640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10645 ;;Total ram usage:        0 bytes
 10646 ;; Hardware stack levels used:    1
 10647 ;; Hardware stack levels required when called:   24
 10648 ;; This function calls:
 10649 ;;		_printf
 10650 ;;		_ringBufS_flush
 10651 ;;		_start_lcd
 10652 ;;		_strlen
 10653 ;;		_wait_lcd_set
 10654 ;; This function is called by:
 10655 ;;		_eaDogM_WriteStringAtPos
 10656 ;; This function uses a reentrant model
 10657 ;;
 10658                           
 10659                           	psect	text40
 10660  01A8C0                     __ptext40:
 10661                           	opt callstack 0
 10662  01A8C0                     _eaDogM_WriteString:
 10663                           	opt callstack 4
 10664                           
 10665                           ;eadog.c: 157: void eaDogM_WriteString(char *strPtr);eadog.c: 158: {;eadog.c: 159:  wait
      +                          _lcd_set();
 10666                           
 10667                           ; BSR set to: 59
 10668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10669                           ;incstack = 0
 10670  01A8C0  ECE6  F0E0         	call	_wait_lcd_set	;wreg free
 10671                           
 10672                           ; BSR set to: 0
 10673                           ;eadog.c: 161:  ringBufS_flush(spi_link.tx1a, 0);
 10674  01A8C4  0E00               	movlw	0
 10675  01A8C6  6EE6               	movwf	postinc1,c
 10676  01A8C8  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10677  01A8CE  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10678  01A8D4  EC9A  F0D5         	call	_ringBufS_flush	;wreg free
 10679  01A8D8  94BC               	bcf	188,2,c	;volatile
 10680                           
 10681                           ;eadog.c: 163:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10682                           ;stkvar	_strPtr @ sp[(0)+-2]
 10683  01A8DA  0EFE               	movlw	-2
 10684  01A8DC  006F FF8F FFE6     	movff	plusw1,postinc1
 10685  01A8E2  006F FF8F FFE6     	movff	plusw1,postinc1
 10686  01A8E8  ECB3  F0D4         	call	_strlen	;wreg free
 10687  01A8EC  5002               	movf	(btemp+1)^0,w,c
 10688  01A8EE  E104               	bnz	u12300
 10689  01A8F0  0E41               	movlw	65
 10690  01A8F2  5C01               	subwf	btemp^0,w,c
 10691  01A8F4  A0D8               	btfss	status,0,c
 10692  01A8F6  D010               	goto	l12720
 10693  01A8F8                     u12300:
 10694                           
 10695                           ;stkvar	_strPtr @ sp[(0)+-2]
 10696  01A8F8  0EFE               	movlw	-2
 10697  01A8FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 10698  01A900  0EFF               	movlw	-1
 10699  01A902  006F FF8C  F00C    	movff	plusw1,btemp+11
 10700  01A908  0E40               	movlw	64
 10701  01A90A  240B               	addwf	(btemp+10)^0,w,c
 10702  01A90C  6ED9               	movwf	fsr2l,c
 10703  01A90E  0E00               	movlw	0
 10704  01A910  200C               	addwfc	(btemp+11)^0,w,c
 10705  01A912  6EDA               	movwf	fsr2h,c
 10706  01A914  0E00               	movlw	0
 10707  01A916  6EDF               	movwf	indf2,c
 10708  01A918                     l12720:
 10709                           
 10710                           ;eadog.c: 164:  DMA1CON0bits.EN = 0;
 10711  01A918  013B               	movlb	59	; () banked
 10712  01A91A  9FFC               	bcf	252,7,b	;volatile
 10713                           
 10714                           ; BSR set to: 59
 10715                           ;eadog.c: 165:  DMA1SSZ = strlen(strPtr);
 10716                           ;stkvar	_strPtr @ sp[(0)+-2]
 10717  01A91C  0EFE               	movlw	-2
 10718  01A91E  006F FF8F FFE6     	movff	plusw1,postinc1
 10719  01A924  006F FF8F FFE6     	movff	plusw1,postinc1
 10720  01A92A  ECB3  F0D4         	call	_strlen	;wreg free
 10721  01A92E  0060  F007  FBF7   	movff	btemp,15351	;volatile
 10722  01A934  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 10723                           
 10724                           ;eadog.c: 166:  DMA1CON0bits.EN = 1;
 10725  01A93A  013B               	movlb	59	; () banked
 10726  01A93C  8FFC               	bsf	252,7,b	;volatile
 10727                           
 10728                           ; BSR set to: 59
 10729                           ;eadog.c: 167:  printf("%s", strPtr);
 10730                           ;stkvar	_strPtr @ sp[(0)+-2]
 10731  01A93E  0EFE               	movlw	-2
 10732  01A940  006F FF8F FFE6     	movff	plusw1,postinc1
 10733  01A946  006F FF8F FFE6     	movff	plusw1,postinc1
 10734  01A94C  0EFC               	movlw	low STR_43
 10735  01A94E  6EE6               	movwf	postinc1,c
 10736  01A950  0EFF               	movlw	high STR_43
 10737  01A952  6EE6               	movwf	postinc1,c
 10738  01A954  0E04               	movlw	4
 10739  01A956  6EE6               	movwf	postinc1,c
 10740  01A958  EC74  F0D8         	call	_printf	;wreg free
 10741                           
 10742                           ; BSR set to: 0
 10743                           ;eadog.c: 168:  start_lcd();
 10744  01A95C  ECE9  F0E0         	call	_start_lcd	;wreg free
 10745                           
 10746                           ; BSR set to: 59
 10747                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10748  01A960  52E5               	movf	postdec1,f,c
 10749  01A962  52E5               	movf	postdec1,f,c
 10750  01A964  0012               	return		;funcret
 10751  01A966                     __end_of_eaDogM_WriteString:
 10752                           	opt callstack 0
 10753                           
 10754 ;; *************** function _wait_lcd_set *****************
 10755 ;; Defined at:
 10756 ;;		line 440 in file "eadog.c"
 10757 ;; Parameters:    Size  Location     Type
 10758 ;;		None
 10759 ;; Auto vars:     Size  Location     Type
 10760 ;;		None
 10761 ;; Return value:  Size  Location     Type
 10762 ;;                  1  [STACK] void 
 10763 ;; Registers used:
 10764 ;;		None
 10765 ;; Tracked objects:
 10766 ;;		On entry : 0/0
 10767 ;;		On exit  : 3F/0
 10768 ;;		Unchanged: 0/0
 10769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10774 ;;Total ram usage:        0 bytes
 10775 ;; Hardware stack levels used:    1
 10776 ;; Hardware stack levels required when called:   15
 10777 ;; This function calls:
 10778 ;;		Nothing
 10779 ;; This function is called by:
 10780 ;;		_eaDogM_WriteString
 10781 ;;		_send_lcd_data_dma
 10782 ;; This function uses a reentrant model
 10783 ;;
 10784                           
 10785                           	psect	text41
 10786  01C1CC                     __ptext41:
 10787                           	opt callstack 0
 10788  01C1CC                     _wait_lcd_set:
 10789                           	opt callstack 12
 10790                           
 10791                           ;eadog.c: 442:  spi_link.LCD_DATA = 1;
 10792                           
 10793                           ; BSR set to: 59
 10794                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10795                           ;incstack = 0
 10796  01C1CC  0100               	movlb	0	; () banked
 10797  01C1CE  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10798                           
 10799                           ; BSR set to: 0
 10800                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10801  01C1D0  0012               	return		;funcret
 10802  01C1D2                     __end_of_wait_lcd_set:
 10803                           	opt callstack 0
 10804                           
 10805 ;; *************** function _start_lcd *****************
 10806 ;; Defined at:
 10807 ;;		line 435 in file "eadog.c"
 10808 ;; Parameters:    Size  Location     Type
 10809 ;;		None
 10810 ;; Auto vars:     Size  Location     Type
 10811 ;;		None
 10812 ;; Return value:  Size  Location     Type
 10813 ;;                  1  [STACK] void 
 10814 ;; Registers used:
 10815 ;;		None
 10816 ;; Tracked objects:
 10817 ;;		On entry : 3F/0
 10818 ;;		On exit  : 3F/3B
 10819 ;;		Unchanged: 0/0
 10820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10825 ;;Total ram usage:        0 bytes
 10826 ;; Hardware stack levels used:    1
 10827 ;; Hardware stack levels required when called:   15
 10828 ;; This function calls:
 10829 ;;		Nothing
 10830 ;; This function is called by:
 10831 ;;		_eaDogM_WriteString
 10832 ;;		_send_lcd_data_dma
 10833 ;; This function uses a reentrant model
 10834 ;;
 10835                           
 10836                           	psect	text42
 10837  01C1D2                     __ptext42:
 10838                           	opt callstack 0
 10839  01C1D2                     _start_lcd:
 10840                           	opt callstack 12
 10841                           
 10842                           ;eadog.c: 437:  DMA1CON0bits.DMA1SIRQEN = 1;
 10843                           
 10844                           ; BSR set to: 0
 10845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10846                           ;incstack = 0
 10847  01C1D2  013B               	movlb	59	; () banked
 10848  01C1D4  8DFC               	bsf	252,6,b	;volatile
 10849                           
 10850                           ; BSR set to: 59
 10851                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10852  01C1D6  0012               	return		;funcret
 10853  01C1D8                     __end_of_start_lcd:
 10854                           	opt callstack 0
 10855                           
 10856 ;; *************** function _ringBufS_flush *****************
 10857 ;; Defined at:
 10858 ;;		line 76 in file "ringbufs.c"
 10859 ;; Parameters:    Size  Location     Type
 10860 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10861 ;;		 -> ring_buf1(67), 
 10862 ;;  clearBuffer     1  [STACK] const char 
 10863 ;; Auto vars:     Size  Location     Type
 10864 ;;		None
 10865 ;; Return value:  Size  Location     Type
 10866 ;;                  1  [STACK] void 
 10867 ;; Registers used:
 10868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10869 ;; Tracked objects:
 10870 ;;		On entry : 3F/0
 10871 ;;		On exit  : 0/0
 10872 ;;		Unchanged: 0/0
 10873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10878 ;;Total ram usage:        0 bytes
 10879 ;; Hardware stack levels used:    1
 10880 ;; Hardware stack levels required when called:   16
 10881 ;; This function calls:
 10882 ;;		_memset
 10883 ;; This function is called by:
 10884 ;;		_eaDogM_WriteString
 10885 ;;		_send_lcd_data_dma
 10886 ;; This function uses a reentrant model
 10887 ;;
 10888                           
 10889                           	psect	text43
 10890  01AB34                     __ptext43:
 10891                           	opt callstack 0
 10892  01AB34                     _ringBufS_flush:
 10893                           	opt callstack 11
 10894                           
 10895                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10896                           ;stkvar	__this @ sp[(0)+-2]
 10897                           
 10898                           ; BSR set to: 59
 10899                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10900                           ;incstack = 0
 10901  01AB34  0EFE               	movlw	-2
 10902  01AB36  006F FF8C  F00B    	movff	plusw1,btemp+10
 10903  01AB3C  0EFF               	movlw	-1
 10904  01AB3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 10905  01AB44  0E42               	movlw	66
 10906  01AB46  240B               	addwf	(btemp+10)^0,w,c
 10907  01AB48  6ED9               	movwf	fsr2l,c
 10908  01AB4A  0E00               	movlw	0
 10909  01AB4C  200C               	addwfc	(btemp+11)^0,w,c
 10910  01AB4E  6EDA               	movwf	fsr2h,c
 10911  01AB50  0E00               	movlw	0
 10912  01AB52  6EDF               	movwf	indf2,c
 10913                           
 10914                           ;ringbufs.c: 79:  _this->head = 0;
 10915                           ;stkvar	__this @ sp[(0)+-2]
 10916  01AB54  0EFE               	movlw	-2
 10917  01AB56  006F FF8C  F00B    	movff	plusw1,btemp+10
 10918  01AB5C  0EFF               	movlw	-1
 10919  01AB5E  006F FF8C  F00C    	movff	plusw1,btemp+11
 10920  01AB64  0E40               	movlw	64
 10921  01AB66  240B               	addwf	(btemp+10)^0,w,c
 10922  01AB68  6ED9               	movwf	fsr2l,c
 10923  01AB6A  0E00               	movlw	0
 10924  01AB6C  200C               	addwfc	(btemp+11)^0,w,c
 10925  01AB6E  6EDA               	movwf	fsr2h,c
 10926  01AB70  0E00               	movlw	0
 10927  01AB72  6EDF               	movwf	indf2,c
 10928                           
 10929                           ;ringbufs.c: 80:  _this->tail = 0;
 10930                           ;stkvar	__this @ sp[(0)+-2]
 10931  01AB74  0EFE               	movlw	-2
 10932  01AB76  006F FF8C  F00B    	movff	plusw1,btemp+10
 10933  01AB7C  0EFF               	movlw	-1
 10934  01AB7E  006F FF8C  F00C    	movff	plusw1,btemp+11
 10935  01AB84  0E41               	movlw	65
 10936  01AB86  240B               	addwf	(btemp+10)^0,w,c
 10937  01AB88  6ED9               	movwf	fsr2l,c
 10938  01AB8A  0E00               	movlw	0
 10939  01AB8C  200C               	addwfc	(btemp+11)^0,w,c
 10940  01AB8E  6EDA               	movwf	fsr2h,c
 10941  01AB90  0E00               	movlw	0
 10942  01AB92  6EDF               	movwf	indf2,c
 10943                           
 10944                           ;ringbufs.c: 81:  if (clearBuffer) {
 10945                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10946  01AB94  0EFD               	movlw	-3
 10947  01AB96  50E3               	movf	plusw1,w,c
 10948  01AB98  B4D8               	btfsc	status,2,c
 10949  01AB9A  D011               	goto	l1590
 10950                           
 10951                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10952  01AB9C  0E40               	movlw	64
 10953  01AB9E  6EE6               	movwf	postinc1,c
 10954  01ABA0  0E00               	movlw	0
 10955  01ABA2  6EE6               	movwf	postinc1,c
 10956  01ABA4  0E00               	movlw	0
 10957  01ABA6  6EE6               	movwf	postinc1,c
 10958  01ABA8  0E00               	movlw	0
 10959  01ABAA  6EE6               	movwf	postinc1,c
 10960                           
 10961                           ;stkvar	__this @ sp[(-4)+-2]
 10962  01ABAC  0EFA               	movlw	-6
 10963  01ABAE  006F FF8F FFE6     	movff	plusw1,postinc1
 10964  01ABB4  006F FF8F FFE6     	movff	plusw1,postinc1
 10965  01ABBA  EC16  F0B7         	call	_memset	;wreg free
 10966  01ABBE                     l1590:
 10967                           
 10968                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10969  01ABBE  52E5               	movf	postdec1,f,c
 10970  01ABC0  52E5               	movf	postdec1,f,c
 10971  01ABC2  52E5               	movf	postdec1,f,c
 10972  01ABC4  0012               	return		;funcret
 10973  01ABC6                     __end_of_ringBufS_flush:
 10974                           	opt callstack 0
 10975                           
 10976 ;; *************** function _memset *****************
 10977 ;; Defined at:
 10978 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10979 ;; Parameters:    Size  Location     Type
 10980 ;;  dest            2  [STACK] PTR void 
 10981 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10982 ;;  c               2  [STACK] int 
 10983 ;;  n               2  [STACK] unsigned int 
 10984 ;; Auto vars:     Size  Location     Type
 10985 ;;  s               2  [STACK] PTR unsigned char 
 10986 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10987 ;;  k               2  [STACK] unsigned int 
 10988 ;; Return value:  Size  Location     Type
 10989 ;;                  2  [STACK] PTR void 
 10990 ;; Registers used:
 10991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10992 ;; Tracked objects:
 10993 ;;		On entry : 0/0
 10994 ;;		On exit  : 0/0
 10995 ;;		Unchanged: 0/0
 10996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11001 ;;Total ram usage:        0 bytes
 11002 ;; Hardware stack levels used:    1
 11003 ;; Hardware stack levels required when called:   15
 11004 ;; This function calls:
 11005 ;;		Nothing
 11006 ;; This function is called by:
 11007 ;;		_ringBufS_init
 11008 ;;		_ringBufS_flush
 11009 ;; This function uses a reentrant model
 11010 ;;
 11011                           
 11012                           	psect	text44
 11013  016E2C                     __ptext44:
 11014                           	opt callstack 0
 11015  016E2C                     _memset:
 11016                           	opt callstack 0
 11017                           
 11018                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11019  016E2C  52E6               	movf	postinc1,f,c
 11020  016E2E  52E6               	movf	postinc1,f,c
 11021  016E30  52E6               	movf	postinc1,f,c
 11022  016E32  52E6               	movf	postinc1,f,c
 11023                           
 11024                           ;stkvar	_dest @ sp[(-4)+-2]
 11025                           
 11026                           ;incstack = 0
 11027  016E34  0EFA               	movlw	-6
 11028  016E36  006F FF8C  F00B    	movff	plusw1,btemp+10
 11029  016E3C  0EFB               	movlw	-5
 11030  016E3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 11031                           
 11032                           ;stkvar	_s @ sp[(-4)+0]
 11033  016E44  0EFD               	movlw	-3
 11034  016E46  0060  F033  FFE3   	movff	btemp+11,plusw1
 11035  016E4C  0EFC               	movlw	-4
 11036  016E4E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11037                           
 11038                           ;stkvar	_n @ sp[(-4)+-6]
 11039  016E54  0EF6               	movlw	-10
 11040  016E56  006F FF8C  F001    	movff	plusw1,btemp
 11041  016E5C  0EF7               	movlw	-9
 11042  016E5E  50E3               	movf	plusw1,w,c
 11043  016E60  1001               	iorwf	btemp^0,w,c
 11044  016E62  B4D8               	btfsc	status,2,c
 11045  016E64  D154               	goto	u10850
 11046                           
 11047                           ;stkvar	_c @ sp[(-4)+-4]
 11048                           ;stkvar	_s @ sp[(-4)+0]
 11049  016E66  0EFC               	movlw	-4
 11050  016E68  006F FF8F FFD9     	movff	plusw1,fsr2l
 11051  016E6E  0EFD               	movlw	-3
 11052  016E70  006F FF8F FFDA     	movff	plusw1,fsr2h
 11053  016E76  0EF8               	movlw	-8
 11054  016E78  006F FF8F FFDF     	movff	plusw1,indf2
 11055                           
 11056                           ;stkvar	_c @ sp[(-4)+-4]
 11057                           ;stkvar	_n @ sp[(-4)+-6]
 11058                           ;stkvar	_s @ sp[(-4)+0]
 11059  016E7E  0EFC               	movlw	-4
 11060  016E80  006F FF8C  F00B    	movff	plusw1,btemp+10
 11061  016E86  0EFD               	movlw	-3
 11062  016E88  006F FF8C  F00C    	movff	plusw1,btemp+11
 11063  016E8E  0EF6               	movlw	-10
 11064  016E90  50E3               	movf	plusw1,w,c
 11065  016E92  260B               	addwf	(btemp+10)^0,f,c
 11066  016E94  0EF7               	movlw	-9
 11067  016E96  50E3               	movf	plusw1,w,c
 11068  016E98  220C               	addwfc	(btemp+11)^0,f,c
 11069  016E9A  0EFF               	movlw	255
 11070  016E9C  240B               	addwf	(btemp+10)^0,w,c
 11071  016E9E  6ED9               	movwf	fsr2l,c
 11072  016EA0  0EFF               	movlw	255
 11073  016EA2  200C               	addwfc	(btemp+11)^0,w,c
 11074  016EA4  6EDA               	movwf	fsr2h,c
 11075  016EA6  0EF8               	movlw	-8
 11076  016EA8  006F FF8F FFDF     	movff	plusw1,indf2
 11077                           
 11078                           ;stkvar	_n @ sp[(-4)+-6]
 11079  016EAE  0EF7               	movlw	-9
 11080  016EB0  50E3               	movf	plusw1,w,c
 11081  016EB2  E108               	bnz	l11872
 11082  016EB4  0EF6               	movlw	-10
 11083  016EB6  006F FF8C  F001    	movff	plusw1,btemp
 11084  016EBC  0E03               	movlw	3
 11085  016EBE  5E01               	subwf	btemp^0,f,c
 11086  016EC0  A0D8               	btfss	status,0,c
 11087  016EC2  D125               	goto	u10850
 11088  016EC4                     l11872:
 11089                           
 11090                           ;stkvar	_c @ sp[(-4)+-4]
 11091                           ;stkvar	_s @ sp[(-4)+0]
 11092  016EC4  0EFC               	movlw	-4
 11093  016EC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 11094  016ECC  0EFD               	movlw	-3
 11095  016ECE  006F FF8C  F00C    	movff	plusw1,btemp+11
 11096  016ED4  0E01               	movlw	1
 11097  016ED6  240B               	addwf	(btemp+10)^0,w,c
 11098  016ED8  6ED9               	movwf	fsr2l,c
 11099  016EDA  0E00               	movlw	0
 11100  016EDC  200C               	addwfc	(btemp+11)^0,w,c
 11101  016EDE  6EDA               	movwf	fsr2h,c
 11102  016EE0  0EF8               	movlw	-8
 11103  016EE2  006F FF8F FFDF     	movff	plusw1,indf2
 11104                           
 11105                           ;stkvar	_c @ sp[(-4)+-4]
 11106                           ;stkvar	_s @ sp[(-4)+0]
 11107  016EE8  0EFC               	movlw	-4
 11108  016EEA  006F FF8C  F00B    	movff	plusw1,btemp+10
 11109  016EF0  0EFD               	movlw	-3
 11110  016EF2  006F FF8C  F00C    	movff	plusw1,btemp+11
 11111  016EF8  0E02               	movlw	2
 11112  016EFA  240B               	addwf	(btemp+10)^0,w,c
 11113  016EFC  6ED9               	movwf	fsr2l,c
 11114  016EFE  0E00               	movlw	0
 11115  016F00  200C               	addwfc	(btemp+11)^0,w,c
 11116  016F02  6EDA               	movwf	fsr2h,c
 11117  016F04  0EF8               	movlw	-8
 11118  016F06  006F FF8F FFDF     	movff	plusw1,indf2
 11119                           
 11120                           ;stkvar	_c @ sp[(-4)+-4]
 11121                           ;stkvar	_n @ sp[(-4)+-6]
 11122                           ;stkvar	_s @ sp[(-4)+0]
 11123  016F0C  0EFC               	movlw	-4
 11124  016F0E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11125  016F14  0EFD               	movlw	-3
 11126  016F16  006F FF8C  F00C    	movff	plusw1,btemp+11
 11127  016F1C  0EF6               	movlw	-10
 11128  016F1E  50E3               	movf	plusw1,w,c
 11129  016F20  260B               	addwf	(btemp+10)^0,f,c
 11130  016F22  0EF7               	movlw	-9
 11131  016F24  50E3               	movf	plusw1,w,c
 11132  016F26  220C               	addwfc	(btemp+11)^0,f,c
 11133  016F28  0EFE               	movlw	254
 11134  016F2A  240B               	addwf	(btemp+10)^0,w,c
 11135  016F2C  6ED9               	movwf	fsr2l,c
 11136  016F2E  0EFF               	movlw	255
 11137  016F30  200C               	addwfc	(btemp+11)^0,w,c
 11138  016F32  6EDA               	movwf	fsr2h,c
 11139  016F34  0EF8               	movlw	-8
 11140  016F36  006F FF8F FFDF     	movff	plusw1,indf2
 11141                           
 11142                           ;stkvar	_c @ sp[(-4)+-4]
 11143                           ;stkvar	_n @ sp[(-4)+-6]
 11144                           ;stkvar	_s @ sp[(-4)+0]
 11145  016F3C  0EFC               	movlw	-4
 11146  016F3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 11147  016F44  0EFD               	movlw	-3
 11148  016F46  006F FF8C  F00C    	movff	plusw1,btemp+11
 11149  016F4C  0EF6               	movlw	-10
 11150  016F4E  50E3               	movf	plusw1,w,c
 11151  016F50  260B               	addwf	(btemp+10)^0,f,c
 11152  016F52  0EF7               	movlw	-9
 11153  016F54  50E3               	movf	plusw1,w,c
 11154  016F56  220C               	addwfc	(btemp+11)^0,f,c
 11155  016F58  0EFD               	movlw	253
 11156  016F5A  240B               	addwf	(btemp+10)^0,w,c
 11157  016F5C  6ED9               	movwf	fsr2l,c
 11158  016F5E  0EFF               	movlw	255
 11159  016F60  200C               	addwfc	(btemp+11)^0,w,c
 11160  016F62  6EDA               	movwf	fsr2h,c
 11161  016F64  0EF8               	movlw	-8
 11162  016F66  006F FF8F FFDF     	movff	plusw1,indf2
 11163                           
 11164                           ;stkvar	_n @ sp[(-4)+-6]
 11165  016F6C  0EF7               	movlw	-9
 11166  016F6E  50E3               	movf	plusw1,w,c
 11167  016F70  E108               	bnz	l11878
 11168  016F72  0EF6               	movlw	-10
 11169  016F74  006F FF8C  F001    	movff	plusw1,btemp
 11170  016F7A  0E07               	movlw	7
 11171  016F7C  5E01               	subwf	btemp^0,f,c
 11172  016F7E  A0D8               	btfss	status,0,c
 11173  016F80  D0C6               	goto	u10850
 11174  016F82                     l11878:
 11175                           
 11176                           ;stkvar	_c @ sp[(-4)+-4]
 11177                           ;stkvar	_s @ sp[(-4)+0]
 11178  016F82  0EFC               	movlw	-4
 11179  016F84  006F FF8C  F00B    	movff	plusw1,btemp+10
 11180  016F8A  0EFD               	movlw	-3
 11181  016F8C  006F FF8C  F00C    	movff	plusw1,btemp+11
 11182  016F92  0E03               	movlw	3
 11183  016F94  240B               	addwf	(btemp+10)^0,w,c
 11184  016F96  6ED9               	movwf	fsr2l,c
 11185  016F98  0E00               	movlw	0
 11186  016F9A  200C               	addwfc	(btemp+11)^0,w,c
 11187  016F9C  6EDA               	movwf	fsr2h,c
 11188  016F9E  0EF8               	movlw	-8
 11189  016FA0  006F FF8F FFDF     	movff	plusw1,indf2
 11190                           
 11191                           ;stkvar	_c @ sp[(-4)+-4]
 11192                           ;stkvar	_n @ sp[(-4)+-6]
 11193                           ;stkvar	_s @ sp[(-4)+0]
 11194  016FA6  0EFC               	movlw	-4
 11195  016FA8  006F FF8C  F00B    	movff	plusw1,btemp+10
 11196  016FAE  0EFD               	movlw	-3
 11197  016FB0  006F FF8C  F00C    	movff	plusw1,btemp+11
 11198  016FB6  0EF6               	movlw	-10
 11199  016FB8  50E3               	movf	plusw1,w,c
 11200  016FBA  260B               	addwf	(btemp+10)^0,f,c
 11201  016FBC  0EF7               	movlw	-9
 11202  016FBE  50E3               	movf	plusw1,w,c
 11203  016FC0  220C               	addwfc	(btemp+11)^0,f,c
 11204  016FC2  0EFC               	movlw	252
 11205  016FC4  240B               	addwf	(btemp+10)^0,w,c
 11206  016FC6  6ED9               	movwf	fsr2l,c
 11207  016FC8  0EFF               	movlw	255
 11208  016FCA  200C               	addwfc	(btemp+11)^0,w,c
 11209  016FCC  6EDA               	movwf	fsr2h,c
 11210  016FCE  0EF8               	movlw	-8
 11211  016FD0  006F FF8F FFDF     	movff	plusw1,indf2
 11212                           
 11213                           ;stkvar	_n @ sp[(-4)+-6]
 11214  016FD6  0EF7               	movlw	-9
 11215  016FD8  50E3               	movf	plusw1,w,c
 11216  016FDA  E108               	bnz	l11884
 11217  016FDC  0EF6               	movlw	-10
 11218  016FDE  006F FF8C  F001    	movff	plusw1,btemp
 11219  016FE4  0E09               	movlw	9
 11220  016FE6  5E01               	subwf	btemp^0,f,c
 11221  016FE8  A0D8               	btfss	status,0,c
 11222  016FEA  D091               	goto	u10850
 11223  016FEC                     l11884:
 11224                           
 11225                           ;stkvar	_s @ sp[(-4)+0]
 11226  016FEC  0EFC               	movlw	-4
 11227  016FEE  006F FF8C  F00B    	movff	plusw1,btemp+10
 11228  016FF4  1E0B               	comf	(btemp+10)^0,f,c
 11229  016FF6  0EFD               	movlw	-3
 11230  016FF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 11231  016FFE  1E0C               	comf	(btemp+11)^0,f,c
 11232  017000  2A0B               	incf	(btemp+10)^0,f,c
 11233  017002  B4D8               	btfsc	status,2,c
 11234  017004  2A0C               	incf	(btemp+11)^0,f,c
 11235  017006  0E03               	movlw	3
 11236  017008  160B               	andwf	(btemp+10)^0,f,c
 11237  01700A  0E00               	movlw	0
 11238  01700C  160C               	andwf	(btemp+11)^0,f,c
 11239                           
 11240                           ;stkvar	_k @ sp[(-4)+2]
 11241  01700E  0EFE               	movlw	-2
 11242  017010  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11243  017016  0EFF               	movlw	-1
 11244  017018  0060  F033  FFE3   	movff	btemp+11,plusw1
 11245                           
 11246                           ;stkvar	_k @ sp[(-4)+2]
 11247                           ;stkvar	_s @ sp[(-4)+0]
 11248  01701E  0EFC               	movlw	-4
 11249  017020  50E3               	movf	plusw1,w,c
 11250  017022  6E01               	movwf	btemp^0,c
 11251  017024  0EFE               	movlw	-2
 11252  017026  50E3               	movf	plusw1,w,c
 11253  017028  2601               	addwf	btemp^0,f,c
 11254  01702A  0EFC               	movlw	-4
 11255  01702C  0060  F007  FFE3   	movff	btemp,plusw1
 11256  017032  0EFD               	movlw	-3
 11257  017034  50E3               	movf	plusw1,w,c
 11258  017036  6E01               	movwf	btemp^0,c
 11259  017038  0EFF               	movlw	-1
 11260  01703A  50E3               	movf	plusw1,w,c
 11261  01703C  2201               	addwfc	btemp^0,f,c
 11262  01703E  0EFD               	movlw	-3
 11263  017040  0060  F007  FFE3   	movff	btemp,plusw1
 11264                           
 11265                           ;stkvar	_k @ sp[(-4)+2]
 11266                           ;stkvar	_n @ sp[(-4)+-6]
 11267  017046  0EF6               	movlw	-10
 11268  017048  50E3               	movf	plusw1,w,c
 11269  01704A  6E01               	movwf	btemp^0,c
 11270  01704C  0EFE               	movlw	-2
 11271  01704E  50E3               	movf	plusw1,w,c
 11272  017050  5E01               	subwf	btemp^0,f,c
 11273  017052  0EF6               	movlw	-10
 11274  017054  0060  F007  FFE3   	movff	btemp,plusw1
 11275  01705A  0EF7               	movlw	-9
 11276  01705C  50E3               	movf	plusw1,w,c
 11277  01705E  6E01               	movwf	btemp^0,c
 11278  017060  0EFF               	movlw	-1
 11279  017062  50E3               	movf	plusw1,w,c
 11280  017064  5A01               	subwfb	btemp^0,f,c
 11281  017066  0EF7               	movlw	-9
 11282  017068  0060  F007  FFE3   	movff	btemp,plusw1
 11283  01706E  0EFC               	movlw	252
 11284  017070  6E0B               	movwf	(btemp+10)^0,c
 11285  017072  0EFF               	movlw	255
 11286  017074  6E0C               	movwf	(btemp+11)^0,c
 11287                           
 11288                           ;stkvar	_n @ sp[(-4)+-6]
 11289  017076  0EF6               	movlw	-10
 11290  017078  006F FF8C  F001    	movff	plusw1,btemp
 11291  01707E  500B               	movf	(btemp+10)^0,w,c
 11292  017080  1601               	andwf	btemp^0,f,c
 11293  017082  0EF6               	movlw	-10
 11294  017084  0060  F007  FFE3   	movff	btemp,plusw1
 11295  01708A  0EF7               	movlw	-9
 11296  01708C  006F FF8C  F001    	movff	plusw1,btemp
 11297  017092  500C               	movf	(btemp+11)^0,w,c
 11298  017094  1601               	andwf	btemp^0,f,c
 11299  017096  0EF7               	movlw	-9
 11300  017098  D02E               	goto	L9
 11301  01709A                     l11892:
 11302                           
 11303                           ;stkvar	_c @ sp[(-4)+-4]
 11304                           ;stkvar	_s @ sp[(-4)+0]
 11305  01709A  0EFC               	movlw	-4
 11306  01709C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11307  0170A2  0EFD               	movlw	-3
 11308  0170A4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11309  0170AA  0EF8               	movlw	-8
 11310  0170AC  006F FF8F FFDF     	movff	plusw1,indf2
 11311                           
 11312                           ;stkvar	_n @ sp[(-4)+-6]
 11313  0170B2  0EF6               	movlw	-10
 11314  0170B4  006F FF8C  F001    	movff	plusw1,btemp
 11315  0170BA  0E01               	movlw	1
 11316  0170BC  5E01               	subwf	btemp^0,f,c
 11317  0170BE  0EF6               	movlw	-10
 11318  0170C0  0060  F007  FFE3   	movff	btemp,plusw1
 11319  0170C6  0EF7               	movlw	-9
 11320  0170C8  006F FF8C  F001    	movff	plusw1,btemp
 11321  0170CE  0E00               	movlw	0
 11322  0170D0  5A01               	subwfb	btemp^0,f,c
 11323  0170D2  0EF7               	movlw	-9
 11324  0170D4  0060  F007  FFE3   	movff	btemp,plusw1
 11325                           
 11326                           ;stkvar	_s @ sp[(-4)+0]
 11327  0170DA  0EFC               	movlw	-4
 11328  0170DC  50E3               	movf	plusw1,w,c
 11329  0170DE  0F01               	addlw	1
 11330  0170E0  6E01               	movwf	btemp^0,c
 11331  0170E2  0EFC               	movlw	-4
 11332  0170E4  0060  F007  FFE3   	movff	btemp,plusw1
 11333  0170EA  6A01               	clrf	btemp^0,c
 11334  0170EC  0EFD               	movlw	-3
 11335  0170EE  50E3               	movf	plusw1,w,c
 11336  0170F0  2001               	addwfc	btemp^0,w,c
 11337  0170F2  6E01               	movwf	btemp^0,c
 11338  0170F4  0EFD               	movlw	-3
 11339  0170F6                     L9:
 11340  0170F6  0060  F007  FFE3   	movff	btemp,plusw1
 11341                           
 11342                           ;stkvar	_n @ sp[(-4)+-6]
 11343  0170FC  0EF6               	movlw	-10
 11344  0170FE  006F FF8C  F001    	movff	plusw1,btemp
 11345  017104  0EF7               	movlw	-9
 11346  017106  50E3               	movf	plusw1,w,c
 11347  017108  1001               	iorwf	btemp^0,w,c
 11348  01710A  A4D8               	btfss	status,2,c
 11349  01710C  D7C6               	goto	l11892
 11350  01710E                     u10850:
 11351                           
 11352                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 11353  01710E  0EF6               	movlw	246
 11354  017110  26E1               	addwf	fsr1l,f,c
 11355  017112  0EFF               	movlw	255
 11356  017114  22E2               	addwfc	fsr1h,f,c
 11357  017116  0012               	return		;funcret
 11358  017118                     __end_of_memset:
 11359                           	opt callstack 0
 11360                           
 11361 ;; *************** function _printf *****************
 11362 ;; Defined at:
 11363 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 11364 ;; Parameters:    Size  Location     Type
 11365 ;;  fmt             2  [STACK] PTR const unsigned char 
 11366 ;;		 -> STR_44(3), STR_43(3), 
 11367 ;; Auto vars:     Size  Location     Type
 11368 ;;  ap              2  [STACK] PTR void [1]
 11369 ;;		 -> ?_printf(2), ?_sprintf(2), 
 11370 ;;  ret             2    0        int 
 11371 ;; Return value:  Size  Location     Type
 11372 ;;                  2  [STACK] int 
 11373 ;; Registers used:
 11374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11375 ;; Tracked objects:
 11376 ;;		On entry : 3F/3B
 11377 ;;		On exit  : 3F/0
 11378 ;;		Unchanged: 0/0
 11379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11384 ;;Total ram usage:        0 bytes
 11385 ;; Hardware stack levels used:    1
 11386 ;; Hardware stack levels required when called:   23
 11387 ;; This function calls:
 11388 ;;		_vfprintf
 11389 ;; This function is called by:
 11390 ;;		_eaDogM_WriteString
 11391 ;;		_send_lcd_data_dma
 11392 ;; This function uses a reentrant model
 11393 ;;
 11394                           
 11395                           	psect	text45
 11396  01B0E8                     __ptext45:
 11397                           	opt callstack 0
 11398  01B0E8                     _printf:
 11399                           	opt callstack 0
 11400                           
 11401                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11402  01B0E8  52E6               	movf	postinc1,f,c
 11403  01B0EA  52E6               	movf	postinc1,f,c
 11404                           
 11405                           ;stkvar	?_printf @ sp[(-2)+-3]
 11406                           
 11407                           ;incstack = 0
 11408  01B0EC  0EFB               	movlw	251
 11409  01B0EE  24E1               	addwf	fsr1l,w,c
 11410  01B0F0  6E0B               	movwf	(btemp+10)^0,c
 11411  01B0F2  0EFF               	movlw	255
 11412  01B0F4  20E2               	addwfc	fsr1h,w,c
 11413  01B0F6  6E0C               	movwf	(btemp+11)^0,c
 11414                           
 11415                           ;stkvar	_ap @ sp[(-2)+0]
 11416  01B0F8  0EFF               	movlw	-1
 11417  01B0FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 11418  01B100  0EFE               	movlw	-2
 11419  01B102  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11420                           
 11421                           ;stkvar	_ap @ sp[(-2)+0]
 11422  01B108  0EFE               	movlw	254
 11423  01B10A  24E1               	addwf	fsr1l,w,c
 11424  01B10C  6E01               	movwf	btemp^0,c
 11425  01B10E  0EFF               	movlw	255
 11426  01B110  20E2               	addwfc	fsr1h,w,c
 11427  01B112  6E02               	movwf	(btemp+1)^0,c
 11428  01B114  0060  F007  FFE6   	movff	btemp,postinc1
 11429  01B11A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11430                           
 11431                           ;stkvar	_fmt @ sp[(-4)+-3]
 11432  01B120  0EF9               	movlw	-7
 11433  01B122  006F FF8F FFE6     	movff	plusw1,postinc1
 11434  01B128  006F FF8F FFE6     	movff	plusw1,postinc1
 11435  01B12E  0E00               	movlw	0
 11436  01B130  6EE6               	movwf	postinc1,c
 11437  01B132  0E00               	movlw	0
 11438  01B134  6EE6               	movwf	postinc1,c
 11439  01B136  ECB5  F0D3         	call	_vfprintf	;wreg free
 11440                           
 11441                           ; BSR set to: 0
 11442                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 11443  01B13A  52E5               	movf	postdec1,f,c
 11444  01B13C  52E5               	movf	postdec1,f,c
 11445  01B13E  52E5               	movf	postdec1,f,c
 11446  01B140  50E7               	movf	indf1,w,c
 11447  01B142  5EE1               	subwf	fsr1l,f,c
 11448  01B144  0E00               	movlw	0
 11449  01B146  5AE2               	subwfb	fsr1h,f,c
 11450  01B148  0012               	return		;funcret
 11451  01B14A                     __end_of_printf:
 11452                           	opt callstack 0
 11453                           
 11454 ;; *************** function _vfprintf *****************
 11455 ;; Defined at:
 11456 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11457 ;; Parameters:    Size  Location     Type
 11458 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11459 ;;		 -> f(6), NULL(0), 
 11460 ;;  fmt             2  [STACK] PTR const unsigned char 
 11461 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 11462 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 11463 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 11464 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 11465 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(17), 
 11466 ;;		 -> STR_41(16), STR_40(16), STR_39(20), STR_38(20), 
 11467 ;;		 -> STR_37(20), STR_36(20), STR_35(20), STR_34(20), 
 11468 ;;		 -> STR_33(19), STR_32(19), STR_31(19), STR_30(19), 
 11469 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 11470 ;;		 -> STR_25(20), STR_24(19), STR_23(19), STR_22(20), 
 11471 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 11472 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 11473 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 11474 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 11475 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 11476 ;;  ap              2  [STACK] PTR PTR void 
 11477 ;;		 -> ap(2), ap(2), 
 11478 ;; Auto vars:     Size  Location     Type
 11479 ;;  cfmt            2  [STACK] PTR unsigned char 
 11480 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 11481 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 11482 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 11483 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 11484 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(17), 
 11485 ;;		 -> STR_41(16), STR_40(16), STR_39(20), STR_38(20), 
 11486 ;;		 -> STR_37(20), STR_36(20), STR_35(20), STR_34(20), 
 11487 ;;		 -> STR_33(19), STR_32(19), STR_31(19), STR_30(19), 
 11488 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 11489 ;;		 -> STR_25(20), STR_24(19), STR_23(19), STR_22(20), 
 11490 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 11491 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 11492 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 11493 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 11494 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 11495 ;; Return value:  Size  Location     Type
 11496 ;;                  2  [STACK] int 
 11497 ;; Registers used:
 11498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11499 ;; Tracked objects:
 11500 ;;		On entry : 0/0
 11501 ;;		On exit  : 3F/0
 11502 ;;		Unchanged: 0/0
 11503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11508 ;;Total ram usage:        0 bytes
 11509 ;; Hardware stack levels used:    1
 11510 ;; Hardware stack levels required when called:   22
 11511 ;; This function calls:
 11512 ;;		_vfpfcnvrt
 11513 ;; This function is called by:
 11514 ;;		_sprintf
 11515 ;;		_printf
 11516 ;; This function uses a reentrant model
 11517 ;;
 11518                           
 11519                           	psect	text46
 11520  01A76A                     __ptext46:
 11521                           	opt callstack 0
 11522  01A76A                     _vfprintf:
 11523                           	opt callstack 0
 11524                           
 11525                           ; BSR set to: 0
 11526                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11527  01A76A  52E6               	movf	postinc1,f,c
 11528  01A76C  52E6               	movf	postinc1,f,c
 11529                           
 11530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 11531                           ;stkvar	_fmt @ sp[(-2)+-4]
 11532                           
 11533                           ;incstack = 0
 11534 ;; hardware stack exceeded
 11535  01A76E  0EFA               	movlw	-6
 11536  01A770  006F FF8C  F00B    	movff	plusw1,btemp+10
 11537  01A776  0EFB               	movlw	-5
 11538  01A778  006F FF8C  F00C    	movff	plusw1,btemp+11
 11539                           
 11540                           ;stkvar	_cfmt @ sp[(-2)+0]
 11541  01A77E  0EFF               	movlw	-1
 11542  01A780  0060  F033  FFE3   	movff	btemp+11,plusw1
 11543  01A786  0EFE               	movlw	-2
 11544  01A788  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11545                           
 11546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 11547  01A78E  0100               	movlb	0	; () banked
 11548  01A790  6BC0               	clrf	_nout& (0+255),b
 11549  01A792  6BC1               	clrf	(_nout+1)& (0+255),b
 11550                           
 11551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11552  01A794  D021               	goto	l12742
 11553  01A796                     l12740:
 11554                           
 11555                           ; BSR set to: 0
 11556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 11557                           ;stkvar	_ap @ sp[(-2)+-6]
 11558  01A796  0EF8               	movlw	-8
 11559  01A798  006F FF8F FFE6     	movff	plusw1,postinc1
 11560  01A79E  006F FF8F FFE6     	movff	plusw1,postinc1
 11561                           
 11562                           ;stkvar	_cfmt @ sp[(-4)+0]
 11563  01A7A4  0EFC               	movlw	252
 11564  01A7A6  24E1               	addwf	fsr1l,w,c
 11565  01A7A8  6E01               	movwf	btemp^0,c
 11566  01A7AA  0EFF               	movlw	255
 11567  01A7AC  20E2               	addwfc	fsr1h,w,c
 11568  01A7AE  6E02               	movwf	(btemp+1)^0,c
 11569  01A7B0  0060  F007  FFE6   	movff	btemp,postinc1
 11570  01A7B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11571                           
 11572                           ;stkvar	_fp @ sp[(-6)+-2]
 11573  01A7BC  0EF8               	movlw	-8
 11574  01A7BE  006F FF8F FFE6     	movff	plusw1,postinc1
 11575  01A7C4  006F FF8F FFE6     	movff	plusw1,postinc1
 11576  01A7CA  ECCA  F091         	call	_vfpfcnvrt	;wreg free
 11577  01A7CE  5001               	movf	btemp^0,w,c
 11578  01A7D0  0100               	movlb	0	; () banked
 11579  01A7D2  27C0               	addwf	_nout& (0+255),f,b
 11580  01A7D4  5002               	movf	(btemp+1)^0,w,c
 11581  01A7D6  23C1               	addwfc	(_nout+1)& (0+255),f,b
 11582  01A7D8                     l12742:
 11583                           
 11584                           ; BSR set to: 0
 11585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 11586                           ;stkvar	_cfmt @ sp[(-2)+0]
 11587  01A7D8  50E1               	movf	fsr1l,w,c
 11588  01A7DA  0FFE               	addlw	-2
 11589  01A7DC  6ED9               	movwf	fsr2l,c
 11590  01A7DE  50E2               	movf	fsr1h,w,c
 11591  01A7E0  6EDA               	movwf	fsr2h,c
 11592  01A7E2  0EFF               	movlw	255
 11593  01A7E4  22DA               	addwfc	fsr2h,f,c
 11594  01A7E6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11595  01A7EC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11596  01A7F2                     	if	0	;tblptru may be non-zero
 11597  01A7F2                     	endif
 11598  01A7F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11599  01A7F2  0E00               	movlw	low (__mediumconst shr (0+16))
 11600  01A7F4  6EF8               	movwf	tblptru,c
 11601  01A7F6                     	endif
 11602  01A7F6  0008               	tblrd		*
 11603  01A7F8  50F5               	movf	tablat,w,c
 11604  01A7FA  0900               	iorlw	0
 11605  01A7FC  A4D8               	btfss	status,2,c
 11606  01A7FE  D7CB               	goto	l12740
 11607                           
 11608                           ; BSR set to: 0
 11609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 11610  01A800  0060  F300  F001   	movff	_nout,btemp
 11611  01A806  0060  F304  F002   	movff	_nout+1,btemp+1
 11612                           
 11613                           ; BSR set to: 0
 11614                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 11615  01A80C  0EF8               	movlw	248
 11616  01A80E  26E1               	addwf	fsr1l,f,c
 11617  01A810  0EFF               	movlw	255
 11618  01A812  22E2               	addwfc	fsr1h,f,c
 11619  01A814  0012               	return		;funcret
 11620  01A816                     __end_of_vfprintf:
 11621                           	opt callstack 0
 11622                           
 11623 ;; *************** function _vfpfcnvrt *****************
 11624 ;; Defined at:
 11625 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11626 ;; Parameters:    Size  Location     Type
 11627 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11628 ;;		 -> f(6), NULL(0), 
 11629 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 11630 ;;		 -> cfmt(2), 
 11631 ;;  ap              2  [STACK] PTR PTR void 
 11632 ;;		 -> ap(2), ap(2), 
 11633 ;; Auto vars:     Size  Location     Type
 11634 ;;  llu             8  [STACK] unsigned long long 
 11635 ;;  ll              8  [STACK] long long 
 11636 ;;  f               4  [STACK] long long 
 11637 ;;  ct              3  [STACK] unsigned char [3]
 11638 ;;  vp              3    0        PTR void 
 11639 ;;  cp              2  [STACK] PTR unsigned char 
 11640 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 11641 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 11642 ;;		 -> V(191), 
 11643 ;;  i               2    0        int 
 11644 ;;  done            2    0        int 
 11645 ;;  c               1  [STACK] unsigned char 
 11646 ;; Return value:  Size  Location     Type
 11647 ;;                  2  [STACK] int 
 11648 ;; Registers used:
 11649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11650 ;; Tracked objects:
 11651 ;;		On entry : 0/0
 11652 ;;		On exit  : 0/0
 11653 ;;		Unchanged: 0/0
 11654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11659 ;;Total ram usage:        0 bytes
 11660 ;; Hardware stack levels used:    1
 11661 ;; Hardware stack levels required when called:   21
 11662 ;; This function calls:
 11663 ;;		_atoi
 11664 ;;		_ctoa
 11665 ;;		_dtoa
 11666 ;;		_efgtoa
 11667 ;;		_fputc
 11668 ;;		_isdigit
 11669 ;;		_isupper
 11670 ;;		_stoa
 11671 ;;		_strncmp
 11672 ;;		_tolower
 11673 ;;		_utoa
 11674 ;;		_xtoa
 11675 ;; This function is called by:
 11676 ;;		_vfprintf
 11677 ;; This function uses a reentrant model
 11678 ;;
 11679                           
 11680                           	psect	text47
 11681  012394                     __ptext47:
 11682                           	opt callstack 0
 11683  012394                     _vfpfcnvrt:
 11684                           	opt callstack 0
 11685                           
 11686                           ; BSR set to: 0
 11687                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11688  012394  0E20               	movlw	32
 11689  012396  26E1               	addwf	fsr1l,f,c
 11690  012398  0E00               	movlw	0
 11691  01239A  22E2               	addwfc	fsr1h,f,c
 11692                           
 11693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11694                           ;stkvar	_fmt @ sp[(-32)+-4]
 11695                           
 11696                           ;incstack = 0
 11697 ;; hardware stack exceeded
 11698  01239C  0EDC               	movlw	-36
 11699  01239E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11700  0123A4  0EDD               	movlw	-35
 11701  0123A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11702  0123AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11703  0123B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11704  0123B8                     	if	0	;tblptru may be non-zero
 11705  0123B8                     	endif
 11706  0123B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11707  0123B8  0E00               	movlw	low (__mediumconst shr (0+16))
 11708  0123BA  6EF8               	movwf	tblptru,c
 11709  0123BC                     	endif
 11710  0123BC  0008               	tblrd		*
 11711  0123BE  50F5               	movf	tablat,w,c
 11712  0123C0  0A25               	xorlw	37
 11713  0123C2  A4D8               	btfss	status,2,c
 11714  0123C4  EF71  F099         	goto	l12702
 11715                           
 11716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11717                           ;stkvar	_fmt @ sp[(-32)+-4]
 11718  0123C8  0EDC               	movlw	-36
 11719  0123CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11720  0123D0  0EDD               	movlw	-35
 11721  0123D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11722  0123D8  2ADE               	incf	postinc2,f,c
 11723  0123DA  0E00               	movlw	0
 11724  0123DC  22DD               	addwfc	postdec2,f,c
 11725                           
 11726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11727  0123DE  6A3A               	clrf	_width^0,c
 11728  0123E0  6A3B               	clrf	(_width+1)^0,c
 11729  0123E2  6A3E               	clrf	_flags^0,c
 11730  0123E4  6A3F               	clrf	(_flags+1)^0,c
 11731                           
 11732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11733  0123E6  683C               	setf	_prec^0,c
 11734  0123E8  683D               	setf	(_prec+1)^0,c
 11735                           
 11736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11737                           ;stkvar	_fmt @ sp[(-32)+-4]
 11738  0123EA  0EDC               	movlw	-36
 11739  0123EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11740  0123F2  0EDD               	movlw	-35
 11741  0123F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11742  0123FA  006F FF7B FFF6     	movff	postinc2,tblptrl
 11743  012400  006F FF77 FFF7     	movff	postdec2,tblptrh
 11744  012406                     	if	0	;tblptru may be non-zero
 11745  012406                     	endif
 11746  012406                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11747  012406  0E00               	movlw	low (__mediumconst shr (0+16))
 11748  012408  6EF8               	movwf	tblptru,c
 11749  01240A                     	endif
 11750  01240A  0008               	tblrd		*
 11751  01240C  50F5               	movf	tablat,w,c
 11752  01240E  0A2A               	xorlw	42
 11753  012410  A4D8               	btfss	status,2,c
 11754  012412  D031               	goto	l12520
 11755                           
 11756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11757                           ;stkvar	_fmt @ sp[(-32)+-4]
 11758  012414  0EDC               	movlw	-36
 11759  012416  006F FF8F FFD9     	movff	plusw1,fsr2l
 11760  01241C  0EDD               	movlw	-35
 11761  01241E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11762  012424  2ADE               	incf	postinc2,f,c
 11763  012426  0E00               	movlw	0
 11764  012428  22DD               	addwfc	postdec2,f,c
 11765                           
 11766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11767                           ;stkvar	_ap @ sp[(-32)+-6]
 11768  01242A  0EDA               	movlw	-38
 11769  01242C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11770  012432  0EDB               	movlw	-37
 11771  012434  006F FF8F FFDA     	movff	plusw1,fsr2h
 11772  01243A  0E02               	movlw	2
 11773  01243C  5EDE               	subwf	postinc2,f,c
 11774  01243E  0E00               	movlw	0
 11775  012440  5ADD               	subwfb	postdec2,f,c
 11776  012442  006F FF78  F00B    	movff	postinc2,btemp+10
 11777  012448  006F FF74  F00C    	movff	postdec2,btemp+11
 11778  01244E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11779  012454  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11780  01245A  006F FF78  F03A    	movff	postinc2,_width
 11781  012460  006F FF74  F03B    	movff	postdec2,_width+1
 11782                           
 11783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11784  012466  AE3B               	btfss	(_width+1)^0,7,c
 11785  012468  D066               	goto	u12040
 11786                           
 11787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11788  01246A  803E               	bsf	_flags^0,0,c
 11789                           
 11790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11791  01246C  6C3A               	negf	_width^0,c
 11792  01246E  1E3B               	comf	(_width+1)^0,f,c
 11793  012470  B0D8               	btfsc	status,0,c
 11794  012472  2A3B               	incf	(_width+1)^0,f,c
 11795  012474  D060               	goto	u12040
 11796  012476                     l12520:
 11797                           
 11798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11799                           ;stkvar	_fmt @ sp[(-32)+-4]
 11800  012476  0EDC               	movlw	-36
 11801  012478  006F FF8F FFD9     	movff	plusw1,fsr2l
 11802  01247E  0EDD               	movlw	-35
 11803  012480  006F FF8F FFDA     	movff	plusw1,fsr2h
 11804  012486  006F FF78  F00B    	movff	postinc2,btemp+10
 11805  01248C  006F FF74  F00C    	movff	postdec2,btemp+11
 11806  012492  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11807  012498  0060  F033  FFE6   	movff	btemp+11,postinc1
 11808  01249E  EC93  F0BC         	call	_atoi	;wreg free
 11809  0124A2  0060  F004  F03A   	movff	btemp,_width
 11810  0124A8  0060  F008  F03B   	movff	btemp+1,_width+1
 11811                           
 11812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11813  0124AE  D00B               	goto	l12524
 11814  0124B0                     l12522:
 11815                           
 11816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11817                           ;stkvar	_fmt @ sp[(-32)+-4]
 11818  0124B0  0EDC               	movlw	-36
 11819  0124B2  006F FF8F FFD9     	movff	plusw1,fsr2l
 11820  0124B8  0EDD               	movlw	-35
 11821  0124BA  006F FF8F FFDA     	movff	plusw1,fsr2h
 11822  0124C0  2ADE               	incf	postinc2,f,c
 11823  0124C2  0E00               	movlw	0
 11824  0124C4  22DD               	addwfc	postdec2,f,c
 11825  0124C6                     l12524:
 11826  0124C6  0ED0               	movlw	208
 11827  0124C8  6E0B               	movwf	(btemp+10)^0,c
 11828  0124CA  0EFF               	movlw	255
 11829  0124CC  6E0C               	movwf	(btemp+11)^0,c
 11830                           
 11831                           ;stkvar	_fmt @ sp[(-32)+-4]
 11832  0124CE  0EDC               	movlw	-36
 11833  0124D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 11834  0124D6  0EDD               	movlw	-35
 11835  0124D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 11836  0124DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11837  0124E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 11838  0124EA                     	if	0	;tblptru may be non-zero
 11839  0124EA                     	endif
 11840  0124EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11841  0124EA  0E00               	movlw	low (__mediumconst shr (0+16))
 11842  0124EC  6EF8               	movwf	tblptru,c
 11843  0124EE                     	endif
 11844  0124EE  0008               	tblrd		*
 11845  0124F0  50F5               	movf	tablat,w,c
 11846  0124F2  6E09               	movwf	(btemp+8)^0,c
 11847  0124F4  6A0A               	clrf	(btemp+9)^0,c
 11848  0124F6  500B               	movf	(btemp+10)^0,w,c
 11849  0124F8  2609               	addwf	(btemp+8)^0,f,c
 11850  0124FA  500C               	movf	(btemp+11)^0,w,c
 11851  0124FC  220A               	addwfc	(btemp+9)^0,f,c
 11852  0124FE  500A               	movf	(btemp+9)^0,w,c
 11853  012500  E106               	bnz	u12020
 11854  012502  0E0A               	movlw	10
 11855  012504  5C09               	subwf	(btemp+8)^0,w,c
 11856  012506  B0D8               	btfsc	status,0,c
 11857  012508  D002               	goto	u12020
 11858  01250A  0E01               	movlw	1
 11859  01250C  D001               	goto	u12030
 11860  01250E                     u12020:
 11861  01250E  0E00               	movlw	0
 11862  012510                     u12030:
 11863  012510  6E0B               	movwf	(btemp+10)^0,c
 11864  012512  6A0C               	clrf	(btemp+11)^0,c
 11865                           
 11866                           ;stkvar	_vfpfcnvrt$5593 @ sp[(-32)+4]
 11867  012514  0EE4               	movlw	-28
 11868  012516  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11869  01251C  0EE5               	movlw	-27
 11870  01251E  0060  F033  FFE3   	movff	btemp+11,plusw1
 11871                           
 11872                           ;stkvar	_vfpfcnvrt$5593 @ sp[(-32)+4]
 11873  012524  0EE4               	movlw	-28
 11874  012526  006F FF8C  F001    	movff	plusw1,btemp
 11875  01252C  0EE5               	movlw	-27
 11876  01252E  50E3               	movf	plusw1,w,c
 11877  012530  1001               	iorwf	btemp^0,w,c
 11878  012532  A4D8               	btfss	status,2,c
 11879  012534  D7BD               	goto	l12522
 11880  012536                     u12040:
 11881                           
 11882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11883                           ;stkvar	_fmt @ sp[(-32)+-4]
 11884  012536  0EDC               	movlw	-36
 11885  012538  006F FF8F FFD9     	movff	plusw1,fsr2l
 11886  01253E  0EDD               	movlw	-35
 11887  012540  006F FF8F FFDA     	movff	plusw1,fsr2h
 11888  012546  006F FF7B FFF6     	movff	postinc2,tblptrl
 11889  01254C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11890  012552                     	if	0	;tblptru may be non-zero
 11891  012552                     	endif
 11892  012552                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11893  012552  0E00               	movlw	low (__mediumconst shr (0+16))
 11894  012554  6EF8               	movwf	tblptru,c
 11895  012556                     	endif
 11896  012556  0008               	tblrd		*
 11897  012558  50F5               	movf	tablat,w,c
 11898  01255A  0A2E               	xorlw	46
 11899  01255C  A4D8               	btfss	status,2,c
 11900  01255E  D0AC               	goto	u12090
 11901                           
 11902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11903  012560  6A3C               	clrf	_prec^0,c
 11904  012562  6A3D               	clrf	(_prec+1)^0,c
 11905                           
 11906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11907                           ;stkvar	_fmt @ sp[(-32)+-4]
 11908  012564  0EDC               	movlw	-36
 11909  012566  006F FF8F FFD9     	movff	plusw1,fsr2l
 11910  01256C  0EDD               	movlw	-35
 11911  01256E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11912  012574  2ADE               	incf	postinc2,f,c
 11913  012576  0E00               	movlw	0
 11914  012578  22DD               	addwfc	postdec2,f,c
 11915                           
 11916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11917                           ;stkvar	_fmt @ sp[(-32)+-4]
 11918  01257A  0EDC               	movlw	-36
 11919  01257C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11920  012582  0EDD               	movlw	-35
 11921  012584  006F FF8F FFDA     	movff	plusw1,fsr2h
 11922  01258A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11923  012590  006F FF77 FFF7     	movff	postdec2,tblptrh
 11924  012596                     	if	0	;tblptru may be non-zero
 11925  012596                     	endif
 11926  012596                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11927  012596  0E00               	movlw	low (__mediumconst shr (0+16))
 11928  012598  6EF8               	movwf	tblptru,c
 11929  01259A                     	endif
 11930  01259A  0008               	tblrd		*
 11931  01259C  50F5               	movf	tablat,w,c
 11932  01259E  0A2A               	xorlw	42
 11933  0125A0  A4D8               	btfss	status,2,c
 11934  0125A2  D02A               	goto	l12542
 11935                           
 11936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11937                           ;stkvar	_fmt @ sp[(-32)+-4]
 11938  0125A4  0EDC               	movlw	-36
 11939  0125A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11940  0125AC  0EDD               	movlw	-35
 11941  0125AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11942  0125B4  2ADE               	incf	postinc2,f,c
 11943  0125B6  0E00               	movlw	0
 11944  0125B8  22DD               	addwfc	postdec2,f,c
 11945                           
 11946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11947                           ;stkvar	_ap @ sp[(-32)+-6]
 11948  0125BA  0EDA               	movlw	-38
 11949  0125BC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11950  0125C2  0EDB               	movlw	-37
 11951  0125C4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11952  0125CA  0E02               	movlw	2
 11953  0125CC  5EDE               	subwf	postinc2,f,c
 11954  0125CE  0E00               	movlw	0
 11955  0125D0  5ADD               	subwfb	postdec2,f,c
 11956  0125D2  006F FF78  F00B    	movff	postinc2,btemp+10
 11957  0125D8  006F FF74  F00C    	movff	postdec2,btemp+11
 11958  0125DE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 11959  0125E4  0060  F033  FFDA   	movff	btemp+11,fsr2h
 11960  0125EA  006F FF78  F03C    	movff	postinc2,_prec
 11961  0125F0  006F FF74  F03D    	movff	postdec2,_prec+1
 11962                           
 11963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11964  0125F6  D060               	goto	u12090
 11965  0125F8                     l12542:
 11966                           
 11967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11968                           ;stkvar	_fmt @ sp[(-32)+-4]
 11969  0125F8  0EDC               	movlw	-36
 11970  0125FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11971  012600  0EDD               	movlw	-35
 11972  012602  006F FF8F FFDA     	movff	plusw1,fsr2h
 11973  012608  006F FF78  F00B    	movff	postinc2,btemp+10
 11974  01260E  006F FF74  F00C    	movff	postdec2,btemp+11
 11975  012614  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11976  01261A  0060  F033  FFE6   	movff	btemp+11,postinc1
 11977  012620  EC93  F0BC         	call	_atoi	;wreg free
 11978  012624  0060  F004  F03C   	movff	btemp,_prec
 11979  01262A  0060  F008  F03D   	movff	btemp+1,_prec+1
 11980                           
 11981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11982  012630  D00B               	goto	l12546
 11983  012632                     l12544:
 11984                           
 11985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11986                           ;stkvar	_fmt @ sp[(-32)+-4]
 11987  012632  0EDC               	movlw	-36
 11988  012634  006F FF8F FFD9     	movff	plusw1,fsr2l
 11989  01263A  0EDD               	movlw	-35
 11990  01263C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11991  012642  2ADE               	incf	postinc2,f,c
 11992  012644  0E00               	movlw	0
 11993  012646  22DD               	addwfc	postdec2,f,c
 11994  012648                     l12546:
 11995  012648  0ED0               	movlw	208
 11996  01264A  6E0B               	movwf	(btemp+10)^0,c
 11997  01264C  0EFF               	movlw	255
 11998  01264E  6E0C               	movwf	(btemp+11)^0,c
 11999                           
 12000                           ;stkvar	_fmt @ sp[(-32)+-4]
 12001  012650  0EDC               	movlw	-36
 12002  012652  006F FF8F FFD9     	movff	plusw1,fsr2l
 12003  012658  0EDD               	movlw	-35
 12004  01265A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12005  012660  006F FF7B FFF6     	movff	postinc2,tblptrl
 12006  012666  006F FF77 FFF7     	movff	postdec2,tblptrh
 12007  01266C                     	if	0	;tblptru may be non-zero
 12008  01266C                     	endif
 12009  01266C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12010  01266C  0E00               	movlw	low (__mediumconst shr (0+16))
 12011  01266E  6EF8               	movwf	tblptru,c
 12012  012670                     	endif
 12013  012670  0008               	tblrd		*
 12014  012672  50F5               	movf	tablat,w,c
 12015  012674  6E09               	movwf	(btemp+8)^0,c
 12016  012676  6A0A               	clrf	(btemp+9)^0,c
 12017  012678  500B               	movf	(btemp+10)^0,w,c
 12018  01267A  2609               	addwf	(btemp+8)^0,f,c
 12019  01267C  500C               	movf	(btemp+11)^0,w,c
 12020  01267E  220A               	addwfc	(btemp+9)^0,f,c
 12021  012680  500A               	movf	(btemp+9)^0,w,c
 12022  012682  E106               	bnz	u12070
 12023  012684  0E0A               	movlw	10
 12024  012686  5C09               	subwf	(btemp+8)^0,w,c
 12025  012688  B0D8               	btfsc	status,0,c
 12026  01268A  D002               	goto	u12070
 12027  01268C  0E01               	movlw	1
 12028  01268E  D001               	goto	u12080
 12029  012690                     u12070:
 12030  012690  0E00               	movlw	0
 12031  012692                     u12080:
 12032  012692  6E0B               	movwf	(btemp+10)^0,c
 12033  012694  6A0C               	clrf	(btemp+11)^0,c
 12034                           
 12035                           ;stkvar	_vfpfcnvrt$5594 @ sp[(-32)+0]
 12036  012696  0EE0               	movlw	-32
 12037  012698  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12038  01269E  0EE1               	movlw	-31
 12039  0126A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 12040                           
 12041                           ;stkvar	_vfpfcnvrt$5594 @ sp[(-32)+0]
 12042  0126A6  0EE0               	movlw	-32
 12043  0126A8  006F FF8C  F001    	movff	plusw1,btemp
 12044  0126AE  0EE1               	movlw	-31
 12045  0126B0  50E3               	movf	plusw1,w,c
 12046  0126B2  1001               	iorwf	btemp^0,w,c
 12047  0126B4  A4D8               	btfss	status,2,c
 12048  0126B6  D7BD               	goto	l12544
 12049  0126B8                     u12090:
 12050                           
 12051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 12052                           ;stkvar	_fmt @ sp[(-32)+-4]
 12053  0126B8  0EDC               	movlw	-36
 12054  0126BA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12055  0126C0  0EDD               	movlw	-35
 12056  0126C2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12057  0126C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12058  0126CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12059  0126D4                     	if	0	;tblptru may be non-zero
 12060  0126D4                     	endif
 12061  0126D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12062  0126D4  0E00               	movlw	low (__mediumconst shr (0+16))
 12063  0126D6  6EF8               	movwf	tblptru,c
 12064  0126D8                     	endif
 12065  0126D8  0008               	tblrd		*
 12066  0126DA  50F5               	movf	tablat,w,c
 12067  0126DC  6EE6               	movwf	postinc1,c
 12068  0126DE  0E00               	movlw	0
 12069  0126E0  6EE6               	movwf	postinc1,c
 12070  0126E2  ECB1  F0D6         	call	_tolower	;wreg free
 12071                           
 12072                           ;stkvar	_ct @ sp[(-32)+26]
 12073  0126E6  0EFA               	movlw	-6
 12074  0126E8  0060  F007  FFE3   	movff	btemp,plusw1
 12075                           
 12076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 12077                           ;stkvar	_ct @ sp[(-32)+26]
 12078  0126EE  0EFA               	movlw	-6
 12079  0126F0  50E3               	movf	plusw1,w,c
 12080  0126F2  B4D8               	btfsc	status,2,c
 12081  0126F4  D05B               	goto	l12562
 12082                           
 12083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 12084                           ;stkvar	_ct @ sp[(-32)+26]
 12085  0126F6  0EFB               	movlw	251
 12086  0126F8  24E1               	addwf	fsr1l,w,c
 12087  0126FA  6ED9               	movwf	fsr2l,c
 12088  0126FC  0EFF               	movlw	255
 12089  0126FE  20E2               	addwfc	fsr1h,w,c
 12090  012700  6EDA               	movwf	fsr2h,c
 12091                           
 12092                           ;stkvar	_fmt @ sp[(-32)+-4]
 12093  012702  0EDC               	movlw	-36
 12094  012704  006F FF8F FFE9     	movff	plusw1,fsr0l
 12095  01270A  0EDD               	movlw	-35
 12096  01270C  006F FF8F FFEA     	movff	plusw1,fsr0h
 12097  012712  006F FFB8  F00B    	movff	postinc0,btemp+10
 12098  012718  006F FFB4  F00C    	movff	postdec0,btemp+11
 12099  01271E  0E01               	movlw	1
 12100  012720  260B               	addwf	(btemp+10)^0,f,c
 12101  012722  0E00               	movlw	0
 12102  012724  220C               	addwfc	(btemp+11)^0,f,c
 12103  012726  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12104  01272C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12105  012732                     	if	0	;tblptru may be non-zero
 12106  012732                     	endif
 12107  012732                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12108  012732  0E00               	movlw	low (__mediumconst shr (0+16))
 12109  012734  6EF8               	movwf	tblptru,c
 12110  012736                     	endif
 12111  012736  0008               	tblrd		*
 12112  012738  50F5               	movf	tablat,w,c
 12113  01273A  6EE6               	movwf	postinc1,c
 12114  01273C  0E00               	movlw	0
 12115  01273E  6EE6               	movwf	postinc1,c
 12116  012740  ECB1  F0D6         	call	_tolower	;wreg free
 12117  012744  5001               	movf	btemp^0,w,c
 12118  012746  6EDF               	movwf	indf2,c
 12119                           
 12120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 12121                           ;stkvar	_ct @ sp[(-32)+26]
 12122  012748  0EFB               	movlw	251
 12123  01274A  24E1               	addwf	fsr1l,w,c
 12124  01274C  6ED9               	movwf	fsr2l,c
 12125  01274E  0EFF               	movlw	255
 12126  012750  20E2               	addwfc	fsr1h,w,c
 12127  012752  6EDA               	movwf	fsr2h,c
 12128  012754  50DF               	movf	indf2,w,c
 12129  012756  B4D8               	btfsc	status,2,c
 12130  012758  D029               	goto	l12562
 12131                           
 12132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 12133                           ;stkvar	_ct @ sp[(-32)+26]
 12134  01275A  0EFC               	movlw	252
 12135  01275C  24E1               	addwf	fsr1l,w,c
 12136  01275E  6ED9               	movwf	fsr2l,c
 12137  012760  0EFF               	movlw	255
 12138  012762  20E2               	addwfc	fsr1h,w,c
 12139  012764  6EDA               	movwf	fsr2h,c
 12140                           
 12141                           ;stkvar	_fmt @ sp[(-32)+-4]
 12142  012766  0EDC               	movlw	-36
 12143  012768  006F FF8F FFE9     	movff	plusw1,fsr0l
 12144  01276E  0EDD               	movlw	-35
 12145  012770  006F FF8F FFEA     	movff	plusw1,fsr0h
 12146  012776  006F FFB8  F00B    	movff	postinc0,btemp+10
 12147  01277C  006F FFB4  F00C    	movff	postdec0,btemp+11
 12148  012782  0E02               	movlw	2
 12149  012784  260B               	addwf	(btemp+10)^0,f,c
 12150  012786  0E00               	movlw	0
 12151  012788  220C               	addwfc	(btemp+11)^0,f,c
 12152  01278A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12153  012790  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12154  012796                     	if	0	;tblptru may be non-zero
 12155  012796                     	endif
 12156  012796                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12157  012796  0E00               	movlw	low (__mediumconst shr (0+16))
 12158  012798  6EF8               	movwf	tblptru,c
 12159  01279A                     	endif
 12160  01279A  0008               	tblrd		*
 12161  01279C  50F5               	movf	tablat,w,c
 12162  01279E  6EE6               	movwf	postinc1,c
 12163  0127A0  0E00               	movlw	0
 12164  0127A2  6EE6               	movwf	postinc1,c
 12165  0127A4  ECB1  F0D6         	call	_tolower	;wreg free
 12166  0127A8  5001               	movf	btemp^0,w,c
 12167  0127AA  6EDF               	movwf	indf2,c
 12168  0127AC                     l12562:
 12169                           
 12170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 12171                           ;stkvar	_fmt @ sp[(-32)+-4]
 12172  0127AC  0EDC               	movlw	-36
 12173  0127AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12174  0127B4  0EDD               	movlw	-35
 12175  0127B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12176  0127BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 12177  0127C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 12178  0127C8                     	if	0	;tblptru may be non-zero
 12179  0127C8                     	endif
 12180  0127C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12181  0127C8  0E00               	movlw	low (__mediumconst shr (0+16))
 12182  0127CA  6EF8               	movwf	tblptru,c
 12183  0127CC                     	endif
 12184  0127CC  0008               	tblrd		*
 12185  0127CE  50F5               	movf	tablat,w,c
 12186  0127D0  0A63               	xorlw	99
 12187  0127D2  A4D8               	btfss	status,2,c
 12188  0127D4  D037               	goto	l12572
 12189                           
 12190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 12191                           ;stkvar	_fmt @ sp[(-32)+-4]
 12192  0127D6  0EDC               	movlw	-36
 12193  0127D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12194  0127DE  0EDD               	movlw	-35
 12195  0127E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12196  0127E6  2ADE               	incf	postinc2,f,c
 12197  0127E8  0E00               	movlw	0
 12198  0127EA  22DD               	addwfc	postdec2,f,c
 12199                           
 12200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 12201                           ;stkvar	_ap @ sp[(-32)+-6]
 12202  0127EC  0EDA               	movlw	-38
 12203  0127EE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12204  0127F4  0EDB               	movlw	-37
 12205  0127F6  006F FF8F FFDA     	movff	plusw1,fsr2h
 12206  0127FC  0E02               	movlw	2
 12207  0127FE  5EDE               	subwf	postinc2,f,c
 12208  012800  0E00               	movlw	0
 12209  012802  5ADD               	subwfb	postdec2,f,c
 12210  012804  006F FF78  F00B    	movff	postinc2,btemp+10
 12211  01280A  006F FF74  F00C    	movff	postdec2,btemp+11
 12212  012810  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12213  012816  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12214  01281C  50DF               	movf	indf2,w,c
 12215  01281E  6E0C               	movwf	(btemp+11)^0,c
 12216                           
 12217                           ;stkvar	_c @ sp[(-32)+31]
 12218  012820  0EFF               	movlw	-1
 12219  012822  0060  F033  FFE3   	movff	btemp+11,plusw1
 12220                           
 12221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 12222                           ;stkvar	_c @ sp[(-32)+31]
 12223  012828  0EFF               	movlw	-1
 12224  01282A  50E3               	movf	plusw1,w,c
 12225  01282C  6EE6               	movwf	postinc1,c
 12226                           
 12227                           ;stkvar	_fp @ sp[(-33)+-2]
 12228  01282E  0EDD               	movlw	-35
 12229  012830  006F FF8F FFE6     	movff	plusw1,postinc1
 12230  012836  006F FF8F FFE6     	movff	plusw1,postinc1
 12231  01283C  EC2B  F0D6         	call	_ctoa	;wreg free
 12232  012840  EF9B  F099         	goto	l2370
 12233  012844                     l12572:
 12234                           
 12235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 12236                           ;stkvar	_fmt @ sp[(-32)+-4]
 12237  012844  0EDC               	movlw	-36
 12238  012846  006F FF8F FFD9     	movff	plusw1,fsr2l
 12239  01284C  0EDD               	movlw	-35
 12240  01284E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12241  012854  006F FF7B FFF6     	movff	postinc2,tblptrl
 12242  01285A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12243  012860                     	if	0	;tblptru may be non-zero
 12244  012860                     	endif
 12245  012860                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12246  012860  0E00               	movlw	low (__mediumconst shr (0+16))
 12247  012862  6EF8               	movwf	tblptru,c
 12248  012864                     	endif
 12249  012864  0008               	tblrd		*
 12250  012866  50F5               	movf	tablat,w,c
 12251  012868  0A64               	xorlw	100
 12252  01286A  B4D8               	btfsc	status,2,c
 12253  01286C  D015               	goto	u12140
 12254                           
 12255                           ;stkvar	_fmt @ sp[(-32)+-4]
 12256  01286E  0EDC               	movlw	-36
 12257  012870  006F FF8F FFD9     	movff	plusw1,fsr2l
 12258  012876  0EDD               	movlw	-35
 12259  012878  006F FF8F FFDA     	movff	plusw1,fsr2h
 12260  01287E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12261  012884  006F FF77 FFF7     	movff	postdec2,tblptrh
 12262  01288A                     	if	0	;tblptru may be non-zero
 12263  01288A                     	endif
 12264  01288A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12265  01288A  0E00               	movlw	low (__mediumconst shr (0+16))
 12266  01288C  6EF8               	movwf	tblptru,c
 12267  01288E                     	endif
 12268  01288E  0008               	tblrd		*
 12269  012890  50F5               	movf	tablat,w,c
 12270  012892  0A69               	xorlw	105
 12271  012894  A4D8               	btfss	status,2,c
 12272  012896  D076               	goto	l12584
 12273  012898                     u12140:
 12274                           
 12275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 12276                           ;stkvar	_fmt @ sp[(-32)+-4]
 12277  012898  0EDC               	movlw	-36
 12278  01289A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12279  0128A0  0EDD               	movlw	-35
 12280  0128A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12281  0128A8  2ADE               	incf	postinc2,f,c
 12282  0128AA  0E00               	movlw	0
 12283  0128AC  22DD               	addwfc	postdec2,f,c
 12284                           
 12285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 12286                           ;stkvar	_ap @ sp[(-32)+-6]
 12287  0128AE  0EDA               	movlw	-38
 12288  0128B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12289  0128B6  0EDB               	movlw	-37
 12290  0128B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12291  0128BE  0E02               	movlw	2
 12292  0128C0  5EDE               	subwf	postinc2,f,c
 12293  0128C2  0E00               	movlw	0
 12294  0128C4  5ADD               	subwfb	postdec2,f,c
 12295  0128C6  006F FF78  F00B    	movff	postinc2,btemp+10
 12296  0128CC  006F FF74  F00C    	movff	postdec2,btemp+11
 12297  0128D2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12298  0128D8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12299  0128DE  006F FF78  F00B    	movff	postinc2,btemp+10
 12300  0128E4  006F FF74  F00C    	movff	postdec2,btemp+11
 12301                           
 12302                           ;stkvar	_ll @ sp[(-32)+14]
 12303  0128EA  0EEE               	movlw	-18
 12304  0128EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12305  0128F2  0EEF               	movlw	-17
 12306  0128F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 12307  0128FA  6A01               	clrf	btemp^0,c
 12308  0128FC  BEE3               	btfsc	plusw1,7,c
 12309  0128FE  6801               	setf	btemp^0,c
 12310  012900  0EF0               	movlw	-16
 12311  012902  0060  F007  FFE3   	movff	btemp,plusw1
 12312  012908  0EF1               	movlw	-15
 12313  01290A  0060  F007  FFE3   	movff	btemp,plusw1
 12314  012910  0EF2               	movlw	-14
 12315  012912  0060  F007  FFE3   	movff	btemp,plusw1
 12316  012918  0EF3               	movlw	-13
 12317  01291A  0060  F007  FFE3   	movff	btemp,plusw1
 12318  012920  0EF4               	movlw	-12
 12319  012922  0060  F007  FFE3   	movff	btemp,plusw1
 12320  012928  0EF5               	movlw	-11
 12321  01292A  0060  F007  FFE3   	movff	btemp,plusw1
 12322  012930                     l12580:
 12323                           
 12324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 12325                           ;stkvar	_ll @ sp[(-32)+14]
 12326  012930  50E1               	movf	fsr1l,w,c
 12327  012932  0FEE               	addlw	-18
 12328  012934  6ED9               	movwf	fsr2l,c
 12329  012936  50E2               	movf	fsr1h,w,c
 12330  012938  6EDA               	movwf	fsr2h,c
 12331  01293A  0EFF               	movlw	255
 12332  01293C  22DA               	addwfc	fsr2h,f,c
 12333  01293E  006F FF7B FFE6     	movff	postinc2,postinc1
 12334  012944  006F FF7B FFE6     	movff	postinc2,postinc1
 12335  01294A  006F FF7B FFE6     	movff	postinc2,postinc1
 12336  012950  006F FF7B FFE6     	movff	postinc2,postinc1
 12337  012956  006F FF7B FFE6     	movff	postinc2,postinc1
 12338  01295C  006F FF7B FFE6     	movff	postinc2,postinc1
 12339  012962  006F FF7B FFE6     	movff	postinc2,postinc1
 12340  012968  006F FF7B FFE6     	movff	postinc2,postinc1
 12341                           
 12342                           ;stkvar	_fp @ sp[(-40)+-2]
 12343  01296E  0ED6               	movlw	-42
 12344  012970  006F FF8F FFE6     	movff	plusw1,postinc1
 12345  012976  006F FF8F FFE6     	movff	plusw1,postinc1
 12346  01297C  ECE7  F0AB         	call	_dtoa	;wreg free
 12347  012980  EF9B  F099         	goto	l2370
 12348  012984                     l12584:
 12349                           
 12350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 12351  012984  0E02               	movlw	2
 12352  012986  6EE6               	movwf	postinc1,c
 12353  012988  0E00               	movlw	0
 12354  01298A  6EE6               	movwf	postinc1,c
 12355  01298C  0EEA               	movlw	low STR_73
 12356  01298E  6EE6               	movwf	postinc1,c
 12357  012990  0EFF               	movlw	high STR_73
 12358  012992  6EE6               	movwf	postinc1,c
 12359                           
 12360                           ;stkvar	_fmt @ sp[(-36)+-4]
 12361  012994  0ED8               	movlw	-40
 12362  012996  006F FF8F FFD9     	movff	plusw1,fsr2l
 12363  01299C  0ED9               	movlw	-39
 12364  01299E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12365  0129A4  006F FF78  F00B    	movff	postinc2,btemp+10
 12366  0129AA  006F FF74  F00C    	movff	postdec2,btemp+11
 12367  0129B0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12368  0129B6  0060  F033  FFE6   	movff	btemp+11,postinc1
 12369  0129BC  EC10  F0C0         	call	_strncmp	;wreg free
 12370  0129C0  5001               	movf	btemp^0,w,c
 12371  0129C2  1002               	iorwf	(btemp+1)^0,w,c
 12372  0129C4  B4D8               	btfsc	status,2,c
 12373  0129C6  D022               	goto	u12160
 12374  0129C8  0E02               	movlw	2
 12375  0129CA  6EE6               	movwf	postinc1,c
 12376  0129CC  0E00               	movlw	0
 12377  0129CE  6EE6               	movwf	postinc1,c
 12378  0129D0  0EF0               	movlw	low STR_77
 12379  0129D2  6EE6               	movwf	postinc1,c
 12380  0129D4  0EFF               	movlw	high STR_77
 12381  0129D6  6EE6               	movwf	postinc1,c
 12382                           
 12383                           ;stkvar	_fmt @ sp[(-36)+-4]
 12384  0129D8  0ED8               	movlw	-40
 12385  0129DA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12386  0129E0  0ED9               	movlw	-39
 12387  0129E2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12388  0129E8  006F FF78  F00B    	movff	postinc2,btemp+10
 12389  0129EE  006F FF74  F00C    	movff	postdec2,btemp+11
 12390  0129F4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12391  0129FA  0060  F033  FFE6   	movff	btemp+11,postinc1
 12392  012A00  EC10  F0C0         	call	_strncmp	;wreg free
 12393  012A04  5001               	movf	btemp^0,w,c
 12394  012A06  1002               	iorwf	(btemp+1)^0,w,c
 12395  012A08  A4D8               	btfss	status,2,c
 12396  012A0A  D069               	goto	l12596
 12397  012A0C                     u12160:
 12398                           
 12399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 12400                           ;stkvar	_fmt @ sp[(-32)+-4]
 12401  012A0C  0EDC               	movlw	-36
 12402  012A0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12403  012A14  0EDD               	movlw	-35
 12404  012A16  006F FF8F FFDA     	movff	plusw1,fsr2h
 12405  012A1C  0E02               	movlw	2
 12406  012A1E  26DE               	addwf	postinc2,f,c
 12407  012A20  0E00               	movlw	0
 12408  012A22  22DD               	addwfc	postdec2,f,c
 12409                           
 12410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 12411                           ;stkvar	_ap @ sp[(-32)+-6]
 12412  012A24  0EDA               	movlw	-38
 12413  012A26  006F FF8F FFD9     	movff	plusw1,fsr2l
 12414  012A2C  0EDB               	movlw	-37
 12415  012A2E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12416  012A34  0E04               	movlw	4
 12417  012A36  5EDE               	subwf	postinc2,f,c
 12418  012A38  0E00               	movlw	0
 12419  012A3A  5ADD               	subwfb	postdec2,f,c
 12420  012A3C  006F FF78  F00B    	movff	postinc2,btemp+10
 12421  012A42  006F FF74  F00C    	movff	postdec2,btemp+11
 12422  012A48  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12423  012A4E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12424  012A54  006F FF78  F009    	movff	postinc2,btemp+8
 12425  012A5A  006F FF78  F00A    	movff	postinc2,btemp+9
 12426  012A60  006F FF78  F00B    	movff	postinc2,btemp+10
 12427  012A66  006F FF78  F00C    	movff	postinc2,btemp+11
 12428  012A6C  0060  F024  F011   	movff	btemp+8,btemp+16
 12429  012A72  0060  F028  F012   	movff	btemp+9,btemp+17
 12430  012A78  0060  F02C  F013   	movff	btemp+10,btemp+18
 12431  012A7E  0060  F030  F014   	movff	btemp+11,btemp+19
 12432  012A84  6A15               	clrf	(btemp+20)^0,c
 12433  012A86  BE14               	btfsc	(btemp+19)^0,7,c
 12434  012A88  6815               	setf	(btemp+20)^0,c
 12435  012A8A  0060  F054  F016   	movff	btemp+20,btemp+21
 12436  012A90  0060  F054  F017   	movff	btemp+20,btemp+22
 12437  012A96  0060  F054  F018   	movff	btemp+20,btemp+23
 12438                           
 12439                           ;stkvar	_ll @ sp[(-32)+14]
 12440  012A9C  0EEE               	movlw	-18
 12441  012A9E  0060  F047  FFE3   	movff	btemp+16,plusw1
 12442  012AA4  0EEF               	movlw	-17
 12443  012AA6  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12444  012AAC  0EF0               	movlw	-16
 12445  012AAE  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12446  012AB4  0EF1               	movlw	-15
 12447  012AB6  0060  F053  FFE3   	movff	btemp+19,plusw1
 12448  012ABC  0EF2               	movlw	-14
 12449  012ABE  0060  F057  FFE3   	movff	btemp+20,plusw1
 12450  012AC4  0EF3               	movlw	-13
 12451  012AC6  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12452  012ACC  0EF4               	movlw	-12
 12453  012ACE  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12454  012AD4  0EF5               	movlw	-11
 12455  012AD6  0060  F063  FFE3   	movff	btemp+23,plusw1
 12456  012ADC  D729               	goto	l12580
 12457  012ADE                     l12596:
 12458                           
 12459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 12460                           ;stkvar	_ct @ sp[(-32)+26]
 12461  012ADE  0EFA               	movlw	-6
 12462  012AE0  006F FF8C  F001    	movff	plusw1,btemp
 12463  012AE6  0E66               	movlw	102
 12464  012AE8  1801               	xorwf	btemp^0,w,c
 12465  012AEA  A4D8               	btfss	status,2,c
 12466  012AEC  D06E               	goto	l12608
 12467                           
 12468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 12469                           ;stkvar	_fmt @ sp[(-32)+-4]
 12470  012AEE  0EDC               	movlw	-36
 12471  012AF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12472  012AF6  0EDD               	movlw	-35
 12473  012AF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12474  012AFE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12475  012B04  006F FF77 FFF7     	movff	postdec2,tblptrh
 12476  012B0A                     	if	0	;tblptru may be non-zero
 12477  012B0A                     	endif
 12478  012B0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12479  012B0A  0E00               	movlw	low (__mediumconst shr (0+16))
 12480  012B0C  6EF8               	movwf	tblptru,c
 12481  012B0E                     	endif
 12482                           
 12483                           ;stkvar	_c @ sp[(-32)+31]
 12484  012B0E  0008               	tblrd		*
 12485  012B10  0EFF               	movlw	-1
 12486  012B12  006F FFD7 FFE3     	movff	tablat,plusw1
 12487                           
 12488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 12489                           ;stkvar	_fmt @ sp[(-32)+-4]
 12490  012B18  0EDC               	movlw	-36
 12491  012B1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12492  012B20  0EDD               	movlw	-35
 12493  012B22  006F FF8F FFDA     	movff	plusw1,fsr2h
 12494  012B28  2ADE               	incf	postinc2,f,c
 12495  012B2A  0E00               	movlw	0
 12496  012B2C  22DD               	addwfc	postdec2,f,c
 12497                           
 12498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 12499                           ;stkvar	_ap @ sp[(-32)+-6]
 12500  012B2E  0EDA               	movlw	-38
 12501  012B30  006F FF8F FFD9     	movff	plusw1,fsr2l
 12502  012B36  0EDB               	movlw	-37
 12503  012B38  006F FF8F FFDA     	movff	plusw1,fsr2h
 12504  012B3E  0E04               	movlw	4
 12505  012B40  5EDE               	subwf	postinc2,f,c
 12506  012B42  0E00               	movlw	0
 12507  012B44  5ADD               	subwfb	postdec2,f,c
 12508  012B46  006F FF78  F00B    	movff	postinc2,btemp+10
 12509  012B4C  006F FF74  F00C    	movff	postdec2,btemp+11
 12510  012B52  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12511  012B58  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12512  012B5E  006F FF78  F009    	movff	postinc2,btemp+8
 12513  012B64  006F FF78  F00A    	movff	postinc2,btemp+9
 12514  012B6A  006F FF78  F00B    	movff	postinc2,btemp+10
 12515  012B70  006F FF78  F00C    	movff	postinc2,btemp+11
 12516                           
 12517                           ;stkvar	_f @ sp[(-32)+22]
 12518  012B76  0EF6               	movlw	-10
 12519  012B78  0060  F027  FFE3   	movff	btemp+8,plusw1
 12520  012B7E  0EF7               	movlw	-9
 12521  012B80  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12522  012B86  0EF8               	movlw	-8
 12523  012B88  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12524  012B8E  0EF9               	movlw	-7
 12525  012B90  0060  F033  FFE3   	movff	btemp+11,plusw1
 12526  012B96                     l12604:
 12527                           
 12528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 12529                           ;stkvar	_c @ sp[(-32)+31]
 12530  012B96  0EFF               	movlw	-1
 12531  012B98  50E3               	movf	plusw1,w,c
 12532  012B9A  6EE6               	movwf	postinc1,c
 12533                           
 12534                           ;stkvar	_f @ sp[(-33)+22]
 12535  012B9C  0EF5               	movlw	-11
 12536  012B9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12537  012BA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12538  012BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12539  012BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12540                           
 12541                           ;stkvar	_fp @ sp[(-37)+-2]
 12542  012BB6  0ED9               	movlw	-39
 12543  012BB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12544  012BBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12545  012BC4  EC00  F080         	call	_efgtoa	;wreg free
 12546  012BC8  D3B6               	goto	l2370
 12547  012BCA                     l12608:
 12548                           
 12549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 12550  012BCA  0E02               	movlw	2
 12551  012BCC  6EE6               	movwf	postinc1,c
 12552  012BCE  0E00               	movlw	0
 12553  012BD0  6EE6               	movwf	postinc1,c
 12554  012BD2  0EED               	movlw	low STR_82
 12555  012BD4  6EE6               	movwf	postinc1,c
 12556  012BD6  0EFF               	movlw	high STR_82
 12557  012BD8  6EE6               	movwf	postinc1,c
 12558                           
 12559                           ;stkvar	_ct @ sp[(-36)+26]
 12560  012BDA  0EF6               	movlw	246
 12561  012BDC  24E1               	addwf	fsr1l,w,c
 12562  012BDE  6E01               	movwf	btemp^0,c
 12563  012BE0  0EFF               	movlw	255
 12564  012BE2  20E2               	addwfc	fsr1h,w,c
 12565  012BE4  6E02               	movwf	(btemp+1)^0,c
 12566  012BE6  0060  F007  FFE6   	movff	btemp,postinc1
 12567  012BEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12568  012BF2  EC10  F0C0         	call	_strncmp	;wreg free
 12569  012BF6  5001               	movf	btemp^0,w,c
 12570  012BF8  1002               	iorwf	(btemp+1)^0,w,c
 12571  012BFA  A4D8               	btfss	status,2,c
 12572  012BFC  D096               	goto	l12628
 12573                           
 12574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 12575                           ;stkvar	_fmt @ sp[(-32)+-4]
 12576  012BFE  0EDC               	movlw	-36
 12577  012C00  006F FF8F FFD9     	movff	plusw1,fsr2l
 12578  012C06  0EDD               	movlw	-35
 12579  012C08  006F FF8F FFDA     	movff	plusw1,fsr2h
 12580  012C0E  006F FF78  F00B    	movff	postinc2,btemp+10
 12581  012C14  006F FF74  F00C    	movff	postdec2,btemp+11
 12582  012C1A  0E01               	movlw	1
 12583  012C1C  260B               	addwf	(btemp+10)^0,f,c
 12584  012C1E  0E00               	movlw	0
 12585  012C20  220C               	addwfc	(btemp+11)^0,f,c
 12586  012C22  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 12587  012C28  0060  F033  FFF7   	movff	btemp+11,tblptrh
 12588  012C2E                     	if	0	;tblptru may be non-zero
 12589  012C2E                     	endif
 12590  012C2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12591  012C2E  0E00               	movlw	low (__mediumconst shr (0+16))
 12592  012C30  6EF8               	movwf	tblptru,c
 12593  012C32                     	endif
 12594                           
 12595                           ;stkvar	_c @ sp[(-32)+31]
 12596  012C32  0008               	tblrd		*
 12597  012C34  0EFF               	movlw	-1
 12598  012C36  006F FFD7 FFE3     	movff	tablat,plusw1
 12599  012C3C  0EBF               	movlw	191
 12600  012C3E  6E0B               	movwf	(btemp+10)^0,c
 12601  012C40  0EFF               	movlw	255
 12602  012C42  6E0C               	movwf	(btemp+11)^0,c
 12603                           
 12604                           ;stkvar	_fmt @ sp[(-32)+-4]
 12605  012C44  0EDC               	movlw	-36
 12606  012C46  006F FF8F FFD9     	movff	plusw1,fsr2l
 12607  012C4C  0EDD               	movlw	-35
 12608  012C4E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12609  012C54  006F FF7B FFF6     	movff	postinc2,tblptrl
 12610  012C5A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12611  012C60                     	if	0	;tblptru may be non-zero
 12612  012C60                     	endif
 12613  012C60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12614  012C60  0E00               	movlw	low (__mediumconst shr (0+16))
 12615  012C62  6EF8               	movwf	tblptru,c
 12616  012C64                     	endif
 12617  012C64  0008               	tblrd		*
 12618  012C66  50F5               	movf	tablat,w,c
 12619  012C68  6E09               	movwf	(btemp+8)^0,c
 12620  012C6A  6A0A               	clrf	(btemp+9)^0,c
 12621  012C6C  500B               	movf	(btemp+10)^0,w,c
 12622  012C6E  2609               	addwf	(btemp+8)^0,f,c
 12623  012C70  500C               	movf	(btemp+11)^0,w,c
 12624  012C72  220A               	addwfc	(btemp+9)^0,f,c
 12625  012C74  500A               	movf	(btemp+9)^0,w,c
 12626  012C76  E106               	bnz	u12190
 12627  012C78  0E1A               	movlw	26
 12628  012C7A  5C09               	subwf	(btemp+8)^0,w,c
 12629  012C7C  B0D8               	btfsc	status,0,c
 12630  012C7E  D002               	goto	u12190
 12631  012C80  0E01               	movlw	1
 12632  012C82  D001               	goto	u12200
 12633  012C84                     u12190:
 12634  012C84  0E00               	movlw	0
 12635  012C86                     u12200:
 12636  012C86  6E0B               	movwf	(btemp+10)^0,c
 12637  012C88  6A0C               	clrf	(btemp+11)^0,c
 12638                           
 12639                           ;stkvar	_vfpfcnvrt$5605 @ sp[(-32)+2]
 12640  012C8A  0EE2               	movlw	-30
 12641  012C8C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12642  012C92  0EE3               	movlw	-29
 12643  012C94  0060  F033  FFE3   	movff	btemp+11,plusw1
 12644                           
 12645                           ;stkvar	_vfpfcnvrt$5605 @ sp[(-32)+2]
 12646  012C9A  0EE2               	movlw	-30
 12647  012C9C  006F FF8C  F001    	movff	plusw1,btemp
 12648  012CA2  0EE3               	movlw	-29
 12649  012CA4  50E3               	movf	plusw1,w,c
 12650  012CA6  1001               	iorwf	btemp^0,w,c
 12651                           
 12652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12653                           ;stkvar	_ap @ sp[(-32)+-6]
 12654                           
 12655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12656                           
 12657                           ;stkvar	_f @ sp[(-32)+22]
 12658                           
 12659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12660                           ;stkvar	_ap @ sp[(-32)+-6]
 12661  012CA8  0EDA               	movlw	-38
 12662  012CAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12663  012CB0  0EDB               	movlw	-37
 12664  012CB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12665  012CB8  0E04               	movlw	4
 12666  012CBA  5EDE               	subwf	postinc2,f,c
 12667  012CBC  0E00               	movlw	0
 12668  012CBE  5ADD               	subwfb	postdec2,f,c
 12669  012CC0  006F FF78  F00B    	movff	postinc2,btemp+10
 12670  012CC6  006F FF74  F00C    	movff	postdec2,btemp+11
 12671  012CCC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12672  012CD2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12673  012CD8  006F FF78  F009    	movff	postinc2,btemp+8
 12674  012CDE  006F FF78  F00A    	movff	postinc2,btemp+9
 12675  012CE4  006F FF78  F00B    	movff	postinc2,btemp+10
 12676  012CEA  006F FF78  F00C    	movff	postinc2,btemp+11
 12677                           
 12678                           ;stkvar	_f @ sp[(-32)+22]
 12679  012CF0  0EF6               	movlw	-10
 12680  012CF2  0060  F027  FFE3   	movff	btemp+8,plusw1
 12681  012CF8  0EF7               	movlw	-9
 12682  012CFA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12683  012D00  0EF8               	movlw	-8
 12684  012D02  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12685  012D08  0EF9               	movlw	-7
 12686  012D0A  0060  F033  FFE3   	movff	btemp+11,plusw1
 12687                           
 12688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12689                           ;stkvar	_fmt @ sp[(-32)+-4]
 12690  012D10  0EDC               	movlw	-36
 12691  012D12  006F FF8F FFD9     	movff	plusw1,fsr2l
 12692  012D18  0EDD               	movlw	-35
 12693  012D1A  006F FF8F FFDA     	movff	plusw1,fsr2h
 12694  012D20  0E02               	movlw	2
 12695  012D22  26DE               	addwf	postinc2,f,c
 12696  012D24  0E00               	movlw	0
 12697  012D26  22DD               	addwfc	postdec2,f,c
 12698  012D28  D736               	goto	l12604
 12699  012D2A                     l12628:
 12700                           
 12701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12702                           ;stkvar	_fmt @ sp[(-32)+-4]
 12703  012D2A  0EDC               	movlw	-36
 12704  012D2C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12705  012D32  0EDD               	movlw	-35
 12706  012D34  006F FF8F FFDA     	movff	plusw1,fsr2h
 12707  012D3A  006F FF7B FFF6     	movff	postinc2,tblptrl
 12708  012D40  006F FF77 FFF7     	movff	postdec2,tblptrh
 12709  012D46                     	if	0	;tblptru may be non-zero
 12710  012D46                     	endif
 12711  012D46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12712  012D46  0E00               	movlw	low (__mediumconst shr (0+16))
 12713  012D48  6EF8               	movwf	tblptru,c
 12714  012D4A                     	endif
 12715  012D4A  0008               	tblrd		*
 12716  012D4C  50F5               	movf	tablat,w,c
 12717  012D4E  0A73               	xorlw	115
 12718  012D50  A4D8               	btfss	status,2,c
 12719  012D52  D042               	goto	l12638
 12720                           
 12721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12722                           ;stkvar	_fmt @ sp[(-32)+-4]
 12723  012D54  0EDC               	movlw	-36
 12724  012D56  006F FF8F FFD9     	movff	plusw1,fsr2l
 12725  012D5C  0EDD               	movlw	-35
 12726  012D5E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12727  012D64  2ADE               	incf	postinc2,f,c
 12728  012D66  0E00               	movlw	0
 12729  012D68  22DD               	addwfc	postdec2,f,c
 12730                           
 12731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12732                           ;stkvar	_ap @ sp[(-32)+-6]
 12733  012D6A  0EDA               	movlw	-38
 12734  012D6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12735  012D72  0EDB               	movlw	-37
 12736  012D74  006F FF8F FFDA     	movff	plusw1,fsr2h
 12737  012D7A  0E02               	movlw	2
 12738  012D7C  5EDE               	subwf	postinc2,f,c
 12739  012D7E  0E00               	movlw	0
 12740  012D80  5ADD               	subwfb	postdec2,f,c
 12741  012D82  006F FF78  F00B    	movff	postinc2,btemp+10
 12742  012D88  006F FF74  F00C    	movff	postdec2,btemp+11
 12743  012D8E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12744  012D94  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12745  012D9A  006F FF78  F00B    	movff	postinc2,btemp+10
 12746  012DA0  006F FF74  F00C    	movff	postdec2,btemp+11
 12747                           
 12748                           ;stkvar	_cp @ sp[(-32)+29]
 12749  012DA6  0EFE               	movlw	-2
 12750  012DA8  0060  F033  FFE3   	movff	btemp+11,plusw1
 12751  012DAE  0EFD               	movlw	-3
 12752  012DB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12753                           
 12754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12755                           ;stkvar	_cp @ sp[(-32)+29]
 12756  012DB6  0EFD               	movlw	-3
 12757  012DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12758  012DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12759                           
 12760                           ;stkvar	_fp @ sp[(-34)+-2]
 12761  012DC4  0EDC               	movlw	-36
 12762  012DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 12763  012DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 12764  012DD2  ECF4  F0B9         	call	_stoa	;wreg free
 12765  012DD6  D2AF               	goto	l2370
 12766  012DD8                     l12638:
 12767                           
 12768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12769                           ;stkvar	_fmt @ sp[(-32)+-4]
 12770  012DD8  0EDC               	movlw	-36
 12771  012DDA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12772  012DE0  0EDD               	movlw	-35
 12773  012DE2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12774  012DE8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12775  012DEE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12776  012DF4                     	if	0	;tblptru may be non-zero
 12777  012DF4                     	endif
 12778  012DF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12779  012DF4  0E00               	movlw	low (__mediumconst shr (0+16))
 12780  012DF6  6EF8               	movwf	tblptru,c
 12781  012DF8                     	endif
 12782  012DF8  0008               	tblrd		*
 12783  012DFA  50F5               	movf	tablat,w,c
 12784  012DFC  0A75               	xorlw	117
 12785  012DFE  A4D8               	btfss	status,2,c
 12786  012E00  D07C               	goto	l12648
 12787                           
 12788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12789                           ;stkvar	_fmt @ sp[(-32)+-4]
 12790  012E02  0EDC               	movlw	-36
 12791  012E04  006F FF8F FFD9     	movff	plusw1,fsr2l
 12792  012E0A  0EDD               	movlw	-35
 12793  012E0C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12794  012E12  2ADE               	incf	postinc2,f,c
 12795  012E14  0E00               	movlw	0
 12796  012E16  22DD               	addwfc	postdec2,f,c
 12797                           
 12798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12799                           ;stkvar	_ap @ sp[(-32)+-6]
 12800  012E18  0EDA               	movlw	-38
 12801  012E1A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12802  012E20  0EDB               	movlw	-37
 12803  012E22  006F FF8F FFDA     	movff	plusw1,fsr2h
 12804  012E28  0E02               	movlw	2
 12805  012E2A  5EDE               	subwf	postinc2,f,c
 12806  012E2C  0E00               	movlw	0
 12807  012E2E  5ADD               	subwfb	postdec2,f,c
 12808  012E30  006F FF78  F00B    	movff	postinc2,btemp+10
 12809  012E36  006F FF74  F00C    	movff	postdec2,btemp+11
 12810  012E3C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12811  012E42  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12812  012E48  006F FF78  F00B    	movff	postinc2,btemp+10
 12813  012E4E  006F FF74  F00C    	movff	postdec2,btemp+11
 12814  012E54  500B               	movf	(btemp+10)^0,w,c
 12815  012E56  6E11               	movwf	(btemp+16)^0,c
 12816  012E58  500C               	movf	(btemp+11)^0,w,c
 12817  012E5A  6E12               	movwf	(btemp+17)^0,c
 12818  012E5C  6A13               	clrf	(btemp+18)^0,c
 12819  012E5E  6A14               	clrf	(btemp+19)^0,c
 12820  012E60  6A15               	clrf	(btemp+20)^0,c
 12821  012E62  6A16               	clrf	(btemp+21)^0,c
 12822  012E64  6A17               	clrf	(btemp+22)^0,c
 12823  012E66  6A18               	clrf	(btemp+23)^0,c
 12824                           
 12825                           ;stkvar	_llu @ sp[(-32)+6]
 12826  012E68  0EE6               	movlw	-26
 12827  012E6A  0060  F047  FFE3   	movff	btemp+16,plusw1
 12828  012E70  0EE7               	movlw	-25
 12829  012E72  0060  F04B  FFE3   	movff	btemp+17,plusw1
 12830  012E78  0EE8               	movlw	-24
 12831  012E7A  0060  F04F  FFE3   	movff	btemp+18,plusw1
 12832  012E80  0EE9               	movlw	-23
 12833  012E82  0060  F053  FFE3   	movff	btemp+19,plusw1
 12834  012E88  0EEA               	movlw	-22
 12835  012E8A  0060  F057  FFE3   	movff	btemp+20,plusw1
 12836  012E90  0EEB               	movlw	-21
 12837  012E92  0060  F05B  FFE3   	movff	btemp+21,plusw1
 12838  012E98  0EEC               	movlw	-20
 12839  012E9A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 12840  012EA0  0EED               	movlw	-19
 12841  012EA2  0060  F063  FFE3   	movff	btemp+23,plusw1
 12842                           
 12843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12844                           ;stkvar	_llu @ sp[(-32)+6]
 12845  012EA8  50E1               	movf	fsr1l,w,c
 12846  012EAA  0FE6               	addlw	-26
 12847  012EAC  6ED9               	movwf	fsr2l,c
 12848  012EAE  50E2               	movf	fsr1h,w,c
 12849  012EB0  6EDA               	movwf	fsr2h,c
 12850  012EB2  0EFF               	movlw	255
 12851  012EB4  22DA               	addwfc	fsr2h,f,c
 12852  012EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 12853  012EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 12854  012EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 12855  012EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 12856  012ECE  006F FF7B FFE6     	movff	postinc2,postinc1
 12857  012ED4  006F FF7B FFE6     	movff	postinc2,postinc1
 12858  012EDA  006F FF7B FFE6     	movff	postinc2,postinc1
 12859  012EE0  006F FF7B FFE6     	movff	postinc2,postinc1
 12860                           
 12861                           ;stkvar	_fp @ sp[(-40)+-2]
 12862  012EE6  0ED6               	movlw	-42
 12863  012EE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12864  012EEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12865  012EF4  ECE0  F0B3         	call	_utoa	;wreg free
 12866  012EF8  D21E               	goto	l2370
 12867  012EFA                     l12648:
 12868                           
 12869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12870  012EFA  0E02               	movlw	2
 12871  012EFC  6EE6               	movwf	postinc1,c
 12872  012EFE  0E00               	movlw	0
 12873  012F00  6EE6               	movwf	postinc1,c
 12874  012F02  0EF3               	movlw	low STR_87
 12875  012F04  6EE6               	movwf	postinc1,c
 12876  012F06  0EFF               	movlw	high STR_87
 12877  012F08  6EE6               	movwf	postinc1,c
 12878                           
 12879                           ;stkvar	_fmt @ sp[(-36)+-4]
 12880  012F0A  0ED8               	movlw	-40
 12881  012F0C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12882  012F12  0ED9               	movlw	-39
 12883  012F14  006F FF8F FFDA     	movff	plusw1,fsr2h
 12884  012F1A  006F FF78  F00B    	movff	postinc2,btemp+10
 12885  012F20  006F FF74  F00C    	movff	postdec2,btemp+11
 12886  012F26  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12887  012F2C  0060  F033  FFE6   	movff	btemp+11,postinc1
 12888  012F32  EC10  F0C0         	call	_strncmp	;wreg free
 12889  012F36  5001               	movf	btemp^0,w,c
 12890  012F38  1002               	iorwf	(btemp+1)^0,w,c
 12891  012F3A  A4D8               	btfss	status,2,c
 12892  012F3C  D039               	goto	l12658
 12893                           
 12894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12895                           ;stkvar	_fmt @ sp[(-32)+-4]
 12896  012F3E  0EDC               	movlw	-36
 12897  012F40  006F FF8F FFD9     	movff	plusw1,fsr2l
 12898  012F46  0EDD               	movlw	-35
 12899  012F48  006F FF8F FFDA     	movff	plusw1,fsr2h
 12900  012F4E  0E02               	movlw	2
 12901  012F50  26DE               	addwf	postinc2,f,c
 12902  012F52  0E00               	movlw	0
 12903  012F54  22DD               	addwfc	postdec2,f,c
 12904                           
 12905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12906                           ;stkvar	_ap @ sp[(-32)+-6]
 12907  012F56  0EDA               	movlw	-38
 12908  012F58  006F FF8F FFD9     	movff	plusw1,fsr2l
 12909  012F5E  0EDB               	movlw	-37
 12910  012F60  006F FF8F FFDA     	movff	plusw1,fsr2h
 12911  012F66  0E04               	movlw	4
 12912  012F68  5EDE               	subwf	postinc2,f,c
 12913  012F6A  0E00               	movlw	0
 12914  012F6C  5ADD               	subwfb	postdec2,f,c
 12915  012F6E  006F FF78  F00B    	movff	postinc2,btemp+10
 12916  012F74  006F FF74  F00C    	movff	postdec2,btemp+11
 12917  012F7A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 12918  012F80  0060  F033  FFDA   	movff	btemp+11,fsr2h
 12919  012F86  006F FF78  F009    	movff	postinc2,btemp+8
 12920  012F8C  006F FF78  F00A    	movff	postinc2,btemp+9
 12921  012F92  006F FF78  F00B    	movff	postinc2,btemp+10
 12922  012F98  006F FF78  F00C    	movff	postinc2,btemp+11
 12923  012F9E  5009               	movf	(btemp+8)^0,w,c
 12924  012FA0  6E11               	movwf	(btemp+16)^0,c
 12925  012FA2  500A               	movf	(btemp+9)^0,w,c
 12926  012FA4  6E12               	movwf	(btemp+17)^0,c
 12927  012FA6  500B               	movf	(btemp+10)^0,w,c
 12928  012FA8  6E13               	movwf	(btemp+18)^0,c
 12929  012FAA  500C               	movf	(btemp+11)^0,w,c
 12930  012FAC  6E14               	movwf	(btemp+19)^0,c
 12931  012FAE  D758               	goto	L10
 12932  012FB0                     l12658:
 12933                           
 12934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12935                           ;stkvar	_fmt @ sp[(-32)+-4]
 12936  012FB0  0EDC               	movlw	-36
 12937  012FB2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12938  012FB8  0EDD               	movlw	-35
 12939  012FBA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12940  012FC0  006F FF7B FFF6     	movff	postinc2,tblptrl
 12941  012FC6  006F FF77 FFF7     	movff	postdec2,tblptrh
 12942  012FCC                     	if	0	;tblptru may be non-zero
 12943  012FCC                     	endif
 12944  012FCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12945  012FCC  0E00               	movlw	low (__mediumconst shr (0+16))
 12946  012FCE  6EF8               	movwf	tblptru,c
 12947  012FD0                     	endif
 12948  012FD0  0008               	tblrd		*
 12949  012FD2  50F5               	movf	tablat,w,c
 12950  012FD4  0A78               	xorlw	120
 12951  012FD6  B4D8               	btfsc	status,2,c
 12952  012FD8  D015               	goto	u12260
 12953                           
 12954                           ;stkvar	_fmt @ sp[(-32)+-4]
 12955  012FDA  0EDC               	movlw	-36
 12956  012FDC  006F FF8F FFD9     	movff	plusw1,fsr2l
 12957  012FE2  0EDD               	movlw	-35
 12958  012FE4  006F FF8F FFDA     	movff	plusw1,fsr2h
 12959  012FEA  006F FF7B FFF6     	movff	postinc2,tblptrl
 12960  012FF0  006F FF77 FFF7     	movff	postdec2,tblptrh
 12961  012FF6                     	if	0	;tblptru may be non-zero
 12962  012FF6                     	endif
 12963  012FF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12964  012FF6  0E00               	movlw	low (__mediumconst shr (0+16))
 12965  012FF8  6EF8               	movwf	tblptru,c
 12966  012FFA                     	endif
 12967  012FFA  0008               	tblrd		*
 12968  012FFC  50F5               	movf	tablat,w,c
 12969  012FFE  0A58               	xorlw	88
 12970  013000  A4D8               	btfss	status,2,c
 12971  013002  D094               	goto	l12672
 12972  013004                     u12260:
 12973                           
 12974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12975                           ;stkvar	_fmt @ sp[(-32)+-4]
 12976  013004  0EDC               	movlw	-36
 12977  013006  006F FF8F FFD9     	movff	plusw1,fsr2l
 12978  01300C  0EDD               	movlw	-35
 12979  01300E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12980  013014  006F FF7B FFF6     	movff	postinc2,tblptrl
 12981  01301A  006F FF77 FFF7     	movff	postdec2,tblptrh
 12982  013020                     	if	0	;tblptru may be non-zero
 12983  013020                     	endif
 12984  013020                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12985  013020  0E00               	movlw	low (__mediumconst shr (0+16))
 12986  013022  6EF8               	movwf	tblptru,c
 12987  013024                     	endif
 12988                           
 12989                           ;stkvar	_c @ sp[(-32)+31]
 12990  013024  0008               	tblrd		*
 12991  013026  0EFF               	movlw	-1
 12992  013028  006F FFD7 FFE3     	movff	tablat,plusw1
 12993                           
 12994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12995                           ;stkvar	_fmt @ sp[(-32)+-4]
 12996  01302E  0EDC               	movlw	-36
 12997  013030  006F FF8F FFD9     	movff	plusw1,fsr2l
 12998  013036  0EDD               	movlw	-35
 12999  013038  006F FF8F FFDA     	movff	plusw1,fsr2h
 13000  01303E  2ADE               	incf	postinc2,f,c
 13001  013040  0E00               	movlw	0
 13002  013042  22DD               	addwfc	postdec2,f,c
 13003                           
 13004                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 13005                           ;stkvar	_ap @ sp[(-32)+-6]
 13006  013044  0EDA               	movlw	-38
 13007  013046  006F FF8F FFD9     	movff	plusw1,fsr2l
 13008  01304C  0EDB               	movlw	-37
 13009  01304E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13010  013054  0E02               	movlw	2
 13011  013056  5EDE               	subwf	postinc2,f,c
 13012  013058  0E00               	movlw	0
 13013  01305A  5ADD               	subwfb	postdec2,f,c
 13014  01305C  006F FF78  F00B    	movff	postinc2,btemp+10
 13015  013062  006F FF74  F00C    	movff	postdec2,btemp+11
 13016  013068  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13017  01306E  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13018  013074  006F FF78  F00B    	movff	postinc2,btemp+10
 13019  01307A  006F FF74  F00C    	movff	postdec2,btemp+11
 13020  013080  500B               	movf	(btemp+10)^0,w,c
 13021  013082  6E11               	movwf	(btemp+16)^0,c
 13022  013084  500C               	movf	(btemp+11)^0,w,c
 13023  013086  6E12               	movwf	(btemp+17)^0,c
 13024  013088  6A13               	clrf	(btemp+18)^0,c
 13025  01308A  6A14               	clrf	(btemp+19)^0,c
 13026  01308C  6A15               	clrf	(btemp+20)^0,c
 13027  01308E  6A16               	clrf	(btemp+21)^0,c
 13028  013090  6A17               	clrf	(btemp+22)^0,c
 13029  013092  6A18               	clrf	(btemp+23)^0,c
 13030                           
 13031                           ;stkvar	_llu @ sp[(-32)+6]
 13032  013094  0EE6               	movlw	-26
 13033  013096  0060  F047  FFE3   	movff	btemp+16,plusw1
 13034  01309C  0EE7               	movlw	-25
 13035  01309E  0060  F04B  FFE3   	movff	btemp+17,plusw1
 13036  0130A4  0EE8               	movlw	-24
 13037  0130A6  0060  F04F  FFE3   	movff	btemp+18,plusw1
 13038  0130AC  0EE9               	movlw	-23
 13039  0130AE  0060  F053  FFE3   	movff	btemp+19,plusw1
 13040  0130B4  0EEA               	movlw	-22
 13041  0130B6  0060  F057  FFE3   	movff	btemp+20,plusw1
 13042  0130BC  0EEB               	movlw	-21
 13043  0130BE  0060  F05B  FFE3   	movff	btemp+21,plusw1
 13044  0130C4  0EEC               	movlw	-20
 13045  0130C6  0060  F05F  FFE3   	movff	btemp+22,plusw1
 13046  0130CC  0EED               	movlw	-19
 13047  0130CE  0060  F063  FFE3   	movff	btemp+23,plusw1
 13048                           
 13049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 13050                           ;stkvar	_c @ sp[(-32)+31]
 13051  0130D4  0EFF               	movlw	-1
 13052  0130D6  50E3               	movf	plusw1,w,c
 13053  0130D8  6EE6               	movwf	postinc1,c
 13054                           
 13055                           ;stkvar	_llu @ sp[(-33)+6]
 13056  0130DA  50E1               	movf	fsr1l,w,c
 13057  0130DC  0FE5               	addlw	-27
 13058  0130DE  6ED9               	movwf	fsr2l,c
 13059  0130E0  50E2               	movf	fsr1h,w,c
 13060  0130E2  6EDA               	movwf	fsr2h,c
 13061  0130E4  0EFF               	movlw	255
 13062  0130E6  22DA               	addwfc	fsr2h,f,c
 13063  0130E8  006F FF7B FFE6     	movff	postinc2,postinc1
 13064  0130EE  006F FF7B FFE6     	movff	postinc2,postinc1
 13065  0130F4  006F FF7B FFE6     	movff	postinc2,postinc1
 13066  0130FA  006F FF7B FFE6     	movff	postinc2,postinc1
 13067  013100  006F FF7B FFE6     	movff	postinc2,postinc1
 13068  013106  006F FF7B FFE6     	movff	postinc2,postinc1
 13069  01310C  006F FF7B FFE6     	movff	postinc2,postinc1
 13070  013112  006F FF7B FFE6     	movff	postinc2,postinc1
 13071                           
 13072                           ;stkvar	_fp @ sp[(-41)+-2]
 13073  013118  0ED5               	movlw	-43
 13074  01311A  006F FF8F FFE6     	movff	plusw1,postinc1
 13075  013120  006F FF8F FFE6     	movff	plusw1,postinc1
 13076  013126  EC4D  F0B0         	call	_xtoa	;wreg free
 13077  01312A  D105               	goto	l2370
 13078  01312C                     l12672:
 13079                           
 13080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 13081  01312C  0E02               	movlw	2
 13082  01312E  6EE6               	movwf	postinc1,c
 13083  013130  0E00               	movlw	0
 13084  013132  6EE6               	movwf	postinc1,c
 13085  013134  0EF6               	movlw	low STR_92
 13086  013136  6EE6               	movwf	postinc1,c
 13087  013138  0EFF               	movlw	high STR_92
 13088  01313A  6EE6               	movwf	postinc1,c
 13089                           
 13090                           ;stkvar	_fmt @ sp[(-36)+-4]
 13091  01313C  0ED8               	movlw	-40
 13092  01313E  006F FF8F FFD9     	movff	plusw1,fsr2l
 13093  013144  0ED9               	movlw	-39
 13094  013146  006F FF8F FFDA     	movff	plusw1,fsr2h
 13095  01314C  006F FF78  F00B    	movff	postinc2,btemp+10
 13096  013152  006F FF74  F00C    	movff	postdec2,btemp+11
 13097  013158  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13098  01315E  0060  F033  FFE6   	movff	btemp+11,postinc1
 13099  013164  EC10  F0C0         	call	_strncmp	;wreg free
 13100  013168  5001               	movf	btemp^0,w,c
 13101  01316A  1002               	iorwf	(btemp+1)^0,w,c
 13102  01316C  B4D8               	btfsc	status,2,c
 13103  01316E  D022               	goto	u12280
 13104  013170  0E02               	movlw	2
 13105  013172  6EE6               	movwf	postinc1,c
 13106  013174  0E00               	movlw	0
 13107  013176  6EE6               	movwf	postinc1,c
 13108  013178  0EE7               	movlw	low STR_96
 13109  01317A  6EE6               	movwf	postinc1,c
 13110  01317C  0EFF               	movlw	high STR_96
 13111  01317E  6EE6               	movwf	postinc1,c
 13112                           
 13113                           ;stkvar	_fmt @ sp[(-36)+-4]
 13114  013180  0ED8               	movlw	-40
 13115  013182  006F FF8F FFD9     	movff	plusw1,fsr2l
 13116  013188  0ED9               	movlw	-39
 13117  01318A  006F FF8F FFDA     	movff	plusw1,fsr2h
 13118  013190  006F FF78  F00B    	movff	postinc2,btemp+10
 13119  013196  006F FF74  F00C    	movff	postdec2,btemp+11
 13120  01319C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13121  0131A2  0060  F033  FFE6   	movff	btemp+11,postinc1
 13122  0131A8  EC10  F0C0         	call	_strncmp	;wreg free
 13123  0131AC  5001               	movf	btemp^0,w,c
 13124  0131AE  1002               	iorwf	(btemp+1)^0,w,c
 13125  0131B0  A4D8               	btfss	status,2,c
 13126  0131B2  D058               	goto	l12686
 13127  0131B4                     u12280:
 13128                           
 13129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 13130                           ;stkvar	_fmt @ sp[(-32)+-4]
 13131  0131B4  0EDC               	movlw	-36
 13132  0131B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 13133  0131BC  0EDD               	movlw	-35
 13134  0131BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 13135  0131C4  006F FF78  F00B    	movff	postinc2,btemp+10
 13136  0131CA  006F FF74  F00C    	movff	postdec2,btemp+11
 13137  0131D0  0E01               	movlw	1
 13138  0131D2  260B               	addwf	(btemp+10)^0,f,c
 13139  0131D4  0E00               	movlw	0
 13140  0131D6  220C               	addwfc	(btemp+11)^0,f,c
 13141  0131D8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 13142  0131DE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 13143  0131E4                     	if	0	;tblptru may be non-zero
 13144  0131E4                     	endif
 13145  0131E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13146  0131E4  0E00               	movlw	low (__mediumconst shr (0+16))
 13147  0131E6  6EF8               	movwf	tblptru,c
 13148  0131E8                     	endif
 13149                           
 13150                           ;stkvar	_c @ sp[(-32)+31]
 13151  0131E8  0008               	tblrd		*
 13152  0131EA  0EFF               	movlw	-1
 13153  0131EC  006F FFD7 FFE3     	movff	tablat,plusw1
 13154                           
 13155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 13156                           ;stkvar	_fmt @ sp[(-32)+-4]
 13157  0131F2  0EDC               	movlw	-36
 13158  0131F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13159  0131FA  0EDD               	movlw	-35
 13160  0131FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13161  013202  0E02               	movlw	2
 13162  013204  26DE               	addwf	postinc2,f,c
 13163  013206  0E00               	movlw	0
 13164  013208  22DD               	addwfc	postdec2,f,c
 13165                           
 13166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 13167                           ;stkvar	_ap @ sp[(-32)+-6]
 13168  01320A  0EDA               	movlw	-38
 13169  01320C  006F FF8F FFD9     	movff	plusw1,fsr2l
 13170  013212  0EDB               	movlw	-37
 13171  013214  006F FF8F FFDA     	movff	plusw1,fsr2h
 13172  01321A  0E04               	movlw	4
 13173  01321C  5EDE               	subwf	postinc2,f,c
 13174  01321E  0E00               	movlw	0
 13175  013220  5ADD               	subwfb	postdec2,f,c
 13176  013222  006F FF78  F00B    	movff	postinc2,btemp+10
 13177  013228  006F FF74  F00C    	movff	postdec2,btemp+11
 13178  01322E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 13179  013234  0060  F033  FFDA   	movff	btemp+11,fsr2h
 13180  01323A  006F FF78  F009    	movff	postinc2,btemp+8
 13181  013240  006F FF78  F00A    	movff	postinc2,btemp+9
 13182  013246  006F FF78  F00B    	movff	postinc2,btemp+10
 13183  01324C  006F FF78  F00C    	movff	postinc2,btemp+11
 13184  013252  5009               	movf	(btemp+8)^0,w,c
 13185  013254  6E11               	movwf	(btemp+16)^0,c
 13186  013256  500A               	movf	(btemp+9)^0,w,c
 13187  013258  6E12               	movwf	(btemp+17)^0,c
 13188  01325A  500B               	movf	(btemp+10)^0,w,c
 13189  01325C  6E13               	movwf	(btemp+18)^0,c
 13190  01325E  500C               	movf	(btemp+11)^0,w,c
 13191  013260  6E14               	movwf	(btemp+19)^0,c
 13192  013262  D714               	goto	L11
 13193  013264                     l12686:
 13194                           
 13195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 13196                           ;stkvar	_fmt @ sp[(-32)+-4]
 13197  013264  0EDC               	movlw	-36
 13198  013266  006F FF8F FFD9     	movff	plusw1,fsr2l
 13199  01326C  0EDD               	movlw	-35
 13200  01326E  006F FF8F FFDA     	movff	plusw1,fsr2h
 13201  013274  006F FF7B FFF6     	movff	postinc2,tblptrl
 13202  01327A  006F FF77 FFF7     	movff	postdec2,tblptrh
 13203  013280                     	if	0	;tblptru may be non-zero
 13204  013280                     	endif
 13205  013280                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13206  013280  0E00               	movlw	low (__mediumconst shr (0+16))
 13207  013282  6EF8               	movwf	tblptru,c
 13208  013284                     	endif
 13209  013284  0008               	tblrd		*
 13210  013286  50F5               	movf	tablat,w,c
 13211  013288  0A25               	xorlw	37
 13212  01328A  A4D8               	btfss	status,2,c
 13213  01328C  D01A               	goto	l12696
 13214                           
 13215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 13216                           ;stkvar	_fmt @ sp[(-32)+-4]
 13217  01328E  0EDC               	movlw	-36
 13218  013290  006F FF8F FFD9     	movff	plusw1,fsr2l
 13219  013296  0EDD               	movlw	-35
 13220  013298  006F FF8F FFDA     	movff	plusw1,fsr2h
 13221  01329E  2ADE               	incf	postinc2,f,c
 13222  0132A0  0E00               	movlw	0
 13223  0132A2  22DD               	addwfc	postdec2,f,c
 13224                           
 13225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 13226                           ;stkvar	_fp @ sp[(-32)+-2]
 13227  0132A4  0EDE               	movlw	-34
 13228  0132A6  006F FF8F FFE6     	movff	plusw1,postinc1
 13229  0132AC  006F FF8F FFE6     	movff	plusw1,postinc1
 13230  0132B2  0E25               	movlw	37
 13231  0132B4  6EE6               	movwf	postinc1,c
 13232  0132B6  0E00               	movlw	0
 13233  0132B8  6EE6               	movwf	postinc1,c
 13234  0132BA  ECC4  F0CB         	call	_fputc	;wreg free
 13235  0132BE                     l12692:
 13236                           
 13237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 13238  0132BE  0E01               	movlw	1
 13239  0132C0  D00C               	goto	L12
 13240  0132C2                     l12696:
 13241                           
 13242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 13243                           ;stkvar	_fmt @ sp[(-32)+-4]
 13244  0132C2  0EDC               	movlw	-36
 13245  0132C4  006F FF8F FFD9     	movff	plusw1,fsr2l
 13246  0132CA  0EDD               	movlw	-35
 13247  0132CC  006F FF8F FFDA     	movff	plusw1,fsr2h
 13248  0132D2  2ADE               	incf	postinc2,f,c
 13249  0132D4  0E00               	movlw	0
 13250  0132D6  22DD               	addwfc	postdec2,f,c
 13251                           
 13252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 13253  0132D8  0E00               	movlw	0
 13254  0132DA                     L12:
 13255  0132DA  6E01               	movwf	btemp^0,c
 13256  0132DC  0E00               	movlw	0
 13257  0132DE  6E02               	movwf	(btemp+1)^0,c
 13258  0132E0  D02A               	goto	l2370
 13259  0132E2                     l12702:
 13260                           
 13261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 13262                           ;stkvar	_fp @ sp[(-32)+-2]
 13263  0132E2  0EDE               	movlw	-34
 13264  0132E4  006F FF8F FFE6     	movff	plusw1,postinc1
 13265  0132EA  006F FF8F FFE6     	movff	plusw1,postinc1
 13266                           
 13267                           ;stkvar	_fmt @ sp[(-34)+-4]
 13268  0132F0  0EDA               	movlw	-38
 13269  0132F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 13270  0132F8  0EDB               	movlw	-37
 13271  0132FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 13272  013300  006F FF7B FFF6     	movff	postinc2,tblptrl
 13273  013306  006F FF77 FFF7     	movff	postdec2,tblptrh
 13274  01330C                     	if	0	;tblptru may be non-zero
 13275  01330C                     	endif
 13276  01330C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13277  01330C  0E00               	movlw	low (__mediumconst shr (0+16))
 13278  01330E  6EF8               	movwf	tblptru,c
 13279  013310                     	endif
 13280  013310  0008               	tblrd		*
 13281  013312  50F5               	movf	tablat,w,c
 13282  013314  6EE6               	movwf	postinc1,c
 13283  013316  0E00               	movlw	0
 13284  013318  6EE6               	movwf	postinc1,c
 13285  01331A  ECC4  F0CB         	call	_fputc	;wreg free
 13286                           
 13287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 13288                           ;stkvar	_fmt @ sp[(-32)+-4]
 13289  01331E  0EDC               	movlw	-36
 13290  013320  006F FF8F FFD9     	movff	plusw1,fsr2l
 13291  013326  0EDD               	movlw	-35
 13292  013328  006F FF8F FFDA     	movff	plusw1,fsr2h
 13293  01332E  2ADE               	incf	postinc2,f,c
 13294  013330  0E00               	movlw	0
 13295  013332  22DD               	addwfc	postdec2,f,c
 13296  013334  D7C4               	goto	l12692
 13297  013336                     l2370:
 13298                           
 13299                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 13300  013336  0EDA               	movlw	218
 13301  013338  26E1               	addwf	fsr1l,f,c
 13302  01333A  0EFF               	movlw	255
 13303  01333C  22E2               	addwfc	fsr1h,f,c
 13304  01333E  0012               	return		;funcret
 13305  013340                     __end_of_vfpfcnvrt:
 13306                           	opt callstack 0
 13307                           
 13308 ;; *************** function _xtoa *****************
 13309 ;; Defined at:
 13310 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13311 ;; Parameters:    Size  Location     Type
 13312 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13313 ;;		 -> f(6), NULL(0), 
 13314 ;;  d               8  [STACK] unsigned long long 
 13315 ;;  x               1  [STACK] unsigned char 
 13316 ;; Auto vars:     Size  Location     Type
 13317 ;;  n               8  [STACK] unsigned long long 
 13318 ;;  c               2  [STACK] int 
 13319 ;;  i               2  [STACK] int 
 13320 ;;  w               2  [STACK] int 
 13321 ;;  p               2  [STACK] int 
 13322 ;; Return value:  Size  Location     Type
 13323 ;;                  2  [STACK] int 
 13324 ;; Registers used:
 13325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13326 ;; Tracked objects:
 13327 ;;		On entry : 0/0
 13328 ;;		On exit  : 0/0
 13329 ;;		Unchanged: 0/0
 13330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13335 ;;Total ram usage:        0 bytes
 13336 ;; Hardware stack levels used:    1
 13337 ;; Hardware stack levels required when called:   20
 13338 ;; This function calls:
 13339 ;;		_isalpha
 13340 ;;		_isupper
 13341 ;;		_pad
 13342 ;;		_toupper
 13343 ;; This function is called by:
 13344 ;;		_vfpfcnvrt
 13345 ;; This function uses a reentrant model
 13346 ;;
 13347                           
 13348                           	psect	text48
 13349  01609A                     __ptext48:
 13350                           	opt callstack 0
 13351  01609A                     _xtoa:
 13352                           	opt callstack 0
 13353                           
 13354                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13355  01609A  0E14               	movlw	20
 13356  01609C  26E1               	addwf	fsr1l,f,c
 13357  01609E  0E00               	movlw	0
 13358  0160A0  22E2               	addwfc	fsr1h,f,c
 13359                           
 13360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 13361                           
 13362                           ;incstack = 0
 13363 ;; hardware stack exceeded
 13364  0160A2  AE3D               	btfss	(_prec+1)^0,7,c
 13365                           
 13366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 13367  0160A4  923E               	bcf	_flags^0,1,c
 13368                           
 13369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 13370  0160A6  BE3D               	btfsc	(_prec+1)^0,7,c
 13371  0160A8  D005               	goto	u11820
 13372  0160AA  503D               	movf	(_prec+1)^0,w,c
 13373  0160AC  E110               	bnz	l12422
 13374  0160AE  043C               	decf	_prec^0,w,c
 13375  0160B0  B0D8               	btfsc	status,0,c
 13376  0160B2  D00D               	goto	l12422
 13377  0160B4                     u11820:
 13378  0160B4  0E01               	movlw	1
 13379  0160B6  6E0B               	movwf	(btemp+10)^0,c
 13380  0160B8  0E00               	movlw	0
 13381  0160BA  6E0C               	movwf	(btemp+11)^0,c
 13382                           
 13383                           ;stkvar	_p @ sp[(-20)+18]
 13384  0160BC  0EFE               	movlw	-2
 13385  0160BE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13386  0160C4  0EFF               	movlw	-1
 13387  0160C6  0060  F033  FFE3   	movff	btemp+11,plusw1
 13388  0160CC  D008               	goto	l2320
 13389  0160CE                     l12422:
 13390                           
 13391                           ;stkvar	_p @ sp[(-20)+18]
 13392  0160CE  0EFE               	movlw	-2
 13393  0160D0  0060  F0F3  FFE3   	movff	_prec,plusw1
 13394  0160D6  0EFF               	movlw	-1
 13395  0160D8  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 13396  0160DE                     l2320:
 13397                           
 13398                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 13399                           ;stkvar	_w @ sp[(-20)+16]
 13400  0160DE  0EFC               	movlw	-4
 13401  0160E0  0060  F0EB  FFE3   	movff	_width,plusw1
 13402  0160E6  0EFD               	movlw	-3
 13403  0160E8  0060  F0EF  FFE3   	movff	_width+1,plusw1
 13404                           
 13405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 13406  0160EE  A83E               	btfss	_flags^0,4,c
 13407  0160F0  D00B               	goto	l12428
 13408                           
 13409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 13410                           ;stkvar	_w @ sp[(-20)+16]
 13411  0160F2  50E1               	movf	fsr1l,w,c
 13412  0160F4  0FFC               	addlw	-4
 13413  0160F6  6ED9               	movwf	fsr2l,c
 13414  0160F8  50E2               	movf	fsr1h,w,c
 13415  0160FA  6EDA               	movwf	fsr2h,c
 13416  0160FC  0EFF               	movlw	255
 13417  0160FE  22DA               	addwfc	fsr2h,f,c
 13418  016100  0EFE               	movlw	254
 13419  016102  26DE               	addwf	postinc2,f,c
 13420  016104  0EFF               	movlw	255
 13421  016106  22DD               	addwfc	postdec2,f,c
 13422  016108                     l12428:
 13423                           
 13424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 13425                           ;stkvar	_d @ sp[(-20)+-10]
 13426  016108  0EE2               	movlw	226
 13427  01610A  24E1               	addwf	fsr1l,w,c
 13428  01610C  6ED9               	movwf	fsr2l,c
 13429  01610E  0EFF               	movlw	255
 13430  016110  20E2               	addwfc	fsr1h,w,c
 13431  016112  6EDA               	movwf	fsr2h,c
 13432                           
 13433                           ;stkvar	_n @ sp[(-20)+4]
 13434  016114  0E08               	movlw	8
 13435  016116  6E01               	movwf	btemp^0,c
 13436  016118  0EF0               	movlw	-16
 13437  01611A                     us1184999:
 13438  01611A  006F FF7B FFE3     	movff	postinc2,plusw1
 13439  016120  28E8               	incf	wreg,w,c
 13440  016122  2E01               	decfsz	btemp^0,f,c
 13441  016124  D7FA               	bra	us1184999
 13442                           
 13443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 13444  016126  0E4F               	movlw	79
 13445  016128  6E0B               	movwf	(btemp+10)^0,c
 13446  01612A  0E00               	movlw	0
 13447  01612C  6E0C               	movwf	(btemp+11)^0,c
 13448                           
 13449                           ;stkvar	_i @ sp[(-20)+14]
 13450  01612E  0EFA               	movlw	-6
 13451  016130  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13452  016136  0EFB               	movlw	-5
 13453  016138  0060  F033  FFE3   	movff	btemp+11,plusw1
 13454                           
 13455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 13456  01613E  0102               	movlb	2	; () banked
 13457  016140  6BE6               	clrf	(_dbuf+79)& (0+255),b
 13458                           
 13459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13460  016142  D0EE               	goto	l12466
 13461  016144                     l12434:
 13462                           
 13463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 13464                           ;stkvar	_i @ sp[(-20)+14]
 13465  016144  50E1               	movf	fsr1l,w,c
 13466  016146  0FFA               	addlw	-6
 13467  016148  6ED9               	movwf	fsr2l,c
 13468  01614A  50E2               	movf	fsr1h,w,c
 13469  01614C  6EDA               	movwf	fsr2h,c
 13470  01614E  0EFF               	movlw	255
 13471  016150  22DA               	addwfc	fsr2h,f,c
 13472  016152  06DE               	decf	postinc2,f,c
 13473  016154  0E00               	movlw	0
 13474  016156  5ADD               	subwfb	postdec2,f,c
 13475                           
 13476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 13477                           ;stkvar	_n @ sp[(-20)+4]
 13478  016158  0EF0               	movlw	-16
 13479  01615A  006F FF8C  F00B    	movff	plusw1,btemp+10
 13480  016160  0EF1               	movlw	-15
 13481  016162  006F FF8C  F00C    	movff	plusw1,btemp+11
 13482  016168  0E0F               	movlw	15
 13483  01616A  160B               	andwf	(btemp+10)^0,f,c
 13484  01616C  0E00               	movlw	0
 13485  01616E  160C               	andwf	(btemp+11)^0,f,c
 13486                           
 13487                           ;stkvar	_c @ sp[(-20)+12]
 13488  016170  0EF8               	movlw	-8
 13489  016172  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13490  016178  0EF9               	movlw	-7
 13491  01617A  0060  F033  FFE3   	movff	btemp+11,plusw1
 13492                           
 13493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 13494                           ;stkvar	_c @ sp[(-20)+12]
 13495  016180  0EF9               	movlw	-7
 13496  016182  BEE3               	btfsc	plusw1,7,c
 13497  016184  D00F               	goto	l12442
 13498  016186  0EF9               	movlw	-7
 13499  016188  50E3               	movf	plusw1,w,c
 13500  01618A  E108               	bnz	u11850
 13501  01618C  0EF8               	movlw	-8
 13502  01618E  006F FF8C  F001    	movff	plusw1,btemp
 13503  016194  0E0A               	movlw	10
 13504  016196  5E01               	subwf	btemp^0,f,c
 13505  016198  A0D8               	btfss	status,0,c
 13506  01619A  D004               	goto	l12442
 13507  01619C                     u11850:
 13508                           
 13509                           ;stkvar	_c @ sp[(-20)+12]
 13510  01619C  0EF8               	movlw	-8
 13511  01619E  50E3               	movf	plusw1,w,c
 13512  0161A0  0F57               	addlw	87
 13513  0161A2  D003               	goto	L13
 13514  0161A4                     l12442:
 13515                           
 13516                           ;stkvar	_c @ sp[(-20)+12]
 13517  0161A4  0EF8               	movlw	-8
 13518  0161A6  50E3               	movf	plusw1,w,c
 13519  0161A8  0F30               	addlw	48
 13520  0161AA                     L13:
 13521  0161AA  6E0B               	movwf	(btemp+10)^0,c
 13522  0161AC  0EF9               	movlw	-7
 13523  0161AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 13524  0161B4  0E00               	movlw	0
 13525  0161B6  220C               	addwfc	(btemp+11)^0,f,c
 13526                           
 13527                           ;stkvar	_c @ sp[(-20)+12]
 13528  0161B8  0EF8               	movlw	-8
 13529  0161BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13530  0161C0  0EF9               	movlw	-7
 13531  0161C2  0060  F033  FFE3   	movff	btemp+11,plusw1
 13532  0161C8  0EBF               	movlw	191
 13533  0161CA  6E0B               	movwf	(btemp+10)^0,c
 13534  0161CC  0EFF               	movlw	255
 13535  0161CE  6E0C               	movwf	(btemp+11)^0,c
 13536                           
 13537                           ;stkvar	_x @ sp[(-20)+-11]
 13538  0161D0  0EE1               	movlw	-31
 13539  0161D2  50E3               	movf	plusw1,w,c
 13540  0161D4  6E09               	movwf	(btemp+8)^0,c
 13541  0161D6  6A0A               	clrf	(btemp+9)^0,c
 13542  0161D8  500B               	movf	(btemp+10)^0,w,c
 13543  0161DA  2609               	addwf	(btemp+8)^0,f,c
 13544  0161DC  500C               	movf	(btemp+11)^0,w,c
 13545  0161DE  220A               	addwfc	(btemp+9)^0,f,c
 13546  0161E0  500A               	movf	(btemp+9)^0,w,c
 13547  0161E2  E106               	bnz	u11860
 13548  0161E4  0E1A               	movlw	26
 13549  0161E6  5C09               	subwf	(btemp+8)^0,w,c
 13550  0161E8  B0D8               	btfsc	status,0,c
 13551  0161EA  D002               	goto	u11860
 13552  0161EC  0E01               	movlw	1
 13553  0161EE  D001               	goto	u11870
 13554  0161F0                     u11860:
 13555  0161F0  0E00               	movlw	0
 13556  0161F2                     u11870:
 13557  0161F2  6E0B               	movwf	(btemp+10)^0,c
 13558  0161F4  6A0C               	clrf	(btemp+11)^0,c
 13559                           
 13560                           ;stkvar	_xtoa$5578 @ sp[(-20)+2]
 13561  0161F6  0EEE               	movlw	-18
 13562  0161F8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13563  0161FE  0EEF               	movlw	-17
 13564  016200  0060  F033  FFE3   	movff	btemp+11,plusw1
 13565                           
 13566                           ;stkvar	_xtoa$5578 @ sp[(-20)+2]
 13567  016206  0EEE               	movlw	-18
 13568  016208  006F FF8C  F001    	movff	plusw1,btemp
 13569  01620E  0EEF               	movlw	-17
 13570  016210  50E3               	movf	plusw1,w,c
 13571  016212  1001               	iorwf	btemp^0,w,c
 13572  016214  B4D8               	btfsc	status,2,c
 13573  016216  D041               	goto	l12458
 13574  016218  0E9F               	movlw	159
 13575  01621A  6E0B               	movwf	(btemp+10)^0,c
 13576  01621C  0EFF               	movlw	255
 13577  01621E  6E0C               	movwf	(btemp+11)^0,c
 13578                           
 13579                           ;stkvar	_c @ sp[(-20)+12]
 13580  016220  0EF8               	movlw	-8
 13581  016222  006F FF8C  F009    	movff	plusw1,btemp+8
 13582  016228  0EF9               	movlw	-7
 13583  01622A  006F FF8C  F00A    	movff	plusw1,btemp+9
 13584  016230  0E20               	movlw	32
 13585  016232  1209               	iorwf	(btemp+8)^0,f,c
 13586  016234  0E00               	movlw	0
 13587  016236  120A               	iorwf	(btemp+9)^0,f,c
 13588  016238  500B               	movf	(btemp+10)^0,w,c
 13589  01623A  2609               	addwf	(btemp+8)^0,f,c
 13590  01623C  500C               	movf	(btemp+11)^0,w,c
 13591  01623E  220A               	addwfc	(btemp+9)^0,f,c
 13592  016240  500A               	movf	(btemp+9)^0,w,c
 13593  016242  E106               	bnz	u11890
 13594  016244  0E1A               	movlw	26
 13595  016246  5C09               	subwf	(btemp+8)^0,w,c
 13596  016248  B0D8               	btfsc	status,0,c
 13597  01624A  D002               	goto	u11890
 13598  01624C  0E01               	movlw	1
 13599  01624E  D001               	goto	u11900
 13600  016250                     u11890:
 13601  016250  0E00               	movlw	0
 13602  016252                     u11900:
 13603  016252  6E0B               	movwf	(btemp+10)^0,c
 13604  016254  6A0C               	clrf	(btemp+11)^0,c
 13605                           
 13606                           ;stkvar	_xtoa$5579 @ sp[(-20)+0]
 13607  016256  0EEC               	movlw	-20
 13608  016258  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13609  01625E  0EED               	movlw	-19
 13610  016260  0060  F033  FFE3   	movff	btemp+11,plusw1
 13611                           
 13612                           ;stkvar	_xtoa$5579 @ sp[(-20)+0]
 13613  016266  0EEC               	movlw	-20
 13614  016268  006F FF8C  F001    	movff	plusw1,btemp
 13615  01626E  0EED               	movlw	-19
 13616  016270  50E3               	movf	plusw1,w,c
 13617  016272  1001               	iorwf	btemp^0,w,c
 13618  016274  B4D8               	btfsc	status,2,c
 13619  016276  D011               	goto	l12458
 13620                           
 13621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 13622                           ;stkvar	_c @ sp[(-20)+12]
 13623  016278  0EF8               	movlw	-8
 13624  01627A  006F FF8F FFE6     	movff	plusw1,postinc1
 13625  016280  006F FF8F FFE6     	movff	plusw1,postinc1
 13626  016286  EC6F  F0D6         	call	_toupper	;wreg free
 13627                           
 13628                           ;stkvar	_c @ sp[(-20)+12]
 13629  01628A  0EF8               	movlw	-8
 13630  01628C  0060  F007  FFE3   	movff	btemp,plusw1
 13631  016292  0EF9               	movlw	-7
 13632  016294  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13633  01629A                     l12458:
 13634                           
 13635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13636                           ;stkvar	_c @ sp[(-20)+12]
 13637                           ;stkvar	_i @ sp[(-20)+14]
 13638  01629A  0EFA               	movlw	-6
 13639  01629C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13640  0162A2  0EFB               	movlw	-5
 13641  0162A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13642  0162AA  0E97               	movlw	low _dbuf
 13643  0162AC  240B               	addwf	(btemp+10)^0,w,c
 13644  0162AE  6ED9               	movwf	fsr2l,c
 13645  0162B0  0E02               	movlw	high _dbuf
 13646  0162B2  200C               	addwfc	(btemp+11)^0,w,c
 13647  0162B4  6EDA               	movwf	fsr2h,c
 13648  0162B6  0EF8               	movlw	-8
 13649  0162B8  006F FF8F FFDF     	movff	plusw1,indf2
 13650                           
 13651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13652                           ;stkvar	_p @ sp[(-20)+18]
 13653  0162BE  50E1               	movf	fsr1l,w,c
 13654  0162C0  0FFE               	addlw	-2
 13655  0162C2  6ED9               	movwf	fsr2l,c
 13656  0162C4  50E2               	movf	fsr1h,w,c
 13657  0162C6  6EDA               	movwf	fsr2h,c
 13658  0162C8  0EFF               	movlw	255
 13659  0162CA  22DA               	addwfc	fsr2h,f,c
 13660  0162CC  06DE               	decf	postinc2,f,c
 13661  0162CE  0E00               	movlw	0
 13662  0162D0  5ADD               	subwfb	postdec2,f,c
 13663                           
 13664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13665                           ;stkvar	_w @ sp[(-20)+16]
 13666  0162D2  50E1               	movf	fsr1l,w,c
 13667  0162D4  0FFC               	addlw	-4
 13668  0162D6  6ED9               	movwf	fsr2l,c
 13669  0162D8  50E2               	movf	fsr1h,w,c
 13670  0162DA  6EDA               	movwf	fsr2h,c
 13671  0162DC  0EFF               	movlw	255
 13672  0162DE  22DA               	addwfc	fsr2h,f,c
 13673  0162E0  06DE               	decf	postinc2,f,c
 13674  0162E2  0E00               	movlw	0
 13675  0162E4  5ADD               	subwfb	postdec2,f,c
 13676                           
 13677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13678  0162E6  0E04               	movlw	4
 13679  0162E8  6E0C               	movwf	(btemp+11)^0,c
 13680                           
 13681                           ;stkvar	_n @ sp[(-20)+4]
 13682  0162EA  50E1               	movf	fsr1l,w,c
 13683  0162EC  0FF0               	addlw	-16
 13684  0162EE  6ED9               	movwf	fsr2l,c
 13685  0162F0  50E2               	movf	fsr1h,w,c
 13686  0162F2  6EDA               	movwf	fsr2h,c
 13687  0162F4  0EFF               	movlw	255
 13688  0162F6  22DA               	addwfc	fsr2h,f,c
 13689  0162F8  280C               	incf	(btemp+11)^0,w,c
 13690  0162FA  52DE               	movf	postinc2,f,c
 13691  0162FC  D00F               	goto	u11920
 13692  0162FE                     u11925:
 13693  0162FE  52DE               	movf	postinc2,f,c
 13694  016300  52DE               	movf	postinc2,f,c
 13695  016302  52DE               	movf	postinc2,f,c
 13696  016304  52DE               	movf	postinc2,f,c
 13697  016306  52DE               	movf	postinc2,f,c
 13698  016308  52DE               	movf	postinc2,f,c
 13699  01630A  90D8               	bcf	status,0,c
 13700  01630C  32DD               	rrcf	postdec2,f,c
 13701  01630E  32DD               	rrcf	postdec2,f,c
 13702  016310  32DD               	rrcf	postdec2,f,c
 13703  016312  32DD               	rrcf	postdec2,f,c
 13704  016314  32DD               	rrcf	postdec2,f,c
 13705  016316  32DD               	rrcf	postdec2,f,c
 13706  016318  32DD               	rrcf	postdec2,f,c
 13707  01631A  32DE               	rrcf	postinc2,f,c
 13708  01631C                     u11920:
 13709  01631C  2EE8               	decfsz	wreg,f,c
 13710  01631E  D7EF               	goto	u11925
 13711  016320                     l12466:
 13712                           
 13713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13714                           ;stkvar	_i @ sp[(-20)+14]
 13715  016320  0EFB               	movlw	-5
 13716  016322  BEE3               	btfsc	plusw1,7,c
 13717  016324  D03A               	goto	u11970
 13718  016326  0EFB               	movlw	-5
 13719  016328  50E3               	movf	plusw1,w,c
 13720  01632A  E108               	bnz	u11930
 13721  01632C  0EFA               	movlw	-6
 13722  01632E  006F FF8C  F001    	movff	plusw1,btemp
 13723  016334  0E02               	movlw	2
 13724  016336  5E01               	subwf	btemp^0,f,c
 13725  016338  A0D8               	btfss	status,0,c
 13726  01633A  D02F               	goto	u11970
 13727  01633C                     u11930:
 13728                           
 13729                           ;stkvar	_n @ sp[(-20)+4]
 13730  01633C  0EF0               	movlw	-16
 13731  01633E  50E3               	movf	plusw1,w,c
 13732  016340  E115               	bnz	u11941
 13733  016342  0EF1               	movlw	-15
 13734  016344  50E3               	movf	plusw1,w,c
 13735  016346  E112               	bnz	u11941
 13736  016348  0EF2               	movlw	-14
 13737  01634A  50E3               	movf	plusw1,w,c
 13738  01634C  E10F               	bnz	u11941
 13739  01634E  0EF3               	movlw	-13
 13740  016350  50E3               	movf	plusw1,w,c
 13741  016352  E10C               	bnz	u11941
 13742  016354  0EF4               	movlw	-12
 13743  016356  50E3               	movf	plusw1,w,c
 13744  016358  E109               	bnz	u11941
 13745  01635A  0EF5               	movlw	-11
 13746  01635C  50E3               	movf	plusw1,w,c
 13747  01635E  E106               	bnz	u11941
 13748  016360  0EF6               	movlw	-10
 13749  016362  50E3               	movf	plusw1,w,c
 13750  016364  E103               	bnz	u11941
 13751  016366  0EF7               	movlw	-9
 13752  016368  50E3               	movf	plusw1,w,c
 13753  01636A  A4D8               	btfss	status,2,c
 13754  01636C                     u11941:
 13755  01636C  D6EB               	goto	l12434
 13756                           
 13757                           ;stkvar	_p @ sp[(-20)+18]
 13758  01636E  0EFF               	movlw	-1
 13759  016370  BEE3               	btfsc	plusw1,7,c
 13760  016372  D007               	goto	u11950
 13761  016374  0EFF               	movlw	-1
 13762  016376  50E3               	movf	plusw1,w,c
 13763  016378  E103               	bnz	u11951
 13764  01637A  0EFE               	movlw	-2
 13765  01637C  04E3               	decf	plusw1,w,c
 13766  01637E  B0D8               	btfsc	status,0,c
 13767  016380                     u11951:
 13768  016380  D6E1               	goto	l12434
 13769  016382                     u11950:
 13770                           
 13771                           ;stkvar	_w @ sp[(-20)+16]
 13772  016382  0EFD               	movlw	-3
 13773  016384  BEE3               	btfsc	plusw1,7,c
 13774  016386  D009               	goto	u11970
 13775  016388  0EFD               	movlw	-3
 13776  01638A  50E3               	movf	plusw1,w,c
 13777  01638C  E104               	bnz	u11960
 13778  01638E  0EFC               	movlw	-4
 13779  016390  04E3               	decf	plusw1,w,c
 13780  016392  A0D8               	btfss	status,0,c
 13781  016394  D002               	goto	u11970
 13782  016396                     u11960:
 13783  016396  B23E               	btfsc	_flags^0,1,c
 13784  016398  D6D5               	goto	l12434
 13785  01639A                     u11970:
 13786                           
 13787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13788  01639A  A83E               	btfss	_flags^0,4,c
 13789  01639C  D036               	goto	l12482
 13790                           
 13791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13792                           ;stkvar	_i @ sp[(-20)+14]
 13793  01639E  50E1               	movf	fsr1l,w,c
 13794  0163A0  0FFA               	addlw	-6
 13795  0163A2  6ED9               	movwf	fsr2l,c
 13796  0163A4  50E2               	movf	fsr1h,w,c
 13797  0163A6  6EDA               	movwf	fsr2h,c
 13798  0163A8  0EFF               	movlw	255
 13799  0163AA  22DA               	addwfc	fsr2h,f,c
 13800  0163AC  06DE               	decf	postinc2,f,c
 13801  0163AE  0E00               	movlw	0
 13802  0163B0  5ADD               	subwfb	postdec2,f,c
 13803                           
 13804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13805                           ;stkvar	_x @ sp[(-20)+-11]
 13806                           ;stkvar	_i @ sp[(-20)+14]
 13807  0163B2  0EFA               	movlw	-6
 13808  0163B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 13809  0163BA  0EFB               	movlw	-5
 13810  0163BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 13811  0163C2  0E97               	movlw	low _dbuf
 13812  0163C4  240B               	addwf	(btemp+10)^0,w,c
 13813  0163C6  6ED9               	movwf	fsr2l,c
 13814  0163C8  0E02               	movlw	high _dbuf
 13815  0163CA  200C               	addwfc	(btemp+11)^0,w,c
 13816  0163CC  6EDA               	movwf	fsr2h,c
 13817  0163CE  0EE1               	movlw	-31
 13818  0163D0  006F FF8F FFDF     	movff	plusw1,indf2
 13819                           
 13820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13821                           ;stkvar	_i @ sp[(-20)+14]
 13822  0163D6  50E1               	movf	fsr1l,w,c
 13823  0163D8  0FFA               	addlw	-6
 13824  0163DA  6ED9               	movwf	fsr2l,c
 13825  0163DC  50E2               	movf	fsr1h,w,c
 13826  0163DE  6EDA               	movwf	fsr2h,c
 13827  0163E0  0EFF               	movlw	255
 13828  0163E2  22DA               	addwfc	fsr2h,f,c
 13829  0163E4  06DE               	decf	postinc2,f,c
 13830  0163E6  0E00               	movlw	0
 13831  0163E8  5ADD               	subwfb	postdec2,f,c
 13832                           
 13833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13834                           ;stkvar	_i @ sp[(-20)+14]
 13835  0163EA  0EFA               	movlw	-6
 13836  0163EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13837  0163F2  0EFB               	movlw	-5
 13838  0163F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13839  0163FA  0E97               	movlw	low _dbuf
 13840  0163FC  240B               	addwf	(btemp+10)^0,w,c
 13841  0163FE  6ED9               	movwf	fsr2l,c
 13842  016400  0E02               	movlw	high _dbuf
 13843  016402  200C               	addwfc	(btemp+11)^0,w,c
 13844  016404  6EDA               	movwf	fsr2h,c
 13845  016406  0E30               	movlw	48
 13846  016408  6EDF               	movwf	indf2,c
 13847  01640A                     l12482:
 13848                           
 13849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13850                           ;stkvar	_w @ sp[(-20)+16]
 13851  01640A  0EFC               	movlw	-4
 13852  01640C  006F FF8F FFE6     	movff	plusw1,postinc1
 13853  016412  006F FF8F FFE6     	movff	plusw1,postinc1
 13854                           
 13855                           ;stkvar	_i @ sp[(-22)+14]
 13856  016418  0E97               	movlw	low _dbuf
 13857  01641A  6E0B               	movwf	(btemp+10)^0,c
 13858  01641C  0E02               	movlw	high _dbuf
 13859  01641E  6E0C               	movwf	(btemp+11)^0,c
 13860  016420  0EF8               	movlw	-8
 13861  016422  50E3               	movf	plusw1,w,c
 13862  016424  260B               	addwf	(btemp+10)^0,f,c
 13863  016426  0EF9               	movlw	-7
 13864  016428  50E3               	movf	plusw1,w,c
 13865  01642A  220C               	addwfc	(btemp+11)^0,f,c
 13866  01642C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13867  016432  0060  F033  FFE6   	movff	btemp+11,postinc1
 13868                           
 13869                           ;stkvar	_fp @ sp[(-24)+-2]
 13870  016438  0EE6               	movlw	-26
 13871  01643A  006F FF8F FFE6     	movff	plusw1,postinc1
 13872  016440  006F FF8F FFE6     	movff	plusw1,postinc1
 13873  016446  EC00  F0CE         	call	_pad	;wreg free
 13874                           
 13875                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13876  01644A  0EE1               	movlw	225
 13877  01644C  26E1               	addwf	fsr1l,f,c
 13878  01644E  0EFF               	movlw	255
 13879  016450  22E2               	addwfc	fsr1h,f,c
 13880  016452  0012               	return		;funcret
 13881  016454                     __end_of_xtoa:
 13882                           	opt callstack 0
 13883                           
 13884 ;; *************** function _toupper *****************
 13885 ;; Defined at:
 13886 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13887 ;; Parameters:    Size  Location     Type
 13888 ;;  c               2  [STACK] int 
 13889 ;; Auto vars:     Size  Location     Type
 13890 ;;		None
 13891 ;; Return value:  Size  Location     Type
 13892 ;;                  2  [STACK] int 
 13893 ;; Registers used:
 13894 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13895 ;; Tracked objects:
 13896 ;;		On entry : 0/2
 13897 ;;		On exit  : 0/0
 13898 ;;		Unchanged: 0/0
 13899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13904 ;;Total ram usage:        0 bytes
 13905 ;; Hardware stack levels used:    1
 13906 ;; Hardware stack levels required when called:   16
 13907 ;; This function calls:
 13908 ;;		_islower
 13909 ;; This function is called by:
 13910 ;;		_xtoa
 13911 ;; This function uses a reentrant model
 13912 ;;
 13913                           
 13914                           	psect	text49
 13915  01ACDE                     __ptext49:
 13916                           	opt callstack 0
 13917  01ACDE                     _toupper:
 13918                           	opt callstack 0
 13919                           
 13920                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13921  01ACDE  52E6               	movf	postinc1,f,c
 13922  01ACE0  52E6               	movf	postinc1,f,c
 13923                           
 13924                           ;stkvar	_c @ sp[(-2)+-2]
 13925                           
 13926                           ;incstack = 0
 13927 ;; hardware stack exceeded
 13928  01ACE2  0EFC               	movlw	-4
 13929  01ACE4  50E3               	movf	plusw1,w,c
 13930  01ACE6  0F9F               	addlw	159
 13931  01ACE8  6E0B               	movwf	(btemp+10)^0,c
 13932  01ACEA  0EFD               	movlw	-3
 13933  01ACEC  006F FF8C  F00C    	movff	plusw1,btemp+11
 13934  01ACF2  0EFF               	movlw	255
 13935  01ACF4  220C               	addwfc	(btemp+11)^0,f,c
 13936  01ACF6  500C               	movf	(btemp+11)^0,w,c
 13937  01ACF8  E106               	bnz	u6260
 13938  01ACFA  0E1A               	movlw	26
 13939  01ACFC  5C0B               	subwf	(btemp+10)^0,w,c
 13940  01ACFE  B0D8               	btfsc	status,0,c
 13941  01AD00  D002               	goto	u6260
 13942  01AD02  0E01               	movlw	1
 13943  01AD04  D001               	goto	u6270
 13944  01AD06                     u6260:
 13945  01AD06  0E00               	movlw	0
 13946  01AD08                     u6270:
 13947  01AD08  6E0B               	movwf	(btemp+10)^0,c
 13948  01AD0A  6A0C               	clrf	(btemp+11)^0,c
 13949                           
 13950                           ;stkvar	_toupper$6385 @ sp[(-2)+0]
 13951  01AD0C  0EFE               	movlw	-2
 13952  01AD0E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13953  01AD14  0EFF               	movlw	-1
 13954  01AD16  0060  F033  FFE3   	movff	btemp+11,plusw1
 13955                           
 13956                           ;stkvar	_toupper$6385 @ sp[(-2)+0]
 13957  01AD1C  0EFE               	movlw	-2
 13958  01AD1E  006F FF8C  F001    	movff	plusw1,btemp
 13959  01AD24  0EFF               	movlw	-1
 13960  01AD26  50E3               	movf	plusw1,w,c
 13961  01AD28  1001               	iorwf	btemp^0,w,c
 13962  01AD2A  B4D8               	btfsc	status,2,c
 13963  01AD2C  D00D               	goto	l8118
 13964                           
 13965                           ;stkvar	_c @ sp[(-2)+-2]
 13966  01AD2E  0EFC               	movlw	-4
 13967  01AD30  006F FF8C  F001    	movff	plusw1,btemp
 13968  01AD36  0EFD               	movlw	-3
 13969  01AD38  006F FF8C  F002    	movff	plusw1,btemp+1
 13970  01AD3E  0E5F               	movlw	95
 13971  01AD40  1601               	andwf	btemp^0,f,c
 13972  01AD42  0E00               	movlw	0
 13973  01AD44  1602               	andwf	(btemp+1)^0,f,c
 13974  01AD46  D008               	goto	l3487
 13975  01AD48                     l8118:
 13976                           
 13977                           ;stkvar	_c @ sp[(-2)+-2]
 13978  01AD48  0EFC               	movlw	-4
 13979  01AD4A  006F FF8C  F001    	movff	plusw1,btemp
 13980  01AD50  0EFD               	movlw	-3
 13981  01AD52  006F FF8C  F002    	movff	plusw1,btemp+1
 13982  01AD58                     l3487:
 13983                           
 13984                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13985  01AD58  52E5               	movf	postdec1,f,c
 13986  01AD5A  52E5               	movf	postdec1,f,c
 13987  01AD5C  52E5               	movf	postdec1,f,c
 13988  01AD5E  52E5               	movf	postdec1,f,c
 13989  01AD60  0012               	return		;funcret
 13990  01AD62                     __end_of_toupper:
 13991                           	opt callstack 0
 13992                           
 13993 ;; *************** function _islower *****************
 13994 ;; Defined at:
 13995 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13996 ;; Parameters:    Size  Location     Type
 13997 ;;  c               2  [STACK] int 
 13998 ;; Auto vars:     Size  Location     Type
 13999 ;;		None
 14000 ;; Return value:  Size  Location     Type
 14001 ;;                  2  [STACK] int 
 14002 ;; Registers used:
 14003 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14004 ;; Tracked objects:
 14005 ;;		On entry : 0/0
 14006 ;;		On exit  : 0/0
 14007 ;;		Unchanged: 0/0
 14008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14013 ;;Total ram usage:        0 bytes
 14014 ;; Hardware stack levels used:    1
 14015 ;; Hardware stack levels required when called:   15
 14016 ;; This function calls:
 14017 ;;		Nothing
 14018 ;; This function is called by:
 14019 ;;		_toupper
 14020 ;; This function uses a reentrant model
 14021 ;;
 14022                           
 14023                           	psect	text50
 14024  01BA0A                     __ptext50:
 14025                           	opt callstack 0
 14026  01BA0A                     _islower:
 14027                           	opt callstack 0
 14028                           
 14029                           ;stkvar	_c @ sp[(0)+-2]
 14030                           
 14031                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14032                           ;incstack = 0
 14033 ;; hardware stack exceeded
 14034  01BA0A  0EFE               	movlw	-2
 14035  01BA0C  50E3               	movf	plusw1,w,c
 14036  01BA0E  0F9F               	addlw	159
 14037  01BA10  6E0B               	movwf	(btemp+10)^0,c
 14038  01BA12  0EFF               	movlw	-1
 14039  01BA14  006F FF8C  F00C    	movff	plusw1,btemp+11
 14040  01BA1A  0EFF               	movlw	255
 14041  01BA1C  220C               	addwfc	(btemp+11)^0,f,c
 14042  01BA1E  500C               	movf	(btemp+11)^0,w,c
 14043  01BA20  E106               	bnz	u5900
 14044  01BA22  0E1A               	movlw	26
 14045  01BA24  5C0B               	subwf	(btemp+10)^0,w,c
 14046  01BA26  B0D8               	btfsc	status,0,c
 14047  01BA28  D002               	goto	u5900
 14048  01BA2A  0E01               	movlw	1
 14049  01BA2C  D001               	goto	u5910
 14050  01BA2E                     u5900:
 14051  01BA2E  0E00               	movlw	0
 14052  01BA30                     u5910:
 14053  01BA30  6E01               	movwf	btemp^0,c
 14054  01BA32  6A02               	clrf	(btemp+1)^0,c
 14055                           
 14056                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14057  01BA34  52E5               	movf	postdec1,f,c
 14058  01BA36  52E5               	movf	postdec1,f,c
 14059  01BA38  0012               	return		;funcret
 14060  01BA3A                     __end_of_islower:
 14061                           	opt callstack 0
 14062                           
 14063 ;; *************** function _isalpha *****************
 14064 ;; Defined at:
 14065 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 14066 ;; Parameters:    Size  Location     Type
 14067 ;;  c               2  [STACK] int 
 14068 ;; Auto vars:     Size  Location     Type
 14069 ;;		None
 14070 ;; Return value:  Size  Location     Type
 14071 ;;                  2  [STACK] int 
 14072 ;; Registers used:
 14073 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 14074 ;; Tracked objects:
 14075 ;;		On entry : 0/0
 14076 ;;		On exit  : 0/0
 14077 ;;		Unchanged: 0/0
 14078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14083 ;;Total ram usage:        0 bytes
 14084 ;; Hardware stack levels used:    1
 14085 ;; Hardware stack levels required when called:   15
 14086 ;; This function calls:
 14087 ;;		Nothing
 14088 ;; This function is called by:
 14089 ;;		_xtoa
 14090 ;; This function uses a reentrant model
 14091 ;;
 14092                           
 14093                           	psect	text51
 14094  01B64C                     __ptext51:
 14095                           	opt callstack 0
 14096  01B64C                     _isalpha:
 14097                           	opt callstack 0
 14098                           
 14099                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14100                           ;incstack = 0
 14101 ;; hardware stack exceeded
 14102  01B64C  0E9F               	movlw	159
 14103  01B64E  6E0B               	movwf	(btemp+10)^0,c
 14104  01B650  0EFF               	movlw	255
 14105  01B652  6E0C               	movwf	(btemp+11)^0,c
 14106                           
 14107                           ;stkvar	_c @ sp[(0)+-2]
 14108  01B654  0EFE               	movlw	-2
 14109  01B656  006F FF8C  F009    	movff	plusw1,btemp+8
 14110  01B65C  0EFF               	movlw	-1
 14111  01B65E  006F FF8C  F00A    	movff	plusw1,btemp+9
 14112  01B664  0E20               	movlw	32
 14113  01B666  1209               	iorwf	(btemp+8)^0,f,c
 14114  01B668  0E00               	movlw	0
 14115  01B66A  120A               	iorwf	(btemp+9)^0,f,c
 14116  01B66C  500B               	movf	(btemp+10)^0,w,c
 14117  01B66E  2609               	addwf	(btemp+8)^0,f,c
 14118  01B670  500C               	movf	(btemp+11)^0,w,c
 14119  01B672  220A               	addwfc	(btemp+9)^0,f,c
 14120  01B674  500A               	movf	(btemp+9)^0,w,c
 14121  01B676  E106               	bnz	u6240
 14122  01B678  0E1A               	movlw	26
 14123  01B67A  5C09               	subwf	(btemp+8)^0,w,c
 14124  01B67C  B0D8               	btfsc	status,0,c
 14125  01B67E  D002               	goto	u6240
 14126  01B680  0E01               	movlw	1
 14127  01B682  D001               	goto	u6250
 14128  01B684                     u6240:
 14129  01B684  0E00               	movlw	0
 14130  01B686                     u6250:
 14131  01B686  6E01               	movwf	btemp^0,c
 14132  01B688  6A02               	clrf	(btemp+1)^0,c
 14133                           
 14134                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14135  01B68A  52E5               	movf	postdec1,f,c
 14136  01B68C  52E5               	movf	postdec1,f,c
 14137  01B68E  0012               	return		;funcret
 14138  01B690                     __end_of_isalpha:
 14139                           	opt callstack 0
 14140                           
 14141 ;; *************** function _utoa *****************
 14142 ;; Defined at:
 14143 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14144 ;; Parameters:    Size  Location     Type
 14145 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14146 ;;		 -> f(6), NULL(0), 
 14147 ;;  d               8  [STACK] unsigned long long 
 14148 ;; Auto vars:     Size  Location     Type
 14149 ;;  n               8  [STACK] unsigned long long 
 14150 ;;  i               2  [STACK] int 
 14151 ;;  w               2  [STACK] int 
 14152 ;;  p               2  [STACK] int 
 14153 ;; Return value:  Size  Location     Type
 14154 ;;                  2  [STACK] int 
 14155 ;; Registers used:
 14156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 14157 ;; Tracked objects:
 14158 ;;		On entry : 0/0
 14159 ;;		On exit  : 0/0
 14160 ;;		Unchanged: 0/0
 14161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14166 ;;Total ram usage:        0 bytes
 14167 ;; Hardware stack levels used:    1
 14168 ;; Hardware stack levels required when called:   20
 14169 ;; This function calls:
 14170 ;;		___lodiv
 14171 ;;		___lomod
 14172 ;;		_pad
 14173 ;; This function is called by:
 14174 ;;		_vfpfcnvrt
 14175 ;; This function uses a reentrant model
 14176 ;;
 14177                           
 14178                           	psect	text52
 14179  0167C0                     __ptext52:
 14180                           	opt callstack 0
 14181  0167C0                     _utoa:
 14182                           	opt callstack 0
 14183                           
 14184                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 14185  0167C0  0E0E               	movlw	14
 14186  0167C2  26E1               	addwf	fsr1l,f,c
 14187  0167C4  0E00               	movlw	0
 14188  0167C6  22E2               	addwfc	fsr1h,f,c
 14189                           
 14190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 14191                           
 14192                           ;incstack = 0
 14193 ;; hardware stack exceeded
 14194  0167C8  AE3D               	btfss	(_prec+1)^0,7,c
 14195                           
 14196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 14197  0167CA  923E               	bcf	_flags^0,1,c
 14198                           
 14199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 14200  0167CC  BE3D               	btfsc	(_prec+1)^0,7,c
 14201  0167CE  D005               	goto	u11740
 14202  0167D0  503D               	movf	(_prec+1)^0,w,c
 14203  0167D2  E110               	bnz	l12382
 14204  0167D4  043C               	decf	_prec^0,w,c
 14205  0167D6  B0D8               	btfsc	status,0,c
 14206  0167D8  D00D               	goto	l12382
 14207  0167DA                     u11740:
 14208  0167DA  0E01               	movlw	1
 14209  0167DC  6E0B               	movwf	(btemp+10)^0,c
 14210  0167DE  0E00               	movlw	0
 14211  0167E0  6E0C               	movwf	(btemp+11)^0,c
 14212                           
 14213                           ;stkvar	_p @ sp[(-14)+12]
 14214  0167E2  0EFE               	movlw	-2
 14215  0167E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14216  0167EA  0EFF               	movlw	-1
 14217  0167EC  0060  F033  FFE3   	movff	btemp+11,plusw1
 14218  0167F2  D008               	goto	l2305
 14219  0167F4                     l12382:
 14220                           
 14221                           ;stkvar	_p @ sp[(-14)+12]
 14222  0167F4  0EFE               	movlw	-2
 14223  0167F6  0060  F0F3  FFE3   	movff	_prec,plusw1
 14224  0167FC  0EFF               	movlw	-1
 14225  0167FE  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 14226  016804                     l2305:
 14227                           
 14228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 14229                           ;stkvar	_w @ sp[(-14)+10]
 14230  016804  0EFC               	movlw	-4
 14231  016806  0060  F0EB  FFE3   	movff	_width,plusw1
 14232  01680C  0EFD               	movlw	-3
 14233  01680E  0060  F0EF  FFE3   	movff	_width+1,plusw1
 14234                           
 14235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 14236                           ;stkvar	_d @ sp[(-14)+-10]
 14237  016814  0EE8               	movlw	232
 14238  016816  24E1               	addwf	fsr1l,w,c
 14239  016818  6ED9               	movwf	fsr2l,c
 14240  01681A  0EFF               	movlw	255
 14241  01681C  20E2               	addwfc	fsr1h,w,c
 14242  01681E  6EDA               	movwf	fsr2h,c
 14243                           
 14244                           ;stkvar	_n @ sp[(-14)+0]
 14245  016820  0E08               	movlw	8
 14246  016822  6E01               	movwf	btemp^0,c
 14247  016824  0EF2               	movlw	-14
 14248  016826                     us1175999:
 14249  016826  006F FF7B FFE3     	movff	postinc2,plusw1
 14250  01682C  28E8               	incf	wreg,w,c
 14251  01682E  2E01               	decfsz	btemp^0,f,c
 14252  016830  D7FA               	bra	us1175999
 14253                           
 14254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 14255  016832  0E4F               	movlw	79
 14256  016834  6E0B               	movwf	(btemp+10)^0,c
 14257  016836  0E00               	movlw	0
 14258  016838  6E0C               	movwf	(btemp+11)^0,c
 14259                           
 14260                           ;stkvar	_i @ sp[(-14)+8]
 14261  01683A  0EFA               	movlw	-6
 14262  01683C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14263  016842  0EFB               	movlw	-5
 14264  016844  0060  F033  FFE3   	movff	btemp+11,plusw1
 14265                           
 14266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 14267  01684A  0102               	movlb	2	; () banked
 14268  01684C  6BE6               	clrf	(_dbuf+79)& (0+255),b
 14269                           
 14270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14271  01684E  D0FB               	goto	l12400
 14272  016850                     l12390:
 14273                           
 14274                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 14275                           ;stkvar	_i @ sp[(-14)+8]
 14276  016850  50E1               	movf	fsr1l,w,c
 14277  016852  0FFA               	addlw	-6
 14278  016854  6ED9               	movwf	fsr2l,c
 14279  016856  50E2               	movf	fsr1h,w,c
 14280  016858  6EDA               	movwf	fsr2h,c
 14281  01685A  0EFF               	movlw	255
 14282  01685C  22DA               	addwfc	fsr2h,f,c
 14283  01685E  06DE               	decf	postinc2,f,c
 14284  016860  0E00               	movlw	0
 14285  016862  5ADD               	subwfb	postdec2,f,c
 14286                           
 14287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 14288  016864  0E0A               	movlw	10
 14289  016866  6EE6               	movwf	postinc1,c
 14290  016868  0E00               	movlw	0
 14291  01686A  6EE6               	movwf	postinc1,c
 14292  01686C  0E00               	movlw	0
 14293  01686E  6EE6               	movwf	postinc1,c
 14294  016870  0E00               	movlw	0
 14295  016872  6EE6               	movwf	postinc1,c
 14296  016874  0E00               	movlw	0
 14297  016876  6EE6               	movwf	postinc1,c
 14298  016878  0E00               	movlw	0
 14299  01687A  6EE6               	movwf	postinc1,c
 14300  01687C  0E00               	movlw	0
 14301  01687E  6EE6               	movwf	postinc1,c
 14302  016880  0E00               	movlw	0
 14303  016882  6EE6               	movwf	postinc1,c
 14304                           
 14305                           ;stkvar	_n @ sp[(-22)+0]
 14306  016884  50E1               	movf	fsr1l,w,c
 14307  016886  0FEA               	addlw	-22
 14308  016888  6ED9               	movwf	fsr2l,c
 14309  01688A  50E2               	movf	fsr1h,w,c
 14310  01688C  6EDA               	movwf	fsr2h,c
 14311  01688E  0EFF               	movlw	255
 14312  016890  22DA               	addwfc	fsr2h,f,c
 14313  016892  006F FF7B FFE6     	movff	postinc2,postinc1
 14314  016898  006F FF7B FFE6     	movff	postinc2,postinc1
 14315  01689E  006F FF7B FFE6     	movff	postinc2,postinc1
 14316  0168A4  006F FF7B FFE6     	movff	postinc2,postinc1
 14317  0168AA  006F FF7B FFE6     	movff	postinc2,postinc1
 14318  0168B0  006F FF7B FFE6     	movff	postinc2,postinc1
 14319  0168B6  006F FF7B FFE6     	movff	postinc2,postinc1
 14320  0168BC  006F FF7B FFE6     	movff	postinc2,postinc1
 14321  0168C2  EC8D  F0CA         	call	___lomod	;wreg free
 14322  0168C6  52E5               	movf	postdec1,f,c
 14323  0168C8  006F FF9C  F018    	movff	indf1,btemp+23
 14324  0168CE  52E5               	movf	postdec1,f,c
 14325  0168D0  006F FF9C  F017    	movff	indf1,btemp+22
 14326  0168D6  52E5               	movf	postdec1,f,c
 14327  0168D8  006F FF9C  F016    	movff	indf1,btemp+21
 14328  0168DE  52E5               	movf	postdec1,f,c
 14329  0168E0  006F FF9C  F015    	movff	indf1,btemp+20
 14330  0168E6  52E5               	movf	postdec1,f,c
 14331  0168E8  006F FF9C  F014    	movff	indf1,btemp+19
 14332  0168EE  52E5               	movf	postdec1,f,c
 14333  0168F0  006F FF9C  F013    	movff	indf1,btemp+18
 14334  0168F6  52E5               	movf	postdec1,f,c
 14335  0168F8  006F FF9C  F012    	movff	indf1,btemp+17
 14336  0168FE  52E5               	movf	postdec1,f,c
 14337  016900  006F FF9C  F011    	movff	indf1,btemp+16
 14338  016906  0EF8               	movlw	248
 14339  016908  26E1               	addwf	fsr1l,f,c
 14340  01690A  0EFF               	movlw	255
 14341  01690C  22E2               	addwfc	fsr1h,f,c
 14342  01690E  0E30               	movlw	48
 14343  016910  2611               	addwf	(btemp+16)^0,f,c
 14344                           
 14345                           ;stkvar	_i @ sp[(-14)+8]
 14346  016912  0EFA               	movlw	-6
 14347  016914  006F FF8C  F00B    	movff	plusw1,btemp+10
 14348  01691A  0EFB               	movlw	-5
 14349  01691C  006F FF8C  F00C    	movff	plusw1,btemp+11
 14350  016922  0E97               	movlw	low _dbuf
 14351  016924  240B               	addwf	(btemp+10)^0,w,c
 14352  016926  6ED9               	movwf	fsr2l,c
 14353  016928  0E02               	movlw	high _dbuf
 14354  01692A  200C               	addwfc	(btemp+11)^0,w,c
 14355  01692C  6EDA               	movwf	fsr2h,c
 14356  01692E  0060  F047  FFDF   	movff	btemp+16,indf2
 14357                           
 14358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 14359                           ;stkvar	_p @ sp[(-14)+12]
 14360  016934  50E1               	movf	fsr1l,w,c
 14361  016936  0FFE               	addlw	-2
 14362  016938  6ED9               	movwf	fsr2l,c
 14363  01693A  50E2               	movf	fsr1h,w,c
 14364  01693C  6EDA               	movwf	fsr2h,c
 14365  01693E  0EFF               	movlw	255
 14366  016940  22DA               	addwfc	fsr2h,f,c
 14367  016942  06DE               	decf	postinc2,f,c
 14368  016944  0E00               	movlw	0
 14369  016946  5ADD               	subwfb	postdec2,f,c
 14370                           
 14371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 14372                           ;stkvar	_w @ sp[(-14)+10]
 14373  016948  50E1               	movf	fsr1l,w,c
 14374  01694A  0FFC               	addlw	-4
 14375  01694C  6ED9               	movwf	fsr2l,c
 14376  01694E  50E2               	movf	fsr1h,w,c
 14377  016950  6EDA               	movwf	fsr2h,c
 14378  016952  0EFF               	movlw	255
 14379  016954  22DA               	addwfc	fsr2h,f,c
 14380  016956  06DE               	decf	postinc2,f,c
 14381  016958  0E00               	movlw	0
 14382  01695A  5ADD               	subwfb	postdec2,f,c
 14383                           
 14384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 14385  01695C  0E0A               	movlw	10
 14386  01695E  6EE6               	movwf	postinc1,c
 14387  016960  0E00               	movlw	0
 14388  016962  6EE6               	movwf	postinc1,c
 14389  016964  0E00               	movlw	0
 14390  016966  6EE6               	movwf	postinc1,c
 14391  016968  0E00               	movlw	0
 14392  01696A  6EE6               	movwf	postinc1,c
 14393  01696C  0E00               	movlw	0
 14394  01696E  6EE6               	movwf	postinc1,c
 14395  016970  0E00               	movlw	0
 14396  016972  6EE6               	movwf	postinc1,c
 14397  016974  0E00               	movlw	0
 14398  016976  6EE6               	movwf	postinc1,c
 14399  016978  0E00               	movlw	0
 14400  01697A  6EE6               	movwf	postinc1,c
 14401                           
 14402                           ;stkvar	_n @ sp[(-22)+0]
 14403  01697C  50E1               	movf	fsr1l,w,c
 14404  01697E  0FEA               	addlw	-22
 14405  016980  6ED9               	movwf	fsr2l,c
 14406  016982  50E2               	movf	fsr1h,w,c
 14407  016984  6EDA               	movwf	fsr2h,c
 14408  016986  0EFF               	movlw	255
 14409  016988  22DA               	addwfc	fsr2h,f,c
 14410  01698A  006F FF7B FFE6     	movff	postinc2,postinc1
 14411  016990  006F FF7B FFE6     	movff	postinc2,postinc1
 14412  016996  006F FF7B FFE6     	movff	postinc2,postinc1
 14413  01699C  006F FF7B FFE6     	movff	postinc2,postinc1
 14414  0169A2  006F FF7B FFE6     	movff	postinc2,postinc1
 14415  0169A8  006F FF7B FFE6     	movff	postinc2,postinc1
 14416  0169AE  006F FF7B FFE6     	movff	postinc2,postinc1
 14417  0169B4  006F FF7B FFE6     	movff	postinc2,postinc1
 14418  0169BA  EC67  F0C6         	call	___lodiv	;wreg free
 14419  0169BE  52E5               	movf	postdec1,f,c
 14420  0169C0  006F FF9C  F018    	movff	indf1,btemp+23
 14421  0169C6  52E5               	movf	postdec1,f,c
 14422  0169C8  006F FF9C  F017    	movff	indf1,btemp+22
 14423  0169CE  52E5               	movf	postdec1,f,c
 14424  0169D0  006F FF9C  F016    	movff	indf1,btemp+21
 14425  0169D6  52E5               	movf	postdec1,f,c
 14426  0169D8  006F FF9C  F015    	movff	indf1,btemp+20
 14427  0169DE  52E5               	movf	postdec1,f,c
 14428  0169E0  006F FF9C  F014    	movff	indf1,btemp+19
 14429  0169E6  52E5               	movf	postdec1,f,c
 14430  0169E8  006F FF9C  F013    	movff	indf1,btemp+18
 14431  0169EE  52E5               	movf	postdec1,f,c
 14432  0169F0  006F FF9C  F012    	movff	indf1,btemp+17
 14433  0169F6  52E5               	movf	postdec1,f,c
 14434  0169F8  006F FF9C  F011    	movff	indf1,btemp+16
 14435  0169FE  0EF8               	movlw	248
 14436  016A00  26E1               	addwf	fsr1l,f,c
 14437  016A02  0EFF               	movlw	255
 14438  016A04  22E2               	addwfc	fsr1h,f,c
 14439                           
 14440                           ;stkvar	_n @ sp[(-14)+0]
 14441  016A06  0EF2               	movlw	-14
 14442  016A08  0060  F047  FFE3   	movff	btemp+16,plusw1
 14443  016A0E  0EF3               	movlw	-13
 14444  016A10  0060  F04B  FFE3   	movff	btemp+17,plusw1
 14445  016A16  0EF4               	movlw	-12
 14446  016A18  0060  F04F  FFE3   	movff	btemp+18,plusw1
 14447  016A1E  0EF5               	movlw	-11
 14448  016A20  0060  F053  FFE3   	movff	btemp+19,plusw1
 14449  016A26  0EF6               	movlw	-10
 14450  016A28  0060  F057  FFE3   	movff	btemp+20,plusw1
 14451  016A2E  0EF7               	movlw	-9
 14452  016A30  0060  F05B  FFE3   	movff	btemp+21,plusw1
 14453  016A36  0EF8               	movlw	-8
 14454  016A38  0060  F05F  FFE3   	movff	btemp+22,plusw1
 14455  016A3E  0EF9               	movlw	-7
 14456  016A40  0060  F063  FFE3   	movff	btemp+23,plusw1
 14457  016A46                     l12400:
 14458                           
 14459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 14460                           ;stkvar	_i @ sp[(-14)+8]
 14461  016A46  0EFA               	movlw	-6
 14462  016A48  006F FF8C  F001    	movff	plusw1,btemp
 14463  016A4E  0EFB               	movlw	-5
 14464  016A50  50E3               	movf	plusw1,w,c
 14465  016A52  1001               	iorwf	btemp^0,w,c
 14466  016A54  B4D8               	btfsc	status,2,c
 14467  016A56  D02F               	goto	u11800
 14468                           
 14469                           ;stkvar	_n @ sp[(-14)+0]
 14470  016A58  0EF2               	movlw	-14
 14471  016A5A  50E3               	movf	plusw1,w,c
 14472  016A5C  E115               	bnz	u11771
 14473  016A5E  0EF3               	movlw	-13
 14474  016A60  50E3               	movf	plusw1,w,c
 14475  016A62  E112               	bnz	u11771
 14476  016A64  0EF4               	movlw	-12
 14477  016A66  50E3               	movf	plusw1,w,c
 14478  016A68  E10F               	bnz	u11771
 14479  016A6A  0EF5               	movlw	-11
 14480  016A6C  50E3               	movf	plusw1,w,c
 14481  016A6E  E10C               	bnz	u11771
 14482  016A70  0EF6               	movlw	-10
 14483  016A72  50E3               	movf	plusw1,w,c
 14484  016A74  E109               	bnz	u11771
 14485  016A76  0EF7               	movlw	-9
 14486  016A78  50E3               	movf	plusw1,w,c
 14487  016A7A  E106               	bnz	u11771
 14488  016A7C  0EF8               	movlw	-8
 14489  016A7E  50E3               	movf	plusw1,w,c
 14490  016A80  E103               	bnz	u11771
 14491  016A82  0EF9               	movlw	-7
 14492  016A84  50E3               	movf	plusw1,w,c
 14493  016A86  A4D8               	btfss	status,2,c
 14494  016A88                     u11771:
 14495  016A88  D6E3               	goto	l12390
 14496                           
 14497                           ;stkvar	_p @ sp[(-14)+12]
 14498  016A8A  0EFF               	movlw	-1
 14499  016A8C  BEE3               	btfsc	plusw1,7,c
 14500  016A8E  D007               	goto	u11780
 14501  016A90  0EFF               	movlw	-1
 14502  016A92  50E3               	movf	plusw1,w,c
 14503  016A94  E103               	bnz	u11781
 14504  016A96  0EFE               	movlw	-2
 14505  016A98  04E3               	decf	plusw1,w,c
 14506  016A9A  B0D8               	btfsc	status,0,c
 14507  016A9C                     u11781:
 14508  016A9C  D6D9               	goto	l12390
 14509  016A9E                     u11780:
 14510                           
 14511                           ;stkvar	_w @ sp[(-14)+10]
 14512  016A9E  0EFD               	movlw	-3
 14513  016AA0  BEE3               	btfsc	plusw1,7,c
 14514  016AA2  D009               	goto	u11800
 14515  016AA4  0EFD               	movlw	-3
 14516  016AA6  50E3               	movf	plusw1,w,c
 14517  016AA8  E104               	bnz	u11790
 14518  016AAA  0EFC               	movlw	-4
 14519  016AAC  04E3               	decf	plusw1,w,c
 14520  016AAE  A0D8               	btfss	status,0,c
 14521  016AB0  D002               	goto	u11800
 14522  016AB2                     u11790:
 14523  016AB2  B23E               	btfsc	_flags^0,1,c
 14524  016AB4  D6CD               	goto	l12390
 14525  016AB6                     u11800:
 14526                           
 14527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 14528                           ;stkvar	_w @ sp[(-14)+10]
 14529  016AB6  0EFC               	movlw	-4
 14530  016AB8  006F FF8F FFE6     	movff	plusw1,postinc1
 14531  016ABE  006F FF8F FFE6     	movff	plusw1,postinc1
 14532                           
 14533                           ;stkvar	_i @ sp[(-16)+8]
 14534  016AC4  0E97               	movlw	low _dbuf
 14535  016AC6  6E0B               	movwf	(btemp+10)^0,c
 14536  016AC8  0E02               	movlw	high _dbuf
 14537  016ACA  6E0C               	movwf	(btemp+11)^0,c
 14538  016ACC  0EF8               	movlw	-8
 14539  016ACE  50E3               	movf	plusw1,w,c
 14540  016AD0  260B               	addwf	(btemp+10)^0,f,c
 14541  016AD2  0EF9               	movlw	-7
 14542  016AD4  50E3               	movf	plusw1,w,c
 14543  016AD6  220C               	addwfc	(btemp+11)^0,f,c
 14544  016AD8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14545  016ADE  0060  F033  FFE6   	movff	btemp+11,postinc1
 14546                           
 14547                           ;stkvar	_fp @ sp[(-18)+-2]
 14548  016AE4  0EEC               	movlw	-20
 14549  016AE6  006F FF8F FFE6     	movff	plusw1,postinc1
 14550  016AEC  006F FF8F FFE6     	movff	plusw1,postinc1
 14551  016AF2  EC00  F0CE         	call	_pad	;wreg free
 14552                           
 14553                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 14554  016AF6  0EE8               	movlw	232
 14555  016AF8  26E1               	addwf	fsr1l,f,c
 14556  016AFA  0EFF               	movlw	255
 14557  016AFC  22E2               	addwfc	fsr1h,f,c
 14558  016AFE  0012               	return		;funcret
 14559  016B00                     __end_of_utoa:
 14560                           	opt callstack 0
 14561                           
 14562 ;; *************** function ___lomod *****************
 14563 ;; Defined at:
 14564 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 14565 ;; Parameters:    Size  Location     Type
 14566 ;;  dividend        8  [STACK] unsigned long long 
 14567 ;;  divisor         8  [STACK] unsigned long long 
 14568 ;; Auto vars:     Size  Location     Type
 14569 ;;  counter         1  [STACK] unsigned char 
 14570 ;; Return value:  Size  Location     Type
 14571 ;;                  8  [STACK] unsigned long long 
 14572 ;; Registers used:
 14573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14574 ;; Tracked objects:
 14575 ;;		On entry : 0/2
 14576 ;;		On exit  : 0/0
 14577 ;;		Unchanged: 0/0
 14578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14583 ;;Total ram usage:        0 bytes
 14584 ;; Hardware stack levels used:    1
 14585 ;; Hardware stack levels required when called:   15
 14586 ;; This function calls:
 14587 ;;		Nothing
 14588 ;; This function is called by:
 14589 ;;		_utoa
 14590 ;; This function uses a reentrant model
 14591 ;;
 14592                           
 14593                           	psect	text53
 14594  01951A                     __ptext53:
 14595                           	opt callstack 0
 14596  01951A                     ___lomod:
 14597                           	opt callstack 0
 14598                           
 14599                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14600  01951A  52E6               	movf	postinc1,f,c
 14601                           
 14602                           ;stkvar	_divisor @ sp[(-1)+-16]
 14603                           
 14604                           ;incstack = 0
 14605 ;; hardware stack exceeded
 14606  01951C  0EEF               	movlw	-17
 14607  01951E  50E3               	movf	plusw1,w,c
 14608  019520  E116               	bnz	u7390
 14609  019522  0EF0               	movlw	-16
 14610  019524  50E3               	movf	plusw1,w,c
 14611  019526  E113               	bnz	u7390
 14612  019528  0EF1               	movlw	-15
 14613  01952A  50E3               	movf	plusw1,w,c
 14614  01952C  E110               	bnz	u7390
 14615  01952E  0EF2               	movlw	-14
 14616  019530  50E3               	movf	plusw1,w,c
 14617  019532  E10D               	bnz	u7390
 14618  019534  0EF3               	movlw	-13
 14619  019536  50E3               	movf	plusw1,w,c
 14620  019538  E10A               	bnz	u7390
 14621  01953A  0EF4               	movlw	-12
 14622  01953C  50E3               	movf	plusw1,w,c
 14623  01953E  E107               	bnz	u7390
 14624  019540  0EF5               	movlw	-11
 14625  019542  50E3               	movf	plusw1,w,c
 14626  019544  E104               	bnz	u7390
 14627  019546  0EF6               	movlw	-10
 14628  019548  50E3               	movf	plusw1,w,c
 14629  01954A  B4D8               	btfsc	status,2,c
 14630  01954C  D075               	goto	u7420
 14631  01954E                     u7390:
 14632                           
 14633                           ;stkvar	_counter @ sp[(-1)+0]
 14634  01954E  0EFF               	movlw	-1
 14635  019550  6AE3               	clrf	plusw1,c
 14636  019552  D012               	goto	L14
 14637  019554                     l8728:
 14638                           
 14639                           ;stkvar	_divisor @ sp[(-1)+-16]
 14640  019554  90D8               	bcf	status,0,c
 14641  019556  0EEF               	movlw	-17
 14642  019558  36E3               	rlcf	plusw1,f,c
 14643  01955A  0EF0               	movlw	-16
 14644  01955C  36E3               	rlcf	plusw1,f,c
 14645  01955E  0EF1               	movlw	-15
 14646  019560  36E3               	rlcf	plusw1,f,c
 14647  019562  0EF2               	movlw	-14
 14648  019564  36E3               	rlcf	plusw1,f,c
 14649  019566  0EF3               	movlw	-13
 14650  019568  36E3               	rlcf	plusw1,f,c
 14651  01956A  0EF4               	movlw	-12
 14652  01956C  36E3               	rlcf	plusw1,f,c
 14653  01956E  0EF5               	movlw	-11
 14654  019570  36E3               	rlcf	plusw1,f,c
 14655  019572  0EF6               	movlw	-10
 14656  019574  36E3               	rlcf	plusw1,f,c
 14657                           
 14658                           ;stkvar	_counter @ sp[(-1)+0]
 14659  019576  0EFF               	movlw	-1
 14660  019578                     L14:
 14661  019578  2AE3               	incf	plusw1,f,c
 14662                           
 14663                           ;stkvar	_divisor @ sp[(-1)+-16]
 14664  01957A  0EF6               	movlw	-10
 14665  01957C  AEE3               	btfss	plusw1,7,c
 14666  01957E  D7EA               	goto	l8728
 14667  019580                     u7400:
 14668                           
 14669                           ;stkvar	_divisor @ sp[(-1)+-16]
 14670                           ;stkvar	_dividend @ sp[(-1)+-8]
 14671  019580  50E1               	movf	fsr1l,w,c
 14672  019582  0FF7               	addlw	-9
 14673  019584  6ED9               	movwf	fsr2l,c
 14674  019586  50E2               	movf	fsr1h,w,c
 14675  019588  6EDA               	movwf	fsr2h,c
 14676  01958A  0EFF               	movlw	255
 14677  01958C  22DA               	addwfc	fsr2h,f,c
 14678  01958E  0EEF               	movlw	-17
 14679  019590  50E3               	movf	plusw1,w,c
 14680  019592  5CDE               	subwf	postinc2,w,c
 14681  019594  0EF0               	movlw	-16
 14682  019596  50E3               	movf	plusw1,w,c
 14683  019598  58DE               	subwfb	postinc2,w,c
 14684  01959A  0EF1               	movlw	-15
 14685  01959C  50E3               	movf	plusw1,w,c
 14686  01959E  58DE               	subwfb	postinc2,w,c
 14687  0195A0  0EF2               	movlw	-14
 14688  0195A2  50E3               	movf	plusw1,w,c
 14689  0195A4  58DE               	subwfb	postinc2,w,c
 14690  0195A6  0EF3               	movlw	-13
 14691  0195A8  50E3               	movf	plusw1,w,c
 14692  0195AA  58DE               	subwfb	postinc2,w,c
 14693  0195AC  0EF4               	movlw	-12
 14694  0195AE  50E3               	movf	plusw1,w,c
 14695  0195B0  58DE               	subwfb	postinc2,w,c
 14696  0195B2  0EF5               	movlw	-11
 14697  0195B4  50E3               	movf	plusw1,w,c
 14698  0195B6  58DE               	subwfb	postinc2,w,c
 14699  0195B8  0EF6               	movlw	-10
 14700  0195BA  50E3               	movf	plusw1,w,c
 14701  0195BC  58DE               	subwfb	postinc2,w,c
 14702  0195BE  A0D8               	btfss	status,0,c
 14703  0195C0  D01F               	goto	l8736
 14704                           
 14705                           ;stkvar	_divisor @ sp[(-1)+-16]
 14706                           ;stkvar	_dividend @ sp[(-1)+-8]
 14707  0195C2  50E1               	movf	fsr1l,w,c
 14708  0195C4  0FF7               	addlw	-9
 14709  0195C6  6ED9               	movwf	fsr2l,c
 14710  0195C8  50E2               	movf	fsr1h,w,c
 14711  0195CA  6EDA               	movwf	fsr2h,c
 14712  0195CC  0EFF               	movlw	255
 14713  0195CE  22DA               	addwfc	fsr2h,f,c
 14714  0195D0  0EEF               	movlw	-17
 14715  0195D2  50E3               	movf	plusw1,w,c
 14716  0195D4  5EDE               	subwf	postinc2,f,c
 14717  0195D6  0EF0               	movlw	-16
 14718  0195D8  50E3               	movf	plusw1,w,c
 14719  0195DA  5ADE               	subwfb	postinc2,f,c
 14720  0195DC  0EF1               	movlw	-15
 14721  0195DE  50E3               	movf	plusw1,w,c
 14722  0195E0  5ADE               	subwfb	postinc2,f,c
 14723  0195E2  0EF2               	movlw	-14
 14724  0195E4  50E3               	movf	plusw1,w,c
 14725  0195E6  5ADE               	subwfb	postinc2,f,c
 14726  0195E8  0EF3               	movlw	-13
 14727  0195EA  50E3               	movf	plusw1,w,c
 14728  0195EC  5ADE               	subwfb	postinc2,f,c
 14729  0195EE  0EF4               	movlw	-12
 14730  0195F0  50E3               	movf	plusw1,w,c
 14731  0195F2  5ADE               	subwfb	postinc2,f,c
 14732  0195F4  0EF5               	movlw	-11
 14733  0195F6  50E3               	movf	plusw1,w,c
 14734  0195F8  5ADE               	subwfb	postinc2,f,c
 14735  0195FA  0EF6               	movlw	-10
 14736  0195FC  50E3               	movf	plusw1,w,c
 14737  0195FE  5ADE               	subwfb	postinc2,f,c
 14738  019600                     l8736:
 14739                           
 14740                           ;stkvar	_divisor @ sp[(-1)+-16]
 14741  019600  90D8               	bcf	status,0,c
 14742  019602  0EF6               	movlw	-10
 14743  019604  32E3               	rrcf	plusw1,f,c
 14744  019606  0EF5               	movlw	-11
 14745  019608  32E3               	rrcf	plusw1,f,c
 14746  01960A  0EF4               	movlw	-12
 14747  01960C  32E3               	rrcf	plusw1,f,c
 14748  01960E  0EF3               	movlw	-13
 14749  019610  32E3               	rrcf	plusw1,f,c
 14750  019612  0EF2               	movlw	-14
 14751  019614  32E3               	rrcf	plusw1,f,c
 14752  019616  0EF1               	movlw	-15
 14753  019618  32E3               	rrcf	plusw1,f,c
 14754  01961A  0EF0               	movlw	-16
 14755  01961C  32E3               	rrcf	plusw1,f,c
 14756  01961E  0EEF               	movlw	-17
 14757  019620  32E3               	rrcf	plusw1,f,c
 14758                           
 14759                           ;stkvar	_counter @ sp[(-1)+0]
 14760  019622  0EFF               	movlw	-1
 14761  019624  50E3               	movf	plusw1,w,c
 14762  019626  6E01               	movwf	btemp^0,c
 14763  019628  0E01               	movlw	1
 14764  01962A  5E01               	subwf	btemp^0,f,c
 14765  01962C  0EFF               	movlw	-1
 14766  01962E  0060  F007  FFE3   	movff	btemp,plusw1
 14767  019634  A4D8               	btfss	status,2,c
 14768  019636  D7A4               	goto	u7400
 14769  019638                     u7420:
 14770                           
 14771                           ;stkvar	_dividend @ sp[(-1)+-8]
 14772  019638  0EF7               	movlw	247
 14773  01963A  24E1               	addwf	fsr1l,w,c
 14774  01963C  6ED9               	movwf	fsr2l,c
 14775  01963E  0EFF               	movlw	255
 14776  019640  20E2               	addwfc	fsr1h,w,c
 14777  019642  6EDA               	movwf	fsr2h,c
 14778                           
 14779                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14780  019644  0E08               	movlw	8
 14781  019646  6E01               	movwf	btemp^0,c
 14782  019648  0EF7               	movlw	-9
 14783  01964A                     us743999:
 14784  01964A  006F FF7B FFE3     	movff	postinc2,plusw1
 14785  019650  28E8               	incf	wreg,w,c
 14786  019652  2E01               	decfsz	btemp^0,f,c
 14787  019654  D7FA               	bra	us743999
 14788                           
 14789                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14790  019656  52E5               	movf	postdec1,f,c
 14791  019658  0012               	return		;funcret
 14792  01965A                     __end_of___lomod:
 14793                           	opt callstack 0
 14794                           
 14795 ;; *************** function ___lodiv *****************
 14796 ;; Defined at:
 14797 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14798 ;; Parameters:    Size  Location     Type
 14799 ;;  dividend        8  [STACK] unsigned long long 
 14800 ;;  divisor         8  [STACK] unsigned long long 
 14801 ;; Auto vars:     Size  Location     Type
 14802 ;;  quotient        8  [STACK] unsigned long long 
 14803 ;;  counter         1  [STACK] unsigned char 
 14804 ;; Return value:  Size  Location     Type
 14805 ;;                  8  [STACK] unsigned long long 
 14806 ;; Registers used:
 14807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14808 ;; Tracked objects:
 14809 ;;		On entry : 0/2
 14810 ;;		On exit  : 0/0
 14811 ;;		Unchanged: 0/0
 14812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14817 ;;Total ram usage:        0 bytes
 14818 ;; Hardware stack levels used:    1
 14819 ;; Hardware stack levels required when called:   15
 14820 ;; This function calls:
 14821 ;;		Nothing
 14822 ;; This function is called by:
 14823 ;;		_utoa
 14824 ;; This function uses a reentrant model
 14825 ;;
 14826                           
 14827                           	psect	text54
 14828  018CCE                     __ptext54:
 14829                           	opt callstack 0
 14830  018CCE                     ___lodiv:
 14831                           	opt callstack 0
 14832                           
 14833                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14834  018CCE  0E09               	movlw	9
 14835  018CD0  26E1               	addwf	fsr1l,f,c
 14836  018CD2  0E00               	movlw	0
 14837  018CD4  22E2               	addwfc	fsr1h,f,c
 14838                           
 14839                           ;stkvar	_quotient @ sp[(-9)+0]
 14840                           
 14841                           ;incstack = 0
 14842 ;; hardware stack exceeded
 14843  018CD6  0E07               	movlw	7
 14844  018CD8  6E01               	movwf	btemp^0,c
 14845  018CDA  0EF7               	movlw	-9
 14846  018CDC                     u7331:
 14847  018CDC  6AE3               	clrf	plusw1,c
 14848  018CDE  2AE8               	incf	wreg,f,c
 14849  018CE0  0601               	decf	btemp^0,f,c
 14850  018CE2  E2FC               	bc	u7331
 14851                           
 14852                           ;stkvar	_divisor @ sp[(-9)+-16]
 14853  018CE4  0EE7               	movlw	-25
 14854  018CE6  50E3               	movf	plusw1,w,c
 14855  018CE8  E116               	bnz	u7340
 14856  018CEA  0EE8               	movlw	-24
 14857  018CEC  50E3               	movf	plusw1,w,c
 14858  018CEE  E113               	bnz	u7340
 14859  018CF0  0EE9               	movlw	-23
 14860  018CF2  50E3               	movf	plusw1,w,c
 14861  018CF4  E110               	bnz	u7340
 14862  018CF6  0EEA               	movlw	-22
 14863  018CF8  50E3               	movf	plusw1,w,c
 14864  018CFA  E10D               	bnz	u7340
 14865  018CFC  0EEB               	movlw	-21
 14866  018CFE  50E3               	movf	plusw1,w,c
 14867  018D00  E10A               	bnz	u7340
 14868  018D02  0EEC               	movlw	-20
 14869  018D04  50E3               	movf	plusw1,w,c
 14870  018D06  E107               	bnz	u7340
 14871  018D08  0EED               	movlw	-19
 14872  018D0A  50E3               	movf	plusw1,w,c
 14873  018D0C  E104               	bnz	u7340
 14874  018D0E  0EEE               	movlw	-18
 14875  018D10  50E3               	movf	plusw1,w,c
 14876  018D12  B4D8               	btfsc	status,2,c
 14877  018D14  D088               	goto	u7370
 14878  018D16                     u7340:
 14879                           
 14880                           ;stkvar	_counter @ sp[(-9)+8]
 14881  018D16  0EFF               	movlw	-1
 14882  018D18  6AE3               	clrf	plusw1,c
 14883  018D1A  D012               	goto	L15
 14884  018D1C                     l8704:
 14885                           
 14886                           ;stkvar	_divisor @ sp[(-9)+-16]
 14887  018D1C  90D8               	bcf	status,0,c
 14888  018D1E  0EE7               	movlw	-25
 14889  018D20  36E3               	rlcf	plusw1,f,c
 14890  018D22  0EE8               	movlw	-24
 14891  018D24  36E3               	rlcf	plusw1,f,c
 14892  018D26  0EE9               	movlw	-23
 14893  018D28  36E3               	rlcf	plusw1,f,c
 14894  018D2A  0EEA               	movlw	-22
 14895  018D2C  36E3               	rlcf	plusw1,f,c
 14896  018D2E  0EEB               	movlw	-21
 14897  018D30  36E3               	rlcf	plusw1,f,c
 14898  018D32  0EEC               	movlw	-20
 14899  018D34  36E3               	rlcf	plusw1,f,c
 14900  018D36  0EED               	movlw	-19
 14901  018D38  36E3               	rlcf	plusw1,f,c
 14902  018D3A  0EEE               	movlw	-18
 14903  018D3C  36E3               	rlcf	plusw1,f,c
 14904                           
 14905                           ;stkvar	_counter @ sp[(-9)+8]
 14906  018D3E  0EFF               	movlw	-1
 14907  018D40                     L15:
 14908  018D40  2AE3               	incf	plusw1,f,c
 14909                           
 14910                           ;stkvar	_divisor @ sp[(-9)+-16]
 14911  018D42  0EEE               	movlw	-18
 14912  018D44  AEE3               	btfss	plusw1,7,c
 14913  018D46  D7EA               	goto	l8704
 14914  018D48                     u7350:
 14915                           
 14916                           ;stkvar	_quotient @ sp[(-9)+0]
 14917  018D48  90D8               	bcf	status,0,c
 14918  018D4A  0EF7               	movlw	-9
 14919  018D4C  36E3               	rlcf	plusw1,f,c
 14920  018D4E  0EF8               	movlw	-8
 14921  018D50  36E3               	rlcf	plusw1,f,c
 14922  018D52  0EF9               	movlw	-7
 14923  018D54  36E3               	rlcf	plusw1,f,c
 14924  018D56  0EFA               	movlw	-6
 14925  018D58  36E3               	rlcf	plusw1,f,c
 14926  018D5A  0EFB               	movlw	-5
 14927  018D5C  36E3               	rlcf	plusw1,f,c
 14928  018D5E  0EFC               	movlw	-4
 14929  018D60  36E3               	rlcf	plusw1,f,c
 14930  018D62  0EFD               	movlw	-3
 14931  018D64  36E3               	rlcf	plusw1,f,c
 14932  018D66  0EFE               	movlw	-2
 14933  018D68  36E3               	rlcf	plusw1,f,c
 14934                           
 14935                           ;stkvar	_divisor @ sp[(-9)+-16]
 14936                           ;stkvar	_dividend @ sp[(-9)+-8]
 14937  018D6A  50E1               	movf	fsr1l,w,c
 14938  018D6C  0FEF               	addlw	-17
 14939  018D6E  6ED9               	movwf	fsr2l,c
 14940  018D70  50E2               	movf	fsr1h,w,c
 14941  018D72  6EDA               	movwf	fsr2h,c
 14942  018D74  0EFF               	movlw	255
 14943  018D76  22DA               	addwfc	fsr2h,f,c
 14944  018D78  0EE7               	movlw	-25
 14945  018D7A  50E3               	movf	plusw1,w,c
 14946  018D7C  5CDE               	subwf	postinc2,w,c
 14947  018D7E  0EE8               	movlw	-24
 14948  018D80  50E3               	movf	plusw1,w,c
 14949  018D82  58DE               	subwfb	postinc2,w,c
 14950  018D84  0EE9               	movlw	-23
 14951  018D86  50E3               	movf	plusw1,w,c
 14952  018D88  58DE               	subwfb	postinc2,w,c
 14953  018D8A  0EEA               	movlw	-22
 14954  018D8C  50E3               	movf	plusw1,w,c
 14955  018D8E  58DE               	subwfb	postinc2,w,c
 14956  018D90  0EEB               	movlw	-21
 14957  018D92  50E3               	movf	plusw1,w,c
 14958  018D94  58DE               	subwfb	postinc2,w,c
 14959  018D96  0EEC               	movlw	-20
 14960  018D98  50E3               	movf	plusw1,w,c
 14961  018D9A  58DE               	subwfb	postinc2,w,c
 14962  018D9C  0EED               	movlw	-19
 14963  018D9E  50E3               	movf	plusw1,w,c
 14964  018DA0  58DE               	subwfb	postinc2,w,c
 14965  018DA2  0EEE               	movlw	-18
 14966  018DA4  50E3               	movf	plusw1,w,c
 14967  018DA6  58DE               	subwfb	postinc2,w,c
 14968  018DA8  A0D8               	btfss	status,0,c
 14969  018DAA  D021               	goto	l8716
 14970                           
 14971                           ;stkvar	_divisor @ sp[(-9)+-16]
 14972                           ;stkvar	_dividend @ sp[(-9)+-8]
 14973  018DAC  50E1               	movf	fsr1l,w,c
 14974  018DAE  0FEF               	addlw	-17
 14975  018DB0  6ED9               	movwf	fsr2l,c
 14976  018DB2  50E2               	movf	fsr1h,w,c
 14977  018DB4  6EDA               	movwf	fsr2h,c
 14978  018DB6  0EFF               	movlw	255
 14979  018DB8  22DA               	addwfc	fsr2h,f,c
 14980  018DBA  0EE7               	movlw	-25
 14981  018DBC  50E3               	movf	plusw1,w,c
 14982  018DBE  5EDE               	subwf	postinc2,f,c
 14983  018DC0  0EE8               	movlw	-24
 14984  018DC2  50E3               	movf	plusw1,w,c
 14985  018DC4  5ADE               	subwfb	postinc2,f,c
 14986  018DC6  0EE9               	movlw	-23
 14987  018DC8  50E3               	movf	plusw1,w,c
 14988  018DCA  5ADE               	subwfb	postinc2,f,c
 14989  018DCC  0EEA               	movlw	-22
 14990  018DCE  50E3               	movf	plusw1,w,c
 14991  018DD0  5ADE               	subwfb	postinc2,f,c
 14992  018DD2  0EEB               	movlw	-21
 14993  018DD4  50E3               	movf	plusw1,w,c
 14994  018DD6  5ADE               	subwfb	postinc2,f,c
 14995  018DD8  0EEC               	movlw	-20
 14996  018DDA  50E3               	movf	plusw1,w,c
 14997  018DDC  5ADE               	subwfb	postinc2,f,c
 14998  018DDE  0EED               	movlw	-19
 14999  018DE0  50E3               	movf	plusw1,w,c
 15000  018DE2  5ADE               	subwfb	postinc2,f,c
 15001  018DE4  0EEE               	movlw	-18
 15002  018DE6  50E3               	movf	plusw1,w,c
 15003  018DE8  5ADE               	subwfb	postinc2,f,c
 15004                           
 15005                           ;stkvar	_quotient @ sp[(-9)+0]
 15006  018DEA  0EF7               	movlw	-9
 15007  018DEC  80E3               	bsf	plusw1,0,c
 15008  018DEE                     l8716:
 15009                           
 15010                           ;stkvar	_divisor @ sp[(-9)+-16]
 15011  018DEE  90D8               	bcf	status,0,c
 15012  018DF0  0EEE               	movlw	-18
 15013  018DF2  32E3               	rrcf	plusw1,f,c
 15014  018DF4  0EED               	movlw	-19
 15015  018DF6  32E3               	rrcf	plusw1,f,c
 15016  018DF8  0EEC               	movlw	-20
 15017  018DFA  32E3               	rrcf	plusw1,f,c
 15018  018DFC  0EEB               	movlw	-21
 15019  018DFE  32E3               	rrcf	plusw1,f,c
 15020  018E00  0EEA               	movlw	-22
 15021  018E02  32E3               	rrcf	plusw1,f,c
 15022  018E04  0EE9               	movlw	-23
 15023  018E06  32E3               	rrcf	plusw1,f,c
 15024  018E08  0EE8               	movlw	-24
 15025  018E0A  32E3               	rrcf	plusw1,f,c
 15026  018E0C  0EE7               	movlw	-25
 15027  018E0E  32E3               	rrcf	plusw1,f,c
 15028                           
 15029                           ;stkvar	_counter @ sp[(-9)+8]
 15030  018E10  0EFF               	movlw	-1
 15031  018E12  50E3               	movf	plusw1,w,c
 15032  018E14  6E01               	movwf	btemp^0,c
 15033  018E16  0E01               	movlw	1
 15034  018E18  5E01               	subwf	btemp^0,f,c
 15035  018E1A  0EFF               	movlw	-1
 15036  018E1C  0060  F007  FFE3   	movff	btemp,plusw1
 15037  018E22  A4D8               	btfss	status,2,c
 15038  018E24  D791               	goto	u7350
 15039  018E26                     u7370:
 15040                           
 15041                           ;stkvar	_quotient @ sp[(-9)+0]
 15042  018E26  0EF7               	movlw	247
 15043  018E28  24E1               	addwf	fsr1l,w,c
 15044  018E2A  6ED9               	movwf	fsr2l,c
 15045  018E2C  0EFF               	movlw	255
 15046  018E2E  20E2               	addwfc	fsr1h,w,c
 15047  018E30  6EDA               	movwf	fsr2h,c
 15048                           
 15049                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 15050  018E32  0E08               	movlw	8
 15051  018E34  6E01               	movwf	btemp^0,c
 15052  018E36  0EEF               	movlw	-17
 15053  018E38                     us738999:
 15054  018E38  006F FF7B FFE3     	movff	postinc2,plusw1
 15055  018E3E  28E8               	incf	wreg,w,c
 15056  018E40  2E01               	decfsz	btemp^0,f,c
 15057  018E42  D7FA               	bra	us738999
 15058                           
 15059                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 15060  018E44  0EF7               	movlw	247
 15061  018E46  26E1               	addwf	fsr1l,f,c
 15062  018E48  0EFF               	movlw	255
 15063  018E4A  22E2               	addwfc	fsr1h,f,c
 15064  018E4C  0012               	return		;funcret
 15065  018E4E                     __end_of___lodiv:
 15066                           	opt callstack 0
 15067                           
 15068 ;; *************** function _strncmp *****************
 15069 ;; Defined at:
 15070 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 15071 ;; Parameters:    Size  Location     Type
 15072 ;;  _l              2  [STACK] PTR const unsigned char 
 15073 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15074 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15075 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15076 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15077 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15078 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 15079 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 15080 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 15081 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 15082 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 15083 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 15084 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15085 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15086 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15087 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15088 ;;		 -> STR_1(21), 
 15089 ;;  _r              2  [STACK] PTR const unsigned char 
 15090 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15091 ;;		 -> STR_79(3), STR_75(3), 
 15092 ;;  n               2  [STACK] unsigned int 
 15093 ;; Auto vars:     Size  Location     Type
 15094 ;;  r               2  [STACK] PTR const unsigned char 
 15095 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_84(3), 
 15096 ;;		 -> STR_79(3), STR_75(3), 
 15097 ;;  l               2  [STACK] PTR const unsigned char 
 15098 ;;		 -> ct(3), STR_64(121), STR_62(3), STR_61(3), 
 15099 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 15100 ;;		 -> STR_56(19), STR_55(19), STR_54(24), STR_53(15), 
 15101 ;;		 -> STR_52(15), STR_51(15), STR_50(10), STR_49(10), 
 15102 ;;		 -> STR_48(19), STR_47(19), STR_44(3), STR_43(3), 
 15103 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 15104 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 15105 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 15106 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 15107 ;;		 -> STR_26(19), STR_25(20), STR_24(19), STR_23(19), 
 15108 ;;		 -> STR_22(20), STR_21(17), STR_20(16), STR_19(16), 
 15109 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 15110 ;;		 -> STR_14(21), STR_13(21), STR_12(21), STR_11(22), 
 15111 ;;		 -> STR_10(22), STR_9(26), STR_8(21), STR_7(21), 
 15112 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 15113 ;;		 -> STR_1(21), 
 15114 ;; Return value:  Size  Location     Type
 15115 ;;                  2  [STACK] int 
 15116 ;; Registers used:
 15117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 15118 ;; Tracked objects:
 15119 ;;		On entry : 0/0
 15120 ;;		On exit  : 0/0
 15121 ;;		Unchanged: 0/0
 15122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15127 ;;Total ram usage:        0 bytes
 15128 ;; Hardware stack levels used:    1
 15129 ;; Hardware stack levels required when called:   15
 15130 ;; This function calls:
 15131 ;;		Nothing
 15132 ;; This function is called by:
 15133 ;;		_vfpfcnvrt
 15134 ;; This function uses a reentrant model
 15135 ;;
 15136                           
 15137                           	psect	text55
 15138  018020                     __ptext55:
 15139                           	opt callstack 0
 15140  018020                     _strncmp:
 15141                           	opt callstack 0
 15142                           
 15143                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15144  018020  52E6               	movf	postinc1,f,c
 15145  018022  52E6               	movf	postinc1,f,c
 15146  018024  52E6               	movf	postinc1,f,c
 15147  018026  52E6               	movf	postinc1,f,c
 15148                           
 15149                           ;stkvar	__l @ sp[(-4)+-2]
 15150                           
 15151                           ;incstack = 0
 15152 ;; hardware stack exceeded
 15153  018028  0EFA               	movlw	-6
 15154  01802A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15155  018030  0EFB               	movlw	-5
 15156  018032  006F FF8C  F00C    	movff	plusw1,btemp+11
 15157                           
 15158                           ;stkvar	_l @ sp[(-4)+2]
 15159  018038  0EFF               	movlw	-1
 15160  01803A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15161  018040  0EFE               	movlw	-2
 15162  018042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15163                           
 15164                           ;stkvar	__r @ sp[(-4)+-4]
 15165  018048  0EF8               	movlw	-8
 15166  01804A  006F FF8C  F00B    	movff	plusw1,btemp+10
 15167  018050  0EF9               	movlw	-7
 15168  018052  006F FF8C  F00C    	movff	plusw1,btemp+11
 15169                           
 15170                           ;stkvar	_r @ sp[(-4)+0]
 15171  018058  0EFD               	movlw	-3
 15172  01805A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15173  018060  0EFC               	movlw	-4
 15174  018062  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15175                           
 15176                           ;stkvar	_n @ sp[(-4)+-6]
 15177  018068  0EF6               	movlw	-10
 15178  01806A  006F FF8C  F001    	movff	plusw1,btemp
 15179  018070  0E01               	movlw	1
 15180  018072  5E01               	subwf	btemp^0,f,c
 15181  018074  0EF6               	movlw	-10
 15182  018076  0060  F007  FFE3   	movff	btemp,plusw1
 15183  01807C  0EF7               	movlw	-9
 15184  01807E  006F FF8C  F001    	movff	plusw1,btemp
 15185  018084  0E00               	movlw	0
 15186  018086  5A01               	subwfb	btemp^0,f,c
 15187  018088  0EF7               	movlw	-9
 15188  01808A  0060  F007  FFE3   	movff	btemp,plusw1
 15189  018090  0EF6               	movlw	-10
 15190  018092  28E3               	incf	plusw1,w,c
 15191  018094  E13F               	bnz	l9386
 15192  018096  0EF7               	movlw	-9
 15193  018098  28E3               	incf	plusw1,w,c
 15194  01809A  A4D8               	btfss	status,2,c
 15195  01809C  D03B               	goto	l9386
 15196  01809E  0E00               	movlw	0
 15197  0180A0  6E01               	movwf	btemp^0,c
 15198  0180A2  0E00               	movlw	0
 15199  0180A4  6E02               	movwf	(btemp+1)^0,c
 15200  0180A6  D0C7               	goto	l3459
 15201  0180A8                     l9384:
 15202                           
 15203                           ;stkvar	_l @ sp[(-4)+2]
 15204  0180A8  0EFE               	movlw	-2
 15205  0180AA  50E3               	movf	plusw1,w,c
 15206  0180AC  0F01               	addlw	1
 15207  0180AE  6E01               	movwf	btemp^0,c
 15208  0180B0  0EFE               	movlw	-2
 15209  0180B2  0060  F007  FFE3   	movff	btemp,plusw1
 15210  0180B8  6A01               	clrf	btemp^0,c
 15211  0180BA  0EFF               	movlw	-1
 15212  0180BC  50E3               	movf	plusw1,w,c
 15213  0180BE  2001               	addwfc	btemp^0,w,c
 15214  0180C0  6E01               	movwf	btemp^0,c
 15215  0180C2  0EFF               	movlw	-1
 15216  0180C4  0060  F007  FFE3   	movff	btemp,plusw1
 15217                           
 15218                           ;stkvar	_r @ sp[(-4)+0]
 15219  0180CA  0EFC               	movlw	-4
 15220  0180CC  50E3               	movf	plusw1,w,c
 15221  0180CE  0F01               	addlw	1
 15222  0180D0  6E01               	movwf	btemp^0,c
 15223  0180D2  0EFC               	movlw	-4
 15224  0180D4  0060  F007  FFE3   	movff	btemp,plusw1
 15225  0180DA  6A01               	clrf	btemp^0,c
 15226  0180DC  0EFD               	movlw	-3
 15227  0180DE  50E3               	movf	plusw1,w,c
 15228  0180E0  2001               	addwfc	btemp^0,w,c
 15229  0180E2  6E01               	movwf	btemp^0,c
 15230  0180E4  0EFD               	movlw	-3
 15231  0180E6  0060  F007  FFE3   	movff	btemp,plusw1
 15232                           
 15233                           ;stkvar	_n @ sp[(-4)+-6]
 15234  0180EC  0EF6               	movlw	-10
 15235  0180EE  006F FF8C  F001    	movff	plusw1,btemp
 15236  0180F4  0E01               	movlw	1
 15237  0180F6  5E01               	subwf	btemp^0,f,c
 15238  0180F8  0EF6               	movlw	-10
 15239  0180FA  0060  F007  FFE3   	movff	btemp,plusw1
 15240  018100  0EF7               	movlw	-9
 15241  018102  006F FF8C  F001    	movff	plusw1,btemp
 15242  018108  0E00               	movlw	0
 15243  01810A  5A01               	subwfb	btemp^0,f,c
 15244  01810C  0EF7               	movlw	-9
 15245  01810E  0060  F007  FFE3   	movff	btemp,plusw1
 15246  018114                     l9386:
 15247                           
 15248                           ;stkvar	_l @ sp[(-4)+2]
 15249  018114  0EFE               	movlw	-2
 15250  018116  006F FF8F FFF6     	movff	plusw1,tblptrl
 15251  01811C  0EFF               	movlw	-1
 15252  01811E  006F FF8F FFF7     	movff	plusw1,tblptrh
 15253  018124  0E00               	movlw	low (__mediumconst shr (0+16))
 15254  018126  6EF8               	movwf	tblptru,c
 15255  018128  0E1F               	movlw	(high __ramtop+-1)
 15256  01812A  64F7               	cpfsgt	tblptrh,c
 15257  01812C  D003               	bra	u8627
 15258  01812E  0008               	tblrd		*
 15259  018130  50F5               	movf	tablat,w,c
 15260  018132  D007               	bra	u8620
 15261  018134                     u8627:
 15262  018134  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15263  01813A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15264  018140  50EF               	movf	indf0,w,c
 15265  018142                     u8620:
 15266  018142  0900               	iorlw	0
 15267  018144  B4D8               	btfsc	status,2,c
 15268  018146  D04A               	goto	u8660
 15269                           
 15270                           ;stkvar	_r @ sp[(-4)+0]
 15271  018148  50E1               	movf	fsr1l,w,c
 15272  01814A  0FFC               	addlw	-4
 15273  01814C  6ED9               	movwf	fsr2l,c
 15274  01814E  50E2               	movf	fsr1h,w,c
 15275  018150  6EDA               	movwf	fsr2h,c
 15276  018152  0EFF               	movlw	255
 15277  018154  22DA               	addwfc	fsr2h,f,c
 15278  018156  006F FF7B FFF6     	movff	postinc2,tblptrl
 15279  01815C  006F FF77 FFF7     	movff	postdec2,tblptrh
 15280  018162                     	if	0	;tblptru may be non-zero
 15281  018162                     	endif
 15282  018162                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15283  018162  0E00               	movlw	low (__mediumconst shr (0+16))
 15284  018164  6EF8               	movwf	tblptru,c
 15285  018166                     	endif
 15286  018166  0008               	tblrd		*
 15287  018168  50F5               	movf	tablat,w,c
 15288  01816A  0900               	iorlw	0
 15289  01816C  B4D8               	btfsc	status,2,c
 15290  01816E  D036               	goto	u8660
 15291                           
 15292                           ;stkvar	_n @ sp[(-4)+-6]
 15293  018170  0EF6               	movlw	-10
 15294  018172  006F FF8C  F001    	movff	plusw1,btemp
 15295  018178  0EF7               	movlw	-9
 15296  01817A  50E3               	movf	plusw1,w,c
 15297  01817C  1001               	iorwf	btemp^0,w,c
 15298  01817E  B4D8               	btfsc	status,2,c
 15299  018180  D02D               	goto	u8660
 15300                           
 15301                           ;stkvar	_r @ sp[(-4)+0]
 15302  018182  50E1               	movf	fsr1l,w,c
 15303  018184  0FFC               	addlw	-4
 15304  018186  6ED9               	movwf	fsr2l,c
 15305  018188  50E2               	movf	fsr1h,w,c
 15306  01818A  6EDA               	movwf	fsr2h,c
 15307  01818C  0EFF               	movlw	255
 15308  01818E  22DA               	addwfc	fsr2h,f,c
 15309  018190  006F FF7B FFF6     	movff	postinc2,tblptrl
 15310  018196  006F FF77 FFF7     	movff	postdec2,tblptrh
 15311  01819C                     	if	0	;tblptru may be non-zero
 15312  01819C                     	endif
 15313  01819C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15314  01819C  0E00               	movlw	low (__mediumconst shr (0+16))
 15315  01819E  6EF8               	movwf	tblptru,c
 15316  0181A0                     	endif
 15317  0181A0  0008               	tblrd		*
 15318  0181A2  006F FFD4  F00C    	movff	tablat,btemp+11
 15319                           
 15320                           ;stkvar	_l @ sp[(-4)+2]
 15321  0181A8  0EFE               	movlw	-2
 15322  0181AA  006F FF8F FFF6     	movff	plusw1,tblptrl
 15323  0181B0  0EFF               	movlw	-1
 15324  0181B2  006F FF8F FFF7     	movff	plusw1,tblptrh
 15325  0181B8  0E00               	movlw	low (__mediumconst shr (0+16))
 15326  0181BA  6EF8               	movwf	tblptru,c
 15327  0181BC  0E1F               	movlw	(high __ramtop+-1)
 15328  0181BE  64F7               	cpfsgt	tblptrh,c
 15329  0181C0  D003               	bra	u8667
 15330  0181C2  0008               	tblrd		*
 15331  0181C4  50F5               	movf	tablat,w,c
 15332  0181C6  D007               	bra	u8665
 15333  0181C8                     u8667:
 15334  0181C8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15335  0181CE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15336  0181D4  50EF               	movf	indf0,w,c
 15337  0181D6                     u8665:
 15338  0181D6  180C               	xorwf	(btemp+11)^0,w,c
 15339  0181D8  B4D8               	btfsc	status,2,c
 15340  0181DA  D766               	goto	l9384
 15341  0181DC                     u8660:
 15342                           
 15343                           ;stkvar	_l @ sp[(-4)+2]
 15344  0181DC  0EFE               	movlw	-2
 15345  0181DE  006F FF8F FFF6     	movff	plusw1,tblptrl
 15346  0181E4  0EFF               	movlw	-1
 15347  0181E6  006F FF8F FFF7     	movff	plusw1,tblptrh
 15348  0181EC  0E00               	movlw	low (__mediumconst shr (0+16))
 15349  0181EE  6EF8               	movwf	tblptru,c
 15350  0181F0  0E1F               	movlw	(high __ramtop+-1)
 15351  0181F2  64F7               	cpfsgt	tblptrh,c
 15352  0181F4  D003               	bra	u8677
 15353  0181F6  0008               	tblrd		*
 15354  0181F8  50F5               	movf	tablat,w,c
 15355  0181FA  D007               	bra	u8670
 15356  0181FC                     u8677:
 15357  0181FC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15358  018202  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15359  018208  50EF               	movf	indf0,w,c
 15360  01820A                     u8670:
 15361  01820A  6E01               	movwf	btemp^0,c
 15362  01820C  6A02               	clrf	(btemp+1)^0,c
 15363                           
 15364                           ;stkvar	_r @ sp[(-4)+0]
 15365  01820E  50E1               	movf	fsr1l,w,c
 15366  018210  0FFC               	addlw	-4
 15367  018212  6ED9               	movwf	fsr2l,c
 15368  018214  50E2               	movf	fsr1h,w,c
 15369  018216  6EDA               	movwf	fsr2h,c
 15370  018218  0EFF               	movlw	255
 15371  01821A  22DA               	addwfc	fsr2h,f,c
 15372  01821C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15373  018222  006F FF77 FFF7     	movff	postdec2,tblptrh
 15374  018228                     	if	0	;tblptru may be non-zero
 15375  018228                     	endif
 15376  018228                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15377  018228  0E00               	movlw	low (__mediumconst shr (0+16))
 15378  01822A  6EF8               	movwf	tblptru,c
 15379  01822C                     	endif
 15380  01822C  0008               	tblrd		*
 15381  01822E  50F5               	movf	tablat,w,c
 15382  018230  5E01               	subwf	btemp^0,f,c
 15383  018232  0E00               	movlw	0
 15384  018234  5A02               	subwfb	(btemp+1)^0,f,c
 15385  018236                     l3459:
 15386                           
 15387                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 15388  018236  0EF6               	movlw	246
 15389  018238  26E1               	addwf	fsr1l,f,c
 15390  01823A  0EFF               	movlw	255
 15391  01823C  22E2               	addwfc	fsr1h,f,c
 15392  01823E  0012               	return		;funcret
 15393  018240                     __end_of_strncmp:
 15394                           	opt callstack 0
 15395                           
 15396 ;; *************** function _stoa *****************
 15397 ;; Defined at:
 15398 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15399 ;; Parameters:    Size  Location     Type
 15400 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15401 ;;		 -> f(6), NULL(0), 
 15402 ;;  s               2  [STACK] PTR unsigned char 
 15403 ;;		 -> ?_printf(2), ?_sprintf(2), STR_46(9), STR_45(12), 
 15404 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 15405 ;;		 -> V(191), 
 15406 ;; Auto vars:     Size  Location     Type
 15407 ;;  nuls            7  [STACK] unsigned char [7]
 15408 ;;  l               2  [STACK] int 
 15409 ;;  p               2  [STACK] int 
 15410 ;;  cp              2  [STACK] PTR unsigned char 
 15411 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_46(9), 
 15412 ;;		 -> STR_45(12), D.lcd(480), D(482), T(144), 
 15413 ;;		 -> STR_3(5), V(191), 
 15414 ;;  w               2  [STACK] int 
 15415 ;;  i               2  [STACK] int 
 15416 ;; Return value:  Size  Location     Type
 15417 ;;                  2  [STACK] int 
 15418 ;; Registers used:
 15419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 15420 ;; Tracked objects:
 15421 ;;		On entry : 0/0
 15422 ;;		On exit  : 0/0
 15423 ;;		Unchanged: 0/0
 15424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15429 ;;Total ram usage:        0 bytes
 15430 ;; Hardware stack levels used:    1
 15431 ;; Hardware stack levels required when called:   18
 15432 ;; This function calls:
 15433 ;;		_fputc
 15434 ;;		_strlen
 15435 ;; This function is called by:
 15436 ;;		_vfpfcnvrt
 15437 ;; This function uses a reentrant model
 15438 ;;
 15439                           
 15440                           	psect	text56
 15441  0173E8                     __ptext56:
 15442                           	opt callstack 0
 15443  0173E8                     _stoa:
 15444                           	opt callstack 0
 15445                           
 15446                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15447  0173E8  0E11               	movlw	17
 15448  0173EA  26E1               	addwf	fsr1l,f,c
 15449  0173EC  0E00               	movlw	0
 15450  0173EE  22E2               	addwfc	fsr1h,f,c
 15451                           
 15452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 15453                           
 15454                           ;incstack = 0
 15455 ;; hardware stack exceeded
 15456  0173F0  EE20  F0F0         	lfsr	2,stoa@F1166
 15457                           
 15458                           ;stkvar	_nuls @ sp[(-17)+0]
 15459  0173F4  0E07               	movlw	7
 15460  0173F6  6E01               	movwf	btemp^0,c
 15461  0173F8  0EEF               	movlw	-17
 15462  0173FA                     us1163999:
 15463  0173FA  006F FF7B FFE3     	movff	postinc2,plusw1
 15464  017400  28E8               	incf	wreg,w,c
 15465  017402  2E01               	decfsz	btemp^0,f,c
 15466  017404  D7FA               	bra	us1163999
 15467                           
 15468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 15469                           ;stkvar	_s @ sp[(-17)+-4]
 15470  017406  0EEB               	movlw	-21
 15471  017408  006F FF8C  F00B    	movff	plusw1,btemp+10
 15472  01740E  0EEC               	movlw	-20
 15473  017410  006F FF8C  F00C    	movff	plusw1,btemp+11
 15474                           
 15475                           ;stkvar	_cp @ sp[(-17)+11]
 15476  017416  0EFB               	movlw	-5
 15477  017418  0060  F033  FFE3   	movff	btemp+11,plusw1
 15478  01741E  0EFA               	movlw	-6
 15479  017420  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15480                           
 15481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 15482                           ;stkvar	_cp @ sp[(-17)+11]
 15483  017426  0EFA               	movlw	-6
 15484  017428  006F FF8C  F001    	movff	plusw1,btemp
 15485  01742E  0EFB               	movlw	-5
 15486  017430  50E3               	movf	plusw1,w,c
 15487  017432  1001               	iorwf	btemp^0,w,c
 15488  017434  A4D8               	btfss	status,2,c
 15489  017436  D00E               	goto	l12330
 15490                           
 15491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 15492                           ;stkvar	_nuls @ sp[(-17)+0]
 15493  017438  0EEF               	movlw	239
 15494  01743A  24E1               	addwf	fsr1l,w,c
 15495  01743C  6E0B               	movwf	(btemp+10)^0,c
 15496  01743E  0EFF               	movlw	255
 15497  017440  20E2               	addwfc	fsr1h,w,c
 15498  017442  6E0C               	movwf	(btemp+11)^0,c
 15499                           
 15500                           ;stkvar	_cp @ sp[(-17)+11]
 15501  017444  0EFB               	movlw	-5
 15502  017446  0060  F033  FFE3   	movff	btemp+11,plusw1
 15503  01744C  0EFA               	movlw	-6
 15504  01744E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15505  017454                     l12330:
 15506                           
 15507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 15508                           ;stkvar	_cp @ sp[(-17)+11]
 15509  017454  0EFA               	movlw	-6
 15510  017456  006F FF8F FFE6     	movff	plusw1,postinc1
 15511  01745C  006F FF8F FFE6     	movff	plusw1,postinc1
 15512  017462  ECB3  F0D4         	call	_strlen	;wreg free
 15513                           
 15514                           ;stkvar	_l @ sp[(-17)+7]
 15515  017466  0EF6               	movlw	-10
 15516  017468  0060  F007  FFE3   	movff	btemp,plusw1
 15517  01746E  0EF7               	movlw	-9
 15518  017470  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15519                           
 15520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 15521                           ;stkvar	_p @ sp[(-17)+9]
 15522  017476  0EF8               	movlw	-8
 15523  017478  0060  F0F3  FFE3   	movff	_prec,plusw1
 15524  01747E  0EF9               	movlw	-7
 15525  017480  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 15526                           
 15527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 15528                           ;stkvar	_p @ sp[(-17)+9]
 15529  017486  0EF9               	movlw	-7
 15530  017488  BEE3               	btfsc	plusw1,7,c
 15531  01748A  D023               	goto	l2284
 15532                           
 15533                           ;stkvar	_l @ sp[(-17)+7]
 15534                           ;stkvar	_p @ sp[(-17)+9]
 15535  01748C  50E1               	movf	fsr1l,w,c
 15536  01748E  0FF8               	addlw	-8
 15537  017490  6ED9               	movwf	fsr2l,c
 15538  017492  50E2               	movf	fsr1h,w,c
 15539  017494  6EDA               	movwf	fsr2h,c
 15540  017496  0EFF               	movlw	255
 15541  017498  22DA               	addwfc	fsr2h,f,c
 15542  01749A  0EF6               	movlw	-10
 15543  01749C  50E3               	movf	plusw1,w,c
 15544  01749E  5CDE               	subwf	postinc2,w,c
 15545  0174A0  50DE               	movf	postinc2,w,c
 15546  0174A2  0A80               	xorlw	128
 15547  0174A4  6E01               	movwf	btemp^0,c
 15548  0174A6  0EF7               	movlw	-9
 15549  0174A8  50E3               	movf	plusw1,w,c
 15550  0174AA  0A80               	xorlw	128
 15551  0174AC  5801               	subwfb	btemp^0,w,c
 15552  0174AE  B0D8               	btfsc	status,0,c
 15553  0174B0  D010               	goto	l2284
 15554                           
 15555                           ;stkvar	_p @ sp[(-17)+9]
 15556                           ;stkvar	_l @ sp[(-17)+7]
 15557  0174B2  0EF8               	movlw	-8
 15558  0174B4  006F FF8C  F001    	movff	plusw1,btemp
 15559  0174BA  0EF6               	movlw	-10
 15560  0174BC  0060  F007  FFE3   	movff	btemp,plusw1
 15561  0174C2  0EF9               	movlw	-7
 15562  0174C4  006F FF8C  F001    	movff	plusw1,btemp
 15563  0174CA  0EF7               	movlw	-9
 15564  0174CC  0060  F007  FFE3   	movff	btemp,plusw1
 15565  0174D2                     l2284:
 15566                           
 15567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 15568                           ;stkvar	_l @ sp[(-17)+7]
 15569                           ;stkvar	_p @ sp[(-17)+9]
 15570  0174D2  0EF6               	movlw	-10
 15571  0174D4  006F FF8C  F001    	movff	plusw1,btemp
 15572  0174DA  0EF8               	movlw	-8
 15573  0174DC  0060  F007  FFE3   	movff	btemp,plusw1
 15574  0174E2  0EF7               	movlw	-9
 15575  0174E4  006F FF8C  F001    	movff	plusw1,btemp
 15576  0174EA  0EF9               	movlw	-7
 15577  0174EC  0060  F007  FFE3   	movff	btemp,plusw1
 15578                           
 15579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 15580                           ;stkvar	_w @ sp[(-17)+13]
 15581  0174F2  0EFC               	movlw	-4
 15582  0174F4  0060  F0EB  FFE3   	movff	_width,plusw1
 15583  0174FA  0EFD               	movlw	-3
 15584  0174FC  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15585                           
 15586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 15587  017502  A03E               	btfss	_flags^0,0,c
 15588  017504  D01F               	goto	l12350
 15589  017506  D031               	goto	u11680
 15590  017508                     l12346:
 15591                           
 15592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 15593                           ;stkvar	_fp @ sp[(-17)+-2]
 15594  017508  0EED               	movlw	-19
 15595  01750A  006F FF8F FFE6     	movff	plusw1,postinc1
 15596  017510  006F FF8F FFE6     	movff	plusw1,postinc1
 15597  017516  0E20               	movlw	32
 15598  017518  6EE6               	movwf	postinc1,c
 15599  01751A  0E00               	movlw	0
 15600  01751C  6EE6               	movwf	postinc1,c
 15601  01751E  ECC4  F0CB         	call	_fputc	;wreg free
 15602                           
 15603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 15604                           ;stkvar	_l @ sp[(-17)+7]
 15605  017522  0EF6               	movlw	-10
 15606  017524  50E3               	movf	plusw1,w,c
 15607  017526  0F01               	addlw	1
 15608  017528  6E01               	movwf	btemp^0,c
 15609  01752A  0EF6               	movlw	-10
 15610  01752C  0060  F007  FFE3   	movff	btemp,plusw1
 15611  017532  6A01               	clrf	btemp^0,c
 15612  017534  0EF7               	movlw	-9
 15613  017536  50E3               	movf	plusw1,w,c
 15614  017538  2001               	addwfc	btemp^0,w,c
 15615  01753A  6E01               	movwf	btemp^0,c
 15616  01753C  0EF7               	movlw	-9
 15617  01753E  0060  F007  FFE3   	movff	btemp,plusw1
 15618  017544                     l12350:
 15619                           
 15620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 15621                           ;stkvar	_w @ sp[(-17)+13]
 15622                           ;stkvar	_l @ sp[(-17)+7]
 15623  017544  50E1               	movf	fsr1l,w,c
 15624  017546  0FF6               	addlw	-10
 15625  017548  6ED9               	movwf	fsr2l,c
 15626  01754A  50E2               	movf	fsr1h,w,c
 15627  01754C  6EDA               	movwf	fsr2h,c
 15628  01754E  0EFF               	movlw	255
 15629  017550  22DA               	addwfc	fsr2h,f,c
 15630  017552  0EFC               	movlw	-4
 15631  017554  50E3               	movf	plusw1,w,c
 15632  017556  5CDE               	subwf	postinc2,w,c
 15633  017558  50DE               	movf	postinc2,w,c
 15634  01755A  0A80               	xorlw	128
 15635  01755C  6E01               	movwf	btemp^0,c
 15636  01755E  0EFD               	movlw	-3
 15637  017560  50E3               	movf	plusw1,w,c
 15638  017562  0A80               	xorlw	128
 15639  017564  5801               	subwfb	btemp^0,w,c
 15640  017566  A0D8               	btfss	status,0,c
 15641  017568  D7CF               	goto	l12346
 15642  01756A                     u11680:
 15643                           
 15644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15645                           ;stkvar	_i @ sp[(-17)+15]
 15646  01756A  0EFE               	movlw	-2
 15647  01756C  6AE3               	clrf	plusw1,c
 15648  01756E  0EFF               	movlw	-1
 15649  017570  6AE3               	clrf	plusw1,c
 15650                           
 15651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15652  017572  D045               	goto	l12360
 15653  017574                     l12354:
 15654                           
 15655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15656                           ;stkvar	_fp @ sp[(-17)+-2]
 15657  017574  0EED               	movlw	-19
 15658  017576  006F FF8F FFE6     	movff	plusw1,postinc1
 15659  01757C  006F FF8F FFE6     	movff	plusw1,postinc1
 15660                           
 15661                           ;stkvar	_cp @ sp[(-19)+11]
 15662  017582  0EF8               	movlw	-8
 15663  017584  006F FF8F FFF6     	movff	plusw1,tblptrl
 15664  01758A  0EF9               	movlw	-7
 15665  01758C  006F FF8F FFF7     	movff	plusw1,tblptrh
 15666  017592  0E00               	movlw	low (__mediumconst shr (0+16))
 15667  017594  6EF8               	movwf	tblptru,c
 15668  017596  0E1F               	movlw	(high __ramtop+-1)
 15669  017598  64F7               	cpfsgt	tblptrh,c
 15670  01759A  D003               	bra	u11697
 15671  01759C  0008               	tblrd		*
 15672  01759E  50F5               	movf	tablat,w,c
 15673  0175A0  D007               	bra	u11690
 15674  0175A2                     u11697:
 15675  0175A2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15676  0175A8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15677  0175AE  50EF               	movf	indf0,w,c
 15678  0175B0                     u11690:
 15679  0175B0  6EE6               	movwf	postinc1,c
 15680  0175B2  0E00               	movlw	0
 15681  0175B4  6EE6               	movwf	postinc1,c
 15682  0175B6  ECC4  F0CB         	call	_fputc	;wreg free
 15683                           
 15684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15685                           ;stkvar	_cp @ sp[(-17)+11]
 15686  0175BA  0EFA               	movlw	-6
 15687  0175BC  50E3               	movf	plusw1,w,c
 15688  0175BE  0F01               	addlw	1
 15689  0175C0  6E01               	movwf	btemp^0,c
 15690  0175C2  0EFA               	movlw	-6
 15691  0175C4  0060  F007  FFE3   	movff	btemp,plusw1
 15692  0175CA  6A01               	clrf	btemp^0,c
 15693  0175CC  0EFB               	movlw	-5
 15694  0175CE  50E3               	movf	plusw1,w,c
 15695  0175D0  2001               	addwfc	btemp^0,w,c
 15696  0175D2  6E01               	movwf	btemp^0,c
 15697  0175D4  0EFB               	movlw	-5
 15698  0175D6  0060  F007  FFE3   	movff	btemp,plusw1
 15699                           
 15700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15701                           ;stkvar	_i @ sp[(-17)+15]
 15702  0175DC  0EFE               	movlw	-2
 15703  0175DE  50E3               	movf	plusw1,w,c
 15704  0175E0  0F01               	addlw	1
 15705  0175E2  6E01               	movwf	btemp^0,c
 15706  0175E4  0EFE               	movlw	-2
 15707  0175E6  0060  F007  FFE3   	movff	btemp,plusw1
 15708  0175EC  6A01               	clrf	btemp^0,c
 15709  0175EE  0EFF               	movlw	-1
 15710  0175F0  50E3               	movf	plusw1,w,c
 15711  0175F2  2001               	addwfc	btemp^0,w,c
 15712  0175F4  6E01               	movwf	btemp^0,c
 15713  0175F6  0EFF               	movlw	-1
 15714  0175F8  0060  F007  FFE3   	movff	btemp,plusw1
 15715  0175FE                     l12360:
 15716                           
 15717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15718                           ;stkvar	_p @ sp[(-17)+9]
 15719                           ;stkvar	_i @ sp[(-17)+15]
 15720  0175FE  50E1               	movf	fsr1l,w,c
 15721  017600  0FFE               	addlw	-2
 15722  017602  6ED9               	movwf	fsr2l,c
 15723  017604  50E2               	movf	fsr1h,w,c
 15724  017606  6EDA               	movwf	fsr2h,c
 15725  017608  0EFF               	movlw	255
 15726  01760A  22DA               	addwfc	fsr2h,f,c
 15727  01760C  0EF8               	movlw	-8
 15728  01760E  50E3               	movf	plusw1,w,c
 15729  017610  5CDE               	subwf	postinc2,w,c
 15730  017612  50DE               	movf	postinc2,w,c
 15731  017614  0A80               	xorlw	128
 15732  017616  6E01               	movwf	btemp^0,c
 15733  017618  0EF9               	movlw	-7
 15734  01761A  50E3               	movf	plusw1,w,c
 15735  01761C  0A80               	xorlw	128
 15736  01761E  5801               	subwfb	btemp^0,w,c
 15737  017620  A0D8               	btfss	status,0,c
 15738  017622  D7A8               	goto	l12354
 15739                           
 15740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15741  017624  B03E               	btfsc	_flags^0,0,c
 15742  017626  D01F               	goto	l12368
 15743  017628  D031               	goto	u11720
 15744  01762A                     l12364:
 15745                           
 15746                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15747                           ;stkvar	_fp @ sp[(-17)+-2]
 15748  01762A  0EED               	movlw	-19
 15749  01762C  006F FF8F FFE6     	movff	plusw1,postinc1
 15750  017632  006F FF8F FFE6     	movff	plusw1,postinc1
 15751  017638  0E20               	movlw	32
 15752  01763A  6EE6               	movwf	postinc1,c
 15753  01763C  0E00               	movlw	0
 15754  01763E  6EE6               	movwf	postinc1,c
 15755  017640  ECC4  F0CB         	call	_fputc	;wreg free
 15756                           
 15757                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15758                           ;stkvar	_l @ sp[(-17)+7]
 15759  017644  0EF6               	movlw	-10
 15760  017646  50E3               	movf	plusw1,w,c
 15761  017648  0F01               	addlw	1
 15762  01764A  6E01               	movwf	btemp^0,c
 15763  01764C  0EF6               	movlw	-10
 15764  01764E  0060  F007  FFE3   	movff	btemp,plusw1
 15765  017654  6A01               	clrf	btemp^0,c
 15766  017656  0EF7               	movlw	-9
 15767  017658  50E3               	movf	plusw1,w,c
 15768  01765A  2001               	addwfc	btemp^0,w,c
 15769  01765C  6E01               	movwf	btemp^0,c
 15770  01765E  0EF7               	movlw	-9
 15771  017660  0060  F007  FFE3   	movff	btemp,plusw1
 15772  017666                     l12368:
 15773                           
 15774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15775                           ;stkvar	_w @ sp[(-17)+13]
 15776                           ;stkvar	_l @ sp[(-17)+7]
 15777  017666  50E1               	movf	fsr1l,w,c
 15778  017668  0FF6               	addlw	-10
 15779  01766A  6ED9               	movwf	fsr2l,c
 15780  01766C  50E2               	movf	fsr1h,w,c
 15781  01766E  6EDA               	movwf	fsr2h,c
 15782  017670  0EFF               	movlw	255
 15783  017672  22DA               	addwfc	fsr2h,f,c
 15784  017674  0EFC               	movlw	-4
 15785  017676  50E3               	movf	plusw1,w,c
 15786  017678  5CDE               	subwf	postinc2,w,c
 15787  01767A  50DE               	movf	postinc2,w,c
 15788  01767C  0A80               	xorlw	128
 15789  01767E  6E01               	movwf	btemp^0,c
 15790  017680  0EFD               	movlw	-3
 15791  017682  50E3               	movf	plusw1,w,c
 15792  017684  0A80               	xorlw	128
 15793  017686  5801               	subwfb	btemp^0,w,c
 15794  017688  A0D8               	btfss	status,0,c
 15795  01768A  D7CF               	goto	l12364
 15796  01768C                     u11720:
 15797                           
 15798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15799                           ;stkvar	_l @ sp[(-17)+7]
 15800  01768C  0EF6               	movlw	-10
 15801  01768E  006F FF8C  F001    	movff	plusw1,btemp
 15802  017694  0EF7               	movlw	-9
 15803  017696  006F FF8C  F002    	movff	plusw1,btemp+1
 15804                           
 15805                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15806  01769C  0EEB               	movlw	235
 15807  01769E  26E1               	addwf	fsr1l,f,c
 15808  0176A0  0EFF               	movlw	255
 15809  0176A2  22E2               	addwfc	fsr1h,f,c
 15810  0176A4  0012               	return		;funcret
 15811  0176A6                     __end_of_stoa:
 15812                           	opt callstack 0
 15813                           
 15814 ;; *************** function _efgtoa *****************
 15815 ;; Defined at:
 15816 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15817 ;; Parameters:    Size  Location     Type
 15818 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15819 ;;		 -> f(6), NULL(0), 
 15820 ;;  f               4  [STACK] PTR struct _IO_FILE
 15821 ;;  c               1  [STACK] unsigned char 
 15822 ;; Auto vars:     Size  Location     Type
 15823 ;;  u               4  [STACK] unsigned char 
 15824 ;;  g               4  [STACK] unsigned char 
 15825 ;;  l               4  [STACK] unsigned char 
 15826 ;;  h               4  [STACK] unsigned char 
 15827 ;;  ou              4  [STACK] unsigned char 
 15828 ;;  n               2  [STACK] int 
 15829 ;;  e               2  [STACK] int 
 15830 ;;  i               2  [STACK] int 
 15831 ;;  w               2  [STACK] int 
 15832 ;;  p               2  [STACK] int 
 15833 ;;  sign            2  [STACK] int 
 15834 ;;  d               2  [STACK] int 
 15835 ;;  ne              2  [STACK] int 
 15836 ;;  m               2  [STACK] int 
 15837 ;;  pp              2  [STACK] int 
 15838 ;;  t               2  [STACK] int 
 15839 ;;  mode            1  [STACK] unsigned char 
 15840 ;;  nmode           1  [STACK] unsigned char 
 15841 ;; Return value:  Size  Location     Type
 15842 ;;                  2  [STACK] int 
 15843 ;; Registers used:
 15844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15845 ;; Tracked objects:
 15846 ;;		On entry : 0/0
 15847 ;;		On exit  : 0/0
 15848 ;;		Unchanged: 0/0
 15849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15854 ;;Total ram usage:        0 bytes
 15855 ;; Hardware stack levels used:    1
 15856 ;; Hardware stack levels required when called:   20
 15857 ;; This function calls:
 15858 ;;		___awdiv
 15859 ;;		___awmod
 15860 ;;		___fladd
 15861 ;;		___fldiv
 15862 ;;		___fleq
 15863 ;;		___flge
 15864 ;;		___flmul
 15865 ;;		___flneg
 15866 ;;		___flsub
 15867 ;;		___fltol
 15868 ;;		___fpclassifyf
 15869 ;;		_floorf
 15870 ;;		_isupper
 15871 ;;		_pad
 15872 ;;		_strcpy
 15873 ;;		_tolower
 15874 ;; This function is called by:
 15875 ;;		_vfpfcnvrt
 15876 ;; This function uses a reentrant model
 15877 ;;
 15878                           
 15879                           	psect	text57
 15880  010000                     __ptext57:
 15881                           	opt callstack 0
 15882  010000                     _efgtoa:
 15883                           	opt callstack 0
 15884                           
 15885                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15886  010000  0E38               	movlw	56
 15887  010002  26E1               	addwf	fsr1l,f,c
 15888  010004  0E00               	movlw	0
 15889  010006  22E2               	addwfc	fsr1h,f,c
 15890                           
 15891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15892                           ;stkvar	_sign @ sp[(-56)+42]
 15893                           
 15894                           ;incstack = 0
 15895 ;; hardware stack exceeded
 15896  010008  0EF2               	movlw	-14
 15897  01000A  6AE3               	clrf	plusw1,c
 15898  01000C  0EF3               	movlw	-13
 15899  01000E  6AE3               	clrf	plusw1,c
 15900                           
 15901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15902                           ;stkvar	_f @ sp[(-56)+-6]
 15903  010010  0EC2               	movlw	-62
 15904  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 15905  010018  0EC3               	movlw	-61
 15906  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 15907  010020  0EC4               	movlw	-60
 15908  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 15909  010028  0EC5               	movlw	-59
 15910  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 15911                           
 15912                           ;stkvar	_g @ sp[(-56)+16]
 15913  010030  0ED8               	movlw	-40
 15914  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 15915  010038  0ED9               	movlw	-39
 15916  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15917  010040  0EDA               	movlw	-38
 15918  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15919  010048  0EDB               	movlw	-37
 15920  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 15921                           
 15922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15923                           ;stkvar	_g @ sp[(-56)+16]
 15924  010050  0EDB               	movlw	-37
 15925  010052  AEE3               	btfss	plusw1,7,c
 15926  010054  D02B               	goto	l12028
 15927                           
 15928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15929  010056  0E01               	movlw	1
 15930  010058  6E0B               	movwf	(btemp+10)^0,c
 15931  01005A  0E00               	movlw	0
 15932  01005C  6E0C               	movwf	(btemp+11)^0,c
 15933                           
 15934                           ;stkvar	_sign @ sp[(-56)+42]
 15935  01005E  0EF2               	movlw	-14
 15936  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15937  010066  0EF3               	movlw	-13
 15938  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 15939                           
 15940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15941                           ;stkvar	_g @ sp[(-56)+16]
 15942  01006E  0ED8               	movlw	-40
 15943  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15944  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15945  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15946  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15947  010088  EC50  F0DA         	call	___flneg	;wreg free
 15948                           
 15949                           ;stkvar	_g @ sp[(-56)+16]
 15950  01008C  0ED8               	movlw	-40
 15951  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 15952  010094  0ED9               	movlw	-39
 15953  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 15954  01009C  0EDA               	movlw	-38
 15955  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 15956  0100A4  0EDB               	movlw	-37
 15957  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 15958  0100AC                     l12028:
 15959                           
 15960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15961                           ;stkvar	_n @ sp[(-56)+32]
 15962  0100AC  0EE8               	movlw	-24
 15963  0100AE  6AE3               	clrf	plusw1,c
 15964  0100B0  0EE9               	movlw	-23
 15965  0100B2  6AE3               	clrf	plusw1,c
 15966                           
 15967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15968                           ;stkvar	_w @ sp[(-56)+38]
 15969  0100B4  0EEE               	movlw	-18
 15970  0100B6  0060  F0EB  FFE3   	movff	_width,plusw1
 15971  0100BC  0EEF               	movlw	-17
 15972  0100BE  0060  F0EF  FFE3   	movff	_width+1,plusw1
 15973                           
 15974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15975                           ;stkvar	_sign @ sp[(-56)+42]
 15976  0100C4  0EF2               	movlw	-14
 15977  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 15978  0100CC  0EF3               	movlw	-13
 15979  0100CE  50E3               	movf	plusw1,w,c
 15980  0100D0  1001               	iorwf	btemp^0,w,c
 15981  0100D2  A4D8               	btfss	status,2,c
 15982  0100D4  D002               	goto	u11130
 15983  0100D6  A43E               	btfss	_flags^0,2,c
 15984  0100D8  D036               	goto	l12048
 15985  0100DA                     u11130:
 15986                           
 15987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15988                           ;stkvar	_sign @ sp[(-56)+42]
 15989  0100DA  0EF2               	movlw	-14
 15990  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 15991  0100E2  0EF3               	movlw	-13
 15992  0100E4  50E3               	movf	plusw1,w,c
 15993  0100E6  1001               	iorwf	btemp^0,w,c
 15994  0100E8  A4D8               	btfss	status,2,c
 15995  0100EA  D002               	goto	l12040
 15996  0100EC  0E2B               	movlw	43
 15997  0100EE  D001               	goto	L16
 15998  0100F0                     l12040:
 15999  0100F0  0E2D               	movlw	45
 16000  0100F2                     L16:
 16001  0100F2  6E0B               	movwf	(btemp+10)^0,c
 16002  0100F4  0E00               	movlw	0
 16003  0100F6  6E0C               	movwf	(btemp+11)^0,c
 16004                           
 16005                           ;stkvar	_efgtoa$5540 @ sp[(-56)+10]
 16006  0100F8  0ED2               	movlw	-46
 16007  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16008  010100  0ED3               	movlw	-45
 16009  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 16010                           
 16011                           ;stkvar	_efgtoa$5540 @ sp[(-56)+10]
 16012  010108  0ED2               	movlw	-46
 16013  01010A  006F FF8C  F297    	movff	plusw1,_dbuf
 16014                           
 16015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 16016                           ;stkvar	_n @ sp[(-56)+32]
 16017  010110  0EE8               	movlw	-24
 16018  010112  50E3               	movf	plusw1,w,c
 16019  010114  0F01               	addlw	1
 16020  010116  6E01               	movwf	btemp^0,c
 16021  010118  0EE8               	movlw	-24
 16022  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 16023  010120  6A01               	clrf	btemp^0,c
 16024  010122  0EE9               	movlw	-23
 16025  010124  50E3               	movf	plusw1,w,c
 16026  010126  2001               	addwfc	btemp^0,w,c
 16027  010128  6E01               	movwf	btemp^0,c
 16028  01012A  0EE9               	movlw	-23
 16029  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 16030                           
 16031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 16032                           ;stkvar	_w @ sp[(-56)+38]
 16033  010132  50E1               	movf	fsr1l,w,c
 16034  010134  0FEE               	addlw	-18
 16035  010136  6ED9               	movwf	fsr2l,c
 16036  010138  50E2               	movf	fsr1h,w,c
 16037  01013A  6EDA               	movwf	fsr2h,c
 16038  01013C  0EFF               	movlw	255
 16039  01013E  22DA               	addwfc	fsr2h,f,c
 16040  010140  06DE               	decf	postinc2,f,c
 16041  010142  0E00               	movlw	0
 16042  010144  5ADD               	subwfb	postdec2,f,c
 16043  010146                     l12048:
 16044                           
 16045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16046                           ;stkvar	_g @ sp[(-56)+16]
 16047  010146  0ED8               	movlw	-40
 16048  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 16049  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 16050  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 16051  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 16052  010160  ECD9  F0C4         	call	___fpclassifyf	;wreg free
 16053  010164  0401               	decf	btemp^0,w,c
 16054  010166  1002               	iorwf	(btemp+1)^0,w,c
 16055  010168  A4D8               	btfss	status,2,c
 16056  01016A  D076               	goto	l12066
 16057  01016C  0EBF               	movlw	191
 16058  01016E  6E0B               	movwf	(btemp+10)^0,c
 16059  010170  0EFF               	movlw	255
 16060  010172  6E0C               	movwf	(btemp+11)^0,c
 16061                           
 16062                           ;stkvar	_c @ sp[(-56)+-7]
 16063  010174  0EC1               	movlw	-63
 16064  010176  50E3               	movf	plusw1,w,c
 16065  010178  6E09               	movwf	(btemp+8)^0,c
 16066  01017A  6A0A               	clrf	(btemp+9)^0,c
 16067  01017C  500B               	movf	(btemp+10)^0,w,c
 16068  01017E  2609               	addwf	(btemp+8)^0,f,c
 16069  010180  500C               	movf	(btemp+11)^0,w,c
 16070  010182  220A               	addwfc	(btemp+9)^0,f,c
 16071  010184  500A               	movf	(btemp+9)^0,w,c
 16072  010186  E106               	bnz	u11160
 16073  010188  0E1A               	movlw	26
 16074  01018A  5C09               	subwf	(btemp+8)^0,w,c
 16075  01018C  B0D8               	btfsc	status,0,c
 16076  01018E  D002               	goto	u11160
 16077  010190  0E01               	movlw	1
 16078  010192  D001               	goto	u11170
 16079  010194                     u11160:
 16080  010194  0E00               	movlw	0
 16081  010196                     u11170:
 16082  010196  6E0B               	movwf	(btemp+10)^0,c
 16083  010198  6A0C               	clrf	(btemp+11)^0,c
 16084                           
 16085                           ;stkvar	_efgtoa$5541 @ sp[(-56)+8]
 16086  01019A  0ED0               	movlw	-48
 16087  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16088  0101A2  0ED1               	movlw	-47
 16089  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16090                           
 16091                           ;stkvar	_efgtoa$5541 @ sp[(-56)+8]
 16092  0101AA  0ED0               	movlw	-48
 16093  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 16094  0101B2  0ED1               	movlw	-47
 16095  0101B4  50E3               	movf	plusw1,w,c
 16096  0101B6  1001               	iorwf	btemp^0,w,c
 16097  0101B8  B4D8               	btfsc	status,2,c
 16098  0101BA  D017               	goto	l12058
 16099                           
 16100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 16101  0101BC  0ED7               	movlw	low STR_65
 16102  0101BE  6EE6               	movwf	postinc1,c
 16103  0101C0  0EFF               	movlw	high STR_65
 16104  0101C2  6EE6               	movwf	postinc1,c
 16105                           
 16106                           ;stkvar	_n @ sp[(-58)+32]
 16107  0101C4  0E97               	movlw	low _dbuf
 16108  0101C6  6E0B               	movwf	(btemp+10)^0,c
 16109  0101C8  0E02               	movlw	high _dbuf
 16110  0101CA  6E0C               	movwf	(btemp+11)^0,c
 16111  0101CC  0EE6               	movlw	-26
 16112  0101CE  50E3               	movf	plusw1,w,c
 16113  0101D0  260B               	addwf	(btemp+10)^0,f,c
 16114  0101D2  0EE7               	movlw	-25
 16115  0101D4  50E3               	movf	plusw1,w,c
 16116  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 16117  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16118  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 16119  0101E4  ECDF  F0D1         	call	_strcpy	;wreg free
 16120                           
 16121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 16122  0101E8  D016               	goto	l12060
 16123  0101EA                     l12058:
 16124                           
 16125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 16126  0101EA  0EDF               	movlw	low STR_66
 16127  0101EC  6EE6               	movwf	postinc1,c
 16128  0101EE  0EFF               	movlw	high STR_66
 16129  0101F0  6EE6               	movwf	postinc1,c
 16130                           
 16131                           ;stkvar	_n @ sp[(-58)+32]
 16132  0101F2  0E97               	movlw	low _dbuf
 16133  0101F4  6E0B               	movwf	(btemp+10)^0,c
 16134  0101F6  0E02               	movlw	high _dbuf
 16135  0101F8  6E0C               	movwf	(btemp+11)^0,c
 16136  0101FA  0EE6               	movlw	-26
 16137  0101FC  50E3               	movf	plusw1,w,c
 16138  0101FE  260B               	addwf	(btemp+10)^0,f,c
 16139  010200  0EE7               	movlw	-25
 16140  010202  50E3               	movf	plusw1,w,c
 16141  010204  220C               	addwfc	(btemp+11)^0,f,c
 16142  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16143  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 16144  010212  ECDF  F0D1         	call	_strcpy	;wreg free
 16145  010216                     l12060:
 16146                           
 16147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 16148                           ;stkvar	_w @ sp[(-56)+38]
 16149  010216  50E1               	movf	fsr1l,w,c
 16150  010218  0FEE               	addlw	-18
 16151  01021A  6ED9               	movwf	fsr2l,c
 16152  01021C  50E2               	movf	fsr1h,w,c
 16153  01021E  6EDA               	movwf	fsr2h,c
 16154  010220  0EFF               	movlw	255
 16155  010222  22DA               	addwfc	fsr2h,f,c
 16156  010224  0EFD               	movlw	253
 16157  010226  26DE               	addwf	postinc2,f,c
 16158  010228  0EFF               	movlw	255
 16159  01022A  22DD               	addwfc	postdec2,f,c
 16160  01022C                     l12062:
 16161                           
 16162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 16163                           ;stkvar	_w @ sp[(-56)+38]
 16164  01022C  0EEE               	movlw	-18
 16165  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 16166  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 16167  01023A  0E97               	movlw	low _dbuf
 16168  01023C  6EE6               	movwf	postinc1,c
 16169  01023E  0E02               	movlw	high _dbuf
 16170  010240  6EE6               	movwf	postinc1,c
 16171                           
 16172                           ;stkvar	_fp @ sp[(-60)+-2]
 16173  010242  0EC2               	movlw	-62
 16174  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 16175  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 16176  010250  EC00  F0CE         	call	_pad	;wreg free
 16177  010254  EF1D  F089         	goto	l2202
 16178  010258                     l12066:
 16179                           
 16180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 16181                           ;stkvar	_g @ sp[(-56)+16]
 16182  010258  0ED8               	movlw	-40
 16183  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 16184  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 16185  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 16186  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 16187  010272  ECD9  F0C4         	call	___fpclassifyf	;wreg free
 16188  010276  5001               	movf	btemp^0,w,c
 16189  010278  1002               	iorwf	(btemp+1)^0,w,c
 16190  01027A  A4D8               	btfss	status,2,c
 16191  01027C  D056               	goto	l12084
 16192  01027E  0EBF               	movlw	191
 16193  010280  6E0B               	movwf	(btemp+10)^0,c
 16194  010282  0EFF               	movlw	255
 16195  010284  6E0C               	movwf	(btemp+11)^0,c
 16196                           
 16197                           ;stkvar	_c @ sp[(-56)+-7]
 16198  010286  0EC1               	movlw	-63
 16199  010288  50E3               	movf	plusw1,w,c
 16200  01028A  6E09               	movwf	(btemp+8)^0,c
 16201  01028C  6A0A               	clrf	(btemp+9)^0,c
 16202  01028E  500B               	movf	(btemp+10)^0,w,c
 16203  010290  2609               	addwf	(btemp+8)^0,f,c
 16204  010292  500C               	movf	(btemp+11)^0,w,c
 16205  010294  220A               	addwfc	(btemp+9)^0,f,c
 16206  010296  500A               	movf	(btemp+9)^0,w,c
 16207  010298  E106               	bnz	u11200
 16208  01029A  0E1A               	movlw	26
 16209  01029C  5C09               	subwf	(btemp+8)^0,w,c
 16210  01029E  B0D8               	btfsc	status,0,c
 16211  0102A0  D002               	goto	u11200
 16212  0102A2  0E01               	movlw	1
 16213  0102A4  D001               	goto	u11210
 16214  0102A6                     u11200:
 16215  0102A6  0E00               	movlw	0
 16216  0102A8                     u11210:
 16217  0102A8  6E0B               	movwf	(btemp+10)^0,c
 16218  0102AA  6A0C               	clrf	(btemp+11)^0,c
 16219                           
 16220                           ;stkvar	_efgtoa$5545 @ sp[(-56)+6]
 16221  0102AC  0ECE               	movlw	-50
 16222  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16223  0102B4  0ECF               	movlw	-49
 16224  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 16225                           
 16226                           ;stkvar	_efgtoa$5545 @ sp[(-56)+6]
 16227  0102BC  0ECE               	movlw	-50
 16228  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 16229  0102C4  0ECF               	movlw	-49
 16230  0102C6  50E3               	movf	plusw1,w,c
 16231  0102C8  1001               	iorwf	btemp^0,w,c
 16232  0102CA  B4D8               	btfsc	status,2,c
 16233  0102CC  D017               	goto	l12076
 16234                           
 16235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 16236  0102CE  0EDB               	movlw	low STR_69
 16237  0102D0  6EE6               	movwf	postinc1,c
 16238  0102D2  0EFF               	movlw	high STR_69
 16239  0102D4  6EE6               	movwf	postinc1,c
 16240                           
 16241                           ;stkvar	_n @ sp[(-58)+32]
 16242  0102D6  0E97               	movlw	low _dbuf
 16243  0102D8  6E0B               	movwf	(btemp+10)^0,c
 16244  0102DA  0E02               	movlw	high _dbuf
 16245  0102DC  6E0C               	movwf	(btemp+11)^0,c
 16246  0102DE  0EE6               	movlw	-26
 16247  0102E0  50E3               	movf	plusw1,w,c
 16248  0102E2  260B               	addwf	(btemp+10)^0,f,c
 16249  0102E4  0EE7               	movlw	-25
 16250  0102E6  50E3               	movf	plusw1,w,c
 16251  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 16252  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16253  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 16254  0102F6  ECDF  F0D1         	call	_strcpy	;wreg free
 16255                           
 16256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 16257  0102FA  D78D               	goto	l12060
 16258  0102FC                     l12076:
 16259                           
 16260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 16261  0102FC  0EE3               	movlw	low STR_70
 16262  0102FE  6EE6               	movwf	postinc1,c
 16263  010300  0EFF               	movlw	high STR_70
 16264  010302  6EE6               	movwf	postinc1,c
 16265                           
 16266                           ;stkvar	_n @ sp[(-58)+32]
 16267  010304  0E97               	movlw	low _dbuf
 16268  010306  6E0B               	movwf	(btemp+10)^0,c
 16269  010308  0E02               	movlw	high _dbuf
 16270  01030A  6E0C               	movwf	(btemp+11)^0,c
 16271  01030C  0EE6               	movlw	-26
 16272  01030E  50E3               	movf	plusw1,w,c
 16273  010310  260B               	addwf	(btemp+10)^0,f,c
 16274  010312  0EE7               	movlw	-25
 16275  010314  50E3               	movf	plusw1,w,c
 16276  010316  220C               	addwfc	(btemp+11)^0,f,c
 16277  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16278  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 16279  010324  ECDF  F0D1         	call	_strcpy	;wreg free
 16280  010328  D776               	goto	l12060
 16281  01032A                     l12084:
 16282                           
 16283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 16284  01032A  0E00               	movlw	0
 16285  01032C  6E09               	movwf	(btemp+8)^0,c
 16286  01032E  0E00               	movlw	0
 16287  010330  6E0A               	movwf	(btemp+9)^0,c
 16288  010332  0E80               	movlw	128
 16289  010334  6E0B               	movwf	(btemp+10)^0,c
 16290  010336  0E3F               	movlw	63
 16291  010338  6E0C               	movwf	(btemp+11)^0,c
 16292                           
 16293                           ;stkvar	_u @ sp[(-56)+12]
 16294  01033A  0ED4               	movlw	-44
 16295  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 16296  010342  0ED5               	movlw	-43
 16297  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16298  01034A  0ED6               	movlw	-42
 16299  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16300  010352  0ED7               	movlw	-41
 16301  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 16302                           
 16303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 16304                           ;stkvar	_e @ sp[(-56)+34]
 16305  01035A  0EEA               	movlw	-22
 16306  01035C  6AE3               	clrf	plusw1,c
 16307  01035E  0EEB               	movlw	-21
 16308  010360  6AE3               	clrf	plusw1,c
 16309                           
 16310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 16311  010362  0E00               	movlw	0
 16312  010364  6EE6               	movwf	postinc1,c
 16313  010366  0E00               	movlw	0
 16314  010368  6EE6               	movwf	postinc1,c
 16315  01036A  0E00               	movlw	0
 16316  01036C  6EE6               	movwf	postinc1,c
 16317  01036E  0E00               	movlw	0
 16318  010370  6EE6               	movwf	postinc1,c
 16319                           
 16320                           ;stkvar	_g @ sp[(-60)+16]
 16321  010372  0ED4               	movlw	-44
 16322  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 16323  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 16324  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 16325  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 16326  01038C  EC49  F0D2         	call	___fleq	;wreg free
 16327  010390  A001               	btfss	btemp& (0+255),0,c
 16328  010392  D039               	goto	l12096
 16329  010394  D0BC               	goto	u11250
 16330  010396                     l12092:
 16331                           
 16332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 16333  010396  0E00               	movlw	0
 16334  010398  6EE6               	movwf	postinc1,c
 16335  01039A  0E00               	movlw	0
 16336  01039C  6EE6               	movwf	postinc1,c
 16337  01039E  0E20               	movlw	32
 16338  0103A0  6EE6               	movwf	postinc1,c
 16339  0103A2  0E41               	movlw	65
 16340  0103A4  6EE6               	movwf	postinc1,c
 16341                           
 16342                           ;stkvar	_u @ sp[(-60)+12]
 16343  0103A6  0ED0               	movlw	-48
 16344  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16345  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16346  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 16347  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 16348  0103C0  ECAD  F09E         	call	___flmul	;wreg free
 16349                           
 16350                           ;stkvar	_u @ sp[(-56)+12]
 16351  0103C4  0ED4               	movlw	-44
 16352  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 16353  0103CC  0ED5               	movlw	-43
 16354  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16355  0103D4  0ED6               	movlw	-42
 16356  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16357  0103DC  0ED7               	movlw	-41
 16358  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16359                           
 16360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 16361                           ;stkvar	_e @ sp[(-56)+34]
 16362  0103E4  0EEA               	movlw	-22
 16363  0103E6  50E3               	movf	plusw1,w,c
 16364  0103E8  0F01               	addlw	1
 16365  0103EA  6E01               	movwf	btemp^0,c
 16366  0103EC  0EEA               	movlw	-22
 16367  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 16368  0103F4  6A01               	clrf	btemp^0,c
 16369  0103F6  0EEB               	movlw	-21
 16370  0103F8  50E3               	movf	plusw1,w,c
 16371  0103FA  2001               	addwfc	btemp^0,w,c
 16372  0103FC  6E01               	movwf	btemp^0,c
 16373  0103FE  0EEB               	movlw	-21
 16374  010400  0060  F007  FFE3   	movff	btemp,plusw1
 16375  010406                     l12096:
 16376                           
 16377                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 16378  010406  0E00               	movlw	0
 16379  010408  6EE6               	movwf	postinc1,c
 16380  01040A  0E00               	movlw	0
 16381  01040C  6EE6               	movwf	postinc1,c
 16382  01040E  0E20               	movlw	32
 16383  010410  6EE6               	movwf	postinc1,c
 16384  010412  0E41               	movlw	65
 16385  010414  6EE6               	movwf	postinc1,c
 16386                           
 16387                           ;stkvar	_u @ sp[(-60)+12]
 16388  010416  0ED0               	movlw	-48
 16389  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 16390  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 16391  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 16392  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 16393  010430  ECAD  F09E         	call	___flmul	;wreg free
 16394  010434  0060  F007  FFE6   	movff	btemp,postinc1
 16395  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16396  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16397  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 16398                           
 16399                           ;stkvar	_g @ sp[(-60)+16]
 16400  01044C  0ED4               	movlw	-44
 16401  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 16402  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 16403  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 16404  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 16405  010466  ECE0  F0C7         	call	___flge	;wreg free
 16406  01046A  A001               	btfss	btemp& (0+255),0,c
 16407  01046C  D032               	goto	l12102
 16408  01046E  D793               	goto	l12092
 16409  010470                     l12098:
 16410                           
 16411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 16412  010470  0E00               	movlw	0
 16413  010472  6EE6               	movwf	postinc1,c
 16414  010474  0E00               	movlw	0
 16415  010476  6EE6               	movwf	postinc1,c
 16416  010478  0E20               	movlw	32
 16417  01047A  6EE6               	movwf	postinc1,c
 16418  01047C  0E41               	movlw	65
 16419  01047E  6EE6               	movwf	postinc1,c
 16420                           
 16421                           ;stkvar	_u @ sp[(-60)+12]
 16422  010480  0ED0               	movlw	-48
 16423  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 16424  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 16425  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 16426  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 16427  01049A  ECA0  F0A6         	call	___fldiv	;wreg free
 16428                           
 16429                           ;stkvar	_u @ sp[(-56)+12]
 16430  01049E  0ED4               	movlw	-44
 16431  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 16432  0104A6  0ED5               	movlw	-43
 16433  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16434  0104AE  0ED6               	movlw	-42
 16435  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16436  0104B6  0ED7               	movlw	-41
 16437  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16438                           
 16439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 16440                           ;stkvar	_e @ sp[(-56)+34]
 16441  0104BE  50E1               	movf	fsr1l,w,c
 16442  0104C0  0FEA               	addlw	-22
 16443  0104C2  6ED9               	movwf	fsr2l,c
 16444  0104C4  50E2               	movf	fsr1h,w,c
 16445  0104C6  6EDA               	movwf	fsr2h,c
 16446  0104C8  0EFF               	movlw	255
 16447  0104CA  22DA               	addwfc	fsr2h,f,c
 16448  0104CC  06DE               	decf	postinc2,f,c
 16449  0104CE  0E00               	movlw	0
 16450  0104D0  5ADD               	subwfb	postdec2,f,c
 16451  0104D2                     l12102:
 16452                           
 16453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 16454                           ;stkvar	_u @ sp[(-56)+12]
 16455  0104D2  0ED4               	movlw	-44
 16456  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16457  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16458  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 16459  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 16460                           
 16461                           ;stkvar	_g @ sp[(-60)+16]
 16462  0104EC  0ED4               	movlw	-44
 16463  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16464  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16465  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 16466  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 16467  010506  ECE0  F0C7         	call	___flge	;wreg free
 16468  01050A  A001               	btfss	btemp& (0+255),0,c
 16469  01050C  D7B1               	goto	l12098
 16470  01050E                     u11250:
 16471                           
 16472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 16473                           ;stkvar	_c @ sp[(-56)+-7]
 16474  01050E  0EC1               	movlw	-63
 16475  010510  50E3               	movf	plusw1,w,c
 16476  010512  6EE6               	movwf	postinc1,c
 16477  010514  0E00               	movlw	0
 16478  010516  6EE6               	movwf	postinc1,c
 16479  010518  ECB1  F0D6         	call	_tolower	;wreg free
 16480                           
 16481                           ;stkvar	_mode @ sp[(-56)+54]
 16482  01051C  0EFE               	movlw	-2
 16483  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 16484                           
 16485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 16486                           ;stkvar	_mode @ sp[(-56)+54]
 16487                           ;stkvar	_nmode @ sp[(-56)+55]
 16488  010524  0EFE               	movlw	-2
 16489  010526  006F FF8C  F001    	movff	plusw1,btemp
 16490  01052C  0EFF               	movlw	-1
 16491  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 16492                           
 16493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 16494                           ;stkvar	_mode @ sp[(-56)+54]
 16495  010534  0EFE               	movlw	-2
 16496  010536  006F FF8C  F001    	movff	plusw1,btemp
 16497  01053C  0E67               	movlw	103
 16498  01053E  1801               	xorwf	btemp^0,w,c
 16499  010540  A4D8               	btfss	status,2,c
 16500  010542  D025               	goto	l12120
 16501                           
 16502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 16503  010544  503C               	movf	_prec^0,w,c
 16504  010546  103D               	iorwf	(_prec+1)^0,w,c
 16505  010548  A4D8               	btfss	status,2,c
 16506  01054A  D004               	goto	l12114
 16507                           
 16508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 16509  01054C  0E00               	movlw	0
 16510  01054E  6E3D               	movwf	(_prec+1)^0,c
 16511  010550  0E01               	movlw	1
 16512  010552  6E3C               	movwf	_prec^0,c
 16513  010554                     l12114:
 16514                           
 16515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 16516  010554  BE3D               	btfsc	(_prec+1)^0,7,c
 16517  010556  D005               	goto	u11280
 16518  010558  503D               	movf	(_prec+1)^0,w,c
 16519  01055A  E110               	bnz	l12118
 16520  01055C  043C               	decf	_prec^0,w,c
 16521  01055E  B0D8               	btfsc	status,0,c
 16522  010560  D00D               	goto	l12118
 16523  010562                     u11280:
 16524  010562  0E06               	movlw	6
 16525  010564  6E0B               	movwf	(btemp+10)^0,c
 16526  010566  0E00               	movlw	0
 16527  010568  6E0C               	movwf	(btemp+11)^0,c
 16528                           
 16529                           ;stkvar	_p @ sp[(-56)+40]
 16530  01056A  0EF0               	movlw	-16
 16531  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16532  010572  0EF1               	movlw	-15
 16533  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 16534  01057A  D00C               	goto	l12126
 16535  01057C                     l12118:
 16536                           
 16537                           ;stkvar	_p @ sp[(-56)+40]
 16538  01057C  0EF0               	movlw	-16
 16539  01057E  0060  F0F3  FFE3   	movff	_prec,plusw1
 16540  010584  0EF1               	movlw	-15
 16541  010586  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16542  01058C  D003               	goto	l12126
 16543  01058E                     l12120:
 16544                           
 16545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 16546  01058E  AE3D               	btfss	(_prec+1)^0,7,c
 16547  010590  D7F5               	goto	l12118
 16548  010592  D7E7               	goto	u11280
 16549  010594                     l12126:
 16550                           
 16551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 16552                           ;stkvar	_mode @ sp[(-56)+54]
 16553  010594  0EFE               	movlw	-2
 16554  010596  006F FF8C  F001    	movff	plusw1,btemp
 16555  01059C  0E67               	movlw	103
 16556  01059E  1801               	xorwf	btemp^0,w,c
 16557  0105A0  A4D8               	btfss	status,2,c
 16558  0105A2  D02F               	goto	l12136
 16559                           
 16560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 16561                           ;stkvar	_e @ sp[(-56)+34]
 16562  0105A4  0EEB               	movlw	-21
 16563  0105A6  AEE3               	btfss	plusw1,7,c
 16564  0105A8  D00E               	goto	u11310
 16565  0105AA  0EEA               	movlw	-22
 16566  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 16567  0105B2  0EFC               	movlw	252
 16568  0105B4  5E01               	subwf	btemp^0,f,c
 16569  0105B6  0EEB               	movlw	-21
 16570  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 16571  0105BE  0EFF               	movlw	255
 16572  0105C0  5A01               	subwfb	btemp^0,f,c
 16573  0105C2  A0D8               	btfss	status,0,c
 16574  0105C4  D018               	goto	l12134
 16575  0105C6                     u11310:
 16576                           
 16577                           ;stkvar	_e @ sp[(-56)+34]
 16578                           ;stkvar	_p @ sp[(-56)+40]
 16579  0105C6  0EF0               	movlw	-16
 16580  0105C8  50E3               	movf	plusw1,w,c
 16581  0105CA  0FFF               	addlw	255
 16582  0105CC  6E0B               	movwf	(btemp+10)^0,c
 16583  0105CE  0EF1               	movlw	-15
 16584  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 16585  0105D6  0EFF               	movlw	255
 16586  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 16587  0105DA  0EEA               	movlw	-22
 16588  0105DC  50E3               	movf	plusw1,w,c
 16589  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 16590  0105E0  500C               	movf	(btemp+11)^0,w,c
 16591  0105E2  0A80               	xorlw	128
 16592  0105E4  6E01               	movwf	btemp^0,c
 16593  0105E6  0EEB               	movlw	-21
 16594  0105E8  50E3               	movf	plusw1,w,c
 16595  0105EA  0A80               	xorlw	128
 16596  0105EC  5801               	subwfb	btemp^0,w,c
 16597  0105EE  A0D8               	btfss	status,0,c
 16598  0105F0  D002               	goto	l12134
 16599                           
 16600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 16601  0105F2  0E66               	movlw	102
 16602  0105F4  D001               	goto	L17
 16603  0105F6                     l12134:
 16604                           
 16605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 16606  0105F6  0E65               	movlw	101
 16607  0105F8                     L17:
 16608  0105F8  6E0C               	movwf	(btemp+11)^0,c
 16609                           
 16610                           ;stkvar	_nmode @ sp[(-56)+55]
 16611  0105FA  0EFF               	movlw	-1
 16612  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 16613  010602                     l12136:
 16614                           
 16615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 16616                           ;stkvar	_p @ sp[(-56)+40]
 16617                           ;stkvar	_m @ sp[(-56)+48]
 16618  010602  0EF0               	movlw	-16
 16619  010604  006F FF8C  F001    	movff	plusw1,btemp
 16620  01060A  0EF8               	movlw	-8
 16621  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 16622  010612  0EF1               	movlw	-15
 16623  010614  006F FF8C  F001    	movff	plusw1,btemp
 16624  01061A  0EF9               	movlw	-7
 16625  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 16626                           
 16627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 16628                           ;stkvar	_mode @ sp[(-56)+54]
 16629  010622  0EFE               	movlw	-2
 16630  010624  006F FF8C  F001    	movff	plusw1,btemp
 16631  01062A  0E67               	movlw	103
 16632  01062C  1801               	xorwf	btemp^0,w,c
 16633  01062E  A4D8               	btfss	status,2,c
 16634  010630  D00B               	goto	u11350
 16635                           
 16636                           ;stkvar	_nmode @ sp[(-56)+55]
 16637  010632  0EFF               	movlw	-1
 16638  010634  006F FF8C  F001    	movff	plusw1,btemp
 16639  01063A  0E66               	movlw	102
 16640  01063C  1801               	xorwf	btemp^0,w,c
 16641  01063E  A4D8               	btfss	status,2,c
 16642  010640  D014               	goto	l2231
 16643                           
 16644                           ;stkvar	_e @ sp[(-56)+34]
 16645  010642  0EEB               	movlw	-21
 16646  010644  AEE3               	btfss	plusw1,7,c
 16647  010646  D011               	goto	l2231
 16648  010648                     u11350:
 16649                           
 16650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16651                           ;stkvar	_m @ sp[(-56)+48]
 16652  010648  0EF8               	movlw	-8
 16653  01064A  50E3               	movf	plusw1,w,c
 16654  01064C  0F01               	addlw	1
 16655  01064E  6E01               	movwf	btemp^0,c
 16656  010650  0EF8               	movlw	-8
 16657  010652  0060  F007  FFE3   	movff	btemp,plusw1
 16658  010658  6A01               	clrf	btemp^0,c
 16659  01065A  0EF9               	movlw	-7
 16660  01065C  50E3               	movf	plusw1,w,c
 16661  01065E  2001               	addwfc	btemp^0,w,c
 16662  010660  6E01               	movwf	btemp^0,c
 16663  010662  0EF9               	movlw	-7
 16664  010664  0060  F007  FFE3   	movff	btemp,plusw1
 16665  01066A                     l2231:
 16666                           
 16667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16668                           ;stkvar	_nmode @ sp[(-56)+55]
 16669  01066A  0EFF               	movlw	-1
 16670  01066C  006F FF8C  F001    	movff	plusw1,btemp
 16671  010672  0E66               	movlw	102
 16672  010674  1801               	xorwf	btemp^0,w,c
 16673  010676  A4D8               	btfss	status,2,c
 16674  010678  D03B               	goto	l12156
 16675                           
 16676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16677                           ;stkvar	_e @ sp[(-56)+34]
 16678  01067A  0EEB               	movlw	-21
 16679  01067C  AEE3               	btfss	plusw1,7,c
 16680  01067E  D01C               	goto	l12152
 16681                           
 16682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16683  010680  0E00               	movlw	0
 16684  010682  6E09               	movwf	(btemp+8)^0,c
 16685  010684  0E00               	movlw	0
 16686  010686  6E0A               	movwf	(btemp+9)^0,c
 16687  010688  0E80               	movlw	128
 16688  01068A  6E0B               	movwf	(btemp+10)^0,c
 16689  01068C  0E3F               	movlw	63
 16690  01068E  6E0C               	movwf	(btemp+11)^0,c
 16691                           
 16692                           ;stkvar	_u @ sp[(-56)+12]
 16693  010690  0ED4               	movlw	-44
 16694  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 16695  010698  0ED5               	movlw	-43
 16696  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16697  0106A0  0ED6               	movlw	-42
 16698  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16699  0106A8  0ED7               	movlw	-41
 16700  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 16701                           
 16702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16703                           ;stkvar	_e @ sp[(-56)+34]
 16704  0106B0  0EEA               	movlw	-22
 16705  0106B2  6AE3               	clrf	plusw1,c
 16706  0106B4  0EEB               	movlw	-21
 16707  0106B6  6AE3               	clrf	plusw1,c
 16708  0106B8                     l12152:
 16709                           
 16710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16711                           ;stkvar	_mode @ sp[(-56)+54]
 16712  0106B8  0EFE               	movlw	-2
 16713  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 16714  0106C0  0E67               	movlw	103
 16715  0106C2  1801               	xorwf	btemp^0,w,c
 16716  0106C4  B4D8               	btfsc	status,2,c
 16717  0106C6  D014               	goto	l12156
 16718                           
 16719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16720                           ;stkvar	_e @ sp[(-56)+34]
 16721                           ;stkvar	_m @ sp[(-56)+48]
 16722  0106C8  0EF8               	movlw	-8
 16723  0106CA  50E3               	movf	plusw1,w,c
 16724  0106CC  6E01               	movwf	btemp^0,c
 16725  0106CE  0EEA               	movlw	-22
 16726  0106D0  50E3               	movf	plusw1,w,c
 16727  0106D2  2601               	addwf	btemp^0,f,c
 16728  0106D4  0EF8               	movlw	-8
 16729  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 16730  0106DC  0EF9               	movlw	-7
 16731  0106DE  50E3               	movf	plusw1,w,c
 16732  0106E0  6E01               	movwf	btemp^0,c
 16733  0106E2  0EEB               	movlw	-21
 16734  0106E4  50E3               	movf	plusw1,w,c
 16735  0106E6  2201               	addwfc	btemp^0,f,c
 16736  0106E8  0EF9               	movlw	-7
 16737  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 16738  0106F0                     l12156:
 16739                           
 16740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16741                           ;stkvar	_i @ sp[(-56)+36]
 16742  0106F0  0EEC               	movlw	-20
 16743  0106F2  6AE3               	clrf	plusw1,c
 16744  0106F4  0EED               	movlw	-19
 16745  0106F6  6AE3               	clrf	plusw1,c
 16746                           
 16747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16748                           ;stkvar	_g @ sp[(-56)+16]
 16749  0106F8  0ED8               	movlw	-40
 16750  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 16751  010700  0ED9               	movlw	-39
 16752  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 16753  010708  0EDA               	movlw	-38
 16754  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16755  010710  0EDB               	movlw	-37
 16756  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 16757                           
 16758                           ;stkvar	_h @ sp[(-56)+24]
 16759  010718  0EE0               	movlw	-32
 16760  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16761  010720  0EE1               	movlw	-31
 16762  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16763  010728  0EE2               	movlw	-30
 16764  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16765  010730  0EE3               	movlw	-29
 16766  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 16767                           
 16768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16769                           ;stkvar	_u @ sp[(-56)+12]
 16770  010738  0ED4               	movlw	-44
 16771  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 16772  010740  0ED5               	movlw	-43
 16773  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 16774  010748  0ED6               	movlw	-42
 16775  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 16776  010750  0ED7               	movlw	-41
 16777  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 16778                           
 16779                           ;stkvar	_ou @ sp[(-56)+28]
 16780  010758  0EE4               	movlw	-28
 16781  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 16782  010760  0EE5               	movlw	-27
 16783  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 16784  010768  0EE6               	movlw	-26
 16785  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16786  010770  0EE7               	movlw	-25
 16787  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 16788                           
 16789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16790  010778  D0D6               	goto	l12172
 16791  01077A                     l12162:
 16792                           
 16793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16794                           ;stkvar	_u @ sp[(-56)+12]
 16795  01077A  0ED4               	movlw	-44
 16796  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16797  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16798  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16799  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16800                           
 16801                           ;stkvar	_h @ sp[(-60)+24]
 16802  010794  0EDC               	movlw	-36
 16803  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16804  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16805  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16806  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16807  0107AE  ECA0  F0A6         	call	___fldiv	;wreg free
 16808  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 16809  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16810  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16811  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 16812  0107CA  EC2A  F0B2         	call	_floorf	;wreg free
 16813                           
 16814                           ;stkvar	_l @ sp[(-56)+20]
 16815  0107CE  0EDC               	movlw	-36
 16816  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 16817  0107D6  0EDD               	movlw	-35
 16818  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16819  0107DE  0EDE               	movlw	-34
 16820  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16821  0107E6  0EDF               	movlw	-33
 16822  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 16823                           
 16824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16825                           ;stkvar	_l @ sp[(-56)+20]
 16826  0107EE  0EDC               	movlw	-36
 16827  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16828  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16829  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16830  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16831  010808  EC27  F0C7         	call	___fltol	;wreg free
 16832  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 16833  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 16834                           
 16835                           ;stkvar	_d @ sp[(-56)+44]
 16836  010818  0EF4               	movlw	-12
 16837  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16838  010820  0EF5               	movlw	-11
 16839  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 16840                           
 16841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16842                           ;stkvar	_u @ sp[(-56)+12]
 16843  010828  0ED4               	movlw	-44
 16844  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16845  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16846  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16847  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16848                           
 16849                           ;stkvar	_l @ sp[(-60)+20]
 16850  010842  0ED8               	movlw	-40
 16851  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16852  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16853  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16854  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16855  01085C  ECAD  F09E         	call	___flmul	;wreg free
 16856  010860  0060  F007  FFE6   	movff	btemp,postinc1
 16857  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 16858  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 16859  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 16860                           
 16861                           ;stkvar	_h @ sp[(-60)+24]
 16862  010878  0EDC               	movlw	-36
 16863  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16864  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16865  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16866  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16867  010892  EC03  F0DB         	call	___flsub	;wreg free
 16868                           
 16869                           ;stkvar	_h @ sp[(-56)+24]
 16870  010896  0EE0               	movlw	-32
 16871  010898  0060  F007  FFE3   	movff	btemp,plusw1
 16872  01089E  0EE1               	movlw	-31
 16873  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16874  0108A6  0EE2               	movlw	-30
 16875  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16876  0108AE  0EE3               	movlw	-29
 16877  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 16878                           
 16879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16880  0108B6  0E00               	movlw	0
 16881  0108B8  6EE6               	movwf	postinc1,c
 16882  0108BA  0E00               	movlw	0
 16883  0108BC  6EE6               	movwf	postinc1,c
 16884  0108BE  0E20               	movlw	32
 16885  0108C0  6EE6               	movwf	postinc1,c
 16886  0108C2  0E41               	movlw	65
 16887  0108C4  6EE6               	movwf	postinc1,c
 16888                           
 16889                           ;stkvar	_u @ sp[(-60)+12]
 16890  0108C6  0ED0               	movlw	-48
 16891  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16892  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16893  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16894  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16895  0108E0  ECA0  F0A6         	call	___fldiv	;wreg free
 16896                           
 16897                           ;stkvar	_u @ sp[(-56)+12]
 16898  0108E4  0ED4               	movlw	-44
 16899  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 16900  0108EC  0ED5               	movlw	-43
 16901  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16902  0108F4  0ED6               	movlw	-42
 16903  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16904  0108FC  0ED7               	movlw	-41
 16905  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 16906                           
 16907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16908                           ;stkvar	_i @ sp[(-56)+36]
 16909  010904  0EEC               	movlw	-20
 16910  010906  50E3               	movf	plusw1,w,c
 16911  010908  0F01               	addlw	1
 16912  01090A  6E01               	movwf	btemp^0,c
 16913  01090C  0EEC               	movlw	-20
 16914  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 16915  010914  6A01               	clrf	btemp^0,c
 16916  010916  0EED               	movlw	-19
 16917  010918  50E3               	movf	plusw1,w,c
 16918  01091A  2001               	addwfc	btemp^0,w,c
 16919  01091C  6E01               	movwf	btemp^0,c
 16920  01091E  0EED               	movlw	-19
 16921  010920  0060  F007  FFE3   	movff	btemp,plusw1
 16922  010926                     l12172:
 16923                           
 16924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16925                           ;stkvar	_m @ sp[(-56)+48]
 16926                           ;stkvar	_i @ sp[(-56)+36]
 16927  010926  50E1               	movf	fsr1l,w,c
 16928  010928  0FEC               	addlw	-20
 16929  01092A  6ED9               	movwf	fsr2l,c
 16930  01092C  50E2               	movf	fsr1h,w,c
 16931  01092E  6EDA               	movwf	fsr2h,c
 16932  010930  0EFF               	movlw	255
 16933  010932  22DA               	addwfc	fsr2h,f,c
 16934  010934  0EF8               	movlw	-8
 16935  010936  50E3               	movf	plusw1,w,c
 16936  010938  5CDE               	subwf	postinc2,w,c
 16937  01093A  50DE               	movf	postinc2,w,c
 16938  01093C  0A80               	xorlw	128
 16939  01093E  6E01               	movwf	btemp^0,c
 16940  010940  0EF9               	movlw	-7
 16941  010942  50E3               	movf	plusw1,w,c
 16942  010944  0A80               	xorlw	128
 16943  010946  5801               	subwfb	btemp^0,w,c
 16944  010948  A0D8               	btfss	status,0,c
 16945  01094A  D717               	goto	l12162
 16946                           
 16947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16948  01094C  0E00               	movlw	0
 16949  01094E  6EE6               	movwf	postinc1,c
 16950  010950  0E00               	movlw	0
 16951  010952  6EE6               	movwf	postinc1,c
 16952  010954  0EA0               	movlw	160
 16953  010956  6EE6               	movwf	postinc1,c
 16954  010958  0E40               	movlw	64
 16955  01095A  6EE6               	movwf	postinc1,c
 16956                           
 16957                           ;stkvar	_u @ sp[(-60)+12]
 16958  01095C  0ED0               	movlw	-48
 16959  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16960  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16961  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16962  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16963  010976  ECAD  F09E         	call	___flmul	;wreg free
 16964                           
 16965                           ;stkvar	_l @ sp[(-56)+20]
 16966  01097A  0EDC               	movlw	-36
 16967  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 16968  010982  0EDD               	movlw	-35
 16969  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16970  01098A  0EDE               	movlw	-34
 16971  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 16972  010992  0EDF               	movlw	-33
 16973  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 16974                           
 16975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16976                           ;stkvar	_l @ sp[(-56)+20]
 16977  01099A  0EDC               	movlw	-36
 16978  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16979  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16980  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16981  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16982                           
 16983                           ;stkvar	_h @ sp[(-60)+24]
 16984  0109B4  0EDC               	movlw	-36
 16985  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16986  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16987  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16988  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16989  0109CE  ECE0  F0C7         	call	___flge	;wreg free
 16990  0109D2  A001               	btfss	btemp& (0+255),0,c
 16991  0109D4  D021               	goto	u11420
 16992                           
 16993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16994                           ;stkvar	_l @ sp[(-56)+20]
 16995                           
 16996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16997                           
 16998                           ;stkvar	_l @ sp[(-56)+20]
 16999                           
 17000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 17001  0109D6  0EDC               	movlw	-36
 17002  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 17003  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 17004  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 17005  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 17006                           
 17007                           ;stkvar	_h @ sp[(-60)+24]
 17008  0109F0  0EDC               	movlw	-36
 17009  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 17010  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 17011  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 17012  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 17013  010A0A  EC49  F0D2         	call	___fleq	;wreg free
 17014  010A0E  A001               	btfss	btemp& (0+255),0,c
 17015  010A10  D01B               	goto	l12186
 17016                           
 17017                           ;stkvar	_d @ sp[(-56)+44]
 17018  010A12  0EF4               	movlw	-12
 17019  010A14  B0E3               	btfsc	plusw1,0,c
 17020  010A16  D018               	goto	l12186
 17021  010A18                     u11420:
 17022                           
 17023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 17024  010A18  0E00               	movlw	0
 17025  010A1A  6E09               	movwf	(btemp+8)^0,c
 17026  010A1C  0E00               	movlw	0
 17027  010A1E  6E0A               	movwf	(btemp+9)^0,c
 17028  010A20  0E00               	movlw	0
 17029  010A22  6E0B               	movwf	(btemp+10)^0,c
 17030  010A24  0E00               	movlw	0
 17031  010A26  6E0C               	movwf	(btemp+11)^0,c
 17032                           
 17033                           ;stkvar	_l @ sp[(-56)+20]
 17034  010A28  0EDC               	movlw	-36
 17035  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 17036  010A30  0EDD               	movlw	-35
 17037  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17038  010A38  0EDE               	movlw	-34
 17039  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17040  010A40  0EDF               	movlw	-33
 17041  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 17042  010A48                     l12186:
 17043                           
 17044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 17045                           ;stkvar	_l @ sp[(-56)+20]
 17046  010A48  0EDC               	movlw	-36
 17047  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 17048  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 17049  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 17050  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17051                           
 17052                           ;stkvar	_g @ sp[(-60)+16]
 17053  010A62  0ED4               	movlw	-44
 17054  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 17055  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 17056  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 17057  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 17058  010A7C  ECC2  F0A2         	call	___fladd	;wreg free
 17059                           
 17060                           ;stkvar	_h @ sp[(-56)+24]
 17061  010A80  0EE0               	movlw	-32
 17062  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 17063  010A88  0EE1               	movlw	-31
 17064  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17065  010A90  0EE2               	movlw	-30
 17066  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17067  010A98  0EE3               	movlw	-29
 17068  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 17069                           
 17070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 17071                           ;stkvar	_ou @ sp[(-56)+28]
 17072  010AA0  0EE4               	movlw	-28
 17073  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 17074  010AA8  0EE5               	movlw	-27
 17075  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 17076  010AB0  0EE6               	movlw	-26
 17077  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 17078  010AB8  0EE7               	movlw	-25
 17079  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 17080                           
 17081                           ;stkvar	_u @ sp[(-56)+12]
 17082  010AC0  0ED4               	movlw	-44
 17083  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 17084  010AC8  0ED5               	movlw	-43
 17085  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17086  010AD0  0ED6               	movlw	-42
 17087  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17088  010AD8  0ED7               	movlw	-41
 17089  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17090                           
 17091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 17092                           ;stkvar	_nmode @ sp[(-56)+55]
 17093  010AE0  0EFF               	movlw	-1
 17094  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 17095  010AE8  0E65               	movlw	101
 17096  010AEA  1801               	xorwf	btemp^0,w,c
 17097  010AEC  B4D8               	btfsc	status,2,c
 17098  010AEE  D011               	goto	l12194
 17099                           
 17100                           ;stkvar	_e @ sp[(-56)+34]
 17101                           ;stkvar	_ne @ sp[(-56)+46]
 17102  010AF0  0EEA               	movlw	-22
 17103  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 17104  010AF8  0EF6               	movlw	-10
 17105  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 17106  010B00  0EEB               	movlw	-21
 17107  010B02  006F FF8C  F001    	movff	plusw1,btemp
 17108  010B08  0EF7               	movlw	-9
 17109  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 17110  010B10  D004               	goto	l2246
 17111  010B12                     l12194:
 17112                           
 17113                           ;stkvar	_ne @ sp[(-56)+46]
 17114  010B12  0EF6               	movlw	-10
 17115  010B14  6AE3               	clrf	plusw1,c
 17116  010B16  0EF7               	movlw	-9
 17117  010B18  6AE3               	clrf	plusw1,c
 17118  010B1A                     l2246:
 17119                           
 17120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 17121                           ;stkvar	_pp @ sp[(-56)+50]
 17122  010B1A  0EFA               	movlw	-6
 17123  010B1C  6AE3               	clrf	plusw1,c
 17124  010B1E  0EFB               	movlw	-5
 17125  010B20  6AE3               	clrf	plusw1,c
 17126                           
 17127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 17128                           ;stkvar	_t @ sp[(-56)+52]
 17129  010B22  0EFC               	movlw	-4
 17130  010B24  6AE3               	clrf	plusw1,c
 17131  010B26  0EFD               	movlw	-3
 17132  010B28  6AE3               	clrf	plusw1,c
 17133                           
 17134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 17135                           ;stkvar	_i @ sp[(-56)+36]
 17136  010B2A  0EEC               	movlw	-20
 17137  010B2C  6AE3               	clrf	plusw1,c
 17138  010B2E  0EED               	movlw	-19
 17139  010B30  6AE3               	clrf	plusw1,c
 17140                           
 17141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17142  010B32  D1B7               	goto	l12246
 17143  010B34                     l12196:
 17144                           
 17145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 17146                           ;stkvar	_u @ sp[(-56)+12]
 17147  010B34  0ED4               	movlw	-44
 17148  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 17149  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17150  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 17151  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 17152                           
 17153                           ;stkvar	_h @ sp[(-60)+24]
 17154  010B4E  0EDC               	movlw	-36
 17155  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 17156  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 17157  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 17158  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 17159  010B68  ECA0  F0A6         	call	___fldiv	;wreg free
 17160  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 17161  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17162  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17163  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 17164  010B84  EC2A  F0B2         	call	_floorf	;wreg free
 17165                           
 17166                           ;stkvar	_l @ sp[(-56)+20]
 17167  010B88  0EDC               	movlw	-36
 17168  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 17169  010B90  0EDD               	movlw	-35
 17170  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17171  010B98  0EDE               	movlw	-34
 17172  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17173  010BA0  0EDF               	movlw	-33
 17174  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 17175                           
 17176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 17177                           ;stkvar	_l @ sp[(-56)+20]
 17178  010BA8  0EDC               	movlw	-36
 17179  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 17180  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 17181  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 17182  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 17183  010BC2  EC27  F0C7         	call	___fltol	;wreg free
 17184  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 17185  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 17186                           
 17187                           ;stkvar	_d @ sp[(-56)+44]
 17188  010BD2  0EF4               	movlw	-12
 17189  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17190  010BDA  0EF5               	movlw	-11
 17191  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17192                           
 17193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 17194  010BE2  B83E               	btfsc	_flags^0,4,c
 17195  010BE4  D026               	goto	l12210
 17196                           
 17197                           ;stkvar	_d @ sp[(-56)+44]
 17198  010BE6  0EF4               	movlw	-12
 17199  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 17200  010BEE  0EF5               	movlw	-11
 17201  010BF0  50E3               	movf	plusw1,w,c
 17202  010BF2  1001               	iorwf	btemp^0,w,c
 17203  010BF4  A4D8               	btfss	status,2,c
 17204  010BF6  D01D               	goto	l12210
 17205                           
 17206                           ;stkvar	_mode @ sp[(-56)+54]
 17207  010BF8  0EFE               	movlw	-2
 17208  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 17209  010C00  0E67               	movlw	103
 17210  010C02  1801               	xorwf	btemp^0,w,c
 17211  010C04  A4D8               	btfss	status,2,c
 17212  010C06  D015               	goto	l12210
 17213                           
 17214                           ;stkvar	_ne @ sp[(-56)+46]
 17215  010C08  0EF7               	movlw	-9
 17216  010C0A  AEE3               	btfss	plusw1,7,c
 17217  010C0C  D012               	goto	l12210
 17218                           
 17219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 17220                           ;stkvar	_t @ sp[(-56)+52]
 17221  010C0E  0EFC               	movlw	-4
 17222  010C10  50E3               	movf	plusw1,w,c
 17223  010C12  0F01               	addlw	1
 17224  010C14  6E01               	movwf	btemp^0,c
 17225  010C16  0EFC               	movlw	-4
 17226  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 17227  010C1E  6A01               	clrf	btemp^0,c
 17228  010C20  0EFD               	movlw	-3
 17229  010C22  50E3               	movf	plusw1,w,c
 17230  010C24  2001               	addwfc	btemp^0,w,c
 17231  010C26  6E01               	movwf	btemp^0,c
 17232  010C28  0EFD               	movlw	-3
 17233  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 17234                           
 17235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 17236  010C30  D0AF               	goto	l12238
 17237  010C32                     l12210:
 17238                           
 17239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 17240                           ;stkvar	_pp @ sp[(-56)+50]
 17241  010C32  0EFA               	movlw	-6
 17242  010C34  006F FF8C  F001    	movff	plusw1,btemp
 17243  010C3A  0EFB               	movlw	-5
 17244  010C3C  50E3               	movf	plusw1,w,c
 17245  010C3E  1001               	iorwf	btemp^0,w,c
 17246  010C40  A4D8               	btfss	status,2,c
 17247  010C42  D070               	goto	l12230
 17248                           
 17249                           ;stkvar	_ne @ sp[(-56)+46]
 17250  010C44  0EF7               	movlw	-9
 17251  010C46  AEE3               	btfss	plusw1,7,c
 17252  010C48  D06D               	goto	l12230
 17253                           
 17254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 17255                           ;stkvar	_n @ sp[(-56)+32]
 17256  010C4A  0EE8               	movlw	-24
 17257  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17258  010C52  0EE9               	movlw	-23
 17259  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 17260  010C5A  0E97               	movlw	low _dbuf
 17261  010C5C  240B               	addwf	(btemp+10)^0,w,c
 17262  010C5E  6ED9               	movwf	fsr2l,c
 17263  010C60  0E02               	movlw	high _dbuf
 17264  010C62  200C               	addwfc	(btemp+11)^0,w,c
 17265  010C64  6EDA               	movwf	fsr2h,c
 17266  010C66  0E2E               	movlw	46
 17267  010C68  6EDF               	movwf	indf2,c
 17268                           
 17269                           ;stkvar	_n @ sp[(-56)+32]
 17270  010C6A  0EE8               	movlw	-24
 17271  010C6C  50E3               	movf	plusw1,w,c
 17272  010C6E  0F01               	addlw	1
 17273  010C70  6E01               	movwf	btemp^0,c
 17274  010C72  0EE8               	movlw	-24
 17275  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 17276  010C7A  6A01               	clrf	btemp^0,c
 17277  010C7C  0EE9               	movlw	-23
 17278  010C7E  50E3               	movf	plusw1,w,c
 17279  010C80  2001               	addwfc	btemp^0,w,c
 17280  010C82  6E01               	movwf	btemp^0,c
 17281  010C84  0EE9               	movlw	-23
 17282  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 17283                           
 17284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 17285                           ;stkvar	_w @ sp[(-56)+38]
 17286  010C8C  50E1               	movf	fsr1l,w,c
 17287  010C8E  0FEE               	addlw	-18
 17288  010C90  6ED9               	movwf	fsr2l,c
 17289  010C92  50E2               	movf	fsr1h,w,c
 17290  010C94  6EDA               	movwf	fsr2h,c
 17291  010C96  0EFF               	movlw	255
 17292  010C98  22DA               	addwfc	fsr2h,f,c
 17293  010C9A  06DE               	decf	postinc2,f,c
 17294  010C9C  0E00               	movlw	0
 17295  010C9E  5ADD               	subwfb	postdec2,f,c
 17296                           
 17297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 17298  010CA0  0E01               	movlw	1
 17299  010CA2  6E0B               	movwf	(btemp+10)^0,c
 17300  010CA4  0E00               	movlw	0
 17301  010CA6  6E0C               	movwf	(btemp+11)^0,c
 17302                           
 17303                           ;stkvar	_pp @ sp[(-56)+50]
 17304  010CA8  0EFA               	movlw	-6
 17305  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17306  010CB0  0EFB               	movlw	-5
 17307  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 17308  010CB8  D035               	goto	l12230
 17309  010CBA                     l12222:
 17310                           
 17311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 17312                           ;stkvar	_n @ sp[(-56)+32]
 17313  010CBA  0EE8               	movlw	-24
 17314  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17315  010CC2  0EE9               	movlw	-23
 17316  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17317  010CCA  0E97               	movlw	low _dbuf
 17318  010CCC  240B               	addwf	(btemp+10)^0,w,c
 17319  010CCE  6ED9               	movwf	fsr2l,c
 17320  010CD0  0E02               	movlw	high _dbuf
 17321  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 17322  010CD4  6EDA               	movwf	fsr2h,c
 17323  010CD6  0E30               	movlw	48
 17324  010CD8  6EDF               	movwf	indf2,c
 17325                           
 17326                           ;stkvar	_n @ sp[(-56)+32]
 17327  010CDA  0EE8               	movlw	-24
 17328  010CDC  50E3               	movf	plusw1,w,c
 17329  010CDE  0F01               	addlw	1
 17330  010CE0  6E01               	movwf	btemp^0,c
 17331  010CE2  0EE8               	movlw	-24
 17332  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 17333  010CEA  6A01               	clrf	btemp^0,c
 17334  010CEC  0EE9               	movlw	-23
 17335  010CEE  50E3               	movf	plusw1,w,c
 17336  010CF0  2001               	addwfc	btemp^0,w,c
 17337  010CF2  6E01               	movwf	btemp^0,c
 17338  010CF4  0EE9               	movlw	-23
 17339  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 17340                           
 17341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 17342                           ;stkvar	_w @ sp[(-56)+38]
 17343  010CFC  50E1               	movf	fsr1l,w,c
 17344  010CFE  0FEE               	addlw	-18
 17345  010D00  6ED9               	movwf	fsr2l,c
 17346  010D02  50E2               	movf	fsr1h,w,c
 17347  010D04  6EDA               	movwf	fsr2h,c
 17348  010D06  0EFF               	movlw	255
 17349  010D08  22DA               	addwfc	fsr2h,f,c
 17350  010D0A  06DE               	decf	postinc2,f,c
 17351  010D0C  0E00               	movlw	0
 17352  010D0E  5ADD               	subwfb	postdec2,f,c
 17353                           
 17354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 17355                           ;stkvar	_t @ sp[(-56)+52]
 17356  010D10  50E1               	movf	fsr1l,w,c
 17357  010D12  0FFC               	addlw	-4
 17358  010D14  6ED9               	movwf	fsr2l,c
 17359  010D16  50E2               	movf	fsr1h,w,c
 17360  010D18  6EDA               	movwf	fsr2h,c
 17361  010D1A  0EFF               	movlw	255
 17362  010D1C  22DA               	addwfc	fsr2h,f,c
 17363  010D1E  06DE               	decf	postinc2,f,c
 17364  010D20  0E00               	movlw	0
 17365  010D22  5ADD               	subwfb	postdec2,f,c
 17366  010D24                     l12230:
 17367                           
 17368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 17369                           ;stkvar	_t @ sp[(-56)+52]
 17370  010D24  0EFC               	movlw	-4
 17371  010D26  006F FF8C  F001    	movff	plusw1,btemp
 17372  010D2C  0EFD               	movlw	-3
 17373  010D2E  50E3               	movf	plusw1,w,c
 17374  010D30  1001               	iorwf	btemp^0,w,c
 17375  010D32  A4D8               	btfss	status,2,c
 17376  010D34  D7C2               	goto	l12222
 17377                           
 17378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 17379                           ;stkvar	_n @ sp[(-56)+32]
 17380  010D36  0EE8               	movlw	-24
 17381  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 17382  010D3E  0EE9               	movlw	-23
 17383  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 17384  010D46  0E97               	movlw	low _dbuf
 17385  010D48  240B               	addwf	(btemp+10)^0,w,c
 17386  010D4A  6ED9               	movwf	fsr2l,c
 17387  010D4C  0E02               	movlw	high _dbuf
 17388  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 17389  010D50  6EDA               	movwf	fsr2h,c
 17390                           
 17391                           ;stkvar	_d @ sp[(-56)+44]
 17392  010D52  0EF4               	movlw	-12
 17393  010D54  50E3               	movf	plusw1,w,c
 17394  010D56  0F30               	addlw	48
 17395  010D58  6EDF               	movwf	indf2,c
 17396                           
 17397                           ;stkvar	_n @ sp[(-56)+32]
 17398  010D5A  0EE8               	movlw	-24
 17399  010D5C  50E3               	movf	plusw1,w,c
 17400  010D5E  0F01               	addlw	1
 17401  010D60  6E01               	movwf	btemp^0,c
 17402  010D62  0EE8               	movlw	-24
 17403  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 17404  010D6A  6A01               	clrf	btemp^0,c
 17405  010D6C  0EE9               	movlw	-23
 17406  010D6E  50E3               	movf	plusw1,w,c
 17407  010D70  2001               	addwfc	btemp^0,w,c
 17408  010D72  6E01               	movwf	btemp^0,c
 17409  010D74  0EE9               	movlw	-23
 17410  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 17411                           
 17412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 17413                           ;stkvar	_w @ sp[(-56)+38]
 17414  010D7C  50E1               	movf	fsr1l,w,c
 17415  010D7E  0FEE               	addlw	-18
 17416  010D80  6ED9               	movwf	fsr2l,c
 17417  010D82  50E2               	movf	fsr1h,w,c
 17418  010D84  6EDA               	movwf	fsr2h,c
 17419  010D86  0EFF               	movlw	255
 17420  010D88  22DA               	addwfc	fsr2h,f,c
 17421  010D8A  06DE               	decf	postinc2,f,c
 17422  010D8C  0E00               	movlw	0
 17423  010D8E  5ADD               	subwfb	postdec2,f,c
 17424  010D90                     l12238:
 17425                           
 17426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 17427                           ;stkvar	_u @ sp[(-56)+12]
 17428  010D90  0ED4               	movlw	-44
 17429  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 17430  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 17431  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 17432  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 17433                           
 17434                           ;stkvar	_l @ sp[(-60)+20]
 17435  010DAA  0ED8               	movlw	-40
 17436  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 17437  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 17438  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 17439  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 17440  010DC4  ECAD  F09E         	call	___flmul	;wreg free
 17441  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 17442  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17443  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 17444  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 17445                           
 17446                           ;stkvar	_h @ sp[(-60)+24]
 17447  010DE0  0EDC               	movlw	-36
 17448  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 17449  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 17450  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 17451  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 17452  010DFA  EC03  F0DB         	call	___flsub	;wreg free
 17453                           
 17454                           ;stkvar	_h @ sp[(-56)+24]
 17455  010DFE  0EE0               	movlw	-32
 17456  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 17457  010E06  0EE1               	movlw	-31
 17458  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17459  010E0E  0EE2               	movlw	-30
 17460  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17461  010E16  0EE3               	movlw	-29
 17462  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 17463                           
 17464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 17465  010E1E  0E00               	movlw	0
 17466  010E20  6EE6               	movwf	postinc1,c
 17467  010E22  0E00               	movlw	0
 17468  010E24  6EE6               	movwf	postinc1,c
 17469  010E26  0E20               	movlw	32
 17470  010E28  6EE6               	movwf	postinc1,c
 17471  010E2A  0E41               	movlw	65
 17472  010E2C  6EE6               	movwf	postinc1,c
 17473                           
 17474                           ;stkvar	_u @ sp[(-60)+12]
 17475  010E2E  0ED0               	movlw	-48
 17476  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 17477  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 17478  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17479  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 17480  010E48  ECA0  F0A6         	call	___fldiv	;wreg free
 17481                           
 17482                           ;stkvar	_u @ sp[(-56)+12]
 17483  010E4C  0ED4               	movlw	-44
 17484  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 17485  010E54  0ED5               	movlw	-43
 17486  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17487  010E5C  0ED6               	movlw	-42
 17488  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 17489  010E64  0ED7               	movlw	-41
 17490  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 17491                           
 17492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 17493                           ;stkvar	_ne @ sp[(-56)+46]
 17494  010E6C  50E1               	movf	fsr1l,w,c
 17495  010E6E  0FF6               	addlw	-10
 17496  010E70  6ED9               	movwf	fsr2l,c
 17497  010E72  50E2               	movf	fsr1h,w,c
 17498  010E74  6EDA               	movwf	fsr2h,c
 17499  010E76  0EFF               	movlw	255
 17500  010E78  22DA               	addwfc	fsr2h,f,c
 17501  010E7A  06DE               	decf	postinc2,f,c
 17502  010E7C  0E00               	movlw	0
 17503  010E7E  5ADD               	subwfb	postdec2,f,c
 17504                           
 17505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 17506                           ;stkvar	_i @ sp[(-56)+36]
 17507  010E80  0EEC               	movlw	-20
 17508  010E82  50E3               	movf	plusw1,w,c
 17509  010E84  0F01               	addlw	1
 17510  010E86  6E01               	movwf	btemp^0,c
 17511  010E88  0EEC               	movlw	-20
 17512  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 17513  010E90  6A01               	clrf	btemp^0,c
 17514  010E92  0EED               	movlw	-19
 17515  010E94  50E3               	movf	plusw1,w,c
 17516  010E96  2001               	addwfc	btemp^0,w,c
 17517  010E98  6E01               	movwf	btemp^0,c
 17518  010E9A  0EED               	movlw	-19
 17519  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 17520  010EA2                     l12246:
 17521                           
 17522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 17523                           ;stkvar	_m @ sp[(-56)+48]
 17524                           ;stkvar	_i @ sp[(-56)+36]
 17525  010EA2  50E1               	movf	fsr1l,w,c
 17526  010EA4  0FEC               	addlw	-20
 17527  010EA6  6ED9               	movwf	fsr2l,c
 17528  010EA8  50E2               	movf	fsr1h,w,c
 17529  010EAA  6EDA               	movwf	fsr2h,c
 17530  010EAC  0EFF               	movlw	255
 17531  010EAE  22DA               	addwfc	fsr2h,f,c
 17532  010EB0  0EF8               	movlw	-8
 17533  010EB2  50E3               	movf	plusw1,w,c
 17534  010EB4  5CDE               	subwf	postinc2,w,c
 17535  010EB6  50DE               	movf	postinc2,w,c
 17536  010EB8  0A80               	xorlw	128
 17537  010EBA  6E01               	movwf	btemp^0,c
 17538  010EBC  0EF9               	movlw	-7
 17539  010EBE  50E3               	movf	plusw1,w,c
 17540  010EC0  0A80               	xorlw	128
 17541  010EC2  5801               	subwfb	btemp^0,w,c
 17542  010EC4  B0D8               	btfsc	status,0,c
 17543  010EC6  D00E               	goto	u11520
 17544                           
 17545                           ;stkvar	_n @ sp[(-56)+32]
 17546  010EC8  0EE9               	movlw	-23
 17547  010ECA  BEE3               	btfsc	plusw1,7,c
 17548  010ECC  D633               	goto	l12196
 17549  010ECE  0EE9               	movlw	-23
 17550  010ED0  50E3               	movf	plusw1,w,c
 17551  010ED2  E108               	bnz	u11520
 17552  010ED4  0EE8               	movlw	-24
 17553  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 17554  010EDC  0E4B               	movlw	75
 17555  010EDE  5E01               	subwf	btemp^0,f,c
 17556  010EE0  A0D8               	btfss	status,0,c
 17557  010EE2  D628               	goto	l12196
 17558  010EE4                     u11520:
 17559                           
 17560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 17561                           ;stkvar	_pp @ sp[(-56)+50]
 17562  010EE4  0EFA               	movlw	-6
 17563  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 17564  010EEC  0EFB               	movlw	-5
 17565  010EEE  50E3               	movf	plusw1,w,c
 17566  010EF0  1001               	iorwf	btemp^0,w,c
 17567  010EF2  B4D8               	btfsc	status,2,c
 17568  010EF4  A83E               	btfss	_flags^0,4,c
 17569  010EF6  D021               	goto	l12258
 17570                           
 17571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 17572                           ;stkvar	_n @ sp[(-56)+32]
 17573  010EF8  0EE8               	movlw	-24
 17574  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 17575  010F00  0EE9               	movlw	-23
 17576  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 17577  010F08  0E97               	movlw	low _dbuf
 17578  010F0A  240B               	addwf	(btemp+10)^0,w,c
 17579  010F0C  6ED9               	movwf	fsr2l,c
 17580  010F0E  0E02               	movlw	high _dbuf
 17581  010F10  200C               	addwfc	(btemp+11)^0,w,c
 17582  010F12  6EDA               	movwf	fsr2h,c
 17583  010F14  0E2E               	movlw	46
 17584  010F16  6EDF               	movwf	indf2,c
 17585                           
 17586                           ;stkvar	_n @ sp[(-56)+32]
 17587  010F18  0EE8               	movlw	-24
 17588  010F1A  50E3               	movf	plusw1,w,c
 17589  010F1C  0F01               	addlw	1
 17590  010F1E  6E01               	movwf	btemp^0,c
 17591  010F20  0EE8               	movlw	-24
 17592  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 17593  010F28  6A01               	clrf	btemp^0,c
 17594  010F2A  0EE9               	movlw	-23
 17595  010F2C  50E3               	movf	plusw1,w,c
 17596  010F2E  2001               	addwfc	btemp^0,w,c
 17597  010F30  6E01               	movwf	btemp^0,c
 17598  010F32  0EE9               	movlw	-23
 17599  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 17600  010F3A                     l12258:
 17601                           
 17602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 17603                           ;stkvar	_n @ sp[(-56)+32]
 17604  010F3A  0EE8               	movlw	-24
 17605  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 17606  010F42  0EE9               	movlw	-23
 17607  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 17608  010F4A  0E97               	movlw	low _dbuf
 17609  010F4C  240B               	addwf	(btemp+10)^0,w,c
 17610  010F4E  6ED9               	movwf	fsr2l,c
 17611  010F50  0E02               	movlw	high _dbuf
 17612  010F52  200C               	addwfc	(btemp+11)^0,w,c
 17613  010F54  6EDA               	movwf	fsr2h,c
 17614  010F56  0E00               	movlw	0
 17615  010F58  6EDF               	movwf	indf2,c
 17616                           
 17617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 17618                           ;stkvar	_nmode @ sp[(-56)+55]
 17619  010F5A  0EFF               	movlw	-1
 17620  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 17621  010F62  0E65               	movlw	101
 17622  010F64  1801               	xorwf	btemp^0,w,c
 17623  010F66  A4D8               	btfss	status,2,c
 17624  010F68  EF16  F081         	goto	l12062
 17625                           
 17626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 17627  010F6C  0E4F               	movlw	79
 17628  010F6E  6E0B               	movwf	(btemp+10)^0,c
 17629  010F70  0E00               	movlw	0
 17630  010F72  6E0C               	movwf	(btemp+11)^0,c
 17631                           
 17632                           ;stkvar	_i @ sp[(-56)+36]
 17633  010F74  0EEC               	movlw	-20
 17634  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17635  010F7C  0EED               	movlw	-19
 17636  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17637                           
 17638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17639                           ;stkvar	_i @ sp[(-56)+36]
 17640  010F84  0EEC               	movlw	-20
 17641  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 17642  010F8C  0EED               	movlw	-19
 17643  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17644  010F94  0E97               	movlw	low _dbuf
 17645  010F96  240B               	addwf	(btemp+10)^0,w,c
 17646  010F98  6ED9               	movwf	fsr2l,c
 17647  010F9A  0E02               	movlw	high _dbuf
 17648  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 17649  010F9E  6EDA               	movwf	fsr2h,c
 17650  010FA0  0E00               	movlw	0
 17651  010FA2  6EDF               	movwf	indf2,c
 17652                           
 17653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17654                           ;stkvar	_sign @ sp[(-56)+42]
 17655  010FA4  0EF2               	movlw	-14
 17656  010FA6  6AE3               	clrf	plusw1,c
 17657  010FA8  0EF3               	movlw	-13
 17658  010FAA  6AE3               	clrf	plusw1,c
 17659                           
 17660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17661                           ;stkvar	_e @ sp[(-56)+34]
 17662  010FAC  0EEB               	movlw	-21
 17663  010FAE  AEE3               	btfss	plusw1,7,c
 17664  010FB0  D012               	goto	l12272
 17665                           
 17666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17667  010FB2  0E01               	movlw	1
 17668  010FB4  6E0B               	movwf	(btemp+10)^0,c
 17669  010FB6  0E00               	movlw	0
 17670  010FB8  6E0C               	movwf	(btemp+11)^0,c
 17671                           
 17672                           ;stkvar	_sign @ sp[(-56)+42]
 17673  010FBA  0EF2               	movlw	-14
 17674  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17675  010FC2  0EF3               	movlw	-13
 17676  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17677                           
 17678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17679                           ;stkvar	_e @ sp[(-56)+34]
 17680                           ;stkvar	_e @ sp[(-56)+34]
 17681  010FCA  0EEA               	movlw	-22
 17682  010FCC  6CE3               	negf	plusw1,c
 17683  010FCE  0EEB               	movlw	-21
 17684  010FD0  1EE3               	comf	plusw1,f,c
 17685  010FD2  B0D8               	btfsc	status,0,c
 17686  010FD4  2AE3               	incf	plusw1,f,c
 17687  010FD6                     l12272:
 17688                           
 17689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17690  010FD6  0E02               	movlw	2
 17691  010FD8  6E0B               	movwf	(btemp+10)^0,c
 17692  010FDA  0E00               	movlw	0
 17693  010FDC  6E0C               	movwf	(btemp+11)^0,c
 17694                           
 17695                           ;stkvar	_p @ sp[(-56)+40]
 17696  010FDE  0EF0               	movlw	-16
 17697  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17698  010FE6  0EF1               	movlw	-15
 17699  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 17700                           
 17701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17702  010FEE  D051               	goto	l12284
 17703  010FF0                     l12274:
 17704                           
 17705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17706                           ;stkvar	_i @ sp[(-56)+36]
 17707  010FF0  50E1               	movf	fsr1l,w,c
 17708  010FF2  0FEC               	addlw	-20
 17709  010FF4  6ED9               	movwf	fsr2l,c
 17710  010FF6  50E2               	movf	fsr1h,w,c
 17711  010FF8  6EDA               	movwf	fsr2h,c
 17712  010FFA  0EFF               	movlw	255
 17713  010FFC  22DA               	addwfc	fsr2h,f,c
 17714  010FFE  06DE               	decf	postinc2,f,c
 17715  011000  0E00               	movlw	0
 17716  011002  5ADD               	subwfb	postdec2,f,c
 17717                           
 17718                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17719                           ;stkvar	_i @ sp[(-56)+36]
 17720  011004  0EEC               	movlw	-20
 17721  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 17722  01100C  0EED               	movlw	-19
 17723  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17724  011014  0E97               	movlw	low _dbuf
 17725  011016  240B               	addwf	(btemp+10)^0,w,c
 17726  011018  6ED9               	movwf	fsr2l,c
 17727  01101A  0E02               	movlw	high _dbuf
 17728  01101C  200C               	addwfc	(btemp+11)^0,w,c
 17729  01101E  6EDA               	movwf	fsr2h,c
 17730  011020  0E0A               	movlw	10
 17731  011022  6EE6               	movwf	postinc1,c
 17732  011024  0E00               	movlw	0
 17733  011026  6EE6               	movwf	postinc1,c
 17734                           
 17735                           ;stkvar	_e @ sp[(-58)+34]
 17736  011028  0EE8               	movlw	-24
 17737  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17738  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17739  011036  EC74  F0CD         	call	___awmod	;wreg free
 17740  01103A  5001               	movf	btemp^0,w,c
 17741  01103C  0F30               	addlw	48
 17742  01103E  6EDF               	movwf	indf2,c
 17743                           
 17744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17745  011040  0E0A               	movlw	10
 17746  011042  6EE6               	movwf	postinc1,c
 17747  011044  0E00               	movlw	0
 17748  011046  6EE6               	movwf	postinc1,c
 17749                           
 17750                           ;stkvar	_e @ sp[(-58)+34]
 17751  011048  0EE8               	movlw	-24
 17752  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17753  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17754  011056  EC43  F0C9         	call	___awdiv	;wreg free
 17755                           
 17756                           ;stkvar	_e @ sp[(-56)+34]
 17757  01105A  0EEA               	movlw	-22
 17758  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 17759  011062  0EEB               	movlw	-21
 17760  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 17761                           
 17762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17763                           ;stkvar	_p @ sp[(-56)+40]
 17764  01106A  50E1               	movf	fsr1l,w,c
 17765  01106C  0FF0               	addlw	-16
 17766  01106E  6ED9               	movwf	fsr2l,c
 17767  011070  50E2               	movf	fsr1h,w,c
 17768  011072  6EDA               	movwf	fsr2h,c
 17769  011074  0EFF               	movlw	255
 17770  011076  22DA               	addwfc	fsr2h,f,c
 17771  011078  06DE               	decf	postinc2,f,c
 17772  01107A  0E00               	movlw	0
 17773  01107C  5ADD               	subwfb	postdec2,f,c
 17774                           
 17775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17776                           ;stkvar	_w @ sp[(-56)+38]
 17777  01107E  50E1               	movf	fsr1l,w,c
 17778  011080  0FEE               	addlw	-18
 17779  011082  6ED9               	movwf	fsr2l,c
 17780  011084  50E2               	movf	fsr1h,w,c
 17781  011086  6EDA               	movwf	fsr2h,c
 17782  011088  0EFF               	movlw	255
 17783  01108A  22DA               	addwfc	fsr2h,f,c
 17784  01108C  06DE               	decf	postinc2,f,c
 17785  01108E  0E00               	movlw	0
 17786  011090  5ADD               	subwfb	postdec2,f,c
 17787  011092                     l12284:
 17788                           
 17789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17790                           ;stkvar	_e @ sp[(-56)+34]
 17791  011092  0EEA               	movlw	-22
 17792  011094  006F FF8C  F001    	movff	plusw1,btemp
 17793  01109A  0EEB               	movlw	-21
 17794  01109C  50E3               	movf	plusw1,w,c
 17795  01109E  1001               	iorwf	btemp^0,w,c
 17796  0110A0  A4D8               	btfss	status,2,c
 17797  0110A2  D7A6               	goto	l12274
 17798                           
 17799                           ;stkvar	_p @ sp[(-56)+40]
 17800  0110A4  0EF1               	movlw	-15
 17801  0110A6  BEE3               	btfsc	plusw1,7,c
 17802  0110A8  D007               	goto	u11580
 17803  0110AA  0EF1               	movlw	-15
 17804  0110AC  50E3               	movf	plusw1,w,c
 17805  0110AE  E1A0               	bnz	l12274
 17806  0110B0  0EF0               	movlw	-16
 17807  0110B2  04E3               	decf	plusw1,w,c
 17808  0110B4  B0D8               	btfsc	status,0,c
 17809  0110B6  D79C               	goto	l12274
 17810  0110B8                     u11580:
 17811                           
 17812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17813                           ;stkvar	_i @ sp[(-56)+36]
 17814  0110B8  50E1               	movf	fsr1l,w,c
 17815  0110BA  0FEC               	addlw	-20
 17816  0110BC  6ED9               	movwf	fsr2l,c
 17817  0110BE  50E2               	movf	fsr1h,w,c
 17818  0110C0  6EDA               	movwf	fsr2h,c
 17819  0110C2  0EFF               	movlw	255
 17820  0110C4  22DA               	addwfc	fsr2h,f,c
 17821  0110C6  06DE               	decf	postinc2,f,c
 17822  0110C8  0E00               	movlw	0
 17823  0110CA  5ADD               	subwfb	postdec2,f,c
 17824                           
 17825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17826                           ;stkvar	_sign @ sp[(-56)+42]
 17827  0110CC  0EF2               	movlw	-14
 17828  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 17829  0110D4  0EF3               	movlw	-13
 17830  0110D6  50E3               	movf	plusw1,w,c
 17831  0110D8  1001               	iorwf	btemp^0,w,c
 17832  0110DA  A4D8               	btfss	status,2,c
 17833  0110DC  D002               	goto	l12294
 17834  0110DE  0E2B               	movlw	43
 17835  0110E0  D001               	goto	L18
 17836  0110E2                     l12294:
 17837  0110E2  0E2D               	movlw	45
 17838  0110E4                     L18:
 17839  0110E4  6E0B               	movwf	(btemp+10)^0,c
 17840  0110E6  0E00               	movlw	0
 17841  0110E8  6E0C               	movwf	(btemp+11)^0,c
 17842                           
 17843                           ;stkvar	_efgtoa$5549 @ sp[(-56)+4]
 17844  0110EA  0ECC               	movlw	-52
 17845  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17846  0110F2  0ECD               	movlw	-51
 17847  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 17848                           
 17849                           ;stkvar	_efgtoa$5549 @ sp[(-56)+4]
 17850                           ;stkvar	_i @ sp[(-56)+36]
 17851  0110FA  0EEC               	movlw	-20
 17852  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17853  011102  0EED               	movlw	-19
 17854  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 17855  01110A  0E97               	movlw	low _dbuf
 17856  01110C  240B               	addwf	(btemp+10)^0,w,c
 17857  01110E  6ED9               	movwf	fsr2l,c
 17858  011110  0E02               	movlw	high _dbuf
 17859  011112  200C               	addwfc	(btemp+11)^0,w,c
 17860  011114  6EDA               	movwf	fsr2h,c
 17861  011116  0ECC               	movlw	-52
 17862  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17863                           
 17864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17865                           ;stkvar	_w @ sp[(-56)+38]
 17866  01111E  50E1               	movf	fsr1l,w,c
 17867  011120  0FEE               	addlw	-18
 17868  011122  6ED9               	movwf	fsr2l,c
 17869  011124  50E2               	movf	fsr1h,w,c
 17870  011126  6EDA               	movwf	fsr2h,c
 17871  011128  0EFF               	movlw	255
 17872  01112A  22DA               	addwfc	fsr2h,f,c
 17873  01112C  06DE               	decf	postinc2,f,c
 17874  01112E  0E00               	movlw	0
 17875  011130  5ADD               	subwfb	postdec2,f,c
 17876                           
 17877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17878                           ;stkvar	_i @ sp[(-56)+36]
 17879  011132  50E1               	movf	fsr1l,w,c
 17880  011134  0FEC               	addlw	-20
 17881  011136  6ED9               	movwf	fsr2l,c
 17882  011138  50E2               	movf	fsr1h,w,c
 17883  01113A  6EDA               	movwf	fsr2h,c
 17884  01113C  0EFF               	movlw	255
 17885  01113E  22DA               	addwfc	fsr2h,f,c
 17886  011140  06DE               	decf	postinc2,f,c
 17887  011142  0E00               	movlw	0
 17888  011144  5ADD               	subwfb	postdec2,f,c
 17889  011146  0EBF               	movlw	191
 17890  011148  6E0B               	movwf	(btemp+10)^0,c
 17891  01114A  0EFF               	movlw	255
 17892  01114C  6E0C               	movwf	(btemp+11)^0,c
 17893                           
 17894                           ;stkvar	_c @ sp[(-56)+-7]
 17895  01114E  0EC1               	movlw	-63
 17896  011150  50E3               	movf	plusw1,w,c
 17897  011152  6E09               	movwf	(btemp+8)^0,c
 17898  011154  6A0A               	clrf	(btemp+9)^0,c
 17899  011156  500B               	movf	(btemp+10)^0,w,c
 17900  011158  2609               	addwf	(btemp+8)^0,f,c
 17901  01115A  500C               	movf	(btemp+11)^0,w,c
 17902  01115C  220A               	addwfc	(btemp+9)^0,f,c
 17903  01115E  500A               	movf	(btemp+9)^0,w,c
 17904  011160  E106               	bnz	u11600
 17905  011162  0E1A               	movlw	26
 17906  011164  5C09               	subwf	(btemp+8)^0,w,c
 17907  011166  B0D8               	btfsc	status,0,c
 17908  011168  D002               	goto	u11600
 17909  01116A  0E01               	movlw	1
 17910  01116C  D001               	goto	u11610
 17911  01116E                     u11600:
 17912  01116E  0E00               	movlw	0
 17913  011170                     u11610:
 17914  011170  6E0B               	movwf	(btemp+10)^0,c
 17915  011172  6A0C               	clrf	(btemp+11)^0,c
 17916                           
 17917                           ;stkvar	_efgtoa$5551 @ sp[(-56)+0]
 17918  011174  0EC8               	movlw	-56
 17919  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17920  01117C  0EC9               	movlw	-55
 17921  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17922                           
 17923                           ;stkvar	_efgtoa$5551 @ sp[(-56)+0]
 17924  011184  0EC8               	movlw	-56
 17925  011186  006F FF8C  F001    	movff	plusw1,btemp
 17926  01118C  0EC9               	movlw	-55
 17927  01118E  50E3               	movf	plusw1,w,c
 17928  011190  1001               	iorwf	btemp^0,w,c
 17929  011192  A4D8               	btfss	status,2,c
 17930  011194  D002               	goto	l12310
 17931  011196  0E65               	movlw	101
 17932  011198  D001               	goto	L19
 17933  01119A                     l12310:
 17934  01119A  0E45               	movlw	69
 17935  01119C                     L19:
 17936  01119C  6E0B               	movwf	(btemp+10)^0,c
 17937  01119E  0E00               	movlw	0
 17938  0111A0  6E0C               	movwf	(btemp+11)^0,c
 17939                           
 17940                           ;stkvar	_efgtoa$5550 @ sp[(-56)+2]
 17941  0111A2  0ECA               	movlw	-54
 17942  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17943  0111AA  0ECB               	movlw	-53
 17944  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 17945                           
 17946                           ;stkvar	_efgtoa$5550 @ sp[(-56)+2]
 17947                           ;stkvar	_i @ sp[(-56)+36]
 17948  0111B2  0EEC               	movlw	-20
 17949  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 17950  0111BA  0EED               	movlw	-19
 17951  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 17952  0111C2  0E97               	movlw	low _dbuf
 17953  0111C4  240B               	addwf	(btemp+10)^0,w,c
 17954  0111C6  6ED9               	movwf	fsr2l,c
 17955  0111C8  0E02               	movlw	high _dbuf
 17956  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 17957  0111CC  6EDA               	movwf	fsr2h,c
 17958  0111CE  0ECA               	movlw	-54
 17959  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17960                           
 17961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17962                           ;stkvar	_w @ sp[(-56)+38]
 17963  0111D6  50E1               	movf	fsr1l,w,c
 17964  0111D8  0FEE               	addlw	-18
 17965  0111DA  6ED9               	movwf	fsr2l,c
 17966  0111DC  50E2               	movf	fsr1h,w,c
 17967  0111DE  6EDA               	movwf	fsr2h,c
 17968  0111E0  0EFF               	movlw	255
 17969  0111E2  22DA               	addwfc	fsr2h,f,c
 17970  0111E4  06DE               	decf	postinc2,f,c
 17971  0111E6  0E00               	movlw	0
 17972  0111E8  5ADD               	subwfb	postdec2,f,c
 17973                           
 17974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17975                           ;stkvar	_i @ sp[(-56)+36]
 17976  0111EA  0EEC               	movlw	-20
 17977  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 17978  0111F2  0EED               	movlw	-19
 17979  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 17980  0111FA  0E97               	movlw	low _dbuf
 17981  0111FC  240B               	addwf	(btemp+10)^0,w,c
 17982  0111FE  6E09               	movwf	(btemp+8)^0,c
 17983  011200  0E02               	movlw	high _dbuf
 17984  011202  200C               	addwfc	(btemp+11)^0,w,c
 17985  011204  6E0A               	movwf	(btemp+9)^0,c
 17986  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 17987  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 17988                           
 17989                           ;stkvar	_n @ sp[(-58)+32]
 17990  011212  0E97               	movlw	low _dbuf
 17991  011214  6E0B               	movwf	(btemp+10)^0,c
 17992  011216  0E02               	movlw	high _dbuf
 17993  011218  6E0C               	movwf	(btemp+11)^0,c
 17994  01121A  0EE6               	movlw	-26
 17995  01121C  50E3               	movf	plusw1,w,c
 17996  01121E  260B               	addwf	(btemp+10)^0,f,c
 17997  011220  0EE7               	movlw	-25
 17998  011222  50E3               	movf	plusw1,w,c
 17999  011224  220C               	addwfc	(btemp+11)^0,f,c
 18000  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18001  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 18002  011232  ECDF  F0D1         	call	_strcpy	;wreg free
 18003  011236  EF16  F081         	goto	l12062
 18004  01123A                     l2202:
 18005                           
 18006                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 18007  01123A  0EC1               	movlw	193
 18008  01123C  26E1               	addwf	fsr1l,f,c
 18009  01123E  0EFF               	movlw	255
 18010  011240  22E2               	addwfc	fsr1h,f,c
 18011  011242  0012               	return		;funcret
 18012  011244                     __end_of_efgtoa:
 18013                           	opt callstack 0
 18014                           
 18015 ;; *************** function _tolower *****************
 18016 ;; Defined at:
 18017 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 18018 ;; Parameters:    Size  Location     Type
 18019 ;;  c               2  [STACK] int 
 18020 ;; Auto vars:     Size  Location     Type
 18021 ;;		None
 18022 ;; Return value:  Size  Location     Type
 18023 ;;                  2  [STACK] int 
 18024 ;; Registers used:
 18025 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 18026 ;; Tracked objects:
 18027 ;;		On entry : 0/0
 18028 ;;		On exit  : 0/0
 18029 ;;		Unchanged: 0/0
 18030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18035 ;;Total ram usage:        0 bytes
 18036 ;; Hardware stack levels used:    1
 18037 ;; Hardware stack levels required when called:   16
 18038 ;; This function calls:
 18039 ;;		_isupper
 18040 ;; This function is called by:
 18041 ;;		_efgtoa
 18042 ;;		_vfpfcnvrt
 18043 ;; This function uses a reentrant model
 18044 ;;
 18045                           
 18046                           	psect	text58
 18047  01AD62                     __ptext58:
 18048                           	opt callstack 0
 18049  01AD62                     _tolower:
 18050                           	opt callstack 0
 18051                           
 18052                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18053  01AD62  52E6               	movf	postinc1,f,c
 18054  01AD64  52E6               	movf	postinc1,f,c
 18055                           
 18056                           ;stkvar	_c @ sp[(-2)+-2]
 18057                           
 18058                           ;incstack = 0
 18059 ;; hardware stack exceeded
 18060  01AD66  0EFC               	movlw	-4
 18061  01AD68  50E3               	movf	plusw1,w,c
 18062  01AD6A  0FBF               	addlw	191
 18063  01AD6C  6E0B               	movwf	(btemp+10)^0,c
 18064  01AD6E  0EFD               	movlw	-3
 18065  01AD70  006F FF8C  F00C    	movff	plusw1,btemp+11
 18066  01AD76  0EFF               	movlw	255
 18067  01AD78  220C               	addwfc	(btemp+11)^0,f,c
 18068  01AD7A  500C               	movf	(btemp+11)^0,w,c
 18069  01AD7C  E106               	bnz	u6110
 18070  01AD7E  0E1A               	movlw	26
 18071  01AD80  5C0B               	subwf	(btemp+10)^0,w,c
 18072  01AD82  B0D8               	btfsc	status,0,c
 18073  01AD84  D002               	goto	u6110
 18074  01AD86  0E01               	movlw	1
 18075  01AD88  D001               	goto	u6120
 18076  01AD8A                     u6110:
 18077  01AD8A  0E00               	movlw	0
 18078  01AD8C                     u6120:
 18079  01AD8C  6E0B               	movwf	(btemp+10)^0,c
 18080  01AD8E  6A0C               	clrf	(btemp+11)^0,c
 18081                           
 18082                           ;stkvar	_tolower$6370 @ sp[(-2)+0]
 18083  01AD90  0EFE               	movlw	-2
 18084  01AD92  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18085  01AD98  0EFF               	movlw	-1
 18086  01AD9A  0060  F033  FFE3   	movff	btemp+11,plusw1
 18087                           
 18088                           ;stkvar	_tolower$6370 @ sp[(-2)+0]
 18089  01ADA0  0EFE               	movlw	-2
 18090  01ADA2  006F FF8C  F001    	movff	plusw1,btemp
 18091  01ADA8  0EFF               	movlw	-1
 18092  01ADAA  50E3               	movf	plusw1,w,c
 18093  01ADAC  1001               	iorwf	btemp^0,w,c
 18094  01ADAE  B4D8               	btfsc	status,2,c
 18095  01ADB0  D00D               	goto	l8062
 18096                           
 18097                           ;stkvar	_c @ sp[(-2)+-2]
 18098  01ADB2  0EFC               	movlw	-4
 18099  01ADB4  006F FF8C  F001    	movff	plusw1,btemp
 18100  01ADBA  0EFD               	movlw	-3
 18101  01ADBC  006F FF8C  F002    	movff	plusw1,btemp+1
 18102  01ADC2  0E20               	movlw	32
 18103  01ADC4  1201               	iorwf	btemp^0,f,c
 18104  01ADC6  0E00               	movlw	0
 18105  01ADC8  1202               	iorwf	(btemp+1)^0,f,c
 18106  01ADCA  D008               	goto	l3474
 18107  01ADCC                     l8062:
 18108                           
 18109                           ;stkvar	_c @ sp[(-2)+-2]
 18110  01ADCC  0EFC               	movlw	-4
 18111  01ADCE  006F FF8C  F001    	movff	plusw1,btemp
 18112  01ADD4  0EFD               	movlw	-3
 18113  01ADD6  006F FF8C  F002    	movff	plusw1,btemp+1
 18114  01ADDC                     l3474:
 18115                           
 18116                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18117  01ADDC  52E5               	movf	postdec1,f,c
 18118  01ADDE  52E5               	movf	postdec1,f,c
 18119  01ADE0  52E5               	movf	postdec1,f,c
 18120  01ADE2  52E5               	movf	postdec1,f,c
 18121  01ADE4  0012               	return		;funcret
 18122  01ADE6                     __end_of_tolower:
 18123                           	opt callstack 0
 18124                           
 18125 ;; *************** function _isupper *****************
 18126 ;; Defined at:
 18127 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 18128 ;; Parameters:    Size  Location     Type
 18129 ;;  c               2  [STACK] int 
 18130 ;; Auto vars:     Size  Location     Type
 18131 ;;		None
 18132 ;; Return value:  Size  Location     Type
 18133 ;;                  2  [STACK] int 
 18134 ;; Registers used:
 18135 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 18136 ;; Tracked objects:
 18137 ;;		On entry : 0/0
 18138 ;;		On exit  : 0/0
 18139 ;;		Unchanged: 0/0
 18140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18145 ;;Total ram usage:        0 bytes
 18146 ;; Hardware stack levels used:    1
 18147 ;; Hardware stack levels required when called:   15
 18148 ;; This function calls:
 18149 ;;		Nothing
 18150 ;; This function is called by:
 18151 ;;		_efgtoa
 18152 ;;		_xtoa
 18153 ;;		_vfpfcnvrt
 18154 ;;		_tolower
 18155 ;; This function uses a reentrant model
 18156 ;;
 18157                           
 18158                           	psect	text59
 18159  01BA3A                     __ptext59:
 18160                           	opt callstack 0
 18161  01BA3A                     _isupper:
 18162                           	opt callstack 0
 18163                           
 18164                           ;stkvar	_c @ sp[(0)+-2]
 18165                           
 18166                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18167                           ;incstack = 0
 18168 ;; hardware stack exceeded
 18169  01BA3A  0EFE               	movlw	-2
 18170  01BA3C  50E3               	movf	plusw1,w,c
 18171  01BA3E  0FBF               	addlw	191
 18172  01BA40  6E0B               	movwf	(btemp+10)^0,c
 18173  01BA42  0EFF               	movlw	-1
 18174  01BA44  006F FF8C  F00C    	movff	plusw1,btemp+11
 18175  01BA4A  0EFF               	movlw	255
 18176  01BA4C  220C               	addwfc	(btemp+11)^0,f,c
 18177  01BA4E  500C               	movf	(btemp+11)^0,w,c
 18178  01BA50  E106               	bnz	u5460
 18179  01BA52  0E1A               	movlw	26
 18180  01BA54  5C0B               	subwf	(btemp+10)^0,w,c
 18181  01BA56  B0D8               	btfsc	status,0,c
 18182  01BA58  D002               	goto	u5460
 18183  01BA5A  0E01               	movlw	1
 18184  01BA5C  D001               	goto	u5470
 18185  01BA5E                     u5460:
 18186  01BA5E  0E00               	movlw	0
 18187  01BA60                     u5470:
 18188  01BA60  6E01               	movwf	btemp^0,c
 18189  01BA62  6A02               	clrf	(btemp+1)^0,c
 18190                           
 18191                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 18192  01BA64  52E5               	movf	postdec1,f,c
 18193  01BA66  52E5               	movf	postdec1,f,c
 18194  01BA68  0012               	return		;funcret
 18195  01BA6A                     __end_of_isupper:
 18196                           	opt callstack 0
 18197                           
 18198 ;; *************** function _strcpy *****************
 18199 ;; Defined at:
 18200 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 18201 ;; Parameters:    Size  Location     Type
 18202 ;;  dest            2  [STACK] PTR unsigned char 
 18203 ;;		 -> dbuf(80), 
 18204 ;;  src             2  [STACK] PTR const unsigned char 
 18205 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18206 ;;		 -> dbuf(80), 
 18207 ;; Auto vars:     Size  Location     Type
 18208 ;;  d               2  [STACK] PTR unsigned char 
 18209 ;;		 -> dbuf(80), 
 18210 ;;  s               2  [STACK] PTR const unsigned char 
 18211 ;;		 -> STR_70(4), STR_69(4), STR_66(4), STR_65(4), 
 18212 ;;		 -> dbuf(80), 
 18213 ;; Return value:  Size  Location     Type
 18214 ;;                  2  [STACK] PTR unsigned char 
 18215 ;; Registers used:
 18216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 18217 ;; Tracked objects:
 18218 ;;		On entry : 0/0
 18219 ;;		On exit  : 0/0
 18220 ;;		Unchanged: 0/0
 18221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18226 ;;Total ram usage:        0 bytes
 18227 ;; Hardware stack levels used:    1
 18228 ;; Hardware stack levels required when called:   15
 18229 ;; This function calls:
 18230 ;;		Nothing
 18231 ;; This function is called by:
 18232 ;;		_efgtoa
 18233 ;; This function uses a reentrant model
 18234 ;;
 18235                           
 18236                           	psect	text60
 18237  01A3BE                     __ptext60:
 18238                           	opt callstack 0
 18239  01A3BE                     _strcpy:
 18240                           	opt callstack 0
 18241                           
 18242                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18243  01A3BE  52E6               	movf	postinc1,f,c
 18244  01A3C0  52E6               	movf	postinc1,f,c
 18245  01A3C2  52E6               	movf	postinc1,f,c
 18246  01A3C4  52E6               	movf	postinc1,f,c
 18247                           
 18248                           ;stkvar	_src @ sp[(-4)+-4]
 18249                           
 18250                           ;incstack = 0
 18251 ;; hardware stack exceeded
 18252  01A3C6  0EF8               	movlw	-8
 18253  01A3C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 18254  01A3CE  0EF9               	movlw	-7
 18255  01A3D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18256                           
 18257                           ;stkvar	_s @ sp[(-4)+2]
 18258  01A3D6  0EFF               	movlw	-1
 18259  01A3D8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18260  01A3DE  0EFE               	movlw	-2
 18261  01A3E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18262                           
 18263                           ;stkvar	_dest @ sp[(-4)+-2]
 18264  01A3E6  0EFA               	movlw	-6
 18265  01A3E8  006F FF8C  F00B    	movff	plusw1,btemp+10
 18266  01A3EE  0EFB               	movlw	-5
 18267  01A3F0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18268                           
 18269                           ;stkvar	_d @ sp[(-4)+0]
 18270  01A3F6  0EFD               	movlw	-3
 18271  01A3F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18272  01A3FE  0EFC               	movlw	-4
 18273  01A400  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18274  01A406                     l11924:
 18275                           
 18276                           ;stkvar	_s @ sp[(-4)+2]
 18277  01A406  50E1               	movf	fsr1l,w,c
 18278  01A408  0FFE               	addlw	-2
 18279  01A40A  6ED9               	movwf	fsr2l,c
 18280  01A40C  50E2               	movf	fsr1h,w,c
 18281  01A40E  6EDA               	movwf	fsr2h,c
 18282  01A410  0EFF               	movlw	255
 18283  01A412  22DA               	addwfc	fsr2h,f,c
 18284  01A414  006F FF7C  F00B    	movff	indf2,btemp+10
 18285  01A41A  0E01               	movlw	1
 18286  01A41C  26DE               	addwf	postinc2,f,c
 18287  01A41E  006F FF7C  F00C    	movff	indf2,btemp+11
 18288  01A424  0E00               	movlw	0
 18289  01A426  22DD               	addwfc	postdec2,f,c
 18290  01A428  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 18291  01A42E  0060  F033  FFF7   	movff	btemp+11,tblptrh
 18292  01A434  0E00               	movlw	low (__mediumconst shr (0+16))
 18293  01A436  6EF8               	movwf	tblptru,c
 18294                           
 18295                           ;stkvar	_d @ sp[(-4)+0]
 18296  01A438  50E1               	movf	fsr1l,w,c
 18297  01A43A  0FFC               	addlw	-4
 18298  01A43C  6ED9               	movwf	fsr2l,c
 18299  01A43E  50E2               	movf	fsr1h,w,c
 18300  01A440  6EDA               	movwf	fsr2h,c
 18301  01A442  0EFF               	movlw	255
 18302  01A444  22DA               	addwfc	fsr2h,f,c
 18303  01A446  006F FF7C  F00B    	movff	indf2,btemp+10
 18304  01A44C  0E01               	movlw	1
 18305  01A44E  26DE               	addwf	postinc2,f,c
 18306  01A450  006F FF7C  F00C    	movff	indf2,btemp+11
 18307  01A456  0E00               	movlw	0
 18308  01A458  22DD               	addwfc	postdec2,f,c
 18309  01A45A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 18310  01A460  0060  F033  FFDA   	movff	btemp+11,fsr2h
 18311  01A466  0E1F               	movlw	(high __ramtop+-1)
 18312  01A468  64F7               	cpfsgt	tblptrh,c
 18313  01A46A  D003               	bra	u10907
 18314  01A46C  0008               	tblrd		*
 18315  01A46E  50F5               	movf	tablat,w,c
 18316  01A470  D007               	bra	u10900
 18317  01A472                     u10907:
 18318  01A472  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18319  01A478  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18320  01A47E  50EF               	movf	indf0,w,c
 18321  01A480                     u10900:
 18322  01A480  6EDF               	movwf	indf2,c
 18323  01A482  50DF               	movf	indf2,w,c
 18324  01A484  A4D8               	btfss	status,2,c
 18325  01A486  D7BF               	goto	l11924
 18326                           
 18327                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 18328  01A488  0EF8               	movlw	248
 18329  01A48A  26E1               	addwf	fsr1l,f,c
 18330  01A48C  0EFF               	movlw	255
 18331  01A48E  22E2               	addwfc	fsr1h,f,c
 18332  01A490  0012               	return		;funcret
 18333  01A492                     __end_of_strcpy:
 18334                           	opt callstack 0
 18335                           
 18336 ;; *************** function _floorf *****************
 18337 ;; Defined at:
 18338 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 18339 ;; Parameters:    Size  Location     Type
 18340 ;;  x               4  [STACK] float 
 18341 ;; Auto vars:     Size  Location     Type
 18342 ;;  u               4  [STACK] struct .
 18343 ;;  m               4  [STACK] unsigned long 
 18344 ;;  e               2  [STACK] int 
 18345 ;; Return value:  Size  Location     Type
 18346 ;;                  4  [STACK] float 
 18347 ;; Registers used:
 18348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 18349 ;; Tracked objects:
 18350 ;;		On entry : 0/0
 18351 ;;		On exit  : 0/0
 18352 ;;		Unchanged: 0/0
 18353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18358 ;;Total ram usage:        0 bytes
 18359 ;; Hardware stack levels used:    1
 18360 ;; Hardware stack levels required when called:   15
 18361 ;; This function calls:
 18362 ;;		Nothing
 18363 ;; This function is called by:
 18364 ;;		_efgtoa
 18365 ;; This function uses a reentrant model
 18366 ;;
 18367                           
 18368                           	psect	text61
 18369  016454                     __ptext61:
 18370                           	opt callstack 0
 18371  016454                     _floorf:
 18372                           	opt callstack 0
 18373                           
 18374                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 18375  016454  0E0A               	movlw	10
 18376  016456  26E1               	addwf	fsr1l,f,c
 18377  016458  0E00               	movlw	0
 18378  01645A  22E2               	addwfc	fsr1h,f,c
 18379                           
 18380                           ;incstack = 0
 18381 ;; hardware stack exceeded
 18382  01645C  0060  F1E8  F009   	movff	floorf@F524,btemp+8
 18383  016462  0060  F1EC  F00A   	movff	floorf@F524+1,btemp+9
 18384  016468  0060  F1F0  F00B   	movff	floorf@F524+2,btemp+10
 18385  01646E  0060  F1F4  F00C   	movff	floorf@F524+3,btemp+11
 18386                           
 18387                           ;stkvar	_u @ sp[(-10)+0]
 18388  016474  0EF6               	movlw	-10
 18389  016476  0060  F027  FFE3   	movff	btemp+8,plusw1
 18390  01647C  0EF7               	movlw	-9
 18391  01647E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18392  016484  0EF8               	movlw	-8
 18393  016486  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18394  01648C  0EF9               	movlw	-7
 18395  01648E  0060  F033  FFE3   	movff	btemp+11,plusw1
 18396                           
 18397                           ;stkvar	_x @ sp[(-10)+-4]
 18398  016494  0EF2               	movlw	-14
 18399  016496  006F FF8C  F009    	movff	plusw1,btemp+8
 18400  01649C  0EF3               	movlw	-13
 18401  01649E  006F FF8C  F00A    	movff	plusw1,btemp+9
 18402  0164A4  0EF4               	movlw	-12
 18403  0164A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18404  0164AC  0EF5               	movlw	-11
 18405  0164AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18406                           
 18407                           ;stkvar	_u @ sp[(-10)+0]
 18408  0164B4  0EF6               	movlw	-10
 18409  0164B6  0060  F027  FFE3   	movff	btemp+8,plusw1
 18410  0164BC  0EF7               	movlw	-9
 18411  0164BE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18412  0164C4  0EF8               	movlw	-8
 18413  0164C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18414  0164CC  0EF9               	movlw	-7
 18415  0164CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 18416  0164D4  0E81               	movlw	129
 18417  0164D6  6E0B               	movwf	(btemp+10)^0,c
 18418  0164D8  0EFF               	movlw	255
 18419  0164DA  6E0C               	movwf	(btemp+11)^0,c
 18420                           
 18421                           ;stkvar	_u @ sp[(-10)+0]
 18422  0164DC  0EF6               	movlw	-10
 18423  0164DE  006F FF8C  F005    	movff	plusw1,btemp+4
 18424  0164E4  0EF7               	movlw	-9
 18425  0164E6  006F FF8C  F006    	movff	plusw1,btemp+5
 18426  0164EC  0EF8               	movlw	-8
 18427  0164EE  006F FF8C  F007    	movff	plusw1,btemp+6
 18428  0164F4  0EF9               	movlw	-7
 18429  0164F6  006F FF8C  F008    	movff	plusw1,btemp+7
 18430  0164FC  0E18               	movlw	24
 18431  0164FE  D005               	goto	u6140
 18432  016500                     u6145:
 18433  016500  90D8               	bcf	status,0,c
 18434  016502  3208               	rrcf	(btemp+7)^0,f,c
 18435  016504  3207               	rrcf	(btemp+6)^0,f,c
 18436  016506  3206               	rrcf	(btemp+5)^0,f,c
 18437  016508  3205               	rrcf	(btemp+4)^0,f,c
 18438  01650A                     u6140:
 18439  01650A  2EE8               	decfsz	wreg,f,c
 18440  01650C  D7F9               	goto	u6145
 18441  01650E  0060  F014  F009   	movff	btemp+4,btemp+8
 18442  016514  0060  F018  F00A   	movff	btemp+5,btemp+9
 18443  01651A  0EFF               	movlw	255
 18444  01651C  1609               	andwf	(btemp+8)^0,f,c
 18445  01651E  0E00               	movlw	0
 18446  016520  160A               	andwf	(btemp+9)^0,f,c
 18447  016522  500B               	movf	(btemp+10)^0,w,c
 18448  016524  2609               	addwf	(btemp+8)^0,f,c
 18449  016526  500C               	movf	(btemp+11)^0,w,c
 18450  016528  220A               	addwfc	(btemp+9)^0,f,c
 18451                           
 18452                           ;stkvar	_e @ sp[(-10)+8]
 18453  01652A  0EFE               	movlw	-2
 18454  01652C  0060  F027  FFE3   	movff	btemp+8,plusw1
 18455  016532  0EFF               	movlw	-1
 18456  016534  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18457                           
 18458                           ;stkvar	_e @ sp[(-10)+8]
 18459  01653A  0EFF               	movlw	-1
 18460  01653C  BEE3               	btfsc	plusw1,7,c
 18461  01653E  D019               	goto	l8076
 18462  016540  0EFF               	movlw	-1
 18463  016542  50E3               	movf	plusw1,w,c
 18464  016544  E108               	bnz	u6150
 18465  016546  0EFE               	movlw	-2
 18466  016548  006F FF8C  F001    	movff	plusw1,btemp
 18467  01654E  0E17               	movlw	23
 18468  016550  5E01               	subwf	btemp^0,f,c
 18469  016552  A0D8               	btfss	status,0,c
 18470  016554  D00E               	goto	l8076
 18471  016556                     u6150:
 18472                           
 18473                           ;stkvar	_x @ sp[(-10)+-4]
 18474  016556  0EF2               	movlw	-14
 18475  016558  006F FF8C  F001    	movff	plusw1,btemp
 18476  01655E  0EF3               	movlw	-13
 18477  016560  006F FF8C  F002    	movff	plusw1,btemp+1
 18478  016566  0EF4               	movlw	-12
 18479  016568  006F FF8C  F003    	movff	plusw1,btemp+2
 18480  01656E  0EF5               	movlw	-11
 18481  016570  D11F               	goto	L20
 18482  016572                     l8076:
 18483                           
 18484                           ;stkvar	_e @ sp[(-10)+8]
 18485  016572  0EFF               	movlw	-1
 18486  016574  BEE3               	btfsc	plusw1,7,c
 18487  016576  D0B4               	goto	l8092
 18488                           
 18489                           ;stkvar	_e @ sp[(-10)+8]
 18490  016578  0EFE               	movlw	-2
 18491  01657A  006F FF8C  F00C    	movff	plusw1,btemp+11
 18492  016580  0EFF               	movlw	255
 18493  016582  6E05               	movwf	(btemp+4)^0,c
 18494  016584  0EFF               	movlw	255
 18495  016586  6E06               	movwf	(btemp+5)^0,c
 18496  016588  0E7F               	movlw	127
 18497  01658A  6E07               	movwf	(btemp+6)^0,c
 18498  01658C  0E00               	movlw	0
 18499  01658E  6E08               	movwf	(btemp+7)^0,c
 18500  016590                     u6175:
 18501  016590  660C               	tstfsz	(btemp+11)^0,c
 18502  016592  D001               	goto	u6176
 18503  016594  D007               	goto	u6177
 18504  016596                     u6176:
 18505  016596  3408               	rlcf	(btemp+7)^0,w,c
 18506  016598  3208               	rrcf	(btemp+7)^0,f,c
 18507  01659A  3207               	rrcf	(btemp+6)^0,f,c
 18508  01659C  3206               	rrcf	(btemp+5)^0,f,c
 18509  01659E  3205               	rrcf	(btemp+4)^0,f,c
 18510  0165A0  2E0C               	decfsz	(btemp+11)^0,f,c
 18511  0165A2  D7F6               	goto	u6175
 18512  0165A4                     u6177:
 18513                           
 18514                           ;stkvar	_m @ sp[(-10)+4]
 18515  0165A4  0EFA               	movlw	-6
 18516  0165A6  0060  F017  FFE3   	movff	btemp+4,plusw1
 18517  0165AC  0EFB               	movlw	-5
 18518  0165AE  0060  F01B  FFE3   	movff	btemp+5,plusw1
 18519  0165B4  0EFC               	movlw	-4
 18520  0165B6  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18521  0165BC  0EFD               	movlw	-3
 18522  0165BE  0060  F023  FFE3   	movff	btemp+7,plusw1
 18523                           
 18524                           ;stkvar	_m @ sp[(-10)+4]
 18525                           ;stkvar	_u @ sp[(-10)+0]
 18526  0165C4  0EF6               	movlw	-10
 18527  0165C6  006F FF8C  F009    	movff	plusw1,btemp+8
 18528  0165CC  0EF7               	movlw	-9
 18529  0165CE  006F FF8C  F00A    	movff	plusw1,btemp+9
 18530  0165D4  0EF8               	movlw	-8
 18531  0165D6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18532  0165DC  0EF9               	movlw	-7
 18533  0165DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18534  0165E4  0EFA               	movlw	-6
 18535  0165E6  50E3               	movf	plusw1,w,c
 18536  0165E8  1609               	andwf	(btemp+8)^0,f,c
 18537  0165EA  0EFB               	movlw	-5
 18538  0165EC  50E3               	movf	plusw1,w,c
 18539  0165EE  160A               	andwf	(btemp+9)^0,f,c
 18540  0165F0  0EFC               	movlw	-4
 18541  0165F2  50E3               	movf	plusw1,w,c
 18542  0165F4  160B               	andwf	(btemp+10)^0,f,c
 18543  0165F6  0EFD               	movlw	-3
 18544  0165F8  50E3               	movf	plusw1,w,c
 18545  0165FA  160C               	andwf	(btemp+11)^0,f,c
 18546  0165FC  5009               	movf	(btemp+8)^0,w,c
 18547  0165FE  100A               	iorwf	(btemp+9)^0,w,c
 18548  016600  100B               	iorwf	(btemp+10)^0,w,c
 18549  016602  100C               	iorwf	(btemp+11)^0,w,c
 18550  016604  B4D8               	btfsc	status,2,c
 18551  016606  D7A7               	goto	u6150
 18552                           
 18553                           ;stkvar	_u @ sp[(-10)+0]
 18554  016608  0EF6               	movlw	-10
 18555  01660A  006F FF8C  F009    	movff	plusw1,btemp+8
 18556  016610  0EF7               	movlw	-9
 18557  016612  006F FF8C  F00A    	movff	plusw1,btemp+9
 18558  016618  0EF8               	movlw	-8
 18559  01661A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18560  016620  0EF9               	movlw	-7
 18561  016622  006F FF8C  F00C    	movff	plusw1,btemp+11
 18562  016628  0E20               	movlw	32
 18563  01662A  D005               	goto	u6190
 18564  01662C                     u6195:
 18565  01662C  90D8               	bcf	status,0,c
 18566  01662E  320C               	rrcf	(btemp+11)^0,f,c
 18567  016630  320B               	rrcf	(btemp+10)^0,f,c
 18568  016632  320A               	rrcf	(btemp+9)^0,f,c
 18569  016634  3209               	rrcf	(btemp+8)^0,f,c
 18570  016636                     u6190:
 18571  016636  2EE8               	decfsz	wreg,f,c
 18572  016638  D7F9               	goto	u6195
 18573  01663A  5009               	movf	(btemp+8)^0,w,c
 18574  01663C  B4D8               	btfsc	status,2,c
 18575  01663E  D028               	goto	l8090
 18576                           
 18577                           ;stkvar	_m @ sp[(-10)+4]
 18578                           ;stkvar	_u @ sp[(-10)+0]
 18579  016640  0EF6               	movlw	-10
 18580  016642  50E3               	movf	plusw1,w,c
 18581  016644  6E01               	movwf	btemp^0,c
 18582  016646  0EFA               	movlw	-6
 18583  016648  50E3               	movf	plusw1,w,c
 18584  01664A  2601               	addwf	btemp^0,f,c
 18585  01664C  0EF6               	movlw	-10
 18586  01664E  0060  F007  FFE3   	movff	btemp,plusw1
 18587  016654  0EF7               	movlw	-9
 18588  016656  50E3               	movf	plusw1,w,c
 18589  016658  6E01               	movwf	btemp^0,c
 18590  01665A  0EFB               	movlw	-5
 18591  01665C  50E3               	movf	plusw1,w,c
 18592  01665E  2201               	addwfc	btemp^0,f,c
 18593  016660  0EF7               	movlw	-9
 18594  016662  0060  F007  FFE3   	movff	btemp,plusw1
 18595  016668  0EF8               	movlw	-8
 18596  01666A  50E3               	movf	plusw1,w,c
 18597  01666C  6E01               	movwf	btemp^0,c
 18598  01666E  0EFC               	movlw	-4
 18599  016670  50E3               	movf	plusw1,w,c
 18600  016672  2201               	addwfc	btemp^0,f,c
 18601  016674  0EF8               	movlw	-8
 18602  016676  0060  F007  FFE3   	movff	btemp,plusw1
 18603  01667C  0EF9               	movlw	-7
 18604  01667E  50E3               	movf	plusw1,w,c
 18605  016680  6E01               	movwf	btemp^0,c
 18606  016682  0EFD               	movlw	-3
 18607  016684  50E3               	movf	plusw1,w,c
 18608  016686  2201               	addwfc	btemp^0,f,c
 18609  016688  0EF9               	movlw	-7
 18610  01668A  0060  F007  FFE3   	movff	btemp,plusw1
 18611  016690                     l8090:
 18612                           
 18613                           ;stkvar	_m @ sp[(-10)+4]
 18614  016690  0EFA               	movlw	-6
 18615  016692  006F FF8C  F009    	movff	plusw1,btemp+8
 18616  016698  0EFB               	movlw	-5
 18617  01669A  006F FF8C  F00A    	movff	plusw1,btemp+9
 18618  0166A0  0EFC               	movlw	-4
 18619  0166A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 18620  0166A8  0EFD               	movlw	-3
 18621  0166AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 18622  0166B0  1C09               	comf	(btemp+8)^0,w,c
 18623  0166B2  6E05               	movwf	(btemp+4)^0,c
 18624  0166B4  1C0A               	comf	(btemp+9)^0,w,c
 18625  0166B6  6E06               	movwf	(btemp+5)^0,c
 18626  0166B8  1C0B               	comf	(btemp+10)^0,w,c
 18627  0166BA  6E07               	movwf	(btemp+6)^0,c
 18628  0166BC  1C0C               	comf	(btemp+11)^0,w,c
 18629  0166BE  6E08               	movwf	(btemp+7)^0,c
 18630                           
 18631                           ;stkvar	_u @ sp[(-10)+0]
 18632  0166C0  50E1               	movf	fsr1l,w,c
 18633  0166C2  0FF6               	addlw	-10
 18634  0166C4  6ED9               	movwf	fsr2l,c
 18635  0166C6  50E2               	movf	fsr1h,w,c
 18636  0166C8  6EDA               	movwf	fsr2h,c
 18637  0166CA  0EFF               	movlw	255
 18638  0166CC  22DA               	addwfc	fsr2h,f,c
 18639  0166CE  5005               	movf	(btemp+4)^0,w,c
 18640  0166D0  16DE               	andwf	postinc2,f,c
 18641  0166D2  5006               	movf	(btemp+5)^0,w,c
 18642  0166D4  16DE               	andwf	postinc2,f,c
 18643  0166D6  5007               	movf	(btemp+6)^0,w,c
 18644  0166D8  16DE               	andwf	postinc2,f,c
 18645  0166DA  5008               	movf	(btemp+7)^0,w,c
 18646  0166DC  16DE               	andwf	postinc2,f,c
 18647  0166DE  D05B               	goto	l8100
 18648  0166E0                     l8092:
 18649                           
 18650                           ;stkvar	_u @ sp[(-10)+0]
 18651  0166E0  0EF6               	movlw	-10
 18652  0166E2  006F FF8C  F009    	movff	plusw1,btemp+8
 18653  0166E8  0EF7               	movlw	-9
 18654  0166EA  006F FF8C  F00A    	movff	plusw1,btemp+9
 18655  0166F0  0EF8               	movlw	-8
 18656  0166F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 18657  0166F8  0EF9               	movlw	-7
 18658  0166FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 18659  016700  0E20               	movlw	32
 18660  016702  D005               	goto	u6210
 18661  016704                     u6215:
 18662  016704  90D8               	bcf	status,0,c
 18663  016706  320C               	rrcf	(btemp+11)^0,f,c
 18664  016708  320B               	rrcf	(btemp+10)^0,f,c
 18665  01670A  320A               	rrcf	(btemp+9)^0,f,c
 18666  01670C  3209               	rrcf	(btemp+8)^0,f,c
 18667  01670E                     u6210:
 18668  01670E  2EE8               	decfsz	wreg,f,c
 18669  016710  D7F9               	goto	u6215
 18670  016712  6609               	tstfsz	(btemp+8)^0,c
 18671  016714  D009               	goto	l8096
 18672                           
 18673                           ;stkvar	_u @ sp[(-10)+0]
 18674  016716  0EF6               	movlw	-10
 18675  016718  6AE3               	clrf	plusw1,c
 18676  01671A  0EF7               	movlw	-9
 18677  01671C  6AE3               	clrf	plusw1,c
 18678  01671E  0EF8               	movlw	-8
 18679  016720  6AE3               	clrf	plusw1,c
 18680  016722  0EF9               	movlw	-7
 18681  016724  6AE3               	clrf	plusw1,c
 18682  016726  D037               	goto	l8100
 18683  016728                     l8096:
 18684                           
 18685                           ;stkvar	_u @ sp[(-10)+0]
 18686  016728  0EF6               	movlw	-10
 18687  01672A  006F FF8C  F009    	movff	plusw1,btemp+8
 18688  016730  0EF7               	movlw	-9
 18689  016732  006F FF8C  F00A    	movff	plusw1,btemp+9
 18690  016738  0EF8               	movlw	-8
 18691  01673A  006F FF8C  F00B    	movff	plusw1,btemp+10
 18692  016740  0EF9               	movlw	-7
 18693  016742  006F FF8C  F00C    	movff	plusw1,btemp+11
 18694  016748  90D8               	bcf	status,0,c
 18695  01674A  3409               	rlcf	(btemp+8)^0,w,c
 18696  01674C  6E05               	movwf	(btemp+4)^0,c
 18697  01674E  340A               	rlcf	(btemp+9)^0,w,c
 18698  016750  6E06               	movwf	(btemp+5)^0,c
 18699  016752  340B               	rlcf	(btemp+10)^0,w,c
 18700  016754  6E07               	movwf	(btemp+6)^0,c
 18701  016756  340C               	rlcf	(btemp+11)^0,w,c
 18702  016758  6E08               	movwf	(btemp+7)^0,c
 18703  01675A  5005               	movf	(btemp+4)^0,w,c
 18704  01675C  1006               	iorwf	(btemp+5)^0,w,c
 18705  01675E  1007               	iorwf	(btemp+6)^0,w,c
 18706  016760  1008               	iorwf	(btemp+7)^0,w,c
 18707  016762  B4D8               	btfsc	status,2,c
 18708  016764  D018               	goto	l8100
 18709  016766  0E00               	movlw	0
 18710  016768  6E09               	movwf	(btemp+8)^0,c
 18711  01676A  0E00               	movlw	0
 18712  01676C  6E0A               	movwf	(btemp+9)^0,c
 18713  01676E  0E80               	movlw	128
 18714  016770  6E0B               	movwf	(btemp+10)^0,c
 18715  016772  0EBF               	movlw	191
 18716  016774  6E0C               	movwf	(btemp+11)^0,c
 18717                           
 18718                           ;stkvar	_u @ sp[(-10)+0]
 18719  016776  0EF6               	movlw	-10
 18720  016778  0060  F027  FFE3   	movff	btemp+8,plusw1
 18721  01677E  0EF7               	movlw	-9
 18722  016780  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18723  016786  0EF8               	movlw	-8
 18724  016788  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18725  01678E  0EF9               	movlw	-7
 18726  016790  0060  F033  FFE3   	movff	btemp+11,plusw1
 18727  016796                     l8100:
 18728                           
 18729                           ;stkvar	_u @ sp[(-10)+0]
 18730  016796  0EF6               	movlw	-10
 18731  016798  006F FF8C  F001    	movff	plusw1,btemp
 18732  01679E  0EF7               	movlw	-9
 18733  0167A0  006F FF8C  F002    	movff	plusw1,btemp+1
 18734  0167A6  0EF8               	movlw	-8
 18735  0167A8  006F FF8C  F003    	movff	plusw1,btemp+2
 18736  0167AE  0EF9               	movlw	-7
 18737  0167B0                     L20:
 18738  0167B0  006F FF8C  F004    	movff	plusw1,btemp+3
 18739                           
 18740                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18741  0167B6  0EF2               	movlw	242
 18742  0167B8  26E1               	addwf	fsr1l,f,c
 18743  0167BA  0EFF               	movlw	255
 18744  0167BC  22E2               	addwfc	fsr1h,f,c
 18745  0167BE  0012               	return		;funcret
 18746  0167C0                     __end_of_floorf:
 18747                           	opt callstack 0
 18748                           
 18749 ;; *************** function ___fpclassifyf *****************
 18750 ;; Defined at:
 18751 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18752 ;; Parameters:    Size  Location     Type
 18753 ;;  x               4  [STACK] float 
 18754 ;; Auto vars:     Size  Location     Type
 18755 ;;  u               4  [STACK] struct .
 18756 ;;  e               2  [STACK] int 
 18757 ;; Return value:  Size  Location     Type
 18758 ;;                  2  [STACK] int 
 18759 ;; Registers used:
 18760 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18761 ;; Tracked objects:
 18762 ;;		On entry : 0/0
 18763 ;;		On exit  : 0/0
 18764 ;;		Unchanged: 0/0
 18765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18770 ;;Total ram usage:        0 bytes
 18771 ;; Hardware stack levels used:    1
 18772 ;; Hardware stack levels required when called:   15
 18773 ;; This function calls:
 18774 ;;		Nothing
 18775 ;; This function is called by:
 18776 ;;		_efgtoa
 18777 ;; This function uses a reentrant model
 18778 ;;
 18779                           
 18780                           	psect	text62
 18781  0189B2                     __ptext62:
 18782                           	opt callstack 0
 18783  0189B2                     ___fpclassifyf:
 18784                           	opt callstack 0
 18785                           
 18786                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18787  0189B2  0E06               	movlw	6
 18788  0189B4  26E1               	addwf	fsr1l,f,c
 18789  0189B6  0E00               	movlw	0
 18790  0189B8  22E2               	addwfc	fsr1h,f,c
 18791                           
 18792                           ;incstack = 0
 18793 ;; hardware stack exceeded
 18794  0189BA  0060  F208  F009   	movff	___fpclassifyf@F463,btemp+8
 18795  0189C0  0060  F20C  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 18796  0189C6  0060  F210  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 18797  0189CC  0060  F214  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 18798                           
 18799                           ;stkvar	_u @ sp[(-6)+0]
 18800  0189D2  0EFA               	movlw	-6
 18801  0189D4  0060  F027  FFE3   	movff	btemp+8,plusw1
 18802  0189DA  0EFB               	movlw	-5
 18803  0189DC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18804  0189E2  0EFC               	movlw	-4
 18805  0189E4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18806  0189EA  0EFD               	movlw	-3
 18807  0189EC  0060  F033  FFE3   	movff	btemp+11,plusw1
 18808                           
 18809                           ;stkvar	_x @ sp[(-6)+-4]
 18810  0189F2  0EF6               	movlw	-10
 18811  0189F4  006F FF8C  F009    	movff	plusw1,btemp+8
 18812  0189FA  0EF7               	movlw	-9
 18813  0189FC  006F FF8C  F00A    	movff	plusw1,btemp+9
 18814  018A02  0EF8               	movlw	-8
 18815  018A04  006F FF8C  F00B    	movff	plusw1,btemp+10
 18816  018A0A  0EF9               	movlw	-7
 18817  018A0C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18818                           
 18819                           ;stkvar	_u @ sp[(-6)+0]
 18820  018A12  0EFA               	movlw	-6
 18821  018A14  0060  F027  FFE3   	movff	btemp+8,plusw1
 18822  018A1A  0EFB               	movlw	-5
 18823  018A1C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18824  018A22  0EFC               	movlw	-4
 18825  018A24  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18826  018A2A  0EFD               	movlw	-3
 18827  018A2C  0060  F033  FFE3   	movff	btemp+11,plusw1
 18828                           
 18829                           ;stkvar	_u @ sp[(-6)+0]
 18830  018A32  0EFA               	movlw	-6
 18831  018A34  006F FF8C  F009    	movff	plusw1,btemp+8
 18832  018A3A  0EFB               	movlw	-5
 18833  018A3C  006F FF8C  F00A    	movff	plusw1,btemp+9
 18834  018A42  0EFC               	movlw	-4
 18835  018A44  006F FF8C  F00B    	movff	plusw1,btemp+10
 18836  018A4A  0EFD               	movlw	-3
 18837  018A4C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18838  018A52  0E18               	movlw	24
 18839  018A54  D005               	goto	u6020
 18840  018A56                     u6025:
 18841  018A56  90D8               	bcf	status,0,c
 18842  018A58  320C               	rrcf	(btemp+11)^0,f,c
 18843  018A5A  320B               	rrcf	(btemp+10)^0,f,c
 18844  018A5C  320A               	rrcf	(btemp+9)^0,f,c
 18845  018A5E  3209               	rrcf	(btemp+8)^0,f,c
 18846  018A60                     u6020:
 18847  018A60  2EE8               	decfsz	wreg,f,c
 18848  018A62  D7F9               	goto	u6025
 18849  018A64  0060  F024  F007   	movff	btemp+8,btemp+6
 18850  018A6A  0060  F028  F008   	movff	btemp+9,btemp+7
 18851  018A70  0EFF               	movlw	255
 18852  018A72  1607               	andwf	(btemp+6)^0,f,c
 18853  018A74  0E00               	movlw	0
 18854  018A76  1608               	andwf	(btemp+7)^0,f,c
 18855                           
 18856                           ;stkvar	_e @ sp[(-6)+4]
 18857  018A78  0EFE               	movlw	-2
 18858  018A7A  0060  F01F  FFE3   	movff	btemp+6,plusw1
 18859  018A80  0EFF               	movlw	-1
 18860  018A82  0060  F023  FFE3   	movff	btemp+7,plusw1
 18861                           
 18862                           ;stkvar	_e @ sp[(-6)+4]
 18863  018A88  0EFE               	movlw	-2
 18864  018A8A  006F FF8C  F001    	movff	plusw1,btemp
 18865  018A90  0EFF               	movlw	-1
 18866  018A92  50E3               	movf	plusw1,w,c
 18867  018A94  1001               	iorwf	btemp^0,w,c
 18868  018A96  A4D8               	btfss	status,2,c
 18869  018A98  D023               	goto	l8038
 18870                           
 18871                           ;stkvar	_u @ sp[(-6)+0]
 18872  018A9A  0EFA               	movlw	-6
 18873  018A9C  006F FF8C  F009    	movff	plusw1,btemp+8
 18874  018AA2  0EFB               	movlw	-5
 18875  018AA4  006F FF8C  F00A    	movff	plusw1,btemp+9
 18876  018AAA  0EFC               	movlw	-4
 18877  018AAC  006F FF8C  F00B    	movff	plusw1,btemp+10
 18878  018AB2  0EFD               	movlw	-3
 18879  018AB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 18880  018ABA  90D8               	bcf	status,0,c
 18881  018ABC  3409               	rlcf	(btemp+8)^0,w,c
 18882  018ABE  6E05               	movwf	(btemp+4)^0,c
 18883  018AC0  340A               	rlcf	(btemp+9)^0,w,c
 18884  018AC2  6E06               	movwf	(btemp+5)^0,c
 18885  018AC4  340B               	rlcf	(btemp+10)^0,w,c
 18886  018AC6  6E07               	movwf	(btemp+6)^0,c
 18887  018AC8  340C               	rlcf	(btemp+11)^0,w,c
 18888  018ACA  6E08               	movwf	(btemp+7)^0,c
 18889  018ACC  5005               	movf	(btemp+4)^0,w,c
 18890  018ACE  1006               	iorwf	(btemp+5)^0,w,c
 18891  018AD0  1007               	iorwf	(btemp+6)^0,w,c
 18892  018AD2  1008               	iorwf	(btemp+7)^0,w,c
 18893  018AD4  A4D8               	btfss	status,2,c
 18894  018AD6  D002               	goto	l8034
 18895  018AD8  0E02               	movlw	2
 18896  018ADA  D02E               	goto	L21
 18897  018ADC                     l8034:
 18898  018ADC  0E03               	movlw	3
 18899  018ADE  D02C               	goto	L21
 18900  018AE0                     l8038:
 18901                           
 18902                           ;stkvar	_e @ sp[(-6)+4]
 18903  018AE0  0EFE               	movlw	-2
 18904  018AE2  28E3               	incf	plusw1,w,c
 18905  018AE4  E128               	bnz	l8044
 18906  018AE6  0EFF               	movlw	-1
 18907  018AE8  50E3               	movf	plusw1,w,c
 18908  018AEA  A4D8               	btfss	status,2,c
 18909  018AEC  D024               	goto	l8044
 18910                           
 18911                           ;stkvar	_u @ sp[(-6)+0]
 18912  018AEE  0EFA               	movlw	-6
 18913  018AF0  006F FF8C  F009    	movff	plusw1,btemp+8
 18914  018AF6  0EFB               	movlw	-5
 18915  018AF8  006F FF8C  F00A    	movff	plusw1,btemp+9
 18916  018AFE  0EFC               	movlw	-4
 18917  018B00  006F FF8C  F00B    	movff	plusw1,btemp+10
 18918  018B06  0EFD               	movlw	-3
 18919  018B08  006F FF8C  F00C    	movff	plusw1,btemp+11
 18920  018B0E  0E09               	movlw	9
 18921  018B10                     u6065:
 18922  018B10  90D8               	bcf	status,0,c
 18923  018B12  3609               	rlcf	(btemp+8)^0,f,c
 18924  018B14  360A               	rlcf	(btemp+9)^0,f,c
 18925  018B16  360B               	rlcf	(btemp+10)^0,f,c
 18926  018B18  360C               	rlcf	(btemp+11)^0,f,c
 18927  018B1A  2EE8               	decfsz	wreg,f,c
 18928  018B1C  D7F9               	goto	u6065
 18929  018B1E  5009               	movf	(btemp+8)^0,w,c
 18930  018B20  100A               	iorwf	(btemp+9)^0,w,c
 18931  018B22  100B               	iorwf	(btemp+10)^0,w,c
 18932  018B24  100C               	iorwf	(btemp+11)^0,w,c
 18933  018B26  A4D8               	btfss	status,2,c
 18934  018B28  D002               	goto	u6070
 18935  018B2A  0E01               	movlw	1
 18936  018B2C  D001               	goto	u6080
 18937  018B2E                     u6070:
 18938  018B2E  0E00               	movlw	0
 18939  018B30                     u6080:
 18940  018B30  6E01               	movwf	btemp^0,c
 18941  018B32  6A02               	clrf	(btemp+1)^0,c
 18942  018B34  D004               	goto	l3084
 18943  018B36                     l8044:
 18944  018B36  0E04               	movlw	4
 18945  018B38                     L21:
 18946  018B38  6E01               	movwf	btemp^0,c
 18947  018B3A  0E00               	movlw	0
 18948  018B3C  6E02               	movwf	(btemp+1)^0,c
 18949  018B3E                     l3084:
 18950                           
 18951                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18952  018B3E  0EF6               	movlw	246
 18953  018B40  26E1               	addwf	fsr1l,f,c
 18954  018B42  0EFF               	movlw	255
 18955  018B44  22E2               	addwfc	fsr1h,f,c
 18956  018B46  0012               	return		;funcret
 18957  018B48                     __end_of___fpclassifyf:
 18958                           	opt callstack 0
 18959                           
 18960 ;; *************** function ___fltol *****************
 18961 ;; Defined at:
 18962 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18963 ;; Parameters:    Size  Location     Type
 18964 ;;  f1              4  [STACK] int 
 18965 ;; Auto vars:     Size  Location     Type
 18966 ;;  exp1            1  [STACK] unsigned char 
 18967 ;;  sign1           1  [STACK] unsigned char 
 18968 ;; Return value:  Size  Location     Type
 18969 ;;                  4  [STACK] long 
 18970 ;; Registers used:
 18971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18972 ;; Tracked objects:
 18973 ;;		On entry : 0/0
 18974 ;;		On exit  : 0/0
 18975 ;;		Unchanged: 0/0
 18976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18981 ;;Total ram usage:        0 bytes
 18982 ;; Hardware stack levels used:    1
 18983 ;; Hardware stack levels required when called:   15
 18984 ;; This function calls:
 18985 ;;		Nothing
 18986 ;; This function is called by:
 18987 ;;		_main
 18988 ;;		_calc_bsoc
 18989 ;;		_init_bsoc
 18990 ;;		_Volts_to_SOC
 18991 ;;		_efgtoa
 18992 ;; This function uses a reentrant model
 18993 ;;
 18994                           
 18995                           	psect	text63
 18996  018E4E                     __ptext63:
 18997                           	opt callstack 0
 18998  018E4E                     ___fltol:
 18999                           	opt callstack 0
 19000                           
 19001                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19002  018E4E  52E6               	movf	postinc1,f,c
 19003  018E50  52E6               	movf	postinc1,f,c
 19004                           
 19005                           ;stkvar	_f1 @ sp[(-2)+-4]
 19006                           
 19007                           ;incstack = 0
 19008 ;; hardware stack exceeded
 19009  018E52  0EFA               	movlw	-6
 19010  018E54  006F FF8C  F009    	movff	plusw1,btemp+8
 19011  018E5A  0EFB               	movlw	-5
 19012  018E5C  006F FF8C  F00A    	movff	plusw1,btemp+9
 19013  018E62  0EFC               	movlw	-4
 19014  018E64  006F FF8C  F00B    	movff	plusw1,btemp+10
 19015  018E6A  0EFD               	movlw	-3
 19016  018E6C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19017  018E72  0E18               	movlw	24
 19018  018E74  D005               	goto	u7230
 19019  018E76                     u7235:
 19020  018E76  90D8               	bcf	status,0,c
 19021  018E78  320C               	rrcf	(btemp+11)^0,f,c
 19022  018E7A  320B               	rrcf	(btemp+10)^0,f,c
 19023  018E7C  320A               	rrcf	(btemp+9)^0,f,c
 19024  018E7E  3209               	rrcf	(btemp+8)^0,f,c
 19025  018E80                     u7230:
 19026  018E80  2EE8               	decfsz	wreg,f,c
 19027  018E82  D7F9               	goto	u7235
 19028                           
 19029                           ;stkvar	_exp1 @ sp[(-2)+0]
 19030  018E84  0EFE               	movlw	-2
 19031  018E86  0060  F027  FFE3   	movff	btemp+8,plusw1
 19032  018E8C  0EFE               	movlw	-2
 19033  018E8E  50E3               	movf	plusw1,w,c
 19034  018E90  A4D8               	btfss	status,2,c
 19035  018E92  D006               	goto	l8664
 19036  018E94                     u7240:
 19037  018E94  0E00               	movlw	0
 19038  018E96  6E01               	movwf	btemp^0,c
 19039  018E98  6A02               	clrf	(btemp+1)^0,c
 19040  018E9A  6A03               	clrf	(btemp+2)^0,c
 19041  018E9C  6A04               	clrf	(btemp+3)^0,c
 19042  018E9E  D08B               	goto	l2700
 19043  018EA0                     l8664:
 19044                           
 19045                           ;stkvar	_f1 @ sp[(-2)+-4]
 19046  018EA0  0EFA               	movlw	-6
 19047  018EA2  006F FF8C  F009    	movff	plusw1,btemp+8
 19048  018EA8  0EFB               	movlw	-5
 19049  018EAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 19050  018EB0  0EFC               	movlw	-4
 19051  018EB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 19052  018EB8  0EFD               	movlw	-3
 19053  018EBA  006F FF8C  F00C    	movff	plusw1,btemp+11
 19054  018EC0  0E20               	movlw	32
 19055  018EC2  D005               	goto	u7250
 19056  018EC4                     u7255:
 19057  018EC4  90D8               	bcf	status,0,c
 19058  018EC6  320C               	rrcf	(btemp+11)^0,f,c
 19059  018EC8  320B               	rrcf	(btemp+10)^0,f,c
 19060  018ECA  320A               	rrcf	(btemp+9)^0,f,c
 19061  018ECC  3209               	rrcf	(btemp+8)^0,f,c
 19062  018ECE                     u7250:
 19063  018ECE  2EE8               	decfsz	wreg,f,c
 19064  018ED0  D7F9               	goto	u7255
 19065                           
 19066                           ;stkvar	_sign1 @ sp[(-2)+1]
 19067  018ED2  0EFF               	movlw	-1
 19068  018ED4  0060  F027  FFE3   	movff	btemp+8,plusw1
 19069                           
 19070                           ;stkvar	_f1 @ sp[(-2)+-4]
 19071  018EDA  0EFC               	movlw	-4
 19072  018EDC  8EE3               	bsf	plusw1,7,c
 19073                           
 19074                           ;stkvar	_f1 @ sp[(-2)+-4]
 19075  018EDE  50E1               	movf	fsr1l,w,c
 19076  018EE0  0FFA               	addlw	-6
 19077  018EE2  6ED9               	movwf	fsr2l,c
 19078  018EE4  50E2               	movf	fsr1h,w,c
 19079  018EE6  6EDA               	movwf	fsr2h,c
 19080  018EE8  0EFF               	movlw	255
 19081  018EEA  22DA               	addwfc	fsr2h,f,c
 19082  018EEC  0EFF               	movlw	255
 19083  018EEE  16DE               	andwf	postinc2,f,c
 19084  018EF0  0EFF               	movlw	255
 19085  018EF2  16DE               	andwf	postinc2,f,c
 19086  018EF4  0EFF               	movlw	255
 19087  018EF6  16DE               	andwf	postinc2,f,c
 19088  018EF8  0E00               	movlw	0
 19089  018EFA  16DE               	andwf	postinc2,f,c
 19090                           
 19091                           ;stkvar	_exp1 @ sp[(-2)+0]
 19092  018EFC  0EFE               	movlw	-2
 19093  018EFE  006F FF8C  F001    	movff	plusw1,btemp
 19094  018F04  0E96               	movlw	150
 19095  018F06  5E01               	subwf	btemp^0,f,c
 19096  018F08  0EFE               	movlw	-2
 19097  018F0A  0060  F007  FFE3   	movff	btemp,plusw1
 19098                           
 19099                           ;stkvar	_exp1 @ sp[(-2)+0]
 19100  018F10  0EFE               	movlw	-2
 19101  018F12  AEE3               	btfss	plusw1,7,c
 19102  018F14  D014               	goto	l8682
 19103                           
 19104                           ;stkvar	_exp1 @ sp[(-2)+0]
 19105  018F16  0EFE               	movlw	-2
 19106  018F18  50E3               	movf	plusw1,w,c
 19107  018F1A  0A80               	xorlw	128
 19108  018F1C  0F97               	addlw	151
 19109  018F1E  A0D8               	btfss	status,0,c
 19110  018F20  D7B9               	goto	u7240
 19111  018F22                     l8680:
 19112                           
 19113                           ;stkvar	_f1 @ sp[(-2)+-4]
 19114  018F22  90D8               	bcf	status,0,c
 19115  018F24  0EFD               	movlw	-3
 19116  018F26  32E3               	rrcf	plusw1,f,c
 19117  018F28  0EFC               	movlw	-4
 19118  018F2A  32E3               	rrcf	plusw1,f,c
 19119  018F2C  0EFB               	movlw	-5
 19120  018F2E  32E3               	rrcf	plusw1,f,c
 19121  018F30  0EFA               	movlw	-6
 19122  018F32  32E3               	rrcf	plusw1,f,c
 19123                           
 19124                           ;stkvar	_exp1 @ sp[(-2)+0]
 19125  018F34  0EFE               	movlw	-2
 19126  018F36  2AE3               	incf	plusw1,f,c
 19127  018F38  B4D8               	btfsc	status,2,c
 19128  018F3A  D018               	goto	u7300
 19129  018F3C  D7F2               	goto	l8680
 19130  018F3E                     l8682:
 19131                           
 19132                           ;stkvar	_exp1 @ sp[(-2)+0]
 19133  018F3E  0EFE               	movlw	-2
 19134  018F40  006F FF8C  F001    	movff	plusw1,btemp
 19135  018F46  0E1F               	movlw	31
 19136  018F48  6401               	cpfsgt	btemp^0,c
 19137  018F4A  D00C               	goto	l8690
 19138  018F4C  D7A3               	goto	u7240
 19139  018F4E                     l8688:
 19140                           
 19141                           ;stkvar	_f1 @ sp[(-2)+-4]
 19142  018F4E  90D8               	bcf	status,0,c
 19143  018F50  0EFA               	movlw	-6
 19144  018F52  36E3               	rlcf	plusw1,f,c
 19145  018F54  0EFB               	movlw	-5
 19146  018F56  36E3               	rlcf	plusw1,f,c
 19147  018F58  0EFC               	movlw	-4
 19148  018F5A  36E3               	rlcf	plusw1,f,c
 19149  018F5C  0EFD               	movlw	-3
 19150  018F5E  36E3               	rlcf	plusw1,f,c
 19151                           
 19152                           ;stkvar	_exp1 @ sp[(-2)+0]
 19153  018F60  0EFE               	movlw	-2
 19154  018F62  06E3               	decf	plusw1,f,c
 19155  018F64                     l8690:
 19156                           
 19157                           ;stkvar	_exp1 @ sp[(-2)+0]
 19158  018F64  0EFE               	movlw	-2
 19159  018F66  50E3               	movf	plusw1,w,c
 19160  018F68  A4D8               	btfss	status,2,c
 19161  018F6A  D7F1               	goto	l8688
 19162  018F6C                     u7300:
 19163                           
 19164                           ;stkvar	_sign1 @ sp[(-2)+1]
 19165  018F6C  0EFF               	movlw	-1
 19166  018F6E  50E3               	movf	plusw1,w,c
 19167  018F70  B4D8               	btfsc	status,2,c
 19168  018F72  D011               	goto	u7320
 19169                           
 19170                           ;stkvar	_f1 @ sp[(-2)+-4]
 19171                           ;stkvar	_f1 @ sp[(-2)+-4]
 19172  018F74  0EFA               	movlw	-6
 19173  018F76  6CE3               	negf	plusw1,c
 19174  018F78  0EFB               	movlw	-5
 19175  018F7A  1EE3               	comf	plusw1,f,c
 19176  018F7C  0EFC               	movlw	-4
 19177  018F7E  1EE3               	comf	plusw1,f,c
 19178  018F80  0EFD               	movlw	-3
 19179  018F82  1EE3               	comf	plusw1,f,c
 19180  018F84  E308               	bnc	u7320
 19181  018F86  0EFB               	movlw	-5
 19182  018F88  2AE3               	incf	plusw1,f,c
 19183  018F8A  E305               	bnc	u7320
 19184  018F8C  0EFC               	movlw	-4
 19185  018F8E  2AE3               	incf	plusw1,f,c
 19186  018F90  E302               	bnc	u7320
 19187  018F92  0EFD               	movlw	-3
 19188  018F94  2AE3               	incf	plusw1,f,c
 19189  018F96                     u7320:
 19190                           
 19191                           ;stkvar	_f1 @ sp[(-2)+-4]
 19192  018F96  0EFA               	movlw	-6
 19193  018F98  006F FF8C  F001    	movff	plusw1,btemp
 19194  018F9E  0EFB               	movlw	-5
 19195  018FA0  006F FF8C  F002    	movff	plusw1,btemp+1
 19196  018FA6  0EFC               	movlw	-4
 19197  018FA8  006F FF8C  F003    	movff	plusw1,btemp+2
 19198  018FAE  0EFD               	movlw	-3
 19199  018FB0  006F FF8C  F004    	movff	plusw1,btemp+3
 19200  018FB6                     l2700:
 19201                           
 19202                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19203  018FB6  0EFA               	movlw	250
 19204  018FB8  26E1               	addwf	fsr1l,f,c
 19205  018FBA  0EFF               	movlw	255
 19206  018FBC  22E2               	addwfc	fsr1h,f,c
 19207  018FBE  0012               	return		;funcret
 19208  018FC0                     __end_of___fltol:
 19209                           	opt callstack 0
 19210                           
 19211 ;; *************** function ___flneg *****************
 19212 ;; Defined at:
 19213 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 19214 ;; Parameters:    Size  Location     Type
 19215 ;;  f1              4  [STACK] long 
 19216 ;; Auto vars:     Size  Location     Type
 19217 ;;		None
 19218 ;; Return value:  Size  Location     Type
 19219 ;;                  4  [STACK] long 
 19220 ;; Registers used:
 19221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 19222 ;; Tracked objects:
 19223 ;;		On entry : 0/0
 19224 ;;		On exit  : 0/0
 19225 ;;		Unchanged: 0/0
 19226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19231 ;;Total ram usage:        0 bytes
 19232 ;; Hardware stack levels used:    1
 19233 ;; Hardware stack levels required when called:   15
 19234 ;; This function calls:
 19235 ;;		Nothing
 19236 ;; This function is called by:
 19237 ;;		_calc_bsoc
 19238 ;;		_efgtoa
 19239 ;; This function uses a reentrant model
 19240 ;;
 19241                           
 19242                           	psect	text64
 19243  01B4A0                     __ptext64:
 19244                           	opt callstack 0
 19245  01B4A0                     ___flneg:
 19246                           	opt callstack 0
 19247                           
 19248                           ;stkvar	_f1 @ sp[(0)+-4]
 19249                           
 19250                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19251                           ;incstack = 0
 19252 ;; hardware stack exceeded
 19253  01B4A0  0EFC               	movlw	-4
 19254  01B4A2  50E3               	movf	plusw1,w,c
 19255  01B4A4  E10A               	bnz	u7220
 19256  01B4A6  0EFD               	movlw	-3
 19257  01B4A8  50E3               	movf	plusw1,w,c
 19258  01B4AA  E107               	bnz	u7220
 19259  01B4AC  0EFE               	movlw	-2
 19260  01B4AE  50E3               	movf	plusw1,w,c
 19261  01B4B0  E104               	bnz	u7220
 19262  01B4B2  0EFF               	movlw	-1
 19263  01B4B4  50E3               	movf	plusw1,w,c
 19264  01B4B6  B4D8               	btfsc	status,2,c
 19265  01B4B8  D002               	goto	l8654
 19266  01B4BA                     u7220:
 19267                           
 19268                           ;stkvar	_f1 @ sp[(0)+-4]
 19269  01B4BA  0EFF               	movlw	-1
 19270  01B4BC  7EE3               	btg	plusw1,7,c
 19271  01B4BE                     l8654:
 19272                           
 19273                           ;stkvar	_f1 @ sp[(0)+-4]
 19274  01B4BE  0EFC               	movlw	-4
 19275  01B4C0  006F FF8C  F001    	movff	plusw1,btemp
 19276  01B4C6  0EFD               	movlw	-3
 19277  01B4C8  006F FF8C  F002    	movff	plusw1,btemp+1
 19278  01B4CE  0EFE               	movlw	-2
 19279  01B4D0  006F FF8C  F003    	movff	plusw1,btemp+2
 19280  01B4D6  0EFF               	movlw	-1
 19281  01B4D8  006F FF8C  F004    	movff	plusw1,btemp+3
 19282                           
 19283                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19284  01B4DE  52E5               	movf	postdec1,f,c
 19285  01B4E0  52E5               	movf	postdec1,f,c
 19286  01B4E2  52E5               	movf	postdec1,f,c
 19287  01B4E4  52E5               	movf	postdec1,f,c
 19288  01B4E6  0012               	return		;funcret
 19289  01B4E8                     __end_of___flneg:
 19290                           	opt callstack 0
 19291                           
 19292 ;; *************** function ___fleq *****************
 19293 ;; Defined at:
 19294 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 19295 ;; Parameters:    Size  Location     Type
 19296 ;;  ff1             4  [STACK] long 
 19297 ;;  ff2             4  [STACK] long 
 19298 ;; Auto vars:     Size  Location     Type
 19299 ;;		None
 19300 ;; Return value:  Size  Location     Type
 19301 ;;		None               void
 19302 ;; Registers used:
 19303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19304 ;; Tracked objects:
 19305 ;;		On entry : 0/0
 19306 ;;		On exit  : 0/0
 19307 ;;		Unchanged: 0/0
 19308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19313 ;;Total ram usage:        0 bytes
 19314 ;; Hardware stack levels used:    1
 19315 ;; Hardware stack levels required when called:   15
 19316 ;; This function calls:
 19317 ;;		Nothing
 19318 ;; This function is called by:
 19319 ;;		_efgtoa
 19320 ;; This function uses a reentrant model
 19321 ;;
 19322                           
 19323                           	psect	text65
 19324  01A492                     __ptext65:
 19325                           	opt callstack 0
 19326  01A492                     ___fleq:
 19327                           	opt callstack 0
 19328                           
 19329                           ;stkvar	_ff1 @ sp[(0)+-4]
 19330                           
 19331                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19332                           ;incstack = 0
 19333 ;; hardware stack exceeded
 19334  01A492  50E1               	movf	fsr1l,w,c
 19335  01A494  0FFC               	addlw	-4
 19336  01A496  6ED9               	movwf	fsr2l,c
 19337  01A498  50E2               	movf	fsr1h,w,c
 19338  01A49A  6EDA               	movwf	fsr2h,c
 19339  01A49C  0EFF               	movlw	255
 19340  01A49E  22DA               	addwfc	fsr2h,f,c
 19341  01A4A0  0E00               	movlw	0
 19342  01A4A2  14DE               	andwf	postinc2,w,c
 19343  01A4A4  6E09               	movwf	(btemp+8)^0,c
 19344  01A4A6  0E00               	movlw	0
 19345  01A4A8  14DE               	andwf	postinc2,w,c
 19346  01A4AA  6E0A               	movwf	(btemp+9)^0,c
 19347  01A4AC  0E80               	movlw	128
 19348  01A4AE  14DE               	andwf	postinc2,w,c
 19349  01A4B0  6E0B               	movwf	(btemp+10)^0,c
 19350  01A4B2  0E7F               	movlw	127
 19351  01A4B4  14DE               	andwf	postinc2,w,c
 19352  01A4B6  6E0C               	movwf	(btemp+11)^0,c
 19353  01A4B8  5009               	movf	(btemp+8)^0,w,c
 19354  01A4BA  100A               	iorwf	(btemp+9)^0,w,c
 19355  01A4BC  100B               	iorwf	(btemp+10)^0,w,c
 19356  01A4BE  100C               	iorwf	(btemp+11)^0,w,c
 19357  01A4C0  A4D8               	btfss	status,2,c
 19358  01A4C2  D008               	goto	l8612
 19359                           
 19360                           ;stkvar	_ff1 @ sp[(0)+-4]
 19361  01A4C4  0EFC               	movlw	-4
 19362  01A4C6  6AE3               	clrf	plusw1,c
 19363  01A4C8  0EFD               	movlw	-3
 19364  01A4CA  6AE3               	clrf	plusw1,c
 19365  01A4CC  0EFE               	movlw	-2
 19366  01A4CE  6AE3               	clrf	plusw1,c
 19367  01A4D0  0EFF               	movlw	-1
 19368  01A4D2  6AE3               	clrf	plusw1,c
 19369  01A4D4                     l8612:
 19370                           
 19371                           ;stkvar	_ff2 @ sp[(0)+-8]
 19372  01A4D4  50E1               	movf	fsr1l,w,c
 19373  01A4D6  0FF8               	addlw	-8
 19374  01A4D8  6ED9               	movwf	fsr2l,c
 19375  01A4DA  50E2               	movf	fsr1h,w,c
 19376  01A4DC  6EDA               	movwf	fsr2h,c
 19377  01A4DE  0EFF               	movlw	255
 19378  01A4E0  22DA               	addwfc	fsr2h,f,c
 19379  01A4E2  0E00               	movlw	0
 19380  01A4E4  14DE               	andwf	postinc2,w,c
 19381  01A4E6  6E09               	movwf	(btemp+8)^0,c
 19382  01A4E8  0E00               	movlw	0
 19383  01A4EA  14DE               	andwf	postinc2,w,c
 19384  01A4EC  6E0A               	movwf	(btemp+9)^0,c
 19385  01A4EE  0E80               	movlw	128
 19386  01A4F0  14DE               	andwf	postinc2,w,c
 19387  01A4F2  6E0B               	movwf	(btemp+10)^0,c
 19388  01A4F4  0E7F               	movlw	127
 19389  01A4F6  14DE               	andwf	postinc2,w,c
 19390  01A4F8  6E0C               	movwf	(btemp+11)^0,c
 19391  01A4FA  5009               	movf	(btemp+8)^0,w,c
 19392  01A4FC  100A               	iorwf	(btemp+9)^0,w,c
 19393  01A4FE  100B               	iorwf	(btemp+10)^0,w,c
 19394  01A500  100C               	iorwf	(btemp+11)^0,w,c
 19395  01A502  A4D8               	btfss	status,2,c
 19396  01A504  D008               	goto	l8616
 19397                           
 19398                           ;stkvar	_ff2 @ sp[(0)+-8]
 19399  01A506  0EF8               	movlw	-8
 19400  01A508  6AE3               	clrf	plusw1,c
 19401  01A50A  0EF9               	movlw	-7
 19402  01A50C  6AE3               	clrf	plusw1,c
 19403  01A50E  0EFA               	movlw	-6
 19404  01A510  6AE3               	clrf	plusw1,c
 19405  01A512  0EFB               	movlw	-5
 19406  01A514  6AE3               	clrf	plusw1,c
 19407  01A516                     l8616:
 19408                           
 19409                           ;stkvar	_ff2 @ sp[(0)+-8]
 19410                           ;stkvar	_ff1 @ sp[(0)+-4]
 19411  01A516  50E1               	movf	fsr1l,w,c
 19412  01A518  0FFC               	addlw	-4
 19413  01A51A  6ED9               	movwf	fsr2l,c
 19414  01A51C  50E2               	movf	fsr1h,w,c
 19415  01A51E  6EDA               	movwf	fsr2h,c
 19416  01A520  0EFF               	movlw	255
 19417  01A522  22DA               	addwfc	fsr2h,f,c
 19418  01A524  0EF8               	movlw	-8
 19419  01A526  50E3               	movf	plusw1,w,c
 19420  01A528  18DE               	xorwf	postinc2,w,c
 19421  01A52A  E10D               	bnz	u7160
 19422  01A52C  0EF9               	movlw	-7
 19423  01A52E  50E3               	movf	plusw1,w,c
 19424  01A530  18DE               	xorwf	postinc2,w,c
 19425  01A532  E109               	bnz	u7160
 19426  01A534  0EFA               	movlw	-6
 19427  01A536  50E3               	movf	plusw1,w,c
 19428  01A538  18DE               	xorwf	postinc2,w,c
 19429  01A53A  E105               	bnz	u7160
 19430  01A53C  0EFB               	movlw	-5
 19431  01A53E  50E3               	movf	plusw1,w,c
 19432  01A540  18DE               	xorwf	postinc2,w,c
 19433  01A542  B4D8               	btfsc	status,2,c
 19434  01A544  D002               	goto	l8620
 19435  01A546                     u7160:
 19436  01A546  9001               	bcf	btemp& (0+255),0,c
 19437  01A548  D001               	goto	l2662
 19438  01A54A                     l8620:
 19439  01A54A  8001               	bsf	btemp& (0+255),0,c
 19440  01A54C                     l2662:
 19441                           
 19442                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 19443  01A54C  0EF8               	movlw	248
 19444  01A54E  26E1               	addwf	fsr1l,f,c
 19445  01A550  0EFF               	movlw	255
 19446  01A552  22E2               	addwfc	fsr1h,f,c
 19447  01A554  0012               	return		;funcret
 19448  01A556                     __end_of___fleq:
 19449                           	opt callstack 0
 19450                           
 19451 ;; *************** function ___awmod *****************
 19452 ;; Defined at:
 19453 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 19454 ;; Parameters:    Size  Location     Type
 19455 ;;  dividend        2  [STACK] int 
 19456 ;;  divisor         2  [STACK] int 
 19457 ;; Auto vars:     Size  Location     Type
 19458 ;;  sign            1  [STACK] unsigned char 
 19459 ;;  counter         1  [STACK] unsigned char 
 19460 ;; Return value:  Size  Location     Type
 19461 ;;                  2  [STACK] int 
 19462 ;; Registers used:
 19463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19464 ;; Tracked objects:
 19465 ;;		On entry : 0/0
 19466 ;;		On exit  : 0/0
 19467 ;;		Unchanged: 0/0
 19468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19473 ;;Total ram usage:        0 bytes
 19474 ;; Hardware stack levels used:    1
 19475 ;; Hardware stack levels required when called:   15
 19476 ;; This function calls:
 19477 ;;		Nothing
 19478 ;; This function is called by:
 19479 ;;		_efgtoa
 19480 ;; This function uses a reentrant model
 19481 ;;
 19482                           
 19483                           	psect	text66
 19484  019AE8                     __ptext66:
 19485                           	opt callstack 0
 19486  019AE8                     ___awmod:
 19487                           	opt callstack 0
 19488                           
 19489                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19490  019AE8  52E6               	movf	postinc1,f,c
 19491  019AEA  52E6               	movf	postinc1,f,c
 19492                           
 19493                           ;stkvar	_sign @ sp[(-2)+0]
 19494                           
 19495                           ;incstack = 0
 19496 ;; hardware stack exceeded
 19497  019AEC  0EFE               	movlw	-2
 19498  019AEE  6AE3               	clrf	plusw1,c
 19499                           
 19500                           ;stkvar	_dividend @ sp[(-2)+-2]
 19501  019AF0  0EFD               	movlw	-3
 19502  019AF2  AEE3               	btfss	plusw1,7,c
 19503  019AF4  D009               	goto	l8578
 19504                           
 19505                           ;stkvar	_dividend @ sp[(-2)+-2]
 19506                           ;stkvar	_dividend @ sp[(-2)+-2]
 19507  019AF6  0EFC               	movlw	-4
 19508  019AF8  6CE3               	negf	plusw1,c
 19509  019AFA  0EFD               	movlw	-3
 19510  019AFC  1EE3               	comf	plusw1,f,c
 19511  019AFE  B0D8               	btfsc	status,0,c
 19512  019B00  2AE3               	incf	plusw1,f,c
 19513                           
 19514                           ;stkvar	_sign @ sp[(-2)+0]
 19515  019B02  0EFE               	movlw	-2
 19516  019B04  6AE3               	clrf	plusw1,c
 19517  019B06  2AE3               	incf	plusw1,f,c
 19518  019B08                     l8578:
 19519                           
 19520                           ;stkvar	_divisor @ sp[(-2)+-4]
 19521  019B08  0EFB               	movlw	-5
 19522  019B0A  AEE3               	btfss	plusw1,7,c
 19523  019B0C  D006               	goto	l8582
 19524                           
 19525                           ;stkvar	_divisor @ sp[(-2)+-4]
 19526                           ;stkvar	_divisor @ sp[(-2)+-4]
 19527  019B0E  0EFA               	movlw	-6
 19528  019B10  6CE3               	negf	plusw1,c
 19529  019B12  0EFB               	movlw	-5
 19530  019B14  1EE3               	comf	plusw1,f,c
 19531  019B16  B0D8               	btfsc	status,0,c
 19532  019B18  2AE3               	incf	plusw1,f,c
 19533  019B1A                     l8582:
 19534                           
 19535                           ;stkvar	_divisor @ sp[(-2)+-4]
 19536  019B1A  0EFA               	movlw	-6
 19537  019B1C  006F FF8C  F001    	movff	plusw1,btemp
 19538  019B22  0EFB               	movlw	-5
 19539  019B24  50E3               	movf	plusw1,w,c
 19540  019B26  1001               	iorwf	btemp^0,w,c
 19541  019B28  B4D8               	btfsc	status,2,c
 19542  019B2A  D053               	goto	u7120
 19543                           
 19544                           ;stkvar	_counter @ sp[(-2)+1]
 19545  019B2C  0EFF               	movlw	-1
 19546  019B2E  6AE3               	clrf	plusw1,c
 19547  019B30  D012               	goto	L22
 19548  019B32                     l8586:
 19549                           
 19550                           ;stkvar	_divisor @ sp[(-2)+-4]
 19551  019B32  0EFA               	movlw	-6
 19552  019B34  50E3               	movf	plusw1,w,c
 19553  019B36  90D8               	bcf	status,0,c
 19554  019B38  34E8               	rlcf	wreg,w,c
 19555  019B3A  6E01               	movwf	btemp^0,c
 19556  019B3C  0EFA               	movlw	-6
 19557  019B3E  0060  F007  FFE3   	movff	btemp,plusw1
 19558  019B44  0EFB               	movlw	-5
 19559  019B46  50E3               	movf	plusw1,w,c
 19560  019B48  34E8               	rlcf	wreg,w,c
 19561  019B4A  6E01               	movwf	btemp^0,c
 19562  019B4C  0EFB               	movlw	-5
 19563  019B4E  0060  F007  FFE3   	movff	btemp,plusw1
 19564                           
 19565                           ;stkvar	_counter @ sp[(-2)+1]
 19566  019B54  0EFF               	movlw	-1
 19567  019B56                     L22:
 19568  019B56  2AE3               	incf	plusw1,f,c
 19569                           
 19570                           ;stkvar	_divisor @ sp[(-2)+-4]
 19571  019B58  0EFB               	movlw	-5
 19572  019B5A  AEE3               	btfss	plusw1,7,c
 19573  019B5C  D7EA               	goto	l8586
 19574  019B5E                     u7100:
 19575                           
 19576                           ;stkvar	_divisor @ sp[(-2)+-4]
 19577  019B5E  0EFA               	movlw	-6
 19578  019B60  006F FF8C  F00B    	movff	plusw1,btemp+10
 19579  019B66  0EFB               	movlw	-5
 19580  019B68  006F FF8C  F00C    	movff	plusw1,btemp+11
 19581                           
 19582                           ;stkvar	_dividend @ sp[(-2)+-2]
 19583  019B6E  0EFC               	movlw	-4
 19584  019B70  006F FF8C  F009    	movff	plusw1,btemp+8
 19585  019B76  0EFD               	movlw	-3
 19586  019B78  006F FF8C  F00A    	movff	plusw1,btemp+9
 19587  019B7E  500B               	movf	(btemp+10)^0,w,c
 19588  019B80  5C09               	subwf	(btemp+8)^0,w,c
 19589  019B82  500C               	movf	(btemp+11)^0,w,c
 19590  019B84  580A               	subwfb	(btemp+9)^0,w,c
 19591  019B86  A0D8               	btfss	status,0,c
 19592  019B88  D014               	goto	l8596
 19593                           
 19594                           ;stkvar	_divisor @ sp[(-2)+-4]
 19595                           ;stkvar	_dividend @ sp[(-2)+-2]
 19596  019B8A  0EFC               	movlw	-4
 19597  019B8C  50E3               	movf	plusw1,w,c
 19598  019B8E  6E01               	movwf	btemp^0,c
 19599  019B90  0EFA               	movlw	-6
 19600  019B92  50E3               	movf	plusw1,w,c
 19601  019B94  5E01               	subwf	btemp^0,f,c
 19602  019B96  0EFC               	movlw	-4
 19603  019B98  0060  F007  FFE3   	movff	btemp,plusw1
 19604  019B9E  0EFD               	movlw	-3
 19605  019BA0  50E3               	movf	plusw1,w,c
 19606  019BA2  6E01               	movwf	btemp^0,c
 19607  019BA4  0EFB               	movlw	-5
 19608  019BA6  50E3               	movf	plusw1,w,c
 19609  019BA8  5A01               	subwfb	btemp^0,f,c
 19610  019BAA  0EFD               	movlw	-3
 19611  019BAC  0060  F007  FFE3   	movff	btemp,plusw1
 19612  019BB2                     l8596:
 19613                           
 19614                           ;stkvar	_divisor @ sp[(-2)+-4]
 19615  019BB2  90D8               	bcf	status,0,c
 19616  019BB4  0EFB               	movlw	-5
 19617  019BB6  32E3               	rrcf	plusw1,f,c
 19618  019BB8  0EFA               	movlw	-6
 19619  019BBA  32E3               	rrcf	plusw1,f,c
 19620                           
 19621                           ;stkvar	_counter @ sp[(-2)+1]
 19622  019BBC  0EFF               	movlw	-1
 19623  019BBE  50E3               	movf	plusw1,w,c
 19624  019BC0  6E01               	movwf	btemp^0,c
 19625  019BC2  0E01               	movlw	1
 19626  019BC4  5E01               	subwf	btemp^0,f,c
 19627  019BC6  0EFF               	movlw	-1
 19628  019BC8  0060  F007  FFE3   	movff	btemp,plusw1
 19629  019BCE  A4D8               	btfss	status,2,c
 19630  019BD0  D7C6               	goto	u7100
 19631  019BD2                     u7120:
 19632                           
 19633                           ;stkvar	_sign @ sp[(-2)+0]
 19634  019BD2  0EFE               	movlw	-2
 19635  019BD4  50E3               	movf	plusw1,w,c
 19636  019BD6  B4D8               	btfsc	status,2,c
 19637  019BD8  D006               	goto	l8604
 19638                           
 19639                           ;stkvar	_dividend @ sp[(-2)+-2]
 19640                           ;stkvar	_dividend @ sp[(-2)+-2]
 19641  019BDA  0EFC               	movlw	-4
 19642  019BDC  6CE3               	negf	plusw1,c
 19643  019BDE  0EFD               	movlw	-3
 19644  019BE0  1EE3               	comf	plusw1,f,c
 19645  019BE2  B0D8               	btfsc	status,0,c
 19646  019BE4  2AE3               	incf	plusw1,f,c
 19647  019BE6                     l8604:
 19648                           
 19649                           ;stkvar	_dividend @ sp[(-2)+-2]
 19650  019BE6  0EFC               	movlw	-4
 19651  019BE8  006F FF8C  F001    	movff	plusw1,btemp
 19652  019BEE  0EFD               	movlw	-3
 19653  019BF0  006F FF8C  F002    	movff	plusw1,btemp+1
 19654                           
 19655                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19656  019BF6  0EFA               	movlw	250
 19657  019BF8  26E1               	addwf	fsr1l,f,c
 19658  019BFA  0EFF               	movlw	255
 19659  019BFC  22E2               	addwfc	fsr1h,f,c
 19660  019BFE  0012               	return		;funcret
 19661  019C00                     __end_of___awmod:
 19662                           	opt callstack 0
 19663                           
 19664 ;; *************** function ___awdiv *****************
 19665 ;; Defined at:
 19666 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19667 ;; Parameters:    Size  Location     Type
 19668 ;;  dividend        2  [STACK] int 
 19669 ;;  divisor         2  [STACK] int 
 19670 ;; Auto vars:     Size  Location     Type
 19671 ;;  quotient        2  [STACK] int 
 19672 ;;  sign            1  [STACK] unsigned char 
 19673 ;;  counter         1  [STACK] unsigned char 
 19674 ;; Return value:  Size  Location     Type
 19675 ;;                  2  [STACK] int 
 19676 ;; Registers used:
 19677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19678 ;; Tracked objects:
 19679 ;;		On entry : 0/0
 19680 ;;		On exit  : 0/0
 19681 ;;		Unchanged: 0/0
 19682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19687 ;;Total ram usage:        0 bytes
 19688 ;; Hardware stack levels used:    1
 19689 ;; Hardware stack levels required when called:   15
 19690 ;; This function calls:
 19691 ;;		Nothing
 19692 ;; This function is called by:
 19693 ;;		_efgtoa
 19694 ;; This function uses a reentrant model
 19695 ;;
 19696                           
 19697                           	psect	text67
 19698  019286                     __ptext67:
 19699                           	opt callstack 0
 19700  019286                     ___awdiv:
 19701                           	opt callstack 0
 19702                           
 19703                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19704  019286  52E6               	movf	postinc1,f,c
 19705  019288  52E6               	movf	postinc1,f,c
 19706  01928A  52E6               	movf	postinc1,f,c
 19707  01928C  52E6               	movf	postinc1,f,c
 19708                           
 19709                           ;stkvar	_sign @ sp[(-4)+2]
 19710                           
 19711                           ;incstack = 0
 19712 ;; hardware stack exceeded
 19713  01928E  0EFE               	movlw	-2
 19714  019290  6AE3               	clrf	plusw1,c
 19715                           
 19716                           ;stkvar	_divisor @ sp[(-4)+-4]
 19717  019292  0EF9               	movlw	-7
 19718  019294  AEE3               	btfss	plusw1,7,c
 19719  019296  D009               	goto	l8532
 19720                           
 19721                           ;stkvar	_divisor @ sp[(-4)+-4]
 19722                           ;stkvar	_divisor @ sp[(-4)+-4]
 19723  019298  0EF8               	movlw	-8
 19724  01929A  6CE3               	negf	plusw1,c
 19725  01929C  0EF9               	movlw	-7
 19726  01929E  1EE3               	comf	plusw1,f,c
 19727  0192A0  B0D8               	btfsc	status,0,c
 19728  0192A2  2AE3               	incf	plusw1,f,c
 19729                           
 19730                           ;stkvar	_sign @ sp[(-4)+2]
 19731  0192A4  0EFE               	movlw	-2
 19732  0192A6  6AE3               	clrf	plusw1,c
 19733  0192A8  2AE3               	incf	plusw1,f,c
 19734  0192AA                     l8532:
 19735                           
 19736                           ;stkvar	_dividend @ sp[(-4)+-2]
 19737  0192AA  0EFB               	movlw	-5
 19738  0192AC  AEE3               	btfss	plusw1,7,c
 19739  0192AE  D008               	goto	l8538
 19740                           
 19741                           ;stkvar	_dividend @ sp[(-4)+-2]
 19742                           ;stkvar	_dividend @ sp[(-4)+-2]
 19743  0192B0  0EFA               	movlw	-6
 19744  0192B2  6CE3               	negf	plusw1,c
 19745  0192B4  0EFB               	movlw	-5
 19746  0192B6  1EE3               	comf	plusw1,f,c
 19747  0192B8  B0D8               	btfsc	status,0,c
 19748  0192BA  2AE3               	incf	plusw1,f,c
 19749                           
 19750                           ;stkvar	_sign @ sp[(-4)+2]
 19751  0192BC  0EFE               	movlw	-2
 19752  0192BE  70E3               	btg	plusw1,0,c
 19753  0192C0                     l8538:
 19754                           
 19755                           ;stkvar	_quotient @ sp[(-4)+0]
 19756  0192C0  0EFC               	movlw	-4
 19757  0192C2  6AE3               	clrf	plusw1,c
 19758  0192C4  0EFD               	movlw	-3
 19759  0192C6  6AE3               	clrf	plusw1,c
 19760                           
 19761                           ;stkvar	_divisor @ sp[(-4)+-4]
 19762  0192C8  0EF8               	movlw	-8
 19763  0192CA  006F FF8C  F001    	movff	plusw1,btemp
 19764  0192D0  0EF9               	movlw	-7
 19765  0192D2  50E3               	movf	plusw1,w,c
 19766  0192D4  1001               	iorwf	btemp^0,w,c
 19767  0192D6  B4D8               	btfsc	status,2,c
 19768  0192D8  D066               	goto	u7050
 19769                           
 19770                           ;stkvar	_counter @ sp[(-4)+3]
 19771  0192DA  0EFF               	movlw	-1
 19772  0192DC  6AE3               	clrf	plusw1,c
 19773  0192DE  D012               	goto	L23
 19774  0192E0                     l8544:
 19775                           
 19776                           ;stkvar	_divisor @ sp[(-4)+-4]
 19777  0192E0  0EF8               	movlw	-8
 19778  0192E2  50E3               	movf	plusw1,w,c
 19779  0192E4  90D8               	bcf	status,0,c
 19780  0192E6  34E8               	rlcf	wreg,w,c
 19781  0192E8  6E01               	movwf	btemp^0,c
 19782  0192EA  0EF8               	movlw	-8
 19783  0192EC  0060  F007  FFE3   	movff	btemp,plusw1
 19784  0192F2  0EF9               	movlw	-7
 19785  0192F4  50E3               	movf	plusw1,w,c
 19786  0192F6  34E8               	rlcf	wreg,w,c
 19787  0192F8  6E01               	movwf	btemp^0,c
 19788  0192FA  0EF9               	movlw	-7
 19789  0192FC  0060  F007  FFE3   	movff	btemp,plusw1
 19790                           
 19791                           ;stkvar	_counter @ sp[(-4)+3]
 19792  019302  0EFF               	movlw	-1
 19793  019304                     L23:
 19794  019304  2AE3               	incf	plusw1,f,c
 19795                           
 19796                           ;stkvar	_divisor @ sp[(-4)+-4]
 19797  019306  0EF9               	movlw	-7
 19798  019308  AEE3               	btfss	plusw1,7,c
 19799  01930A  D7EA               	goto	l8544
 19800  01930C                     u7030:
 19801                           
 19802                           ;stkvar	_quotient @ sp[(-4)+0]
 19803  01930C  0EFC               	movlw	-4
 19804  01930E  50E3               	movf	plusw1,w,c
 19805  019310  90D8               	bcf	status,0,c
 19806  019312  34E8               	rlcf	wreg,w,c
 19807  019314  6E01               	movwf	btemp^0,c
 19808  019316  0EFC               	movlw	-4
 19809  019318  0060  F007  FFE3   	movff	btemp,plusw1
 19810  01931E  0EFD               	movlw	-3
 19811  019320  50E3               	movf	plusw1,w,c
 19812  019322  34E8               	rlcf	wreg,w,c
 19813  019324  6E01               	movwf	btemp^0,c
 19814  019326  0EFD               	movlw	-3
 19815  019328  0060  F007  FFE3   	movff	btemp,plusw1
 19816                           
 19817                           ;stkvar	_divisor @ sp[(-4)+-4]
 19818  01932E  0EF8               	movlw	-8
 19819  019330  006F FF8C  F00B    	movff	plusw1,btemp+10
 19820  019336  0EF9               	movlw	-7
 19821  019338  006F FF8C  F00C    	movff	plusw1,btemp+11
 19822                           
 19823                           ;stkvar	_dividend @ sp[(-4)+-2]
 19824  01933E  0EFA               	movlw	-6
 19825  019340  006F FF8C  F009    	movff	plusw1,btemp+8
 19826  019346  0EFB               	movlw	-5
 19827  019348  006F FF8C  F00A    	movff	plusw1,btemp+9
 19828  01934E  500B               	movf	(btemp+10)^0,w,c
 19829  019350  5C09               	subwf	(btemp+8)^0,w,c
 19830  019352  500C               	movf	(btemp+11)^0,w,c
 19831  019354  580A               	subwfb	(btemp+9)^0,w,c
 19832  019356  A0D8               	btfss	status,0,c
 19833  019358  D016               	goto	l8558
 19834                           
 19835                           ;stkvar	_divisor @ sp[(-4)+-4]
 19836                           ;stkvar	_dividend @ sp[(-4)+-2]
 19837  01935A  0EFA               	movlw	-6
 19838  01935C  50E3               	movf	plusw1,w,c
 19839  01935E  6E01               	movwf	btemp^0,c
 19840  019360  0EF8               	movlw	-8
 19841  019362  50E3               	movf	plusw1,w,c
 19842  019364  5E01               	subwf	btemp^0,f,c
 19843  019366  0EFA               	movlw	-6
 19844  019368  0060  F007  FFE3   	movff	btemp,plusw1
 19845  01936E  0EFB               	movlw	-5
 19846  019370  50E3               	movf	plusw1,w,c
 19847  019372  6E01               	movwf	btemp^0,c
 19848  019374  0EF9               	movlw	-7
 19849  019376  50E3               	movf	plusw1,w,c
 19850  019378  5A01               	subwfb	btemp^0,f,c
 19851  01937A  0EFB               	movlw	-5
 19852  01937C  0060  F007  FFE3   	movff	btemp,plusw1
 19853                           
 19854                           ;stkvar	_quotient @ sp[(-4)+0]
 19855  019382  0EFC               	movlw	-4
 19856  019384  80E3               	bsf	plusw1,0,c
 19857  019386                     l8558:
 19858                           
 19859                           ;stkvar	_divisor @ sp[(-4)+-4]
 19860  019386  90D8               	bcf	status,0,c
 19861  019388  0EF9               	movlw	-7
 19862  01938A  32E3               	rrcf	plusw1,f,c
 19863  01938C  0EF8               	movlw	-8
 19864  01938E  32E3               	rrcf	plusw1,f,c
 19865                           
 19866                           ;stkvar	_counter @ sp[(-4)+3]
 19867  019390  0EFF               	movlw	-1
 19868  019392  50E3               	movf	plusw1,w,c
 19869  019394  6E01               	movwf	btemp^0,c
 19870  019396  0E01               	movlw	1
 19871  019398  5E01               	subwf	btemp^0,f,c
 19872  01939A  0EFF               	movlw	-1
 19873  01939C  0060  F007  FFE3   	movff	btemp,plusw1
 19874  0193A2  A4D8               	btfss	status,2,c
 19875  0193A4  D7B3               	goto	u7030
 19876  0193A6                     u7050:
 19877                           
 19878                           ;stkvar	_sign @ sp[(-4)+2]
 19879  0193A6  0EFE               	movlw	-2
 19880  0193A8  50E3               	movf	plusw1,w,c
 19881  0193AA  B4D8               	btfsc	status,2,c
 19882  0193AC  D006               	goto	l8566
 19883                           
 19884                           ;stkvar	_quotient @ sp[(-4)+0]
 19885                           ;stkvar	_quotient @ sp[(-4)+0]
 19886  0193AE  0EFC               	movlw	-4
 19887  0193B0  6CE3               	negf	plusw1,c
 19888  0193B2  0EFD               	movlw	-3
 19889  0193B4  1EE3               	comf	plusw1,f,c
 19890  0193B6  B0D8               	btfsc	status,0,c
 19891  0193B8  2AE3               	incf	plusw1,f,c
 19892  0193BA                     l8566:
 19893                           
 19894                           ;stkvar	_quotient @ sp[(-4)+0]
 19895  0193BA  0EFC               	movlw	-4
 19896  0193BC  006F FF8C  F001    	movff	plusw1,btemp
 19897  0193C2  0EFD               	movlw	-3
 19898  0193C4  006F FF8C  F002    	movff	plusw1,btemp+1
 19899                           
 19900                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19901  0193CA  0EF8               	movlw	248
 19902  0193CC  26E1               	addwf	fsr1l,f,c
 19903  0193CE  0EFF               	movlw	255
 19904  0193D0  22E2               	addwfc	fsr1h,f,c
 19905  0193D2  0012               	return		;funcret
 19906  0193D4                     __end_of___awdiv:
 19907                           	opt callstack 0
 19908                           
 19909 ;; *************** function _dtoa *****************
 19910 ;; Defined at:
 19911 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19912 ;; Parameters:    Size  Location     Type
 19913 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19914 ;;		 -> f(6), NULL(0), 
 19915 ;;  d               8  [STACK] long long 
 19916 ;; Auto vars:     Size  Location     Type
 19917 ;;  n               8  [STACK] long long 
 19918 ;;  i               2  [STACK] int 
 19919 ;;  s               2  [STACK] int 
 19920 ;;  w               2  [STACK] int 
 19921 ;;  p               2  [STACK] int 
 19922 ;; Return value:  Size  Location     Type
 19923 ;;                  2  [STACK] int 
 19924 ;; Registers used:
 19925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19926 ;; Tracked objects:
 19927 ;;		On entry : 0/0
 19928 ;;		On exit  : 0/0
 19929 ;;		Unchanged: 0/0
 19930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19935 ;;Total ram usage:        0 bytes
 19936 ;; Hardware stack levels used:    1
 19937 ;; Hardware stack levels required when called:   20
 19938 ;; This function calls:
 19939 ;;		___aodiv
 19940 ;;		___aomod
 19941 ;;		_abs
 19942 ;;		_pad
 19943 ;; This function is called by:
 19944 ;;		_vfpfcnvrt
 19945 ;; This function uses a reentrant model
 19946 ;;
 19947                           
 19948                           	psect	text68
 19949  0157CE                     __ptext68:
 19950                           	opt callstack 0
 19951  0157CE                     _dtoa:
 19952                           	opt callstack 0
 19953                           
 19954                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19955  0157CE  0E12               	movlw	18
 19956  0157D0  26E1               	addwf	fsr1l,f,c
 19957  0157D2  0E00               	movlw	0
 19958  0157D4  22E2               	addwfc	fsr1h,f,c
 19959                           
 19960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19961                           ;stkvar	_d @ sp[(-18)+-10]
 19962                           
 19963                           ;incstack = 0
 19964 ;; hardware stack exceeded
 19965  0157D6  0EE4               	movlw	228
 19966  0157D8  24E1               	addwf	fsr1l,w,c
 19967  0157DA  6ED9               	movwf	fsr2l,c
 19968  0157DC  0EFF               	movlw	255
 19969  0157DE  20E2               	addwfc	fsr1h,w,c
 19970  0157E0  6EDA               	movwf	fsr2h,c
 19971                           
 19972                           ;stkvar	_n @ sp[(-18)+2]
 19973  0157E2  0E08               	movlw	8
 19974  0157E4  6E01               	movwf	btemp^0,c
 19975  0157E6  0EF0               	movlw	-16
 19976  0157E8                     us1094999:
 19977  0157E8  006F FF7B FFE3     	movff	postinc2,plusw1
 19978  0157EE  28E8               	incf	wreg,w,c
 19979  0157F0  2E01               	decfsz	btemp^0,f,c
 19980  0157F2  D7FA               	bra	us1094999
 19981                           
 19982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19983                           ;stkvar	_n @ sp[(-18)+2]
 19984  0157F4  0EF7               	movlw	-9
 19985  0157F6  AEE3               	btfss	plusw1,7,c
 19986  0157F8  D002               	goto	u10950
 19987  0157FA  0E01               	movlw	1
 19988  0157FC  D001               	goto	u10960
 19989  0157FE                     u10950:
 19990  0157FE  0E00               	movlw	0
 19991  015800                     u10960:
 19992  015800  6E0B               	movwf	(btemp+10)^0,c
 19993  015802  6A0C               	clrf	(btemp+11)^0,c
 19994                           
 19995                           ;stkvar	_s @ sp[(-18)+12]
 19996  015804  0EFA               	movlw	-6
 19997  015806  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19998  01580C  0EFB               	movlw	-5
 19999  01580E  0060  F033  FFE3   	movff	btemp+11,plusw1
 20000                           
 20001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 20002                           ;stkvar	_s @ sp[(-18)+12]
 20003  015814  0EFA               	movlw	-6
 20004  015816  006F FF8C  F001    	movff	plusw1,btemp
 20005  01581C  0EFB               	movlw	-5
 20006  01581E  50E3               	movf	plusw1,w,c
 20007  015820  1001               	iorwf	btemp^0,w,c
 20008  015822  B4D8               	btfsc	status,2,c
 20009  015824  D025               	goto	u10980
 20010                           
 20011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 20012                           ;stkvar	_n @ sp[(-18)+2]
 20013                           ;stkvar	_n @ sp[(-18)+2]
 20014  015826  0EF0               	movlw	-16
 20015  015828  6CE3               	negf	plusw1,c
 20016  01582A  0EF1               	movlw	-15
 20017  01582C  1EE3               	comf	plusw1,f,c
 20018  01582E  0EF2               	movlw	-14
 20019  015830  1EE3               	comf	plusw1,f,c
 20020  015832  0EF3               	movlw	-13
 20021  015834  1EE3               	comf	plusw1,f,c
 20022  015836  0EF4               	movlw	-12
 20023  015838  1EE3               	comf	plusw1,f,c
 20024  01583A  0EF5               	movlw	-11
 20025  01583C  1EE3               	comf	plusw1,f,c
 20026  01583E  0EF6               	movlw	-10
 20027  015840  1EE3               	comf	plusw1,f,c
 20028  015842  0EF7               	movlw	-9
 20029  015844  1EE3               	comf	plusw1,f,c
 20030  015846  E314               	bnc	u10980
 20031  015848  0EF1               	movlw	-15
 20032  01584A  2AE3               	incf	plusw1,f,c
 20033  01584C  E311               	bnc	u10980
 20034  01584E  0EF2               	movlw	-14
 20035  015850  2AE3               	incf	plusw1,f,c
 20036  015852  E30E               	bnc	u10980
 20037  015854  0EF3               	movlw	-13
 20038  015856  2AE3               	incf	plusw1,f,c
 20039  015858  E30B               	bnc	u10980
 20040  01585A  0EF4               	movlw	-12
 20041  01585C  2AE3               	incf	plusw1,f,c
 20042  01585E  E308               	bnc	u10980
 20043  015860  0EF5               	movlw	-11
 20044  015862  2AE3               	incf	plusw1,f,c
 20045  015864  E305               	bnc	u10980
 20046  015866  0EF6               	movlw	-10
 20047  015868  2AE3               	incf	plusw1,f,c
 20048  01586A  E302               	bnc	u10980
 20049  01586C  0EF7               	movlw	-9
 20050  01586E  2AE3               	incf	plusw1,f,c
 20051  015870                     u10980:
 20052                           
 20053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 20054  015870  AE3D               	btfss	(_prec+1)^0,7,c
 20055                           
 20056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 20057  015872  923E               	bcf	_flags^0,1,c
 20058                           
 20059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 20060  015874  BE3D               	btfsc	(_prec+1)^0,7,c
 20061  015876  D005               	goto	u11000
 20062  015878  503D               	movf	(_prec+1)^0,w,c
 20063  01587A  E110               	bnz	l11968
 20064  01587C  043C               	decf	_prec^0,w,c
 20065  01587E  B0D8               	btfsc	status,0,c
 20066  015880  D00D               	goto	l11968
 20067  015882                     u11000:
 20068  015882  0E01               	movlw	1
 20069  015884  6E0B               	movwf	(btemp+10)^0,c
 20070  015886  0E00               	movlw	0
 20071  015888  6E0C               	movwf	(btemp+11)^0,c
 20072                           
 20073                           ;stkvar	_p @ sp[(-18)+16]
 20074  01588A  0EFE               	movlw	-2
 20075  01588C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20076  015892  0EFF               	movlw	-1
 20077  015894  0060  F033  FFE3   	movff	btemp+11,plusw1
 20078  01589A  D008               	goto	l2166
 20079  01589C                     l11968:
 20080                           
 20081                           ;stkvar	_p @ sp[(-18)+16]
 20082  01589C  0EFE               	movlw	-2
 20083  01589E  0060  F0F3  FFE3   	movff	_prec,plusw1
 20084  0158A4  0EFF               	movlw	-1
 20085  0158A6  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 20086  0158AC                     l2166:
 20087                           
 20088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 20089                           ;stkvar	_w @ sp[(-18)+14]
 20090  0158AC  0EFC               	movlw	-4
 20091  0158AE  0060  F0EB  FFE3   	movff	_width,plusw1
 20092  0158B4  0EFD               	movlw	-3
 20093  0158B6  0060  F0EF  FFE3   	movff	_width+1,plusw1
 20094                           
 20095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 20096                           ;stkvar	_s @ sp[(-18)+12]
 20097  0158BC  0EFA               	movlw	-6
 20098  0158BE  006F FF8C  F001    	movff	plusw1,btemp
 20099  0158C4  0EFB               	movlw	-5
 20100  0158C6  50E3               	movf	plusw1,w,c
 20101  0158C8  1001               	iorwf	btemp^0,w,c
 20102  0158CA  A4D8               	btfss	status,2,c
 20103  0158CC  D002               	goto	u11020
 20104  0158CE  A43E               	btfss	_flags^0,2,c
 20105  0158D0  D00A               	goto	l11976
 20106  0158D2                     u11020:
 20107                           
 20108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 20109                           ;stkvar	_w @ sp[(-18)+14]
 20110  0158D2  50E1               	movf	fsr1l,w,c
 20111  0158D4  0FFC               	addlw	-4
 20112  0158D6  6ED9               	movwf	fsr2l,c
 20113  0158D8  50E2               	movf	fsr1h,w,c
 20114  0158DA  6EDA               	movwf	fsr2h,c
 20115  0158DC  0EFF               	movlw	255
 20116  0158DE  22DA               	addwfc	fsr2h,f,c
 20117  0158E0  06DE               	decf	postinc2,f,c
 20118  0158E2  0E00               	movlw	0
 20119  0158E4  5ADD               	subwfb	postdec2,f,c
 20120  0158E6                     l11976:
 20121                           
 20122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 20123  0158E6  0E4F               	movlw	79
 20124  0158E8  6E0B               	movwf	(btemp+10)^0,c
 20125  0158EA  0E00               	movlw	0
 20126  0158EC  6E0C               	movwf	(btemp+11)^0,c
 20127                           
 20128                           ;stkvar	_i @ sp[(-18)+10]
 20129  0158EE  0EF8               	movlw	-8
 20130  0158F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20131  0158F6  0EF9               	movlw	-7
 20132  0158F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 20133                           
 20134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 20135  0158FE  0102               	movlb	2	; () banked
 20136  015900  6BE6               	clrf	(_dbuf+79)& (0+255),b
 20137                           
 20138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20139  015902  D109               	goto	l11990
 20140  015904                     l11980:
 20141                           
 20142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 20143                           ;stkvar	_i @ sp[(-18)+10]
 20144  015904  50E1               	movf	fsr1l,w,c
 20145  015906  0FF8               	addlw	-8
 20146  015908  6ED9               	movwf	fsr2l,c
 20147  01590A  50E2               	movf	fsr1h,w,c
 20148  01590C  6EDA               	movwf	fsr2h,c
 20149  01590E  0EFF               	movlw	255
 20150  015910  22DA               	addwfc	fsr2h,f,c
 20151  015912  06DE               	decf	postinc2,f,c
 20152  015914  0E00               	movlw	0
 20153  015916  5ADD               	subwfb	postdec2,f,c
 20154                           
 20155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 20156  015918  0E0A               	movlw	10
 20157  01591A  6EE6               	movwf	postinc1,c
 20158  01591C  0E00               	movlw	0
 20159  01591E  6EE6               	movwf	postinc1,c
 20160  015920  0E00               	movlw	0
 20161  015922  6EE6               	movwf	postinc1,c
 20162  015924  0E00               	movlw	0
 20163  015926  6EE6               	movwf	postinc1,c
 20164  015928  0E00               	movlw	0
 20165  01592A  6EE6               	movwf	postinc1,c
 20166  01592C  0E00               	movlw	0
 20167  01592E  6EE6               	movwf	postinc1,c
 20168  015930  0E00               	movlw	0
 20169  015932  6EE6               	movwf	postinc1,c
 20170  015934  0E00               	movlw	0
 20171  015936  6EE6               	movwf	postinc1,c
 20172                           
 20173                           ;stkvar	_n @ sp[(-26)+2]
 20174  015938  50E1               	movf	fsr1l,w,c
 20175  01593A  0FE8               	addlw	-24
 20176  01593C  6ED9               	movwf	fsr2l,c
 20177  01593E  50E2               	movf	fsr1h,w,c
 20178  015940  6EDA               	movwf	fsr2h,c
 20179  015942  0EFF               	movlw	255
 20180  015944  22DA               	addwfc	fsr2h,f,c
 20181  015946  006F FF7B FFE6     	movff	postinc2,postinc1
 20182  01594C  006F FF7B FFE6     	movff	postinc2,postinc1
 20183  015952  006F FF7B FFE6     	movff	postinc2,postinc1
 20184  015958  006F FF7B FFE6     	movff	postinc2,postinc1
 20185  01595E  006F FF7B FFE6     	movff	postinc2,postinc1
 20186  015964  006F FF7B FFE6     	movff	postinc2,postinc1
 20187  01596A  006F FF7B FFE6     	movff	postinc2,postinc1
 20188  015970  006F FF7B FFE6     	movff	postinc2,postinc1
 20189  015976  ECF0  F0BE         	call	___aomod	;wreg free
 20190  01597A  52E5               	movf	postdec1,f,c
 20191  01597C  006F FF9C  F018    	movff	indf1,btemp+23
 20192  015982  52E5               	movf	postdec1,f,c
 20193  015984  006F FF9C  F017    	movff	indf1,btemp+22
 20194  01598A  52E5               	movf	postdec1,f,c
 20195  01598C  006F FF9C  F016    	movff	indf1,btemp+21
 20196  015992  52E5               	movf	postdec1,f,c
 20197  015994  006F FF9C  F015    	movff	indf1,btemp+20
 20198  01599A  52E5               	movf	postdec1,f,c
 20199  01599C  006F FF9C  F014    	movff	indf1,btemp+19
 20200  0159A2  52E5               	movf	postdec1,f,c
 20201  0159A4  006F FF9C  F013    	movff	indf1,btemp+18
 20202  0159AA  52E5               	movf	postdec1,f,c
 20203  0159AC  006F FF9C  F012    	movff	indf1,btemp+17
 20204  0159B2  52E5               	movf	postdec1,f,c
 20205  0159B4  006F FF9C  F011    	movff	indf1,btemp+16
 20206  0159BA  0EF8               	movlw	248
 20207  0159BC  26E1               	addwf	fsr1l,f,c
 20208  0159BE  0EFF               	movlw	255
 20209  0159C0  22E2               	addwfc	fsr1h,f,c
 20210  0159C2  0060  F044  F00B   	movff	btemp+16,btemp+10
 20211  0159C8  0060  F048  F00C   	movff	btemp+17,btemp+11
 20212  0159CE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20213  0159D4  0060  F033  FFE6   	movff	btemp+11,postinc1
 20214  0159DA  ECE0  F0DA         	call	_abs	;wreg free
 20215  0159DE  0E30               	movlw	48
 20216  0159E0  2601               	addwf	btemp^0,f,c
 20217                           
 20218                           ;stkvar	_i @ sp[(-18)+10]
 20219  0159E2  0EF8               	movlw	-8
 20220  0159E4  006F FF8C  F00B    	movff	plusw1,btemp+10
 20221  0159EA  0EF9               	movlw	-7
 20222  0159EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 20223  0159F2  0E97               	movlw	low _dbuf
 20224  0159F4  240B               	addwf	(btemp+10)^0,w,c
 20225  0159F6  6ED9               	movwf	fsr2l,c
 20226  0159F8  0E02               	movlw	high _dbuf
 20227  0159FA  200C               	addwfc	(btemp+11)^0,w,c
 20228  0159FC  6EDA               	movwf	fsr2h,c
 20229  0159FE  0060  F007  FFDF   	movff	btemp,indf2
 20230                           
 20231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 20232                           ;stkvar	_p @ sp[(-18)+16]
 20233  015A04  50E1               	movf	fsr1l,w,c
 20234  015A06  0FFE               	addlw	-2
 20235  015A08  6ED9               	movwf	fsr2l,c
 20236  015A0A  50E2               	movf	fsr1h,w,c
 20237  015A0C  6EDA               	movwf	fsr2h,c
 20238  015A0E  0EFF               	movlw	255
 20239  015A10  22DA               	addwfc	fsr2h,f,c
 20240  015A12  06DE               	decf	postinc2,f,c
 20241  015A14  0E00               	movlw	0
 20242  015A16  5ADD               	subwfb	postdec2,f,c
 20243                           
 20244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 20245                           ;stkvar	_w @ sp[(-18)+14]
 20246  015A18  50E1               	movf	fsr1l,w,c
 20247  015A1A  0FFC               	addlw	-4
 20248  015A1C  6ED9               	movwf	fsr2l,c
 20249  015A1E  50E2               	movf	fsr1h,w,c
 20250  015A20  6EDA               	movwf	fsr2h,c
 20251  015A22  0EFF               	movlw	255
 20252  015A24  22DA               	addwfc	fsr2h,f,c
 20253  015A26  06DE               	decf	postinc2,f,c
 20254  015A28  0E00               	movlw	0
 20255  015A2A  5ADD               	subwfb	postdec2,f,c
 20256                           
 20257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 20258  015A2C  0E0A               	movlw	10
 20259  015A2E  6EE6               	movwf	postinc1,c
 20260  015A30  0E00               	movlw	0
 20261  015A32  6EE6               	movwf	postinc1,c
 20262  015A34  0E00               	movlw	0
 20263  015A36  6EE6               	movwf	postinc1,c
 20264  015A38  0E00               	movlw	0
 20265  015A3A  6EE6               	movwf	postinc1,c
 20266  015A3C  0E00               	movlw	0
 20267  015A3E  6EE6               	movwf	postinc1,c
 20268  015A40  0E00               	movlw	0
 20269  015A42  6EE6               	movwf	postinc1,c
 20270  015A44  0E00               	movlw	0
 20271  015A46  6EE6               	movwf	postinc1,c
 20272  015A48  0E00               	movlw	0
 20273  015A4A  6EE6               	movwf	postinc1,c
 20274                           
 20275                           ;stkvar	_n @ sp[(-26)+2]
 20276  015A4C  50E1               	movf	fsr1l,w,c
 20277  015A4E  0FE8               	addlw	-24
 20278  015A50  6ED9               	movwf	fsr2l,c
 20279  015A52  50E2               	movf	fsr1h,w,c
 20280  015A54  6EDA               	movwf	fsr2h,c
 20281  015A56  0EFF               	movlw	255
 20282  015A58  22DA               	addwfc	fsr2h,f,c
 20283  015A5A  006F FF7B FFE6     	movff	postinc2,postinc1
 20284  015A60  006F FF7B FFE6     	movff	postinc2,postinc1
 20285  015A66  006F FF7B FFE6     	movff	postinc2,postinc1
 20286  015A6C  006F FF7B FFE6     	movff	postinc2,postinc1
 20287  015A72  006F FF7B FFE6     	movff	postinc2,postinc1
 20288  015A78  006F FF7B FFE6     	movff	postinc2,postinc1
 20289  015A7E  006F FF7B FFE6     	movff	postinc2,postinc1
 20290  015A84  006F FF7B FFE6     	movff	postinc2,postinc1
 20291  015A8A  EC53  F0BB         	call	___aodiv	;wreg free
 20292  015A8E  52E5               	movf	postdec1,f,c
 20293  015A90  006F FF9C  F018    	movff	indf1,btemp+23
 20294  015A96  52E5               	movf	postdec1,f,c
 20295  015A98  006F FF9C  F017    	movff	indf1,btemp+22
 20296  015A9E  52E5               	movf	postdec1,f,c
 20297  015AA0  006F FF9C  F016    	movff	indf1,btemp+21
 20298  015AA6  52E5               	movf	postdec1,f,c
 20299  015AA8  006F FF9C  F015    	movff	indf1,btemp+20
 20300  015AAE  52E5               	movf	postdec1,f,c
 20301  015AB0  006F FF9C  F014    	movff	indf1,btemp+19
 20302  015AB6  52E5               	movf	postdec1,f,c
 20303  015AB8  006F FF9C  F013    	movff	indf1,btemp+18
 20304  015ABE  52E5               	movf	postdec1,f,c
 20305  015AC0  006F FF9C  F012    	movff	indf1,btemp+17
 20306  015AC6  52E5               	movf	postdec1,f,c
 20307  015AC8  006F FF9C  F011    	movff	indf1,btemp+16
 20308  015ACE  0EF8               	movlw	248
 20309  015AD0  26E1               	addwf	fsr1l,f,c
 20310  015AD2  0EFF               	movlw	255
 20311  015AD4  22E2               	addwfc	fsr1h,f,c
 20312                           
 20313                           ;stkvar	_n @ sp[(-18)+2]
 20314  015AD6  0EF0               	movlw	-16
 20315  015AD8  0060  F047  FFE3   	movff	btemp+16,plusw1
 20316  015ADE  0EF1               	movlw	-15
 20317  015AE0  0060  F04B  FFE3   	movff	btemp+17,plusw1
 20318  015AE6  0EF2               	movlw	-14
 20319  015AE8  0060  F04F  FFE3   	movff	btemp+18,plusw1
 20320  015AEE  0EF3               	movlw	-13
 20321  015AF0  0060  F053  FFE3   	movff	btemp+19,plusw1
 20322  015AF6  0EF4               	movlw	-12
 20323  015AF8  0060  F057  FFE3   	movff	btemp+20,plusw1
 20324  015AFE  0EF5               	movlw	-11
 20325  015B00  0060  F05B  FFE3   	movff	btemp+21,plusw1
 20326  015B06  0EF6               	movlw	-10
 20327  015B08  0060  F05F  FFE3   	movff	btemp+22,plusw1
 20328  015B0E  0EF7               	movlw	-9
 20329  015B10  0060  F063  FFE3   	movff	btemp+23,plusw1
 20330  015B16                     l11990:
 20331                           
 20332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 20333                           ;stkvar	_i @ sp[(-18)+10]
 20334  015B16  0EF9               	movlw	-7
 20335  015B18  BEE3               	btfsc	plusw1,7,c
 20336  015B1A  D036               	goto	u11070
 20337  015B1C  0EF9               	movlw	-7
 20338  015B1E  50E3               	movf	plusw1,w,c
 20339  015B20  E104               	bnz	u11030
 20340  015B22  0EF8               	movlw	-8
 20341  015B24  04E3               	decf	plusw1,w,c
 20342  015B26  A0D8               	btfss	status,0,c
 20343  015B28  D02F               	goto	u11070
 20344  015B2A                     u11030:
 20345                           
 20346                           ;stkvar	_n @ sp[(-18)+2]
 20347  015B2A  0EF0               	movlw	-16
 20348  015B2C  50E3               	movf	plusw1,w,c
 20349  015B2E  E115               	bnz	u11041
 20350  015B30  0EF1               	movlw	-15
 20351  015B32  50E3               	movf	plusw1,w,c
 20352  015B34  E112               	bnz	u11041
 20353  015B36  0EF2               	movlw	-14
 20354  015B38  50E3               	movf	plusw1,w,c
 20355  015B3A  E10F               	bnz	u11041
 20356  015B3C  0EF3               	movlw	-13
 20357  015B3E  50E3               	movf	plusw1,w,c
 20358  015B40  E10C               	bnz	u11041
 20359  015B42  0EF4               	movlw	-12
 20360  015B44  50E3               	movf	plusw1,w,c
 20361  015B46  E109               	bnz	u11041
 20362  015B48  0EF5               	movlw	-11
 20363  015B4A  50E3               	movf	plusw1,w,c
 20364  015B4C  E106               	bnz	u11041
 20365  015B4E  0EF6               	movlw	-10
 20366  015B50  50E3               	movf	plusw1,w,c
 20367  015B52  E103               	bnz	u11041
 20368  015B54  0EF7               	movlw	-9
 20369  015B56  50E3               	movf	plusw1,w,c
 20370  015B58  A4D8               	btfss	status,2,c
 20371  015B5A                     u11041:
 20372  015B5A  D6D4               	goto	l11980
 20373                           
 20374                           ;stkvar	_p @ sp[(-18)+16]
 20375  015B5C  0EFF               	movlw	-1
 20376  015B5E  BEE3               	btfsc	plusw1,7,c
 20377  015B60  D007               	goto	u11050
 20378  015B62  0EFF               	movlw	-1
 20379  015B64  50E3               	movf	plusw1,w,c
 20380  015B66  E103               	bnz	u11051
 20381  015B68  0EFE               	movlw	-2
 20382  015B6A  04E3               	decf	plusw1,w,c
 20383  015B6C  B0D8               	btfsc	status,0,c
 20384  015B6E                     u11051:
 20385  015B6E  D6CA               	goto	l11980
 20386  015B70                     u11050:
 20387                           
 20388                           ;stkvar	_w @ sp[(-18)+14]
 20389  015B70  0EFD               	movlw	-3
 20390  015B72  BEE3               	btfsc	plusw1,7,c
 20391  015B74  D009               	goto	u11070
 20392  015B76  0EFD               	movlw	-3
 20393  015B78  50E3               	movf	plusw1,w,c
 20394  015B7A  E104               	bnz	u11060
 20395  015B7C  0EFC               	movlw	-4
 20396  015B7E  04E3               	decf	plusw1,w,c
 20397  015B80  A0D8               	btfss	status,0,c
 20398  015B82  D002               	goto	u11070
 20399  015B84                     u11060:
 20400  015B84  B23E               	btfsc	_flags^0,1,c
 20401  015B86  D6BE               	goto	l11980
 20402  015B88                     u11070:
 20403                           
 20404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 20405                           ;stkvar	_s @ sp[(-18)+12]
 20406  015B88  0EFA               	movlw	-6
 20407  015B8A  006F FF8C  F001    	movff	plusw1,btemp
 20408  015B90  0EFB               	movlw	-5
 20409  015B92  50E3               	movf	plusw1,w,c
 20410  015B94  1001               	iorwf	btemp^0,w,c
 20411  015B96  A4D8               	btfss	status,2,c
 20412  015B98  D002               	goto	u11090
 20413  015B9A  A43E               	btfss	_flags^0,2,c
 20414  015B9C  D033               	goto	l12014
 20415  015B9E                     u11090:
 20416                           
 20417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 20418                           ;stkvar	_i @ sp[(-18)+10]
 20419  015B9E  50E1               	movf	fsr1l,w,c
 20420  015BA0  0FF8               	addlw	-8
 20421  015BA2  6ED9               	movwf	fsr2l,c
 20422  015BA4  50E2               	movf	fsr1h,w,c
 20423  015BA6  6EDA               	movwf	fsr2h,c
 20424  015BA8  0EFF               	movlw	255
 20425  015BAA  22DA               	addwfc	fsr2h,f,c
 20426  015BAC  06DE               	decf	postinc2,f,c
 20427  015BAE  0E00               	movlw	0
 20428  015BB0  5ADD               	subwfb	postdec2,f,c
 20429                           
 20430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 20431                           ;stkvar	_s @ sp[(-18)+12]
 20432  015BB2  0EFA               	movlw	-6
 20433  015BB4  006F FF8C  F001    	movff	plusw1,btemp
 20434  015BBA  0EFB               	movlw	-5
 20435  015BBC  50E3               	movf	plusw1,w,c
 20436  015BBE  1001               	iorwf	btemp^0,w,c
 20437  015BC0  A4D8               	btfss	status,2,c
 20438  015BC2  D002               	goto	l12010
 20439  015BC4  0E2B               	movlw	43
 20440  015BC6  D001               	goto	L24
 20441  015BC8                     l12010:
 20442  015BC8  0E2D               	movlw	45
 20443  015BCA                     L24:
 20444  015BCA  6E0B               	movwf	(btemp+10)^0,c
 20445  015BCC  0E00               	movlw	0
 20446  015BCE  6E0C               	movwf	(btemp+11)^0,c
 20447                           
 20448                           ;stkvar	_dtoa$5517 @ sp[(-18)+0]
 20449  015BD0  0EEE               	movlw	-18
 20450  015BD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20451  015BD8  0EEF               	movlw	-17
 20452  015BDA  0060  F033  FFE3   	movff	btemp+11,plusw1
 20453                           
 20454                           ;stkvar	_dtoa$5517 @ sp[(-18)+0]
 20455                           ;stkvar	_i @ sp[(-18)+10]
 20456  015BE0  0EF8               	movlw	-8
 20457  015BE2  006F FF8C  F00B    	movff	plusw1,btemp+10
 20458  015BE8  0EF9               	movlw	-7
 20459  015BEA  006F FF8C  F00C    	movff	plusw1,btemp+11
 20460  015BF0  0E97               	movlw	low _dbuf
 20461  015BF2  240B               	addwf	(btemp+10)^0,w,c
 20462  015BF4  6ED9               	movwf	fsr2l,c
 20463  015BF6  0E02               	movlw	high _dbuf
 20464  015BF8  200C               	addwfc	(btemp+11)^0,w,c
 20465  015BFA  6EDA               	movwf	fsr2h,c
 20466  015BFC  0EEE               	movlw	-18
 20467  015BFE  006F FF8F FFDF     	movff	plusw1,indf2
 20468  015C04                     l12014:
 20469                           
 20470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 20471                           ;stkvar	_w @ sp[(-18)+14]
 20472  015C04  0EFC               	movlw	-4
 20473  015C06  006F FF8F FFE6     	movff	plusw1,postinc1
 20474  015C0C  006F FF8F FFE6     	movff	plusw1,postinc1
 20475                           
 20476                           ;stkvar	_i @ sp[(-20)+10]
 20477  015C12  0E97               	movlw	low _dbuf
 20478  015C14  6E0B               	movwf	(btemp+10)^0,c
 20479  015C16  0E02               	movlw	high _dbuf
 20480  015C18  6E0C               	movwf	(btemp+11)^0,c
 20481  015C1A  0EF6               	movlw	-10
 20482  015C1C  50E3               	movf	plusw1,w,c
 20483  015C1E  260B               	addwf	(btemp+10)^0,f,c
 20484  015C20  0EF7               	movlw	-9
 20485  015C22  50E3               	movf	plusw1,w,c
 20486  015C24  220C               	addwfc	(btemp+11)^0,f,c
 20487  015C26  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20488  015C2C  0060  F033  FFE6   	movff	btemp+11,postinc1
 20489                           
 20490                           ;stkvar	_fp @ sp[(-22)+-2]
 20491  015C32  0EE8               	movlw	-24
 20492  015C34  006F FF8F FFE6     	movff	plusw1,postinc1
 20493  015C3A  006F FF8F FFE6     	movff	plusw1,postinc1
 20494  015C40  EC00  F0CE         	call	_pad	;wreg free
 20495                           
 20496                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 20497  015C44  0EE4               	movlw	228
 20498  015C46  26E1               	addwf	fsr1l,f,c
 20499  015C48  0EFF               	movlw	255
 20500  015C4A  22E2               	addwfc	fsr1h,f,c
 20501  015C4C  0012               	return		;funcret
 20502  015C4E                     __end_of_dtoa:
 20503                           	opt callstack 0
 20504                           
 20505 ;; *************** function _abs *****************
 20506 ;; Defined at:
 20507 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 20508 ;; Parameters:    Size  Location     Type
 20509 ;;  a               2  [STACK] int 
 20510 ;; Auto vars:     Size  Location     Type
 20511 ;;		None
 20512 ;; Return value:  Size  Location     Type
 20513 ;;                  2  [STACK] int 
 20514 ;; Registers used:
 20515 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 20516 ;; Tracked objects:
 20517 ;;		On entry : 0/2
 20518 ;;		On exit  : 0/0
 20519 ;;		Unchanged: 0/0
 20520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20525 ;;Total ram usage:        0 bytes
 20526 ;; Hardware stack levels used:    1
 20527 ;; Hardware stack levels required when called:   15
 20528 ;; This function calls:
 20529 ;;		Nothing
 20530 ;; This function is called by:
 20531 ;;		_dtoa
 20532 ;; This function uses a reentrant model
 20533 ;;
 20534                           
 20535                           	psect	text69
 20536  01B5C0                     __ptext69:
 20537                           	opt callstack 0
 20538  01B5C0                     _abs:
 20539                           	opt callstack 0
 20540                           
 20541                           ;stkvar	_a @ sp[(0)+-2]
 20542                           
 20543                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20544                           ;incstack = 0
 20545 ;; hardware stack exceeded
 20546  01B5C0  0EFF               	movlw	-1
 20547  01B5C2  BEE3               	btfsc	plusw1,7,c
 20548  01B5C4  D007               	goto	u6010
 20549  01B5C6  0EFF               	movlw	-1
 20550  01B5C8  50E3               	movf	plusw1,w,c
 20551  01B5CA  E112               	bnz	l8020
 20552  01B5CC  0EFE               	movlw	-2
 20553  01B5CE  04E3               	decf	plusw1,w,c
 20554  01B5D0  B0D8               	btfsc	status,0,c
 20555  01B5D2  D00E               	goto	l8020
 20556  01B5D4                     u6010:
 20557                           
 20558                           ;stkvar	_a @ sp[(0)+-2]
 20559  01B5D4  0EFE               	movlw	-2
 20560  01B5D6  006F FF8C  F001    	movff	plusw1,btemp
 20561  01B5DC  1E01               	comf	btemp^0,f,c
 20562  01B5DE  0EFF               	movlw	-1
 20563  01B5E0  006F FF8C  F002    	movff	plusw1,btemp+1
 20564  01B5E6  1E02               	comf	(btemp+1)^0,f,c
 20565  01B5E8  2A01               	incf	btemp^0,f,c
 20566  01B5EA  B4D8               	btfsc	status,2,c
 20567  01B5EC  2A02               	incf	(btemp+1)^0,f,c
 20568  01B5EE  D008               	goto	l3092
 20569  01B5F0                     l8020:
 20570                           
 20571                           ;stkvar	_a @ sp[(0)+-2]
 20572  01B5F0  0EFE               	movlw	-2
 20573  01B5F2  006F FF8C  F001    	movff	plusw1,btemp
 20574  01B5F8  0EFF               	movlw	-1
 20575  01B5FA  006F FF8C  F002    	movff	plusw1,btemp+1
 20576  01B600                     l3092:
 20577                           
 20578                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 20579  01B600  52E5               	movf	postdec1,f,c
 20580  01B602  52E5               	movf	postdec1,f,c
 20581  01B604  0012               	return		;funcret
 20582  01B606                     __end_of_abs:
 20583                           	opt callstack 0
 20584                           
 20585 ;; *************** function ___aomod *****************
 20586 ;; Defined at:
 20587 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 20588 ;; Parameters:    Size  Location     Type
 20589 ;;  dividend        8  [STACK] long long 
 20590 ;;  divisor         8  [STACK] long long 
 20591 ;; Auto vars:     Size  Location     Type
 20592 ;;  sign            1  [STACK] unsigned char 
 20593 ;;  counter         1  [STACK] unsigned char 
 20594 ;; Return value:  Size  Location     Type
 20595 ;;                  8  [STACK] long long 
 20596 ;; Registers used:
 20597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20598 ;; Tracked objects:
 20599 ;;		On entry : 0/2
 20600 ;;		On exit  : 0/0
 20601 ;;		Unchanged: 0/0
 20602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20607 ;;Total ram usage:        0 bytes
 20608 ;; Hardware stack levels used:    1
 20609 ;; Hardware stack levels required when called:   15
 20610 ;; This function calls:
 20611 ;;		Nothing
 20612 ;; This function is called by:
 20613 ;;		_dtoa
 20614 ;; This function uses a reentrant model
 20615 ;;
 20616                           
 20617                           	psect	text70
 20618  017DE0                     __ptext70:
 20619                           	opt callstack 0
 20620  017DE0                     ___aomod:
 20621                           	opt callstack 0
 20622                           
 20623                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 20624  017DE0  52E6               	movf	postinc1,f,c
 20625  017DE2  52E6               	movf	postinc1,f,c
 20626                           
 20627                           ;stkvar	_sign @ sp[(-2)+0]
 20628                           
 20629                           ;incstack = 0
 20630 ;; hardware stack exceeded
 20631  017DE4  0EFE               	movlw	-2
 20632  017DE6  6AE3               	clrf	plusw1,c
 20633                           
 20634                           ;stkvar	_dividend @ sp[(-2)+-8]
 20635  017DE8  0EFD               	movlw	-3
 20636  017DEA  AEE3               	btfss	plusw1,7,c
 20637  017DEC  D028               	goto	l8178
 20638                           
 20639                           ;stkvar	_dividend @ sp[(-2)+-8]
 20640                           ;stkvar	_dividend @ sp[(-2)+-8]
 20641  017DEE  0EF6               	movlw	-10
 20642  017DF0  6CE3               	negf	plusw1,c
 20643  017DF2  0EF7               	movlw	-9
 20644  017DF4  1EE3               	comf	plusw1,f,c
 20645  017DF6  0EF8               	movlw	-8
 20646  017DF8  1EE3               	comf	plusw1,f,c
 20647  017DFA  0EF9               	movlw	-7
 20648  017DFC  1EE3               	comf	plusw1,f,c
 20649  017DFE  0EFA               	movlw	-6
 20650  017E00  1EE3               	comf	plusw1,f,c
 20651  017E02  0EFB               	movlw	-5
 20652  017E04  1EE3               	comf	plusw1,f,c
 20653  017E06  0EFC               	movlw	-4
 20654  017E08  1EE3               	comf	plusw1,f,c
 20655  017E0A  0EFD               	movlw	-3
 20656  017E0C  1EE3               	comf	plusw1,f,c
 20657  017E0E  E314               	bnc	u6440
 20658  017E10  0EF7               	movlw	-9
 20659  017E12  2AE3               	incf	plusw1,f,c
 20660  017E14  E311               	bnc	u6440
 20661  017E16  0EF8               	movlw	-8
 20662  017E18  2AE3               	incf	plusw1,f,c
 20663  017E1A  E30E               	bnc	u6440
 20664  017E1C  0EF9               	movlw	-7
 20665  017E1E  2AE3               	incf	plusw1,f,c
 20666  017E20  E30B               	bnc	u6440
 20667  017E22  0EFA               	movlw	-6
 20668  017E24  2AE3               	incf	plusw1,f,c
 20669  017E26  E308               	bnc	u6440
 20670  017E28  0EFB               	movlw	-5
 20671  017E2A  2AE3               	incf	plusw1,f,c
 20672  017E2C  E305               	bnc	u6440
 20673  017E2E  0EFC               	movlw	-4
 20674  017E30  2AE3               	incf	plusw1,f,c
 20675  017E32  E302               	bnc	u6440
 20676  017E34  0EFD               	movlw	-3
 20677  017E36  2AE3               	incf	plusw1,f,c
 20678  017E38                     u6440:
 20679                           
 20680                           ;stkvar	_sign @ sp[(-2)+0]
 20681  017E38  0EFE               	movlw	-2
 20682  017E3A  6AE3               	clrf	plusw1,c
 20683  017E3C  2AE3               	incf	plusw1,f,c
 20684  017E3E                     l8178:
 20685                           
 20686                           ;stkvar	_divisor @ sp[(-2)+-16]
 20687  017E3E  0EF5               	movlw	-11
 20688  017E40  AEE3               	btfss	plusw1,7,c
 20689  017E42  D025               	goto	u6460
 20690                           
 20691                           ;stkvar	_divisor @ sp[(-2)+-16]
 20692                           ;stkvar	_divisor @ sp[(-2)+-16]
 20693  017E44  0EEE               	movlw	-18
 20694  017E46  6CE3               	negf	plusw1,c
 20695  017E48  0EEF               	movlw	-17
 20696  017E4A  1EE3               	comf	plusw1,f,c
 20697  017E4C  0EF0               	movlw	-16
 20698  017E4E  1EE3               	comf	plusw1,f,c
 20699  017E50  0EF1               	movlw	-15
 20700  017E52  1EE3               	comf	plusw1,f,c
 20701  017E54  0EF2               	movlw	-14
 20702  017E56  1EE3               	comf	plusw1,f,c
 20703  017E58  0EF3               	movlw	-13
 20704  017E5A  1EE3               	comf	plusw1,f,c
 20705  017E5C  0EF4               	movlw	-12
 20706  017E5E  1EE3               	comf	plusw1,f,c
 20707  017E60  0EF5               	movlw	-11
 20708  017E62  1EE3               	comf	plusw1,f,c
 20709  017E64  E314               	bnc	u6460
 20710  017E66  0EEF               	movlw	-17
 20711  017E68  2AE3               	incf	plusw1,f,c
 20712  017E6A  E311               	bnc	u6460
 20713  017E6C  0EF0               	movlw	-16
 20714  017E6E  2AE3               	incf	plusw1,f,c
 20715  017E70  E30E               	bnc	u6460
 20716  017E72  0EF1               	movlw	-15
 20717  017E74  2AE3               	incf	plusw1,f,c
 20718  017E76  E30B               	bnc	u6460
 20719  017E78  0EF2               	movlw	-14
 20720  017E7A  2AE3               	incf	plusw1,f,c
 20721  017E7C  E308               	bnc	u6460
 20722  017E7E  0EF3               	movlw	-13
 20723  017E80  2AE3               	incf	plusw1,f,c
 20724  017E82  E305               	bnc	u6460
 20725  017E84  0EF4               	movlw	-12
 20726  017E86  2AE3               	incf	plusw1,f,c
 20727  017E88  E302               	bnc	u6460
 20728  017E8A  0EF5               	movlw	-11
 20729  017E8C  2AE3               	incf	plusw1,f,c
 20730  017E8E                     u6460:
 20731                           
 20732                           ;stkvar	_divisor @ sp[(-2)+-16]
 20733  017E8E  0EEE               	movlw	-18
 20734  017E90  50E3               	movf	plusw1,w,c
 20735  017E92  E116               	bnz	u6470
 20736  017E94  0EEF               	movlw	-17
 20737  017E96  50E3               	movf	plusw1,w,c
 20738  017E98  E113               	bnz	u6470
 20739  017E9A  0EF0               	movlw	-16
 20740  017E9C  50E3               	movf	plusw1,w,c
 20741  017E9E  E110               	bnz	u6470
 20742  017EA0  0EF1               	movlw	-15
 20743  017EA2  50E3               	movf	plusw1,w,c
 20744  017EA4  E10D               	bnz	u6470
 20745  017EA6  0EF2               	movlw	-14
 20746  017EA8  50E3               	movf	plusw1,w,c
 20747  017EAA  E10A               	bnz	u6470
 20748  017EAC  0EF3               	movlw	-13
 20749  017EAE  50E3               	movf	plusw1,w,c
 20750  017EB0  E107               	bnz	u6470
 20751  017EB2  0EF4               	movlw	-12
 20752  017EB4  50E3               	movf	plusw1,w,c
 20753  017EB6  E104               	bnz	u6470
 20754  017EB8  0EF5               	movlw	-11
 20755  017EBA  50E3               	movf	plusw1,w,c
 20756  017EBC  B4D8               	btfsc	status,2,c
 20757  017EBE  D075               	goto	u6500
 20758  017EC0                     u6470:
 20759                           
 20760                           ;stkvar	_counter @ sp[(-2)+1]
 20761  017EC0  0EFF               	movlw	-1
 20762  017EC2  6AE3               	clrf	plusw1,c
 20763  017EC4  D012               	goto	L25
 20764  017EC6                     l8186:
 20765                           
 20766                           ;stkvar	_divisor @ sp[(-2)+-16]
 20767  017EC6  90D8               	bcf	status,0,c
 20768  017EC8  0EEE               	movlw	-18
 20769  017ECA  36E3               	rlcf	plusw1,f,c
 20770  017ECC  0EEF               	movlw	-17
 20771  017ECE  36E3               	rlcf	plusw1,f,c
 20772  017ED0  0EF0               	movlw	-16
 20773  017ED2  36E3               	rlcf	plusw1,f,c
 20774  017ED4  0EF1               	movlw	-15
 20775  017ED6  36E3               	rlcf	plusw1,f,c
 20776  017ED8  0EF2               	movlw	-14
 20777  017EDA  36E3               	rlcf	plusw1,f,c
 20778  017EDC  0EF3               	movlw	-13
 20779  017EDE  36E3               	rlcf	plusw1,f,c
 20780  017EE0  0EF4               	movlw	-12
 20781  017EE2  36E3               	rlcf	plusw1,f,c
 20782  017EE4  0EF5               	movlw	-11
 20783  017EE6  36E3               	rlcf	plusw1,f,c
 20784                           
 20785                           ;stkvar	_counter @ sp[(-2)+1]
 20786  017EE8  0EFF               	movlw	-1
 20787  017EEA                     L25:
 20788  017EEA  2AE3               	incf	plusw1,f,c
 20789                           
 20790                           ;stkvar	_divisor @ sp[(-2)+-16]
 20791  017EEC  0EF5               	movlw	-11
 20792  017EEE  AEE3               	btfss	plusw1,7,c
 20793  017EF0  D7EA               	goto	l8186
 20794  017EF2                     u6480:
 20795                           
 20796                           ;stkvar	_divisor @ sp[(-2)+-16]
 20797                           ;stkvar	_dividend @ sp[(-2)+-8]
 20798  017EF2  50E1               	movf	fsr1l,w,c
 20799  017EF4  0FF6               	addlw	-10
 20800  017EF6  6ED9               	movwf	fsr2l,c
 20801  017EF8  50E2               	movf	fsr1h,w,c
 20802  017EFA  6EDA               	movwf	fsr2h,c
 20803  017EFC  0EFF               	movlw	255
 20804  017EFE  22DA               	addwfc	fsr2h,f,c
 20805  017F00  0EEE               	movlw	-18
 20806  017F02  50E3               	movf	plusw1,w,c
 20807  017F04  5CDE               	subwf	postinc2,w,c
 20808  017F06  0EEF               	movlw	-17
 20809  017F08  50E3               	movf	plusw1,w,c
 20810  017F0A  58DE               	subwfb	postinc2,w,c
 20811  017F0C  0EF0               	movlw	-16
 20812  017F0E  50E3               	movf	plusw1,w,c
 20813  017F10  58DE               	subwfb	postinc2,w,c
 20814  017F12  0EF1               	movlw	-15
 20815  017F14  50E3               	movf	plusw1,w,c
 20816  017F16  58DE               	subwfb	postinc2,w,c
 20817  017F18  0EF2               	movlw	-14
 20818  017F1A  50E3               	movf	plusw1,w,c
 20819  017F1C  58DE               	subwfb	postinc2,w,c
 20820  017F1E  0EF3               	movlw	-13
 20821  017F20  50E3               	movf	plusw1,w,c
 20822  017F22  58DE               	subwfb	postinc2,w,c
 20823  017F24  0EF4               	movlw	-12
 20824  017F26  50E3               	movf	plusw1,w,c
 20825  017F28  58DE               	subwfb	postinc2,w,c
 20826  017F2A  0EF5               	movlw	-11
 20827  017F2C  50E3               	movf	plusw1,w,c
 20828  017F2E  58DE               	subwfb	postinc2,w,c
 20829  017F30  A0D8               	btfss	status,0,c
 20830  017F32  D01F               	goto	l8194
 20831                           
 20832                           ;stkvar	_divisor @ sp[(-2)+-16]
 20833                           ;stkvar	_dividend @ sp[(-2)+-8]
 20834  017F34  50E1               	movf	fsr1l,w,c
 20835  017F36  0FF6               	addlw	-10
 20836  017F38  6ED9               	movwf	fsr2l,c
 20837  017F3A  50E2               	movf	fsr1h,w,c
 20838  017F3C  6EDA               	movwf	fsr2h,c
 20839  017F3E  0EFF               	movlw	255
 20840  017F40  22DA               	addwfc	fsr2h,f,c
 20841  017F42  0EEE               	movlw	-18
 20842  017F44  50E3               	movf	plusw1,w,c
 20843  017F46  5EDE               	subwf	postinc2,f,c
 20844  017F48  0EEF               	movlw	-17
 20845  017F4A  50E3               	movf	plusw1,w,c
 20846  017F4C  5ADE               	subwfb	postinc2,f,c
 20847  017F4E  0EF0               	movlw	-16
 20848  017F50  50E3               	movf	plusw1,w,c
 20849  017F52  5ADE               	subwfb	postinc2,f,c
 20850  017F54  0EF1               	movlw	-15
 20851  017F56  50E3               	movf	plusw1,w,c
 20852  017F58  5ADE               	subwfb	postinc2,f,c
 20853  017F5A  0EF2               	movlw	-14
 20854  017F5C  50E3               	movf	plusw1,w,c
 20855  017F5E  5ADE               	subwfb	postinc2,f,c
 20856  017F60  0EF3               	movlw	-13
 20857  017F62  50E3               	movf	plusw1,w,c
 20858  017F64  5ADE               	subwfb	postinc2,f,c
 20859  017F66  0EF4               	movlw	-12
 20860  017F68  50E3               	movf	plusw1,w,c
 20861  017F6A  5ADE               	subwfb	postinc2,f,c
 20862  017F6C  0EF5               	movlw	-11
 20863  017F6E  50E3               	movf	plusw1,w,c
 20864  017F70  5ADE               	subwfb	postinc2,f,c
 20865  017F72                     l8194:
 20866                           
 20867                           ;stkvar	_divisor @ sp[(-2)+-16]
 20868  017F72  90D8               	bcf	status,0,c
 20869  017F74  0EF5               	movlw	-11
 20870  017F76  32E3               	rrcf	plusw1,f,c
 20871  017F78  0EF4               	movlw	-12
 20872  017F7A  32E3               	rrcf	plusw1,f,c
 20873  017F7C  0EF3               	movlw	-13
 20874  017F7E  32E3               	rrcf	plusw1,f,c
 20875  017F80  0EF2               	movlw	-14
 20876  017F82  32E3               	rrcf	plusw1,f,c
 20877  017F84  0EF1               	movlw	-15
 20878  017F86  32E3               	rrcf	plusw1,f,c
 20879  017F88  0EF0               	movlw	-16
 20880  017F8A  32E3               	rrcf	plusw1,f,c
 20881  017F8C  0EEF               	movlw	-17
 20882  017F8E  32E3               	rrcf	plusw1,f,c
 20883  017F90  0EEE               	movlw	-18
 20884  017F92  32E3               	rrcf	plusw1,f,c
 20885                           
 20886                           ;stkvar	_counter @ sp[(-2)+1]
 20887  017F94  0EFF               	movlw	-1
 20888  017F96  50E3               	movf	plusw1,w,c
 20889  017F98  6E01               	movwf	btemp^0,c
 20890  017F9A  0E01               	movlw	1
 20891  017F9C  5E01               	subwf	btemp^0,f,c
 20892  017F9E  0EFF               	movlw	-1
 20893  017FA0  0060  F007  FFE3   	movff	btemp,plusw1
 20894  017FA6  A4D8               	btfss	status,2,c
 20895  017FA8  D7A4               	goto	u6480
 20896  017FAA                     u6500:
 20897                           
 20898                           ;stkvar	_sign @ sp[(-2)+0]
 20899  017FAA  0EFE               	movlw	-2
 20900  017FAC  50E3               	movf	plusw1,w,c
 20901  017FAE  B4D8               	btfsc	status,2,c
 20902  017FB0  D025               	goto	u6520
 20903                           
 20904                           ;stkvar	_dividend @ sp[(-2)+-8]
 20905                           ;stkvar	_dividend @ sp[(-2)+-8]
 20906  017FB2  0EF6               	movlw	-10
 20907  017FB4  6CE3               	negf	plusw1,c
 20908  017FB6  0EF7               	movlw	-9
 20909  017FB8  1EE3               	comf	plusw1,f,c
 20910  017FBA  0EF8               	movlw	-8
 20911  017FBC  1EE3               	comf	plusw1,f,c
 20912  017FBE  0EF9               	movlw	-7
 20913  017FC0  1EE3               	comf	plusw1,f,c
 20914  017FC2  0EFA               	movlw	-6
 20915  017FC4  1EE3               	comf	plusw1,f,c
 20916  017FC6  0EFB               	movlw	-5
 20917  017FC8  1EE3               	comf	plusw1,f,c
 20918  017FCA  0EFC               	movlw	-4
 20919  017FCC  1EE3               	comf	plusw1,f,c
 20920  017FCE  0EFD               	movlw	-3
 20921  017FD0  1EE3               	comf	plusw1,f,c
 20922  017FD2  E314               	bnc	u6520
 20923  017FD4  0EF7               	movlw	-9
 20924  017FD6  2AE3               	incf	plusw1,f,c
 20925  017FD8  E311               	bnc	u6520
 20926  017FDA  0EF8               	movlw	-8
 20927  017FDC  2AE3               	incf	plusw1,f,c
 20928  017FDE  E30E               	bnc	u6520
 20929  017FE0  0EF9               	movlw	-7
 20930  017FE2  2AE3               	incf	plusw1,f,c
 20931  017FE4  E30B               	bnc	u6520
 20932  017FE6  0EFA               	movlw	-6
 20933  017FE8  2AE3               	incf	plusw1,f,c
 20934  017FEA  E308               	bnc	u6520
 20935  017FEC  0EFB               	movlw	-5
 20936  017FEE  2AE3               	incf	plusw1,f,c
 20937  017FF0  E305               	bnc	u6520
 20938  017FF2  0EFC               	movlw	-4
 20939  017FF4  2AE3               	incf	plusw1,f,c
 20940  017FF6  E302               	bnc	u6520
 20941  017FF8  0EFD               	movlw	-3
 20942  017FFA  2AE3               	incf	plusw1,f,c
 20943  017FFC                     u6520:
 20944                           
 20945                           ;stkvar	_dividend @ sp[(-2)+-8]
 20946  017FFC  0EF6               	movlw	246
 20947  017FFE  24E1               	addwf	fsr1l,w,c
 20948  018000  6ED9               	movwf	fsr2l,c
 20949  018002  0EFF               	movlw	255
 20950  018004  20E2               	addwfc	fsr1h,w,c
 20951  018006  6EDA               	movwf	fsr2h,c
 20952                           
 20953                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20954  018008  0E08               	movlw	8
 20955  01800A  6E01               	movwf	btemp^0,c
 20956  01800C  0EF6               	movlw	-10
 20957  01800E                     us653999:
 20958  01800E  006F FF7B FFE3     	movff	postinc2,plusw1
 20959  018014  28E8               	incf	wreg,w,c
 20960  018016  2E01               	decfsz	btemp^0,f,c
 20961  018018  D7FA               	bra	us653999
 20962                           
 20963                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20964  01801A  52E5               	movf	postdec1,f,c
 20965  01801C  52E5               	movf	postdec1,f,c
 20966  01801E  0012               	return		;funcret
 20967  018020                     __end_of___aomod:
 20968                           	opt callstack 0
 20969                           
 20970 ;; *************** function ___aodiv *****************
 20971 ;; Defined at:
 20972 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20973 ;; Parameters:    Size  Location     Type
 20974 ;;  dividend        8  [STACK] long long 
 20975 ;;  divisor         8  [STACK] long long 
 20976 ;; Auto vars:     Size  Location     Type
 20977 ;;  quotient        8  [STACK] long long 
 20978 ;;  sign            1  [STACK] unsigned char 
 20979 ;;  counter         1  [STACK] unsigned char 
 20980 ;; Return value:  Size  Location     Type
 20981 ;;                  8  [STACK] long long 
 20982 ;; Registers used:
 20983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20984 ;; Tracked objects:
 20985 ;;		On entry : 0/2
 20986 ;;		On exit  : 0/0
 20987 ;;		Unchanged: 0/0
 20988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20993 ;;Total ram usage:        0 bytes
 20994 ;; Hardware stack levels used:    1
 20995 ;; Hardware stack levels required when called:   15
 20996 ;; This function calls:
 20997 ;;		Nothing
 20998 ;; This function is called by:
 20999 ;;		_dtoa
 21000 ;; This function uses a reentrant model
 21001 ;;
 21002                           
 21003                           	psect	text71
 21004  0176A6                     __ptext71:
 21005                           	opt callstack 0
 21006  0176A6                     ___aodiv:
 21007                           	opt callstack 0
 21008                           
 21009                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 21010  0176A6  0E0A               	movlw	10
 21011  0176A8  26E1               	addwf	fsr1l,f,c
 21012  0176AA  0E00               	movlw	0
 21013  0176AC  22E2               	addwfc	fsr1h,f,c
 21014                           
 21015                           ;stkvar	_sign @ sp[(-10)+8]
 21016                           
 21017                           ;incstack = 0
 21018 ;; hardware stack exceeded
 21019  0176AE  0EFE               	movlw	-2
 21020  0176B0  6AE3               	clrf	plusw1,c
 21021                           
 21022                           ;stkvar	_divisor @ sp[(-10)+-16]
 21023  0176B2  0EED               	movlw	-19
 21024  0176B4  AEE3               	btfss	plusw1,7,c
 21025  0176B6  D028               	goto	l8134
 21026                           
 21027                           ;stkvar	_divisor @ sp[(-10)+-16]
 21028                           ;stkvar	_divisor @ sp[(-10)+-16]
 21029  0176B8  0EE6               	movlw	-26
 21030  0176BA  6CE3               	negf	plusw1,c
 21031  0176BC  0EE7               	movlw	-25
 21032  0176BE  1EE3               	comf	plusw1,f,c
 21033  0176C0  0EE8               	movlw	-24
 21034  0176C2  1EE3               	comf	plusw1,f,c
 21035  0176C4  0EE9               	movlw	-23
 21036  0176C6  1EE3               	comf	plusw1,f,c
 21037  0176C8  0EEA               	movlw	-22
 21038  0176CA  1EE3               	comf	plusw1,f,c
 21039  0176CC  0EEB               	movlw	-21
 21040  0176CE  1EE3               	comf	plusw1,f,c
 21041  0176D0  0EEC               	movlw	-20
 21042  0176D2  1EE3               	comf	plusw1,f,c
 21043  0176D4  0EED               	movlw	-19
 21044  0176D6  1EE3               	comf	plusw1,f,c
 21045  0176D8  E314               	bnc	u6320
 21046  0176DA  0EE7               	movlw	-25
 21047  0176DC  2AE3               	incf	plusw1,f,c
 21048  0176DE  E311               	bnc	u6320
 21049  0176E0  0EE8               	movlw	-24
 21050  0176E2  2AE3               	incf	plusw1,f,c
 21051  0176E4  E30E               	bnc	u6320
 21052  0176E6  0EE9               	movlw	-23
 21053  0176E8  2AE3               	incf	plusw1,f,c
 21054  0176EA  E30B               	bnc	u6320
 21055  0176EC  0EEA               	movlw	-22
 21056  0176EE  2AE3               	incf	plusw1,f,c
 21057  0176F0  E308               	bnc	u6320
 21058  0176F2  0EEB               	movlw	-21
 21059  0176F4  2AE3               	incf	plusw1,f,c
 21060  0176F6  E305               	bnc	u6320
 21061  0176F8  0EEC               	movlw	-20
 21062  0176FA  2AE3               	incf	plusw1,f,c
 21063  0176FC  E302               	bnc	u6320
 21064  0176FE  0EED               	movlw	-19
 21065  017700  2AE3               	incf	plusw1,f,c
 21066  017702                     u6320:
 21067                           
 21068                           ;stkvar	_sign @ sp[(-10)+8]
 21069  017702  0EFE               	movlw	-2
 21070  017704  6AE3               	clrf	plusw1,c
 21071  017706  2AE3               	incf	plusw1,f,c
 21072  017708                     l8134:
 21073                           
 21074                           ;stkvar	_dividend @ sp[(-10)+-8]
 21075  017708  0EF5               	movlw	-11
 21076  01770A  AEE3               	btfss	plusw1,7,c
 21077  01770C  D027               	goto	l8140
 21078                           
 21079                           ;stkvar	_dividend @ sp[(-10)+-8]
 21080                           ;stkvar	_dividend @ sp[(-10)+-8]
 21081  01770E  0EEE               	movlw	-18
 21082  017710  6CE3               	negf	plusw1,c
 21083  017712  0EEF               	movlw	-17
 21084  017714  1EE3               	comf	plusw1,f,c
 21085  017716  0EF0               	movlw	-16
 21086  017718  1EE3               	comf	plusw1,f,c
 21087  01771A  0EF1               	movlw	-15
 21088  01771C  1EE3               	comf	plusw1,f,c
 21089  01771E  0EF2               	movlw	-14
 21090  017720  1EE3               	comf	plusw1,f,c
 21091  017722  0EF3               	movlw	-13
 21092  017724  1EE3               	comf	plusw1,f,c
 21093  017726  0EF4               	movlw	-12
 21094  017728  1EE3               	comf	plusw1,f,c
 21095  01772A  0EF5               	movlw	-11
 21096  01772C  1EE3               	comf	plusw1,f,c
 21097  01772E  E314               	bnc	u6340
 21098  017730  0EEF               	movlw	-17
 21099  017732  2AE3               	incf	plusw1,f,c
 21100  017734  E311               	bnc	u6340
 21101  017736  0EF0               	movlw	-16
 21102  017738  2AE3               	incf	plusw1,f,c
 21103  01773A  E30E               	bnc	u6340
 21104  01773C  0EF1               	movlw	-15
 21105  01773E  2AE3               	incf	plusw1,f,c
 21106  017740  E30B               	bnc	u6340
 21107  017742  0EF2               	movlw	-14
 21108  017744  2AE3               	incf	plusw1,f,c
 21109  017746  E308               	bnc	u6340
 21110  017748  0EF3               	movlw	-13
 21111  01774A  2AE3               	incf	plusw1,f,c
 21112  01774C  E305               	bnc	u6340
 21113  01774E  0EF4               	movlw	-12
 21114  017750  2AE3               	incf	plusw1,f,c
 21115  017752  E302               	bnc	u6340
 21116  017754  0EF5               	movlw	-11
 21117  017756  2AE3               	incf	plusw1,f,c
 21118  017758                     u6340:
 21119                           
 21120                           ;stkvar	_sign @ sp[(-10)+8]
 21121  017758  0EFE               	movlw	-2
 21122  01775A  70E3               	btg	plusw1,0,c
 21123  01775C                     l8140:
 21124                           
 21125                           ;stkvar	_quotient @ sp[(-10)+0]
 21126  01775C  0E07               	movlw	7
 21127  01775E  6E01               	movwf	btemp^0,c
 21128  017760  0EF6               	movlw	-10
 21129  017762                     u6351:
 21130  017762  6AE3               	clrf	plusw1,c
 21131  017764  2AE8               	incf	wreg,f,c
 21132  017766  0601               	decf	btemp^0,f,c
 21133  017768  E2FC               	bc	u6351
 21134                           
 21135                           ;stkvar	_divisor @ sp[(-10)+-16]
 21136  01776A  0EE6               	movlw	-26
 21137  01776C  50E3               	movf	plusw1,w,c
 21138  01776E  E116               	bnz	u6360
 21139  017770  0EE7               	movlw	-25
 21140  017772  50E3               	movf	plusw1,w,c
 21141  017774  E113               	bnz	u6360
 21142  017776  0EE8               	movlw	-24
 21143  017778  50E3               	movf	plusw1,w,c
 21144  01777A  E110               	bnz	u6360
 21145  01777C  0EE9               	movlw	-23
 21146  01777E  50E3               	movf	plusw1,w,c
 21147  017780  E10D               	bnz	u6360
 21148  017782  0EEA               	movlw	-22
 21149  017784  50E3               	movf	plusw1,w,c
 21150  017786  E10A               	bnz	u6360
 21151  017788  0EEB               	movlw	-21
 21152  01778A  50E3               	movf	plusw1,w,c
 21153  01778C  E107               	bnz	u6360
 21154  01778E  0EEC               	movlw	-20
 21155  017790  50E3               	movf	plusw1,w,c
 21156  017792  E104               	bnz	u6360
 21157  017794  0EED               	movlw	-19
 21158  017796  50E3               	movf	plusw1,w,c
 21159  017798  B4D8               	btfsc	status,2,c
 21160  01779A  D088               	goto	u6390
 21161  01779C                     u6360:
 21162                           
 21163                           ;stkvar	_counter @ sp[(-10)+9]
 21164  01779C  0EFF               	movlw	-1
 21165  01779E  6AE3               	clrf	plusw1,c
 21166  0177A0  D012               	goto	L26
 21167  0177A2                     l8146:
 21168                           
 21169                           ;stkvar	_divisor @ sp[(-10)+-16]
 21170  0177A2  90D8               	bcf	status,0,c
 21171  0177A4  0EE6               	movlw	-26
 21172  0177A6  36E3               	rlcf	plusw1,f,c
 21173  0177A8  0EE7               	movlw	-25
 21174  0177AA  36E3               	rlcf	plusw1,f,c
 21175  0177AC  0EE8               	movlw	-24
 21176  0177AE  36E3               	rlcf	plusw1,f,c
 21177  0177B0  0EE9               	movlw	-23
 21178  0177B2  36E3               	rlcf	plusw1,f,c
 21179  0177B4  0EEA               	movlw	-22
 21180  0177B6  36E3               	rlcf	plusw1,f,c
 21181  0177B8  0EEB               	movlw	-21
 21182  0177BA  36E3               	rlcf	plusw1,f,c
 21183  0177BC  0EEC               	movlw	-20
 21184  0177BE  36E3               	rlcf	plusw1,f,c
 21185  0177C0  0EED               	movlw	-19
 21186  0177C2  36E3               	rlcf	plusw1,f,c
 21187                           
 21188                           ;stkvar	_counter @ sp[(-10)+9]
 21189  0177C4  0EFF               	movlw	-1
 21190  0177C6                     L26:
 21191  0177C6  2AE3               	incf	plusw1,f,c
 21192                           
 21193                           ;stkvar	_divisor @ sp[(-10)+-16]
 21194  0177C8  0EED               	movlw	-19
 21195  0177CA  AEE3               	btfss	plusw1,7,c
 21196  0177CC  D7EA               	goto	l8146
 21197  0177CE                     u6370:
 21198                           
 21199                           ;stkvar	_quotient @ sp[(-10)+0]
 21200  0177CE  90D8               	bcf	status,0,c
 21201  0177D0  0EF6               	movlw	-10
 21202  0177D2  36E3               	rlcf	plusw1,f,c
 21203  0177D4  0EF7               	movlw	-9
 21204  0177D6  36E3               	rlcf	plusw1,f,c
 21205  0177D8  0EF8               	movlw	-8
 21206  0177DA  36E3               	rlcf	plusw1,f,c
 21207  0177DC  0EF9               	movlw	-7
 21208  0177DE  36E3               	rlcf	plusw1,f,c
 21209  0177E0  0EFA               	movlw	-6
 21210  0177E2  36E3               	rlcf	plusw1,f,c
 21211  0177E4  0EFB               	movlw	-5
 21212  0177E6  36E3               	rlcf	plusw1,f,c
 21213  0177E8  0EFC               	movlw	-4
 21214  0177EA  36E3               	rlcf	plusw1,f,c
 21215  0177EC  0EFD               	movlw	-3
 21216  0177EE  36E3               	rlcf	plusw1,f,c
 21217                           
 21218                           ;stkvar	_divisor @ sp[(-10)+-16]
 21219                           ;stkvar	_dividend @ sp[(-10)+-8]
 21220  0177F0  50E1               	movf	fsr1l,w,c
 21221  0177F2  0FEE               	addlw	-18
 21222  0177F4  6ED9               	movwf	fsr2l,c
 21223  0177F6  50E2               	movf	fsr1h,w,c
 21224  0177F8  6EDA               	movwf	fsr2h,c
 21225  0177FA  0EFF               	movlw	255
 21226  0177FC  22DA               	addwfc	fsr2h,f,c
 21227  0177FE  0EE6               	movlw	-26
 21228  017800  50E3               	movf	plusw1,w,c
 21229  017802  5CDE               	subwf	postinc2,w,c
 21230  017804  0EE7               	movlw	-25
 21231  017806  50E3               	movf	plusw1,w,c
 21232  017808  58DE               	subwfb	postinc2,w,c
 21233  01780A  0EE8               	movlw	-24
 21234  01780C  50E3               	movf	plusw1,w,c
 21235  01780E  58DE               	subwfb	postinc2,w,c
 21236  017810  0EE9               	movlw	-23
 21237  017812  50E3               	movf	plusw1,w,c
 21238  017814  58DE               	subwfb	postinc2,w,c
 21239  017816  0EEA               	movlw	-22
 21240  017818  50E3               	movf	plusw1,w,c
 21241  01781A  58DE               	subwfb	postinc2,w,c
 21242  01781C  0EEB               	movlw	-21
 21243  01781E  50E3               	movf	plusw1,w,c
 21244  017820  58DE               	subwfb	postinc2,w,c
 21245  017822  0EEC               	movlw	-20
 21246  017824  50E3               	movf	plusw1,w,c
 21247  017826  58DE               	subwfb	postinc2,w,c
 21248  017828  0EED               	movlw	-19
 21249  01782A  50E3               	movf	plusw1,w,c
 21250  01782C  58DE               	subwfb	postinc2,w,c
 21251  01782E  A0D8               	btfss	status,0,c
 21252  017830  D021               	goto	l8158
 21253                           
 21254                           ;stkvar	_divisor @ sp[(-10)+-16]
 21255                           ;stkvar	_dividend @ sp[(-10)+-8]
 21256  017832  50E1               	movf	fsr1l,w,c
 21257  017834  0FEE               	addlw	-18
 21258  017836  6ED9               	movwf	fsr2l,c
 21259  017838  50E2               	movf	fsr1h,w,c
 21260  01783A  6EDA               	movwf	fsr2h,c
 21261  01783C  0EFF               	movlw	255
 21262  01783E  22DA               	addwfc	fsr2h,f,c
 21263  017840  0EE6               	movlw	-26
 21264  017842  50E3               	movf	plusw1,w,c
 21265  017844  5EDE               	subwf	postinc2,f,c
 21266  017846  0EE7               	movlw	-25
 21267  017848  50E3               	movf	plusw1,w,c
 21268  01784A  5ADE               	subwfb	postinc2,f,c
 21269  01784C  0EE8               	movlw	-24
 21270  01784E  50E3               	movf	plusw1,w,c
 21271  017850  5ADE               	subwfb	postinc2,f,c
 21272  017852  0EE9               	movlw	-23
 21273  017854  50E3               	movf	plusw1,w,c
 21274  017856  5ADE               	subwfb	postinc2,f,c
 21275  017858  0EEA               	movlw	-22
 21276  01785A  50E3               	movf	plusw1,w,c
 21277  01785C  5ADE               	subwfb	postinc2,f,c
 21278  01785E  0EEB               	movlw	-21
 21279  017860  50E3               	movf	plusw1,w,c
 21280  017862  5ADE               	subwfb	postinc2,f,c
 21281  017864  0EEC               	movlw	-20
 21282  017866  50E3               	movf	plusw1,w,c
 21283  017868  5ADE               	subwfb	postinc2,f,c
 21284  01786A  0EED               	movlw	-19
 21285  01786C  50E3               	movf	plusw1,w,c
 21286  01786E  5ADE               	subwfb	postinc2,f,c
 21287                           
 21288                           ;stkvar	_quotient @ sp[(-10)+0]
 21289  017870  0EF6               	movlw	-10
 21290  017872  80E3               	bsf	plusw1,0,c
 21291  017874                     l8158:
 21292                           
 21293                           ;stkvar	_divisor @ sp[(-10)+-16]
 21294  017874  90D8               	bcf	status,0,c
 21295  017876  0EED               	movlw	-19
 21296  017878  32E3               	rrcf	plusw1,f,c
 21297  01787A  0EEC               	movlw	-20
 21298  01787C  32E3               	rrcf	plusw1,f,c
 21299  01787E  0EEB               	movlw	-21
 21300  017880  32E3               	rrcf	plusw1,f,c
 21301  017882  0EEA               	movlw	-22
 21302  017884  32E3               	rrcf	plusw1,f,c
 21303  017886  0EE9               	movlw	-23
 21304  017888  32E3               	rrcf	plusw1,f,c
 21305  01788A  0EE8               	movlw	-24
 21306  01788C  32E3               	rrcf	plusw1,f,c
 21307  01788E  0EE7               	movlw	-25
 21308  017890  32E3               	rrcf	plusw1,f,c
 21309  017892  0EE6               	movlw	-26
 21310  017894  32E3               	rrcf	plusw1,f,c
 21311                           
 21312                           ;stkvar	_counter @ sp[(-10)+9]
 21313  017896  0EFF               	movlw	-1
 21314  017898  50E3               	movf	plusw1,w,c
 21315  01789A  6E01               	movwf	btemp^0,c
 21316  01789C  0E01               	movlw	1
 21317  01789E  5E01               	subwf	btemp^0,f,c
 21318  0178A0  0EFF               	movlw	-1
 21319  0178A2  0060  F007  FFE3   	movff	btemp,plusw1
 21320  0178A8  A4D8               	btfss	status,2,c
 21321  0178AA  D791               	goto	u6370
 21322  0178AC                     u6390:
 21323                           
 21324                           ;stkvar	_sign @ sp[(-10)+8]
 21325  0178AC  0EFE               	movlw	-2
 21326  0178AE  50E3               	movf	plusw1,w,c
 21327  0178B0  B4D8               	btfsc	status,2,c
 21328  0178B2  D025               	goto	u6410
 21329                           
 21330                           ;stkvar	_quotient @ sp[(-10)+0]
 21331                           ;stkvar	_quotient @ sp[(-10)+0]
 21332  0178B4  0EF6               	movlw	-10
 21333  0178B6  6CE3               	negf	plusw1,c
 21334  0178B8  0EF7               	movlw	-9
 21335  0178BA  1EE3               	comf	plusw1,f,c
 21336  0178BC  0EF8               	movlw	-8
 21337  0178BE  1EE3               	comf	plusw1,f,c
 21338  0178C0  0EF9               	movlw	-7
 21339  0178C2  1EE3               	comf	plusw1,f,c
 21340  0178C4  0EFA               	movlw	-6
 21341  0178C6  1EE3               	comf	plusw1,f,c
 21342  0178C8  0EFB               	movlw	-5
 21343  0178CA  1EE3               	comf	plusw1,f,c
 21344  0178CC  0EFC               	movlw	-4
 21345  0178CE  1EE3               	comf	plusw1,f,c
 21346  0178D0  0EFD               	movlw	-3
 21347  0178D2  1EE3               	comf	plusw1,f,c
 21348  0178D4  E314               	bnc	u6410
 21349  0178D6  0EF7               	movlw	-9
 21350  0178D8  2AE3               	incf	plusw1,f,c
 21351  0178DA  E311               	bnc	u6410
 21352  0178DC  0EF8               	movlw	-8
 21353  0178DE  2AE3               	incf	plusw1,f,c
 21354  0178E0  E30E               	bnc	u6410
 21355  0178E2  0EF9               	movlw	-7
 21356  0178E4  2AE3               	incf	plusw1,f,c
 21357  0178E6  E30B               	bnc	u6410
 21358  0178E8  0EFA               	movlw	-6
 21359  0178EA  2AE3               	incf	plusw1,f,c
 21360  0178EC  E308               	bnc	u6410
 21361  0178EE  0EFB               	movlw	-5
 21362  0178F0  2AE3               	incf	plusw1,f,c
 21363  0178F2  E305               	bnc	u6410
 21364  0178F4  0EFC               	movlw	-4
 21365  0178F6  2AE3               	incf	plusw1,f,c
 21366  0178F8  E302               	bnc	u6410
 21367  0178FA  0EFD               	movlw	-3
 21368  0178FC  2AE3               	incf	plusw1,f,c
 21369  0178FE                     u6410:
 21370                           
 21371                           ;stkvar	_quotient @ sp[(-10)+0]
 21372  0178FE  0EF6               	movlw	246
 21373  017900  24E1               	addwf	fsr1l,w,c
 21374  017902  6ED9               	movwf	fsr2l,c
 21375  017904  0EFF               	movlw	255
 21376  017906  20E2               	addwfc	fsr1h,w,c
 21377  017908  6EDA               	movwf	fsr2h,c
 21378                           
 21379                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 21380  01790A  0E08               	movlw	8
 21381  01790C  6E01               	movwf	btemp^0,c
 21382  01790E  0EEE               	movlw	-18
 21383  017910                     us642999:
 21384  017910  006F FF7B FFE3     	movff	postinc2,plusw1
 21385  017916  28E8               	incf	wreg,w,c
 21386  017918  2E01               	decfsz	btemp^0,f,c
 21387  01791A  D7FA               	bra	us642999
 21388                           
 21389                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 21390  01791C  0EF6               	movlw	246
 21391  01791E  26E1               	addwf	fsr1l,f,c
 21392  017920  0EFF               	movlw	255
 21393  017922  22E2               	addwfc	fsr1h,f,c
 21394  017924  0012               	return		;funcret
 21395  017926                     __end_of___aodiv:
 21396                           	opt callstack 0
 21397                           
 21398 ;; *************** function _ctoa *****************
 21399 ;; Defined at:
 21400 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21401 ;; Parameters:    Size  Location     Type
 21402 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21403 ;;		 -> f(6), NULL(0), 
 21404 ;;  c               1  [STACK] unsigned char 
 21405 ;; Auto vars:     Size  Location     Type
 21406 ;;  w               2  [STACK] int 
 21407 ;;  l               2    0        int 
 21408 ;; Return value:  Size  Location     Type
 21409 ;;                  2  [STACK] int 
 21410 ;; Registers used:
 21411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21412 ;; Tracked objects:
 21413 ;;		On entry : 0/0
 21414 ;;		On exit  : 0/0
 21415 ;;		Unchanged: 0/0
 21416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21421 ;;Total ram usage:        0 bytes
 21422 ;; Hardware stack levels used:    1
 21423 ;; Hardware stack levels required when called:   20
 21424 ;; This function calls:
 21425 ;;		_pad
 21426 ;; This function is called by:
 21427 ;;		_vfpfcnvrt
 21428 ;; This function uses a reentrant model
 21429 ;;
 21430                           
 21431                           	psect	text72
 21432  01AC56                     __ptext72:
 21433                           	opt callstack 0
 21434  01AC56                     _ctoa:
 21435                           	opt callstack 0
 21436                           
 21437                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21438  01AC56  52E6               	movf	postinc1,f,c
 21439  01AC58  52E6               	movf	postinc1,f,c
 21440                           
 21441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 21442                           
 21443                           ;incstack = 0
 21444 ;; hardware stack exceeded
 21445  01AC5A  503A               	movf	_width^0,w,c
 21446  01AC5C  103B               	iorwf	(_width+1)^0,w,c
 21447  01AC5E  A4D8               	btfss	status,2,c
 21448  01AC60  D009               	goto	l11942
 21449                           
 21450                           ;stkvar	_w @ sp[(-2)+0]
 21451  01AC62  0EFE               	movlw	-2
 21452  01AC64  0060  F0EB  FFE3   	movff	_width,plusw1
 21453  01AC6A  0EFF               	movlw	-1
 21454  01AC6C  0060  F0EF  FFE3   	movff	_width+1,plusw1
 21455  01AC72  D016               	goto	l11944
 21456  01AC74                     l11942:
 21457  01AC74  0EFF               	movlw	255
 21458  01AC76  6E0B               	movwf	(btemp+10)^0,c
 21459  01AC78  0EFF               	movlw	255
 21460  01AC7A  6E0C               	movwf	(btemp+11)^0,c
 21461  01AC7C  0060  F0E8  F009   	movff	_width,btemp+8
 21462  01AC82  0060  F0EC  F00A   	movff	_width+1,btemp+9
 21463  01AC88  500B               	movf	(btemp+10)^0,w,c
 21464  01AC8A  2609               	addwf	(btemp+8)^0,f,c
 21465  01AC8C  500C               	movf	(btemp+11)^0,w,c
 21466  01AC8E  220A               	addwfc	(btemp+9)^0,f,c
 21467                           
 21468                           ;stkvar	_w @ sp[(-2)+0]
 21469  01AC90  0EFE               	movlw	-2
 21470  01AC92  0060  F027  FFE3   	movff	btemp+8,plusw1
 21471  01AC98  0EFF               	movlw	-1
 21472  01AC9A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21473  01ACA0                     l11944:
 21474                           
 21475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 21476                           ;stkvar	_c @ sp[(-2)+-3]
 21477  01ACA0  0EFB               	movlw	-5
 21478  01ACA2  006F FF8C  F297    	movff	plusw1,_dbuf
 21479                           
 21480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 21481  01ACA8  0102               	movlb	2	; () banked
 21482  01ACAA  6B98               	clrf	(_dbuf+1)& (0+255),b
 21483                           
 21484                           ; BSR set to: 2
 21485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 21486                           ;stkvar	_w @ sp[(-2)+0]
 21487  01ACAC  0EFE               	movlw	-2
 21488  01ACAE  006F FF8F FFE6     	movff	plusw1,postinc1
 21489  01ACB4  006F FF8F FFE6     	movff	plusw1,postinc1
 21490  01ACBA  0E97               	movlw	low _dbuf
 21491  01ACBC  6EE6               	movwf	postinc1,c
 21492  01ACBE  0E02               	movlw	high _dbuf
 21493  01ACC0  6EE6               	movwf	postinc1,c
 21494                           
 21495                           ;stkvar	_fp @ sp[(-6)+-2]
 21496  01ACC2  0EF8               	movlw	-8
 21497  01ACC4  006F FF8F FFE6     	movff	plusw1,postinc1
 21498  01ACCA  006F FF8F FFE6     	movff	plusw1,postinc1
 21499  01ACD0  EC00  F0CE         	call	_pad	;wreg free
 21500                           
 21501                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 21502  01ACD4  0EFB               	movlw	251
 21503  01ACD6  26E1               	addwf	fsr1l,f,c
 21504  01ACD8  0EFF               	movlw	255
 21505  01ACDA  22E2               	addwfc	fsr1h,f,c
 21506  01ACDC  0012               	return		;funcret
 21507  01ACDE                     __end_of_ctoa:
 21508                           	opt callstack 0
 21509                           
 21510 ;; *************** function _pad *****************
 21511 ;; Defined at:
 21512 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 21513 ;; Parameters:    Size  Location     Type
 21514 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21515 ;;		 -> f(6), NULL(0), 
 21516 ;;  buf             2  [STACK] PTR unsigned char 
 21517 ;;		 -> dbuf(80), 
 21518 ;;  p               2  [STACK] int 
 21519 ;; Auto vars:     Size  Location     Type
 21520 ;;  w               2  [STACK] int 
 21521 ;;  i               2  [STACK] int 
 21522 ;; Return value:  Size  Location     Type
 21523 ;;                  2  [STACK] int 
 21524 ;; Registers used:
 21525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 21526 ;; Tracked objects:
 21527 ;;		On entry : 0/2
 21528 ;;		On exit  : 0/0
 21529 ;;		Unchanged: 0/0
 21530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21535 ;;Total ram usage:        0 bytes
 21536 ;; Hardware stack levels used:    1
 21537 ;; Hardware stack levels required when called:   19
 21538 ;; This function calls:
 21539 ;;		_fputc
 21540 ;;		_fputs
 21541 ;;		_strlen
 21542 ;; This function is called by:
 21543 ;;		_ctoa
 21544 ;;		_dtoa
 21545 ;;		_efgtoa
 21546 ;;		_utoa
 21547 ;;		_xtoa
 21548 ;; This function uses a reentrant model
 21549 ;;
 21550                           
 21551                           	psect	text73
 21552  019C00                     __ptext73:
 21553                           	opt callstack 0
 21554  019C00                     _pad:
 21555                           	opt callstack 0
 21556                           
 21557                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21558  019C00  52E6               	movf	postinc1,f,c
 21559  019C02  52E6               	movf	postinc1,f,c
 21560  019C04  52E6               	movf	postinc1,f,c
 21561  019C06  52E6               	movf	postinc1,f,c
 21562                           
 21563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 21564                           
 21565                           ;incstack = 0
 21566 ;; hardware stack exceeded
 21567  019C08  A03E               	btfss	_flags^0,0,c
 21568  019C0A  D010               	goto	l11904
 21569                           
 21570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 21571                           ;stkvar	_fp @ sp[(-4)+-2]
 21572  019C0C  0EFA               	movlw	-6
 21573  019C0E  006F FF8F FFE6     	movff	plusw1,postinc1
 21574  019C14  006F FF8F FFE6     	movff	plusw1,postinc1
 21575                           
 21576                           ;stkvar	_buf @ sp[(-6)+-4]
 21577  019C1A  0EF6               	movlw	-10
 21578  019C1C  006F FF8F FFE6     	movff	plusw1,postinc1
 21579  019C22  006F FF8F FFE6     	movff	plusw1,postinc1
 21580  019C28  EC04  F0D5         	call	_fputs	;wreg free
 21581  019C2C                     l11904:
 21582                           
 21583                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 21584                           ;stkvar	_p @ sp[(-4)+-6]
 21585  019C2C  0EF7               	movlw	-9
 21586  019C2E  BEE3               	btfsc	plusw1,7,c
 21587  019C30  D011               	goto	l11908
 21588                           
 21589                           ;stkvar	_p @ sp[(-4)+-6]
 21590                           ;stkvar	_w @ sp[(-4)+0]
 21591  019C32  0EF6               	movlw	-10
 21592  019C34  006F FF8C  F001    	movff	plusw1,btemp
 21593  019C3A  0EFC               	movlw	-4
 21594  019C3C  0060  F007  FFE3   	movff	btemp,plusw1
 21595  019C42  0EF7               	movlw	-9
 21596  019C44  006F FF8C  F001    	movff	plusw1,btemp
 21597  019C4A  0EFD               	movlw	-3
 21598  019C4C  0060  F007  FFE3   	movff	btemp,plusw1
 21599  019C52  D004               	goto	l2146
 21600  019C54                     l11908:
 21601                           
 21602                           ;stkvar	_w @ sp[(-4)+0]
 21603  019C54  0EFC               	movlw	-4
 21604  019C56  6AE3               	clrf	plusw1,c
 21605  019C58  0EFD               	movlw	-3
 21606  019C5A  6AE3               	clrf	plusw1,c
 21607  019C5C                     l2146:
 21608                           
 21609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 21610                           ;stkvar	_i @ sp[(-4)+2]
 21611  019C5C  0EFE               	movlw	-2
 21612  019C5E  6AE3               	clrf	plusw1,c
 21613  019C60  0EFF               	movlw	-1
 21614  019C62  6AE3               	clrf	plusw1,c
 21615                           
 21616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21617  019C64  D01E               	goto	l11914
 21618  019C66                     l11910:
 21619                           
 21620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 21621                           ;stkvar	_fp @ sp[(-4)+-2]
 21622  019C66  0EFA               	movlw	-6
 21623  019C68  006F FF8F FFE6     	movff	plusw1,postinc1
 21624  019C6E  006F FF8F FFE6     	movff	plusw1,postinc1
 21625  019C74  0E20               	movlw	32
 21626  019C76  6EE6               	movwf	postinc1,c
 21627  019C78  0E00               	movlw	0
 21628  019C7A  6EE6               	movwf	postinc1,c
 21629  019C7C  ECC4  F0CB         	call	_fputc	;wreg free
 21630                           
 21631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21632                           ;stkvar	_i @ sp[(-4)+2]
 21633  019C80  0EFE               	movlw	-2
 21634  019C82  50E3               	movf	plusw1,w,c
 21635  019C84  0F01               	addlw	1
 21636  019C86  6E01               	movwf	btemp^0,c
 21637  019C88  0EFE               	movlw	-2
 21638  019C8A  0060  F007  FFE3   	movff	btemp,plusw1
 21639  019C90  6A01               	clrf	btemp^0,c
 21640  019C92  0EFF               	movlw	-1
 21641  019C94  50E3               	movf	plusw1,w,c
 21642  019C96  2001               	addwfc	btemp^0,w,c
 21643  019C98  6E01               	movwf	btemp^0,c
 21644  019C9A  0EFF               	movlw	-1
 21645  019C9C  0060  F007  FFE3   	movff	btemp,plusw1
 21646  019CA2                     l11914:
 21647                           
 21648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21649                           ;stkvar	_w @ sp[(-4)+0]
 21650                           ;stkvar	_i @ sp[(-4)+2]
 21651  019CA2  50E1               	movf	fsr1l,w,c
 21652  019CA4  0FFE               	addlw	-2
 21653  019CA6  6ED9               	movwf	fsr2l,c
 21654  019CA8  50E2               	movf	fsr1h,w,c
 21655  019CAA  6EDA               	movwf	fsr2h,c
 21656  019CAC  0EFF               	movlw	255
 21657  019CAE  22DA               	addwfc	fsr2h,f,c
 21658  019CB0  0EFC               	movlw	-4
 21659  019CB2  50E3               	movf	plusw1,w,c
 21660  019CB4  5CDE               	subwf	postinc2,w,c
 21661  019CB6  50DE               	movf	postinc2,w,c
 21662  019CB8  0A80               	xorlw	128
 21663  019CBA  6E01               	movwf	btemp^0,c
 21664  019CBC  0EFD               	movlw	-3
 21665  019CBE  50E3               	movf	plusw1,w,c
 21666  019CC0  0A80               	xorlw	128
 21667  019CC2  5801               	subwfb	btemp^0,w,c
 21668  019CC4  A0D8               	btfss	status,0,c
 21669  019CC6  D7CF               	goto	l11910
 21670                           
 21671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21672  019CC8  B03E               	btfsc	_flags^0,0,c
 21673  019CCA  D010               	goto	l11918
 21674                           
 21675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21676                           ;stkvar	_fp @ sp[(-4)+-2]
 21677  019CCC  0EFA               	movlw	-6
 21678  019CCE  006F FF8F FFE6     	movff	plusw1,postinc1
 21679  019CD4  006F FF8F FFE6     	movff	plusw1,postinc1
 21680                           
 21681                           ;stkvar	_buf @ sp[(-6)+-4]
 21682  019CDA  0EF6               	movlw	-10
 21683  019CDC  006F FF8F FFE6     	movff	plusw1,postinc1
 21684  019CE2  006F FF8F FFE6     	movff	plusw1,postinc1
 21685  019CE8  EC04  F0D5         	call	_fputs	;wreg free
 21686  019CEC                     l11918:
 21687                           
 21688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21689                           ;stkvar	_w @ sp[(-4)+0]
 21690                           ;stkvar	_buf @ sp[(-4)+-4]
 21691  019CEC  0EF8               	movlw	-8
 21692  019CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 21693  019CF4  006F FF8F FFE6     	movff	plusw1,postinc1
 21694  019CFA  ECB3  F0D4         	call	_strlen	;wreg free
 21695  019CFE  0EFC               	movlw	-4
 21696  019D00  50E3               	movf	plusw1,w,c
 21697  019D02  2601               	addwf	btemp^0,f,c
 21698  019D04  0EFD               	movlw	-3
 21699  019D06  50E3               	movf	plusw1,w,c
 21700  019D08  2202               	addwfc	(btemp+1)^0,f,c
 21701                           
 21702                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21703  019D0A  0EF6               	movlw	246
 21704  019D0C  26E1               	addwf	fsr1l,f,c
 21705  019D0E  0EFF               	movlw	255
 21706  019D10  22E2               	addwfc	fsr1h,f,c
 21707  019D12  0012               	return		;funcret
 21708  019D14                     __end_of_pad:
 21709                           	opt callstack 0
 21710                           
 21711 ;; *************** function _strlen *****************
 21712 ;; Defined at:
 21713 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21714 ;; Parameters:    Size  Location     Type
 21715 ;;  s               2  [STACK] PTR const unsigned char 
 21716 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21717 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 21718 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 21719 ;;		 -> V(191), 
 21720 ;; Auto vars:     Size  Location     Type
 21721 ;;  a               2  [STACK] PTR const unsigned char 
 21722 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21723 ;;		 -> spin(120), STR_46(9), STR_45(12), D.lcd(480), 
 21724 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 21725 ;;		 -> V(191), 
 21726 ;; Return value:  Size  Location     Type
 21727 ;;                  2  [STACK] unsigned int 
 21728 ;; Registers used:
 21729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21730 ;; Tracked objects:
 21731 ;;		On entry : 0/0
 21732 ;;		On exit  : 0/0
 21733 ;;		Unchanged: 0/0
 21734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21739 ;;Total ram usage:        0 bytes
 21740 ;; Hardware stack levels used:    1
 21741 ;; Hardware stack levels required when called:   15
 21742 ;; This function calls:
 21743 ;;		Nothing
 21744 ;; This function is called by:
 21745 ;;		_eaDogM_WriteString
 21746 ;;		_spinners
 21747 ;;		_calc_bsoc
 21748 ;;		_pad
 21749 ;;		_stoa
 21750 ;; This function uses a reentrant model
 21751 ;;
 21752                           
 21753                           	psect	text74
 21754  01A966                     __ptext74:
 21755                           	opt callstack 0
 21756  01A966                     _strlen:
 21757                           	opt callstack 0
 21758                           
 21759                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21760  01A966  52E6               	movf	postinc1,f,c
 21761  01A968  52E6               	movf	postinc1,f,c
 21762                           
 21763                           ;stkvar	_s @ sp[(-2)+-2]
 21764                           
 21765                           ;incstack = 0
 21766 ;; hardware stack exceeded
 21767  01A96A  0EFC               	movlw	-4
 21768  01A96C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21769  01A972  0EFD               	movlw	-3
 21770  01A974  006F FF8C  F00C    	movff	plusw1,btemp+11
 21771                           
 21772                           ;stkvar	_a @ sp[(-2)+0]
 21773  01A97A  0EFF               	movlw	-1
 21774  01A97C  0060  F033  FFE3   	movff	btemp+11,plusw1
 21775  01A982  0EFE               	movlw	-2
 21776  01A984  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21777  01A98A  D011               	goto	l7710
 21778  01A98C                     l7708:
 21779                           
 21780                           ;stkvar	_s @ sp[(-2)+-2]
 21781  01A98C  0EFC               	movlw	-4
 21782  01A98E  50E3               	movf	plusw1,w,c
 21783  01A990  0F01               	addlw	1
 21784  01A992  6E01               	movwf	btemp^0,c
 21785  01A994  0EFC               	movlw	-4
 21786  01A996  0060  F007  FFE3   	movff	btemp,plusw1
 21787  01A99C  6A01               	clrf	btemp^0,c
 21788  01A99E  0EFD               	movlw	-3
 21789  01A9A0  50E3               	movf	plusw1,w,c
 21790  01A9A2  2001               	addwfc	btemp^0,w,c
 21791  01A9A4  6E01               	movwf	btemp^0,c
 21792  01A9A6  0EFD               	movlw	-3
 21793  01A9A8  0060  F007  FFE3   	movff	btemp,plusw1
 21794  01A9AE                     l7710:
 21795                           
 21796                           ;stkvar	_s @ sp[(-2)+-2]
 21797  01A9AE  0EFC               	movlw	-4
 21798  01A9B0  006F FF8F FFF6     	movff	plusw1,tblptrl
 21799  01A9B6  0EFD               	movlw	-3
 21800  01A9B8  006F FF8F FFF7     	movff	plusw1,tblptrh
 21801  01A9BE  0E00               	movlw	low (__mediumconst shr (0+16))
 21802  01A9C0  6EF8               	movwf	tblptru,c
 21803  01A9C2  0E1F               	movlw	(high __ramtop+-1)
 21804  01A9C4  64F7               	cpfsgt	tblptrh,c
 21805  01A9C6  D003               	bra	u5437
 21806  01A9C8  0008               	tblrd		*
 21807  01A9CA  50F5               	movf	tablat,w,c
 21808  01A9CC  D007               	bra	u5430
 21809  01A9CE                     u5437:
 21810  01A9CE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21811  01A9D4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21812  01A9DA  50EF               	movf	indf0,w,c
 21813  01A9DC                     u5430:
 21814  01A9DC  0900               	iorlw	0
 21815  01A9DE  A4D8               	btfss	status,2,c
 21816  01A9E0  D7D5               	goto	l7708
 21817                           
 21818                           ;stkvar	_a @ sp[(-2)+0]
 21819                           ;stkvar	_s @ sp[(-2)+-2]
 21820  01A9E2  0EFC               	movlw	-4
 21821  01A9E4  006F FF8C  F001    	movff	plusw1,btemp
 21822  01A9EA  0EFD               	movlw	-3
 21823  01A9EC  006F FF8C  F002    	movff	plusw1,btemp+1
 21824  01A9F2  0EFE               	movlw	-2
 21825  01A9F4  50E3               	movf	plusw1,w,c
 21826  01A9F6  5E01               	subwf	btemp^0,f,c
 21827  01A9F8  0EFF               	movlw	-1
 21828  01A9FA  50E3               	movf	plusw1,w,c
 21829  01A9FC  5A02               	subwfb	(btemp+1)^0,f,c
 21830                           
 21831                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21832  01A9FE  52E5               	movf	postdec1,f,c
 21833  01AA00  52E5               	movf	postdec1,f,c
 21834  01AA02  52E5               	movf	postdec1,f,c
 21835  01AA04  52E5               	movf	postdec1,f,c
 21836  01AA06  0012               	return		;funcret
 21837  01AA08                     __end_of_strlen:
 21838                           	opt callstack 0
 21839                           
 21840 ;; *************** function _fputs *****************
 21841 ;; Defined at:
 21842 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21843 ;; Parameters:    Size  Location     Type
 21844 ;;  s               2  [STACK] PTR const unsigned char 
 21845 ;;		 -> dbuf(80), 
 21846 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21847 ;;		 -> f(6), NULL(0), 
 21848 ;; Auto vars:     Size  Location     Type
 21849 ;;  i               2  [STACK] int 
 21850 ;;  c               1  [STACK] unsigned char 
 21851 ;; Return value:  Size  Location     Type
 21852 ;;                  2  [STACK] int 
 21853 ;; Registers used:
 21854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21855 ;; Tracked objects:
 21856 ;;		On entry : 0/2
 21857 ;;		On exit  : 0/0
 21858 ;;		Unchanged: 0/0
 21859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21864 ;;Total ram usage:        0 bytes
 21865 ;; Hardware stack levels used:    1
 21866 ;; Hardware stack levels required when called:   18
 21867 ;; This function calls:
 21868 ;;		_fputc
 21869 ;; This function is called by:
 21870 ;;		_pad
 21871 ;; This function uses a reentrant model
 21872 ;;
 21873                           
 21874                           	psect	text75
 21875  01AA08                     __ptext75:
 21876                           	opt callstack 0
 21877  01AA08                     _fputs:
 21878                           	opt callstack 0
 21879                           
 21880                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21881  01AA08  52E6               	movf	postinc1,f,c
 21882  01AA0A  52E6               	movf	postinc1,f,c
 21883  01AA0C  52E6               	movf	postinc1,f,c
 21884                           
 21885                           ;stkvar	_i @ sp[(-3)+0]
 21886                           
 21887                           ;incstack = 0
 21888 ;; hardware stack exceeded
 21889  01AA0E  0EFD               	movlw	-3
 21890  01AA10  6AE3               	clrf	plusw1,c
 21891  01AA12  0EFE               	movlw	-2
 21892  01AA14  6AE3               	clrf	plusw1,c
 21893  01AA16  D01F               	goto	l11856
 21894  01AA18                     l11852:
 21895                           
 21896                           ;stkvar	_fp @ sp[(-3)+-4]
 21897  01AA18  0EF9               	movlw	-7
 21898  01AA1A  006F FF8F FFE6     	movff	plusw1,postinc1
 21899  01AA20  006F FF8F FFE6     	movff	plusw1,postinc1
 21900                           
 21901                           ;stkvar	_c @ sp[(-5)+2]
 21902  01AA26  0EFD               	movlw	-3
 21903  01AA28  50E3               	movf	plusw1,w,c
 21904  01AA2A  6EE6               	movwf	postinc1,c
 21905  01AA2C  0E00               	movlw	0
 21906  01AA2E  6EE6               	movwf	postinc1,c
 21907  01AA30  ECC4  F0CB         	call	_fputc	;wreg free
 21908                           
 21909                           ;stkvar	_i @ sp[(-3)+0]
 21910  01AA34  0EFD               	movlw	-3
 21911  01AA36  50E3               	movf	plusw1,w,c
 21912  01AA38  0F01               	addlw	1
 21913  01AA3A  6E01               	movwf	btemp^0,c
 21914  01AA3C  0EFD               	movlw	-3
 21915  01AA3E  0060  F007  FFE3   	movff	btemp,plusw1
 21916  01AA44  6A01               	clrf	btemp^0,c
 21917  01AA46  0EFE               	movlw	-2
 21918  01AA48  50E3               	movf	plusw1,w,c
 21919  01AA4A  2001               	addwfc	btemp^0,w,c
 21920  01AA4C  6E01               	movwf	btemp^0,c
 21921  01AA4E  0EFE               	movlw	-2
 21922  01AA50  0060  F007  FFE3   	movff	btemp,plusw1
 21923  01AA56                     l11856:
 21924                           
 21925                           ;stkvar	_i @ sp[(-3)+0]
 21926  01AA56  0EFD               	movlw	-3
 21927  01AA58  006F FF8C  F00B    	movff	plusw1,btemp+10
 21928  01AA5E  0EFE               	movlw	-2
 21929  01AA60  006F FF8C  F00C    	movff	plusw1,btemp+11
 21930                           
 21931                           ;stkvar	_s @ sp[(-3)+-2]
 21932  01AA66  0EFB               	movlw	-5
 21933  01AA68  006F FF8C  F009    	movff	plusw1,btemp+8
 21934  01AA6E  0EFC               	movlw	-4
 21935  01AA70  006F FF8C  F00A    	movff	plusw1,btemp+9
 21936  01AA76  500B               	movf	(btemp+10)^0,w,c
 21937  01AA78  2409               	addwf	(btemp+8)^0,w,c
 21938  01AA7A  6ED9               	movwf	fsr2l,c
 21939  01AA7C  500C               	movf	(btemp+11)^0,w,c
 21940  01AA7E  200A               	addwfc	(btemp+9)^0,w,c
 21941  01AA80  6EDA               	movwf	fsr2h,c
 21942  01AA82  50DF               	movf	indf2,w,c
 21943  01AA84  6E0C               	movwf	(btemp+11)^0,c
 21944                           
 21945                           ;stkvar	_c @ sp[(-3)+2]
 21946  01AA86  0EFF               	movlw	-1
 21947  01AA88  0060  F033  FFE3   	movff	btemp+11,plusw1
 21948  01AA8E  0EFF               	movlw	-1
 21949  01AA90  50E3               	movf	plusw1,w,c
 21950  01AA92  A4D8               	btfss	status,2,c
 21951  01AA94  D7C1               	goto	l11852
 21952                           
 21953                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21954  01AA96  0EF9               	movlw	249
 21955  01AA98  26E1               	addwf	fsr1l,f,c
 21956  01AA9A  0EFF               	movlw	255
 21957  01AA9C  22E2               	addwfc	fsr1h,f,c
 21958  01AA9E  0012               	return		;funcret
 21959  01AAA0                     __end_of_fputs:
 21960                           	opt callstack 0
 21961                           
 21962 ;; *************** function _fputc *****************
 21963 ;; Defined at:
 21964 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21965 ;; Parameters:    Size  Location     Type
 21966 ;;  c               2  [STACK] int 
 21967 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21968 ;;		 -> f(6), NULL(0), 
 21969 ;; Auto vars:     Size  Location     Type
 21970 ;;		None
 21971 ;; Return value:  Size  Location     Type
 21972 ;;                  2  [STACK] int 
 21973 ;; Registers used:
 21974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21975 ;; Tracked objects:
 21976 ;;		On entry : 0/0
 21977 ;;		On exit  : 0/0
 21978 ;;		Unchanged: 0/0
 21979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21984 ;;Total ram usage:        0 bytes
 21985 ;; Hardware stack levels used:    1
 21986 ;; Hardware stack levels required when called:   17
 21987 ;; This function calls:
 21988 ;;		_putch
 21989 ;; This function is called by:
 21990 ;;		_pad
 21991 ;;		_stoa
 21992 ;;		_vfpfcnvrt
 21993 ;;		_fputs
 21994 ;; This function uses a reentrant model
 21995 ;;
 21996                           
 21997                           	psect	text76
 21998  019788                     __ptext76:
 21999                           	opt callstack 0
 22000  019788                     _fputc:
 22001                           	opt callstack 0
 22002                           
 22003                           ;stkvar	_fp @ sp[(0)+-4]
 22004                           
 22005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22006                           ;incstack = 0
 22007 ;; hardware stack exceeded
 22008  019788  0EFC               	movlw	-4
 22009  01978A  006F FF8C  F001    	movff	plusw1,btemp
 22010  019790  0EFD               	movlw	-3
 22011  019792  50E3               	movf	plusw1,w,c
 22012  019794  1001               	iorwf	btemp^0,w,c
 22013  019796  B4D8               	btfsc	status,2,c
 22014  019798  D009               	goto	u10770
 22015                           
 22016                           ;stkvar	_fp @ sp[(0)+-4]
 22017  01979A  0EFC               	movlw	-4
 22018  01979C  006F FF8C  F001    	movff	plusw1,btemp
 22019  0197A2  0EFD               	movlw	-3
 22020  0197A4  50E3               	movf	plusw1,w,c
 22021  0197A6  1001               	iorwf	btemp^0,w,c
 22022  0197A8  A4D8               	btfss	status,2,c
 22023  0197AA  D006               	goto	l11840
 22024  0197AC                     u10770:
 22025                           
 22026                           ;stkvar	_c @ sp[(0)+-2]
 22027  0197AC  0EFE               	movlw	-2
 22028  0197AE  50E3               	movf	plusw1,w,c
 22029  0197B0  6EE6               	movwf	postinc1,c
 22030  0197B2  EC01  F0E0         	call	_putch	;wreg free
 22031  0197B6  D075               	goto	l3192
 22032  0197B8                     l11840:
 22033                           
 22034                           ;stkvar	_fp @ sp[(0)+-4]
 22035  0197B8  0EFC               	movlw	-4
 22036  0197BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 22037  0197C0  0EFD               	movlw	-3
 22038  0197C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22039  0197C8  0E04               	movlw	4
 22040  0197CA  240B               	addwf	(btemp+10)^0,w,c
 22041  0197CC  6ED9               	movwf	fsr2l,c
 22042  0197CE  0E00               	movlw	0
 22043  0197D0  200C               	addwfc	(btemp+11)^0,w,c
 22044  0197D2  6EDA               	movwf	fsr2h,c
 22045  0197D4  50DE               	movf	postinc2,w,c
 22046  0197D6  10DE               	iorwf	postinc2,w,c
 22047  0197D8  B4D8               	btfsc	status,2,c
 22048  0197DA  D026               	goto	u10790
 22049                           
 22050                           ;stkvar	_fp @ sp[(0)+-4]
 22051  0197DC  0EFC               	movlw	-4
 22052  0197DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 22053  0197E4  0EFD               	movlw	-3
 22054  0197E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 22055  0197EC  0E04               	movlw	4
 22056  0197EE  240B               	addwf	(btemp+10)^0,w,c
 22057  0197F0  6ED9               	movwf	fsr2l,c
 22058  0197F2  0E00               	movlw	0
 22059  0197F4  200C               	addwfc	(btemp+11)^0,w,c
 22060  0197F6  6EDA               	movwf	fsr2h,c
 22061                           
 22062                           ;stkvar	_fp @ sp[(0)+-4]
 22063  0197F8  0EFC               	movlw	-4
 22064  0197FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 22065  019800  0EFD               	movlw	-3
 22066  019802  006F FF8C  F00C    	movff	plusw1,btemp+11
 22067  019808  0E02               	movlw	2
 22068  01980A  240B               	addwf	(btemp+10)^0,w,c
 22069  01980C  6EE9               	movwf	fsr0l,c
 22070  01980E  0E00               	movlw	0
 22071  019810  200C               	addwfc	(btemp+11)^0,w,c
 22072  019812  6EEA               	movwf	fsr0h,c
 22073  019814  50DE               	movf	postinc2,w,c
 22074  019816  5CEE               	subwf	postinc0,w,c
 22075  019818  50EE               	movf	postinc0,w,c
 22076  01981A  0A80               	xorlw	128
 22077  01981C  6E01               	movwf	btemp^0,c
 22078  01981E  50DE               	movf	postinc2,w,c
 22079  019820  0A80               	xorlw	128
 22080  019822  5801               	subwfb	btemp^0,w,c
 22081  019824  B0D8               	btfsc	status,0,c
 22082  019826  D03D               	goto	l3192
 22083  019828                     u10790:
 22084                           
 22085                           ;stkvar	_c @ sp[(0)+-2]
 22086                           ;stkvar	_fp @ sp[(0)+-4]
 22087  019828  0EFC               	movlw	-4
 22088  01982A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22089  019830  0EFD               	movlw	-3
 22090  019832  006F FF8C  F00C    	movff	plusw1,btemp+11
 22091  019838  0E02               	movlw	2
 22092  01983A  240B               	addwf	(btemp+10)^0,w,c
 22093  01983C  6ED9               	movwf	fsr2l,c
 22094  01983E  0E00               	movlw	0
 22095  019840  200C               	addwfc	(btemp+11)^0,w,c
 22096  019842  6EDA               	movwf	fsr2h,c
 22097  019844  006F FF78  F00B    	movff	postinc2,btemp+10
 22098  01984A  006F FF74  F00C    	movff	postdec2,btemp+11
 22099                           
 22100                           ;stkvar	_fp @ sp[(0)+-4]
 22101  019850  0EFC               	movlw	-4
 22102  019852  006F FF8F FFD9     	movff	plusw1,fsr2l
 22103  019858  0EFD               	movlw	-3
 22104  01985A  006F FF8F FFDA     	movff	plusw1,fsr2h
 22105  019860  006F FF78  F009    	movff	postinc2,btemp+8
 22106  019866  006F FF74  F00A    	movff	postdec2,btemp+9
 22107  01986C  500B               	movf	(btemp+10)^0,w,c
 22108  01986E  2409               	addwf	(btemp+8)^0,w,c
 22109  019870  6ED9               	movwf	fsr2l,c
 22110  019872  500C               	movf	(btemp+11)^0,w,c
 22111  019874  200A               	addwfc	(btemp+9)^0,w,c
 22112  019876  6EDA               	movwf	fsr2h,c
 22113  019878  0EFE               	movlw	-2
 22114  01987A  006F FF8F FFDF     	movff	plusw1,indf2
 22115                           
 22116                           ;stkvar	_fp @ sp[(0)+-4]
 22117  019880  0EFC               	movlw	-4
 22118  019882  006F FF8C  F00B    	movff	plusw1,btemp+10
 22119  019888  0EFD               	movlw	-3
 22120  01988A  006F FF8C  F00C    	movff	plusw1,btemp+11
 22121  019890  0E02               	movlw	2
 22122  019892  240B               	addwf	(btemp+10)^0,w,c
 22123  019894  6ED9               	movwf	fsr2l,c
 22124  019896  0E00               	movlw	0
 22125  019898  200C               	addwfc	(btemp+11)^0,w,c
 22126  01989A  6EDA               	movwf	fsr2h,c
 22127  01989C  2ADE               	incf	postinc2,f,c
 22128  01989E  0E00               	movlw	0
 22129  0198A0  22DD               	addwfc	postdec2,f,c
 22130  0198A2                     l3192:
 22131                           
 22132                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 22133  0198A2  52E5               	movf	postdec1,f,c
 22134  0198A4  52E5               	movf	postdec1,f,c
 22135  0198A6  52E5               	movf	postdec1,f,c
 22136  0198A8  52E5               	movf	postdec1,f,c
 22137  0198AA  0012               	return		;funcret
 22138  0198AC                     __end_of_fputc:
 22139                           	opt callstack 0
 22140                           
 22141 ;; *************** function _putch *****************
 22142 ;; Defined at:
 22143 ;;		line 427 in file "eadog.c"
 22144 ;; Parameters:    Size  Location     Type
 22145 ;;  c               1  [STACK] unsigned char 
 22146 ;; Auto vars:     Size  Location     Type
 22147 ;;		None
 22148 ;; Return value:  Size  Location     Type
 22149 ;;                  1  [STACK] void 
 22150 ;; Registers used:
 22151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22152 ;; Tracked objects:
 22153 ;;		On entry : 0/0
 22154 ;;		On exit  : 0/0
 22155 ;;		Unchanged: 0/0
 22156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22161 ;;Total ram usage:        0 bytes
 22162 ;; Hardware stack levels used:    1
 22163 ;; Hardware stack levels required when called:   16
 22164 ;; This function calls:
 22165 ;;		_ringBufS_put_dma
 22166 ;; This function is called by:
 22167 ;;		_fputc
 22168 ;; This function uses a reentrant model
 22169 ;;
 22170                           
 22171                           	psect	text77
 22172  01C002                     __ptext77:
 22173                           	opt callstack 0
 22174  01C002                     _putch:
 22175                           	opt callstack 0
 22176                           
 22177                           ;eadog.c: 427: void putch(char c);eadog.c: 428: {;eadog.c: 429:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 22178                           ;stkvar	_c @ sp[(0)+-1]
 22179                           
 22180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22181                           ;incstack = 0
 22182 ;; hardware stack exceeded
 22183  01C002  0EFF               	movlw	-1
 22184  01C004  50E3               	movf	plusw1,w,c
 22185  01C006  6EE6               	movwf	postinc1,c
 22186  01C008  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 22187  01C00E  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 22188  01C014  EC0B  F0D4         	call	_ringBufS_put_dma	;wreg free
 22189                           
 22190                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 22191  01C018  52E5               	movf	postdec1,f,c
 22192  01C01A  0012               	return		;funcret
 22193  01C01C                     __end_of_putch:
 22194                           	opt callstack 0
 22195                           
 22196 ;; *************** function _ringBufS_put_dma *****************
 22197 ;; Defined at:
 22198 ;;		line 67 in file "ringbufs.c"
 22199 ;; Parameters:    Size  Location     Type
 22200 ;;  _this           2  [STACK] PTR struct ringBufS_t
 22201 ;;		 -> ring_buf1(67), 
 22202 ;;  c               1  [STACK] const unsigned char 
 22203 ;; Auto vars:     Size  Location     Type
 22204 ;;		None
 22205 ;; Return value:  Size  Location     Type
 22206 ;;                  1  [STACK] void 
 22207 ;; Registers used:
 22208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22209 ;; Tracked objects:
 22210 ;;		On entry : 0/0
 22211 ;;		On exit  : 0/0
 22212 ;;		Unchanged: 0/0
 22213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22218 ;;Total ram usage:        0 bytes
 22219 ;; Hardware stack levels used:    1
 22220 ;; Hardware stack levels required when called:   15
 22221 ;; This function calls:
 22222 ;;		Nothing
 22223 ;; This function is called by:
 22224 ;;		_putch
 22225 ;; This function uses a reentrant model
 22226 ;;
 22227                           
 22228                           	psect	text78
 22229  01A816                     __ptext78:
 22230                           	opt callstack 0
 22231  01A816                     _ringBufS_put_dma:
 22232                           	opt callstack 0
 22233                           
 22234                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 22235                           ;stkvar	__this @ sp[(0)+-2]
 22236                           
 22237                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22238                           ;incstack = 0
 22239 ;; hardware stack exceeded
 22240  01A816  0EFE               	movlw	-2
 22241  01A818  006F FF8C  F00B    	movff	plusw1,btemp+10
 22242  01A81E  0EFF               	movlw	-1
 22243  01A820  006F FF8C  F00C    	movff	plusw1,btemp+11
 22244  01A826  0E42               	movlw	66
 22245  01A828  240B               	addwf	(btemp+10)^0,w,c
 22246  01A82A  6ED9               	movwf	fsr2l,c
 22247  01A82C  0E00               	movlw	0
 22248  01A82E  200C               	addwfc	(btemp+11)^0,w,c
 22249  01A830  6EDA               	movwf	fsr2h,c
 22250  01A832  0E40               	movlw	64
 22251  01A834  60DF               	cpfslt	indf2,c
 22252  01A836  D040               	goto	l1586
 22253                           
 22254                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 22255                           ;stkvar	_c @ sp[(0)+-3]
 22256                           ;stkvar	__this @ sp[(0)+-2]
 22257  01A838  0EFE               	movlw	-2
 22258  01A83A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22259  01A840  0EFF               	movlw	-1
 22260  01A842  006F FF8C  F00C    	movff	plusw1,btemp+11
 22261  01A848  0E40               	movlw	64
 22262  01A84A  240B               	addwf	(btemp+10)^0,w,c
 22263  01A84C  6ED9               	movwf	fsr2l,c
 22264  01A84E  0E00               	movlw	0
 22265  01A850  200C               	addwfc	(btemp+11)^0,w,c
 22266  01A852  6EDA               	movwf	fsr2h,c
 22267  01A854  50DF               	movf	indf2,w,c
 22268  01A856  6E0C               	movwf	(btemp+11)^0,c
 22269                           
 22270                           ;stkvar	__this @ sp[(0)+-2]
 22271  01A858  0EFE               	movlw	-2
 22272  01A85A  006F FF8C  F009    	movff	plusw1,btemp+8
 22273  01A860  0EFF               	movlw	-1
 22274  01A862  006F FF8C  F00A    	movff	plusw1,btemp+9
 22275  01A868  500C               	movf	(btemp+11)^0,w,c
 22276  01A86A  2409               	addwf	(btemp+8)^0,w,c
 22277  01A86C  6ED9               	movwf	fsr2l,c
 22278  01A86E  0E00               	movlw	0
 22279  01A870  200A               	addwfc	(btemp+9)^0,w,c
 22280  01A872  6EDA               	movwf	fsr2h,c
 22281  01A874  0EFD               	movlw	-3
 22282  01A876  006F FF8F FFDF     	movff	plusw1,indf2
 22283                           
 22284                           ;ringbufs.c: 71:   ++_this->head;
 22285                           ;stkvar	__this @ sp[(0)+-2]
 22286  01A87C  0EFE               	movlw	-2
 22287  01A87E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22288  01A884  0EFF               	movlw	-1
 22289  01A886  006F FF8C  F00C    	movff	plusw1,btemp+11
 22290  01A88C  0E40               	movlw	64
 22291  01A88E  240B               	addwf	(btemp+10)^0,w,c
 22292  01A890  6ED9               	movwf	fsr2l,c
 22293  01A892  0E00               	movlw	0
 22294  01A894  200C               	addwfc	(btemp+11)^0,w,c
 22295  01A896  6EDA               	movwf	fsr2h,c
 22296  01A898  2ADF               	incf	indf2,f,c
 22297                           
 22298                           ;ringbufs.c: 72:   ++_this->count;
 22299                           ;stkvar	__this @ sp[(0)+-2]
 22300  01A89A  0EFE               	movlw	-2
 22301  01A89C  006F FF8C  F00B    	movff	plusw1,btemp+10
 22302  01A8A2  0EFF               	movlw	-1
 22303  01A8A4  006F FF8C  F00C    	movff	plusw1,btemp+11
 22304  01A8AA  0E42               	movlw	66
 22305  01A8AC  240B               	addwf	(btemp+10)^0,w,c
 22306  01A8AE  6ED9               	movwf	fsr2l,c
 22307  01A8B0  0E00               	movlw	0
 22308  01A8B2  200C               	addwfc	(btemp+11)^0,w,c
 22309  01A8B4  6EDA               	movwf	fsr2h,c
 22310  01A8B6  2ADF               	incf	indf2,f,c
 22311  01A8B8                     l1586:
 22312                           
 22313                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 22314  01A8B8  52E5               	movf	postdec1,f,c
 22315  01A8BA  52E5               	movf	postdec1,f,c
 22316  01A8BC  52E5               	movf	postdec1,f,c
 22317  01A8BE  0012               	return		;funcret
 22318  01A8C0                     __end_of_ringBufS_put_dma:
 22319                           	opt callstack 0
 22320                           
 22321 ;; *************** function _atoi *****************
 22322 ;; Defined at:
 22323 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 22324 ;; Parameters:    Size  Location     Type
 22325 ;;  s               2  [STACK] PTR const unsigned char 
 22326 ;;		 -> STR_64(121), STR_62(3), STR_61(3), STR_60(19), 
 22327 ;;		 -> STR_59(19), STR_58(19), STR_57(19), STR_56(19), 
 22328 ;;		 -> STR_55(19), STR_54(24), STR_53(15), STR_52(15), 
 22329 ;;		 -> STR_51(15), STR_50(10), STR_49(10), STR_48(19), 
 22330 ;;		 -> STR_47(19), STR_44(3), STR_43(3), STR_42(17), 
 22331 ;;		 -> STR_41(16), STR_40(16), STR_39(20), STR_38(20), 
 22332 ;;		 -> STR_37(20), STR_36(20), STR_35(20), STR_34(20), 
 22333 ;;		 -> STR_33(19), STR_32(19), STR_31(19), STR_30(19), 
 22334 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 22335 ;;		 -> STR_25(20), STR_24(19), STR_23(19), STR_22(20), 
 22336 ;;		 -> STR_21(17), STR_20(16), STR_19(16), STR_18(26), 
 22337 ;;		 -> STR_17(26), STR_16(22), STR_15(21), STR_14(21), 
 22338 ;;		 -> STR_13(21), STR_12(21), STR_11(22), STR_10(22), 
 22339 ;;		 -> STR_9(26), STR_8(21), STR_7(21), STR_6(21), 
 22340 ;;		 -> STR_5(21), STR_4(21), STR_2(21), STR_1(21), 
 22341 ;; Auto vars:     Size  Location     Type
 22342 ;;  n               2  [STACK] int 
 22343 ;;  neg             2  [STACK] int 
 22344 ;; Return value:  Size  Location     Type
 22345 ;;                  2  [STACK] int 
 22346 ;; Registers used:
 22347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 22348 ;; Tracked objects:
 22349 ;;		On entry : 0/0
 22350 ;;		On exit  : 0/0
 22351 ;;		Unchanged: 0/0
 22352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22357 ;;Total ram usage:        0 bytes
 22358 ;; Hardware stack levels used:    1
 22359 ;; Hardware stack levels required when called:   16
 22360 ;; This function calls:
 22361 ;;		_isdigit
 22362 ;;		_isspace
 22363 ;; This function is called by:
 22364 ;;		_vfpfcnvrt
 22365 ;; This function uses a reentrant model
 22366 ;;
 22367                           
 22368                           	psect	text79
 22369  017926                     __ptext79:
 22370                           	opt callstack 0
 22371  017926                     _atoi:
 22372                           	opt callstack 0
 22373                           
 22374                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22375  017926  0E09               	movlw	9
 22376  017928  26E1               	addwf	fsr1l,f,c
 22377  01792A  0E00               	movlw	0
 22378  01792C  22E2               	addwfc	fsr1h,f,c
 22379                           
 22380                           ;stkvar	_n @ sp[(-9)+5]
 22381                           
 22382                           ;incstack = 0
 22383 ;; hardware stack exceeded
 22384  01792E  0EFC               	movlw	-4
 22385  017930  6AE3               	clrf	plusw1,c
 22386  017932  0EFD               	movlw	-3
 22387  017934  6AE3               	clrf	plusw1,c
 22388                           
 22389                           ;stkvar	_neg @ sp[(-9)+7]
 22390  017936  0EFE               	movlw	-2
 22391  017938  6AE3               	clrf	plusw1,c
 22392  01793A  0EFF               	movlw	-1
 22393  01793C  6AE3               	clrf	plusw1,c
 22394  01793E  D011               	goto	l9334
 22395  017940                     l9332:
 22396                           
 22397                           ;stkvar	_s @ sp[(-9)+-2]
 22398  017940  0EF5               	movlw	-11
 22399  017942  50E3               	movf	plusw1,w,c
 22400  017944  0F01               	addlw	1
 22401  017946  6E01               	movwf	btemp^0,c
 22402  017948  0EF5               	movlw	-11
 22403  01794A  0060  F007  FFE3   	movff	btemp,plusw1
 22404  017950  6A01               	clrf	btemp^0,c
 22405  017952  0EF6               	movlw	-10
 22406  017954  50E3               	movf	plusw1,w,c
 22407  017956  2001               	addwfc	btemp^0,w,c
 22408  017958  6E01               	movwf	btemp^0,c
 22409  01795A  0EF6               	movlw	-10
 22410  01795C  0060  F007  FFE3   	movff	btemp,plusw1
 22411  017962                     l9334:
 22412                           
 22413                           ;stkvar	_atoi$6100 @ sp[(-9)+4]
 22414  017962  0EFB               	movlw	-5
 22415  017964  6AE3               	clrf	plusw1,c
 22416  017966  2AE3               	incf	plusw1,f,c
 22417                           
 22418                           ;stkvar	_s @ sp[(-9)+-2]
 22419  017968  50E1               	movf	fsr1l,w,c
 22420  01796A  0FF5               	addlw	-11
 22421  01796C  6ED9               	movwf	fsr2l,c
 22422  01796E  50E2               	movf	fsr1h,w,c
 22423  017970  6EDA               	movwf	fsr2h,c
 22424  017972  0EFF               	movlw	255
 22425  017974  22DA               	addwfc	fsr2h,f,c
 22426  017976  006F FF7B FFF6     	movff	postinc2,tblptrl
 22427  01797C  006F FF77 FFF7     	movff	postdec2,tblptrh
 22428  017982                     	if	0	;tblptru may be non-zero
 22429  017982                     	endif
 22430  017982                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22431  017982  0E00               	movlw	low (__mediumconst shr (0+16))
 22432  017984  6EF8               	movwf	tblptru,c
 22433  017986                     	endif
 22434  017986  0008               	tblrd		*
 22435  017988  50F5               	movf	tablat,w,c
 22436  01798A  0A20               	xorlw	32
 22437  01798C  B4D8               	btfsc	status,2,c
 22438  01798E  D023               	goto	l9342
 22439  017990  0EF7               	movlw	247
 22440  017992  6E0B               	movwf	(btemp+10)^0,c
 22441  017994  0EFF               	movlw	255
 22442  017996  6E0C               	movwf	(btemp+11)^0,c
 22443                           
 22444                           ;stkvar	_s @ sp[(-9)+-2]
 22445  017998  50E1               	movf	fsr1l,w,c
 22446  01799A  0FF5               	addlw	-11
 22447  01799C  6ED9               	movwf	fsr2l,c
 22448  01799E  50E2               	movf	fsr1h,w,c
 22449  0179A0  6EDA               	movwf	fsr2h,c
 22450  0179A2  0EFF               	movlw	255
 22451  0179A4  22DA               	addwfc	fsr2h,f,c
 22452  0179A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 22453  0179AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 22454  0179B2                     	if	0	;tblptru may be non-zero
 22455  0179B2                     	endif
 22456  0179B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22457  0179B2  0E00               	movlw	low (__mediumconst shr (0+16))
 22458  0179B4  6EF8               	movwf	tblptru,c
 22459  0179B6                     	endif
 22460  0179B6  0008               	tblrd		*
 22461  0179B8  50F5               	movf	tablat,w,c
 22462  0179BA  6E09               	movwf	(btemp+8)^0,c
 22463  0179BC  6A0A               	clrf	(btemp+9)^0,c
 22464  0179BE  500B               	movf	(btemp+10)^0,w,c
 22465  0179C0  2609               	addwf	(btemp+8)^0,f,c
 22466  0179C2  500C               	movf	(btemp+11)^0,w,c
 22467  0179C4  220A               	addwfc	(btemp+9)^0,f,c
 22468  0179C6  500A               	movf	(btemp+9)^0,w,c
 22469  0179C8  E104               	bnz	u8550
 22470  0179CA  0E05               	movlw	5
 22471  0179CC  5C09               	subwf	(btemp+8)^0,w,c
 22472  0179CE  A0D8               	btfss	status,0,c
 22473  0179D0  D002               	goto	l9342
 22474  0179D2                     u8550:
 22475                           
 22476                           ;stkvar	_atoi$6100 @ sp[(-9)+4]
 22477  0179D2  0EFB               	movlw	-5
 22478  0179D4  6AE3               	clrf	plusw1,c
 22479  0179D6                     l9342:
 22480                           
 22481                           ;stkvar	_atoi$6100 @ sp[(-9)+4]
 22482  0179D6  0EFB               	movlw	-5
 22483  0179D8  50E3               	movf	plusw1,w,c
 22484  0179DA  6E0B               	movwf	(btemp+10)^0,c
 22485  0179DC  6A0C               	clrf	(btemp+11)^0,c
 22486                           
 22487                           ;stkvar	_atoi$6099 @ sp[(-9)+2]
 22488  0179DE  0EF9               	movlw	-7
 22489  0179E0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22490  0179E6  0EFA               	movlw	-6
 22491  0179E8  0060  F033  FFE3   	movff	btemp+11,plusw1
 22492                           
 22493                           ;stkvar	_atoi$6099 @ sp[(-9)+2]
 22494  0179EE  0EF9               	movlw	-7
 22495  0179F0  006F FF8C  F001    	movff	plusw1,btemp
 22496  0179F6  0EFA               	movlw	-6
 22497  0179F8  50E3               	movf	plusw1,w,c
 22498  0179FA  1001               	iorwf	btemp^0,w,c
 22499  0179FC  B4D8               	btfsc	status,2,c
 22500  0179FE  D01F               	goto	l9352
 22501  017A00  D79F               	goto	l9332
 22502  017A02                     l9348:
 22503  017A02  0E01               	movlw	1
 22504  017A04  6E0B               	movwf	(btemp+10)^0,c
 22505  017A06  0E00               	movlw	0
 22506  017A08  6E0C               	movwf	(btemp+11)^0,c
 22507                           
 22508                           ;stkvar	_neg @ sp[(-9)+7]
 22509  017A0A  0EFE               	movlw	-2
 22510  017A0C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22511  017A12  0EFF               	movlw	-1
 22512  017A14  0060  F033  FFE3   	movff	btemp+11,plusw1
 22513  017A1A                     l9350:
 22514                           
 22515                           ;stkvar	_s @ sp[(-9)+-2]
 22516  017A1A  0EF5               	movlw	-11
 22517  017A1C  50E3               	movf	plusw1,w,c
 22518  017A1E  0F01               	addlw	1
 22519  017A20  6E01               	movwf	btemp^0,c
 22520  017A22  0EF5               	movlw	-11
 22521  017A24  0060  F007  FFE3   	movff	btemp,plusw1
 22522  017A2A  6A01               	clrf	btemp^0,c
 22523  017A2C  0EF6               	movlw	-10
 22524  017A2E  50E3               	movf	plusw1,w,c
 22525  017A30  2001               	addwfc	btemp^0,w,c
 22526  017A32  6E01               	movwf	btemp^0,c
 22527  017A34  0EF6               	movlw	-10
 22528  017A36  0060  F007  FFE3   	movff	btemp,plusw1
 22529  017A3C  D053               	goto	l9358
 22530  017A3E                     l9352:
 22531                           
 22532                           ;stkvar	_s @ sp[(-9)+-2]
 22533  017A3E  50E1               	movf	fsr1l,w,c
 22534  017A40  0FF5               	addlw	-11
 22535  017A42  6ED9               	movwf	fsr2l,c
 22536  017A44  50E2               	movf	fsr1h,w,c
 22537  017A46  6EDA               	movwf	fsr2h,c
 22538  017A48  0EFF               	movlw	255
 22539  017A4A  22DA               	addwfc	fsr2h,f,c
 22540  017A4C  006F FF7B FFF6     	movff	postinc2,tblptrl
 22541  017A52  006F FF77 FFF7     	movff	postdec2,tblptrh
 22542  017A58                     	if	0	;tblptru may be non-zero
 22543  017A58                     	endif
 22544  017A58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22545  017A58  0E00               	movlw	low (__mediumconst shr (0+16))
 22546  017A5A  6EF8               	movwf	tblptru,c
 22547  017A5C                     	endif
 22548  017A5C  0008               	tblrd		*
 22549  017A5E  50F5               	movf	tablat,w,c
 22550  017A60  6E0B               	movwf	(btemp+10)^0,c
 22551  017A62  6A0C               	clrf	(btemp+11)^0,c
 22552                           
 22553                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22554                           ; Switch size 1, requested type "simple"
 22555                           ; Number of cases is 1, Range of values is 0 to 0
 22556                           ; switch strategies available:
 22557                           ; Name         Instructions Cycles
 22558                           ; simple_byte            4     3 (average)
 22559                           ;	Chosen strategy is simple_byte
 22560  017A64  500C               	movf	(btemp+11)^0,w,c
 22561  017A66  0A00               	xorlw	0	; case 0
 22562  017A68  A4D8               	btfss	status,2,c
 22563  017A6A  D03C               	goto	l9358
 22564                           
 22565                           ; Switch size 1, requested type "simple"
 22566                           ; Number of cases is 2, Range of values is 43 to 45
 22567                           ; switch strategies available:
 22568                           ; Name         Instructions Cycles
 22569                           ; simple_byte            7     4 (average)
 22570                           ;	Chosen strategy is simple_byte
 22571  017A6C  500B               	movf	(btemp+10)^0,w,c
 22572  017A6E  0A2B               	xorlw	43	; case 43
 22573  017A70  B4D8               	btfsc	status,2,c
 22574  017A72  D7D3               	goto	l9350
 22575  017A74  0A06               	xorlw	6	; case 45
 22576  017A76  B4D8               	btfsc	status,2,c
 22577  017A78  D7C4               	goto	l9348
 22578  017A7A  D034               	goto	l9358
 22579  017A7C                     l9354:
 22580                           
 22581                           ;stkvar	_n @ sp[(-9)+5]
 22582  017A7C  0EFC               	movlw	-4
 22583  017A7E  006F FF8C  F00B    	movff	plusw1,btemp+10
 22584  017A84  0EFD               	movlw	-3
 22585  017A86  006F FF8C  F00C    	movff	plusw1,btemp+11
 22586  017A8C  0E0A               	movlw	10
 22587  017A8E  020B               	mulwf	(btemp+10)^0,c
 22588  017A90  006F FFCC  F009    	movff	prodl,btemp+8
 22589  017A96  006F FFD0  F00A    	movff	prodh,btemp+9
 22590  017A9C  020C               	mulwf	(btemp+11)^0,c
 22591  017A9E  50F3               	movf	prodl,w,c
 22592  017AA0  260A               	addwf	(btemp+9)^0,f,c
 22593                           
 22594                           ;stkvar	_s @ sp[(-9)+-2]
 22595  017AA2  50E1               	movf	fsr1l,w,c
 22596  017AA4  0FF5               	addlw	-11
 22597  017AA6  6ED9               	movwf	fsr2l,c
 22598  017AA8  50E2               	movf	fsr1h,w,c
 22599  017AAA  6EDA               	movwf	fsr2h,c
 22600  017AAC  0EFF               	movlw	255
 22601  017AAE  22DA               	addwfc	fsr2h,f,c
 22602  017AB0  006F FF7B FFF6     	movff	postinc2,tblptrl
 22603  017AB6  006F FF77 FFF7     	movff	postdec2,tblptrh
 22604  017ABC                     	if	0	;tblptru may be non-zero
 22605  017ABC                     	endif
 22606  017ABC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22607  017ABC  0E00               	movlw	low (__mediumconst shr (0+16))
 22608  017ABE  6EF8               	movwf	tblptru,c
 22609  017AC0                     	endif
 22610  017AC0  0008               	tblrd		*
 22611  017AC2  50F5               	movf	tablat,w,c
 22612  017AC4  5E09               	subwf	(btemp+8)^0,f,c
 22613  017AC6  0E00               	movlw	0
 22614  017AC8  5A0A               	subwfb	(btemp+9)^0,f,c
 22615  017ACA  0E30               	movlw	48
 22616  017ACC  2609               	addwf	(btemp+8)^0,f,c
 22617  017ACE  0E00               	movlw	0
 22618  017AD0  220A               	addwfc	(btemp+9)^0,f,c
 22619                           
 22620                           ;stkvar	_n @ sp[(-9)+5]
 22621  017AD2  0EFC               	movlw	-4
 22622  017AD4  0060  F027  FFE3   	movff	btemp+8,plusw1
 22623  017ADA  0EFD               	movlw	-3
 22624  017ADC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22625  017AE2  D79B               	goto	l9350
 22626  017AE4                     l9358:
 22627  017AE4  0ED0               	movlw	208
 22628  017AE6  6E0B               	movwf	(btemp+10)^0,c
 22629  017AE8  0EFF               	movlw	255
 22630  017AEA  6E0C               	movwf	(btemp+11)^0,c
 22631                           
 22632                           ;stkvar	_s @ sp[(-9)+-2]
 22633  017AEC  50E1               	movf	fsr1l,w,c
 22634  017AEE  0FF5               	addlw	-11
 22635  017AF0  6ED9               	movwf	fsr2l,c
 22636  017AF2  50E2               	movf	fsr1h,w,c
 22637  017AF4  6EDA               	movwf	fsr2h,c
 22638  017AF6  0EFF               	movlw	255
 22639  017AF8  22DA               	addwfc	fsr2h,f,c
 22640  017AFA  006F FF7B FFF6     	movff	postinc2,tblptrl
 22641  017B00  006F FF77 FFF7     	movff	postdec2,tblptrh
 22642  017B06                     	if	0	;tblptru may be non-zero
 22643  017B06                     	endif
 22644  017B06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22645  017B06  0E00               	movlw	low (__mediumconst shr (0+16))
 22646  017B08  6EF8               	movwf	tblptru,c
 22647  017B0A                     	endif
 22648  017B0A  0008               	tblrd		*
 22649  017B0C  50F5               	movf	tablat,w,c
 22650  017B0E  6E09               	movwf	(btemp+8)^0,c
 22651  017B10  6A0A               	clrf	(btemp+9)^0,c
 22652  017B12  500B               	movf	(btemp+10)^0,w,c
 22653  017B14  2609               	addwf	(btemp+8)^0,f,c
 22654  017B16  500C               	movf	(btemp+11)^0,w,c
 22655  017B18  220A               	addwfc	(btemp+9)^0,f,c
 22656  017B1A  500A               	movf	(btemp+9)^0,w,c
 22657  017B1C  E106               	bnz	u8570
 22658  017B1E  0E0A               	movlw	10
 22659  017B20  5C09               	subwf	(btemp+8)^0,w,c
 22660  017B22  B0D8               	btfsc	status,0,c
 22661  017B24  D002               	goto	u8570
 22662  017B26  0E01               	movlw	1
 22663  017B28  D001               	goto	u8580
 22664  017B2A                     u8570:
 22665  017B2A  0E00               	movlw	0
 22666  017B2C                     u8580:
 22667  017B2C  6E0B               	movwf	(btemp+10)^0,c
 22668  017B2E  6A0C               	clrf	(btemp+11)^0,c
 22669                           
 22670                           ;stkvar	_atoi$6101 @ sp[(-9)+0]
 22671  017B30  0EF7               	movlw	-9
 22672  017B32  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22673  017B38  0EF8               	movlw	-8
 22674  017B3A  0060  F033  FFE3   	movff	btemp+11,plusw1
 22675                           
 22676                           ;stkvar	_atoi$6101 @ sp[(-9)+0]
 22677  017B40  0EF7               	movlw	-9
 22678  017B42  006F FF8C  F001    	movff	plusw1,btemp
 22679  017B48  0EF8               	movlw	-8
 22680  017B4A  50E3               	movf	plusw1,w,c
 22681  017B4C  1001               	iorwf	btemp^0,w,c
 22682  017B4E  A4D8               	btfss	status,2,c
 22683  017B50  D795               	goto	l9354
 22684                           
 22685                           ;stkvar	_neg @ sp[(-9)+7]
 22686  017B52  0EFE               	movlw	-2
 22687  017B54  006F FF8C  F001    	movff	plusw1,btemp
 22688  017B5A  0EFF               	movlw	-1
 22689  017B5C  50E3               	movf	plusw1,w,c
 22690  017B5E  1001               	iorwf	btemp^0,w,c
 22691  017B60  A4D8               	btfss	status,2,c
 22692  017B62  D00E               	goto	l9368
 22693                           
 22694                           ;stkvar	_n @ sp[(-9)+5]
 22695  017B64  0EFC               	movlw	-4
 22696  017B66  006F FF8C  F001    	movff	plusw1,btemp
 22697  017B6C  1E01               	comf	btemp^0,f,c
 22698  017B6E  0EFD               	movlw	-3
 22699  017B70  006F FF8C  F002    	movff	plusw1,btemp+1
 22700  017B76  1E02               	comf	(btemp+1)^0,f,c
 22701  017B78  2A01               	incf	btemp^0,f,c
 22702  017B7A  B4D8               	btfsc	status,2,c
 22703  017B7C  2A02               	incf	(btemp+1)^0,f,c
 22704  017B7E  D008               	goto	l3123
 22705  017B80                     l9368:
 22706                           
 22707                           ;stkvar	_n @ sp[(-9)+5]
 22708  017B80  0EFC               	movlw	-4
 22709  017B82  006F FF8C  F001    	movff	plusw1,btemp
 22710  017B88  0EFD               	movlw	-3
 22711  017B8A  006F FF8C  F002    	movff	plusw1,btemp+1
 22712  017B90                     l3123:
 22713                           
 22714                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22715  017B90  0EF5               	movlw	245
 22716  017B92  26E1               	addwf	fsr1l,f,c
 22717  017B94  0EFF               	movlw	255
 22718  017B96  22E2               	addwfc	fsr1h,f,c
 22719  017B98  0012               	return		;funcret
 22720  017B9A                     __end_of_atoi:
 22721                           	opt callstack 0
 22722                           
 22723 ;; *************** function _isspace *****************
 22724 ;; Defined at:
 22725 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22726 ;; Parameters:    Size  Location     Type
 22727 ;;  c               2  [STACK] int 
 22728 ;; Auto vars:     Size  Location     Type
 22729 ;;		None
 22730 ;; Return value:  Size  Location     Type
 22731 ;;                  2  [STACK] int 
 22732 ;; Registers used:
 22733 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22734 ;; Tracked objects:
 22735 ;;		On entry : 0/0
 22736 ;;		On exit  : 0/0
 22737 ;;		Unchanged: 0/0
 22738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22743 ;;Total ram usage:        0 bytes
 22744 ;; Hardware stack levels used:    1
 22745 ;; Hardware stack levels required when called:   15
 22746 ;; This function calls:
 22747 ;;		Nothing
 22748 ;; This function is called by:
 22749 ;;		_atoi
 22750 ;; This function uses a reentrant model
 22751 ;;
 22752                           
 22753                           	psect	text80
 22754  01B31A                     __ptext80:
 22755                           	opt callstack 0
 22756  01B31A                     _isspace:
 22757                           	opt callstack 0
 22758                           
 22759                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22760  01B31A  52E6               	movf	postinc1,f,c
 22761                           
 22762                           ;stkvar	_isspace$6150 @ sp[(-1)+0]
 22763                           
 22764                           ;incstack = 0
 22765 ;; hardware stack exceeded
 22766  01B31C  0EFF               	movlw	-1
 22767  01B31E  6AE3               	clrf	plusw1,c
 22768  01B320  2AE3               	incf	plusw1,f,c
 22769                           
 22770                           ;stkvar	_c @ sp[(-1)+-2]
 22771  01B322  0EFD               	movlw	-3
 22772  01B324  006F FF8C  F001    	movff	plusw1,btemp
 22773  01B32A  0E20               	movlw	32
 22774  01B32C  1801               	xorwf	btemp^0,w,c
 22775  01B32E  E104               	bnz	u7440
 22776  01B330  0EFE               	movlw	-2
 22777  01B332  50E3               	movf	plusw1,w,c
 22778  01B334  B4D8               	btfsc	status,2,c
 22779  01B336  D012               	goto	l8752
 22780  01B338                     u7440:
 22781                           
 22782                           ;stkvar	_c @ sp[(-1)+-2]
 22783  01B338  0EFD               	movlw	-3
 22784  01B33A  50E3               	movf	plusw1,w,c
 22785  01B33C  0FF7               	addlw	247
 22786  01B33E  6E0B               	movwf	(btemp+10)^0,c
 22787  01B340  0EFE               	movlw	-2
 22788  01B342  006F FF8C  F00C    	movff	plusw1,btemp+11
 22789  01B348  0EFF               	movlw	255
 22790  01B34A  220C               	addwfc	(btemp+11)^0,f,c
 22791  01B34C  500C               	movf	(btemp+11)^0,w,c
 22792  01B34E  E104               	bnz	u7450
 22793  01B350  0E05               	movlw	5
 22794  01B352  5C0B               	subwf	(btemp+10)^0,w,c
 22795  01B354  A0D8               	btfss	status,0,c
 22796  01B356  D002               	goto	l8752
 22797  01B358                     u7450:
 22798                           
 22799                           ;stkvar	_isspace$6150 @ sp[(-1)+0]
 22800  01B358  0EFF               	movlw	-1
 22801  01B35A  6AE3               	clrf	plusw1,c
 22802  01B35C                     l8752:
 22803                           
 22804                           ;stkvar	_isspace$6150 @ sp[(-1)+0]
 22805  01B35C  0EFF               	movlw	-1
 22806  01B35E  50E3               	movf	plusw1,w,c
 22807  01B360  6E01               	movwf	btemp^0,c
 22808  01B362  6A02               	clrf	(btemp+1)^0,c
 22809                           
 22810                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22811  01B364  52E5               	movf	postdec1,f,c
 22812  01B366  52E5               	movf	postdec1,f,c
 22813  01B368  52E5               	movf	postdec1,f,c
 22814  01B36A  0012               	return		;funcret
 22815  01B36C                     __end_of_isspace:
 22816                           	opt callstack 0
 22817                           
 22818 ;; *************** function _isdigit *****************
 22819 ;; Defined at:
 22820 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22821 ;; Parameters:    Size  Location     Type
 22822 ;;  c               2  [STACK] int 
 22823 ;; Auto vars:     Size  Location     Type
 22824 ;;		None
 22825 ;; Return value:  Size  Location     Type
 22826 ;;                  2  [STACK] int 
 22827 ;; Registers used:
 22828 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22829 ;; Tracked objects:
 22830 ;;		On entry : 0/0
 22831 ;;		On exit  : 0/0
 22832 ;;		Unchanged: 0/0
 22833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22838 ;;Total ram usage:        0 bytes
 22839 ;; Hardware stack levels used:    1
 22840 ;; Hardware stack levels required when called:   15
 22841 ;; This function calls:
 22842 ;;		Nothing
 22843 ;; This function is called by:
 22844 ;;		_vfpfcnvrt
 22845 ;;		_atoi
 22846 ;; This function uses a reentrant model
 22847 ;;
 22848                           
 22849                           	psect	text81
 22850  01BA6A                     __ptext81:
 22851                           	opt callstack 0
 22852  01BA6A                     _isdigit:
 22853                           	opt callstack 0
 22854                           
 22855                           ;stkvar	_c @ sp[(0)+-2]
 22856                           
 22857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22858                           ;incstack = 0
 22859 ;; hardware stack exceeded
 22860  01BA6A  0EFE               	movlw	-2
 22861  01BA6C  50E3               	movf	plusw1,w,c
 22862  01BA6E  0FD0               	addlw	208
 22863  01BA70  6E0B               	movwf	(btemp+10)^0,c
 22864  01BA72  0EFF               	movlw	-1
 22865  01BA74  006F FF8C  F00C    	movff	plusw1,btemp+11
 22866  01BA7A  0EFF               	movlw	255
 22867  01BA7C  220C               	addwfc	(btemp+11)^0,f,c
 22868  01BA7E  500C               	movf	(btemp+11)^0,w,c
 22869  01BA80  E106               	bnz	u6290
 22870  01BA82  0E0A               	movlw	10
 22871  01BA84  5C0B               	subwf	(btemp+10)^0,w,c
 22872  01BA86  B0D8               	btfsc	status,0,c
 22873  01BA88  D002               	goto	u6290
 22874  01BA8A  0E01               	movlw	1
 22875  01BA8C  D001               	goto	u6300
 22876  01BA8E                     u6290:
 22877  01BA8E  0E00               	movlw	0
 22878  01BA90                     u6300:
 22879  01BA90  6E01               	movwf	btemp^0,c
 22880  01BA92  6A02               	clrf	(btemp+1)^0,c
 22881                           
 22882                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22883  01BA94  52E5               	movf	postdec1,f,c
 22884  01BA96  52E5               	movf	postdec1,f,c
 22885  01BA98  0012               	return		;funcret
 22886  01BA9A                     __end_of_isdigit:
 22887                           	opt callstack 0
 22888                           
 22889 ;; *************** function _set_vterm *****************
 22890 ;; Defined at:
 22891 ;;		line 107 in file "mconfig.c"
 22892 ;; Parameters:    Size  Location     Type
 22893 ;;  vterm           1  [STACK] const unsigned char 
 22894 ;; Auto vars:     Size  Location     Type
 22895 ;;		None
 22896 ;; Return value:  Size  Location     Type
 22897 ;;                  1  [STACK] unsigned char 
 22898 ;; Registers used:
 22899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22900 ;; Tracked objects:
 22901 ;;		On entry : 0/0
 22902 ;;		On exit  : 0/0
 22903 ;;		Unchanged: 0/0
 22904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22909 ;;Total ram usage:        0 bytes
 22910 ;; Hardware stack levels used:    1
 22911 ;; Hardware stack levels required when called:   15
 22912 ;; This function calls:
 22913 ;;		Nothing
 22914 ;; This function is called by:
 22915 ;;		_main
 22916 ;;		_check_help
 22917 ;; This function uses a reentrant model
 22918 ;;
 22919                           
 22920                           	psect	text82
 22921  01BF8C                     __ptext82:
 22922                           	opt callstack 0
 22923  01BF8C                     _set_vterm:
 22924                           	opt callstack 15
 22925                           
 22926                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22927                           ;stkvar	_vterm @ sp[(0)+-1]
 22928                           
 22929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22930                           ;incstack = 0
 22931  01BF8C  0EFF               	movlw	-1
 22932  01BF8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22933  01BF94  0E03               	movlw	3
 22934  01BF96  160C               	andwf	(btemp+11)^0,f,c
 22935  01BF98  EE22  F20A         	lfsr	2,_D+480
 22936  01BF9C  50DF               	movf	223,w,c
 22937  01BF9E  180C               	xorwf	(btemp+11)^0,w,c
 22938  01BFA0  0BFE               	andlw	-2
 22939  01BFA2  180C               	xorwf	(btemp+11)^0,w,c
 22940  01BFA4  6EDF               	movwf	223,c
 22941                           
 22942                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22943  01BFA6  52E5               	movf	postdec1,f,c
 22944  01BFA8  0012               	return		;funcret
 22945  01BFAA                     __end_of_set_vterm:
 22946                           	opt callstack 0
 22947                           
 22948 ;; *************** function _set_temp_display_help *****************
 22949 ;; Defined at:
 22950 ;;		line 211 in file "mconfig.c"
 22951 ;; Parameters:    Size  Location     Type
 22952 ;;  new_response    1  [STACK] const enum E16509
 22953 ;; Auto vars:     Size  Location     Type
 22954 ;;		None
 22955 ;; Return value:  Size  Location     Type
 22956 ;;                  1  [STACK] enum E16509
 22957 ;; Registers used:
 22958 ;;		wreg, fsr1l, fsr1h
 22959 ;; Tracked objects:
 22960 ;;		On entry : 0/1
 22961 ;;		On exit  : 3F/1
 22962 ;;		Unchanged: 0/0
 22963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22968 ;;Total ram usage:        0 bytes
 22969 ;; Hardware stack levels used:    1
 22970 ;; Hardware stack levels required when called:   15
 22971 ;; This function calls:
 22972 ;;		Nothing
 22973 ;; This function is called by:
 22974 ;;		_check_help
 22975 ;; This function uses a reentrant model
 22976 ;;
 22977                           
 22978                           	psect	text83
 22979  01C0EE                     __ptext83:
 22980                           	opt callstack 0
 22981  01C0EE                     _set_temp_display_help:
 22982                           	opt callstack 14
 22983                           
 22984                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22985                           
 22986                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22987                           ;incstack = 0
 22988  01C0EE  0101               	movlb	1	; () banked
 22989  01C0F0  51D5               	movf	(_V+165)& (0+255),w,b	;volatile
 22990                           
 22991                           ; BSR set to: 1
 22992                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22993                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22994  01C0F2  0EFF               	movlw	-1
 22995  01C0F4  006F FF8C  F1D5    	movff	plusw1,_V+165	;volatile
 22996                           
 22997                           ; BSR set to: 1
 22998                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22999  01C0FA  52E5               	movf	postdec1,f,c
 23000  01C0FC  0012               	return		;funcret
 23001  01C0FE                     __end_of_set_temp_display_help:
 23002                           	opt callstack 0
 23003                           
 23004 ;; *************** function _set_display_info *****************
 23005 ;; Defined at:
 23006 ;;		line 200 in file "mconfig.c"
 23007 ;; Parameters:    Size  Location     Type
 23008 ;;  new_response    1  [STACK] const enum E16509
 23009 ;; Auto vars:     Size  Location     Type
 23010 ;;		None
 23011 ;; Return value:  Size  Location     Type
 23012 ;;                  1  [STACK] enum E16994
 23013 ;; Registers used:
 23014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23015 ;; Tracked objects:
 23016 ;;		On entry : 0/1
 23017 ;;		On exit  : 0/0
 23018 ;;		Unchanged: 0/0
 23019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23024 ;;Total ram usage:        0 bytes
 23025 ;; Hardware stack levels used:    1
 23026 ;; Hardware stack levels required when called:   16
 23027 ;; This function calls:
 23028 ;;		_TimerDone
 23029 ;; This function is called by:
 23030 ;;		_main
 23031 ;;		_check_help
 23032 ;; This function uses a reentrant model
 23033 ;;
 23034                           
 23035                           	psect	text84
 23036  01BFAA                     __ptext84:
 23037                           	opt callstack 0
 23038  01BFAA                     _set_display_info:
 23039                           	opt callstack 14
 23040                           
 23041                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 23042                           
 23043                           ; BSR set to: 1
 23044                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23045                           ;incstack = 0
 23046  01BFAA  0E07               	movlw	7
 23047  01BFAC  6EE6               	movwf	postinc1,c
 23048  01BFAE  ECCF  F0DD         	call	_TimerDone	;wreg free
 23049  01BFB2  5001               	movf	btemp^0,w,c
 23050  01BFB4  B4D8               	btfsc	status,2,c
 23051  01BFB6  D006               	goto	l1721
 23052                           
 23053                           ;mconfig.c: 205:   old_info = V.response.info;
 23054  01BFB8  0101               	movlb	1	; () banked
 23055  01BFBA  51D4               	movf	(_V+164)& (0+255),w,b	;volatile
 23056                           
 23057                           ; BSR set to: 1
 23058                           ;mconfig.c: 206:   V.response.info = new_response_info;
 23059                           ;stkvar	_new_response_info @ sp[(0)+-1]
 23060  01BFBC  0EFF               	movlw	-1
 23061  01BFBE  006F FF8C  F1D4    	movff	plusw1,_V+164	;volatile
 23062  01BFC4                     l1721:
 23063                           
 23064                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 23065  01BFC4  52E5               	movf	postdec1,f,c
 23066  01BFC6  0012               	return		;funcret
 23067  01BFC8                     __end_of_set_display_info:
 23068                           	opt callstack 0
 23069                           
 23070 ;; *************** function _mode_lamp_dim *****************
 23071 ;; Defined at:
 23072 ;;		line 13 in file "mconfig.c"
 23073 ;; Parameters:    Size  Location     Type
 23074 ;;  level           2  [STACK] const unsigned short 
 23075 ;; Auto vars:     Size  Location     Type
 23076 ;;		None
 23077 ;; Return value:  Size  Location     Type
 23078 ;;                  1  [STACK] void 
 23079 ;; Registers used:
 23080 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23081 ;; Tracked objects:
 23082 ;;		On entry : 0/1
 23083 ;;		On exit  : 0/0
 23084 ;;		Unchanged: 0/0
 23085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23090 ;;Total ram usage:        0 bytes
 23091 ;; Hardware stack levels used:    1
 23092 ;; Hardware stack levels required when called:   16
 23093 ;; This function calls:
 23094 ;;		_PWM8_LoadDutyValue
 23095 ;; This function is called by:
 23096 ;;		_main
 23097 ;;		_check_help
 23098 ;; This function uses a reentrant model
 23099 ;;
 23100                           
 23101                           	psect	text85
 23102  01C036                     __ptext85:
 23103                           	opt callstack 0
 23104  01C036                     _mode_lamp_dim:
 23105                           	opt callstack 14
 23106                           
 23107                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 23108                           ;stkvar	_level @ sp[(0)+-2]
 23109                           
 23110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23111                           ;incstack = 0
 23112  01C036  0EFE               	movlw	-2
 23113  01C038  006F FF8F FFE6     	movff	plusw1,postinc1
 23114  01C03E  006F FF8F FFE6     	movff	plusw1,postinc1
 23115  01C044  EC48  F0DB         	call	_PWM8_LoadDutyValue	;wreg free
 23116                           
 23117                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 23118  01C048  52E5               	movf	postdec1,f,c
 23119  01C04A  52E5               	movf	postdec1,f,c
 23120  01C04C  0012               	return		;funcret
 23121  01C04E                     __end_of_mode_lamp_dim:
 23122                           	opt callstack 0
 23123                           
 23124 ;; *************** function _mode_lamp_bright *****************
 23125 ;; Defined at:
 23126 ;;		line 18 in file "mconfig.c"
 23127 ;; Parameters:    Size  Location     Type
 23128 ;;		None
 23129 ;; Auto vars:     Size  Location     Type
 23130 ;;		None
 23131 ;; Return value:  Size  Location     Type
 23132 ;;                  1  [STACK] void 
 23133 ;; Registers used:
 23134 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23135 ;; Tracked objects:
 23136 ;;		On entry : 0/0
 23137 ;;		On exit  : 0/0
 23138 ;;		Unchanged: 0/0
 23139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23144 ;;Total ram usage:        0 bytes
 23145 ;; Hardware stack levels used:    1
 23146 ;; Hardware stack levels required when called:   16
 23147 ;; This function calls:
 23148 ;;		_PWM8_LoadDutyValue
 23149 ;; This function is called by:
 23150 ;;		_check_help
 23151 ;; This function uses a reentrant model
 23152 ;;
 23153                           
 23154                           	psect	text86
 23155  01C12A                     __ptext86:
 23156                           	opt callstack 0
 23157  01C12A                     _mode_lamp_bright:
 23158                           	opt callstack 13
 23159                           
 23160                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 23161                           
 23162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23163                           ;incstack = 0
 23164  01C12A  0E2C               	movlw	44
 23165  01C12C  6EE6               	movwf	postinc1,c
 23166  01C12E  0E01               	movlw	1
 23167  01C130  6EE6               	movwf	postinc1,c
 23168  01C132  EC48  F0DB         	call	_PWM8_LoadDutyValue	;wreg free
 23169                           
 23170                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23171  01C136  0012               	return		;funcret
 23172  01C138                     __end_of_mode_lamp_bright:
 23173                           	opt callstack 0
 23174                           
 23175 ;; *************** function _PWM8_LoadDutyValue *****************
 23176 ;; Defined at:
 23177 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 23178 ;; Parameters:    Size  Location     Type
 23179 ;;  dutyValue       2  [STACK] unsigned short 
 23180 ;; Auto vars:     Size  Location     Type
 23181 ;;		None
 23182 ;; Return value:  Size  Location     Type
 23183 ;;                  1  [STACK] void 
 23184 ;; Registers used:
 23185 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 23186 ;; Tracked objects:
 23187 ;;		On entry : 0/1
 23188 ;;		On exit  : 0/0
 23189 ;;		Unchanged: 0/0
 23190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23195 ;;Total ram usage:        0 bytes
 23196 ;; Hardware stack levels used:    1
 23197 ;; Hardware stack levels required when called:   15
 23198 ;; This function calls:
 23199 ;;		Nothing
 23200 ;; This function is called by:
 23201 ;;		_mode_lamp_dim
 23202 ;;		_mode_lamp_bright
 23203 ;; This function uses a reentrant model
 23204 ;;
 23205                           
 23206                           	psect	text87
 23207  01B690                     __ptext87:
 23208                           	opt callstack 0
 23209  01B690                     _PWM8_LoadDutyValue:
 23210                           	opt callstack 14
 23211                           
 23212                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 23213                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23214                           
 23215                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23216                           ;incstack = 0
 23217  01B690  0EFE               	movlw	-2
 23218  01B692  006F FF8C  F00B    	movff	plusw1,btemp+10
 23219  01B698  0EFF               	movlw	-1
 23220  01B69A  006F FF8C  F00C    	movff	plusw1,btemp+11
 23221  01B6A0  90D8               	bcf	status,0,c
 23222  01B6A2  320C               	rrcf	(btemp+11)^0,f,c
 23223  01B6A4  320B               	rrcf	(btemp+10)^0,f,c
 23224  01B6A6  90D8               	bcf	status,0,c
 23225  01B6A8  320C               	rrcf	(btemp+11)^0,f,c
 23226  01B6AA  320B               	rrcf	(btemp+10)^0,f,c
 23227  01B6AC  500B               	movf	(btemp+10)^0,w,c
 23228  01B6AE  6E61               	movwf	97,c	;volatile
 23229                           
 23230                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 23231                           ;stkvar	_dutyValue @ sp[(0)+-2]
 23232  01B6B0  0EFE               	movlw	-2
 23233  01B6B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 23234  01B6B8  0E03               	movlw	3
 23235  01B6BA  160C               	andwf	(btemp+11)^0,f,c
 23236  01B6BC  0E06               	movlw	6
 23237  01B6BE  6E01               	movwf	btemp^0,c
 23238  01B6C0                     u9385:
 23239  01B6C0  90D8               	bcf	status,0,c
 23240  01B6C2  360C               	rlcf	(btemp+11)^0,f,c
 23241  01B6C4  2E01               	decfsz	btemp^0,f,c
 23242  01B6C6  D7FC               	goto	u9385
 23243  01B6C8  500C               	movf	(btemp+11)^0,w,c
 23244  01B6CA  6E60               	movwf	96,c	;volatile
 23245                           
 23246                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 23247  01B6CC  52E5               	movf	postdec1,f,c
 23248  01B6CE  52E5               	movf	postdec1,f,c
 23249  01B6D0  0012               	return		;funcret
 23250  01B6D2                     __end_of_PWM8_LoadDutyValue:
 23251                           	opt callstack 0
 23252                           
 23253 ;; *************** function _help_button *****************
 23254 ;; Defined at:
 23255 ;;		line 26 in file "mconfig.c"
 23256 ;; Parameters:    Size  Location     Type
 23257 ;;		None
 23258 ;; Auto vars:     Size  Location     Type
 23259 ;;		None
 23260 ;; Return value:  Size  Location     Type
 23261 ;;                  1  [STACK] _Bool 
 23262 ;; Registers used:
 23263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23264 ;; Tracked objects:
 23265 ;;		On entry : 0/1
 23266 ;;		On exit  : 0/0
 23267 ;;		Unchanged: 0/0
 23268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23273 ;;Total ram usage:        0 bytes
 23274 ;; Hardware stack levels used:    1
 23275 ;; Hardware stack levels required when called:   16
 23276 ;; This function calls:
 23277 ;;		_StartTimer
 23278 ;;		_TimerDone
 23279 ;; This function is called by:
 23280 ;;		_check_help
 23281 ;; This function uses a reentrant model
 23282 ;;
 23283                           
 23284                           	psect	text88
 23285  01B8CC                     __ptext88:
 23286                           	opt callstack 0
 23287  01B8CC                     _help_button:
 23288                           	opt callstack 13
 23289                           
 23290                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 23291                           
 23292                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23293                           ;incstack = 0
 23294  01B8CC  B0CB               	btfsc	203,0,c	;volatile
 23295  01B8CE  D00C               	goto	l1664
 23296                           
 23297                           ;mconfig.c: 29:   V.help = 1;
 23298  01B8D0  0101               	movlb	1	; () banked
 23299  01B8D2  85CB               	bsf	(_V+155)& (0+255),2,b	;volatile
 23300                           
 23301                           ; BSR set to: 1
 23302                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 23303  01B8D4  0E08               	movlw	8
 23304  01B8D6  6EE6               	movwf	postinc1,c
 23305  01B8D8  ECCF  F0DD         	call	_TimerDone	;wreg free
 23306  01B8DC  5001               	movf	btemp^0,w,c
 23307  01B8DE  B4D8               	btfsc	status,2,c
 23308  01B8E0  D003               	goto	l1664
 23309                           
 23310                           ;mconfig.c: 31:    return 1;
 23311  01B8E2  0E01               	movlw	1
 23312  01B8E4  6E01               	movwf	btemp^0,c
 23313  01B8E6  0012               	return	
 23314  01B8E8                     l1664:
 23315                           
 23316                           ;mconfig.c: 34:  if (!V.help)
 23317  01B8E8  0101               	movlb	1	; () banked
 23318  01B8EA  B5CB               	btfsc	(_V+155)& (0+255),2,b	;volatile
 23319  01B8EC  D008               	goto	l10478
 23320                           
 23321                           ; BSR set to: 1
 23322                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 23323  01B8EE  0E2C               	movlw	44
 23324  01B8F0  6EE6               	movwf	postinc1,c
 23325  01B8F2  0E01               	movlw	1
 23326  01B8F4  6EE6               	movwf	postinc1,c
 23327  01B8F6  0E08               	movlw	8
 23328  01B8F8  6EE6               	movwf	postinc1,c
 23329  01B8FA  ECA9  F0DB         	call	_StartTimer	;wreg free
 23330  01B8FE                     l10478:
 23331                           
 23332                           ;mconfig.c: 37:  return 0;
 23333  01B8FE  0E00               	movlw	0
 23334  01B900  6E01               	movwf	btemp^0,c
 23335                           
 23336                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 23337  01B902  0012               	return		;funcret
 23338  01B904                     __end_of_help_button:
 23339                           	opt callstack 0
 23340                           
 23341 ;; *************** function _TimerDone *****************
 23342 ;; Defined at:
 23343 ;;		line 20 in file "timers.c"
 23344 ;; Parameters:    Size  Location     Type
 23345 ;;  timer           1  [STACK] const unsigned char 
 23346 ;; Auto vars:     Size  Location     Type
 23347 ;;		None
 23348 ;; Return value:  Size  Location     Type
 23349 ;;                  1  [STACK] _Bool 
 23350 ;; Registers used:
 23351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 23352 ;; Tracked objects:
 23353 ;;		On entry : 0/1
 23354 ;;		On exit  : 0/0
 23355 ;;		Unchanged: 0/0
 23356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23361 ;;Total ram usage:        0 bytes
 23362 ;; Hardware stack levels used:    1
 23363 ;; Hardware stack levels required when called:   15
 23364 ;; This function calls:
 23365 ;;		Nothing
 23366 ;; This function is called by:
 23367 ;;		_main
 23368 ;;		_WaitMs
 23369 ;;		_help_button
 23370 ;;		_check_help
 23371 ;;		_set_display_info
 23372 ;;		_update_adc_result
 23373 ;;		_esr_check
 23374 ;; This function uses a reentrant model
 23375 ;;
 23376                           
 23377                           	psect	text89
 23378  01BB9E                     __ptext89:
 23379                           	opt callstack 0
 23380  01BB9E                     _TimerDone:
 23381                           	opt callstack 14
 23382                           
 23383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23384                           ;incstack = 0
 23385  01BB9E  0004               	clrwdt		;# 
 23386                           
 23387                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 23388                           ;stkvar	_timer @ sp[(0)+-1]
 23389  01BBA0  0EFF               	movlw	-1
 23390  01BBA2  50E3               	movf	plusw1,w,c
 23391  01BBA4  0D02               	mullw	2
 23392  01BBA6  0E7D               	movlw	low _tickCount
 23393  01BBA8  24F3               	addwf	243,w,c
 23394  01BBAA  6ED9               	movwf	fsr2l,c
 23395  01BBAC  0E02               	movlw	high _tickCount
 23396  01BBAE  20F4               	addwfc	prodh,w,c
 23397  01BBB0  6EDA               	movwf	fsr2h,c
 23398  01BBB2  50DE               	movf	postinc2,w,c
 23399  01BBB4  10DE               	iorwf	postinc2,w,c
 23400  01BBB6  A4D8               	btfss	status,2,c
 23401  01BBB8  D002               	goto	l9766
 23402                           
 23403                           ;timers.c: 24:   return 1;
 23404  01BBBA  0E01               	movlw	1
 23405  01BBBC  D001               	goto	L27
 23406  01BBBE                     l9766:
 23407                           
 23408                           ;timers.c: 26:  return 0;
 23409  01BBBE  0E00               	movlw	0
 23410  01BBC0                     L27:
 23411  01BBC0  6E01               	movwf	btemp^0,c
 23412                           
 23413                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 23414  01BBC2  52E5               	movf	postdec1,f,c
 23415  01BBC4  0012               	return		;funcret
 23416  01BBC6                     __end_of_TimerDone:
 23417                           	opt callstack 0
 23418                           
 23419 ;; *************** function _StartTimer *****************
 23420 ;; Defined at:
 23421 ;;		line 12 in file "timers.c"
 23422 ;; Parameters:    Size  Location     Type
 23423 ;;  timer           1  [STACK] const unsigned char 
 23424 ;;  count           2  [STACK] const unsigned short 
 23425 ;; Auto vars:     Size  Location     Type
 23426 ;;		None
 23427 ;; Return value:  Size  Location     Type
 23428 ;;                  1  [STACK] void 
 23429 ;; Registers used:
 23430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23431 ;; Tracked objects:
 23432 ;;		On entry : 0/0
 23433 ;;		On exit  : 0/0
 23434 ;;		Unchanged: 0/0
 23435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23440 ;;Total ram usage:        0 bytes
 23441 ;; Hardware stack levels used:    1
 23442 ;; Hardware stack levels required when called:   15
 23443 ;; This function calls:
 23444 ;;		Nothing
 23445 ;; This function is called by:
 23446 ;;		_main
 23447 ;;		_WaitMs
 23448 ;;		_help_button
 23449 ;;		_check_help
 23450 ;;		_update_adc_result
 23451 ;;		_calc_bsoc
 23452 ;;		_esr_check
 23453 ;; This function uses a reentrant model
 23454 ;;
 23455                           
 23456                           	psect	text90
 23457  01B752                     __ptext90:
 23458                           	opt callstack 0
 23459  01B752                     _StartTimer:
 23460                           	opt callstack 0
 23461                           
 23462                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 23463                           ;stkvar	_count @ sp[(0)+-3]
 23464                           
 23465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23466                           ;incstack = 0
 23467 ;; hardware stack exceeded
 23468  01B752  0EFD               	movlw	-3
 23469  01B754  006F FF8C  F00B    	movff	plusw1,btemp+10
 23470  01B75A  0EFE               	movlw	-2
 23471  01B75C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23472  01B762  90D8               	bcf	status,0,c
 23473  01B764  340B               	rlcf	(btemp+10)^0,w,c
 23474  01B766  6E09               	movwf	(btemp+8)^0,c
 23475  01B768  340C               	rlcf	(btemp+11)^0,w,c
 23476  01B76A  6E0A               	movwf	(btemp+9)^0,c
 23477                           
 23478                           ;stkvar	_timer @ sp[(0)+-1]
 23479  01B76C  0EFF               	movlw	-1
 23480  01B76E  50E3               	movf	plusw1,w,c
 23481  01B770  0D02               	mullw	2
 23482  01B772  0E7D               	movlw	low _tickCount
 23483  01B774  24F3               	addwf	243,w,c
 23484  01B776  6ED9               	movwf	fsr2l,c
 23485  01B778  0E02               	movlw	high _tickCount
 23486  01B77A  20F4               	addwfc	prodh,w,c
 23487  01B77C  6EDA               	movwf	fsr2h,c
 23488  01B77E  0060  F027  FFDE   	movff	btemp+8,postinc2
 23489  01B784  0060  F02B  FFDD   	movff	btemp+9,postdec2
 23490                           
 23491                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 23492  01B78A  52E5               	movf	postdec1,f,c
 23493  01B78C  52E5               	movf	postdec1,f,c
 23494  01B78E  52E5               	movf	postdec1,f,c
 23495  01B790  0012               	return		;funcret
 23496  01B792                     __end_of_StartTimer:
 23497                           	opt callstack 0
 23498                           
 23499 ;; *************** function _display_info *****************
 23500 ;; Defined at:
 23501 ;;		line 190 in file "mconfig.c"
 23502 ;; Parameters:    Size  Location     Type
 23503 ;;		None
 23504 ;; Auto vars:     Size  Location     Type
 23505 ;;		None
 23506 ;; Return value:  Size  Location     Type
 23507 ;;                  1  [STACK] enum E16509
 23508 ;; Registers used:
 23509 ;;		btemp
 23510 ;; Tracked objects:
 23511 ;;		On entry : 0/1
 23512 ;;		On exit  : 0/0
 23513 ;;		Unchanged: 0/0
 23514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23519 ;;Total ram usage:        0 bytes
 23520 ;; Hardware stack levels used:    1
 23521 ;; Hardware stack levels required when called:   15
 23522 ;; This function calls:
 23523 ;;		Nothing
 23524 ;; This function is called by:
 23525 ;;		_check_help
 23526 ;; This function uses a reentrant model
 23527 ;;
 23528                           
 23529                           	psect	text91
 23530  01C1AE                     __ptext91:
 23531                           	opt callstack 0
 23532  01C1AE                     _display_info:
 23533                           	opt callstack 14
 23534                           
 23535                           ;mconfig.c: 192:  return V.response.info;
 23536                           
 23537                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23538                           ;incstack = 0
 23539  01C1AE  0060  F750  F001   	movff	_V+164,btemp	;volatile
 23540                           
 23541                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23542  01C1B4  0012               	return		;funcret
 23543  01C1B6                     __end_of_display_info:
 23544                           	opt callstack 0
 23545                           
 23546 ;; *************** function _display_help *****************
 23547 ;; Defined at:
 23548 ;;		line 195 in file "mconfig.c"
 23549 ;; Parameters:    Size  Location     Type
 23550 ;;		None
 23551 ;; Auto vars:     Size  Location     Type
 23552 ;;		None
 23553 ;; Return value:  Size  Location     Type
 23554 ;;                  1  [STACK] enum E16509
 23555 ;; Registers used:
 23556 ;;		btemp
 23557 ;; Tracked objects:
 23558 ;;		On entry : 3F/1
 23559 ;;		On exit  : 0/0
 23560 ;;		Unchanged: 0/0
 23561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23566 ;;Total ram usage:        0 bytes
 23567 ;; Hardware stack levels used:    1
 23568 ;; Hardware stack levels required when called:   15
 23569 ;; This function calls:
 23570 ;;		Nothing
 23571 ;; This function is called by:
 23572 ;;		_check_help
 23573 ;; This function uses a reentrant model
 23574 ;;
 23575                           
 23576                           	psect	text92
 23577  01C1B6                     __ptext92:
 23578                           	opt callstack 0
 23579  01C1B6                     _display_help:
 23580                           	opt callstack 14
 23581                           
 23582                           ;mconfig.c: 197:  return V.response.help_temp;
 23583                           
 23584                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23585                           ;incstack = 0
 23586  01C1B6  0060  F754  F001   	movff	_V+165,btemp	;volatile
 23587                           
 23588                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 23589  01C1BC  0012               	return		;funcret
 23590  01C1BE                     __end_of_display_help:
 23591                           	opt callstack 0
 23592                           
 23593 ;; *************** function _check_enter_button *****************
 23594 ;; Defined at:
 23595 ;;		line 42 in file "hid.c"
 23596 ;; Parameters:    Size  Location     Type
 23597 ;;  h               1  [STACK] PTR struct H_data
 23598 ;;		 -> H(7), 
 23599 ;; Auto vars:     Size  Location     Type
 23600 ;;		None
 23601 ;; Return value:  Size  Location     Type
 23602 ;;                  1  [STACK] _Bool 
 23603 ;; Registers used:
 23604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23605 ;; Tracked objects:
 23606 ;;		On entry : 0/0
 23607 ;;		On exit  : 0/0
 23608 ;;		Unchanged: 0/0
 23609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23614 ;;Total ram usage:        0 bytes
 23615 ;; Hardware stack levels used:    1
 23616 ;; Hardware stack levels required when called:   15
 23617 ;; This function calls:
 23618 ;;		Nothing
 23619 ;; This function is called by:
 23620 ;;		_main
 23621 ;; This function uses a reentrant model
 23622 ;;
 23623                           
 23624                           	psect	text93
 23625  01B792                     __ptext93:
 23626                           	opt callstack 0
 23627  01B792                     _check_enter_button:
 23628                           	opt callstack 15
 23629                           
 23630                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23631                           ;stkvar	_h @ sp[(0)+-1]
 23632                           
 23633                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23634                           ;incstack = 0
 23635  01B792  0EFF               	movlw	-1
 23636  01B794  50E3               	movf	plusw1,w,c
 23637  01B796  6ED9               	movwf	fsr2l,c
 23638  01B798  6ADA               	clrf	fsr2h,c
 23639  01B79A  0E04               	movlw	4
 23640  01B79C  26D9               	addwf	fsr2l,f,c
 23641  01B79E  50DF               	movf	indf2,w,c
 23642  01B7A0  A4D8               	btfss	status,2,c
 23643  01B7A2  D013               	goto	l11116
 23644                           
 23645                           ;stkvar	_h @ sp[(0)+-1]
 23646  01B7A4  0EFF               	movlw	-1
 23647  01B7A6  50E3               	movf	plusw1,w,c
 23648  01B7A8  6ED9               	movwf	fsr2l,c
 23649  01B7AA  6ADA               	clrf	fsr2h,c
 23650  01B7AC  0E05               	movlw	5
 23651  01B7AE  26D9               	addwf	fsr2l,f,c
 23652  01B7B0  50DF               	movf	indf2,w,c
 23653  01B7B2  A4D8               	btfss	status,2,c
 23654  01B7B4  D00A               	goto	l11116
 23655                           
 23656                           ;hid.c: 45:   h->wait_enter = 1;
 23657                           ;stkvar	_h @ sp[(0)+-1]
 23658  01B7B6  0EFF               	movlw	-1
 23659  01B7B8  50E3               	movf	plusw1,w,c
 23660  01B7BA  6ED9               	movwf	fsr2l,c
 23661  01B7BC  6ADA               	clrf	fsr2h,c
 23662  01B7BE  0E04               	movlw	4
 23663  01B7C0  26D9               	addwf	fsr2l,f,c
 23664  01B7C2  0E01               	movlw	1
 23665  01B7C4  6EDF               	movwf	indf2,c
 23666                           
 23667                           ;hid.c: 46:   return 1;
 23668  01B7C6  0E01               	movlw	1
 23669  01B7C8  D001               	goto	L28
 23670  01B7CA                     l11116:
 23671                           
 23672                           ;hid.c: 48:  return 0;
 23673  01B7CA  0E00               	movlw	0
 23674  01B7CC                     L28:
 23675  01B7CC  6E01               	movwf	btemp^0,c
 23676                           
 23677                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23678  01B7CE  52E5               	movf	postdec1,f,c
 23679  01B7D0  0012               	return		;funcret
 23680  01B7D2                     __end_of_check_enter_button:
 23681                           	opt callstack 0
 23682                           
 23683 ;; *************** function _calc_ror_data *****************
 23684 ;; Defined at:
 23685 ;;		line 102 in file "mbmc.c"
 23686 ;; Parameters:    Size  Location     Type
 23687 ;;		None
 23688 ;; Auto vars:     Size  Location     Type
 23689 ;;		None
 23690 ;; Return value:  Size  Location     Type
 23691 ;;                  1  [STACK] void 
 23692 ;; Registers used:
 23693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23694 ;; Tracked objects:
 23695 ;;		On entry : 0/39
 23696 ;;		On exit  : 0/0
 23697 ;;		Unchanged: 0/0
 23698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23703 ;;Total ram usage:        0 bytes
 23704 ;; Hardware stack levels used:    1
 23705 ;; Hardware stack levels required when called:   18
 23706 ;; This function calls:
 23707 ;;		___flge
 23708 ;;		___flsub
 23709 ;;		_conv_raw_result
 23710 ;;		_fabsf
 23711 ;; This function is called by:
 23712 ;;		_main
 23713 ;; This function uses a reentrant model
 23714 ;;
 23715                           
 23716                           	psect	text94
 23717  018B48                     __ptext94:
 23718                           	opt callstack 0
 23719  018B48                     _calc_ror_data:
 23720                           	opt callstack 12
 23721                           
 23722                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23723                           
 23724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23725                           ;incstack = 0
 23726  018B48  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 23727  018B4E  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23728  018B54  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23729  018B5A  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23730  018B60  0E00               	movlw	0
 23731  018B62  6EE6               	movwf	postinc1,c
 23732  018B64  0E00               	movlw	0
 23733  018B66  6EE6               	movwf	postinc1,c
 23734  018B68  EC5D  F0A9         	call	_conv_raw_result	;wreg free
 23735  018B6C  0060  F007  FFE6   	movff	btemp,postinc1
 23736  018B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23737  018B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23738  018B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 23739  018B84  EC03  F0DB         	call	___flsub	;wreg free
 23740  018B88  0060  F007  FFE6   	movff	btemp,postinc1
 23741  018B8E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23742  018B94  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23743  018B9A  0060  F013  FFE6   	movff	btemp+3,postinc1
 23744  018BA0  EC5E  F0D3         	call	_fabsf	;wreg free
 23745  018BA4  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 23746  018BAA  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 23747  018BB0  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 23748  018BB6  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 23749                           
 23750                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 23751  018BBC  0E00               	movlw	0
 23752  018BBE  6EE6               	movwf	postinc1,c
 23753  018BC0  0E00               	movlw	0
 23754  018BC2  6EE6               	movwf	postinc1,c
 23755  018BC4  EC5D  F0A9         	call	_conv_raw_result	;wreg free
 23756  018BC8  0060  F004  F086   	movff	btemp,calc_ror_data@bcror
 23757  018BCE  0060  F008  F087   	movff	btemp+1,calc_ror_data@bcror+1
 23758  018BD4  0060  F00C  F088   	movff	btemp+2,calc_ror_data@bcror+2
 23759  018BDA  0060  F010  F089   	movff	btemp+3,calc_ror_data@bcror+3
 23760                           
 23761                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23762  018BE0  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23763  018BE6  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23764  018BEC  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23765  018BF2  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23766  018BF8  0E00               	movlw	0
 23767  018BFA  6EE6               	movwf	postinc1,c
 23768  018BFC  0E04               	movlw	4
 23769  018BFE  6EE6               	movwf	postinc1,c
 23770  018C00  EC5D  F0A9         	call	_conv_raw_result	;wreg free
 23771  018C04  0060  F007  FFE6   	movff	btemp,postinc1
 23772  018C0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23773  018C10  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23774  018C16  0060  F013  FFE6   	movff	btemp+3,postinc1
 23775  018C1C  EC03  F0DB         	call	___flsub	;wreg free
 23776  018C20  0060  F007  FFE6   	movff	btemp,postinc1
 23777  018C26  0060  F00B  FFE6   	movff	btemp+1,postinc1
 23778  018C2C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 23779  018C32  0060  F013  FFE6   	movff	btemp+3,postinc1
 23780  018C38  EC5E  F0D3         	call	_fabsf	;wreg free
 23781  018C3C  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 23782  018C42  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 23783  018C48  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 23784  018C4E  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 23785                           
 23786                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 23787  018C54  0EE7               	movlw	231
 23788  018C56  6EE6               	movwf	postinc1,c
 23789  018C58  0E1D               	movlw	29
 23790  018C5A  6EE6               	movwf	postinc1,c
 23791  018C5C  0EA7               	movlw	167
 23792  018C5E  6EE6               	movwf	postinc1,c
 23793  018C60  0E3B               	movlw	59
 23794  018C62  6EE6               	movwf	postinc1,c
 23795  018C64  EE21  F36B         	lfsr	2,_C+108	;volatile
 23796  018C68  006F FF7B FFE6     	movff	postinc2,postinc1
 23797  018C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 23798  018C74  006F FF7B FFE6     	movff	postinc2,postinc1
 23799  018C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 23800  018C80  ECE0  F0C7         	call	___flge	;wreg free
 23801  018C84  B001               	btfsc	btemp& (0+255),0,c
 23802  018C86  D010               	goto	l10906
 23803                           
 23804                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 23805  018C88  0EB0               	movlw	176
 23806  018C8A  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 23807  018C90  0E03               	movlw	3
 23808  018C92  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 23809  018C98  0E67               	movlw	103
 23810  018C9A  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 23811  018CA0  0E3C               	movlw	60
 23812  018CA2  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 23813  018CA8                     l10906:
 23814                           
 23815                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 23816  018CA8  0E00               	movlw	0
 23817  018CAA  6EE6               	movwf	postinc1,c
 23818  018CAC  0E04               	movlw	4
 23819  018CAE  6EE6               	movwf	postinc1,c
 23820  018CB0  EC5D  F0A9         	call	_conv_raw_result	;wreg free
 23821  018CB4  0060  F004  F08A   	movff	btemp,calc_ror_data@bvror
 23822  018CBA  0060  F008  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 23823  018CC0  0060  F00C  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 23824  018CC6  0060  F010  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 23825                           
 23826                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23827  018CCC  0012               	return		;funcret
 23828  018CCE                     __end_of_calc_ror_data:
 23829                           	opt callstack 0
 23830                           
 23831 ;; *************** function _fabsf *****************
 23832 ;; Defined at:
 23833 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23834 ;; Parameters:    Size  Location     Type
 23835 ;;  x               4  [STACK] float 
 23836 ;; Auto vars:     Size  Location     Type
 23837 ;;  u               4  [STACK] struct .
 23838 ;; Return value:  Size  Location     Type
 23839 ;;                  4  [STACK] float 
 23840 ;; Registers used:
 23841 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23842 ;; Tracked objects:
 23843 ;;		On entry : 0/0
 23844 ;;		On exit  : 0/0
 23845 ;;		Unchanged: 0/0
 23846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23851 ;;Total ram usage:        0 bytes
 23852 ;; Hardware stack levels used:    1
 23853 ;; Hardware stack levels required when called:   15
 23854 ;; This function calls:
 23855 ;;		Nothing
 23856 ;; This function is called by:
 23857 ;;		_main
 23858 ;;		_calc_ror_data
 23859 ;;		_calc_bsoc
 23860 ;;		_esr_check
 23861 ;; This function uses a reentrant model
 23862 ;;
 23863                           
 23864                           	psect	text95
 23865  01A6BC                     __ptext95:
 23866                           	opt callstack 0
 23867  01A6BC                     _fabsf:
 23868                           	opt callstack 0
 23869                           
 23870                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23871  01A6BC  52E6               	movf	postinc1,f,c
 23872  01A6BE  52E6               	movf	postinc1,f,c
 23873  01A6C0  52E6               	movf	postinc1,f,c
 23874  01A6C2  52E6               	movf	postinc1,f,c
 23875                           
 23876                           ;incstack = 0
 23877 ;; hardware stack exceeded
 23878  01A6C4  0060  F1F8  F009   	movff	fabsf@F463,btemp+8
 23879  01A6CA  0060  F1FC  F00A   	movff	fabsf@F463+1,btemp+9
 23880  01A6D0  0060  F200  F00B   	movff	fabsf@F463+2,btemp+10
 23881  01A6D6  0060  F204  F00C   	movff	fabsf@F463+3,btemp+11
 23882                           
 23883                           ;stkvar	_u @ sp[(-4)+0]
 23884  01A6DC  0EFC               	movlw	-4
 23885  01A6DE  0060  F027  FFE3   	movff	btemp+8,plusw1
 23886  01A6E4  0EFD               	movlw	-3
 23887  01A6E6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23888  01A6EC  0EFE               	movlw	-2
 23889  01A6EE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23890  01A6F4  0EFF               	movlw	-1
 23891  01A6F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 23892                           
 23893                           ;stkvar	_x @ sp[(-4)+-4]
 23894  01A6FC  0EF8               	movlw	-8
 23895  01A6FE  006F FF8C  F009    	movff	plusw1,btemp+8
 23896  01A704  0EF9               	movlw	-7
 23897  01A706  006F FF8C  F00A    	movff	plusw1,btemp+9
 23898  01A70C  0EFA               	movlw	-6
 23899  01A70E  006F FF8C  F00B    	movff	plusw1,btemp+10
 23900  01A714  0EFB               	movlw	-5
 23901  01A716  006F FF8C  F00C    	movff	plusw1,btemp+11
 23902                           
 23903                           ;stkvar	_u @ sp[(-4)+0]
 23904  01A71C  0EFC               	movlw	-4
 23905  01A71E  0060  F027  FFE3   	movff	btemp+8,plusw1
 23906  01A724  0EFD               	movlw	-3
 23907  01A726  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23908  01A72C  0EFE               	movlw	-2
 23909  01A72E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23910  01A734  0EFF               	movlw	-1
 23911  01A736  0060  F033  FFE3   	movff	btemp+11,plusw1
 23912                           
 23913                           ;stkvar	_u @ sp[(-4)+0]
 23914  01A73C  0EFF               	movlw	-1
 23915  01A73E  9EE3               	bcf	plusw1,7,c
 23916                           
 23917                           ;stkvar	_u @ sp[(-4)+0]
 23918  01A740  0EFC               	movlw	-4
 23919  01A742  006F FF8C  F001    	movff	plusw1,btemp
 23920  01A748  0EFD               	movlw	-3
 23921  01A74A  006F FF8C  F002    	movff	plusw1,btemp+1
 23922  01A750  0EFE               	movlw	-2
 23923  01A752  006F FF8C  F003    	movff	plusw1,btemp+2
 23924  01A758  0EFF               	movlw	-1
 23925  01A75A  006F FF8C  F004    	movff	plusw1,btemp+3
 23926                           
 23927                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23928  01A760  0EF8               	movlw	248
 23929  01A762  26E1               	addwf	fsr1l,f,c
 23930  01A764  0EFF               	movlw	255
 23931  01A766  22E2               	addwfc	fsr1h,f,c
 23932  01A768  0012               	return		;funcret
 23933  01A76A                     __end_of_fabsf:
 23934                           	opt callstack 0
 23935                           
 23936 ;; *************** function _conv_raw_result *****************
 23937 ;; Defined at:
 23938 ;;		line 98 in file "daq.c"
 23939 ;; Parameters:    Size  Location     Type
 23940 ;;  chan            1  [STACK] const enum E16582
 23941 ;;  to_what         1  [STACK] const enum E16644
 23942 ;; Auto vars:     Size  Location     Type
 23943 ;;		None
 23944 ;; Return value:  Size  Location     Type
 23945 ;;                  4  [STACK] float 
 23946 ;; Registers used:
 23947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23948 ;; Tracked objects:
 23949 ;;		On entry : 0/39
 23950 ;;		On exit  : 0/0
 23951 ;;		Unchanged: 0/0
 23952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23957 ;;Total ram usage:        0 bytes
 23958 ;; Hardware stack levels used:    1
 23959 ;; Hardware stack levels required when called:   17
 23960 ;; This function calls:
 23961 ;;		___fladd
 23962 ;;		___fldiv
 23963 ;;		___flmul
 23964 ;;		___flsub
 23965 ;;		___xxtofl
 23966 ;;		_get_raw_result
 23967 ;;		_nanf
 23968 ;; This function is called by:
 23969 ;;		_main
 23970 ;;		_convert_adc_data
 23971 ;;		_calc_ror_data
 23972 ;;		_check_day_time
 23973 ;;		_init_bsoc
 23974 ;;		_esr_check
 23975 ;; This function uses a reentrant model
 23976 ;;
 23977                           
 23978                           	psect	text96
 23979  0152BA                     __ptext96:
 23980                           	opt callstack 0
 23981  0152BA                     _conv_raw_result:
 23982                           	opt callstack 0
 23983                           
 23984                           ;daq.c: 98: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 99: {;daq.c: 101:  switch (to_what) {
 23985                           
 23986                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23987                           ;incstack = 0
 23988 ;; hardware stack exceeded
 23989  0152BA  D276               	goto	l9748
 23990  0152BC                     l9694:
 23991                           
 23992                           ;daq.c: 103:   if (!(0b0011110001110111 >> chan & 0x1))
 23993                           ;stkvar	_chan @ sp[(0)+-1]
 23994  0152BC  0EFF               	movlw	-1
 23995  0152BE  006F FF8C  F00C    	movff	plusw1,btemp+11
 23996  0152C4  0E77               	movlw	119
 23997  0152C6  6E09               	movwf	(btemp+8)^0,c
 23998  0152C8  0E3C               	movlw	60
 23999  0152CA  6E0A               	movwf	(btemp+9)^0,c
 24000  0152CC  2A0C               	incf	(btemp+11)^0,f,c
 24001  0152CE  D003               	goto	u9104
 24002  0152D0                     u9105:
 24003  0152D0  340A               	rlcf	(btemp+9)^0,w,c
 24004  0152D2  320A               	rrcf	(btemp+9)^0,f,c
 24005  0152D4  3209               	rrcf	(btemp+8)^0,f,c
 24006  0152D6                     u9104:
 24007  0152D6  2E0C               	decfsz	(btemp+11)^0,f,c
 24008  0152D8  D7FB               	goto	u9105
 24009  0152DA  B009               	btfsc	(btemp+8)^0,0,c
 24010  0152DC  D007               	goto	l9700
 24011                           
 24012                           ;daq.c: 104:    return nanf("");
 24013  0152DE  0E99               	movlw	low (STR_64+120)
 24014  0152E0  6EE6               	movwf	postinc1,c
 24015  0152E2  0EFC               	movlw	high (STR_64+120)
 24016  0152E4  6EE6               	movwf	postinc1,c
 24017  0152E6  ECA5  F0D8         	call	_nanf	;wreg free
 24018  0152EA  D26E               	goto	l1783
 24019  0152EC                     l9700:
 24020                           
 24021                           ;daq.c: 106:   if (0b0000000000000011 >> chan & 0x1) {
 24022                           ;stkvar	_chan @ sp[(0)+-1]
 24023  0152EC  0EFF               	movlw	-1
 24024  0152EE  006F FF8C  F00C    	movff	plusw1,btemp+11
 24025  0152F4  0E03               	movlw	3
 24026  0152F6  6E09               	movwf	(btemp+8)^0,c
 24027  0152F8  0E00               	movlw	0
 24028  0152FA  6E0A               	movwf	(btemp+9)^0,c
 24029  0152FC  2A0C               	incf	(btemp+11)^0,f,c
 24030  0152FE  D003               	goto	u9124
 24031  015300                     u9125:
 24032  015300  340A               	rlcf	(btemp+9)^0,w,c
 24033  015302  320A               	rrcf	(btemp+9)^0,f,c
 24034  015304  3209               	rrcf	(btemp+8)^0,f,c
 24035  015306                     u9124:
 24036  015306  2E0C               	decfsz	(btemp+11)^0,f,c
 24037  015308  D7FB               	goto	u9125
 24038  01530A  A009               	btfss	(btemp+8)^0,0,c
 24039  01530C  D11F               	goto	l9714
 24040                           
 24041                           ;daq.c: 107:    if (0b0000000000000001 >> chan & 0x1) {
 24042                           ;stkvar	_chan @ sp[(0)+-1]
 24043  01530E  0EFF               	movlw	-1
 24044  015310  006F FF8C  F00C    	movff	plusw1,btemp+11
 24045  015316  0E01               	movlw	1
 24046  015318  6E09               	movwf	(btemp+8)^0,c
 24047  01531A  0E00               	movlw	0
 24048  01531C  6E0A               	movwf	(btemp+9)^0,c
 24049  01531E  2A0C               	incf	(btemp+11)^0,f,c
 24050  015320  D003               	goto	u9144
 24051  015322                     u9145:
 24052  015322  340A               	rlcf	(btemp+9)^0,w,c
 24053  015324  320A               	rrcf	(btemp+9)^0,f,c
 24054  015326  3209               	rrcf	(btemp+8)^0,f,c
 24055  015328                     u9144:
 24056  015328  2E0C               	decfsz	(btemp+11)^0,f,c
 24057  01532A  D7FB               	goto	u9145
 24058  01532C  A009               	btfss	(btemp+8)^0,0,c
 24059  01532E  D087               	goto	l9710
 24060                           
 24061                           ;daq.c: 108:     return R.n_zero[0]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[0]) * 0.0850000;
 24062  015330  0060  F493  FFE6   	movff	_R+36,postinc1
 24063  015336  0060  F497  FFE6   	movff	_R+37,postinc1
 24064  01533C  0060  F49B  FFE6   	movff	_R+38,postinc1
 24065  015342  0060  F49F  FFE6   	movff	_R+39,postinc1
 24066  015348  0E7B               	movlw	123
 24067  01534A  6EE6               	movwf	postinc1,c
 24068  01534C  0E14               	movlw	20
 24069  01534E  6EE6               	movwf	postinc1,c
 24070  015350  0EAE               	movlw	174
 24071  015352  6EE6               	movwf	postinc1,c
 24072  015354  0E3D               	movlw	61
 24073  015356  6EE6               	movwf	postinc1,c
 24074  015358  0060  F480  F009   	movff	_R+32,btemp+8	;volatile
 24075  01535E  0060  F484  F00A   	movff	_R+33,btemp+9	;volatile
 24076  015364  0E00               	movlw	0
 24077  015366  BE0A               	btfsc	(btemp+9)^0,7,c
 24078  015368  0EFF               	movlw	255
 24079  01536A  6E0B               	movwf	(btemp+10)^0,c
 24080  01536C  6E0C               	movwf	(btemp+11)^0,c
 24081  01536E  0060  F027  FFE6   	movff	btemp+8,postinc1
 24082  015374  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24083  01537A  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24084  015380  0060  F033  FFE6   	movff	btemp+11,postinc1
 24085  015386  0E01               	movlw	1
 24086  015388  6EE6               	movwf	postinc1,c
 24087  01538A  EC29  F0C2         	call	___xxtofl	;wreg free
 24088  01538E  0060  F007  FFE6   	movff	btemp,postinc1
 24089  015394  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24090  01539A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24091  0153A0  0060  F013  FFE6   	movff	btemp+3,postinc1
 24092                           
 24093                           ;stkvar	_chan @ sp[(-12)+-1]
 24094  0153A6  0EF3               	movlw	-13
 24095  0153A8  50E3               	movf	plusw1,w,c
 24096  0153AA  6EE6               	movwf	postinc1,c
 24097  0153AC  EC66  F0DF         	call	_get_raw_result	;wreg free
 24098  0153B0  0060  F004  F00B   	movff	btemp,btemp+10
 24099  0153B6  0060  F008  F00C   	movff	btemp+1,btemp+11
 24100  0153BC  500B               	movf	(btemp+10)^0,w,c
 24101  0153BE  6E05               	movwf	(btemp+4)^0,c
 24102  0153C0  500C               	movf	(btemp+11)^0,w,c
 24103  0153C2  6E06               	movwf	(btemp+5)^0,c
 24104  0153C4  6A07               	clrf	(btemp+6)^0,c
 24105  0153C6  6A08               	clrf	(btemp+7)^0,c
 24106  0153C8  0060  F017  FFE6   	movff	btemp+4,postinc1
 24107  0153CE  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24108  0153D4  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24109  0153DA  0060  F023  FFE6   	movff	btemp+7,postinc1
 24110  0153E0  0E00               	movlw	0
 24111  0153E2  6EE6               	movwf	postinc1,c
 24112  0153E4  EC29  F0C2         	call	___xxtofl	;wreg free
 24113  0153E8  0060  F007  FFE6   	movff	btemp,postinc1
 24114  0153EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24115  0153F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24116  0153FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 24117  015400  EC03  F0DB         	call	___flsub	;wreg free
 24118  015404  0060  F007  FFE6   	movff	btemp,postinc1
 24119  01540A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24120  015410  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24121  015416  0060  F013  FFE6   	movff	btemp+3,postinc1
 24122  01541C  ECAD  F09E         	call	___flmul	;wreg free
 24123  015420  0060  F007  FFE6   	movff	btemp,postinc1
 24124  015426  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24125  01542C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24126  015432  0060  F013  FFE6   	movff	btemp+3,postinc1
 24127  015438  ECC2  F0A2         	call	___fladd	;wreg free
 24128  01543C  D1C5               	goto	l1783
 24129  01543E                     l9710:
 24130                           
 24131                           ;daq.c: 110:     return R.n_zero[1]+((float) ((int16_t) get_raw_result(chan)) - R.n_offs
      +                          et[1]) * 0.0350000;
 24132  01543E  0060  F4A3  FFE6   	movff	_R+40,postinc1
 24133  015444  0060  F4A7  FFE6   	movff	_R+41,postinc1
 24134  01544A  0060  F4AB  FFE6   	movff	_R+42,postinc1
 24135  015450  0060  F4AF  FFE6   	movff	_R+43,postinc1
 24136  015456  0E29               	movlw	41
 24137  015458  6EE6               	movwf	postinc1,c
 24138  01545A  0E5C               	movlw	92
 24139  01545C  6EE6               	movwf	postinc1,c
 24140  01545E  0E0F               	movlw	15
 24141  015460  6EE6               	movwf	postinc1,c
 24142  015462  0E3D               	movlw	61
 24143  015464  6EE6               	movwf	postinc1,c
 24144  015466  0060  F488  F009   	movff	_R+34,btemp+8	;volatile
 24145  01546C  0060  F48C  F00A   	movff	_R+35,btemp+9	;volatile
 24146  015472  0E00               	movlw	0
 24147  015474  BE0A               	btfsc	(btemp+9)^0,7,c
 24148  015476  0EFF               	movlw	255
 24149  015478  6E0B               	movwf	(btemp+10)^0,c
 24150  01547A  6E0C               	movwf	(btemp+11)^0,c
 24151  01547C  0060  F027  FFE6   	movff	btemp+8,postinc1
 24152  015482  0060  F02B  FFE6   	movff	btemp+9,postinc1
 24153  015488  0060  F02F  FFE6   	movff	btemp+10,postinc1
 24154  01548E  0060  F033  FFE6   	movff	btemp+11,postinc1
 24155  015494  0E01               	movlw	1
 24156  015496  6EE6               	movwf	postinc1,c
 24157  015498  EC29  F0C2         	call	___xxtofl	;wreg free
 24158  01549C  0060  F007  FFE6   	movff	btemp,postinc1
 24159  0154A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24160  0154A8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24161  0154AE  0060  F013  FFE6   	movff	btemp+3,postinc1
 24162                           
 24163                           ;stkvar	_chan @ sp[(-12)+-1]
 24164  0154B4  0EF3               	movlw	-13
 24165  0154B6  50E3               	movf	plusw1,w,c
 24166  0154B8  6EE6               	movwf	postinc1,c
 24167  0154BA  EC66  F0DF         	call	_get_raw_result	;wreg free
 24168  0154BE  0060  F004  F00B   	movff	btemp,btemp+10
 24169  0154C4  0060  F008  F00C   	movff	btemp+1,btemp+11
 24170  0154CA  500B               	movf	(btemp+10)^0,w,c
 24171  0154CC  6E05               	movwf	(btemp+4)^0,c
 24172  0154CE  500C               	movf	(btemp+11)^0,w,c
 24173  0154D0  6E06               	movwf	(btemp+5)^0,c
 24174  0154D2  6A07               	clrf	(btemp+6)^0,c
 24175  0154D4  6A08               	clrf	(btemp+7)^0,c
 24176  0154D6  0060  F017  FFE6   	movff	btemp+4,postinc1
 24177  0154DC  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24178  0154E2  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24179  0154E8  0060  F023  FFE6   	movff	btemp+7,postinc1
 24180  0154EE  0E00               	movlw	0
 24181  0154F0  6EE6               	movwf	postinc1,c
 24182  0154F2  EC29  F0C2         	call	___xxtofl	;wreg free
 24183  0154F6  0060  F007  FFE6   	movff	btemp,postinc1
 24184  0154FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24185  015502  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24186  015508  0060  F013  FFE6   	movff	btemp+3,postinc1
 24187  01550E  EC03  F0DB         	call	___flsub	;wreg free
 24188  015512  0060  F007  FFE6   	movff	btemp,postinc1
 24189  015518  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24190  01551E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24191  015524  0060  F013  FFE6   	movff	btemp+3,postinc1
 24192  01552A  ECAD  F09E         	call	___flmul	;wreg free
 24193  01552E  0060  F007  FFE6   	movff	btemp,postinc1
 24194  015534  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24195  01553A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24196  015540  0060  F013  FFE6   	movff	btemp+3,postinc1
 24197  015546  ECC2  F0A2         	call	___fladd	;wreg free
 24198  01554A  D13E               	goto	l1783
 24199  01554C                     l9714:
 24200                           
 24201                           ;daq.c: 113:    if (0b0000100000000000 >> chan & 0x1) {
 24202                           ;stkvar	_chan @ sp[(0)+-1]
 24203  01554C  0EFF               	movlw	-1
 24204  01554E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24205  015554  0E00               	movlw	0
 24206  015556  6E09               	movwf	(btemp+8)^0,c
 24207  015558  0E08               	movlw	8
 24208  01555A  6E0A               	movwf	(btemp+9)^0,c
 24209  01555C  2A0C               	incf	(btemp+11)^0,f,c
 24210  01555E  D003               	goto	u9164
 24211  015560                     u9165:
 24212  015560  340A               	rlcf	(btemp+9)^0,w,c
 24213  015562  320A               	rrcf	(btemp+9)^0,f,c
 24214  015564  3209               	rrcf	(btemp+8)^0,f,c
 24215  015566                     u9164:
 24216  015566  2E0C               	decfsz	(btemp+11)^0,f,c
 24217  015568  D7FB               	goto	u9165
 24218  01556A  A009               	btfss	(btemp+8)^0,0,c
 24219  01556C  D008               	goto	l9722
 24220                           
 24221                           ;daq.c: 114:     return 25.0;
 24222  01556E  0E00               	movlw	0
 24223  015570  6E01               	movwf	btemp^0,c
 24224  015572  0E00               	movlw	0
 24225  015574  6E02               	movwf	(btemp+1)^0,c
 24226  015576  0EC8               	movlw	200
 24227  015578  6E03               	movwf	(btemp+2)^0,c
 24228  01557A  0E41               	movlw	65
 24229  01557C  D113               	goto	L29
 24230  01557E                     l9722:
 24231                           
 24232                           ;daq.c: 116:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 24233  01557E  0E00               	movlw	0
 24234  015580  6EE6               	movwf	postinc1,c
 24235  015582  0E00               	movlw	0
 24236  015584  6EE6               	movwf	postinc1,c
 24237  015586  0E7A               	movlw	122
 24238  015588  6EE6               	movwf	postinc1,c
 24239  01558A  0E44               	movlw	68
 24240  01558C  6EE6               	movwf	postinc1,c
 24241  01558E  0E61               	movlw	97
 24242  015590  6EE6               	movwf	postinc1,c
 24243  015592  0E03               	movlw	3
 24244  015594  6EE6               	movwf	postinc1,c
 24245  015596  0E84               	movlw	132
 24246  015598  6EE6               	movwf	postinc1,c
 24247  01559A  0E40               	movlw	64
 24248  01559C  6EE6               	movwf	postinc1,c
 24249                           
 24250                           ;stkvar	_chan @ sp[(-8)+-1]
 24251  01559E  0EF7               	movlw	-9
 24252  0155A0  50E3               	movf	plusw1,w,c
 24253  0155A2  6EE6               	movwf	postinc1,c
 24254  0155A4  EC66  F0DF         	call	_get_raw_result	;wreg free
 24255  0155A8  0060  F004  F00B   	movff	btemp,btemp+10
 24256  0155AE  0060  F008  F00C   	movff	btemp+1,btemp+11
 24257  0155B4  500B               	movf	(btemp+10)^0,w,c
 24258  0155B6  6E05               	movwf	(btemp+4)^0,c
 24259  0155B8  500C               	movf	(btemp+11)^0,w,c
 24260  0155BA  6E06               	movwf	(btemp+5)^0,c
 24261  0155BC  6A07               	clrf	(btemp+6)^0,c
 24262  0155BE  6A08               	clrf	(btemp+7)^0,c
 24263  0155C0  0060  F017  FFE6   	movff	btemp+4,postinc1
 24264  0155C6  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24265  0155CC  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24266  0155D2  0060  F023  FFE6   	movff	btemp+7,postinc1
 24267  0155D8  0E00               	movlw	0
 24268  0155DA  6EE6               	movwf	postinc1,c
 24269  0155DC  EC29  F0C2         	call	___xxtofl	;wreg free
 24270  0155E0  0060  F007  FFE6   	movff	btemp,postinc1
 24271  0155E6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24272  0155EC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24273  0155F2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24274  0155F8  ECAD  F09E         	call	___flmul	;wreg free
 24275  0155FC  0060  F007  FFE6   	movff	btemp,postinc1
 24276  015602  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24277  015608  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24278  01560E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24279  015614  ECA0  F0A6         	call	___fldiv	;wreg free
 24280  015618  D0D7               	goto	l1783
 24281  01561A                     l9726:
 24282                           
 24283                           ;daq.c: 121:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 24284                           ;stkvar	_chan @ sp[(0)+-1]
 24285  01561A  0EFF               	movlw	-1
 24286  01561C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24287  015622  0E03               	movlw	3
 24288  015624  6E09               	movwf	(btemp+8)^0,c
 24289  015626  0E00               	movlw	0
 24290  015628  6E0A               	movwf	(btemp+9)^0,c
 24291  01562A  2A0C               	incf	(btemp+11)^0,f,c
 24292  01562C  D003               	goto	u9184
 24293  01562E                     u9185:
 24294  01562E  340A               	rlcf	(btemp+9)^0,w,c
 24295  015630  320A               	rrcf	(btemp+9)^0,f,c
 24296  015632  3209               	rrcf	(btemp+8)^0,f,c
 24297  015634                     u9184:
 24298  015634  2E0C               	decfsz	(btemp+11)^0,f,c
 24299  015636  D7FB               	goto	u9185
 24300  015638  B009               	btfsc	(btemp+8)^0,0,c
 24301  01563A  D011               	goto	u9210
 24302                           
 24303                           ;stkvar	_chan @ sp[(0)+-1]
 24304  01563C  0EFF               	movlw	-1
 24305  01563E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24306  015644  0E00               	movlw	0
 24307  015646  6E09               	movwf	(btemp+8)^0,c
 24308  015648  0E08               	movlw	8
 24309  01564A  6E0A               	movwf	(btemp+9)^0,c
 24310  01564C  2A0C               	incf	(btemp+11)^0,f,c
 24311  01564E  D003               	goto	u9204
 24312  015650                     u9205:
 24313  015650  340A               	rlcf	(btemp+9)^0,w,c
 24314  015652  320A               	rrcf	(btemp+9)^0,f,c
 24315  015654  3209               	rrcf	(btemp+8)^0,f,c
 24316  015656                     u9204:
 24317  015656  2E0C               	decfsz	(btemp+11)^0,f,c
 24318  015658  D7FB               	goto	u9205
 24319  01565A  A009               	btfss	(btemp+8)^0,0,c
 24320  01565C  D04E               	goto	l9734
 24321  01565E                     u9210:
 24322                           
 24323                           ;daq.c: 122:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 24324  01565E  0E00               	movlw	0
 24325  015660  6EE6               	movwf	postinc1,c
 24326  015662  0E00               	movlw	0
 24327  015664  6EE6               	movwf	postinc1,c
 24328  015666  0E7A               	movlw	122
 24329  015668  6EE6               	movwf	postinc1,c
 24330  01566A  0E44               	movlw	68
 24331  01566C  6EE6               	movwf	postinc1,c
 24332  01566E  0E00               	movlw	0
 24333  015670  6EE6               	movwf	postinc1,c
 24334  015672  0E00               	movlw	0
 24335  015674  6EE6               	movwf	postinc1,c
 24336  015676  0E20               	movlw	32
 24337  015678  6EE6               	movwf	postinc1,c
 24338  01567A  0E3F               	movlw	63
 24339  01567C  6EE6               	movwf	postinc1,c
 24340                           
 24341                           ;stkvar	_chan @ sp[(-8)+-1]
 24342  01567E  0EF7               	movlw	-9
 24343  015680  50E3               	movf	plusw1,w,c
 24344  015682  6EE6               	movwf	postinc1,c
 24345  015684  EC66  F0DF         	call	_get_raw_result	;wreg free
 24346  015688  0060  F004  F00B   	movff	btemp,btemp+10
 24347  01568E  0060  F008  F00C   	movff	btemp+1,btemp+11
 24348  015694  500B               	movf	(btemp+10)^0,w,c
 24349  015696  6E05               	movwf	(btemp+4)^0,c
 24350  015698  500C               	movf	(btemp+11)^0,w,c
 24351  01569A  6E06               	movwf	(btemp+5)^0,c
 24352  01569C  6A07               	clrf	(btemp+6)^0,c
 24353  01569E  6A08               	clrf	(btemp+7)^0,c
 24354  0156A0  0060  F017  FFE6   	movff	btemp+4,postinc1
 24355  0156A6  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24356  0156AC  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24357  0156B2  0060  F023  FFE6   	movff	btemp+7,postinc1
 24358  0156B8  0E00               	movlw	0
 24359  0156BA  6EE6               	movwf	postinc1,c
 24360  0156BC  EC29  F0C2         	call	___xxtofl	;wreg free
 24361  0156C0  0060  F007  FFE6   	movff	btemp,postinc1
 24362  0156C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24363  0156CC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24364  0156D2  0060  F013  FFE6   	movff	btemp+3,postinc1
 24365  0156D8  ECAD  F09E         	call	___flmul	;wreg free
 24366  0156DC  0060  F007  FFE6   	movff	btemp,postinc1
 24367  0156E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24368  0156E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24369  0156EE  0060  F013  FFE6   	movff	btemp+3,postinc1
 24370  0156F4  ECA0  F0A6         	call	___fldiv	;wreg free
 24371  0156F8  D067               	goto	l1783
 24372  0156FA                     l9734:
 24373                           
 24374                           ;daq.c: 124:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 24375  0156FA  0E00               	movlw	0
 24376  0156FC  6EE6               	movwf	postinc1,c
 24377  0156FE  0E00               	movlw	0
 24378  015700  6EE6               	movwf	postinc1,c
 24379  015702  0E7A               	movlw	122
 24380  015704  6EE6               	movwf	postinc1,c
 24381  015706  0E44               	movlw	68
 24382  015708  6EE6               	movwf	postinc1,c
 24383  01570A  0E61               	movlw	97
 24384  01570C  6EE6               	movwf	postinc1,c
 24385  01570E  0E03               	movlw	3
 24386  015710  6EE6               	movwf	postinc1,c
 24387  015712  0E84               	movlw	132
 24388  015714  6EE6               	movwf	postinc1,c
 24389  015716  0E40               	movlw	64
 24390  015718  6EE6               	movwf	postinc1,c
 24391                           
 24392                           ;stkvar	_chan @ sp[(-8)+-1]
 24393  01571A  0EF7               	movlw	-9
 24394  01571C  50E3               	movf	plusw1,w,c
 24395  01571E  6EE6               	movwf	postinc1,c
 24396  015720  EC66  F0DF         	call	_get_raw_result	;wreg free
 24397  015724  0060  F004  F00B   	movff	btemp,btemp+10
 24398  01572A  0060  F008  F00C   	movff	btemp+1,btemp+11
 24399  015730  500B               	movf	(btemp+10)^0,w,c
 24400  015732  6E05               	movwf	(btemp+4)^0,c
 24401  015734  500C               	movf	(btemp+11)^0,w,c
 24402  015736  6E06               	movwf	(btemp+5)^0,c
 24403  015738  6A07               	clrf	(btemp+6)^0,c
 24404  01573A  6A08               	clrf	(btemp+7)^0,c
 24405  01573C  0060  F017  FFE6   	movff	btemp+4,postinc1
 24406  015742  0060  F01B  FFE6   	movff	btemp+5,postinc1
 24407  015748  0060  F01F  FFE6   	movff	btemp+6,postinc1
 24408  01574E  0060  F023  FFE6   	movff	btemp+7,postinc1
 24409  015754  0E00               	movlw	0
 24410  015756  6EE6               	movwf	postinc1,c
 24411  015758  EC29  F0C2         	call	___xxtofl	;wreg free
 24412  01575C  0060  F007  FFE6   	movff	btemp,postinc1
 24413  015762  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24414  015768  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24415  01576E  0060  F013  FFE6   	movff	btemp+3,postinc1
 24416  015774  ECAD  F09E         	call	___flmul	;wreg free
 24417  015778  0060  F007  FFE6   	movff	btemp,postinc1
 24418  01577E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 24419  015784  0060  F00F  FFE6   	movff	btemp+2,postinc1
 24420  01578A  0060  F013  FFE6   	movff	btemp+3,postinc1
 24421  015790  ECA0  F0A6         	call	___fldiv	;wreg free
 24422  015794  D019               	goto	l1783
 24423  015796                     l9740:
 24424                           
 24425                           ;daq.c: 127:   return 0.0;
 24426  015796  0E00               	movlw	0
 24427  015798  6E01               	movwf	btemp^0,c
 24428  01579A  0E00               	movlw	0
 24429  01579C  6E02               	movwf	(btemp+1)^0,c
 24430  01579E  0E00               	movlw	0
 24431  0157A0  6E03               	movwf	(btemp+2)^0,c
 24432  0157A2  0E00               	movlw	0
 24433  0157A4                     L29:
 24434  0157A4  6E04               	movwf	(btemp+3)^0,c
 24435  0157A6  D010               	goto	l1783
 24436  0157A8                     l9748:
 24437                           
 24438                           ;stkvar	_to_what @ sp[(0)+-2]
 24439  0157A8  0EFE               	movlw	-2
 24440  0157AA  50E3               	movf	plusw1,w,c
 24441  0157AC  6E0B               	movwf	(btemp+10)^0,c
 24442  0157AE  6A0C               	clrf	(btemp+11)^0,c
 24443                           
 24444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24445                           ; Switch size 1, requested type "simple"
 24446                           ; Number of cases is 1, Range of values is 0 to 0
 24447                           ; switch strategies available:
 24448                           ; Name         Instructions Cycles
 24449                           ; simple_byte            4     3 (average)
 24450                           ;	Chosen strategy is simple_byte
 24451  0157B0  500C               	movf	(btemp+11)^0,w,c
 24452  0157B2  0A00               	xorlw	0	; case 0
 24453  0157B4  A4D8               	btfss	status,2,c
 24454  0157B6  D7EF               	goto	l9740
 24455                           
 24456                           ; Switch size 1, requested type "simple"
 24457                           ; Number of cases is 2, Range of values is 0 to 1
 24458                           ; switch strategies available:
 24459                           ; Name         Instructions Cycles
 24460                           ; simple_byte            7     4 (average)
 24461                           ;	Chosen strategy is simple_byte
 24462  0157B8  500B               	movf	(btemp+10)^0,w,c
 24463  0157BA  0A00               	xorlw	0	; case 0
 24464  0157BC  B4D8               	btfsc	status,2,c
 24465  0157BE  D57E               	goto	l9694
 24466  0157C0  0A01               	xorlw	1	; case 1
 24467  0157C2  B4D8               	btfsc	status,2,c
 24468  0157C4  D72A               	goto	l9726
 24469  0157C6  D7E7               	goto	l9740
 24470  0157C8                     l1783:
 24471                           
 24472                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24473  0157C8  52E5               	movf	postdec1,f,c
 24474  0157CA  52E5               	movf	postdec1,f,c
 24475  0157CC  0012               	return		;funcret
 24476  0157CE                     __end_of_conv_raw_result:
 24477                           	opt callstack 0
 24478                           
 24479 ;; *************** function _nanf *****************
 24480 ;; Defined at:
 24481 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 24482 ;; Parameters:    Size  Location     Type
 24483 ;;  s               2  [STACK] PTR const unsigned char 
 24484 ;;		 -> STR_101(1), STR_63(1), 
 24485 ;; Auto vars:     Size  Location     Type
 24486 ;;  u               4  [STACK] struct .
 24487 ;; Return value:  Size  Location     Type
 24488 ;;                  4  [STACK] float 
 24489 ;; Registers used:
 24490 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 24491 ;; Tracked objects:
 24492 ;;		On entry : 0/39
 24493 ;;		On exit  : 0/0
 24494 ;;		Unchanged: 0/0
 24495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24500 ;;Total ram usage:        0 bytes
 24501 ;; Hardware stack levels used:    1
 24502 ;; Hardware stack levels required when called:   15
 24503 ;; This function calls:
 24504 ;;		Nothing
 24505 ;; This function is called by:
 24506 ;;		_conv_raw_result
 24507 ;; This function uses a reentrant model
 24508 ;;
 24509                           
 24510                           	psect	text97
 24511  01B14A                     __ptext97:
 24512                           	opt callstack 0
 24513  01B14A                     _nanf:
 24514                           	opt callstack 0
 24515                           
 24516                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24517  01B14A  52E6               	movf	postinc1,f,c
 24518  01B14C  52E6               	movf	postinc1,f,c
 24519  01B14E  52E6               	movf	postinc1,f,c
 24520  01B150  52E6               	movf	postinc1,f,c
 24521                           
 24522                           ;incstack = 0
 24523 ;; hardware stack exceeded
 24524  01B152  0EFF               	movlw	255
 24525  01B154  6E09               	movwf	(btemp+8)^0,c
 24526  01B156  0EFF               	movlw	255
 24527  01B158  6E0A               	movwf	(btemp+9)^0,c
 24528  01B15A  0EFF               	movlw	255
 24529  01B15C  6E0B               	movwf	(btemp+10)^0,c
 24530  01B15E  0E7F               	movlw	127
 24531  01B160  6E0C               	movwf	(btemp+11)^0,c
 24532                           
 24533                           ;stkvar	_u @ sp[(-4)+0]
 24534  01B162  0EFC               	movlw	-4
 24535  01B164  0060  F027  FFE3   	movff	btemp+8,plusw1
 24536  01B16A  0EFD               	movlw	-3
 24537  01B16C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24538  01B172  0EFE               	movlw	-2
 24539  01B174  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24540  01B17A  0EFF               	movlw	-1
 24541  01B17C  0060  F033  FFE3   	movff	btemp+11,plusw1
 24542                           
 24543                           ;stkvar	_u @ sp[(-4)+0]
 24544  01B182  0EFC               	movlw	-4
 24545  01B184  006F FF8C  F001    	movff	plusw1,btemp
 24546  01B18A  0EFD               	movlw	-3
 24547  01B18C  006F FF8C  F002    	movff	plusw1,btemp+1
 24548  01B192  0EFE               	movlw	-2
 24549  01B194  006F FF8C  F003    	movff	plusw1,btemp+2
 24550  01B19A  0EFF               	movlw	-1
 24551  01B19C  006F FF8C  F004    	movff	plusw1,btemp+3
 24552                           
 24553                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 24554  01B1A2  0EFA               	movlw	250
 24555  01B1A4  26E1               	addwf	fsr1l,f,c
 24556  01B1A6  0EFF               	movlw	255
 24557  01B1A8  22E2               	addwfc	fsr1h,f,c
 24558  01B1AA  0012               	return		;funcret
 24559  01B1AC                     __end_of_nanf:
 24560                           	opt callstack 0
 24561                           
 24562 ;; *************** function _get_raw_result *****************
 24563 ;; Defined at:
 24564 ;;		line 90 in file "daq.c"
 24565 ;; Parameters:    Size  Location     Type
 24566 ;;  index           1  [STACK] const enum E16582
 24567 ;; Auto vars:     Size  Location     Type
 24568 ;;		None
 24569 ;; Return value:  Size  Location     Type
 24570 ;;                  2  [STACK] unsigned short 
 24571 ;; Registers used:
 24572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 24573 ;; Tracked objects:
 24574 ;;		On entry : 0/1
 24575 ;;		On exit  : 0/0
 24576 ;;		Unchanged: 0/0
 24577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24582 ;;Total ram usage:        0 bytes
 24583 ;; Hardware stack levels used:    1
 24584 ;; Hardware stack levels required when called:   15
 24585 ;; This function calls:
 24586 ;;		Nothing
 24587 ;; This function is called by:
 24588 ;;		_main
 24589 ;;		_conv_raw_result
 24590 ;; This function uses a reentrant model
 24591 ;;
 24592                           
 24593                           	psect	text98
 24594  01BECC                     __ptext98:
 24595                           	opt callstack 0
 24596  01BECC                     _get_raw_result:
 24597                           	opt callstack 0
 24598                           
 24599                           ;daq.c: 90: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 91: {;daq.c: 
      +                          92:  return R.raw_adc[index];
 24600                           ;stkvar	_index @ sp[(0)+-1]
 24601                           
 24602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24603                           ;incstack = 0
 24604 ;; hardware stack exceeded
 24605  01BECC  0EFF               	movlw	-1
 24606  01BECE  50E3               	movf	plusw1,w,c
 24607  01BED0  0D02               	mullw	2
 24608  01BED2  0E00               	movlw	low _R
 24609  01BED4  24F3               	addwf	243,w,c
 24610  01BED6  6ED9               	movwf	fsr2l,c
 24611  01BED8  0E01               	movlw	high _R
 24612  01BEDA  20F4               	addwfc	prodh,w,c
 24613  01BEDC  6EDA               	movwf	fsr2h,c
 24614  01BEDE  006F FF78  F001    	movff	postinc2,btemp
 24615  01BEE4  006F FF74  F002    	movff	postdec2,btemp+1
 24616                           
 24617                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 24618  01BEEA  52E5               	movf	postdec1,f,c
 24619  01BEEC  0012               	return		;funcret
 24620  01BEEE                     __end_of_get_raw_result:
 24621                           	opt callstack 0
 24622                           
 24623 ;; *************** function ___xxtofl *****************
 24624 ;; Defined at:
 24625 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 24626 ;; Parameters:    Size  Location     Type
 24627 ;;  sign            1  [STACK] unsigned char 
 24628 ;;  val             4  [STACK] long 
 24629 ;; Auto vars:     Size  Location     Type
 24630 ;;  arg             4  [STACK] unsigned long 
 24631 ;;  exp             1  [STACK] unsigned char 
 24632 ;; Return value:  Size  Location     Type
 24633 ;;                  4  [STACK] unsigned char 
 24634 ;; Registers used:
 24635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 24636 ;; Tracked objects:
 24637 ;;		On entry : 0/1
 24638 ;;		On exit  : 0/0
 24639 ;;		Unchanged: 0/0
 24640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24645 ;;Total ram usage:        0 bytes
 24646 ;; Hardware stack levels used:    1
 24647 ;; Hardware stack levels required when called:   15
 24648 ;; This function calls:
 24649 ;;		Nothing
 24650 ;; This function is called by:
 24651 ;;		_conv_raw_result
 24652 ;;		_init_bsoc
 24653 ;;		_Volts_to_SOC
 24654 ;; This function uses a reentrant model
 24655 ;;
 24656                           
 24657                           	psect	text99
 24658  018452                     __ptext99:
 24659                           	opt callstack 0
 24660  018452                     ___xxtofl:
 24661                           	opt callstack 0
 24662                           
 24663                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24664  018452  0E05               	movlw	5
 24665  018454  26E1               	addwf	fsr1l,f,c
 24666  018456  0E00               	movlw	0
 24667  018458  22E2               	addwfc	fsr1h,f,c
 24668                           
 24669                           ;stkvar	_sign @ sp[(-5)+-1]
 24670                           
 24671                           ;incstack = 0
 24672 ;; hardware stack exceeded
 24673  01845A  0EFA               	movlw	-6
 24674  01845C  50E3               	movf	plusw1,w,c
 24675  01845E  B4D8               	btfsc	status,2,c
 24676  018460  D01D               	goto	l9642
 24677                           
 24678                           ;stkvar	_val @ sp[(-5)+-5]
 24679  018462  0EF9               	movlw	-7
 24680  018464  AEE3               	btfss	plusw1,7,c
 24681  018466  D01A               	goto	l9642
 24682                           
 24683                           ;stkvar	_val @ sp[(-5)+-5]
 24684  018468  0EF6               	movlw	-10
 24685  01846A  006F FF8C  F009    	movff	plusw1,btemp+8
 24686  018470  0EF7               	movlw	-9
 24687  018472  006F FF8C  F00A    	movff	plusw1,btemp+9
 24688  018478  0EF8               	movlw	-8
 24689  01847A  006F FF8C  F00B    	movff	plusw1,btemp+10
 24690  018480  0EF9               	movlw	-7
 24691  018482  006F FF8C  F00C    	movff	plusw1,btemp+11
 24692  018488  1E09               	comf	(btemp+8)^0,f,c
 24693  01848A  1E0A               	comf	(btemp+9)^0,f,c
 24694  01848C  1E0B               	comf	(btemp+10)^0,f,c
 24695  01848E  1E0C               	comf	(btemp+11)^0,f,c
 24696  018490  2A09               	incf	(btemp+8)^0,f,c
 24697  018492  0E00               	movlw	0
 24698  018494  220A               	addwfc	(btemp+9)^0,f,c
 24699  018496  220B               	addwfc	(btemp+10)^0,f,c
 24700  018498  220C               	addwfc	(btemp+11)^0,f,c
 24701  01849A  D010               	goto	L30
 24702  01849C                     l9642:
 24703                           
 24704                           ;stkvar	_val @ sp[(-5)+-5]
 24705  01849C  0EF6               	movlw	-10
 24706  01849E  006F FF8C  F009    	movff	plusw1,btemp+8
 24707  0184A4  0EF7               	movlw	-9
 24708  0184A6  006F FF8C  F00A    	movff	plusw1,btemp+9
 24709  0184AC  0EF8               	movlw	-8
 24710  0184AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 24711  0184B4  0EF9               	movlw	-7
 24712  0184B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 24713  0184BC                     L30:
 24714                           
 24715                           ;stkvar	_arg @ sp[(-5)+0]
 24716  0184BC  0EFB               	movlw	-5
 24717  0184BE  0060  F027  FFE3   	movff	btemp+8,plusw1
 24718  0184C4  0EFC               	movlw	-4
 24719  0184C6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24720  0184CC  0EFD               	movlw	-3
 24721  0184CE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24722  0184D4  0EFE               	movlw	-2
 24723  0184D6  0060  F033  FFE3   	movff	btemp+11,plusw1
 24724                           
 24725                           ;stkvar	_val @ sp[(-5)+-5]
 24726  0184DC  0EF6               	movlw	-10
 24727  0184DE  50E3               	movf	plusw1,w,c
 24728  0184E0  E113               	bnz	l9650
 24729  0184E2  0EF7               	movlw	-9
 24730  0184E4  50E3               	movf	plusw1,w,c
 24731  0184E6  E110               	bnz	l9650
 24732  0184E8  0EF8               	movlw	-8
 24733  0184EA  50E3               	movf	plusw1,w,c
 24734  0184EC  E10D               	bnz	l9650
 24735  0184EE  0EF9               	movlw	-7
 24736  0184F0  50E3               	movf	plusw1,w,c
 24737  0184F2  A4D8               	btfss	status,2,c
 24738  0184F4  D009               	goto	l9650
 24739  0184F6  0E00               	movlw	0
 24740  0184F8  6E01               	movwf	btemp^0,c
 24741  0184FA  0E00               	movlw	0
 24742  0184FC  6E02               	movwf	(btemp+1)^0,c
 24743  0184FE  0E00               	movlw	0
 24744  018500  6E03               	movwf	(btemp+2)^0,c
 24745  018502  0E00               	movlw	0
 24746  018504  6E04               	movwf	(btemp+3)^0,c
 24747  018506  D0A2               	goto	l3061
 24748  018508                     l9650:
 24749  018508  0E96               	movlw	150
 24750  01850A  6E0C               	movwf	(btemp+11)^0,c
 24751                           
 24752                           ;stkvar	_exp @ sp[(-5)+4]
 24753  01850C  0EFF               	movlw	-1
 24754  01850E  0060  F033  FFE3   	movff	btemp+11,plusw1
 24755  018514  D00B               	goto	l9654
 24756  018516                     l9652:
 24757                           
 24758                           ;stkvar	_exp @ sp[(-5)+4]
 24759  018516  0EFF               	movlw	-1
 24760  018518  2AE3               	incf	plusw1,f,c
 24761                           
 24762                           ;stkvar	_arg @ sp[(-5)+0]
 24763  01851A  90D8               	bcf	status,0,c
 24764  01851C  0EFE               	movlw	-2
 24765  01851E  32E3               	rrcf	plusw1,f,c
 24766  018520  0EFD               	movlw	-3
 24767  018522  32E3               	rrcf	plusw1,f,c
 24768  018524  0EFC               	movlw	-4
 24769  018526  32E3               	rrcf	plusw1,f,c
 24770  018528  0EFB               	movlw	-5
 24771  01852A  32E3               	rrcf	plusw1,f,c
 24772  01852C                     l9654:
 24773                           
 24774                           ;stkvar	_arg @ sp[(-5)+0]
 24775  01852C  50E1               	movf	fsr1l,w,c
 24776  01852E  0FFB               	addlw	-5
 24777  018530  6ED9               	movwf	fsr2l,c
 24778  018532  50E2               	movf	fsr1h,w,c
 24779  018534  6EDA               	movwf	fsr2h,c
 24780  018536  0EFF               	movlw	255
 24781  018538  22DA               	addwfc	fsr2h,f,c
 24782  01853A  52DE               	movf	postinc2,f,c
 24783  01853C  52DE               	movf	postinc2,f,c
 24784  01853E  52DE               	movf	postinc2,f,c
 24785  018540  0EFE               	movlw	254
 24786  018542  14DD               	andwf	postdec2,w,c
 24787  018544  B4D8               	btfsc	status,2,c
 24788  018546  D018               	goto	l9662
 24789  018548  D7E6               	goto	l9652
 24790  01854A                     l9656:
 24791                           
 24792                           ;stkvar	_exp @ sp[(-5)+4]
 24793  01854A  0EFF               	movlw	-1
 24794  01854C  2AE3               	incf	plusw1,f,c
 24795                           
 24796                           ;stkvar	_arg @ sp[(-5)+0]
 24797  01854E  50E1               	movf	fsr1l,w,c
 24798  018550  0FFB               	addlw	-5
 24799  018552  6ED9               	movwf	fsr2l,c
 24800  018554  50E2               	movf	fsr1h,w,c
 24801  018556  6EDA               	movwf	fsr2h,c
 24802  018558  0EFF               	movlw	255
 24803  01855A  22DA               	addwfc	fsr2h,f,c
 24804  01855C  2ADE               	incf	postinc2,f,c
 24805  01855E  0E00               	movlw	0
 24806  018560  22DE               	addwfc	postinc2,f,c
 24807  018562  22DE               	addwfc	postinc2,f,c
 24808  018564  22DE               	addwfc	postinc2,f,c
 24809                           
 24810                           ;stkvar	_arg @ sp[(-5)+0]
 24811  018566  90D8               	bcf	status,0,c
 24812  018568  0EFE               	movlw	-2
 24813  01856A  32E3               	rrcf	plusw1,f,c
 24814  01856C  0EFD               	movlw	-3
 24815  01856E  32E3               	rrcf	plusw1,f,c
 24816  018570  0EFC               	movlw	-4
 24817  018572  32E3               	rrcf	plusw1,f,c
 24818  018574  0EFB               	movlw	-5
 24819  018576  32E3               	rrcf	plusw1,f,c
 24820  018578                     l9662:
 24821                           
 24822                           ;stkvar	_arg @ sp[(-5)+0]
 24823  018578  50E1               	movf	fsr1l,w,c
 24824  01857A  0FFB               	addlw	-5
 24825  01857C  6ED9               	movwf	fsr2l,c
 24826  01857E  50E2               	movf	fsr1h,w,c
 24827  018580  6EDA               	movwf	fsr2h,c
 24828  018582  0EFF               	movlw	255
 24829  018584  22DA               	addwfc	fsr2h,f,c
 24830  018586  52DE               	movf	postinc2,f,c
 24831  018588  52DE               	movf	postinc2,f,c
 24832  01858A  52DE               	movf	postinc2,f,c
 24833  01858C  0EFF               	movlw	255
 24834  01858E  14DD               	andwf	postdec2,w,c
 24835  018590  B4D8               	btfsc	status,2,c
 24836  018592  D00C               	goto	l9666
 24837  018594  D7DA               	goto	l9656
 24838  018596                     l9664:
 24839                           
 24840                           ;stkvar	_exp @ sp[(-5)+4]
 24841  018596  0EFF               	movlw	-1
 24842  018598  06E3               	decf	plusw1,f,c
 24843                           
 24844                           ;stkvar	_arg @ sp[(-5)+0]
 24845  01859A  90D8               	bcf	status,0,c
 24846  01859C  0EFB               	movlw	-5
 24847  01859E  36E3               	rlcf	plusw1,f,c
 24848  0185A0  0EFC               	movlw	-4
 24849  0185A2  36E3               	rlcf	plusw1,f,c
 24850  0185A4  0EFD               	movlw	-3
 24851  0185A6  36E3               	rlcf	plusw1,f,c
 24852  0185A8  0EFE               	movlw	-2
 24853  0185AA  36E3               	rlcf	plusw1,f,c
 24854  0185AC                     l9666:
 24855                           
 24856                           ;stkvar	_arg @ sp[(-5)+0]
 24857  0185AC  0EFD               	movlw	-3
 24858  0185AE  BEE3               	btfsc	plusw1,7,c
 24859  0185B0  D007               	goto	u9060
 24860                           
 24861                           ;stkvar	_exp @ sp[(-5)+4]
 24862  0185B2  0EFF               	movlw	-1
 24863  0185B4  006F FF8C  F001    	movff	plusw1,btemp
 24864  0185BA  0E02               	movlw	2
 24865  0185BC  6001               	cpfslt	btemp^0,c
 24866  0185BE  D7EB               	goto	l9664
 24867  0185C0                     u9060:
 24868                           
 24869                           ;stkvar	_exp @ sp[(-5)+4]
 24870  0185C0  0EFF               	movlw	-1
 24871  0185C2  B0E3               	btfsc	plusw1,0,c
 24872  0185C4  D002               	goto	l9674
 24873                           
 24874                           ;stkvar	_arg @ sp[(-5)+0]
 24875  0185C6  0EFD               	movlw	-3
 24876  0185C8  9EE3               	bcf	plusw1,7,c
 24877  0185CA                     l9674:
 24878                           
 24879                           ;stkvar	_exp @ sp[(-5)+4]
 24880  0185CA  50E1               	movf	fsr1l,w,c
 24881  0185CC  0FFF               	addlw	-1
 24882  0185CE  6ED9               	movwf	fsr2l,c
 24883  0185D0  50E2               	movf	fsr1h,w,c
 24884  0185D2  6EDA               	movwf	fsr2h,c
 24885  0185D4  0EFF               	movlw	255
 24886  0185D6  22DA               	addwfc	fsr2h,f,c
 24887  0185D8  90D8               	bcf	status,0,c
 24888  0185DA  32DF               	rrcf	indf2,f,c
 24889                           
 24890                           ;stkvar	_exp @ sp[(-5)+4]
 24891  0185DC  0EFF               	movlw	-1
 24892  0185DE  006F FF8C  F00C    	movff	plusw1,btemp+11
 24893  0185E4  0060  F030  F005   	movff	btemp+11,btemp+4
 24894  0185EA  6A06               	clrf	(btemp+5)^0,c
 24895  0185EC  6A07               	clrf	(btemp+6)^0,c
 24896  0185EE  6A08               	clrf	(btemp+7)^0,c
 24897  0185F0  0060  F014  F008   	movff	btemp+4,btemp+7
 24898  0185F6  6A07               	clrf	(btemp+6)^0,c
 24899  0185F8  6A06               	clrf	(btemp+5)^0,c
 24900  0185FA  6A05               	clrf	(btemp+4)^0,c
 24901                           
 24902                           ;stkvar	_arg @ sp[(-5)+0]
 24903  0185FC  50E1               	movf	fsr1l,w,c
 24904  0185FE  0FFB               	addlw	-5
 24905  018600  6ED9               	movwf	fsr2l,c
 24906  018602  50E2               	movf	fsr1h,w,c
 24907  018604  6EDA               	movwf	fsr2h,c
 24908  018606  0EFF               	movlw	255
 24909  018608  22DA               	addwfc	fsr2h,f,c
 24910  01860A  5005               	movf	(btemp+4)^0,w,c
 24911  01860C  12DE               	iorwf	postinc2,f,c
 24912  01860E  5006               	movf	(btemp+5)^0,w,c
 24913  018610  12DE               	iorwf	postinc2,f,c
 24914  018612  5007               	movf	(btemp+6)^0,w,c
 24915  018614  12DE               	iorwf	postinc2,f,c
 24916  018616  5008               	movf	(btemp+7)^0,w,c
 24917  018618  12DE               	iorwf	postinc2,f,c
 24918                           
 24919                           ;stkvar	_sign @ sp[(-5)+-1]
 24920  01861A  0EFA               	movlw	-6
 24921  01861C  50E3               	movf	plusw1,w,c
 24922  01861E  B4D8               	btfsc	status,2,c
 24923  018620  D005               	goto	l9684
 24924                           
 24925                           ;stkvar	_val @ sp[(-5)+-5]
 24926  018622  0EF9               	movlw	-7
 24927  018624  AEE3               	btfss	plusw1,7,c
 24928  018626  D002               	goto	l9684
 24929                           
 24930                           ;stkvar	_arg @ sp[(-5)+0]
 24931  018628  0EFE               	movlw	-2
 24932  01862A  8EE3               	bsf	plusw1,7,c
 24933  01862C                     l9684:
 24934                           
 24935                           ;stkvar	_arg @ sp[(-5)+0]
 24936  01862C  0EFB               	movlw	-5
 24937  01862E  006F FF8C  F001    	movff	plusw1,btemp
 24938  018634  0EFC               	movlw	-4
 24939  018636  006F FF8C  F002    	movff	plusw1,btemp+1
 24940  01863C  0EFD               	movlw	-3
 24941  01863E  006F FF8C  F003    	movff	plusw1,btemp+2
 24942  018644  0EFE               	movlw	-2
 24943  018646  006F FF8C  F004    	movff	plusw1,btemp+3
 24944  01864C                     l3061:
 24945                           
 24946                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24947  01864C  0EF6               	movlw	246
 24948  01864E  26E1               	addwf	fsr1l,f,c
 24949  018650  0EFF               	movlw	255
 24950  018652  22E2               	addwfc	fsr1h,f,c
 24951  018654  0012               	return		;funcret
 24952  018656                     __end_of___xxtofl:
 24953                           	opt callstack 0
 24954                           
 24955 ;; *************** function ___fldiv *****************
 24956 ;; Defined at:
 24957 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24958 ;; Parameters:    Size  Location     Type
 24959 ;;  b               4  [STACK] unsigned char 
 24960 ;;  a               4  [STACK] unsigned char 
 24961 ;; Auto vars:     Size  Location     Type
 24962 ;;  grs             4  [STACK] unsigned long 
 24963 ;;  rem             4  [STACK] unsigned long 
 24964 ;;  new_exp         2  [STACK] short 
 24965 ;;  aexp            1  [STACK] unsigned char 
 24966 ;;  bexp            1  [STACK] unsigned char 
 24967 ;;  sign            1  [STACK] unsigned char 
 24968 ;; Return value:  Size  Location     Type
 24969 ;;                  4  [STACK] unsigned char 
 24970 ;; Registers used:
 24971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24972 ;; Tracked objects:
 24973 ;;		On entry : 0/1
 24974 ;;		On exit  : 0/0
 24975 ;;		Unchanged: 0/0
 24976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24981 ;;Total ram usage:        0 bytes
 24982 ;; Hardware stack levels used:    1
 24983 ;; Hardware stack levels required when called:   15
 24984 ;; This function calls:
 24985 ;;		Nothing
 24986 ;; This function is called by:
 24987 ;;		_conv_raw_result
 24988 ;;		_calc_bsoc
 24989 ;;		_init_bsoc
 24990 ;;		_esr_check
 24991 ;;		_efgtoa
 24992 ;; This function uses a reentrant model
 24993 ;;
 24994                           
 24995                           	psect	text100
 24996  014D40                     __ptext100:
 24997                           	opt callstack 0
 24998  014D40                     ___fldiv:
 24999                           	opt callstack 0
 25000                           
 25001                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 25002  014D40  0E0D               	movlw	13
 25003  014D42  26E1               	addwf	fsr1l,f,c
 25004  014D44  0E00               	movlw	0
 25005  014D46  22E2               	addwfc	fsr1h,f,c
 25006                           
 25007                           ;stkvar	_b @ sp[(-13)+-4]
 25008                           
 25009                           ;incstack = 0
 25010 ;; hardware stack exceeded
 25011  014D48  0EF2               	movlw	242
 25012  014D4A  24E1               	addwf	fsr1l,w,c
 25013  014D4C  6ED9               	movwf	fsr2l,c
 25014  014D4E  0EFF               	movlw	255
 25015  014D50  20E2               	addwfc	fsr1h,w,c
 25016  014D52  6EDA               	movwf	fsr2h,c
 25017  014D54  50DF               	movf	indf2,w,c
 25018  014D56  6E0C               	movwf	(btemp+11)^0,c
 25019  014D58  0E80               	movlw	128
 25020  014D5A  160C               	andwf	(btemp+11)^0,f,c
 25021                           
 25022                           ;stkvar	_sign @ sp[(-13)+12]
 25023  014D5C  0EFF               	movlw	-1
 25024  014D5E  0060  F033  FFE3   	movff	btemp+11,plusw1
 25025                           
 25026                           ;stkvar	_b @ sp[(-13)+-4]
 25027  014D64  0EF2               	movlw	242
 25028  014D66  24E1               	addwf	fsr1l,w,c
 25029  014D68  6ED9               	movwf	fsr2l,c
 25030  014D6A  0EFF               	movlw	255
 25031  014D6C  20E2               	addwfc	fsr1h,w,c
 25032  014D6E  6EDA               	movwf	fsr2h,c
 25033  014D70  50DF               	movf	indf2,w,c
 25034  014D72  6E0C               	movwf	(btemp+11)^0,c
 25035  014D74  90D8               	bcf	status,0,c
 25036  014D76  340C               	rlcf	(btemp+11)^0,w,c
 25037  014D78  6E0B               	movwf	(btemp+10)^0,c
 25038                           
 25039                           ;stkvar	_bexp @ sp[(-13)+11]
 25040  014D7A  0EFE               	movlw	-2
 25041  014D7C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25042                           
 25043                           ;stkvar	_b @ sp[(-13)+-4]
 25044  014D82  0EF1               	movlw	241
 25045  014D84  24E1               	addwf	fsr1l,w,c
 25046  014D86  6ED9               	movwf	fsr2l,c
 25047  014D88  0EFF               	movlw	255
 25048  014D8A  20E2               	addwfc	fsr1h,w,c
 25049  014D8C  6EDA               	movwf	fsr2h,c
 25050  014D8E  AEDF               	btfss	indf2,7,c
 25051  014D90  D002               	goto	l8214
 25052                           
 25053                           ;stkvar	_bexp @ sp[(-13)+11]
 25054  014D92  0EFE               	movlw	-2
 25055  014D94  80E3               	bsf	plusw1,0,c
 25056  014D96                     l8214:
 25057                           
 25058                           ;stkvar	_bexp @ sp[(-13)+11]
 25059  014D96  0EFE               	movlw	-2
 25060  014D98  50E3               	movf	plusw1,w,c
 25061  014D9A  B4D8               	btfsc	status,2,c
 25062  014D9C  D027               	goto	l8224
 25063                           
 25064                           ;stkvar	_bexp @ sp[(-13)+11]
 25065  014D9E  0EFE               	movlw	-2
 25066  014DA0  28E3               	incf	plusw1,w,c
 25067  014DA2  A4D8               	btfss	status,2,c
 25068  014DA4  D018               	goto	l8220
 25069  014DA6  0E00               	movlw	0
 25070  014DA8  6E09               	movwf	(btemp+8)^0,c
 25071  014DAA  0E00               	movlw	0
 25072  014DAC  6E0A               	movwf	(btemp+9)^0,c
 25073  014DAE  0E00               	movlw	0
 25074  014DB0  6E0B               	movwf	(btemp+10)^0,c
 25075  014DB2  0E00               	movlw	0
 25076  014DB4  6E0C               	movwf	(btemp+11)^0,c
 25077                           
 25078                           ;stkvar	_b @ sp[(-13)+-4]
 25079  014DB6  0EEF               	movlw	-17
 25080  014DB8  0060  F027  FFE3   	movff	btemp+8,plusw1
 25081  014DBE  0EF0               	movlw	-16
 25082  014DC0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25083  014DC6  0EF1               	movlw	-15
 25084  014DC8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25085  014DCE  0EF2               	movlw	-14
 25086  014DD0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25087  014DD6                     l8220:
 25088                           
 25089                           ;stkvar	_b @ sp[(-13)+-4]
 25090  014DD6  0EF1               	movlw	-15
 25091  014DD8  8EE3               	bsf	plusw1,7,c
 25092                           
 25093                           ;stkvar	_b @ sp[(-13)+-4]
 25094  014DDA  0EF2               	movlw	242
 25095  014DDC  24E1               	addwf	fsr1l,w,c
 25096  014DDE  6ED9               	movwf	fsr2l,c
 25097  014DE0  0EFF               	movlw	255
 25098  014DE2  20E2               	addwfc	fsr1h,w,c
 25099  014DE4  6EDA               	movwf	fsr2h,c
 25100  014DE6  0E00               	movlw	0
 25101  014DE8  6EDF               	movwf	indf2,c
 25102  014DEA  D018               	goto	l8226
 25103  014DEC                     l8224:
 25104  014DEC  0E00               	movlw	0
 25105  014DEE  6E09               	movwf	(btemp+8)^0,c
 25106  014DF0  0E00               	movlw	0
 25107  014DF2  6E0A               	movwf	(btemp+9)^0,c
 25108  014DF4  0E00               	movlw	0
 25109  014DF6  6E0B               	movwf	(btemp+10)^0,c
 25110  014DF8  0E00               	movlw	0
 25111  014DFA  6E0C               	movwf	(btemp+11)^0,c
 25112                           
 25113                           ;stkvar	_b @ sp[(-13)+-4]
 25114  014DFC  0EEF               	movlw	-17
 25115  014DFE  0060  F027  FFE3   	movff	btemp+8,plusw1
 25116  014E04  0EF0               	movlw	-16
 25117  014E06  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25118  014E0C  0EF1               	movlw	-15
 25119  014E0E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25120  014E14  0EF2               	movlw	-14
 25121  014E16  0060  F033  FFE3   	movff	btemp+11,plusw1
 25122  014E1C                     l8226:
 25123                           
 25124                           ;stkvar	_a @ sp[(-13)+-8]
 25125  014E1C  0EEE               	movlw	238
 25126  014E1E  24E1               	addwf	fsr1l,w,c
 25127  014E20  6ED9               	movwf	fsr2l,c
 25128  014E22  0EFF               	movlw	255
 25129  014E24  20E2               	addwfc	fsr1h,w,c
 25130  014E26  6EDA               	movwf	fsr2h,c
 25131  014E28  50DF               	movf	indf2,w,c
 25132  014E2A  6E0C               	movwf	(btemp+11)^0,c
 25133  014E2C  0E80               	movlw	128
 25134  014E2E  160C               	andwf	(btemp+11)^0,f,c
 25135                           
 25136                           ;stkvar	_sign @ sp[(-13)+12]
 25137  014E30  50E1               	movf	fsr1l,w,c
 25138  014E32  0FFF               	addlw	-1
 25139  014E34  6ED9               	movwf	fsr2l,c
 25140  014E36  50E2               	movf	fsr1h,w,c
 25141  014E38  6EDA               	movwf	fsr2h,c
 25142  014E3A  0EFF               	movlw	255
 25143  014E3C  22DA               	addwfc	fsr2h,f,c
 25144  014E3E  500C               	movf	(btemp+11)^0,w,c
 25145  014E40  1ADF               	xorwf	indf2,f,c
 25146                           
 25147                           ;stkvar	_a @ sp[(-13)+-8]
 25148  014E42  0EEE               	movlw	238
 25149  014E44  24E1               	addwf	fsr1l,w,c
 25150  014E46  6ED9               	movwf	fsr2l,c
 25151  014E48  0EFF               	movlw	255
 25152  014E4A  20E2               	addwfc	fsr1h,w,c
 25153  014E4C  6EDA               	movwf	fsr2h,c
 25154  014E4E  50DF               	movf	indf2,w,c
 25155  014E50  6E0C               	movwf	(btemp+11)^0,c
 25156  014E52  90D8               	bcf	status,0,c
 25157  014E54  340C               	rlcf	(btemp+11)^0,w,c
 25158  014E56  6E0B               	movwf	(btemp+10)^0,c
 25159                           
 25160                           ;stkvar	_aexp @ sp[(-13)+10]
 25161  014E58  0EFD               	movlw	-3
 25162  014E5A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25163                           
 25164                           ;stkvar	_a @ sp[(-13)+-8]
 25165  014E60  0EED               	movlw	237
 25166  014E62  24E1               	addwf	fsr1l,w,c
 25167  014E64  6ED9               	movwf	fsr2l,c
 25168  014E66  0EFF               	movlw	255
 25169  014E68  20E2               	addwfc	fsr1h,w,c
 25170  014E6A  6EDA               	movwf	fsr2h,c
 25171  014E6C  AEDF               	btfss	indf2,7,c
 25172  014E6E  D002               	goto	l8234
 25173                           
 25174                           ;stkvar	_aexp @ sp[(-13)+10]
 25175  014E70  0EFD               	movlw	-3
 25176  014E72  80E3               	bsf	plusw1,0,c
 25177  014E74                     l8234:
 25178                           
 25179                           ;stkvar	_aexp @ sp[(-13)+10]
 25180  014E74  0EFD               	movlw	-3
 25181  014E76  50E3               	movf	plusw1,w,c
 25182  014E78  B4D8               	btfsc	status,2,c
 25183  014E7A  D027               	goto	l8244
 25184                           
 25185                           ;stkvar	_aexp @ sp[(-13)+10]
 25186  014E7C  0EFD               	movlw	-3
 25187  014E7E  28E3               	incf	plusw1,w,c
 25188  014E80  A4D8               	btfss	status,2,c
 25189  014E82  D018               	goto	l8240
 25190  014E84  0E00               	movlw	0
 25191  014E86  6E09               	movwf	(btemp+8)^0,c
 25192  014E88  0E00               	movlw	0
 25193  014E8A  6E0A               	movwf	(btemp+9)^0,c
 25194  014E8C  0E00               	movlw	0
 25195  014E8E  6E0B               	movwf	(btemp+10)^0,c
 25196  014E90  0E00               	movlw	0
 25197  014E92  6E0C               	movwf	(btemp+11)^0,c
 25198                           
 25199                           ;stkvar	_a @ sp[(-13)+-8]
 25200  014E94  0EEB               	movlw	-21
 25201  014E96  0060  F027  FFE3   	movff	btemp+8,plusw1
 25202  014E9C  0EEC               	movlw	-20
 25203  014E9E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25204  014EA4  0EED               	movlw	-19
 25205  014EA6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25206  014EAC  0EEE               	movlw	-18
 25207  014EAE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25208  014EB4                     l8240:
 25209                           
 25210                           ;stkvar	_a @ sp[(-13)+-8]
 25211  014EB4  0EED               	movlw	-19
 25212  014EB6  8EE3               	bsf	plusw1,7,c
 25213                           
 25214                           ;stkvar	_a @ sp[(-13)+-8]
 25215  014EB8  0EEE               	movlw	238
 25216  014EBA  24E1               	addwf	fsr1l,w,c
 25217  014EBC  6ED9               	movwf	fsr2l,c
 25218  014EBE  0EFF               	movlw	255
 25219  014EC0  20E2               	addwfc	fsr1h,w,c
 25220  014EC2  6EDA               	movwf	fsr2h,c
 25221  014EC4  0E00               	movlw	0
 25222  014EC6  6EDF               	movwf	indf2,c
 25223  014EC8  D018               	goto	l8246
 25224  014ECA                     l8244:
 25225  014ECA  0E00               	movlw	0
 25226  014ECC  6E09               	movwf	(btemp+8)^0,c
 25227  014ECE  0E00               	movlw	0
 25228  014ED0  6E0A               	movwf	(btemp+9)^0,c
 25229  014ED2  0E00               	movlw	0
 25230  014ED4  6E0B               	movwf	(btemp+10)^0,c
 25231  014ED6  0E00               	movlw	0
 25232  014ED8  6E0C               	movwf	(btemp+11)^0,c
 25233                           
 25234                           ;stkvar	_a @ sp[(-13)+-8]
 25235  014EDA  0EEB               	movlw	-21
 25236  014EDC  0060  F027  FFE3   	movff	btemp+8,plusw1
 25237  014EE2  0EEC               	movlw	-20
 25238  014EE4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25239  014EEA  0EED               	movlw	-19
 25240  014EEC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25241  014EF2  0EEE               	movlw	-18
 25242  014EF4  0060  F033  FFE3   	movff	btemp+11,plusw1
 25243  014EFA                     l8246:
 25244                           
 25245                           ;stkvar	_a @ sp[(-13)+-8]
 25246  014EFA  0EEB               	movlw	-21
 25247  014EFC  50E3               	movf	plusw1,w,c
 25248  014EFE  E139               	bnz	l8258
 25249  014F00  0EEC               	movlw	-20
 25250  014F02  50E3               	movf	plusw1,w,c
 25251  014F04  E136               	bnz	l8258
 25252  014F06  0EED               	movlw	-19
 25253  014F08  50E3               	movf	plusw1,w,c
 25254  014F0A  E133               	bnz	l8258
 25255  014F0C  0EEE               	movlw	-18
 25256  014F0E  50E3               	movf	plusw1,w,c
 25257  014F10  A4D8               	btfss	status,2,c
 25258  014F12  D02F               	goto	l8258
 25259                           
 25260                           ;stkvar	_b @ sp[(-13)+-4]
 25261  014F14  0EEF               	movlw	-17
 25262  014F16  6AE3               	clrf	plusw1,c
 25263  014F18  0EF0               	movlw	-16
 25264  014F1A  6AE3               	clrf	plusw1,c
 25265  014F1C  0EF1               	movlw	-15
 25266  014F1E  6AE3               	clrf	plusw1,c
 25267  014F20  0EF2               	movlw	-14
 25268  014F22  6AE3               	clrf	plusw1,c
 25269                           
 25270                           ;stkvar	_b @ sp[(-13)+-4]
 25271  014F24  0EF1               	movlw	241
 25272  014F26  24E1               	addwf	fsr1l,w,c
 25273  014F28  6ED9               	movwf	fsr2l,c
 25274  014F2A  0EFF               	movlw	255
 25275  014F2C  20E2               	addwfc	fsr1h,w,c
 25276  014F2E  6EDA               	movwf	fsr2h,c
 25277  014F30  0E80               	movlw	128
 25278  014F32  12DE               	iorwf	postinc2,f,c
 25279  014F34  0E7F               	movlw	127
 25280  014F36  12DD               	iorwf	postdec2,f,c
 25281  014F38                     l8252:
 25282                           
 25283                           ;stkvar	_sign @ sp[(-13)+12]
 25284  014F38  0EFF               	movlw	-1
 25285  014F3A  006F FF8C  F00C    	movff	plusw1,btemp+11
 25286                           
 25287                           ;stkvar	_b @ sp[(-13)+-4]
 25288  014F40  0EF2               	movlw	242
 25289  014F42  24E1               	addwf	fsr1l,w,c
 25290  014F44  6ED9               	movwf	fsr2l,c
 25291  014F46  0EFF               	movlw	255
 25292  014F48  20E2               	addwfc	fsr1h,w,c
 25293  014F4A  6EDA               	movwf	fsr2h,c
 25294  014F4C  500C               	movf	(btemp+11)^0,w,c
 25295  014F4E  12DF               	iorwf	indf2,f,c
 25296                           
 25297                           ;stkvar	_b @ sp[(-13)+-4]
 25298  014F50  0EEF               	movlw	-17
 25299  014F52  006F FF8C  F001    	movff	plusw1,btemp
 25300  014F58  0EF0               	movlw	-16
 25301  014F5A  006F FF8C  F002    	movff	plusw1,btemp+1
 25302  014F60  0EF1               	movlw	-15
 25303  014F62  006F FF8C  F003    	movff	plusw1,btemp+2
 25304  014F68  0EF2               	movlw	-14
 25305  014F6A  006F FF8C  F004    	movff	plusw1,btemp+3
 25306  014F70  D19F               	goto	l2985
 25307  014F72                     l8258:
 25308                           
 25309                           ;stkvar	_bexp @ sp[(-13)+11]
 25310  014F72  0EFE               	movlw	-2
 25311  014F74  50E3               	movf	plusw1,w,c
 25312  014F76  A4D8               	btfss	status,2,c
 25313  014F78  D009               	goto	l8266
 25314  014F7A  0E00               	movlw	0
 25315  014F7C  6E01               	movwf	btemp^0,c
 25316  014F7E  0E00               	movlw	0
 25317  014F80  6E02               	movwf	(btemp+1)^0,c
 25318  014F82  0E00               	movlw	0
 25319  014F84  6E03               	movwf	(btemp+2)^0,c
 25320  014F86  0E00               	movlw	0
 25321  014F88  6E04               	movwf	(btemp+3)^0,c
 25322  014F8A  D192               	goto	l2985
 25323  014F8C                     l8266:
 25324                           
 25325                           ;stkvar	_bexp @ sp[(-13)+11]
 25326  014F8C  0EFE               	movlw	-2
 25327  014F8E  50E3               	movf	plusw1,w,c
 25328  014F90  6E0B               	movwf	(btemp+10)^0,c
 25329  014F92  6A0C               	clrf	(btemp+11)^0,c
 25330                           
 25331                           ;stkvar	_aexp @ sp[(-13)+10]
 25332  014F94  0EFD               	movlw	-3
 25333  014F96  50E3               	movf	plusw1,w,c
 25334  014F98  5E0B               	subwf	(btemp+10)^0,f,c
 25335  014F9A  0E00               	movlw	0
 25336  014F9C  5A0C               	subwfb	(btemp+11)^0,f,c
 25337  014F9E  0E7F               	movlw	127
 25338  014FA0  260B               	addwf	(btemp+10)^0,f,c
 25339  014FA2  0E00               	movlw	0
 25340  014FA4  220C               	addwfc	(btemp+11)^0,f,c
 25341                           
 25342                           ;stkvar	_new_exp @ sp[(-13)+8]
 25343  014FA6  0EFB               	movlw	-5
 25344  014FA8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25345  014FAE  0EFC               	movlw	-4
 25346  014FB0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25347                           
 25348                           ;stkvar	_b @ sp[(-13)+-4]
 25349  014FB6  0EEF               	movlw	-17
 25350  014FB8  006F FF8C  F009    	movff	plusw1,btemp+8
 25351  014FBE  0EF0               	movlw	-16
 25352  014FC0  006F FF8C  F00A    	movff	plusw1,btemp+9
 25353  014FC6  0EF1               	movlw	-15
 25354  014FC8  006F FF8C  F00B    	movff	plusw1,btemp+10
 25355  014FCE  0EF2               	movlw	-14
 25356  014FD0  006F FF8C  F00C    	movff	plusw1,btemp+11
 25357                           
 25358                           ;stkvar	_rem @ sp[(-13)+4]
 25359  014FD6  0EF7               	movlw	-9
 25360  014FD8  0060  F027  FFE3   	movff	btemp+8,plusw1
 25361  014FDE  0EF8               	movlw	-8
 25362  014FE0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25363  014FE6  0EF9               	movlw	-7
 25364  014FE8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25365  014FEE  0EFA               	movlw	-6
 25366  014FF0  0060  F033  FFE3   	movff	btemp+11,plusw1
 25367                           
 25368                           ;stkvar	_b @ sp[(-13)+-4]
 25369  014FF6  0EEF               	movlw	-17
 25370  014FF8  6AE3               	clrf	plusw1,c
 25371  014FFA  0EF0               	movlw	-16
 25372  014FFC  6AE3               	clrf	plusw1,c
 25373  014FFE  0EF1               	movlw	-15
 25374  015000  6AE3               	clrf	plusw1,c
 25375  015002  0EF2               	movlw	-14
 25376  015004  6AE3               	clrf	plusw1,c
 25377                           
 25378                           ;stkvar	_grs @ sp[(-13)+0]
 25379  015006  0EF3               	movlw	-13
 25380  015008  6AE3               	clrf	plusw1,c
 25381  01500A  0EF4               	movlw	-12
 25382  01500C  6AE3               	clrf	plusw1,c
 25383  01500E  0EF5               	movlw	-11
 25384  015010  6AE3               	clrf	plusw1,c
 25385  015012  0EF6               	movlw	-10
 25386  015014  6AE3               	clrf	plusw1,c
 25387                           
 25388                           ;stkvar	_aexp @ sp[(-13)+10]
 25389  015016  0EFD               	movlw	-3
 25390  015018  6AE3               	clrf	plusw1,c
 25391  01501A  D050               	goto	l8294
 25392  01501C                     l8276:
 25393                           
 25394                           ;stkvar	_aexp @ sp[(-13)+10]
 25395  01501C  0EFD               	movlw	-3
 25396  01501E  50E3               	movf	plusw1,w,c
 25397  015020  B4D8               	btfsc	status,2,c
 25398  015022  D020               	goto	l8286
 25399                           
 25400                           ;stkvar	_rem @ sp[(-13)+4]
 25401  015024  90D8               	bcf	status,0,c
 25402  015026  0EF7               	movlw	-9
 25403  015028  36E3               	rlcf	plusw1,f,c
 25404  01502A  0EF8               	movlw	-8
 25405  01502C  36E3               	rlcf	plusw1,f,c
 25406  01502E  0EF9               	movlw	-7
 25407  015030  36E3               	rlcf	plusw1,f,c
 25408  015032  0EFA               	movlw	-6
 25409  015034  36E3               	rlcf	plusw1,f,c
 25410                           
 25411                           ;stkvar	_b @ sp[(-13)+-4]
 25412  015036  90D8               	bcf	status,0,c
 25413  015038  0EEF               	movlw	-17
 25414  01503A  36E3               	rlcf	plusw1,f,c
 25415  01503C  0EF0               	movlw	-16
 25416  01503E  36E3               	rlcf	plusw1,f,c
 25417  015040  0EF1               	movlw	-15
 25418  015042  36E3               	rlcf	plusw1,f,c
 25419  015044  0EF2               	movlw	-14
 25420  015046  36E3               	rlcf	plusw1,f,c
 25421                           
 25422                           ;stkvar	_grs @ sp[(-13)+0]
 25423  015048  0EF6               	movlw	-10
 25424  01504A  AEE3               	btfss	plusw1,7,c
 25425  01504C  D002               	goto	l8284
 25426                           
 25427                           ;stkvar	_b @ sp[(-13)+-4]
 25428  01504E  0EEF               	movlw	-17
 25429  015050  80E3               	bsf	plusw1,0,c
 25430  015052                     l8284:
 25431                           
 25432                           ;stkvar	_grs @ sp[(-13)+0]
 25433  015052  90D8               	bcf	status,0,c
 25434  015054  0EF3               	movlw	-13
 25435  015056  36E3               	rlcf	plusw1,f,c
 25436  015058  0EF4               	movlw	-12
 25437  01505A  36E3               	rlcf	plusw1,f,c
 25438  01505C  0EF5               	movlw	-11
 25439  01505E  36E3               	rlcf	plusw1,f,c
 25440  015060  0EF6               	movlw	-10
 25441  015062  36E3               	rlcf	plusw1,f,c
 25442  015064                     l8286:
 25443                           
 25444                           ;stkvar	_a @ sp[(-13)+-8]
 25445                           ;stkvar	_rem @ sp[(-13)+4]
 25446  015064  50E1               	movf	fsr1l,w,c
 25447  015066  0FF7               	addlw	-9
 25448  015068  6ED9               	movwf	fsr2l,c
 25449  01506A  50E2               	movf	fsr1h,w,c
 25450  01506C  6EDA               	movwf	fsr2h,c
 25451  01506E  0EFF               	movlw	255
 25452  015070  22DA               	addwfc	fsr2h,f,c
 25453  015072  0EEB               	movlw	-21
 25454  015074  50E3               	movf	plusw1,w,c
 25455  015076  5CDE               	subwf	postinc2,w,c
 25456  015078  0EEC               	movlw	-20
 25457  01507A  50E3               	movf	plusw1,w,c
 25458  01507C  58DE               	subwfb	postinc2,w,c
 25459  01507E  0EED               	movlw	-19
 25460  015080  50E3               	movf	plusw1,w,c
 25461  015082  58DE               	subwfb	postinc2,w,c
 25462  015084  0EEE               	movlw	-18
 25463  015086  50E3               	movf	plusw1,w,c
 25464  015088  58DE               	subwfb	postinc2,w,c
 25465  01508A  A0D8               	btfss	status,0,c
 25466  01508C  D015               	goto	l8292
 25467                           
 25468                           ;stkvar	_grs @ sp[(-13)+0]
 25469  01508E  0EF6               	movlw	-10
 25470  015090  8CE3               	bsf	plusw1,6,c
 25471                           
 25472                           ;stkvar	_a @ sp[(-13)+-8]
 25473                           ;stkvar	_rem @ sp[(-13)+4]
 25474  015092  50E1               	movf	fsr1l,w,c
 25475  015094  0FF7               	addlw	-9
 25476  015096  6ED9               	movwf	fsr2l,c
 25477  015098  50E2               	movf	fsr1h,w,c
 25478  01509A  6EDA               	movwf	fsr2h,c
 25479  01509C  0EFF               	movlw	255
 25480  01509E  22DA               	addwfc	fsr2h,f,c
 25481  0150A0  0EEB               	movlw	-21
 25482  0150A2  50E3               	movf	plusw1,w,c
 25483  0150A4  5EDE               	subwf	postinc2,f,c
 25484  0150A6  0EEC               	movlw	-20
 25485  0150A8  50E3               	movf	plusw1,w,c
 25486  0150AA  5ADE               	subwfb	postinc2,f,c
 25487  0150AC  0EED               	movlw	-19
 25488  0150AE  50E3               	movf	plusw1,w,c
 25489  0150B0  5ADE               	subwfb	postinc2,f,c
 25490  0150B2  0EEE               	movlw	-18
 25491  0150B4  50E3               	movf	plusw1,w,c
 25492  0150B6  5ADE               	subwfb	postinc2,f,c
 25493  0150B8                     l8292:
 25494                           
 25495                           ;stkvar	_aexp @ sp[(-13)+10]
 25496  0150B8  0EFD               	movlw	-3
 25497  0150BA  2AE3               	incf	plusw1,f,c
 25498  0150BC                     l8294:
 25499                           
 25500                           ;stkvar	_aexp @ sp[(-13)+10]
 25501  0150BC  0EFD               	movlw	-3
 25502  0150BE  006F FF8C  F001    	movff	plusw1,btemp
 25503  0150C4  0E19               	movlw	25
 25504  0150C6  6401               	cpfsgt	btemp^0,c
 25505  0150C8  D7A9               	goto	l8276
 25506                           
 25507                           ;stkvar	_rem @ sp[(-13)+4]
 25508  0150CA  0EF7               	movlw	-9
 25509  0150CC  50E3               	movf	plusw1,w,c
 25510  0150CE  E10A               	bnz	u6660
 25511  0150D0  0EF8               	movlw	-8
 25512  0150D2  50E3               	movf	plusw1,w,c
 25513  0150D4  E107               	bnz	u6660
 25514  0150D6  0EF9               	movlw	-7
 25515  0150D8  50E3               	movf	plusw1,w,c
 25516  0150DA  E104               	bnz	u6660
 25517  0150DC  0EFA               	movlw	-6
 25518  0150DE  50E3               	movf	plusw1,w,c
 25519  0150E0  B4D8               	btfsc	status,2,c
 25520  0150E2  D024               	goto	l8310
 25521  0150E4                     u6660:
 25522                           
 25523                           ;stkvar	_grs @ sp[(-13)+0]
 25524  0150E4  0EF3               	movlw	-13
 25525  0150E6  80E3               	bsf	plusw1,0,c
 25526  0150E8  D021               	goto	l8310
 25527  0150EA                     l8300:
 25528                           
 25529                           ;stkvar	_b @ sp[(-13)+-4]
 25530  0150EA  90D8               	bcf	status,0,c
 25531  0150EC  0EEF               	movlw	-17
 25532  0150EE  36E3               	rlcf	plusw1,f,c
 25533  0150F0  0EF0               	movlw	-16
 25534  0150F2  36E3               	rlcf	plusw1,f,c
 25535  0150F4  0EF1               	movlw	-15
 25536  0150F6  36E3               	rlcf	plusw1,f,c
 25537  0150F8  0EF2               	movlw	-14
 25538  0150FA  36E3               	rlcf	plusw1,f,c
 25539                           
 25540                           ;stkvar	_grs @ sp[(-13)+0]
 25541  0150FC  0EF6               	movlw	-10
 25542  0150FE  AEE3               	btfss	plusw1,7,c
 25543  015100  D002               	goto	l8306
 25544                           
 25545                           ;stkvar	_b @ sp[(-13)+-4]
 25546  015102  0EEF               	movlw	-17
 25547  015104  80E3               	bsf	plusw1,0,c
 25548  015106                     l8306:
 25549                           
 25550                           ;stkvar	_grs @ sp[(-13)+0]
 25551  015106  90D8               	bcf	status,0,c
 25552  015108  0EF3               	movlw	-13
 25553  01510A  36E3               	rlcf	plusw1,f,c
 25554  01510C  0EF4               	movlw	-12
 25555  01510E  36E3               	rlcf	plusw1,f,c
 25556  015110  0EF5               	movlw	-11
 25557  015112  36E3               	rlcf	plusw1,f,c
 25558  015114  0EF6               	movlw	-10
 25559  015116  36E3               	rlcf	plusw1,f,c
 25560                           
 25561                           ;stkvar	_new_exp @ sp[(-13)+8]
 25562  015118  50E1               	movf	fsr1l,w,c
 25563  01511A  0FFB               	addlw	-5
 25564  01511C  6ED9               	movwf	fsr2l,c
 25565  01511E  50E2               	movf	fsr1h,w,c
 25566  015120  6EDA               	movwf	fsr2h,c
 25567  015122  0EFF               	movlw	255
 25568  015124  22DA               	addwfc	fsr2h,f,c
 25569  015126  06DE               	decf	postinc2,f,c
 25570  015128  0E00               	movlw	0
 25571  01512A  5ADD               	subwfb	postdec2,f,c
 25572  01512C                     l8310:
 25573                           
 25574                           ;stkvar	_b @ sp[(-13)+-4]
 25575  01512C  0EF1               	movlw	-15
 25576  01512E  AEE3               	btfss	plusw1,7,c
 25577  015130  D7DC               	goto	l8300
 25578                           
 25579                           ;stkvar	_aexp @ sp[(-13)+10]
 25580  015132  0EFD               	movlw	-3
 25581  015134  6AE3               	clrf	plusw1,c
 25582                           
 25583                           ;stkvar	_grs @ sp[(-13)+0]
 25584  015136  0EF6               	movlw	-10
 25585  015138  AEE3               	btfss	plusw1,7,c
 25586  01513A  D020               	goto	l8324
 25587                           
 25588                           ;stkvar	_grs @ sp[(-13)+0]
 25589  01513C  50E1               	movf	fsr1l,w,c
 25590  01513E  0FF3               	addlw	-13
 25591  015140  6ED9               	movwf	fsr2l,c
 25592  015142  50E2               	movf	fsr1h,w,c
 25593  015144  6EDA               	movwf	fsr2h,c
 25594  015146  0EFF               	movlw	255
 25595  015148  22DA               	addwfc	fsr2h,f,c
 25596  01514A  0EFF               	movlw	255
 25597  01514C  14DE               	andwf	postinc2,w,c
 25598  01514E  6E09               	movwf	(btemp+8)^0,c
 25599  015150  0EFF               	movlw	255
 25600  015152  14DE               	andwf	postinc2,w,c
 25601  015154  6E0A               	movwf	(btemp+9)^0,c
 25602  015156  0EFF               	movlw	255
 25603  015158  14DE               	andwf	postinc2,w,c
 25604  01515A  6E0B               	movwf	(btemp+10)^0,c
 25605  01515C  0E7F               	movlw	127
 25606  01515E  14DE               	andwf	postinc2,w,c
 25607  015160  6E0C               	movwf	(btemp+11)^0,c
 25608  015162  5009               	movf	(btemp+8)^0,w,c
 25609  015164  100A               	iorwf	(btemp+9)^0,w,c
 25610  015166  100B               	iorwf	(btemp+10)^0,w,c
 25611  015168  100C               	iorwf	(btemp+11)^0,w,c
 25612  01516A  B4D8               	btfsc	status,2,c
 25613  01516C  D004               	goto	l8320
 25614  01516E                     u6700:
 25615                           
 25616                           ;stkvar	_aexp @ sp[(-13)+10]
 25617  01516E  0EFD               	movlw	-3
 25618  015170  6AE3               	clrf	plusw1,c
 25619  015172  2AE3               	incf	plusw1,f,c
 25620  015174  D003               	goto	l8324
 25621  015176                     l8320:
 25622                           
 25623                           ;stkvar	_b @ sp[(-13)+-4]
 25624  015176  0EEF               	movlw	-17
 25625  015178  B0E3               	btfsc	plusw1,0,c
 25626  01517A  D7F9               	goto	u6700
 25627  01517C                     l8324:
 25628                           
 25629                           ;stkvar	_aexp @ sp[(-13)+10]
 25630  01517C  0EFD               	movlw	-3
 25631  01517E  50E3               	movf	plusw1,w,c
 25632  015180  B4D8               	btfsc	status,2,c
 25633  015182  D036               	goto	l8334
 25634                           
 25635                           ;stkvar	_b @ sp[(-13)+-4]
 25636  015184  50E1               	movf	fsr1l,w,c
 25637  015186  0FEF               	addlw	-17
 25638  015188  6ED9               	movwf	fsr2l,c
 25639  01518A  50E2               	movf	fsr1h,w,c
 25640  01518C  6EDA               	movwf	fsr2h,c
 25641  01518E  0EFF               	movlw	255
 25642  015190  22DA               	addwfc	fsr2h,f,c
 25643  015192  2ADE               	incf	postinc2,f,c
 25644  015194  0E00               	movlw	0
 25645  015196  22DE               	addwfc	postinc2,f,c
 25646  015198  22DE               	addwfc	postinc2,f,c
 25647  01519A  22DE               	addwfc	postinc2,f,c
 25648                           
 25649                           ;stkvar	_b @ sp[(-13)+-4]
 25650  01519C  0EF2               	movlw	-14
 25651  01519E  A0E3               	btfss	plusw1,0,c
 25652  0151A0  D027               	goto	l8334
 25653  0151A2  0E01               	movlw	1
 25654  0151A4  6E0C               	movwf	(btemp+11)^0,c
 25655                           
 25656                           ;stkvar	_b @ sp[(-13)+-4]
 25657  0151A6  50E1               	movf	fsr1l,w,c
 25658  0151A8  0FEF               	addlw	-17
 25659  0151AA  6ED9               	movwf	fsr2l,c
 25660  0151AC  50E2               	movf	fsr1h,w,c
 25661  0151AE  6EDA               	movwf	fsr2h,c
 25662  0151B0  0EFF               	movlw	255
 25663  0151B2  22DA               	addwfc	fsr2h,f,c
 25664  0151B4  280C               	incf	(btemp+11)^0,w,c
 25665  0151B6  52DE               	movf	postinc2,f,c
 25666  0151B8  D008               	goto	u6740
 25667  0151BA                     u6745:
 25668  0151BA  52DE               	movf	postinc2,f,c
 25669  0151BC  90D8               	bcf	status,0,c
 25670  0151BE  BEDC               	btfsc	preinc2,7,c
 25671  0151C0  80D8               	bsf	status,0,c
 25672  0151C2  32DD               	rrcf	postdec2,f,c
 25673  0151C4  32DD               	rrcf	postdec2,f,c
 25674  0151C6  32DD               	rrcf	postdec2,f,c
 25675  0151C8  32DE               	rrcf	postinc2,f,c
 25676  0151CA                     u6740:
 25677  0151CA  2EE8               	decfsz	wreg,f,c
 25678  0151CC  D7F6               	goto	u6745
 25679                           
 25680                           ;stkvar	_new_exp @ sp[(-13)+8]
 25681  0151CE  0EFB               	movlw	-5
 25682  0151D0  50E3               	movf	plusw1,w,c
 25683  0151D2  0F01               	addlw	1
 25684  0151D4  6E01               	movwf	btemp^0,c
 25685  0151D6  0EFB               	movlw	-5
 25686  0151D8  0060  F007  FFE3   	movff	btemp,plusw1
 25687  0151DE  6A01               	clrf	btemp^0,c
 25688  0151E0  0EFC               	movlw	-4
 25689  0151E2  50E3               	movf	plusw1,w,c
 25690  0151E4  2001               	addwfc	btemp^0,w,c
 25691  0151E6  6E01               	movwf	btemp^0,c
 25692  0151E8  0EFC               	movlw	-4
 25693  0151EA  0060  F007  FFE3   	movff	btemp,plusw1
 25694  0151F0                     l8334:
 25695                           
 25696                           ;stkvar	_new_exp @ sp[(-13)+8]
 25697  0151F0  0EFC               	movlw	-4
 25698  0151F2  BEE3               	btfsc	plusw1,7,c
 25699  0151F4  D01B               	goto	l8340
 25700  0151F6  0EFC               	movlw	-4
 25701  0151F8  50E3               	movf	plusw1,w,c
 25702  0151FA  E104               	bnz	u6750
 25703  0151FC  0EFB               	movlw	-5
 25704  0151FE  28E3               	incf	plusw1,w,c
 25705  015200  A0D8               	btfss	status,0,c
 25706  015202  D014               	goto	l8340
 25707  015204                     u6750:
 25708  015204  0EFF               	movlw	255
 25709  015206  6E0B               	movwf	(btemp+10)^0,c
 25710  015208  0E00               	movlw	0
 25711  01520A  6E0C               	movwf	(btemp+11)^0,c
 25712                           
 25713                           ;stkvar	_new_exp @ sp[(-13)+8]
 25714  01520C  0EFB               	movlw	-5
 25715  01520E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25716  015214  0EFC               	movlw	-4
 25717  015216  0060  F033  FFE3   	movff	btemp+11,plusw1
 25718                           
 25719                           ;stkvar	_b @ sp[(-13)+-4]
 25720  01521C  0EEF               	movlw	-17
 25721  01521E  6AE3               	clrf	plusw1,c
 25722  015220  0EF0               	movlw	-16
 25723  015222  6AE3               	clrf	plusw1,c
 25724  015224  0EF1               	movlw	-15
 25725  015226  6AE3               	clrf	plusw1,c
 25726  015228  0EF2               	movlw	-14
 25727  01522A  6AE3               	clrf	plusw1,c
 25728  01522C                     l8340:
 25729                           
 25730                           ;stkvar	_new_exp @ sp[(-13)+8]
 25731  01522C  0EFC               	movlw	-4
 25732  01522E  BEE3               	btfsc	plusw1,7,c
 25733  015230  D007               	goto	u6760
 25734  015232  0EFC               	movlw	-4
 25735  015234  50E3               	movf	plusw1,w,c
 25736  015236  E112               	bnz	l8346
 25737  015238  0EFB               	movlw	-5
 25738  01523A  04E3               	decf	plusw1,w,c
 25739  01523C  B0D8               	btfsc	status,0,c
 25740  01523E  D00E               	goto	l8346
 25741  015240                     u6760:
 25742                           
 25743                           ;stkvar	_new_exp @ sp[(-13)+8]
 25744  015240  0EFB               	movlw	-5
 25745  015242  6AE3               	clrf	plusw1,c
 25746  015244  0EFC               	movlw	-4
 25747  015246  6AE3               	clrf	plusw1,c
 25748                           
 25749                           ;stkvar	_b @ sp[(-13)+-4]
 25750  015248  0EEF               	movlw	-17
 25751  01524A  6AE3               	clrf	plusw1,c
 25752  01524C  0EF0               	movlw	-16
 25753  01524E  6AE3               	clrf	plusw1,c
 25754  015250  0EF1               	movlw	-15
 25755  015252  6AE3               	clrf	plusw1,c
 25756  015254  0EF2               	movlw	-14
 25757  015256  6AE3               	clrf	plusw1,c
 25758                           
 25759                           ;stkvar	_sign @ sp[(-13)+12]
 25760  015258  0EFF               	movlw	-1
 25761  01525A  6AE3               	clrf	plusw1,c
 25762  01525C                     l8346:
 25763                           
 25764                           ;stkvar	_new_exp @ sp[(-13)+8]
 25765                           ;stkvar	_bexp @ sp[(-13)+11]
 25766  01525C  0EFB               	movlw	-5
 25767  01525E  006F FF8C  F001    	movff	plusw1,btemp
 25768  015264  0EFE               	movlw	-2
 25769  015266  0060  F007  FFE3   	movff	btemp,plusw1
 25770                           
 25771                           ;stkvar	_bexp @ sp[(-13)+11]
 25772  01526C  0EFE               	movlw	-2
 25773  01526E  A0E3               	btfss	plusw1,0,c
 25774  015270  D009               	goto	l8352
 25775                           
 25776                           ;stkvar	_b @ sp[(-13)+-4]
 25777  015272  0EF1               	movlw	241
 25778  015274  24E1               	addwf	fsr1l,w,c
 25779  015276  6ED9               	movwf	fsr2l,c
 25780  015278  0EFF               	movlw	255
 25781  01527A  20E2               	addwfc	fsr1h,w,c
 25782  01527C  6EDA               	movwf	fsr2h,c
 25783  01527E  0E00               	movlw	0
 25784  015280  8EDB               	bsf	plusw2,7,c
 25785  015282  D008               	goto	l8354
 25786  015284                     l8352:
 25787                           
 25788                           ;stkvar	_b @ sp[(-13)+-4]
 25789  015284  0EF1               	movlw	241
 25790  015286  24E1               	addwf	fsr1l,w,c
 25791  015288  6ED9               	movwf	fsr2l,c
 25792  01528A  0EFF               	movlw	255
 25793  01528C  20E2               	addwfc	fsr1h,w,c
 25794  01528E  6EDA               	movwf	fsr2h,c
 25795  015290  0E7F               	movlw	127
 25796  015292  16DF               	andwf	indf2,f,c
 25797  015294                     l8354:
 25798                           
 25799                           ;stkvar	_b @ sp[(-13)+-4]
 25800  015294  0EF2               	movlw	242
 25801  015296  24E1               	addwf	fsr1l,w,c
 25802  015298  6ED9               	movwf	fsr2l,c
 25803  01529A  0EFF               	movlw	255
 25804  01529C  20E2               	addwfc	fsr1h,w,c
 25805  01529E  6EDA               	movwf	fsr2h,c
 25806                           
 25807                           ;stkvar	_bexp @ sp[(-13)+11]
 25808  0152A0  0EFE               	movlw	-2
 25809  0152A2  006F FF8C  F00C    	movff	plusw1,btemp+11
 25810  0152A8  90D8               	bcf	status,0,c
 25811  0152AA  300C               	rrcf	(btemp+11)^0,w,c
 25812  0152AC  6EDF               	movwf	indf2,c
 25813  0152AE  D644               	goto	l8252
 25814  0152B0                     l2985:
 25815                           
 25816                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25817  0152B0  0EEB               	movlw	235
 25818  0152B2  26E1               	addwf	fsr1l,f,c
 25819  0152B4  0EFF               	movlw	255
 25820  0152B6  22E2               	addwfc	fsr1h,f,c
 25821  0152B8  0012               	return		;funcret
 25822  0152BA                     __end_of___fldiv:
 25823                           	opt callstack 0
 25824                           
 25825 ;; *************** function ___flge *****************
 25826 ;; Defined at:
 25827 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25828 ;; Parameters:    Size  Location     Type
 25829 ;;  ff1             4  [STACK] unsigned char 
 25830 ;;  ff2             4  [STACK] unsigned char 
 25831 ;; Auto vars:     Size  Location     Type
 25832 ;;		None
 25833 ;; Return value:  Size  Location     Type
 25834 ;;		None               void
 25835 ;; Registers used:
 25836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25837 ;; Tracked objects:
 25838 ;;		On entry : 0/1
 25839 ;;		On exit  : 0/0
 25840 ;;		Unchanged: 0/0
 25841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25846 ;;Total ram usage:        0 bytes
 25847 ;; Hardware stack levels used:    1
 25848 ;; Hardware stack levels required when called:   15
 25849 ;; This function calls:
 25850 ;;		Nothing
 25851 ;; This function is called by:
 25852 ;;		_main
 25853 ;;		_calc_ror_data
 25854 ;;		_check_day_time
 25855 ;;		_calc_bsoc
 25856 ;;		_efgtoa
 25857 ;; This function uses a reentrant model
 25858 ;;
 25859                           
 25860                           	psect	text101
 25861  018FC0                     __ptext101:
 25862                           	opt callstack 0
 25863  018FC0                     ___flge:
 25864                           	opt callstack 0
 25865                           
 25866                           ;stkvar	_ff1 @ sp[(0)+-4]
 25867                           
 25868                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25869                           ;incstack = 0
 25870 ;; hardware stack exceeded
 25871  018FC0  50E1               	movf	fsr1l,w,c
 25872  018FC2  0FFC               	addlw	-4
 25873  018FC4  6ED9               	movwf	fsr2l,c
 25874  018FC6  50E2               	movf	fsr1h,w,c
 25875  018FC8  6EDA               	movwf	fsr2h,c
 25876  018FCA  0EFF               	movlw	255
 25877  018FCC  22DA               	addwfc	fsr2h,f,c
 25878  018FCE  0E00               	movlw	0
 25879  018FD0  14DE               	andwf	postinc2,w,c
 25880  018FD2  6E09               	movwf	(btemp+8)^0,c
 25881  018FD4  0E00               	movlw	0
 25882  018FD6  14DE               	andwf	postinc2,w,c
 25883  018FD8  6E0A               	movwf	(btemp+9)^0,c
 25884  018FDA  0E80               	movlw	128
 25885  018FDC  14DE               	andwf	postinc2,w,c
 25886  018FDE  6E0B               	movwf	(btemp+10)^0,c
 25887  018FE0  0E7F               	movlw	127
 25888  018FE2  14DE               	andwf	postinc2,w,c
 25889  018FE4  6E0C               	movwf	(btemp+11)^0,c
 25890  018FE6  5009               	movf	(btemp+8)^0,w,c
 25891  018FE8  100A               	iorwf	(btemp+9)^0,w,c
 25892  018FEA  100B               	iorwf	(btemp+10)^0,w,c
 25893  018FEC  100C               	iorwf	(btemp+11)^0,w,c
 25894  018FEE  A4D8               	btfss	status,2,c
 25895  018FF0  D008               	goto	l8628
 25896                           
 25897                           ;stkvar	_ff1 @ sp[(0)+-4]
 25898  018FF2  0EFC               	movlw	-4
 25899  018FF4  6AE3               	clrf	plusw1,c
 25900  018FF6  0EFD               	movlw	-3
 25901  018FF8  6AE3               	clrf	plusw1,c
 25902  018FFA  0EFE               	movlw	-2
 25903  018FFC  6AE3               	clrf	plusw1,c
 25904  018FFE  0EFF               	movlw	-1
 25905  019000  6AE3               	clrf	plusw1,c
 25906  019002                     l8628:
 25907                           
 25908                           ;stkvar	_ff2 @ sp[(0)+-8]
 25909  019002  50E1               	movf	fsr1l,w,c
 25910  019004  0FF8               	addlw	-8
 25911  019006  6ED9               	movwf	fsr2l,c
 25912  019008  50E2               	movf	fsr1h,w,c
 25913  01900A  6EDA               	movwf	fsr2h,c
 25914  01900C  0EFF               	movlw	255
 25915  01900E  22DA               	addwfc	fsr2h,f,c
 25916  019010  0E00               	movlw	0
 25917  019012  14DE               	andwf	postinc2,w,c
 25918  019014  6E09               	movwf	(btemp+8)^0,c
 25919  019016  0E00               	movlw	0
 25920  019018  14DE               	andwf	postinc2,w,c
 25921  01901A  6E0A               	movwf	(btemp+9)^0,c
 25922  01901C  0E80               	movlw	128
 25923  01901E  14DE               	andwf	postinc2,w,c
 25924  019020  6E0B               	movwf	(btemp+10)^0,c
 25925  019022  0E7F               	movlw	127
 25926  019024  14DE               	andwf	postinc2,w,c
 25927  019026  6E0C               	movwf	(btemp+11)^0,c
 25928  019028  5009               	movf	(btemp+8)^0,w,c
 25929  01902A  100A               	iorwf	(btemp+9)^0,w,c
 25930  01902C  100B               	iorwf	(btemp+10)^0,w,c
 25931  01902E  100C               	iorwf	(btemp+11)^0,w,c
 25932  019030  A4D8               	btfss	status,2,c
 25933  019032  D008               	goto	l2666
 25934                           
 25935                           ;stkvar	_ff2 @ sp[(0)+-8]
 25936  019034  0EF8               	movlw	-8
 25937  019036  6AE3               	clrf	plusw1,c
 25938  019038  0EF9               	movlw	-7
 25939  01903A  6AE3               	clrf	plusw1,c
 25940  01903C  0EFA               	movlw	-6
 25941  01903E  6AE3               	clrf	plusw1,c
 25942  019040  0EFB               	movlw	-5
 25943  019042  6AE3               	clrf	plusw1,c
 25944  019044                     l2666:
 25945                           
 25946                           ;stkvar	_ff1 @ sp[(0)+-4]
 25947  019044  0EFF               	movlw	-1
 25948  019046  AEE3               	btfss	plusw1,7,c
 25949  019048  D024               	goto	l8634
 25950                           
 25951                           ;stkvar	_ff1 @ sp[(0)+-4]
 25952  01904A  0E00               	movlw	0
 25953  01904C  6E09               	movwf	(btemp+8)^0,c
 25954  01904E  0E00               	movlw	0
 25955  019050  6E0A               	movwf	(btemp+9)^0,c
 25956  019052  0E00               	movlw	0
 25957  019054  6E0B               	movwf	(btemp+10)^0,c
 25958  019056  0E80               	movlw	128
 25959  019058  6E0C               	movwf	(btemp+11)^0,c
 25960  01905A  0EFC               	movlw	-4
 25961  01905C  50E3               	movf	plusw1,w,c
 25962  01905E  5E09               	subwf	(btemp+8)^0,f,c
 25963  019060  0EFD               	movlw	-3
 25964  019062  50E3               	movf	plusw1,w,c
 25965  019064  5A0A               	subwfb	(btemp+9)^0,f,c
 25966  019066  0EFE               	movlw	-2
 25967  019068  50E3               	movf	plusw1,w,c
 25968  01906A  5A0B               	subwfb	(btemp+10)^0,f,c
 25969  01906C  0EFF               	movlw	-1
 25970  01906E  50E3               	movf	plusw1,w,c
 25971  019070  5A0C               	subwfb	(btemp+11)^0,f,c
 25972                           
 25973                           ;stkvar	_ff1 @ sp[(0)+-4]
 25974  019072  0EFC               	movlw	-4
 25975  019074  0060  F027  FFE3   	movff	btemp+8,plusw1
 25976  01907A  0EFD               	movlw	-3
 25977  01907C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25978  019082  0EFE               	movlw	-2
 25979  019084  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25980  01908A  0EFF               	movlw	-1
 25981  01908C  0060  F033  FFE3   	movff	btemp+11,plusw1
 25982  019092                     l8634:
 25983                           
 25984                           ;stkvar	_ff2 @ sp[(0)+-8]
 25985  019092  0EFB               	movlw	-5
 25986  019094  AEE3               	btfss	plusw1,7,c
 25987  019096  D024               	goto	l8638
 25988                           
 25989                           ;stkvar	_ff2 @ sp[(0)+-8]
 25990  019098  0E00               	movlw	0
 25991  01909A  6E09               	movwf	(btemp+8)^0,c
 25992  01909C  0E00               	movlw	0
 25993  01909E  6E0A               	movwf	(btemp+9)^0,c
 25994  0190A0  0E00               	movlw	0
 25995  0190A2  6E0B               	movwf	(btemp+10)^0,c
 25996  0190A4  0E80               	movlw	128
 25997  0190A6  6E0C               	movwf	(btemp+11)^0,c
 25998  0190A8  0EF8               	movlw	-8
 25999  0190AA  50E3               	movf	plusw1,w,c
 26000  0190AC  5E09               	subwf	(btemp+8)^0,f,c
 26001  0190AE  0EF9               	movlw	-7
 26002  0190B0  50E3               	movf	plusw1,w,c
 26003  0190B2  5A0A               	subwfb	(btemp+9)^0,f,c
 26004  0190B4  0EFA               	movlw	-6
 26005  0190B6  50E3               	movf	plusw1,w,c
 26006  0190B8  5A0B               	subwfb	(btemp+10)^0,f,c
 26007  0190BA  0EFB               	movlw	-5
 26008  0190BC  50E3               	movf	plusw1,w,c
 26009  0190BE  5A0C               	subwfb	(btemp+11)^0,f,c
 26010                           
 26011                           ;stkvar	_ff2 @ sp[(0)+-8]
 26012  0190C0  0EF8               	movlw	-8
 26013  0190C2  0060  F027  FFE3   	movff	btemp+8,plusw1
 26014  0190C8  0EF9               	movlw	-7
 26015  0190CA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26016  0190D0  0EFA               	movlw	-6
 26017  0190D2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26018  0190D8  0EFB               	movlw	-5
 26019  0190DA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26020  0190E0                     l8638:
 26021                           
 26022                           ;stkvar	_ff1 @ sp[(0)+-4]
 26023  0190E0  0EFF               	movlw	-1
 26024  0190E2  7EE3               	btg	plusw1,7,c
 26025                           
 26026                           ;stkvar	_ff2 @ sp[(0)+-8]
 26027  0190E4  0EFB               	movlw	-5
 26028  0190E6  7EE3               	btg	plusw1,7,c
 26029                           
 26030                           ;stkvar	_ff2 @ sp[(0)+-8]
 26031                           ;stkvar	_ff1 @ sp[(0)+-4]
 26032  0190E8  50E1               	movf	fsr1l,w,c
 26033  0190EA  0FFC               	addlw	-4
 26034  0190EC  6ED9               	movwf	fsr2l,c
 26035  0190EE  50E2               	movf	fsr1h,w,c
 26036  0190F0  6EDA               	movwf	fsr2h,c
 26037  0190F2  0EFF               	movlw	255
 26038  0190F4  22DA               	addwfc	fsr2h,f,c
 26039  0190F6  0EF8               	movlw	-8
 26040  0190F8  50E3               	movf	plusw1,w,c
 26041  0190FA  5CDE               	subwf	postinc2,w,c
 26042  0190FC  0EF9               	movlw	-7
 26043  0190FE  50E3               	movf	plusw1,w,c
 26044  019100  58DE               	subwfb	postinc2,w,c
 26045  019102  0EFA               	movlw	-6
 26046  019104  50E3               	movf	plusw1,w,c
 26047  019106  58DE               	subwfb	postinc2,w,c
 26048  019108  0EFB               	movlw	-5
 26049  01910A  50E3               	movf	plusw1,w,c
 26050  01910C  58DE               	subwfb	postinc2,w,c
 26051  01910E  B0D8               	btfsc	status,0,c
 26052  019110  D002               	goto	l8646
 26053  019112  9001               	bcf	btemp& (0+255),0,c
 26054  019114  D001               	goto	l2673
 26055  019116                     l8646:
 26056  019116  8001               	bsf	btemp& (0+255),0,c
 26057  019118                     l2673:
 26058                           
 26059                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 26060  019118  0EF8               	movlw	248
 26061  01911A  26E1               	addwf	fsr1l,f,c
 26062  01911C  0EFF               	movlw	255
 26063  01911E  22E2               	addwfc	fsr1h,f,c
 26064  019120  0012               	return		;funcret
 26065  019122                     __end_of___flge:
 26066                           	opt callstack 0
 26067                           
 26068 ;; *************** function _calc_model_data *****************
 26069 ;; Defined at:
 26070 ;;		line 67 in file "mbmc.c"
 26071 ;; Parameters:    Size  Location     Type
 26072 ;;		None
 26073 ;; Auto vars:     Size  Location     Type
 26074 ;;		None
 26075 ;; Return value:  Size  Location     Type
 26076 ;;                  1  [STACK] void 
 26077 ;; Registers used:
 26078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26079 ;; Tracked objects:
 26080 ;;		On entry : 0/1
 26081 ;;		On exit  : 3F/39
 26082 ;;		Unchanged: 0/0
 26083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26088 ;;Total ram usage:        0 bytes
 26089 ;; Hardware stack levels used:    1
 26090 ;; Hardware stack levels required when called:   18
 26091 ;; This function calls:
 26092 ;;		___fladd
 26093 ;;		___flmul
 26094 ;;		___flsub
 26095 ;;		_lp_filter
 26096 ;;		_start_bsoc
 26097 ;;		_stop_bsoc
 26098 ;; This function is called by:
 26099 ;;		_main
 26100 ;; This function uses a reentrant model
 26101 ;;
 26102                           
 26103                           	psect	text102
 26104  015C4E                     __ptext102:
 26105                           	opt callstack 0
 26106  015C4E                     _calc_model_data:
 26107                           	opt callstack 12
 26108                           
 26109                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 26110                           
 26111                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26112                           ;incstack = 0
 26113  015C4E  ECEC  F0E0         	call	_stop_bsoc	;wreg free
 26114                           
 26115                           ; BSR set to: 57
 26116                           ;mbmc.c: 72:  if (!V.calib) {
 26117  015C52  0101               	movlb	1	; () banked
 26118  015C54  51DC               	movf	(_V+172)& (0+255),w,b	;volatile
 26119  015C56  A4D8               	btfss	status,2,c
 26120  015C58  D219               	goto	l11070
 26121                           
 26122                           ; BSR set to: 1
 26123                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 26124  015C5A  EE21  F2FF         	lfsr	2,_C
 26125  015C5E  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 26126  015C64  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 26127  015C6A  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 26128  015C70  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 26129                           
 26130                           ; BSR set to: 1
 26131                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 26132  015C76  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 26133  015C7C  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 26134  015C82  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 26135  015C88  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 26136  015C8E  EE21  F343         	lfsr	2,_C+68	;volatile
 26137  015C92  006F FF7B FFE6     	movff	postinc2,postinc1
 26138  015C98  006F FF7B FFE6     	movff	postinc2,postinc1
 26139  015C9E  006F FF7B FFE6     	movff	postinc2,postinc1
 26140  015CA4  006F FF7B FFE6     	movff	postinc2,postinc1
 26141  015CAA  EC03  F0DB         	call	___flsub	;wreg free
 26142  015CAE  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 26143  015CB4  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 26144  015CBA  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 26145  015CC0  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 26146                           
 26147                           ;mbmc.c: 75:   bcror = C.c_bat;
 26148  015CC6  C743  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 26149  015CCA  C744  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 26150  015CCE  C745  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 26151  015CD2  C746  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 26152                           
 26153                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 26154  015CD6  EE21  F303         	lfsr	2,_C+4	;volatile
 26155  015CDA  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 26156  015CE0  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 26157  015CE6  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 26158  015CEC  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 26159                           
 26160                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 26161  015CF2  EE21  F30F         	lfsr	2,_C+16	;volatile
 26162  015CF6  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 26163  015CFC  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 26164  015D02  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 26165  015D08  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 26166                           
 26167                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 26168  015D0E  EE21  F333         	lfsr	2,_C+52	;volatile
 26169  015D12  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 26170  015D18  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 26171  015D1E  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 26172  015D24  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 26173                           
 26174                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 26175  015D2A  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 26176  015D30  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 26177  015D36  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 26178  015D3C  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 26179  015D42  EE21  F353         	lfsr	2,_C+84	;volatile
 26180  015D46  006F FF7B FFE6     	movff	postinc2,postinc1
 26181  015D4C  006F FF7B FFE6     	movff	postinc2,postinc1
 26182  015D52  006F FF7B FFE6     	movff	postinc2,postinc1
 26183  015D58  006F FF7B FFE6     	movff	postinc2,postinc1
 26184  015D5E  EC03  F0DB         	call	___flsub	;wreg free
 26185  015D62  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 26186  015D68  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 26187  015D6E  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 26188  015D74  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 26189                           
 26190                           ;mbmc.c: 80:   bvror = C.v_bat;
 26191  015D7A  C753  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 26192  015D7E  C754  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 26193  015D82  C755  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 26194  015D86  C756  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 26195                           
 26196                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 26197  015D8A  EE21  F313         	lfsr	2,_C+20	;volatile
 26198  015D8E  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 26199  015D94  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 26200  015D9A  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 26201  015DA0  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 26202                           
 26203                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 26204  015DA6  EE21  F307         	lfsr	2,_C+8	;volatile
 26205  015DAA  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 26206  015DB0  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 26207  015DB6  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 26208  015DBC  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 26209                           
 26210                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 26211  015DC2  EE21  F32F         	lfsr	2,_C+48	;volatile
 26212  015DC6  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 26213  015DCC  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 26214  015DD2  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 26215  015DD8  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 26216                           
 26217                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 26218  015DDE  0E01               	movlw	1
 26219  015DE0  6EE6               	movwf	postinc1,c
 26220  015DE2  0E10               	movlw	16
 26221  015DE4  6EE6               	movwf	postinc1,c
 26222  015DE6  EE21  F2FF         	lfsr	2,_C
 26223  015DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 26224  015DF0  006F FF7B FFE6     	movff	postinc2,postinc1
 26225  015DF6  006F FF7B FFE6     	movff	postinc2,postinc1
 26226  015DFC  006F FF7B FFE6     	movff	postinc2,postinc1
 26227  015E02  EE21  F303         	lfsr	2,_C+4	;volatile
 26228  015E06  006F FF7B FFE6     	movff	postinc2,postinc1
 26229  015E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 26230  015E12  006F FF7B FFE6     	movff	postinc2,postinc1
 26231  015E18  006F FF7B FFE6     	movff	postinc2,postinc1
 26232  015E1E  EC03  F0DB         	call	___flsub	;wreg free
 26233  015E22  0060  F007  FFE6   	movff	btemp,postinc1
 26234  015E28  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26235  015E2E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26236  015E34  0060  F013  FFE6   	movff	btemp+3,postinc1
 26237  015E3A  EC2B  F0C3         	call	_lp_filter	;wreg free
 26238  015E3E  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 26239  015E44  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 26240  015E4A  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 26241  015E50  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 26242                           
 26243                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 26244  015E56  0E01               	movlw	1
 26245  015E58  6EE6               	movwf	postinc1,c
 26246  015E5A  0E11               	movlw	17
 26247  015E5C  6EE6               	movwf	postinc1,c
 26248  015E5E  EE21  F353         	lfsr	2,_C+84	;volatile
 26249  015E62  006F FF7B FFE6     	movff	postinc2,postinc1
 26250  015E68  006F FF7B FFE6     	movff	postinc2,postinc1
 26251  015E6E  006F FF7B FFE6     	movff	postinc2,postinc1
 26252  015E74  006F FF7B FFE6     	movff	postinc2,postinc1
 26253  015E7A  EE21  F33F         	lfsr	2,_C+64	;volatile
 26254  015E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 26255  015E84  006F FF7B FFE6     	movff	postinc2,postinc1
 26256  015E8A  006F FF7B FFE6     	movff	postinc2,postinc1
 26257  015E90  006F FF7B FFE6     	movff	postinc2,postinc1
 26258  015E96  ECAD  F09E         	call	___flmul	;wreg free
 26259  015E9A  0060  F007  FFE6   	movff	btemp,postinc1
 26260  015EA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26261  015EA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26262  015EAC  0060  F013  FFE6   	movff	btemp+3,postinc1
 26263  015EB2  EC2B  F0C3         	call	_lp_filter	;wreg free
 26264  015EB6  0060  F004  F773   	movff	btemp,_C+116	;volatile
 26265  015EBC  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 26266  015EC2  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 26267  015EC8  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 26268                           
 26269                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 26270  015ECE  0E01               	movlw	1
 26271  015ED0  6EE6               	movwf	postinc1,c
 26272  015ED2  0E12               	movlw	18
 26273  015ED4  6EE6               	movwf	postinc1,c
 26274  015ED6  EE21  F34F         	lfsr	2,_C+80	;volatile
 26275  015EDA  006F FF7B FFE6     	movff	postinc2,postinc1
 26276  015EE0  006F FF7B FFE6     	movff	postinc2,postinc1
 26277  015EE6  006F FF7B FFE6     	movff	postinc2,postinc1
 26278  015EEC  006F FF7B FFE6     	movff	postinc2,postinc1
 26279  015EF2  EE21  F347         	lfsr	2,_C+72	;volatile
 26280  015EF6  006F FF7B FFE6     	movff	postinc2,postinc1
 26281  015EFC  006F FF7B FFE6     	movff	postinc2,postinc1
 26282  015F02  006F FF7B FFE6     	movff	postinc2,postinc1
 26283  015F08  006F FF7B FFE6     	movff	postinc2,postinc1
 26284  015F0E  ECAD  F09E         	call	___flmul	;wreg free
 26285  015F12  0060  F007  FFE6   	movff	btemp,postinc1
 26286  015F18  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26287  015F1E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26288  015F24  0060  F013  FFE6   	movff	btemp+3,postinc1
 26289  015F2A  EC2B  F0C3         	call	_lp_filter	;wreg free
 26290  015F2E  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 26291  015F34  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 26292  015F3A  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 26293  015F40  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 26294                           
 26295                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 26296  015F46  0E01               	movlw	1
 26297  015F48  6EE6               	movwf	postinc1,c
 26298  015F4A  0E13               	movlw	19
 26299  015F4C  6EE6               	movwf	postinc1,c
 26300  015F4E  0E00               	movlw	0
 26301  015F50  6EE6               	movwf	postinc1,c
 26302  015F52  0E00               	movlw	0
 26303  015F54  6EE6               	movwf	postinc1,c
 26304  015F56  0E60               	movlw	96
 26305  015F58  6EE6               	movwf	postinc1,c
 26306  015F5A  0EC1               	movlw	193
 26307  015F5C  6EE6               	movwf	postinc1,c
 26308  015F5E  EE21  F363         	lfsr	2,_C+100	;volatile
 26309  015F62  006F FF7B FFE6     	movff	postinc2,postinc1
 26310  015F68  006F FF7B FFE6     	movff	postinc2,postinc1
 26311  015F6E  006F FF7B FFE6     	movff	postinc2,postinc1
 26312  015F74  006F FF7B FFE6     	movff	postinc2,postinc1
 26313  015F7A  EE21  F33F         	lfsr	2,_C+64	;volatile
 26314  015F7E  006F FF7B FFE6     	movff	postinc2,postinc1
 26315  015F84  006F FF7B FFE6     	movff	postinc2,postinc1
 26316  015F8A  006F FF7B FFE6     	movff	postinc2,postinc1
 26317  015F90  006F FF7B FFE6     	movff	postinc2,postinc1
 26318  015F96  ECAD  F09E         	call	___flmul	;wreg free
 26319  015F9A  0060  F007  FFE6   	movff	btemp,postinc1
 26320  015FA0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26321  015FA6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26322  015FAC  0060  F013  FFE6   	movff	btemp+3,postinc1
 26323  015FB2  ECC2  F0A2         	call	___fladd	;wreg free
 26324  015FB6  0060  F007  FFE6   	movff	btemp,postinc1
 26325  015FBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26326  015FC2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26327  015FC8  0060  F013  FFE6   	movff	btemp+3,postinc1
 26328  015FCE  EC2B  F0C3         	call	_lp_filter	;wreg free
 26329  015FD2  0060  F004  F777   	movff	btemp,_C+120	;volatile
 26330  015FD8  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 26331  015FDE  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 26332  015FE4  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 26333                           
 26334                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 26335  015FEA  0E01               	movlw	1
 26336  015FEC  6EE6               	movwf	postinc1,c
 26337  015FEE  0E14               	movlw	20
 26338  015FF0  6EE6               	movwf	postinc1,c
 26339  015FF2  EE21  F353         	lfsr	2,_C+84	;volatile
 26340  015FF6  006F FF7B FFE6     	movff	postinc2,postinc1
 26341  015FFC  006F FF7B FFE6     	movff	postinc2,postinc1
 26342  016002  006F FF7B FFE6     	movff	postinc2,postinc1
 26343  016008  006F FF7B FFE6     	movff	postinc2,postinc1
 26344  01600E  EE21  F343         	lfsr	2,_C+68	;volatile
 26345  016012  006F FF7B FFE6     	movff	postinc2,postinc1
 26346  016018  006F FF7B FFE6     	movff	postinc2,postinc1
 26347  01601E  006F FF7B FFE6     	movff	postinc2,postinc1
 26348  016024  006F FF7B FFE6     	movff	postinc2,postinc1
 26349  01602A  ECAD  F09E         	call	___flmul	;wreg free
 26350  01602E  0060  F007  FFE6   	movff	btemp,postinc1
 26351  016034  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26352  01603A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26353  016040  0060  F013  FFE6   	movff	btemp+3,postinc1
 26354  016046  EC2B  F0C3         	call	_lp_filter	;wreg free
 26355  01604A  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 26356  016050  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 26357  016056  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 26358  01605C  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 26359                           
 26360                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 26361  016062  EE21  F377         	lfsr	2,_C+120	;volatile
 26362  016066  0E03               	movlw	3
 26363  016068  AEDB               	btfss	plusw2,7,c
 26364  01606A  D010               	goto	l11070
 26365                           
 26366                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 26367  01606C  0E17               	movlw	23
 26368  01606E  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 26369  016074  0EB7               	movlw	183
 26370  016076  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 26371  01607C  0ED1               	movlw	209
 26372  01607E  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 26373  016084  0E38               	movlw	56
 26374  016086  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 26375  01608C                     l11070:
 26376                           
 26377                           ;mbmc.c: 95:  start_bsoc();
 26378  01608C  EC77  F0DF         	call	_start_bsoc	;wreg free
 26379                           
 26380                           ; BSR set to: 57
 26381                           ;mbmc.c: 96:  C.update = 1;
 26382  016090  0E01               	movlw	1
 26383  016092  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 26384                           
 26385                           ; BSR set to: 57
 26386                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26387  016098  0012               	return		;funcret
 26388  01609A                     __end_of_calc_model_data:
 26389                           	opt callstack 0
 26390                           
 26391 ;; *************** function _stop_bsoc *****************
 26392 ;; Defined at:
 26393 ;;		line 127 in file "bsoc.c"
 26394 ;; Parameters:    Size  Location     Type
 26395 ;;		None
 26396 ;; Auto vars:     Size  Location     Type
 26397 ;;		None
 26398 ;; Return value:  Size  Location     Type
 26399 ;;                  1  [STACK] void 
 26400 ;; Registers used:
 26401 ;;		None
 26402 ;; Tracked objects:
 26403 ;;		On entry : 0/1
 26404 ;;		On exit  : 3F/39
 26405 ;;		Unchanged: 0/0
 26406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26411 ;;Total ram usage:        0 bytes
 26412 ;; Hardware stack levels used:    1
 26413 ;; Hardware stack levels required when called:   15
 26414 ;; This function calls:
 26415 ;;		Nothing
 26416 ;; This function is called by:
 26417 ;;		_calc_model_data
 26418 ;; This function uses a reentrant model
 26419 ;;
 26420                           
 26421                           	psect	text103
 26422  01C1D8                     __ptext103:
 26423                           	opt callstack 0
 26424  01C1D8                     _stop_bsoc:
 26425                           	opt callstack 14
 26426                           
 26427                           ;bsoc.c: 130:  PIE6bits.TMR3IE = 0;
 26428                           
 26429                           ; BSR set to: 57
 26430                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26431                           ;incstack = 0
 26432  01C1D8  0139               	movlb	57	; () banked
 26433  01C1DA  9D96               	bcf	150,6,b	;volatile
 26434                           
 26435                           ; BSR set to: 57
 26436                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 26437  01C1DC  0012               	return		;funcret
 26438  01C1DE                     __end_of_stop_bsoc:
 26439                           	opt callstack 0
 26440                           
 26441 ;; *************** function _start_bsoc *****************
 26442 ;; Defined at:
 26443 ;;		line 118 in file "bsoc.c"
 26444 ;; Parameters:    Size  Location     Type
 26445 ;;		None
 26446 ;; Auto vars:     Size  Location     Type
 26447 ;;		None
 26448 ;; Return value:  Size  Location     Type
 26449 ;;                  1  [STACK] void 
 26450 ;; Registers used:
 26451 ;;		wreg, status,2, status,0, btemp+11
 26452 ;; Tracked objects:
 26453 ;;		On entry : 0/1
 26454 ;;		On exit  : 3F/39
 26455 ;;		Unchanged: 0/0
 26456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26461 ;;Total ram usage:        0 bytes
 26462 ;; Hardware stack levels used:    1
 26463 ;; Hardware stack levels required when called:   15
 26464 ;; This function calls:
 26465 ;;		Nothing
 26466 ;; This function is called by:
 26467 ;;		_calc_model_data
 26468 ;; This function uses a reentrant model
 26469 ;;
 26470                           
 26471                           	psect	text104
 26472  01BEEE                     __ptext104:
 26473                           	opt callstack 0
 26474  01BEEE                     _start_bsoc:
 26475                           	opt callstack 14
 26476                           
 26477                           ;bsoc.c: 121:  PIE6bits.TMR3IE = 1;
 26478                           
 26479                           ; BSR set to: 57
 26480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26481                           ;incstack = 0
 26482  01BEEE  0139               	movlb	57	; () banked
 26483  01BEF0  8D96               	bsf	150,6,b	;volatile
 26484                           
 26485                           ; BSR set to: 57
 26486  01BEF2  A4BE               	btfss	190,2,c	;volatile
 26487  01BEF4  D002               	goto	u9650
 26488  01BEF6  0E01               	movlw	1
 26489  01BEF8  D001               	goto	u9656
 26490  01BEFA                     u9650:
 26491  01BEFA  0E00               	movlw	0
 26492  01BEFC                     u9656:
 26493  01BEFC  0AFF               	xorlw	255
 26494  01BEFE  6E0C               	movwf	(btemp+11)^0,c
 26495  01BF00  460C               	rlncf	(btemp+11)^0,f,c
 26496  01BF02  460C               	rlncf	(btemp+11)^0,f,c
 26497  01BF04  50BE               	movf	190,w,c	;volatile
 26498  01BF06  180C               	xorwf	(btemp+11)^0,w,c
 26499  01BF08  0BFB               	andlw	-5
 26500  01BF0A  180C               	xorwf	(btemp+11)^0,w,c
 26501  01BF0C  6EBE               	movwf	190,c	;volatile
 26502                           
 26503                           ; BSR set to: 57
 26504                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 26505  01BF0E  0012               	return		;funcret
 26506  01BF10                     __end_of_start_bsoc:
 26507                           	opt callstack 0
 26508                           
 26509 ;; *************** function _lp_filter *****************
 26510 ;; Defined at:
 26511 ;;		line 29 in file "mbmc.c"
 26512 ;; Parameters:    Size  Location     Type
 26513 ;;  new             4  [STACK] const float 
 26514 ;;  bn              1  [STACK] const unsigned char 
 26515 ;;  slow            1  [STACK] const char 
 26516 ;; Auto vars:     Size  Location     Type
 26517 ;;  lp_speed        4  [STACK] float 
 26518 ;; Return value:  Size  Location     Type
 26519 ;;                  4  [STACK] float 
 26520 ;; Registers used:
 26521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26522 ;; Tracked objects:
 26523 ;;		On entry : 0/1
 26524 ;;		On exit  : 0/0
 26525 ;;		Unchanged: 0/0
 26526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26531 ;;Total ram usage:        0 bytes
 26532 ;; Hardware stack levels used:    1
 26533 ;; Hardware stack levels required when called:   17
 26534 ;; This function calls:
 26535 ;;		___fladd
 26536 ;;		___flmul
 26537 ;;		___flsub
 26538 ;; This function is called by:
 26539 ;;		_main
 26540 ;;		_convert_adc_data
 26541 ;;		_calc_model_data
 26542 ;; This function uses a reentrant model
 26543 ;;
 26544                           
 26545                           	psect	text105
 26546  018656                     __ptext105:
 26547                           	opt callstack 0
 26548  018656                     _lp_filter:
 26549                           	opt callstack 0
 26550                           
 26551                           ; BSR set to: 57
 26552                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26553  018656  52E6               	movf	postinc1,f,c
 26554  018658  52E6               	movf	postinc1,f,c
 26555  01865A  52E6               	movf	postinc1,f,c
 26556  01865C  52E6               	movf	postinc1,f,c
 26557                           
 26558                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 26559                           ;stkvar	_bn @ sp[(-4)+-5]
 26560                           
 26561                           ;incstack = 0
 26562  01865E  0EF7               	movlw	-9
 26563  018660  006F FF8C  F001    	movff	plusw1,btemp
 26564  018666  0E14               	movlw	20
 26565  018668  6401               	cpfsgt	btemp^0,c
 26566  01866A  D011               	goto	l10428
 26567  01866C                     u9560:
 26568                           
 26569                           ;mbmc.c: 35:   return new;
 26570                           ;stkvar	_new @ sp[(-4)+-4]
 26571  01866C  0EF8               	movlw	-8
 26572  01866E  006F FF8C  F001    	movff	plusw1,btemp
 26573  018674  0EF9               	movlw	-7
 26574  018676  006F FF8C  F002    	movff	plusw1,btemp+1
 26575  01867C  0EFA               	movlw	-6
 26576  01867E  006F FF8C  F003    	movff	plusw1,btemp+2
 26577  018684  0EFB               	movlw	-5
 26578  018686  006F FF8C  F004    	movff	plusw1,btemp+3
 26579  01868C  D0BD               	goto	l1834
 26580  01868E                     l10428:
 26581                           
 26582                           ;mbmc.c: 37:  if (slow == (-1)) {
 26583                           ;stkvar	_slow @ sp[(-4)+-6]
 26584  01868E  0EF6               	movlw	-10
 26585  018690  28E3               	incf	plusw1,w,c
 26586  018692  A4D8               	btfss	status,2,c
 26587  018694  D012               	goto	l10436
 26588                           
 26589                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 26590                           ;stkvar	_bn @ sp[(-4)+-5]
 26591  018696  0EF7               	movlw	-9
 26592  018698  50E3               	movf	plusw1,w,c
 26593  01869A  0D04               	mullw	4
 26594  01869C  0E00               	movlw	low lp_filter@smooth
 26595  01869E  24F3               	addwf	243,w,c
 26596  0186A0  6ED9               	movwf	fsr2l,c
 26597  0186A2  0E02               	movlw	high lp_filter@smooth
 26598  0186A4  20F4               	addwfc	prodh,w,c
 26599  0186A6  6EDA               	movwf	fsr2h,c
 26600  0186A8  0E00               	movlw	0
 26601  0186AA  6EDE               	movwf	postinc2,c
 26602  0186AC  0E00               	movlw	0
 26603  0186AE  6EDE               	movwf	postinc2,c
 26604  0186B0  0E00               	movlw	0
 26605  0186B2  6EDE               	movwf	postinc2,c
 26606  0186B4  0E00               	movlw	0
 26607  0186B6  6EDD               	movwf	postdec2,c
 26608  0186B8  D7D9               	goto	u9560
 26609  0186BA                     l10436:
 26610                           
 26611                           ;mbmc.c: 42:  if (slow) {
 26612                           ;stkvar	_slow @ sp[(-4)+-6]
 26613  0186BA  0EF6               	movlw	-10
 26614  0186BC  50E3               	movf	plusw1,w,c
 26615  0186BE  B4D8               	btfsc	status,2,c
 26616  0186C0  D006               	goto	l10440
 26617                           
 26618                           ;mbmc.c: 43:   lp_speed = 0.033;
 26619  0186C2  0E02               	movlw	2
 26620  0186C4  6E09               	movwf	(btemp+8)^0,c
 26621  0186C6  0E2B               	movlw	43
 26622  0186C8  6E0A               	movwf	(btemp+9)^0,c
 26623  0186CA  0E07               	movlw	7
 26624  0186CC  D005               	goto	L31
 26625  0186CE                     l10440:
 26626                           
 26627                           ;mbmc.c: 45:   lp_speed = 0.066;
 26628  0186CE  0E02               	movlw	2
 26629  0186D0  6E09               	movwf	(btemp+8)^0,c
 26630  0186D2  0E2B               	movlw	43
 26631  0186D4  6E0A               	movwf	(btemp+9)^0,c
 26632  0186D6  0E87               	movlw	135
 26633  0186D8                     L31:
 26634  0186D8  6E0B               	movwf	(btemp+10)^0,c
 26635  0186DA  0E3D               	movlw	61
 26636  0186DC  6E0C               	movwf	(btemp+11)^0,c
 26637                           
 26638                           ;stkvar	_lp_speed @ sp[(-4)+0]
 26639  0186DE  0EFC               	movlw	-4
 26640  0186E0  0060  F027  FFE3   	movff	btemp+8,plusw1
 26641  0186E6  0EFD               	movlw	-3
 26642  0186E8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26643  0186EE  0EFE               	movlw	-2
 26644  0186F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26645  0186F6  0EFF               	movlw	-1
 26646  0186F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 26647                           
 26648                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 26649                           ;stkvar	_bn @ sp[(-4)+-5]
 26650  0186FE  0EF7               	movlw	-9
 26651  018700  50E3               	movf	plusw1,w,c
 26652  018702  0D04               	mullw	4
 26653  018704  0E00               	movlw	low lp_filter@smooth
 26654  018706  24F3               	addwf	243,w,c
 26655  018708  6ED9               	movwf	fsr2l,c
 26656  01870A  0E02               	movlw	high lp_filter@smooth
 26657  01870C  20F4               	addwfc	prodh,w,c
 26658  01870E  6EDA               	movwf	fsr2h,c
 26659  018710  006F FF7B FFE6     	movff	postinc2,postinc1
 26660  018716  006F FF7B FFE6     	movff	postinc2,postinc1
 26661  01871C  006F FF7B FFE6     	movff	postinc2,postinc1
 26662  018722  006F FF7B FFE6     	movff	postinc2,postinc1
 26663                           
 26664                           ;stkvar	_lp_speed @ sp[(-8)+0]
 26665  018728  0EF8               	movlw	-8
 26666  01872A  006F FF8F FFE6     	movff	plusw1,postinc1
 26667  018730  006F FF8F FFE6     	movff	plusw1,postinc1
 26668  018736  006F FF8F FFE6     	movff	plusw1,postinc1
 26669  01873C  006F FF8F FFE6     	movff	plusw1,postinc1
 26670                           
 26671                           ;stkvar	_bn @ sp[(-12)+-5]
 26672  018742  0EEF               	movlw	-17
 26673  018744  50E3               	movf	plusw1,w,c
 26674  018746  0D04               	mullw	4
 26675  018748  0E00               	movlw	low lp_filter@smooth
 26676  01874A  24F3               	addwf	243,w,c
 26677  01874C  6ED9               	movwf	fsr2l,c
 26678  01874E  0E02               	movlw	high lp_filter@smooth
 26679  018750  20F4               	addwfc	prodh,w,c
 26680  018752  6EDA               	movwf	fsr2h,c
 26681  018754  006F FF7B FFE6     	movff	postinc2,postinc1
 26682  01875A  006F FF7B FFE6     	movff	postinc2,postinc1
 26683  018760  006F FF7B FFE6     	movff	postinc2,postinc1
 26684  018766  006F FF7B FFE6     	movff	postinc2,postinc1
 26685                           
 26686                           ;stkvar	_new @ sp[(-16)+-4]
 26687  01876C  0EEC               	movlw	-20
 26688  01876E  006F FF8F FFE6     	movff	plusw1,postinc1
 26689  018774  006F FF8F FFE6     	movff	plusw1,postinc1
 26690  01877A  006F FF8F FFE6     	movff	plusw1,postinc1
 26691  018780  006F FF8F FFE6     	movff	plusw1,postinc1
 26692  018786  EC03  F0DB         	call	___flsub	;wreg free
 26693  01878A  0060  F007  FFE6   	movff	btemp,postinc1
 26694  018790  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26695  018796  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26696  01879C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26697  0187A2  ECAD  F09E         	call	___flmul	;wreg free
 26698  0187A6  0060  F007  FFE6   	movff	btemp,postinc1
 26699  0187AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26700  0187B2  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26701  0187B8  0060  F013  FFE6   	movff	btemp+3,postinc1
 26702  0187BE  ECC2  F0A2         	call	___fladd	;wreg free
 26703                           
 26704                           ;stkvar	_bn @ sp[(-4)+-5]
 26705  0187C2  0EF7               	movlw	-9
 26706  0187C4  50E3               	movf	plusw1,w,c
 26707  0187C6  0D04               	mullw	4
 26708  0187C8  0E00               	movlw	low lp_filter@smooth
 26709  0187CA  24F3               	addwf	243,w,c
 26710  0187CC  6ED9               	movwf	fsr2l,c
 26711  0187CE  0E02               	movlw	high lp_filter@smooth
 26712  0187D0  20F4               	addwfc	prodh,w,c
 26713  0187D2  6EDA               	movwf	fsr2h,c
 26714  0187D4  0060  F007  FFDE   	movff	btemp,postinc2
 26715  0187DA  0060  F00B  FFDE   	movff	btemp+1,postinc2
 26716  0187E0  0060  F00F  FFDE   	movff	btemp+2,postinc2
 26717  0187E6  0060  F013  FFDD   	movff	btemp+3,postdec2
 26718  0187EC  52DD               	movf	postdec2,f,c
 26719  0187EE  52DD               	movf	postdec2,f,c
 26720  0187F0  006F FF78  F001    	movff	postinc2,btemp
 26721  0187F6  006F FF78  F002    	movff	postinc2,btemp+1
 26722  0187FC  006F FF78  F003    	movff	postinc2,btemp+2
 26723  018802  006F FF78  F004    	movff	postinc2,btemp+3
 26724  018808                     l1834:
 26725                           
 26726                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26727  018808  0EF6               	movlw	246
 26728  01880A  26E1               	addwf	fsr1l,f,c
 26729  01880C  0EFF               	movlw	255
 26730  01880E  22E2               	addwfc	fsr1h,f,c
 26731  018810  0012               	return		;funcret
 26732  018812                     __end_of_lp_filter:
 26733                           	opt callstack 0
 26734                           
 26735 ;; *************** function ___flsub *****************
 26736 ;; Defined at:
 26737 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26738 ;; Parameters:    Size  Location     Type
 26739 ;;  b               4  [STACK] float 
 26740 ;;  a               4  [STACK] float 
 26741 ;; Auto vars:     Size  Location     Type
 26742 ;;		None
 26743 ;; Return value:  Size  Location     Type
 26744 ;;                  4  [STACK] float 
 26745 ;; Registers used:
 26746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26747 ;; Tracked objects:
 26748 ;;		On entry : 0/0
 26749 ;;		On exit  : 0/0
 26750 ;;		Unchanged: 0/0
 26751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26756 ;;Total ram usage:        0 bytes
 26757 ;; Hardware stack levels used:    1
 26758 ;; Hardware stack levels required when called:   16
 26759 ;; This function calls:
 26760 ;;		___fladd
 26761 ;; This function is called by:
 26762 ;;		_conv_raw_result
 26763 ;;		_lp_filter
 26764 ;;		_calc_model_data
 26765 ;;		_calc_ror_data
 26766 ;;		_esr_check
 26767 ;;		_efgtoa
 26768 ;; This function uses a reentrant model
 26769 ;;
 26770                           
 26771                           	psect	text106
 26772  01B606                     __ptext106:
 26773                           	opt callstack 0
 26774  01B606                     ___flsub:
 26775                           	opt callstack 0
 26776                           
 26777                           ;stkvar	_a @ sp[(0)+-8]
 26778                           
 26779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26780                           ;incstack = 0
 26781 ;; hardware stack exceeded
 26782  01B606  0EFB               	movlw	-5
 26783  01B608  7EE3               	btg	plusw1,7,c
 26784                           
 26785                           ;stkvar	_a @ sp[(0)+-8]
 26786  01B60A  0EF8               	movlw	-8
 26787  01B60C  006F FF8F FFE6     	movff	plusw1,postinc1
 26788  01B612  006F FF8F FFE6     	movff	plusw1,postinc1
 26789  01B618  006F FF8F FFE6     	movff	plusw1,postinc1
 26790  01B61E  006F FF8F FFE6     	movff	plusw1,postinc1
 26791                           
 26792                           ;stkvar	_b @ sp[(-4)+-4]
 26793  01B624  0EF8               	movlw	-8
 26794  01B626  006F FF8F FFE6     	movff	plusw1,postinc1
 26795  01B62C  006F FF8F FFE6     	movff	plusw1,postinc1
 26796  01B632  006F FF8F FFE6     	movff	plusw1,postinc1
 26797  01B638  006F FF8F FFE6     	movff	plusw1,postinc1
 26798  01B63E  ECC2  F0A2         	call	___fladd	;wreg free
 26799                           
 26800                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26801  01B642  0EF8               	movlw	248
 26802  01B644  26E1               	addwf	fsr1l,f,c
 26803  01B646  0EFF               	movlw	255
 26804  01B648  22E2               	addwfc	fsr1h,f,c
 26805  01B64A  0012               	return		;funcret
 26806  01B64C                     __end_of___flsub:
 26807                           	opt callstack 0
 26808                           
 26809 ;; *************** function ___fladd *****************
 26810 ;; Defined at:
 26811 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26812 ;; Parameters:    Size  Location     Type
 26813 ;;  b               4  [STACK] float 
 26814 ;;  a               4  [STACK] float 
 26815 ;; Auto vars:     Size  Location     Type
 26816 ;;  grs             1  [STACK] unsigned char 
 26817 ;;  bexp            1  [STACK] unsigned char 
 26818 ;;  aexp            1  [STACK] unsigned char 
 26819 ;;  signs           1  [STACK] unsigned char 
 26820 ;; Return value:  Size  Location     Type
 26821 ;;                  4  [STACK] unsigned char 
 26822 ;; Registers used:
 26823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26824 ;; Tracked objects:
 26825 ;;		On entry : 0/0
 26826 ;;		On exit  : 0/0
 26827 ;;		Unchanged: 0/0
 26828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26833 ;;Total ram usage:        0 bytes
 26834 ;; Hardware stack levels used:    1
 26835 ;; Hardware stack levels required when called:   15
 26836 ;; This function calls:
 26837 ;;		Nothing
 26838 ;; This function is called by:
 26839 ;;		_main
 26840 ;;		_conv_raw_result
 26841 ;;		_lp_filter
 26842 ;;		_calc_model_data
 26843 ;;		_efgtoa
 26844 ;;		___asfladd
 26845 ;;		___flsub
 26846 ;; This function uses a reentrant model
 26847 ;;
 26848                           
 26849                           	psect	text107
 26850  014584                     __ptext107:
 26851                           	opt callstack 0
 26852  014584                     ___fladd:
 26853                           	opt callstack 0
 26854                           
 26855                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26856  014584  52E6               	movf	postinc1,f,c
 26857  014586  52E6               	movf	postinc1,f,c
 26858  014588  52E6               	movf	postinc1,f,c
 26859  01458A  52E6               	movf	postinc1,f,c
 26860                           
 26861                           ;stkvar	_b @ sp[(-4)+-4]
 26862                           
 26863                           ;incstack = 0
 26864 ;; hardware stack exceeded
 26865  01458C  0EFB               	movlw	251
 26866  01458E  24E1               	addwf	fsr1l,w,c
 26867  014590  6ED9               	movwf	fsr2l,c
 26868  014592  0EFF               	movlw	255
 26869  014594  20E2               	addwfc	fsr1h,w,c
 26870  014596  6EDA               	movwf	fsr2h,c
 26871  014598  50DF               	movf	indf2,w,c
 26872  01459A  6E0C               	movwf	(btemp+11)^0,c
 26873  01459C  0E80               	movlw	128
 26874  01459E  160C               	andwf	(btemp+11)^0,f,c
 26875                           
 26876                           ;stkvar	_signs @ sp[(-4)+3]
 26877  0145A0  0EFF               	movlw	-1
 26878  0145A2  0060  F033  FFE3   	movff	btemp+11,plusw1
 26879                           
 26880                           ;stkvar	_b @ sp[(-4)+-4]
 26881  0145A8  0EFB               	movlw	251
 26882  0145AA  24E1               	addwf	fsr1l,w,c
 26883  0145AC  6ED9               	movwf	fsr2l,c
 26884  0145AE  0EFF               	movlw	255
 26885  0145B0  20E2               	addwfc	fsr1h,w,c
 26886  0145B2  6EDA               	movwf	fsr2h,c
 26887  0145B4  50DF               	movf	indf2,w,c
 26888  0145B6  6E0C               	movwf	(btemp+11)^0,c
 26889  0145B8  90D8               	bcf	status,0,c
 26890  0145BA  340C               	rlcf	(btemp+11)^0,w,c
 26891  0145BC  6E0B               	movwf	(btemp+10)^0,c
 26892                           
 26893                           ;stkvar	_bexp @ sp[(-4)+1]
 26894  0145BE  0EFD               	movlw	-3
 26895  0145C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26896                           
 26897                           ;stkvar	_b @ sp[(-4)+-4]
 26898  0145C6  0EFA               	movlw	250
 26899  0145C8  24E1               	addwf	fsr1l,w,c
 26900  0145CA  6ED9               	movwf	fsr2l,c
 26901  0145CC  0EFF               	movlw	255
 26902  0145CE  20E2               	addwfc	fsr1h,w,c
 26903  0145D0  6EDA               	movwf	fsr2h,c
 26904  0145D2  AEDF               	btfss	indf2,7,c
 26905  0145D4  D002               	goto	l7736
 26906                           
 26907                           ;stkvar	_bexp @ sp[(-4)+1]
 26908  0145D6  0EFD               	movlw	-3
 26909  0145D8  80E3               	bsf	plusw1,0,c
 26910  0145DA                     l7736:
 26911                           
 26912                           ;stkvar	_bexp @ sp[(-4)+1]
 26913  0145DA  0EFD               	movlw	-3
 26914  0145DC  50E3               	movf	plusw1,w,c
 26915  0145DE  B4D8               	btfsc	status,2,c
 26916  0145E0  D027               	goto	l7746
 26917                           
 26918                           ;stkvar	_bexp @ sp[(-4)+1]
 26919  0145E2  0EFD               	movlw	-3
 26920  0145E4  28E3               	incf	plusw1,w,c
 26921  0145E6  A4D8               	btfss	status,2,c
 26922  0145E8  D018               	goto	l7742
 26923  0145EA  0E00               	movlw	0
 26924  0145EC  6E09               	movwf	(btemp+8)^0,c
 26925  0145EE  0E00               	movlw	0
 26926  0145F0  6E0A               	movwf	(btemp+9)^0,c
 26927  0145F2  0E00               	movlw	0
 26928  0145F4  6E0B               	movwf	(btemp+10)^0,c
 26929  0145F6  0E00               	movlw	0
 26930  0145F8  6E0C               	movwf	(btemp+11)^0,c
 26931                           
 26932                           ;stkvar	_b @ sp[(-4)+-4]
 26933  0145FA  0EF8               	movlw	-8
 26934  0145FC  0060  F027  FFE3   	movff	btemp+8,plusw1
 26935  014602  0EF9               	movlw	-7
 26936  014604  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26937  01460A  0EFA               	movlw	-6
 26938  01460C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26939  014612  0EFB               	movlw	-5
 26940  014614  0060  F033  FFE3   	movff	btemp+11,plusw1
 26941  01461A                     l7742:
 26942                           
 26943                           ;stkvar	_b @ sp[(-4)+-4]
 26944  01461A  0EFA               	movlw	-6
 26945  01461C  8EE3               	bsf	plusw1,7,c
 26946                           
 26947                           ;stkvar	_b @ sp[(-4)+-4]
 26948  01461E  0EFB               	movlw	251
 26949  014620  24E1               	addwf	fsr1l,w,c
 26950  014622  6ED9               	movwf	fsr2l,c
 26951  014624  0EFF               	movlw	255
 26952  014626  20E2               	addwfc	fsr1h,w,c
 26953  014628  6EDA               	movwf	fsr2h,c
 26954  01462A  0E00               	movlw	0
 26955  01462C  6EDF               	movwf	indf2,c
 26956  01462E  D018               	goto	l7748
 26957  014630                     l7746:
 26958  014630  0E00               	movlw	0
 26959  014632  6E09               	movwf	(btemp+8)^0,c
 26960  014634  0E00               	movlw	0
 26961  014636  6E0A               	movwf	(btemp+9)^0,c
 26962  014638  0E00               	movlw	0
 26963  01463A  6E0B               	movwf	(btemp+10)^0,c
 26964  01463C  0E00               	movlw	0
 26965  01463E  6E0C               	movwf	(btemp+11)^0,c
 26966                           
 26967                           ;stkvar	_b @ sp[(-4)+-4]
 26968  014640  0EF8               	movlw	-8
 26969  014642  0060  F027  FFE3   	movff	btemp+8,plusw1
 26970  014648  0EF9               	movlw	-7
 26971  01464A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26972  014650  0EFA               	movlw	-6
 26973  014652  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26974  014658  0EFB               	movlw	-5
 26975  01465A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26976  014660                     l7748:
 26977                           
 26978                           ;stkvar	_a @ sp[(-4)+-8]
 26979  014660  0EF7               	movlw	247
 26980  014662  24E1               	addwf	fsr1l,w,c
 26981  014664  6ED9               	movwf	fsr2l,c
 26982  014666  0EFF               	movlw	255
 26983  014668  20E2               	addwfc	fsr1h,w,c
 26984  01466A  6EDA               	movwf	fsr2h,c
 26985  01466C  50DF               	movf	indf2,w,c
 26986  01466E  6E0C               	movwf	(btemp+11)^0,c
 26987  014670  0E80               	movlw	128
 26988  014672  160C               	andwf	(btemp+11)^0,f,c
 26989                           
 26990                           ;stkvar	_aexp @ sp[(-4)+2]
 26991  014674  0EFE               	movlw	-2
 26992  014676  0060  F033  FFE3   	movff	btemp+11,plusw1
 26993                           
 26994                           ;stkvar	_signs @ sp[(-4)+3]
 26995                           ;stkvar	_aexp @ sp[(-4)+2]
 26996  01467C  50E1               	movf	fsr1l,w,c
 26997  01467E  0FFE               	addlw	-2
 26998  014680  6ED9               	movwf	fsr2l,c
 26999  014682  50E2               	movf	fsr1h,w,c
 27000  014684  6EDA               	movwf	fsr2h,c
 27001  014686  0EFF               	movlw	255
 27002  014688  22DA               	addwfc	fsr2h,f,c
 27003  01468A  0EFF               	movlw	-1
 27004  01468C  50E3               	movf	plusw1,w,c
 27005  01468E  18DE               	xorwf	postinc2,w,c
 27006  014690  B4D8               	btfsc	status,2,c
 27007  014692  D002               	goto	l7754
 27008                           
 27009                           ;stkvar	_signs @ sp[(-4)+3]
 27010  014694  0EFF               	movlw	-1
 27011  014696  8CE3               	bsf	plusw1,6,c
 27012  014698                     l7754:
 27013                           
 27014                           ;stkvar	_a @ sp[(-4)+-8]
 27015  014698  0EF7               	movlw	247
 27016  01469A  24E1               	addwf	fsr1l,w,c
 27017  01469C  6ED9               	movwf	fsr2l,c
 27018  01469E  0EFF               	movlw	255
 27019  0146A0  20E2               	addwfc	fsr1h,w,c
 27020  0146A2  6EDA               	movwf	fsr2h,c
 27021  0146A4  50DF               	movf	indf2,w,c
 27022  0146A6  6E0C               	movwf	(btemp+11)^0,c
 27023  0146A8  90D8               	bcf	status,0,c
 27024  0146AA  340C               	rlcf	(btemp+11)^0,w,c
 27025  0146AC  6E0B               	movwf	(btemp+10)^0,c
 27026                           
 27027                           ;stkvar	_aexp @ sp[(-4)+2]
 27028  0146AE  0EFE               	movlw	-2
 27029  0146B0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27030                           
 27031                           ;stkvar	_a @ sp[(-4)+-8]
 27032  0146B6  0EF6               	movlw	246
 27033  0146B8  24E1               	addwf	fsr1l,w,c
 27034  0146BA  6ED9               	movwf	fsr2l,c
 27035  0146BC  0EFF               	movlw	255
 27036  0146BE  20E2               	addwfc	fsr1h,w,c
 27037  0146C0  6EDA               	movwf	fsr2h,c
 27038  0146C2  AEDF               	btfss	indf2,7,c
 27039  0146C4  D002               	goto	l7760
 27040                           
 27041                           ;stkvar	_aexp @ sp[(-4)+2]
 27042  0146C6  0EFE               	movlw	-2
 27043  0146C8  80E3               	bsf	plusw1,0,c
 27044  0146CA                     l7760:
 27045                           
 27046                           ;stkvar	_aexp @ sp[(-4)+2]
 27047  0146CA  0EFE               	movlw	-2
 27048  0146CC  50E3               	movf	plusw1,w,c
 27049  0146CE  B4D8               	btfsc	status,2,c
 27050  0146D0  D027               	goto	l7770
 27051                           
 27052                           ;stkvar	_aexp @ sp[(-4)+2]
 27053  0146D2  0EFE               	movlw	-2
 27054  0146D4  28E3               	incf	plusw1,w,c
 27055  0146D6  A4D8               	btfss	status,2,c
 27056  0146D8  D018               	goto	l7766
 27057  0146DA  0E00               	movlw	0
 27058  0146DC  6E09               	movwf	(btemp+8)^0,c
 27059  0146DE  0E00               	movlw	0
 27060  0146E0  6E0A               	movwf	(btemp+9)^0,c
 27061  0146E2  0E00               	movlw	0
 27062  0146E4  6E0B               	movwf	(btemp+10)^0,c
 27063  0146E6  0E00               	movlw	0
 27064  0146E8  6E0C               	movwf	(btemp+11)^0,c
 27065                           
 27066                           ;stkvar	_a @ sp[(-4)+-8]
 27067  0146EA  0EF4               	movlw	-12
 27068  0146EC  0060  F027  FFE3   	movff	btemp+8,plusw1
 27069  0146F2  0EF5               	movlw	-11
 27070  0146F4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27071  0146FA  0EF6               	movlw	-10
 27072  0146FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27073  014702  0EF7               	movlw	-9
 27074  014704  0060  F033  FFE3   	movff	btemp+11,plusw1
 27075  01470A                     l7766:
 27076                           
 27077                           ;stkvar	_a @ sp[(-4)+-8]
 27078  01470A  0EF6               	movlw	-10
 27079  01470C  8EE3               	bsf	plusw1,7,c
 27080                           
 27081                           ;stkvar	_a @ sp[(-4)+-8]
 27082  01470E  0EF7               	movlw	247
 27083  014710  24E1               	addwf	fsr1l,w,c
 27084  014712  6ED9               	movwf	fsr2l,c
 27085  014714  0EFF               	movlw	255
 27086  014716  20E2               	addwfc	fsr1h,w,c
 27087  014718  6EDA               	movwf	fsr2h,c
 27088  01471A  0E00               	movlw	0
 27089  01471C  6EDF               	movwf	indf2,c
 27090  01471E  D018               	goto	l7772
 27091  014720                     l7770:
 27092  014720  0E00               	movlw	0
 27093  014722  6E09               	movwf	(btemp+8)^0,c
 27094  014724  0E00               	movlw	0
 27095  014726  6E0A               	movwf	(btemp+9)^0,c
 27096  014728  0E00               	movlw	0
 27097  01472A  6E0B               	movwf	(btemp+10)^0,c
 27098  01472C  0E00               	movlw	0
 27099  01472E  6E0C               	movwf	(btemp+11)^0,c
 27100                           
 27101                           ;stkvar	_a @ sp[(-4)+-8]
 27102  014730  0EF4               	movlw	-12
 27103  014732  0060  F027  FFE3   	movff	btemp+8,plusw1
 27104  014738  0EF5               	movlw	-11
 27105  01473A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27106  014740  0EF6               	movlw	-10
 27107  014742  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27108  014748  0EF7               	movlw	-9
 27109  01474A  0060  F033  FFE3   	movff	btemp+11,plusw1
 27110  014750                     l7772:
 27111                           
 27112                           ;stkvar	_bexp @ sp[(-4)+1]
 27113                           ;stkvar	_aexp @ sp[(-4)+2]
 27114  014750  50E1               	movf	fsr1l,w,c
 27115  014752  0FFE               	addlw	-2
 27116  014754  6ED9               	movwf	fsr2l,c
 27117  014756  50E2               	movf	fsr1h,w,c
 27118  014758  6EDA               	movwf	fsr2h,c
 27119  01475A  0EFF               	movlw	255
 27120  01475C  22DA               	addwfc	fsr2h,f,c
 27121  01475E  0EFD               	movlw	-3
 27122  014760  50E3               	movf	plusw1,w,c
 27123  014762  5CDE               	subwf	postinc2,w,c
 27124  014764  B0D8               	btfsc	status,0,c
 27125  014766  D0A4               	goto	l7808
 27126                           
 27127                           ;stkvar	_signs @ sp[(-4)+3]
 27128  014768  0EFF               	movlw	-1
 27129  01476A  ACE3               	btfss	plusw1,6,c
 27130  01476C  D002               	goto	l7778
 27131                           
 27132                           ;stkvar	_signs @ sp[(-4)+3]
 27133  01476E  0EFF               	movlw	-1
 27134  014770  7EE3               	btg	plusw1,7,c
 27135  014772                     l7778:
 27136                           
 27137                           ;stkvar	_bexp @ sp[(-4)+1]
 27138                           ;stkvar	_grs @ sp[(-4)+0]
 27139  014772  0EFD               	movlw	-3
 27140  014774  006F FF8C  F001    	movff	plusw1,btemp
 27141  01477A  0EFC               	movlw	-4
 27142  01477C  0060  F007  FFE3   	movff	btemp,plusw1
 27143                           
 27144                           ;stkvar	_aexp @ sp[(-4)+2]
 27145                           ;stkvar	_bexp @ sp[(-4)+1]
 27146  014782  0EFE               	movlw	-2
 27147  014784  006F FF8C  F001    	movff	plusw1,btemp
 27148  01478A  0EFD               	movlw	-3
 27149  01478C  0060  F007  FFE3   	movff	btemp,plusw1
 27150                           
 27151                           ;stkvar	_grs @ sp[(-4)+0]
 27152                           ;stkvar	_aexp @ sp[(-4)+2]
 27153  014792  0EFC               	movlw	-4
 27154  014794  006F FF8C  F001    	movff	plusw1,btemp
 27155  01479A  0EFE               	movlw	-2
 27156  01479C  0060  F007  FFE3   	movff	btemp,plusw1
 27157                           
 27158                           ;stkvar	_b @ sp[(-4)+-4]
 27159                           ;stkvar	_grs @ sp[(-4)+0]
 27160  0147A2  0EF8               	movlw	-8
 27161  0147A4  006F FF8C  F001    	movff	plusw1,btemp
 27162  0147AA  0EFC               	movlw	-4
 27163  0147AC  0060  F007  FFE3   	movff	btemp,plusw1
 27164                           
 27165                           ;stkvar	_a @ sp[(-4)+-8]
 27166                           ;stkvar	_b @ sp[(-4)+-4]
 27167  0147B2  0EF4               	movlw	-12
 27168  0147B4  006F FF8C  F001    	movff	plusw1,btemp
 27169  0147BA  0EF8               	movlw	-8
 27170  0147BC  0060  F007  FFE3   	movff	btemp,plusw1
 27171                           
 27172                           ;stkvar	_grs @ sp[(-4)+0]
 27173                           ;stkvar	_a @ sp[(-4)+-8]
 27174  0147C2  0EFC               	movlw	-4
 27175  0147C4  006F FF8C  F001    	movff	plusw1,btemp
 27176  0147CA  0EF4               	movlw	-12
 27177  0147CC  0060  F007  FFE3   	movff	btemp,plusw1
 27178                           
 27179                           ;stkvar	_b @ sp[(-4)+-4]
 27180  0147D2  0EF9               	movlw	249
 27181  0147D4  24E1               	addwf	fsr1l,w,c
 27182  0147D6  6ED9               	movwf	fsr2l,c
 27183  0147D8  0EFF               	movlw	255
 27184  0147DA  20E2               	addwfc	fsr1h,w,c
 27185  0147DC  6EDA               	movwf	fsr2h,c
 27186  0147DE  50DF               	movf	indf2,w,c
 27187  0147E0  6E0C               	movwf	(btemp+11)^0,c
 27188                           
 27189                           ;stkvar	_grs @ sp[(-4)+0]
 27190  0147E2  0EFC               	movlw	-4
 27191  0147E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 27192                           
 27193                           ;stkvar	_a @ sp[(-4)+-8]
 27194  0147EA  0EF5               	movlw	245
 27195  0147EC  24E1               	addwf	fsr1l,w,c
 27196  0147EE  6ED9               	movwf	fsr2l,c
 27197  0147F0  0EFF               	movlw	255
 27198  0147F2  20E2               	addwfc	fsr1h,w,c
 27199  0147F4  6EDA               	movwf	fsr2h,c
 27200                           
 27201                           ;stkvar	_b @ sp[(-4)+-4]
 27202  0147F6  0EF9               	movlw	249
 27203  0147F8  24E1               	addwf	fsr1l,w,c
 27204  0147FA  6EE9               	movwf	fsr0l,c
 27205  0147FC  0EFF               	movlw	255
 27206  0147FE  20E2               	addwfc	fsr1h,w,c
 27207  014800  6EEA               	movwf	fsr0h,c
 27208  014802  006F FF7F FFEF     	movff	indf2,indf0
 27209                           
 27210                           ;stkvar	_grs @ sp[(-4)+0]
 27211                           ;stkvar	_a @ sp[(-4)+-8]
 27212  014808  0EF5               	movlw	245
 27213  01480A  24E1               	addwf	fsr1l,w,c
 27214  01480C  6ED9               	movwf	fsr2l,c
 27215  01480E  0EFF               	movlw	255
 27216  014810  20E2               	addwfc	fsr1h,w,c
 27217  014812  6EDA               	movwf	fsr2h,c
 27218  014814  0EFC               	movlw	-4
 27219  014816  006F FF8F FFDF     	movff	plusw1,indf2
 27220                           
 27221                           ;stkvar	_b @ sp[(-4)+-4]
 27222  01481C  0EFA               	movlw	250
 27223  01481E  24E1               	addwf	fsr1l,w,c
 27224  014820  6ED9               	movwf	fsr2l,c
 27225  014822  0EFF               	movlw	255
 27226  014824  20E2               	addwfc	fsr1h,w,c
 27227  014826  6EDA               	movwf	fsr2h,c
 27228  014828  50DF               	movf	indf2,w,c
 27229  01482A  6E0C               	movwf	(btemp+11)^0,c
 27230                           
 27231                           ;stkvar	_grs @ sp[(-4)+0]
 27232  01482C  0EFC               	movlw	-4
 27233  01482E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27234                           
 27235                           ;stkvar	_a @ sp[(-4)+-8]
 27236  014834  0EF6               	movlw	246
 27237  014836  24E1               	addwf	fsr1l,w,c
 27238  014838  6ED9               	movwf	fsr2l,c
 27239  01483A  0EFF               	movlw	255
 27240  01483C  20E2               	addwfc	fsr1h,w,c
 27241  01483E  6EDA               	movwf	fsr2h,c
 27242                           
 27243                           ;stkvar	_b @ sp[(-4)+-4]
 27244  014840  0EFA               	movlw	250
 27245  014842  24E1               	addwf	fsr1l,w,c
 27246  014844  6EE9               	movwf	fsr0l,c
 27247  014846  0EFF               	movlw	255
 27248  014848  20E2               	addwfc	fsr1h,w,c
 27249  01484A  6EEA               	movwf	fsr0h,c
 27250  01484C  006F FF7F FFEF     	movff	indf2,indf0
 27251                           
 27252                           ;stkvar	_grs @ sp[(-4)+0]
 27253                           ;stkvar	_a @ sp[(-4)+-8]
 27254  014852  0EF6               	movlw	246
 27255  014854  24E1               	addwf	fsr1l,w,c
 27256  014856  6ED9               	movwf	fsr2l,c
 27257  014858  0EFF               	movlw	255
 27258  01485A  20E2               	addwfc	fsr1h,w,c
 27259  01485C  6EDA               	movwf	fsr2h,c
 27260  01485E  0EFC               	movlw	-4
 27261  014860  006F FF8F FFDF     	movff	plusw1,indf2
 27262                           
 27263                           ;stkvar	_b @ sp[(-4)+-4]
 27264  014866  0EFB               	movlw	251
 27265  014868  24E1               	addwf	fsr1l,w,c
 27266  01486A  6ED9               	movwf	fsr2l,c
 27267  01486C  0EFF               	movlw	255
 27268  01486E  20E2               	addwfc	fsr1h,w,c
 27269  014870  6EDA               	movwf	fsr2h,c
 27270  014872  50DF               	movf	indf2,w,c
 27271  014874  6E0C               	movwf	(btemp+11)^0,c
 27272                           
 27273                           ;stkvar	_grs @ sp[(-4)+0]
 27274  014876  0EFC               	movlw	-4
 27275  014878  0060  F033  FFE3   	movff	btemp+11,plusw1
 27276                           
 27277                           ;stkvar	_a @ sp[(-4)+-8]
 27278  01487E  0EF7               	movlw	247
 27279  014880  24E1               	addwf	fsr1l,w,c
 27280  014882  6ED9               	movwf	fsr2l,c
 27281  014884  0EFF               	movlw	255
 27282  014886  20E2               	addwfc	fsr1h,w,c
 27283  014888  6EDA               	movwf	fsr2h,c
 27284                           
 27285                           ;stkvar	_b @ sp[(-4)+-4]
 27286  01488A  0EFB               	movlw	251
 27287  01488C  24E1               	addwf	fsr1l,w,c
 27288  01488E  6EE9               	movwf	fsr0l,c
 27289  014890  0EFF               	movlw	255
 27290  014892  20E2               	addwfc	fsr1h,w,c
 27291  014894  6EEA               	movwf	fsr0h,c
 27292  014896  006F FF7F FFEF     	movff	indf2,indf0
 27293                           
 27294                           ;stkvar	_grs @ sp[(-4)+0]
 27295                           ;stkvar	_a @ sp[(-4)+-8]
 27296  01489C  0EF7               	movlw	247
 27297  01489E  24E1               	addwf	fsr1l,w,c
 27298  0148A0  6ED9               	movwf	fsr2l,c
 27299  0148A2  0EFF               	movlw	255
 27300  0148A4  20E2               	addwfc	fsr1h,w,c
 27301  0148A6  6EDA               	movwf	fsr2h,c
 27302  0148A8  0EFC               	movlw	-4
 27303  0148AA  006F FF8F FFDF     	movff	plusw1,indf2
 27304  0148B0                     l7808:
 27305                           
 27306                           ;stkvar	_grs @ sp[(-4)+0]
 27307  0148B0  0EFC               	movlw	-4
 27308  0148B2  6AE3               	clrf	plusw1,c
 27309                           
 27310                           ;stkvar	_aexp @ sp[(-4)+2]
 27311  0148B4  0EFE               	movlw	-2
 27312  0148B6  50E3               	movf	plusw1,w,c
 27313  0148B8  6E0B               	movwf	(btemp+10)^0,c
 27314  0148BA  6A0C               	clrf	(btemp+11)^0,c
 27315                           
 27316                           ;stkvar	_bexp @ sp[(-4)+1]
 27317  0148BC  0EFD               	movlw	-3
 27318  0148BE  50E3               	movf	plusw1,w,c
 27319  0148C0  5E0B               	subwf	(btemp+10)^0,f,c
 27320  0148C2  0E00               	movlw	0
 27321  0148C4  5A0C               	subwfb	(btemp+11)^0,f,c
 27322  0148C6  BE0C               	btfsc	(btemp+11)^0,7,c
 27323  0148C8  D062               	goto	l7832
 27324  0148CA  500C               	movf	(btemp+11)^0,w,c
 27325  0148CC  E104               	bnz	u5570
 27326  0148CE  0E1A               	movlw	26
 27327  0148D0  5C0B               	subwf	(btemp+10)^0,w,c
 27328  0148D2  A0D8               	btfss	status,0,c
 27329  0148D4  D05C               	goto	l7832
 27330  0148D6                     u5570:
 27331                           
 27332                           ;stkvar	_b @ sp[(-4)+-4]
 27333  0148D6  0EF8               	movlw	-8
 27334  0148D8  50E3               	movf	plusw1,w,c
 27335  0148DA  E10A               	bnz	u5581
 27336  0148DC  0EF9               	movlw	-7
 27337  0148DE  50E3               	movf	plusw1,w,c
 27338  0148E0  E107               	bnz	u5581
 27339  0148E2  0EFA               	movlw	-6
 27340  0148E4  50E3               	movf	plusw1,w,c
 27341  0148E6  E104               	bnz	u5581
 27342  0148E8  0EFB               	movlw	-5
 27343  0148EA  50E3               	movf	plusw1,w,c
 27344  0148EC  B4D8               	btfsc	status,2,c
 27345  0148EE  D003               	goto	u5580
 27346  0148F0                     u5581:
 27347  0148F0  6A0C               	clrf	(btemp+11)^0,c
 27348  0148F2  2A0C               	incf	(btemp+11)^0,f,c
 27349  0148F4  D001               	goto	u5598
 27350  0148F6                     u5580:
 27351  0148F6  6A0C               	clrf	(btemp+11)^0,c
 27352  0148F8                     u5598:
 27353                           
 27354                           ;stkvar	_grs @ sp[(-4)+0]
 27355  0148F8  0EFC               	movlw	-4
 27356  0148FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27357                           
 27358                           ;stkvar	_b @ sp[(-4)+-4]
 27359  014900  0EF8               	movlw	-8
 27360  014902  6AE3               	clrf	plusw1,c
 27361  014904  0EF9               	movlw	-7
 27362  014906  6AE3               	clrf	plusw1,c
 27363  014908  0EFA               	movlw	-6
 27364  01490A  6AE3               	clrf	plusw1,c
 27365  01490C  0EFB               	movlw	-5
 27366  01490E  6AE3               	clrf	plusw1,c
 27367                           
 27368                           ;stkvar	_aexp @ sp[(-4)+2]
 27369                           ;stkvar	_bexp @ sp[(-4)+1]
 27370  014910  0EFE               	movlw	-2
 27371  014912  006F FF8C  F001    	movff	plusw1,btemp
 27372  014918  0EFD               	movlw	-3
 27373  01491A  0060  F007  FFE3   	movff	btemp,plusw1
 27374  014920  D042               	goto	u5630
 27375  014922                     l7818:
 27376                           
 27377                           ;stkvar	_grs @ sp[(-4)+0]
 27378  014922  0EFC               	movlw	-4
 27379  014924  A0E3               	btfss	plusw1,0,c
 27380  014926  D00D               	goto	l7822
 27381                           
 27382                           ;stkvar	_grs @ sp[(-4)+0]
 27383  014928  0EFC               	movlw	-4
 27384  01492A  006F FF8C  F00C    	movff	plusw1,btemp+11
 27385  014930  90D8               	bcf	status,0,c
 27386  014932  320C               	rrcf	(btemp+11)^0,f,c
 27387  014934  0E01               	movlw	1
 27388  014936  120C               	iorwf	(btemp+11)^0,f,c
 27389                           
 27390                           ;stkvar	_grs @ sp[(-4)+0]
 27391  014938  0EFC               	movlw	-4
 27392  01493A  0060  F033  FFE3   	movff	btemp+11,plusw1
 27393  014940  D009               	goto	l7824
 27394  014942                     l7822:
 27395                           
 27396                           ;stkvar	_grs @ sp[(-4)+0]
 27397  014942  50E1               	movf	fsr1l,w,c
 27398  014944  0FFC               	addlw	-4
 27399  014946  6ED9               	movwf	fsr2l,c
 27400  014948  50E2               	movf	fsr1h,w,c
 27401  01494A  6EDA               	movwf	fsr2h,c
 27402  01494C  0EFF               	movlw	255
 27403  01494E  22DA               	addwfc	fsr2h,f,c
 27404  014950  90D8               	bcf	status,0,c
 27405  014952  32DF               	rrcf	indf2,f,c
 27406  014954                     l7824:
 27407                           
 27408                           ;stkvar	_b @ sp[(-4)+-4]
 27409  014954  0EF8               	movlw	-8
 27410  014956  A0E3               	btfss	plusw1,0,c
 27411  014958  D002               	goto	l7828
 27412                           
 27413                           ;stkvar	_grs @ sp[(-4)+0]
 27414  01495A  0EFC               	movlw	-4
 27415  01495C  8EE3               	bsf	plusw1,7,c
 27416  01495E                     l7828:
 27417  01495E  0E01               	movlw	1
 27418  014960  6E0C               	movwf	(btemp+11)^0,c
 27419                           
 27420                           ;stkvar	_b @ sp[(-4)+-4]
 27421  014962  50E1               	movf	fsr1l,w,c
 27422  014964  0FF8               	addlw	-8
 27423  014966  6ED9               	movwf	fsr2l,c
 27424  014968  50E2               	movf	fsr1h,w,c
 27425  01496A  6EDA               	movwf	fsr2h,c
 27426  01496C  0EFF               	movlw	255
 27427  01496E  22DA               	addwfc	fsr2h,f,c
 27428  014970  280C               	incf	(btemp+11)^0,w,c
 27429  014972  52DE               	movf	postinc2,f,c
 27430  014974  D008               	goto	u5620
 27431  014976                     u5625:
 27432  014976  52DE               	movf	postinc2,f,c
 27433  014978  90D8               	bcf	status,0,c
 27434  01497A  BEDC               	btfsc	preinc2,7,c
 27435  01497C  80D8               	bsf	status,0,c
 27436  01497E  32DD               	rrcf	postdec2,f,c
 27437  014980  32DD               	rrcf	postdec2,f,c
 27438  014982  32DD               	rrcf	postdec2,f,c
 27439  014984  32DE               	rrcf	postinc2,f,c
 27440  014986                     u5620:
 27441  014986  2EE8               	decfsz	wreg,f,c
 27442  014988  D7F6               	goto	u5625
 27443                           
 27444                           ;stkvar	_bexp @ sp[(-4)+1]
 27445  01498A  0EFD               	movlw	-3
 27446  01498C  2AE3               	incf	plusw1,f,c
 27447  01498E                     l7832:
 27448                           
 27449                           ;stkvar	_aexp @ sp[(-4)+2]
 27450                           ;stkvar	_bexp @ sp[(-4)+1]
 27451  01498E  50E1               	movf	fsr1l,w,c
 27452  014990  0FFD               	addlw	-3
 27453  014992  6ED9               	movwf	fsr2l,c
 27454  014994  50E2               	movf	fsr1h,w,c
 27455  014996  6EDA               	movwf	fsr2h,c
 27456  014998  0EFF               	movlw	255
 27457  01499A  22DA               	addwfc	fsr2h,f,c
 27458  01499C  0EFE               	movlw	-2
 27459  01499E  50E3               	movf	plusw1,w,c
 27460  0149A0  5CDE               	subwf	postinc2,w,c
 27461  0149A2  A0D8               	btfss	status,0,c
 27462  0149A4  D7BE               	goto	l7818
 27463  0149A6                     u5630:
 27464                           
 27465                           ;stkvar	_signs @ sp[(-4)+3]
 27466  0149A6  0EFF               	movlw	-1
 27467  0149A8  BCE3               	btfsc	plusw1,6,c
 27468  0149AA  D066               	goto	l7860
 27469                           
 27470                           ;stkvar	_bexp @ sp[(-4)+1]
 27471  0149AC  0EFD               	movlw	-3
 27472  0149AE  50E3               	movf	plusw1,w,c
 27473  0149B0  B4D8               	btfsc	status,2,c
 27474  0149B2  D0F2               	goto	u5730
 27475                           
 27476                           ;stkvar	_a @ sp[(-4)+-8]
 27477                           ;stkvar	_b @ sp[(-4)+-4]
 27478  0149B4  0EF8               	movlw	-8
 27479  0149B6  50E3               	movf	plusw1,w,c
 27480  0149B8  6E01               	movwf	btemp^0,c
 27481  0149BA  0EF4               	movlw	-12
 27482  0149BC  50E3               	movf	plusw1,w,c
 27483  0149BE  2601               	addwf	btemp^0,f,c
 27484  0149C0  0EF8               	movlw	-8
 27485  0149C2  0060  F007  FFE3   	movff	btemp,plusw1
 27486  0149C8  0EF9               	movlw	-7
 27487  0149CA  50E3               	movf	plusw1,w,c
 27488  0149CC  6E01               	movwf	btemp^0,c
 27489  0149CE  0EF5               	movlw	-11
 27490  0149D0  50E3               	movf	plusw1,w,c
 27491  0149D2  2201               	addwfc	btemp^0,f,c
 27492  0149D4  0EF9               	movlw	-7
 27493  0149D6  0060  F007  FFE3   	movff	btemp,plusw1
 27494  0149DC  0EFA               	movlw	-6
 27495  0149DE  50E3               	movf	plusw1,w,c
 27496  0149E0  6E01               	movwf	btemp^0,c
 27497  0149E2  0EF6               	movlw	-10
 27498  0149E4  50E3               	movf	plusw1,w,c
 27499  0149E6  2201               	addwfc	btemp^0,f,c
 27500  0149E8  0EFA               	movlw	-6
 27501  0149EA  0060  F007  FFE3   	movff	btemp,plusw1
 27502  0149F0  0EFB               	movlw	-5
 27503  0149F2  50E3               	movf	plusw1,w,c
 27504  0149F4  6E01               	movwf	btemp^0,c
 27505  0149F6  0EF7               	movlw	-9
 27506  0149F8  50E3               	movf	plusw1,w,c
 27507  0149FA  2201               	addwfc	btemp^0,f,c
 27508  0149FC  0EFB               	movlw	-5
 27509  0149FE  0060  F007  FFE3   	movff	btemp,plusw1
 27510                           
 27511                           ;stkvar	_b @ sp[(-4)+-4]
 27512  014A04  0EFB               	movlw	-5
 27513  014A06  A0E3               	btfss	plusw1,0,c
 27514  014A08  D101               	goto	u5770
 27515                           
 27516                           ;stkvar	_grs @ sp[(-4)+0]
 27517  014A0A  0EFC               	movlw	-4
 27518  014A0C  A0E3               	btfss	plusw1,0,c
 27519  014A0E  D00D               	goto	l7850
 27520                           
 27521                           ;stkvar	_grs @ sp[(-4)+0]
 27522  014A10  0EFC               	movlw	-4
 27523  014A12  006F FF8C  F00C    	movff	plusw1,btemp+11
 27524  014A18  90D8               	bcf	status,0,c
 27525  014A1A  320C               	rrcf	(btemp+11)^0,f,c
 27526  014A1C  0E01               	movlw	1
 27527  014A1E  120C               	iorwf	(btemp+11)^0,f,c
 27528                           
 27529                           ;stkvar	_grs @ sp[(-4)+0]
 27530  014A20  0EFC               	movlw	-4
 27531  014A22  0060  F033  FFE3   	movff	btemp+11,plusw1
 27532  014A28  D009               	goto	l7852
 27533  014A2A                     l7850:
 27534                           
 27535                           ;stkvar	_grs @ sp[(-4)+0]
 27536  014A2A  50E1               	movf	fsr1l,w,c
 27537  014A2C  0FFC               	addlw	-4
 27538  014A2E  6ED9               	movwf	fsr2l,c
 27539  014A30  50E2               	movf	fsr1h,w,c
 27540  014A32  6EDA               	movwf	fsr2h,c
 27541  014A34  0EFF               	movlw	255
 27542  014A36  22DA               	addwfc	fsr2h,f,c
 27543  014A38  90D8               	bcf	status,0,c
 27544  014A3A  32DF               	rrcf	indf2,f,c
 27545  014A3C                     l7852:
 27546                           
 27547                           ;stkvar	_b @ sp[(-4)+-4]
 27548  014A3C  0EF8               	movlw	-8
 27549  014A3E  A0E3               	btfss	plusw1,0,c
 27550  014A40  D002               	goto	l7856
 27551                           
 27552                           ;stkvar	_grs @ sp[(-4)+0]
 27553  014A42  0EFC               	movlw	-4
 27554  014A44  8EE3               	bsf	plusw1,7,c
 27555  014A46                     l7856:
 27556  014A46  0E01               	movlw	1
 27557  014A48  6E0C               	movwf	(btemp+11)^0,c
 27558                           
 27559                           ;stkvar	_b @ sp[(-4)+-4]
 27560  014A4A  50E1               	movf	fsr1l,w,c
 27561  014A4C  0FF8               	addlw	-8
 27562  014A4E  6ED9               	movwf	fsr2l,c
 27563  014A50  50E2               	movf	fsr1h,w,c
 27564  014A52  6EDA               	movwf	fsr2h,c
 27565  014A54  0EFF               	movlw	255
 27566  014A56  22DA               	addwfc	fsr2h,f,c
 27567  014A58  280C               	incf	(btemp+11)^0,w,c
 27568  014A5A  52DE               	movf	postinc2,f,c
 27569  014A5C  D008               	goto	u5690
 27570  014A5E                     u5695:
 27571  014A5E  52DE               	movf	postinc2,f,c
 27572  014A60  90D8               	bcf	status,0,c
 27573  014A62  BEDC               	btfsc	preinc2,7,c
 27574  014A64  80D8               	bsf	status,0,c
 27575  014A66  32DD               	rrcf	postdec2,f,c
 27576  014A68  32DD               	rrcf	postdec2,f,c
 27577  014A6A  32DD               	rrcf	postdec2,f,c
 27578  014A6C  32DE               	rrcf	postinc2,f,c
 27579  014A6E                     u5690:
 27580  014A6E  2EE8               	decfsz	wreg,f,c
 27581  014A70  D7F6               	goto	u5695
 27582                           
 27583                           ;stkvar	_bexp @ sp[(-4)+1]
 27584  014A72  0EFD               	movlw	-3
 27585  014A74  2AE3               	incf	plusw1,f,c
 27586  014A76  D0CA               	goto	u5770
 27587  014A78                     l7860:
 27588                           
 27589                           ;stkvar	_a @ sp[(-4)+-8]
 27590                           ;stkvar	_b @ sp[(-4)+-4]
 27591  014A78  50E1               	movf	fsr1l,w,c
 27592  014A7A  0FF8               	addlw	-8
 27593  014A7C  6ED9               	movwf	fsr2l,c
 27594  014A7E  50E2               	movf	fsr1h,w,c
 27595  014A80  6EDA               	movwf	fsr2h,c
 27596  014A82  0EFF               	movlw	255
 27597  014A84  22DA               	addwfc	fsr2h,f,c
 27598  014A86  0EF4               	movlw	-12
 27599  014A88  50E3               	movf	plusw1,w,c
 27600  014A8A  5CDE               	subwf	postinc2,w,c
 27601  014A8C  0EF5               	movlw	-11
 27602  014A8E  50E3               	movf	plusw1,w,c
 27603  014A90  58DE               	subwfb	postinc2,w,c
 27604  014A92  0EF6               	movlw	-10
 27605  014A94  50E3               	movf	plusw1,w,c
 27606  014A96  58DE               	subwfb	postinc2,w,c
 27607  014A98  50DE               	movf	postinc2,w,c
 27608  014A9A  0A80               	xorlw	128
 27609  014A9C  6E01               	movwf	btemp^0,c
 27610  014A9E  0EF7               	movlw	-9
 27611  014AA0  50E3               	movf	plusw1,w,c
 27612  014AA2  0A80               	xorlw	128
 27613  014AA4  5801               	subwfb	btemp^0,w,c
 27614  014AA6  B0D8               	btfsc	status,0,c
 27615  014AA8  D053               	goto	l7872
 27616                           
 27617                           ;stkvar	_b @ sp[(-4)+-4]
 27618                           ;stkvar	_a @ sp[(-4)+-8]
 27619  014AAA  0EF4               	movlw	-12
 27620  014AAC  006F FF8C  F009    	movff	plusw1,btemp+8
 27621  014AB2  0EF5               	movlw	-11
 27622  014AB4  006F FF8C  F00A    	movff	plusw1,btemp+9
 27623  014ABA  0EF6               	movlw	-10
 27624  014ABC  006F FF8C  F00B    	movff	plusw1,btemp+10
 27625  014AC2  0EF7               	movlw	-9
 27626  014AC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 27627  014ACA  0EF8               	movlw	-8
 27628  014ACC  50E3               	movf	plusw1,w,c
 27629  014ACE  5E09               	subwf	(btemp+8)^0,f,c
 27630  014AD0  0EF9               	movlw	-7
 27631  014AD2  50E3               	movf	plusw1,w,c
 27632  014AD4  5A0A               	subwfb	(btemp+9)^0,f,c
 27633  014AD6  0EFA               	movlw	-6
 27634  014AD8  50E3               	movf	plusw1,w,c
 27635  014ADA  5A0B               	subwfb	(btemp+10)^0,f,c
 27636  014ADC  0EFB               	movlw	-5
 27637  014ADE  50E3               	movf	plusw1,w,c
 27638  014AE0  5A0C               	subwfb	(btemp+11)^0,f,c
 27639  014AE2  0EFF               	movlw	255
 27640  014AE4  2409               	addwf	(btemp+8)^0,w,c
 27641  014AE6  6E05               	movwf	(btemp+4)^0,c
 27642  014AE8  0EFF               	movlw	255
 27643  014AEA  200A               	addwfc	(btemp+9)^0,w,c
 27644  014AEC  6E06               	movwf	(btemp+5)^0,c
 27645  014AEE  0EFF               	movlw	255
 27646  014AF0  200B               	addwfc	(btemp+10)^0,w,c
 27647  014AF2  6E07               	movwf	(btemp+6)^0,c
 27648  014AF4  0EFF               	movlw	255
 27649  014AF6  200C               	addwfc	(btemp+11)^0,w,c
 27650  014AF8  6E08               	movwf	(btemp+7)^0,c
 27651                           
 27652                           ;stkvar	_b @ sp[(-4)+-4]
 27653  014AFA  0EF8               	movlw	-8
 27654  014AFC  0060  F017  FFE3   	movff	btemp+4,plusw1
 27655  014B02  0EF9               	movlw	-7
 27656  014B04  0060  F01B  FFE3   	movff	btemp+5,plusw1
 27657  014B0A  0EFA               	movlw	-6
 27658  014B0C  0060  F01F  FFE3   	movff	btemp+6,plusw1
 27659  014B12  0EFB               	movlw	-5
 27660  014B14  0060  F023  FFE3   	movff	btemp+7,plusw1
 27661                           
 27662                           ;stkvar	_signs @ sp[(-4)+3]
 27663  014B1A  0EFF               	movlw	-1
 27664  014B1C  7EE3               	btg	plusw1,7,c
 27665                           
 27666                           ;stkvar	_grs @ sp[(-4)+0]
 27667  014B1E  0EFC               	movlw	-4
 27668  014B20  50E3               	movf	plusw1,w,c
 27669  014B22  0800               	sublw	0
 27670  014B24  6E0C               	movwf	(btemp+11)^0,c
 27671                           
 27672                           ;stkvar	_grs @ sp[(-4)+0]
 27673  014B26  0EFC               	movlw	-4
 27674  014B28  0060  F033  FFE3   	movff	btemp+11,plusw1
 27675                           
 27676                           ;stkvar	_grs @ sp[(-4)+0]
 27677  014B2E  0EFC               	movlw	-4
 27678  014B30  50E3               	movf	plusw1,w,c
 27679  014B32  A4D8               	btfss	status,2,c
 27680  014B34  D020               	goto	l7874
 27681                           
 27682                           ;stkvar	_b @ sp[(-4)+-4]
 27683  014B36  50E1               	movf	fsr1l,w,c
 27684  014B38  0FF8               	addlw	-8
 27685  014B3A  6ED9               	movwf	fsr2l,c
 27686  014B3C  50E2               	movf	fsr1h,w,c
 27687  014B3E  6EDA               	movwf	fsr2h,c
 27688  014B40  0EFF               	movlw	255
 27689  014B42  22DA               	addwfc	fsr2h,f,c
 27690  014B44  2ADE               	incf	postinc2,f,c
 27691  014B46  0E00               	movlw	0
 27692  014B48  22DE               	addwfc	postinc2,f,c
 27693  014B4A  22DE               	addwfc	postinc2,f,c
 27694  014B4C  22DE               	addwfc	postinc2,f,c
 27695  014B4E  D013               	goto	l7874
 27696  014B50                     l7872:
 27697                           
 27698                           ;stkvar	_a @ sp[(-4)+-8]
 27699                           ;stkvar	_b @ sp[(-4)+-4]
 27700  014B50  50E1               	movf	fsr1l,w,c
 27701  014B52  0FF8               	addlw	-8
 27702  014B54  6ED9               	movwf	fsr2l,c
 27703  014B56  50E2               	movf	fsr1h,w,c
 27704  014B58  6EDA               	movwf	fsr2h,c
 27705  014B5A  0EFF               	movlw	255
 27706  014B5C  22DA               	addwfc	fsr2h,f,c
 27707  014B5E  0EF4               	movlw	-12
 27708  014B60  50E3               	movf	plusw1,w,c
 27709  014B62  5EDE               	subwf	postinc2,f,c
 27710  014B64  0EF5               	movlw	-11
 27711  014B66  50E3               	movf	plusw1,w,c
 27712  014B68  5ADE               	subwfb	postinc2,f,c
 27713  014B6A  0EF6               	movlw	-10
 27714  014B6C  50E3               	movf	plusw1,w,c
 27715  014B6E  5ADE               	subwfb	postinc2,f,c
 27716  014B70  0EF7               	movlw	-9
 27717  014B72  50E3               	movf	plusw1,w,c
 27718  014B74  5ADE               	subwfb	postinc2,f,c
 27719  014B76                     l7874:
 27720                           
 27721                           ;stkvar	_b @ sp[(-4)+-4]
 27722  014B76  0EF8               	movlw	-8
 27723  014B78  50E3               	movf	plusw1,w,c
 27724  014B7A  E145               	bnz	l7896
 27725  014B7C  0EF9               	movlw	-7
 27726  014B7E  50E3               	movf	plusw1,w,c
 27727  014B80  E142               	bnz	l7896
 27728  014B82  0EFA               	movlw	-6
 27729  014B84  50E3               	movf	plusw1,w,c
 27730  014B86  E13F               	bnz	l7896
 27731  014B88  0EFB               	movlw	-5
 27732  014B8A  50E3               	movf	plusw1,w,c
 27733  014B8C  A4D8               	btfss	status,2,c
 27734  014B8E  D03B               	goto	l7896
 27735                           
 27736                           ;stkvar	_grs @ sp[(-4)+0]
 27737  014B90  0EFC               	movlw	-4
 27738  014B92  50E3               	movf	plusw1,w,c
 27739  014B94  A4D8               	btfss	status,2,c
 27740  014B96  D037               	goto	l7896
 27741  014B98                     u5730:
 27742  014B98  0E00               	movlw	0
 27743  014B9A  6E01               	movwf	btemp^0,c
 27744  014B9C  0E00               	movlw	0
 27745  014B9E  6E02               	movwf	(btemp+1)^0,c
 27746  014BA0  0E00               	movlw	0
 27747  014BA2  6E03               	movwf	(btemp+2)^0,c
 27748  014BA4  0E00               	movlw	0
 27749  014BA6  6E04               	movwf	(btemp+3)^0,c
 27750  014BA8  D0C6               	goto	l2940
 27751  014BAA                     l7882:
 27752                           
 27753                           ;stkvar	_b @ sp[(-4)+-4]
 27754  014BAA  90D8               	bcf	status,0,c
 27755  014BAC  0EF8               	movlw	-8
 27756  014BAE  36E3               	rlcf	plusw1,f,c
 27757  014BB0  0EF9               	movlw	-7
 27758  014BB2  36E3               	rlcf	plusw1,f,c
 27759  014BB4  0EFA               	movlw	-6
 27760  014BB6  36E3               	rlcf	plusw1,f,c
 27761  014BB8  0EFB               	movlw	-5
 27762  014BBA  36E3               	rlcf	plusw1,f,c
 27763                           
 27764                           ;stkvar	_grs @ sp[(-4)+0]
 27765  014BBC  0EFC               	movlw	-4
 27766  014BBE  AEE3               	btfss	plusw1,7,c
 27767  014BC0  D002               	goto	l2952
 27768                           
 27769                           ;stkvar	_b @ sp[(-4)+-4]
 27770  014BC2  0EF8               	movlw	-8
 27771  014BC4  80E3               	bsf	plusw1,0,c
 27772  014BC6                     l2952:
 27773                           
 27774                           ;stkvar	_grs @ sp[(-4)+0]
 27775  014BC6  0EFC               	movlw	-4
 27776  014BC8  A0E3               	btfss	plusw1,0,c
 27777  014BCA  D00E               	goto	l7890
 27778                           
 27779                           ;stkvar	_grs @ sp[(-4)+0]
 27780  014BCC  0EFC               	movlw	-4
 27781  014BCE  006F FF8C  F00C    	movff	plusw1,btemp+11
 27782  014BD4  90D8               	bcf	status,0,c
 27783  014BD6  340C               	rlcf	(btemp+11)^0,w,c
 27784  014BD8  6E0B               	movwf	(btemp+10)^0,c
 27785  014BDA  0E01               	movlw	1
 27786  014BDC  120B               	iorwf	(btemp+10)^0,f,c
 27787                           
 27788                           ;stkvar	_grs @ sp[(-4)+0]
 27789  014BDE  0EFC               	movlw	-4
 27790  014BE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27791  014BE6  D009               	goto	l7892
 27792  014BE8                     l7890:
 27793                           
 27794                           ;stkvar	_grs @ sp[(-4)+0]
 27795  014BE8  50E1               	movf	fsr1l,w,c
 27796  014BEA  0FFC               	addlw	-4
 27797  014BEC  6ED9               	movwf	fsr2l,c
 27798  014BEE  50E2               	movf	fsr1h,w,c
 27799  014BF0  6EDA               	movwf	fsr2h,c
 27800  014BF2  0EFF               	movlw	255
 27801  014BF4  22DA               	addwfc	fsr2h,f,c
 27802  014BF6  90D8               	bcf	status,0,c
 27803  014BF8  36DF               	rlcf	indf2,f,c
 27804  014BFA                     l7892:
 27805                           
 27806                           ;stkvar	_bexp @ sp[(-4)+1]
 27807  014BFA  0EFD               	movlw	-3
 27808  014BFC  50E3               	movf	plusw1,w,c
 27809  014BFE  B4D8               	btfsc	status,2,c
 27810  014C00  D002               	goto	l7896
 27811                           
 27812                           ;stkvar	_bexp @ sp[(-4)+1]
 27813  014C02  0EFD               	movlw	-3
 27814  014C04  06E3               	decf	plusw1,f,c
 27815  014C06                     l7896:
 27816                           
 27817                           ;stkvar	_b @ sp[(-4)+-4]
 27818  014C06  0EFA               	movlw	-6
 27819  014C08  AEE3               	btfss	plusw1,7,c
 27820  014C0A  D7CF               	goto	l7882
 27821  014C0C                     u5770:
 27822                           
 27823                           ;stkvar	_aexp @ sp[(-4)+2]
 27824  014C0C  0EFE               	movlw	-2
 27825  014C0E  6AE3               	clrf	plusw1,c
 27826                           
 27827                           ;stkvar	_grs @ sp[(-4)+0]
 27828  014C10  0EFC               	movlw	-4
 27829  014C12  AEE3               	btfss	plusw1,7,c
 27830  014C14  D00F               	goto	l7910
 27831                           
 27832                           ;stkvar	_grs @ sp[(-4)+0]
 27833  014C16  0EFC               	movlw	-4
 27834  014C18  006F FF8C  F00C    	movff	plusw1,btemp+11
 27835  014C1E  0E7F               	movlw	127
 27836  014C20  160C               	andwf	(btemp+11)^0,f,c
 27837  014C22  B4D8               	btfsc	status,2,c
 27838  014C24  D004               	goto	l7906
 27839  014C26                     u5790:
 27840                           
 27841                           ;stkvar	_aexp @ sp[(-4)+2]
 27842  014C26  0EFE               	movlw	-2
 27843  014C28  6AE3               	clrf	plusw1,c
 27844  014C2A  2AE3               	incf	plusw1,f,c
 27845  014C2C  D003               	goto	l7910
 27846  014C2E                     l7906:
 27847                           
 27848                           ;stkvar	_b @ sp[(-4)+-4]
 27849  014C2E  0EF8               	movlw	-8
 27850  014C30  B0E3               	btfsc	plusw1,0,c
 27851  014C32  D7F9               	goto	u5790
 27852  014C34                     l7910:
 27853                           
 27854                           ;stkvar	_aexp @ sp[(-4)+2]
 27855  014C34  0EFE               	movlw	-2
 27856  014C36  50E3               	movf	plusw1,w,c
 27857  014C38  B4D8               	btfsc	status,2,c
 27858  014C3A  D02B               	goto	l7922
 27859                           
 27860                           ;stkvar	_b @ sp[(-4)+-4]
 27861  014C3C  50E1               	movf	fsr1l,w,c
 27862  014C3E  0FF8               	addlw	-8
 27863  014C40  6ED9               	movwf	fsr2l,c
 27864  014C42  50E2               	movf	fsr1h,w,c
 27865  014C44  6EDA               	movwf	fsr2h,c
 27866  014C46  0EFF               	movlw	255
 27867  014C48  22DA               	addwfc	fsr2h,f,c
 27868  014C4A  2ADE               	incf	postinc2,f,c
 27869  014C4C  0E00               	movlw	0
 27870  014C4E  22DE               	addwfc	postinc2,f,c
 27871  014C50  22DE               	addwfc	postinc2,f,c
 27872  014C52  22DE               	addwfc	postinc2,f,c
 27873                           
 27874                           ;stkvar	_b @ sp[(-4)+-4]
 27875  014C54  0EFB               	movlw	-5
 27876  014C56  A0E3               	btfss	plusw1,0,c
 27877  014C58  D01C               	goto	l7922
 27878  014C5A  0E01               	movlw	1
 27879  014C5C  6E0C               	movwf	(btemp+11)^0,c
 27880                           
 27881                           ;stkvar	_b @ sp[(-4)+-4]
 27882  014C5E  50E1               	movf	fsr1l,w,c
 27883  014C60  0FF8               	addlw	-8
 27884  014C62  6ED9               	movwf	fsr2l,c
 27885  014C64  50E2               	movf	fsr1h,w,c
 27886  014C66  6EDA               	movwf	fsr2h,c
 27887  014C68  0EFF               	movlw	255
 27888  014C6A  22DA               	addwfc	fsr2h,f,c
 27889  014C6C  280C               	incf	(btemp+11)^0,w,c
 27890  014C6E  52DE               	movf	postinc2,f,c
 27891  014C70  D008               	goto	u5830
 27892  014C72                     u5835:
 27893  014C72  52DE               	movf	postinc2,f,c
 27894  014C74  90D8               	bcf	status,0,c
 27895  014C76  BEDC               	btfsc	preinc2,7,c
 27896  014C78  80D8               	bsf	status,0,c
 27897  014C7A  32DD               	rrcf	postdec2,f,c
 27898  014C7C  32DD               	rrcf	postdec2,f,c
 27899  014C7E  32DD               	rrcf	postdec2,f,c
 27900  014C80  32DE               	rrcf	postinc2,f,c
 27901  014C82                     u5830:
 27902  014C82  2EE8               	decfsz	wreg,f,c
 27903  014C84  D7F6               	goto	u5835
 27904                           
 27905                           ;stkvar	_bexp @ sp[(-4)+1]
 27906  014C86  0EFD               	movlw	-3
 27907  014C88  28E3               	incf	plusw1,w,c
 27908  014C8A  B4D8               	btfsc	status,2,c
 27909  014C8C  D002               	goto	l7922
 27910                           
 27911                           ;stkvar	_bexp @ sp[(-4)+1]
 27912  014C8E  0EFD               	movlw	-3
 27913  014C90  2AE3               	incf	plusw1,f,c
 27914  014C92                     l7922:
 27915                           
 27916                           ;stkvar	_bexp @ sp[(-4)+1]
 27917  014C92  0EFD               	movlw	-3
 27918  014C94  28E3               	incf	plusw1,w,c
 27919  014C96  B4D8               	btfsc	status,2,c
 27920  014C98  D004               	goto	u5860
 27921                           
 27922                           ;stkvar	_bexp @ sp[(-4)+1]
 27923  014C9A  0EFD               	movlw	-3
 27924  014C9C  50E3               	movf	plusw1,w,c
 27925  014C9E  A4D8               	btfss	status,2,c
 27926  014CA0  D00E               	goto	l7932
 27927  014CA2                     u5860:
 27928                           
 27929                           ;stkvar	_b @ sp[(-4)+-4]
 27930  014CA2  0EF8               	movlw	-8
 27931  014CA4  6AE3               	clrf	plusw1,c
 27932  014CA6  0EF9               	movlw	-7
 27933  014CA8  6AE3               	clrf	plusw1,c
 27934  014CAA  0EFA               	movlw	-6
 27935  014CAC  6AE3               	clrf	plusw1,c
 27936  014CAE  0EFB               	movlw	-5
 27937  014CB0  6AE3               	clrf	plusw1,c
 27938                           
 27939                           ;stkvar	_bexp @ sp[(-4)+1]
 27940  014CB2  0EFD               	movlw	-3
 27941  014CB4  50E3               	movf	plusw1,w,c
 27942  014CB6  A4D8               	btfss	status,2,c
 27943  014CB8  D002               	goto	l7932
 27944                           
 27945                           ;stkvar	_signs @ sp[(-4)+3]
 27946  014CBA  0EFF               	movlw	-1
 27947  014CBC  6AE3               	clrf	plusw1,c
 27948  014CBE                     l7932:
 27949                           
 27950                           ;stkvar	_bexp @ sp[(-4)+1]
 27951  014CBE  0EFD               	movlw	-3
 27952  014CC0  A0E3               	btfss	plusw1,0,c
 27953  014CC2  D009               	goto	l7936
 27954                           
 27955                           ;stkvar	_b @ sp[(-4)+-4]
 27956  014CC4  0EFA               	movlw	250
 27957  014CC6  24E1               	addwf	fsr1l,w,c
 27958  014CC8  6ED9               	movwf	fsr2l,c
 27959  014CCA  0EFF               	movlw	255
 27960  014CCC  20E2               	addwfc	fsr1h,w,c
 27961  014CCE  6EDA               	movwf	fsr2h,c
 27962  014CD0  0E00               	movlw	0
 27963  014CD2  8EDB               	bsf	plusw2,7,c
 27964  014CD4  D008               	goto	l7938
 27965  014CD6                     l7936:
 27966                           
 27967                           ;stkvar	_b @ sp[(-4)+-4]
 27968  014CD6  0EFA               	movlw	250
 27969  014CD8  24E1               	addwf	fsr1l,w,c
 27970  014CDA  6ED9               	movwf	fsr2l,c
 27971  014CDC  0EFF               	movlw	255
 27972  014CDE  20E2               	addwfc	fsr1h,w,c
 27973  014CE0  6EDA               	movwf	fsr2h,c
 27974  014CE2  0E7F               	movlw	127
 27975  014CE4  16DF               	andwf	indf2,f,c
 27976  014CE6                     l7938:
 27977                           
 27978                           ;stkvar	_b @ sp[(-4)+-4]
 27979  014CE6  0EFB               	movlw	251
 27980  014CE8  24E1               	addwf	fsr1l,w,c
 27981  014CEA  6ED9               	movwf	fsr2l,c
 27982  014CEC  0EFF               	movlw	255
 27983  014CEE  20E2               	addwfc	fsr1h,w,c
 27984  014CF0  6EDA               	movwf	fsr2h,c
 27985                           
 27986                           ;stkvar	_bexp @ sp[(-4)+1]
 27987  014CF2  0EFD               	movlw	-3
 27988  014CF4  006F FF8C  F00C    	movff	plusw1,btemp+11
 27989  014CFA  90D8               	bcf	status,0,c
 27990  014CFC  300C               	rrcf	(btemp+11)^0,w,c
 27991  014CFE  6EDF               	movwf	indf2,c
 27992                           
 27993                           ;stkvar	_signs @ sp[(-4)+3]
 27994  014D00  0EFF               	movlw	-1
 27995  014D02  AEE3               	btfss	plusw1,7,c
 27996  014D04  D008               	goto	l7944
 27997                           
 27998                           ;stkvar	_b @ sp[(-4)+-4]
 27999  014D06  0EFB               	movlw	251
 28000  014D08  24E1               	addwf	fsr1l,w,c
 28001  014D0A  6ED9               	movwf	fsr2l,c
 28002  014D0C  0EFF               	movlw	255
 28003  014D0E  20E2               	addwfc	fsr1h,w,c
 28004  014D10  6EDA               	movwf	fsr2h,c
 28005  014D12  0E00               	movlw	0
 28006  014D14  8EDB               	bsf	plusw2,7,c
 28007  014D16                     l7944:
 28008                           
 28009                           ;stkvar	_b @ sp[(-4)+-4]
 28010  014D16  0EF8               	movlw	-8
 28011  014D18  006F FF8C  F001    	movff	plusw1,btemp
 28012  014D1E  0EF9               	movlw	-7
 28013  014D20  006F FF8C  F002    	movff	plusw1,btemp+1
 28014  014D26  0EFA               	movlw	-6
 28015  014D28  006F FF8C  F003    	movff	plusw1,btemp+2
 28016  014D2E  0EFB               	movlw	-5
 28017  014D30  006F FF8C  F004    	movff	plusw1,btemp+3
 28018  014D36                     l2940:
 28019                           
 28020                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 28021  014D36  0EF4               	movlw	244
 28022  014D38  26E1               	addwf	fsr1l,f,c
 28023  014D3A  0EFF               	movlw	255
 28024  014D3C  22E2               	addwfc	fsr1h,f,c
 28025  014D3E  0012               	return		;funcret
 28026  014D40                     __end_of___fladd:
 28027                           	opt callstack 0
 28028                           
 28029 ;; *************** function ___flmul *****************
 28030 ;; Defined at:
 28031 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 28032 ;; Parameters:    Size  Location     Type
 28033 ;;  b               4  [STACK] unsigned char 
 28034 ;;  a               4  [STACK] unsigned char 
 28035 ;; Auto vars:     Size  Location     Type
 28036 ;;  prod            4  [STACK] struct .
 28037 ;;  grs             4  [STACK] unsigned long 
 28038 ;;  temp            2  [STACK] struct .
 28039 ;;  bexp            1  [STACK] unsigned char 
 28040 ;;  aexp            1  [STACK] unsigned char 
 28041 ;;  sign            1  [STACK] unsigned char 
 28042 ;; Return value:  Size  Location     Type
 28043 ;;                  4  [STACK] unsigned char 
 28044 ;; Registers used:
 28045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28046 ;; Tracked objects:
 28047 ;;		On entry : 0/1
 28048 ;;		On exit  : 0/0
 28049 ;;		Unchanged: 0/0
 28050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28055 ;;Total ram usage:        0 bytes
 28056 ;; Hardware stack levels used:    1
 28057 ;; Hardware stack levels required when called:   15
 28058 ;; This function calls:
 28059 ;;		Nothing
 28060 ;; This function is called by:
 28061 ;;		_conv_raw_result
 28062 ;;		_lp_filter
 28063 ;;		_calc_model_data
 28064 ;;		_calc_bsoc
 28065 ;;		_init_bsoc
 28066 ;;		_efgtoa
 28067 ;; This function uses a reentrant model
 28068 ;;
 28069                           
 28070                           	psect	text108
 28071  013D5A                     __ptext108:
 28072                           	opt callstack 0
 28073  013D5A                     ___flmul:
 28074                           	opt callstack 0
 28075                           
 28076                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 28077  013D5A  0E0D               	movlw	13
 28078  013D5C  26E1               	addwf	fsr1l,f,c
 28079  013D5E  0E00               	movlw	0
 28080  013D60  22E2               	addwfc	fsr1h,f,c
 28081                           
 28082                           ;stkvar	_b @ sp[(-13)+-4]
 28083                           
 28084                           ;incstack = 0
 28085 ;; hardware stack exceeded
 28086  013D62  0EF2               	movlw	242
 28087  013D64  24E1               	addwf	fsr1l,w,c
 28088  013D66  6ED9               	movwf	fsr2l,c
 28089  013D68  0EFF               	movlw	255
 28090  013D6A  20E2               	addwfc	fsr1h,w,c
 28091  013D6C  6EDA               	movwf	fsr2h,c
 28092  013D6E  50DF               	movf	indf2,w,c
 28093  013D70  6E0C               	movwf	(btemp+11)^0,c
 28094  013D72  0E80               	movlw	128
 28095  013D74  160C               	andwf	(btemp+11)^0,f,c
 28096                           
 28097                           ;stkvar	_sign @ sp[(-13)+12]
 28098  013D76  0EFF               	movlw	-1
 28099  013D78  0060  F033  FFE3   	movff	btemp+11,plusw1
 28100                           
 28101                           ;stkvar	_b @ sp[(-13)+-4]
 28102  013D7E  0EF2               	movlw	242
 28103  013D80  24E1               	addwf	fsr1l,w,c
 28104  013D82  6ED9               	movwf	fsr2l,c
 28105  013D84  0EFF               	movlw	255
 28106  013D86  20E2               	addwfc	fsr1h,w,c
 28107  013D88  6EDA               	movwf	fsr2h,c
 28108  013D8A  50DF               	movf	indf2,w,c
 28109  013D8C  6E0C               	movwf	(btemp+11)^0,c
 28110  013D8E  90D8               	bcf	status,0,c
 28111  013D90  340C               	rlcf	(btemp+11)^0,w,c
 28112  013D92  6E0B               	movwf	(btemp+10)^0,c
 28113                           
 28114                           ;stkvar	_bexp @ sp[(-13)+10]
 28115  013D94  0EFD               	movlw	-3
 28116  013D96  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28117                           
 28118                           ;stkvar	_b @ sp[(-13)+-4]
 28119  013D9C  0EF1               	movlw	241
 28120  013D9E  24E1               	addwf	fsr1l,w,c
 28121  013DA0  6ED9               	movwf	fsr2l,c
 28122  013DA2  0EFF               	movlw	255
 28123  013DA4  20E2               	addwfc	fsr1h,w,c
 28124  013DA6  6EDA               	movwf	fsr2h,c
 28125  013DA8  AEDF               	btfss	indf2,7,c
 28126  013DAA  D002               	goto	l8370
 28127                           
 28128                           ;stkvar	_bexp @ sp[(-13)+10]
 28129  013DAC  0EFD               	movlw	-3
 28130  013DAE  80E3               	bsf	plusw1,0,c
 28131  013DB0                     l8370:
 28132                           
 28133                           ;stkvar	_bexp @ sp[(-13)+10]
 28134  013DB0  0EFD               	movlw	-3
 28135  013DB2  50E3               	movf	plusw1,w,c
 28136  013DB4  B4D8               	btfsc	status,2,c
 28137  013DB6  D01F               	goto	l8378
 28138                           
 28139                           ;stkvar	_bexp @ sp[(-13)+10]
 28140  013DB8  0EFD               	movlw	-3
 28141  013DBA  28E3               	incf	plusw1,w,c
 28142  013DBC  A4D8               	btfss	status,2,c
 28143  013DBE  D018               	goto	l8376
 28144  013DC0  0E00               	movlw	0
 28145  013DC2  6E09               	movwf	(btemp+8)^0,c
 28146  013DC4  0E00               	movlw	0
 28147  013DC6  6E0A               	movwf	(btemp+9)^0,c
 28148  013DC8  0E00               	movlw	0
 28149  013DCA  6E0B               	movwf	(btemp+10)^0,c
 28150  013DCC  0E00               	movlw	0
 28151  013DCE  6E0C               	movwf	(btemp+11)^0,c
 28152                           
 28153                           ;stkvar	_b @ sp[(-13)+-4]
 28154  013DD0  0EEF               	movlw	-17
 28155  013DD2  0060  F027  FFE3   	movff	btemp+8,plusw1
 28156  013DD8  0EF0               	movlw	-16
 28157  013DDA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28158  013DE0  0EF1               	movlw	-15
 28159  013DE2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28160  013DE8  0EF2               	movlw	-14
 28161  013DEA  0060  F033  FFE3   	movff	btemp+11,plusw1
 28162  013DF0                     l8376:
 28163                           
 28164                           ;stkvar	_b @ sp[(-13)+-4]
 28165  013DF0  0EF1               	movlw	-15
 28166  013DF2  8EE3               	bsf	plusw1,7,c
 28167  013DF4  D018               	goto	l8380
 28168  013DF6                     l8378:
 28169  013DF6  0E00               	movlw	0
 28170  013DF8  6E09               	movwf	(btemp+8)^0,c
 28171  013DFA  0E00               	movlw	0
 28172  013DFC  6E0A               	movwf	(btemp+9)^0,c
 28173  013DFE  0E00               	movlw	0
 28174  013E00  6E0B               	movwf	(btemp+10)^0,c
 28175  013E02  0E00               	movlw	0
 28176  013E04  6E0C               	movwf	(btemp+11)^0,c
 28177                           
 28178                           ;stkvar	_b @ sp[(-13)+-4]
 28179  013E06  0EEF               	movlw	-17
 28180  013E08  0060  F027  FFE3   	movff	btemp+8,plusw1
 28181  013E0E  0EF0               	movlw	-16
 28182  013E10  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28183  013E16  0EF1               	movlw	-15
 28184  013E18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28185  013E1E  0EF2               	movlw	-14
 28186  013E20  0060  F033  FFE3   	movff	btemp+11,plusw1
 28187  013E26                     l8380:
 28188                           
 28189                           ;stkvar	_a @ sp[(-13)+-8]
 28190  013E26  0EEE               	movlw	238
 28191  013E28  24E1               	addwf	fsr1l,w,c
 28192  013E2A  6ED9               	movwf	fsr2l,c
 28193  013E2C  0EFF               	movlw	255
 28194  013E2E  20E2               	addwfc	fsr1h,w,c
 28195  013E30  6EDA               	movwf	fsr2h,c
 28196  013E32  50DF               	movf	indf2,w,c
 28197  013E34  6E0C               	movwf	(btemp+11)^0,c
 28198  013E36  0E80               	movlw	128
 28199  013E38  160C               	andwf	(btemp+11)^0,f,c
 28200                           
 28201                           ;stkvar	_sign @ sp[(-13)+12]
 28202  013E3A  50E1               	movf	fsr1l,w,c
 28203  013E3C  0FFF               	addlw	-1
 28204  013E3E  6ED9               	movwf	fsr2l,c
 28205  013E40  50E2               	movf	fsr1h,w,c
 28206  013E42  6EDA               	movwf	fsr2h,c
 28207  013E44  0EFF               	movlw	255
 28208  013E46  22DA               	addwfc	fsr2h,f,c
 28209  013E48  500C               	movf	(btemp+11)^0,w,c
 28210  013E4A  1ADF               	xorwf	indf2,f,c
 28211                           
 28212                           ;stkvar	_a @ sp[(-13)+-8]
 28213  013E4C  0EEE               	movlw	238
 28214  013E4E  24E1               	addwf	fsr1l,w,c
 28215  013E50  6ED9               	movwf	fsr2l,c
 28216  013E52  0EFF               	movlw	255
 28217  013E54  20E2               	addwfc	fsr1h,w,c
 28218  013E56  6EDA               	movwf	fsr2h,c
 28219  013E58  50DF               	movf	indf2,w,c
 28220  013E5A  6E0C               	movwf	(btemp+11)^0,c
 28221  013E5C  90D8               	bcf	status,0,c
 28222  013E5E  340C               	rlcf	(btemp+11)^0,w,c
 28223  013E60  6E0B               	movwf	(btemp+10)^0,c
 28224                           
 28225                           ;stkvar	_aexp @ sp[(-13)+11]
 28226  013E62  0EFE               	movlw	-2
 28227  013E64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28228                           
 28229                           ;stkvar	_a @ sp[(-13)+-8]
 28230  013E6A  0EED               	movlw	237
 28231  013E6C  24E1               	addwf	fsr1l,w,c
 28232  013E6E  6ED9               	movwf	fsr2l,c
 28233  013E70  0EFF               	movlw	255
 28234  013E72  20E2               	addwfc	fsr1h,w,c
 28235  013E74  6EDA               	movwf	fsr2h,c
 28236  013E76  AEDF               	btfss	indf2,7,c
 28237  013E78  D002               	goto	l8388
 28238                           
 28239                           ;stkvar	_aexp @ sp[(-13)+11]
 28240  013E7A  0EFE               	movlw	-2
 28241  013E7C  80E3               	bsf	plusw1,0,c
 28242  013E7E                     l8388:
 28243                           
 28244                           ;stkvar	_aexp @ sp[(-13)+11]
 28245  013E7E  0EFE               	movlw	-2
 28246  013E80  50E3               	movf	plusw1,w,c
 28247  013E82  B4D8               	btfsc	status,2,c
 28248  013E84  D01F               	goto	l8396
 28249                           
 28250                           ;stkvar	_aexp @ sp[(-13)+11]
 28251  013E86  0EFE               	movlw	-2
 28252  013E88  28E3               	incf	plusw1,w,c
 28253  013E8A  A4D8               	btfss	status,2,c
 28254  013E8C  D018               	goto	l8394
 28255  013E8E  0E00               	movlw	0
 28256  013E90  6E09               	movwf	(btemp+8)^0,c
 28257  013E92  0E00               	movlw	0
 28258  013E94  6E0A               	movwf	(btemp+9)^0,c
 28259  013E96  0E00               	movlw	0
 28260  013E98  6E0B               	movwf	(btemp+10)^0,c
 28261  013E9A  0E00               	movlw	0
 28262  013E9C  6E0C               	movwf	(btemp+11)^0,c
 28263                           
 28264                           ;stkvar	_a @ sp[(-13)+-8]
 28265  013E9E  0EEB               	movlw	-21
 28266  013EA0  0060  F027  FFE3   	movff	btemp+8,plusw1
 28267  013EA6  0EEC               	movlw	-20
 28268  013EA8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28269  013EAE  0EED               	movlw	-19
 28270  013EB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28271  013EB6  0EEE               	movlw	-18
 28272  013EB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 28273  013EBE                     l8394:
 28274                           
 28275                           ;stkvar	_a @ sp[(-13)+-8]
 28276  013EBE  0EED               	movlw	-19
 28277  013EC0  8EE3               	bsf	plusw1,7,c
 28278  013EC2  D018               	goto	l8398
 28279  013EC4                     l8396:
 28280  013EC4  0E00               	movlw	0
 28281  013EC6  6E09               	movwf	(btemp+8)^0,c
 28282  013EC8  0E00               	movlw	0
 28283  013ECA  6E0A               	movwf	(btemp+9)^0,c
 28284  013ECC  0E00               	movlw	0
 28285  013ECE  6E0B               	movwf	(btemp+10)^0,c
 28286  013ED0  0E00               	movlw	0
 28287  013ED2  6E0C               	movwf	(btemp+11)^0,c
 28288                           
 28289                           ;stkvar	_a @ sp[(-13)+-8]
 28290  013ED4  0EEB               	movlw	-21
 28291  013ED6  0060  F027  FFE3   	movff	btemp+8,plusw1
 28292  013EDC  0EEC               	movlw	-20
 28293  013EDE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28294  013EE4  0EED               	movlw	-19
 28295  013EE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28296  013EEC  0EEE               	movlw	-18
 28297  013EEE  0060  F033  FFE3   	movff	btemp+11,plusw1
 28298  013EF4                     l8398:
 28299                           
 28300                           ;stkvar	_aexp @ sp[(-13)+11]
 28301  013EF4  0EFE               	movlw	-2
 28302  013EF6  50E3               	movf	plusw1,w,c
 28303  013EF8  B4D8               	btfsc	status,2,c
 28304  013EFA  D004               	goto	u6850
 28305                           
 28306                           ;stkvar	_bexp @ sp[(-13)+10]
 28307  013EFC  0EFD               	movlw	-3
 28308  013EFE  50E3               	movf	plusw1,w,c
 28309  013F00  A4D8               	btfss	status,2,c
 28310  013F02  D009               	goto	l8406
 28311  013F04                     u6850:
 28312  013F04  0E00               	movlw	0
 28313  013F06  6E01               	movwf	btemp^0,c
 28314  013F08  0E00               	movlw	0
 28315  013F0A  6E02               	movwf	(btemp+1)^0,c
 28316  013F0C  0E00               	movlw	0
 28317  013F0E  6E03               	movwf	(btemp+2)^0,c
 28318  013F10  0E00               	movlw	0
 28319  013F12  6E04               	movwf	(btemp+3)^0,c
 28320  013F14  D332               	goto	l3021
 28321  013F16                     l8406:
 28322                           
 28323                           ;stkvar	_b @ sp[(-13)+-4]
 28324  013F16  0EEF               	movlw	-17
 28325  013F18  006F FF8C  F00C    	movff	plusw1,btemp+11
 28326                           
 28327                           ;stkvar	_a @ sp[(-13)+-8]
 28328  013F1E  0EED               	movlw	237
 28329  013F20  24E1               	addwf	fsr1l,w,c
 28330  013F22  6ED9               	movwf	fsr2l,c
 28331  013F24  0EFF               	movlw	255
 28332  013F26  20E2               	addwfc	fsr1h,w,c
 28333  013F28  6EDA               	movwf	fsr2h,c
 28334  013F2A  50DF               	movf	indf2,w,c
 28335  013F2C  020C               	mulwf	(btemp+11)^0,c
 28336                           
 28337                           ;stkvar	_temp @ sp[(-13)+8]
 28338  013F2E  0EFB               	movlw	-5
 28339  013F30  006F FFCF FFE3     	movff	prodl,plusw1
 28340  013F36  0EFC               	movlw	-4
 28341  013F38  006F FFD3 FFE3     	movff	prodh,plusw1
 28342                           
 28343                           ;stkvar	_temp @ sp[(-13)+8]
 28344  013F3E  0EFB               	movlw	-5
 28345  013F40  006F FF8C  F00C    	movff	plusw1,btemp+11
 28346  013F46  0060  F030  F005   	movff	btemp+11,btemp+4
 28347  013F4C  6A06               	clrf	(btemp+5)^0,c
 28348  013F4E  6A07               	clrf	(btemp+6)^0,c
 28349  013F50  6A08               	clrf	(btemp+7)^0,c
 28350                           
 28351                           ;stkvar	_grs @ sp[(-13)+4]
 28352  013F52  0EF7               	movlw	-9
 28353  013F54  0060  F017  FFE3   	movff	btemp+4,plusw1
 28354  013F5A  0EF8               	movlw	-8
 28355  013F5C  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28356  013F62  0EF9               	movlw	-7
 28357  013F64  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28358  013F6A  0EFA               	movlw	-6
 28359  013F6C  0060  F023  FFE3   	movff	btemp+7,plusw1
 28360                           
 28361                           ;stkvar	_temp @ sp[(-13)+8]
 28362  013F72  0EFC               	movlw	252
 28363  013F74  24E1               	addwf	fsr1l,w,c
 28364  013F76  6ED9               	movwf	fsr2l,c
 28365  013F78  0EFF               	movlw	255
 28366  013F7A  20E2               	addwfc	fsr1h,w,c
 28367  013F7C  6EDA               	movwf	fsr2h,c
 28368  013F7E  50DF               	movf	indf2,w,c
 28369  013F80  6E0C               	movwf	(btemp+11)^0,c
 28370  013F82  0060  F030  F005   	movff	btemp+11,btemp+4
 28371  013F88  6A06               	clrf	(btemp+5)^0,c
 28372  013F8A  6A07               	clrf	(btemp+6)^0,c
 28373  013F8C  6A08               	clrf	(btemp+7)^0,c
 28374                           
 28375                           ;stkvar	_prod @ sp[(-13)+0]
 28376  013F8E  0EF3               	movlw	-13
 28377  013F90  0060  F017  FFE3   	movff	btemp+4,plusw1
 28378  013F96  0EF4               	movlw	-12
 28379  013F98  0060  F01B  FFE3   	movff	btemp+5,plusw1
 28380  013F9E  0EF5               	movlw	-11
 28381  013FA0  0060  F01F  FFE3   	movff	btemp+6,plusw1
 28382  013FA6  0EF6               	movlw	-10
 28383  013FA8  0060  F023  FFE3   	movff	btemp+7,plusw1
 28384                           
 28385                           ;stkvar	_b @ sp[(-13)+-4]
 28386  013FAE  0EF0               	movlw	240
 28387  013FB0  24E1               	addwf	fsr1l,w,c
 28388  013FB2  6ED9               	movwf	fsr2l,c
 28389  013FB4  0EFF               	movlw	255
 28390  013FB6  20E2               	addwfc	fsr1h,w,c
 28391  013FB8  6EDA               	movwf	fsr2h,c
 28392  013FBA  50DF               	movf	indf2,w,c
 28393  013FBC  6E0C               	movwf	(btemp+11)^0,c
 28394                           
 28395                           ;stkvar	_a @ sp[(-13)+-8]
 28396  013FBE  0EEC               	movlw	236
 28397  013FC0  24E1               	addwf	fsr1l,w,c
 28398  013FC2  6ED9               	movwf	fsr2l,c
 28399  013FC4  0EFF               	movlw	255
 28400  013FC6  20E2               	addwfc	fsr1h,w,c
 28401  013FC8  6EDA               	movwf	fsr2h,c
 28402  013FCA  50DF               	movf	indf2,w,c
 28403  013FCC  020C               	mulwf	(btemp+11)^0,c
 28404                           
 28405                           ;stkvar	_temp @ sp[(-13)+8]
 28406  013FCE  0EFB               	movlw	-5
 28407  013FD0  006F FFCF FFE3     	movff	prodl,plusw1
 28408  013FD6  0EFC               	movlw	-4
 28409  013FD8  006F FFD3 FFE3     	movff	prodh,plusw1
 28410                           
 28411                           ;stkvar	_grs @ sp[(-13)+4]
 28412  013FDE  50E1               	movf	fsr1l,w,c
 28413  013FE0  0FF7               	addlw	-9
 28414  013FE2  6ED9               	movwf	fsr2l,c
 28415  013FE4  50E2               	movf	fsr1h,w,c
 28416  013FE6  6EDA               	movwf	fsr2h,c
 28417  013FE8  0EFF               	movlw	255
 28418  013FEA  22DA               	addwfc	fsr2h,f,c
 28419                           
 28420                           ;stkvar	_temp @ sp[(-13)+8]
 28421  013FEC  0EFB               	movlw	-5
 28422  013FEE  50E3               	movf	plusw1,w,c
 28423  013FF0  26DE               	addwf	postinc2,f,c
 28424  013FF2  0E00               	movlw	0
 28425  013FF4  22DE               	addwfc	postinc2,f,c
 28426  013FF6  22DE               	addwfc	postinc2,f,c
 28427  013FF8  22DE               	addwfc	postinc2,f,c
 28428                           
 28429                           ;stkvar	_prod @ sp[(-13)+0]
 28430  013FFA  50E1               	movf	fsr1l,w,c
 28431  013FFC  0FF3               	addlw	-13
 28432  013FFE  6ED9               	movwf	fsr2l,c
 28433  014000  50E2               	movf	fsr1h,w,c
 28434  014002  6EDA               	movwf	fsr2h,c
 28435  014004  0EFF               	movlw	255
 28436  014006  22DA               	addwfc	fsr2h,f,c
 28437                           
 28438                           ;stkvar	_temp @ sp[(-13)+8]
 28439  014008  0EFC               	movlw	252
 28440  01400A  24E1               	addwf	fsr1l,w,c
 28441  01400C  6EE9               	movwf	fsr0l,c
 28442  01400E  0EFF               	movlw	255
 28443  014010  20E2               	addwfc	fsr1h,w,c
 28444  014012  6EEA               	movwf	fsr0h,c
 28445  014014  50EF               	movf	indf0,w,c
 28446  014016  26DE               	addwf	postinc2,f,c
 28447  014018  0E00               	movlw	0
 28448  01401A  22DE               	addwfc	postinc2,f,c
 28449  01401C  22DE               	addwfc	postinc2,f,c
 28450  01401E  22DE               	addwfc	postinc2,f,c
 28451                           
 28452                           ;stkvar	_b @ sp[(-13)+-4]
 28453  014020  0EF1               	movlw	241
 28454  014022  24E1               	addwf	fsr1l,w,c
 28455  014024  6ED9               	movwf	fsr2l,c
 28456  014026  0EFF               	movlw	255
 28457  014028  20E2               	addwfc	fsr1h,w,c
 28458  01402A  6EDA               	movwf	fsr2h,c
 28459  01402C  50DF               	movf	indf2,w,c
 28460  01402E  6E0C               	movwf	(btemp+11)^0,c
 28461                           
 28462                           ;stkvar	_a @ sp[(-13)+-8]
 28463  014030  0EEB               	movlw	-21
 28464  014032  50E3               	movf	plusw1,w,c
 28465  014034  020C               	mulwf	(btemp+11)^0,c
 28466                           
 28467                           ;stkvar	_temp @ sp[(-13)+8]
 28468  014036  0EFB               	movlw	-5
 28469  014038  006F FFCF FFE3     	movff	prodl,plusw1
 28470  01403E  0EFC               	movlw	-4
 28471  014040  006F FFD3 FFE3     	movff	prodh,plusw1
 28472                           
 28473                           ;stkvar	_grs @ sp[(-13)+4]
 28474  014046  50E1               	movf	fsr1l,w,c
 28475  014048  0FF7               	addlw	-9
 28476  01404A  6ED9               	movwf	fsr2l,c
 28477  01404C  50E2               	movf	fsr1h,w,c
 28478  01404E  6EDA               	movwf	fsr2h,c
 28479  014050  0EFF               	movlw	255
 28480  014052  22DA               	addwfc	fsr2h,f,c
 28481                           
 28482                           ;stkvar	_temp @ sp[(-13)+8]
 28483  014054  0EFB               	movlw	-5
 28484  014056  50E3               	movf	plusw1,w,c
 28485  014058  26DE               	addwf	postinc2,f,c
 28486  01405A  0E00               	movlw	0
 28487  01405C  22DE               	addwfc	postinc2,f,c
 28488  01405E  22DE               	addwfc	postinc2,f,c
 28489  014060  22DE               	addwfc	postinc2,f,c
 28490                           
 28491                           ;stkvar	_prod @ sp[(-13)+0]
 28492  014062  50E1               	movf	fsr1l,w,c
 28493  014064  0FF3               	addlw	-13
 28494  014066  6ED9               	movwf	fsr2l,c
 28495  014068  50E2               	movf	fsr1h,w,c
 28496  01406A  6EDA               	movwf	fsr2h,c
 28497  01406C  0EFF               	movlw	255
 28498  01406E  22DA               	addwfc	fsr2h,f,c
 28499                           
 28500                           ;stkvar	_temp @ sp[(-13)+8]
 28501  014070  0EFC               	movlw	252
 28502  014072  24E1               	addwf	fsr1l,w,c
 28503  014074  6EE9               	movwf	fsr0l,c
 28504  014076  0EFF               	movlw	255
 28505  014078  20E2               	addwfc	fsr1h,w,c
 28506  01407A  6EEA               	movwf	fsr0h,c
 28507  01407C  50EF               	movf	indf0,w,c
 28508  01407E  26DE               	addwf	postinc2,f,c
 28509  014080  0E00               	movlw	0
 28510  014082  22DE               	addwfc	postinc2,f,c
 28511  014084  22DE               	addwfc	postinc2,f,c
 28512  014086  22DE               	addwfc	postinc2,f,c
 28513                           
 28514                           ;stkvar	_grs @ sp[(-13)+4]
 28515  014088  50E1               	movf	fsr1l,w,c
 28516  01408A  0FF7               	addlw	-9
 28517  01408C  6ED9               	movwf	fsr2l,c
 28518  01408E  50E2               	movf	fsr1h,w,c
 28519  014090  6EDA               	movwf	fsr2h,c
 28520  014092  0EFF               	movlw	255
 28521  014094  22DA               	addwfc	fsr2h,f,c
 28522  014096  0E08               	movlw	8
 28523  014098                     u6865:
 28524  014098  90D8               	bcf	status,0,c
 28525  01409A  36DE               	rlcf	postinc2,f,c
 28526  01409C  36DE               	rlcf	postinc2,f,c
 28527  01409E  36DE               	rlcf	postinc2,f,c
 28528  0140A0  36DD               	rlcf	postdec2,f,c
 28529  0140A2  52DD               	movf	postdec2,f,c
 28530  0140A4  52DD               	movf	postdec2,f,c
 28531  0140A6  2EE8               	decfsz	wreg,f,c
 28532  0140A8  D7F7               	goto	u6865
 28533                           
 28534                           ;stkvar	_b @ sp[(-13)+-4]
 28535  0140AA  0EF0               	movlw	240
 28536  0140AC  24E1               	addwf	fsr1l,w,c
 28537  0140AE  6ED9               	movwf	fsr2l,c
 28538  0140B0  0EFF               	movlw	255
 28539  0140B2  20E2               	addwfc	fsr1h,w,c
 28540  0140B4  6EDA               	movwf	fsr2h,c
 28541  0140B6  50DF               	movf	indf2,w,c
 28542  0140B8  6E0C               	movwf	(btemp+11)^0,c
 28543                           
 28544                           ;stkvar	_a @ sp[(-13)+-8]
 28545  0140BA  0EEB               	movlw	-21
 28546  0140BC  50E3               	movf	plusw1,w,c
 28547  0140BE  020C               	mulwf	(btemp+11)^0,c
 28548                           
 28549                           ;stkvar	_temp @ sp[(-13)+8]
 28550  0140C0  0EFB               	movlw	-5
 28551  0140C2  006F FFCF FFE3     	movff	prodl,plusw1
 28552  0140C8  0EFC               	movlw	-4
 28553  0140CA  006F FFD3 FFE3     	movff	prodh,plusw1
 28554                           
 28555                           ;stkvar	_temp @ sp[(-13)+8]
 28556  0140D0  0EFB               	movlw	-5
 28557  0140D2  006F FF8C  F00B    	movff	plusw1,btemp+10
 28558  0140D8  0EFC               	movlw	-4
 28559  0140DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 28560                           
 28561                           ;stkvar	_grs @ sp[(-13)+4]
 28562  0140E0  50E1               	movf	fsr1l,w,c
 28563  0140E2  0FF7               	addlw	-9
 28564  0140E4  6ED9               	movwf	fsr2l,c
 28565  0140E6  50E2               	movf	fsr1h,w,c
 28566  0140E8  6EDA               	movwf	fsr2h,c
 28567  0140EA  0EFF               	movlw	255
 28568  0140EC  22DA               	addwfc	fsr2h,f,c
 28569  0140EE  500B               	movf	(btemp+10)^0,w,c
 28570  0140F0  26DE               	addwf	postinc2,f,c
 28571  0140F2  500C               	movf	(btemp+11)^0,w,c
 28572  0140F4  22DE               	addwfc	postinc2,f,c
 28573  0140F6  0E00               	movlw	0
 28574  0140F8  22DE               	addwfc	postinc2,f,c
 28575  0140FA  22DE               	addwfc	postinc2,f,c
 28576                           
 28577                           ;stkvar	_b @ sp[(-13)+-4]
 28578  0140FC  0EEF               	movlw	-17
 28579  0140FE  006F FF8C  F00C    	movff	plusw1,btemp+11
 28580                           
 28581                           ;stkvar	_a @ sp[(-13)+-8]
 28582  014104  0EEC               	movlw	236
 28583  014106  24E1               	addwf	fsr1l,w,c
 28584  014108  6ED9               	movwf	fsr2l,c
 28585  01410A  0EFF               	movlw	255
 28586  01410C  20E2               	addwfc	fsr1h,w,c
 28587  01410E  6EDA               	movwf	fsr2h,c
 28588  014110  50DF               	movf	indf2,w,c
 28589  014112  020C               	mulwf	(btemp+11)^0,c
 28590                           
 28591                           ;stkvar	_temp @ sp[(-13)+8]
 28592  014114  0EFB               	movlw	-5
 28593  014116  006F FFCF FFE3     	movff	prodl,plusw1
 28594  01411C  0EFC               	movlw	-4
 28595  01411E  006F FFD3 FFE3     	movff	prodh,plusw1
 28596                           
 28597                           ;stkvar	_temp @ sp[(-13)+8]
 28598  014124  0EFB               	movlw	-5
 28599  014126  006F FF8C  F00B    	movff	plusw1,btemp+10
 28600  01412C  0EFC               	movlw	-4
 28601  01412E  006F FF8C  F00C    	movff	plusw1,btemp+11
 28602                           
 28603                           ;stkvar	_grs @ sp[(-13)+4]
 28604  014134  50E1               	movf	fsr1l,w,c
 28605  014136  0FF7               	addlw	-9
 28606  014138  6ED9               	movwf	fsr2l,c
 28607  01413A  50E2               	movf	fsr1h,w,c
 28608  01413C  6EDA               	movwf	fsr2h,c
 28609  01413E  0EFF               	movlw	255
 28610  014140  22DA               	addwfc	fsr2h,f,c
 28611  014142  500B               	movf	(btemp+10)^0,w,c
 28612  014144  26DE               	addwf	postinc2,f,c
 28613  014146  500C               	movf	(btemp+11)^0,w,c
 28614  014148  22DE               	addwfc	postinc2,f,c
 28615  01414A  0E00               	movlw	0
 28616  01414C  22DE               	addwfc	postinc2,f,c
 28617  01414E  22DE               	addwfc	postinc2,f,c
 28618                           
 28619                           ;stkvar	_grs @ sp[(-13)+4]
 28620  014150  50E1               	movf	fsr1l,w,c
 28621  014152  0FF7               	addlw	-9
 28622  014154  6ED9               	movwf	fsr2l,c
 28623  014156  50E2               	movf	fsr1h,w,c
 28624  014158  6EDA               	movwf	fsr2h,c
 28625  01415A  0EFF               	movlw	255
 28626  01415C  22DA               	addwfc	fsr2h,f,c
 28627  01415E  0E08               	movlw	8
 28628  014160                     u6875:
 28629  014160  90D8               	bcf	status,0,c
 28630  014162  36DE               	rlcf	postinc2,f,c
 28631  014164  36DE               	rlcf	postinc2,f,c
 28632  014166  36DE               	rlcf	postinc2,f,c
 28633  014168  36DD               	rlcf	postdec2,f,c
 28634  01416A  52DD               	movf	postdec2,f,c
 28635  01416C  52DD               	movf	postdec2,f,c
 28636  01416E  2EE8               	decfsz	wreg,f,c
 28637  014170  D7F7               	goto	u6875
 28638                           
 28639                           ;stkvar	_b @ sp[(-13)+-4]
 28640  014172  0EEF               	movlw	-17
 28641  014174  006F FF8C  F00C    	movff	plusw1,btemp+11
 28642                           
 28643                           ;stkvar	_a @ sp[(-13)+-8]
 28644  01417A  0EEB               	movlw	-21
 28645  01417C  50E3               	movf	plusw1,w,c
 28646  01417E  020C               	mulwf	(btemp+11)^0,c
 28647                           
 28648                           ;stkvar	_temp @ sp[(-13)+8]
 28649  014180  0EFB               	movlw	-5
 28650  014182  006F FFCF FFE3     	movff	prodl,plusw1
 28651  014188  0EFC               	movlw	-4
 28652  01418A  006F FFD3 FFE3     	movff	prodh,plusw1
 28653                           
 28654                           ;stkvar	_temp @ sp[(-13)+8]
 28655  014190  0EFB               	movlw	-5
 28656  014192  006F FF8C  F00B    	movff	plusw1,btemp+10
 28657  014198  0EFC               	movlw	-4
 28658  01419A  006F FF8C  F00C    	movff	plusw1,btemp+11
 28659                           
 28660                           ;stkvar	_grs @ sp[(-13)+4]
 28661  0141A0  50E1               	movf	fsr1l,w,c
 28662  0141A2  0FF7               	addlw	-9
 28663  0141A4  6ED9               	movwf	fsr2l,c
 28664  0141A6  50E2               	movf	fsr1h,w,c
 28665  0141A8  6EDA               	movwf	fsr2h,c
 28666  0141AA  0EFF               	movlw	255
 28667  0141AC  22DA               	addwfc	fsr2h,f,c
 28668  0141AE  500B               	movf	(btemp+10)^0,w,c
 28669  0141B0  26DE               	addwf	postinc2,f,c
 28670  0141B2  500C               	movf	(btemp+11)^0,w,c
 28671  0141B4  22DE               	addwfc	postinc2,f,c
 28672  0141B6  0E00               	movlw	0
 28673  0141B8  22DE               	addwfc	postinc2,f,c
 28674  0141BA  22DE               	addwfc	postinc2,f,c
 28675                           
 28676                           ;stkvar	_b @ sp[(-13)+-4]
 28677  0141BC  0EF0               	movlw	240
 28678  0141BE  24E1               	addwf	fsr1l,w,c
 28679  0141C0  6ED9               	movwf	fsr2l,c
 28680  0141C2  0EFF               	movlw	255
 28681  0141C4  20E2               	addwfc	fsr1h,w,c
 28682  0141C6  6EDA               	movwf	fsr2h,c
 28683  0141C8  50DF               	movf	indf2,w,c
 28684  0141CA  6E0C               	movwf	(btemp+11)^0,c
 28685                           
 28686                           ;stkvar	_a @ sp[(-13)+-8]
 28687  0141CC  0EED               	movlw	237
 28688  0141CE  24E1               	addwf	fsr1l,w,c
 28689  0141D0  6ED9               	movwf	fsr2l,c
 28690  0141D2  0EFF               	movlw	255
 28691  0141D4  20E2               	addwfc	fsr1h,w,c
 28692  0141D6  6EDA               	movwf	fsr2h,c
 28693  0141D8  50DF               	movf	indf2,w,c
 28694  0141DA  020C               	mulwf	(btemp+11)^0,c
 28695                           
 28696                           ;stkvar	_temp @ sp[(-13)+8]
 28697  0141DC  0EFB               	movlw	-5
 28698  0141DE  006F FFCF FFE3     	movff	prodl,plusw1
 28699  0141E4  0EFC               	movlw	-4
 28700  0141E6  006F FFD3 FFE3     	movff	prodh,plusw1
 28701                           
 28702                           ;stkvar	_temp @ sp[(-13)+8]
 28703  0141EC  0EFB               	movlw	-5
 28704  0141EE  006F FF8C  F00B    	movff	plusw1,btemp+10
 28705  0141F4  0EFC               	movlw	-4
 28706  0141F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 28707                           
 28708                           ;stkvar	_prod @ sp[(-13)+0]
 28709  0141FC  50E1               	movf	fsr1l,w,c
 28710  0141FE  0FF3               	addlw	-13
 28711  014200  6ED9               	movwf	fsr2l,c
 28712  014202  50E2               	movf	fsr1h,w,c
 28713  014204  6EDA               	movwf	fsr2h,c
 28714  014206  0EFF               	movlw	255
 28715  014208  22DA               	addwfc	fsr2h,f,c
 28716  01420A  500B               	movf	(btemp+10)^0,w,c
 28717  01420C  26DE               	addwf	postinc2,f,c
 28718  01420E  500C               	movf	(btemp+11)^0,w,c
 28719  014210  22DE               	addwfc	postinc2,f,c
 28720  014212  0E00               	movlw	0
 28721  014214  22DE               	addwfc	postinc2,f,c
 28722  014216  22DE               	addwfc	postinc2,f,c
 28723                           
 28724                           ;stkvar	_b @ sp[(-13)+-4]
 28725  014218  0EF1               	movlw	241
 28726  01421A  24E1               	addwf	fsr1l,w,c
 28727  01421C  6ED9               	movwf	fsr2l,c
 28728  01421E  0EFF               	movlw	255
 28729  014220  20E2               	addwfc	fsr1h,w,c
 28730  014222  6EDA               	movwf	fsr2h,c
 28731  014224  50DF               	movf	indf2,w,c
 28732  014226  6E0C               	movwf	(btemp+11)^0,c
 28733                           
 28734                           ;stkvar	_a @ sp[(-13)+-8]
 28735  014228  0EEC               	movlw	236
 28736  01422A  24E1               	addwf	fsr1l,w,c
 28737  01422C  6ED9               	movwf	fsr2l,c
 28738  01422E  0EFF               	movlw	255
 28739  014230  20E2               	addwfc	fsr1h,w,c
 28740  014232  6EDA               	movwf	fsr2h,c
 28741  014234  50DF               	movf	indf2,w,c
 28742  014236  020C               	mulwf	(btemp+11)^0,c
 28743                           
 28744                           ;stkvar	_temp @ sp[(-13)+8]
 28745  014238  0EFB               	movlw	-5
 28746  01423A  006F FFCF FFE3     	movff	prodl,plusw1
 28747  014240  0EFC               	movlw	-4
 28748  014242  006F FFD3 FFE3     	movff	prodh,plusw1
 28749                           
 28750                           ;stkvar	_temp @ sp[(-13)+8]
 28751  014248  0EFB               	movlw	-5
 28752  01424A  006F FF8C  F00B    	movff	plusw1,btemp+10
 28753  014250  0EFC               	movlw	-4
 28754  014252  006F FF8C  F00C    	movff	plusw1,btemp+11
 28755                           
 28756                           ;stkvar	_prod @ sp[(-13)+0]
 28757  014258  50E1               	movf	fsr1l,w,c
 28758  01425A  0FF3               	addlw	-13
 28759  01425C  6ED9               	movwf	fsr2l,c
 28760  01425E  50E2               	movf	fsr1h,w,c
 28761  014260  6EDA               	movwf	fsr2h,c
 28762  014262  0EFF               	movlw	255
 28763  014264  22DA               	addwfc	fsr2h,f,c
 28764  014266  500B               	movf	(btemp+10)^0,w,c
 28765  014268  26DE               	addwf	postinc2,f,c
 28766  01426A  500C               	movf	(btemp+11)^0,w,c
 28767  01426C  22DE               	addwfc	postinc2,f,c
 28768  01426E  0E00               	movlw	0
 28769  014270  22DE               	addwfc	postinc2,f,c
 28770  014272  22DE               	addwfc	postinc2,f,c
 28771                           
 28772                           ;stkvar	_b @ sp[(-13)+-4]
 28773  014274  0EF1               	movlw	241
 28774  014276  24E1               	addwf	fsr1l,w,c
 28775  014278  6ED9               	movwf	fsr2l,c
 28776  01427A  0EFF               	movlw	255
 28777  01427C  20E2               	addwfc	fsr1h,w,c
 28778  01427E  6EDA               	movwf	fsr2h,c
 28779  014280  50DF               	movf	indf2,w,c
 28780  014282  6E0C               	movwf	(btemp+11)^0,c
 28781                           
 28782                           ;stkvar	_a @ sp[(-13)+-8]
 28783  014284  0EED               	movlw	237
 28784  014286  24E1               	addwf	fsr1l,w,c
 28785  014288  6ED9               	movwf	fsr2l,c
 28786  01428A  0EFF               	movlw	255
 28787  01428C  20E2               	addwfc	fsr1h,w,c
 28788  01428E  6EDA               	movwf	fsr2h,c
 28789  014290  50DF               	movf	indf2,w,c
 28790  014292  020C               	mulwf	(btemp+11)^0,c
 28791                           
 28792                           ;stkvar	_temp @ sp[(-13)+8]
 28793  014294  0EFB               	movlw	-5
 28794  014296  006F FFCF FFE3     	movff	prodl,plusw1
 28795  01429C  0EFC               	movlw	-4
 28796  01429E  006F FFD3 FFE3     	movff	prodh,plusw1
 28797                           
 28798                           ;stkvar	_temp @ sp[(-13)+8]
 28799  0142A4  0EFB               	movlw	-5
 28800  0142A6  006F FF8C  F00B    	movff	plusw1,btemp+10
 28801  0142AC  0EFC               	movlw	-4
 28802  0142AE  006F FF8C  F00C    	movff	plusw1,btemp+11
 28803  0142B4  500B               	movf	(btemp+10)^0,w,c
 28804  0142B6  6E05               	movwf	(btemp+4)^0,c
 28805  0142B8  500C               	movf	(btemp+11)^0,w,c
 28806  0142BA  6E06               	movwf	(btemp+5)^0,c
 28807  0142BC  6A07               	clrf	(btemp+6)^0,c
 28808  0142BE  6A08               	clrf	(btemp+7)^0,c
 28809  0142C0  0060  F01C  F008   	movff	btemp+6,btemp+7
 28810  0142C6  0060  F018  F007   	movff	btemp+5,btemp+6
 28811  0142CC  0060  F014  F006   	movff	btemp+4,btemp+5
 28812  0142D2  6A05               	clrf	(btemp+4)^0,c
 28813                           
 28814                           ;stkvar	_prod @ sp[(-13)+0]
 28815  0142D4  50E1               	movf	fsr1l,w,c
 28816  0142D6  0FF3               	addlw	-13
 28817  0142D8  6ED9               	movwf	fsr2l,c
 28818  0142DA  50E2               	movf	fsr1h,w,c
 28819  0142DC  6EDA               	movwf	fsr2h,c
 28820  0142DE  0EFF               	movlw	255
 28821  0142E0  22DA               	addwfc	fsr2h,f,c
 28822  0142E2  5005               	movf	(btemp+4)^0,w,c
 28823  0142E4  26DE               	addwf	postinc2,f,c
 28824  0142E6  5006               	movf	(btemp+5)^0,w,c
 28825  0142E8  22DE               	addwfc	postinc2,f,c
 28826  0142EA  5007               	movf	(btemp+6)^0,w,c
 28827  0142EC  22DE               	addwfc	postinc2,f,c
 28828  0142EE  5008               	movf	(btemp+7)^0,w,c
 28829  0142F0  22DE               	addwfc	postinc2,f,c
 28830                           
 28831                           ;stkvar	_prod @ sp[(-13)+0]
 28832  0142F2  50E1               	movf	fsr1l,w,c
 28833  0142F4  0FF3               	addlw	-13
 28834  0142F6  6ED9               	movwf	fsr2l,c
 28835  0142F8  50E2               	movf	fsr1h,w,c
 28836  0142FA  6EDA               	movwf	fsr2h,c
 28837  0142FC  0EFF               	movlw	255
 28838  0142FE  22DA               	addwfc	fsr2h,f,c
 28839                           
 28840                           ;stkvar	_grs @ sp[(-13)+4]
 28841  014300  0EFA               	movlw	250
 28842  014302  24E1               	addwf	fsr1l,w,c
 28843  014304  6EE9               	movwf	fsr0l,c
 28844  014306  0EFF               	movlw	255
 28845  014308  20E2               	addwfc	fsr1h,w,c
 28846  01430A  6EEA               	movwf	fsr0h,c
 28847  01430C  50EF               	movf	indf0,w,c
 28848  01430E  26DE               	addwf	postinc2,f,c
 28849  014310  0E00               	movlw	0
 28850  014312  22DE               	addwfc	postinc2,f,c
 28851  014314  22DE               	addwfc	postinc2,f,c
 28852  014316  22DE               	addwfc	postinc2,f,c
 28853                           
 28854                           ;stkvar	_grs @ sp[(-13)+4]
 28855  014318  50E1               	movf	fsr1l,w,c
 28856  01431A  0FF7               	addlw	-9
 28857  01431C  6ED9               	movwf	fsr2l,c
 28858  01431E  50E2               	movf	fsr1h,w,c
 28859  014320  6EDA               	movwf	fsr2h,c
 28860  014322  0EFF               	movlw	255
 28861  014324  22DA               	addwfc	fsr2h,f,c
 28862  014326  0E08               	movlw	8
 28863  014328                     u6885:
 28864  014328  90D8               	bcf	status,0,c
 28865  01432A  36DE               	rlcf	postinc2,f,c
 28866  01432C  36DE               	rlcf	postinc2,f,c
 28867  01432E  36DE               	rlcf	postinc2,f,c
 28868  014330  36DD               	rlcf	postdec2,f,c
 28869  014332  52DD               	movf	postdec2,f,c
 28870  014334  52DD               	movf	postdec2,f,c
 28871  014336  2EE8               	decfsz	wreg,f,c
 28872  014338  D7F7               	goto	u6885
 28873  01433A  0E82               	movlw	130
 28874  01433C  6E0B               	movwf	(btemp+10)^0,c
 28875  01433E  0EFF               	movlw	255
 28876  014340  6E0C               	movwf	(btemp+11)^0,c
 28877                           
 28878                           ;stkvar	_bexp @ sp[(-13)+10]
 28879  014342  0EFD               	movlw	-3
 28880  014344  50E3               	movf	plusw1,w,c
 28881  014346  6E09               	movwf	(btemp+8)^0,c
 28882  014348  6A0A               	clrf	(btemp+9)^0,c
 28883                           
 28884                           ;stkvar	_aexp @ sp[(-13)+11]
 28885  01434A  0EFE               	movlw	-2
 28886  01434C  50E3               	movf	plusw1,w,c
 28887  01434E  2609               	addwf	(btemp+8)^0,f,c
 28888  014350  0E00               	movlw	0
 28889  014352  220A               	addwfc	(btemp+9)^0,f,c
 28890  014354  500B               	movf	(btemp+10)^0,w,c
 28891  014356  2609               	addwf	(btemp+8)^0,f,c
 28892  014358  500C               	movf	(btemp+11)^0,w,c
 28893  01435A  220A               	addwfc	(btemp+9)^0,f,c
 28894                           
 28895                           ;stkvar	_temp @ sp[(-13)+8]
 28896  01435C  0EFB               	movlw	-5
 28897  01435E  0060  F027  FFE3   	movff	btemp+8,plusw1
 28898  014364  0EFC               	movlw	-4
 28899  014366  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28900  01436C  D021               	goto	l8468
 28901  01436E                     l8458:
 28902                           
 28903                           ;stkvar	_prod @ sp[(-13)+0]
 28904  01436E  90D8               	bcf	status,0,c
 28905  014370  0EF3               	movlw	-13
 28906  014372  36E3               	rlcf	plusw1,f,c
 28907  014374  0EF4               	movlw	-12
 28908  014376  36E3               	rlcf	plusw1,f,c
 28909  014378  0EF5               	movlw	-11
 28910  01437A  36E3               	rlcf	plusw1,f,c
 28911  01437C  0EF6               	movlw	-10
 28912  01437E  36E3               	rlcf	plusw1,f,c
 28913                           
 28914                           ;stkvar	_grs @ sp[(-13)+4]
 28915  014380  0EFA               	movlw	-6
 28916  014382  AEE3               	btfss	plusw1,7,c
 28917  014384  D002               	goto	l8464
 28918                           
 28919                           ;stkvar	_prod @ sp[(-13)+0]
 28920  014386  0EF3               	movlw	-13
 28921  014388  80E3               	bsf	plusw1,0,c
 28922  01438A                     l8464:
 28923                           
 28924                           ;stkvar	_grs @ sp[(-13)+4]
 28925  01438A  90D8               	bcf	status,0,c
 28926  01438C  0EF7               	movlw	-9
 28927  01438E  36E3               	rlcf	plusw1,f,c
 28928  014390  0EF8               	movlw	-8
 28929  014392  36E3               	rlcf	plusw1,f,c
 28930  014394  0EF9               	movlw	-7
 28931  014396  36E3               	rlcf	plusw1,f,c
 28932  014398  0EFA               	movlw	-6
 28933  01439A  36E3               	rlcf	plusw1,f,c
 28934                           
 28935                           ;stkvar	_temp @ sp[(-13)+8]
 28936  01439C  50E1               	movf	fsr1l,w,c
 28937  01439E  0FFB               	addlw	-5
 28938  0143A0  6ED9               	movwf	fsr2l,c
 28939  0143A2  50E2               	movf	fsr1h,w,c
 28940  0143A4  6EDA               	movwf	fsr2h,c
 28941  0143A6  0EFF               	movlw	255
 28942  0143A8  22DA               	addwfc	fsr2h,f,c
 28943  0143AA  06DE               	decf	postinc2,f,c
 28944  0143AC  0E00               	movlw	0
 28945  0143AE  5ADD               	subwfb	postdec2,f,c
 28946  0143B0                     l8468:
 28947                           
 28948                           ;stkvar	_prod @ sp[(-13)+0]
 28949  0143B0  0EF5               	movlw	-11
 28950  0143B2  AEE3               	btfss	plusw1,7,c
 28951  0143B4  D7DC               	goto	l8458
 28952                           
 28953                           ;stkvar	_aexp @ sp[(-13)+11]
 28954  0143B6  0EFE               	movlw	-2
 28955  0143B8  6AE3               	clrf	plusw1,c
 28956                           
 28957                           ;stkvar	_grs @ sp[(-13)+4]
 28958  0143BA  0EFA               	movlw	-6
 28959  0143BC  AEE3               	btfss	plusw1,7,c
 28960  0143BE  D020               	goto	l8482
 28961                           
 28962                           ;stkvar	_grs @ sp[(-13)+4]
 28963  0143C0  50E1               	movf	fsr1l,w,c
 28964  0143C2  0FF7               	addlw	-9
 28965  0143C4  6ED9               	movwf	fsr2l,c
 28966  0143C6  50E2               	movf	fsr1h,w,c
 28967  0143C8  6EDA               	movwf	fsr2h,c
 28968  0143CA  0EFF               	movlw	255
 28969  0143CC  22DA               	addwfc	fsr2h,f,c
 28970  0143CE  0EFF               	movlw	255
 28971  0143D0  14DE               	andwf	postinc2,w,c
 28972  0143D2  6E09               	movwf	(btemp+8)^0,c
 28973  0143D4  0EFF               	movlw	255
 28974  0143D6  14DE               	andwf	postinc2,w,c
 28975  0143D8  6E0A               	movwf	(btemp+9)^0,c
 28976  0143DA  0EFF               	movlw	255
 28977  0143DC  14DE               	andwf	postinc2,w,c
 28978  0143DE  6E0B               	movwf	(btemp+10)^0,c
 28979  0143E0  0E7F               	movlw	127
 28980  0143E2  14DE               	andwf	postinc2,w,c
 28981  0143E4  6E0C               	movwf	(btemp+11)^0,c
 28982  0143E6  5009               	movf	(btemp+8)^0,w,c
 28983  0143E8  100A               	iorwf	(btemp+9)^0,w,c
 28984  0143EA  100B               	iorwf	(btemp+10)^0,w,c
 28985  0143EC  100C               	iorwf	(btemp+11)^0,w,c
 28986  0143EE  B4D8               	btfsc	status,2,c
 28987  0143F0  D004               	goto	l8478
 28988  0143F2                     u6920:
 28989                           
 28990                           ;stkvar	_aexp @ sp[(-13)+11]
 28991  0143F2  0EFE               	movlw	-2
 28992  0143F4  6AE3               	clrf	plusw1,c
 28993  0143F6  2AE3               	incf	plusw1,f,c
 28994  0143F8  D003               	goto	l8482
 28995  0143FA                     l8478:
 28996                           
 28997                           ;stkvar	_prod @ sp[(-13)+0]
 28998  0143FA  0EF3               	movlw	-13
 28999  0143FC  B0E3               	btfsc	plusw1,0,c
 29000  0143FE  D7F9               	goto	u6920
 29001  014400                     l8482:
 29002                           
 29003                           ;stkvar	_aexp @ sp[(-13)+11]
 29004  014400  0EFE               	movlw	-2
 29005  014402  50E3               	movf	plusw1,w,c
 29006  014404  B4D8               	btfsc	status,2,c
 29007  014406  D036               	goto	l8492
 29008                           
 29009                           ;stkvar	_prod @ sp[(-13)+0]
 29010  014408  50E1               	movf	fsr1l,w,c
 29011  01440A  0FF3               	addlw	-13
 29012  01440C  6ED9               	movwf	fsr2l,c
 29013  01440E  50E2               	movf	fsr1h,w,c
 29014  014410  6EDA               	movwf	fsr2h,c
 29015  014412  0EFF               	movlw	255
 29016  014414  22DA               	addwfc	fsr2h,f,c
 29017  014416  2ADE               	incf	postinc2,f,c
 29018  014418  0E00               	movlw	0
 29019  01441A  22DE               	addwfc	postinc2,f,c
 29020  01441C  22DE               	addwfc	postinc2,f,c
 29021  01441E  22DE               	addwfc	postinc2,f,c
 29022                           
 29023                           ;stkvar	_prod @ sp[(-13)+0]
 29024  014420  0EF6               	movlw	-10
 29025  014422  A0E3               	btfss	plusw1,0,c
 29026  014424  D027               	goto	l8492
 29027  014426  0E01               	movlw	1
 29028  014428  6E0C               	movwf	(btemp+11)^0,c
 29029                           
 29030                           ;stkvar	_prod @ sp[(-13)+0]
 29031  01442A  50E1               	movf	fsr1l,w,c
 29032  01442C  0FF3               	addlw	-13
 29033  01442E  6ED9               	movwf	fsr2l,c
 29034  014430  50E2               	movf	fsr1h,w,c
 29035  014432  6EDA               	movwf	fsr2h,c
 29036  014434  0EFF               	movlw	255
 29037  014436  22DA               	addwfc	fsr2h,f,c
 29038  014438  280C               	incf	(btemp+11)^0,w,c
 29039  01443A  52DE               	movf	postinc2,f,c
 29040  01443C  D008               	goto	u6960
 29041  01443E                     u6965:
 29042  01443E  52DE               	movf	postinc2,f,c
 29043  014440  90D8               	bcf	status,0,c
 29044  014442  BEDC               	btfsc	preinc2,7,c
 29045  014444  80D8               	bsf	status,0,c
 29046  014446  32DD               	rrcf	postdec2,f,c
 29047  014448  32DD               	rrcf	postdec2,f,c
 29048  01444A  32DD               	rrcf	postdec2,f,c
 29049  01444C  32DE               	rrcf	postinc2,f,c
 29050  01444E                     u6960:
 29051  01444E  2EE8               	decfsz	wreg,f,c
 29052  014450  D7F6               	goto	u6965
 29053                           
 29054                           ;stkvar	_temp @ sp[(-13)+8]
 29055  014452  0EFB               	movlw	-5
 29056  014454  50E3               	movf	plusw1,w,c
 29057  014456  0F01               	addlw	1
 29058  014458  6E01               	movwf	btemp^0,c
 29059  01445A  0EFB               	movlw	-5
 29060  01445C  0060  F007  FFE3   	movff	btemp,plusw1
 29061  014462  6A01               	clrf	btemp^0,c
 29062  014464  0EFC               	movlw	-4
 29063  014466  50E3               	movf	plusw1,w,c
 29064  014468  2001               	addwfc	btemp^0,w,c
 29065  01446A  6E01               	movwf	btemp^0,c
 29066  01446C  0EFC               	movlw	-4
 29067  01446E  0060  F007  FFE3   	movff	btemp,plusw1
 29068  014474                     l8492:
 29069                           
 29070                           ;stkvar	_temp @ sp[(-13)+8]
 29071  014474  0EFC               	movlw	-4
 29072  014476  BEE3               	btfsc	plusw1,7,c
 29073  014478  D020               	goto	l8496
 29074  01447A  0EFC               	movlw	-4
 29075  01447C  50E3               	movf	plusw1,w,c
 29076  01447E  E104               	bnz	u6970
 29077  014480  0EFB               	movlw	-5
 29078  014482  28E3               	incf	plusw1,w,c
 29079  014484  A0D8               	btfss	status,0,c
 29080  014486  D019               	goto	l8496
 29081  014488                     u6970:
 29082  014488  0E00               	movlw	0
 29083  01448A  6E09               	movwf	(btemp+8)^0,c
 29084  01448C  0E00               	movlw	0
 29085  01448E  6E0A               	movwf	(btemp+9)^0,c
 29086  014490  0E80               	movlw	128
 29087  014492  6E0B               	movwf	(btemp+10)^0,c
 29088  014494  0E7F               	movlw	127
 29089  014496  6E0C               	movwf	(btemp+11)^0,c
 29090                           
 29091                           ;stkvar	_prod @ sp[(-13)+0]
 29092  014498  0EF3               	movlw	-13
 29093  01449A  0060  F027  FFE3   	movff	btemp+8,plusw1
 29094  0144A0  0EF4               	movlw	-12
 29095  0144A2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29096  0144A8  0EF5               	movlw	-11
 29097  0144AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29098  0144B0  0EF6               	movlw	-10
 29099  0144B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 29100  0144B8  D044               	goto	l8512
 29101  0144BA                     l8496:
 29102                           
 29103                           ;stkvar	_temp @ sp[(-13)+8]
 29104  0144BA  0EFC               	movlw	-4
 29105  0144BC  BEE3               	btfsc	plusw1,7,c
 29106  0144BE  D007               	goto	u6980
 29107  0144C0  0EFC               	movlw	-4
 29108  0144C2  50E3               	movf	plusw1,w,c
 29109  0144C4  E10F               	bnz	l8502
 29110  0144C6  0EFB               	movlw	-5
 29111  0144C8  04E3               	decf	plusw1,w,c
 29112  0144CA  B0D8               	btfsc	status,0,c
 29113  0144CC  D00B               	goto	l8502
 29114  0144CE                     u6980:
 29115                           
 29116                           ;stkvar	_prod @ sp[(-13)+0]
 29117  0144CE  0EF3               	movlw	-13
 29118  0144D0  6AE3               	clrf	plusw1,c
 29119  0144D2  0EF4               	movlw	-12
 29120  0144D4  6AE3               	clrf	plusw1,c
 29121  0144D6  0EF5               	movlw	-11
 29122  0144D8  6AE3               	clrf	plusw1,c
 29123  0144DA  0EF6               	movlw	-10
 29124  0144DC  6AE3               	clrf	plusw1,c
 29125                           
 29126                           ;stkvar	_sign @ sp[(-13)+12]
 29127  0144DE  0EFF               	movlw	-1
 29128  0144E0  6AE3               	clrf	plusw1,c
 29129  0144E2  D02F               	goto	l8512
 29130  0144E4                     l8502:
 29131                           
 29132                           ;stkvar	_temp @ sp[(-13)+8]
 29133                           ;stkvar	_bexp @ sp[(-13)+10]
 29134  0144E4  0EFB               	movlw	-5
 29135  0144E6  006F FF8C  F001    	movff	plusw1,btemp
 29136  0144EC  0EFD               	movlw	-3
 29137  0144EE  0060  F007  FFE3   	movff	btemp,plusw1
 29138                           
 29139                           ;stkvar	_prod @ sp[(-13)+0]
 29140  0144F4  50E1               	movf	fsr1l,w,c
 29141  0144F6  0FF3               	addlw	-13
 29142  0144F8  6ED9               	movwf	fsr2l,c
 29143  0144FA  50E2               	movf	fsr1h,w,c
 29144  0144FC  6EDA               	movwf	fsr2h,c
 29145  0144FE  0EFF               	movlw	255
 29146  014500  22DA               	addwfc	fsr2h,f,c
 29147  014502  0EFF               	movlw	255
 29148  014504  16DE               	andwf	postinc2,f,c
 29149  014506  0EFF               	movlw	255
 29150  014508  16DE               	andwf	postinc2,f,c
 29151  01450A  0E7F               	movlw	127
 29152  01450C  16DE               	andwf	postinc2,f,c
 29153  01450E  0E00               	movlw	0
 29154  014510  16DE               	andwf	postinc2,f,c
 29155                           
 29156                           ;stkvar	_bexp @ sp[(-13)+10]
 29157  014512  0EFD               	movlw	-3
 29158  014514  A0E3               	btfss	plusw1,0,c
 29159  014516  D008               	goto	l8510
 29160                           
 29161                           ;stkvar	_prod @ sp[(-13)+0]
 29162  014518  0EF5               	movlw	245
 29163  01451A  24E1               	addwf	fsr1l,w,c
 29164  01451C  6ED9               	movwf	fsr2l,c
 29165  01451E  0EFF               	movlw	255
 29166  014520  20E2               	addwfc	fsr1h,w,c
 29167  014522  6EDA               	movwf	fsr2h,c
 29168  014524  0E00               	movlw	0
 29169  014526  8EDB               	bsf	plusw2,7,c
 29170  014528                     l8510:
 29171                           
 29172                           ;stkvar	_prod @ sp[(-13)+0]
 29173  014528  0EF6               	movlw	246
 29174  01452A  24E1               	addwf	fsr1l,w,c
 29175  01452C  6ED9               	movwf	fsr2l,c
 29176  01452E  0EFF               	movlw	255
 29177  014530  20E2               	addwfc	fsr1h,w,c
 29178  014532  6EDA               	movwf	fsr2h,c
 29179                           
 29180                           ;stkvar	_bexp @ sp[(-13)+10]
 29181  014534  0EFD               	movlw	-3
 29182  014536  006F FF8C  F00C    	movff	plusw1,btemp+11
 29183  01453C  90D8               	bcf	status,0,c
 29184  01453E  300C               	rrcf	(btemp+11)^0,w,c
 29185  014540  6EDF               	movwf	indf2,c
 29186  014542                     l8512:
 29187                           
 29188                           ;stkvar	_sign @ sp[(-13)+12]
 29189  014542  0EFF               	movlw	-1
 29190  014544  006F FF8C  F00C    	movff	plusw1,btemp+11
 29191                           
 29192                           ;stkvar	_prod @ sp[(-13)+0]
 29193  01454A  0EF6               	movlw	246
 29194  01454C  24E1               	addwf	fsr1l,w,c
 29195  01454E  6ED9               	movwf	fsr2l,c
 29196  014550  0EFF               	movlw	255
 29197  014552  20E2               	addwfc	fsr1h,w,c
 29198  014554  6EDA               	movwf	fsr2h,c
 29199  014556  500C               	movf	(btemp+11)^0,w,c
 29200  014558  12DF               	iorwf	indf2,f,c
 29201                           
 29202                           ;stkvar	_prod @ sp[(-13)+0]
 29203  01455A  0EF3               	movlw	-13
 29204  01455C  006F FF8C  F001    	movff	plusw1,btemp
 29205  014562  0EF4               	movlw	-12
 29206  014564  006F FF8C  F002    	movff	plusw1,btemp+1
 29207  01456A  0EF5               	movlw	-11
 29208  01456C  006F FF8C  F003    	movff	plusw1,btemp+2
 29209  014572  0EF6               	movlw	-10
 29210  014574  006F FF8C  F004    	movff	plusw1,btemp+3
 29211  01457A                     l3021:
 29212                           
 29213                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 29214  01457A  0EEB               	movlw	235
 29215  01457C  26E1               	addwf	fsr1l,f,c
 29216  01457E  0EFF               	movlw	255
 29217  014580  22E2               	addwfc	fsr1h,f,c
 29218  014582  0012               	return		;funcret
 29219  014584                     __end_of___flmul:
 29220                           	opt callstack 0
 29221                           
 29222 ;; *************** function _SYSTEM_Initialize *****************
 29223 ;; Defined at:
 29224 ;;		line 50 in file "mcc_generated_files/mcc.c"
 29225 ;; Parameters:    Size  Location     Type
 29226 ;;		None
 29227 ;; Auto vars:     Size  Location     Type
 29228 ;;		None
 29229 ;; Return value:  Size  Location     Type
 29230 ;;                  1  [STACK] void 
 29231 ;; Registers used:
 29232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 29233 ;; Tracked objects:
 29234 ;;		On entry : 0/0
 29235 ;;		On exit  : 3F/3C
 29236 ;;		Unchanged: 0/0
 29237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29242 ;;Total ram usage:        0 bytes
 29243 ;; Hardware stack levels used:    1
 29244 ;; Hardware stack levels required when called:   17
 29245 ;; This function calls:
 29246 ;;		_ADCC_Initialize
 29247 ;;		_CLKREF_Initialize
 29248 ;;		_DMA1_Initialize
 29249 ;;		_DMA2_Initialize
 29250 ;;		_EXT_INT_Initialize
 29251 ;;		_FVR_Initialize
 29252 ;;		_INTERRUPT_Initialize
 29253 ;;		_OSCILLATOR_Initialize
 29254 ;;		_PIN_MANAGER_Initialize
 29255 ;;		_PMD_Initialize
 29256 ;;		_PWM8_Initialize
 29257 ;;		_SPI1_Initialize
 29258 ;;		_TMR2_Initialize
 29259 ;;		_TMR3_Initialize
 29260 ;;		_TMR5_Initialize
 29261 ;;		_TMR6_Initialize
 29262 ;;		_UART1_Initialize
 29263 ;;		_UART2_Initialize
 29264 ;; This function is called by:
 29265 ;;		_main
 29266 ;; This function uses a reentrant model
 29267 ;;
 29268                           
 29269                           	psect	text109
 29270  01B456                     __ptext109:
 29271                           	opt callstack 0
 29272  01B456                     _SYSTEM_Initialize:
 29273                           	opt callstack 13
 29274                           
 29275                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 29276                           
 29277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29278                           ;incstack = 0
 29279  01B456  EC0F  F0D8         	call	_INTERRUPT_Initialize	;wreg free
 29280                           
 29281                           ; BSR set to: 57
 29282                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 29283  01B45A  EC54  F0E0         	call	_PMD_Initialize	;wreg free
 29284                           
 29285                           ; BSR set to: 57
 29286                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 29287  01B45E  EC50  F0D5         	call	_PIN_MANAGER_Initialize	;wreg free
 29288                           
 29289                           ; BSR set to: 58
 29290                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 29291  01B462  EC49  F0E0         	call	_OSCILLATOR_Initialize	;wreg free
 29292                           
 29293                           ; BSR set to: 57
 29294                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 29295  01B466  ECDF  F0E0         	call	_FVR_Initialize	;wreg free
 29296                           
 29297                           ; BSR set to: 62
 29298                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 29299  01B46A  ECA5  F0D7         	call	_ADCC_Initialize	;wreg free
 29300                           
 29301                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 29302  01B46E  EC27  F0E0         	call	_TMR2_Initialize	;wreg free
 29303                           
 29304                           ; BSR set to: 57
 29305                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 29306  01B472  EC3E  F0E0         	call	_PWM8_Initialize	;wreg free
 29307                           
 29308                           ; BSR set to: 63
 29309                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 29310  01B476  ECD3  F0DC         	call	_EXT_INT_Initialize	;wreg free
 29311                           
 29312                           ; BSR set to: 57
 29313                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 29314  01B47A  ECA6  F0DD         	call	_TMR6_Initialize	;wreg free
 29315                           
 29316                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 29317  01B47E  ECBC  F0DA         	call	_TMR3_Initialize	;wreg free
 29318                           
 29319                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 29320  01B482  EC98  F0DA         	call	_TMR5_Initialize	;wreg free
 29321                           
 29322                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 29323  01B486  EC74  F0DA         	call	_UART1_Initialize	;wreg free
 29324                           
 29325                           ; BSR set to: 57
 29326                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 29327  01B48A  ECD6  F0D8         	call	_UART2_Initialize	;wreg free
 29328                           
 29329                           ; BSR set to: 57
 29330                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 29331  01B48E  EC33  F0E0         	call	_SPI1_Initialize	;wreg free
 29332                           
 29333                           ; BSR set to: 61
 29334                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 29335  01B492  EC60  F0D9         	call	_DMA2_Initialize	;wreg free
 29336                           
 29337                           ; BSR set to: 59
 29338                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 29339  01B496  EC70  F0D7         	call	_DMA1_Initialize	;wreg free
 29340                           
 29341                           ; BSR set to: 59
 29342                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 29343  01B49A  ECB3  F0E0         	call	_CLKREF_Initialize	;wreg free
 29344                           
 29345                           ; BSR set to: 60
 29346                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29347  01B49E  0012               	return		;funcret
 29348  01B4A0                     __end_of_SYSTEM_Initialize:
 29349                           	opt callstack 0
 29350                           
 29351 ;; *************** function _UART2_Initialize *****************
 29352 ;; Defined at:
 29353 ;;		line 78 in file "mcc_generated_files/uart2.c"
 29354 ;; Parameters:    Size  Location     Type
 29355 ;;		None
 29356 ;; Auto vars:     Size  Location     Type
 29357 ;;		None
 29358 ;; Return value:  Size  Location     Type
 29359 ;;                  1  [STACK] void 
 29360 ;; Registers used:
 29361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29362 ;; Tracked objects:
 29363 ;;		On entry : 3F/39
 29364 ;;		On exit  : 3F/39
 29365 ;;		Unchanged: 0/0
 29366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29371 ;;Total ram usage:        0 bytes
 29372 ;; Hardware stack levels used:    1
 29373 ;; Hardware stack levels required when called:   16
 29374 ;; This function calls:
 29375 ;;		_UART2_SetRxInterruptHandler
 29376 ;;		_UART2_SetTxInterruptHandler
 29377 ;; This function is called by:
 29378 ;;		_SYSTEM_Initialize
 29379 ;; This function uses a reentrant model
 29380 ;;
 29381                           
 29382                           	psect	text110
 29383  01B1AC                     __ptext110:
 29384                           	opt callstack 0
 29385  01B1AC                     _UART2_Initialize:
 29386                           	opt callstack 13
 29387                           
 29388                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 29389                           
 29390                           ; BSR set to: 60
 29391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29392                           ;incstack = 0
 29393  01B1AC  0139               	movlb	57	; () banked
 29394  01B1AE  9596               	bcf	150,2,b	;volatile
 29395                           
 29396                           ; BSR set to: 57
 29397                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 29398  01B1B0  0E30               	movlw	low _UART2_Receive_ISR
 29399  01B1B2  6EE6               	movwf	postinc1,c
 29400  01B1B4  0EBF               	movlw	high _UART2_Receive_ISR
 29401  01B1B6  6EE6               	movwf	postinc1,c
 29402  01B1B8  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 29403  01B1BA  6EE6               	movwf	postinc1,c
 29404  01B1BC  ECF7  F0DD         	call	_UART2_SetRxInterruptHandler	;wreg free
 29405                           
 29406                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 29407  01B1C0  0139               	movlb	57	; () banked
 29408  01B1C2  9796               	bcf	150,3,b	;volatile
 29409                           
 29410                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 29411  01B1C4  0E20               	movlw	low _UART2_Transmit_ISR
 29412  01B1C6  6EE6               	movwf	postinc1,c
 29413  01B1C8  0EBB               	movlw	high _UART2_Transmit_ISR
 29414  01B1CA  6EE6               	movwf	postinc1,c
 29415  01B1CC  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 29416  01B1CE  6EE6               	movwf	postinc1,c
 29417  01B1D0  ECE3  F0DD         	call	_UART2_SetTxInterruptHandler	;wreg free
 29418                           
 29419                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 29420  01B1D4  013D               	movlb	61	; () banked
 29421  01B1D6  6BD4               	clrf	212,b	;volatile
 29422                           
 29423                           ; BSR set to: 61
 29424                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 29425  01B1D8  6BD6               	clrf	214,b	;volatile
 29426                           
 29427                           ; BSR set to: 61
 29428                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 29429  01B1DA  6BD8               	clrf	216,b	;volatile
 29430                           
 29431                           ; BSR set to: 61
 29432                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 29433  01B1DC  0EB0               	movlw	176
 29434  01B1DE  6FDA               	movwf	218,b	;volatile
 29435                           
 29436                           ; BSR set to: 61
 29437                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 29438  01B1E0  0E80               	movlw	128
 29439  01B1E2  6FDB               	movwf	219,b	;volatile
 29440                           
 29441                           ; BSR set to: 61
 29442                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 29443  01B1E4  6BDC               	clrf	220,b	;volatile
 29444                           
 29445                           ; BSR set to: 61
 29446                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 29447  01B1E6  0E82               	movlw	130
 29448  01B1E8  6FDD               	movwf	221,b	;volatile
 29449                           
 29450                           ; BSR set to: 61
 29451                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 29452  01B1EA  0E06               	movlw	6
 29453  01B1EC  6FDE               	movwf	222,b	;volatile
 29454                           
 29455                           ; BSR set to: 61
 29456                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 29457  01B1EE  6BDF               	clrf	223,b	;volatile
 29458                           
 29459                           ; BSR set to: 61
 29460                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 29461  01B1F0  6BE0               	clrf	224,b	;volatile
 29462                           
 29463                           ; BSR set to: 61
 29464                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 29465  01B1F2  6BE1               	clrf	225,b	;volatile
 29466                           
 29467                           ; BSR set to: 61
 29468                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 29469  01B1F4  6BE2               	clrf	226,b	;volatile
 29470                           
 29471                           ; BSR set to: 61
 29472                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 29473  01B1F6  0100               	movlb	0	; () banked
 29474  01B1F8  6BCD               	clrf	_uart2TxHead& (0+255),b	;volatile
 29475                           
 29476                           ; BSR set to: 0
 29477                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 29478  01B1FA  6A45               	clrf	_uart2TxTail^0,c	;volatile
 29479                           
 29480                           ; BSR set to: 0
 29481                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 29482  01B1FC  0E40               	movlw	64
 29483  01B1FE  6E44               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 29484                           
 29485                           ; BSR set to: 0
 29486                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 29487  01B200  6A43               	clrf	_uart2RxHead^0,c	;volatile
 29488                           
 29489                           ; BSR set to: 0
 29490                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 29491  01B202  6BCC               	clrf	_uart2RxTail& (0+255),b	;volatile
 29492                           
 29493                           ; BSR set to: 0
 29494                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 29495  01B204  6BCB               	clrf	_uart2RxCount& (0+255),b	;volatile
 29496                           
 29497                           ; BSR set to: 0
 29498                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 29499  01B206  0139               	movlb	57	; () banked
 29500  01B208  8596               	bsf	150,2,b	;volatile
 29501                           
 29502                           ; BSR set to: 57
 29503                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29504  01B20A  0012               	return		;funcret
 29505  01B20C                     __end_of_UART2_Initialize:
 29506                           	opt callstack 0
 29507                           
 29508 ;; *************** function _UART2_SetTxInterruptHandler *****************
 29509 ;; Defined at:
 29510 ;;		line 252 in file "mcc_generated_files/uart2.c"
 29511 ;; Parameters:    Size  Location     Type
 29512 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29513 ;;		 -> UART2_Transmit_ISR(1), 
 29514 ;; Auto vars:     Size  Location     Type
 29515 ;;		None
 29516 ;; Return value:  Size  Location     Type
 29517 ;;                  1  [STACK] void 
 29518 ;; Registers used:
 29519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29520 ;; Tracked objects:
 29521 ;;		On entry : 3F/39
 29522 ;;		On exit  : 0/0
 29523 ;;		Unchanged: 0/0
 29524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29529 ;;Total ram usage:        0 bytes
 29530 ;; Hardware stack levels used:    1
 29531 ;; Hardware stack levels required when called:   15
 29532 ;; This function calls:
 29533 ;;		Nothing
 29534 ;; This function is called by:
 29535 ;;		_UART2_Initialize
 29536 ;; This function uses a reentrant model
 29537 ;;
 29538                           
 29539                           	psect	text111
 29540  01BBC6                     __ptext111:
 29541                           	opt callstack 0
 29542  01BBC6                     _UART2_SetTxInterruptHandler:
 29543                           	opt callstack 13
 29544                           
 29545                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 29546                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29547                           
 29548                           ; BSR set to: 57
 29549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29550                           ;incstack = 0
 29551  01BBC6  50E1               	movf	fsr1l,w,c
 29552  01BBC8  0FFD               	addlw	-3
 29553  01BBCA  6ED9               	movwf	fsr2l,c
 29554  01BBCC  50E2               	movf	fsr1h,w,c
 29555  01BBCE  6EDA               	movwf	fsr2h,c
 29556  01BBD0  0EFF               	movlw	255
 29557  01BBD2  22DA               	addwfc	fsr2h,f,c
 29558  01BBD4  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 29559  01BBDA  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 29560  01BBE0  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 29561                           
 29562                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29563  01BBE6  52E5               	movf	postdec1,f,c
 29564  01BBE8  52E5               	movf	postdec1,f,c
 29565  01BBEA  52E5               	movf	postdec1,f,c
 29566  01BBEC  0012               	return		;funcret
 29567  01BBEE                     __end_of_UART2_SetTxInterruptHandler:
 29568                           	opt callstack 0
 29569                           
 29570 ;; *************** function _UART2_SetRxInterruptHandler *****************
 29571 ;; Defined at:
 29572 ;;		line 248 in file "mcc_generated_files/uart2.c"
 29573 ;; Parameters:    Size  Location     Type
 29574 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29575 ;;		 -> UART2_Receive_ISR(1), 
 29576 ;; Auto vars:     Size  Location     Type
 29577 ;;		None
 29578 ;; Return value:  Size  Location     Type
 29579 ;;                  1  [STACK] void 
 29580 ;; Registers used:
 29581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29582 ;; Tracked objects:
 29583 ;;		On entry : 3F/39
 29584 ;;		On exit  : 0/0
 29585 ;;		Unchanged: 0/0
 29586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29591 ;;Total ram usage:        0 bytes
 29592 ;; Hardware stack levels used:    1
 29593 ;; Hardware stack levels required when called:   15
 29594 ;; This function calls:
 29595 ;;		Nothing
 29596 ;; This function is called by:
 29597 ;;		_UART2_Initialize
 29598 ;; This function uses a reentrant model
 29599 ;;
 29600                           
 29601                           	psect	text112
 29602  01BBEE                     __ptext112:
 29603                           	opt callstack 0
 29604  01BBEE                     _UART2_SetRxInterruptHandler:
 29605                           	opt callstack 13
 29606                           
 29607                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 29608                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29609                           
 29610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29611                           ;incstack = 0
 29612  01BBEE  50E1               	movf	fsr1l,w,c
 29613  01BBF0  0FFD               	addlw	-3
 29614  01BBF2  6ED9               	movwf	fsr2l,c
 29615  01BBF4  50E2               	movf	fsr1h,w,c
 29616  01BBF6  6EDA               	movwf	fsr2h,c
 29617  01BBF8  0EFF               	movlw	255
 29618  01BBFA  22DA               	addwfc	fsr2h,f,c
 29619  01BBFC  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 29620  01BC02  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 29621  01BC08  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 29622                           
 29623                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29624  01BC0E  52E5               	movf	postdec1,f,c
 29625  01BC10  52E5               	movf	postdec1,f,c
 29626  01BC12  52E5               	movf	postdec1,f,c
 29627  01BC14  0012               	return		;funcret
 29628  01BC16                     __end_of_UART2_SetRxInterruptHandler:
 29629                           	opt callstack 0
 29630                           
 29631 ;; *************** function _UART1_Initialize *****************
 29632 ;; Defined at:
 29633 ;;		line 75 in file "mcc_generated_files/uart1.c"
 29634 ;; Parameters:    Size  Location     Type
 29635 ;;		None
 29636 ;; Auto vars:     Size  Location     Type
 29637 ;;		None
 29638 ;; Return value:  Size  Location     Type
 29639 ;;                  1  [STACK] void 
 29640 ;; Registers used:
 29641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29642 ;; Tracked objects:
 29643 ;;		On entry : 0/39
 29644 ;;		On exit  : 3F/39
 29645 ;;		Unchanged: 0/0
 29646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29651 ;;Total ram usage:        0 bytes
 29652 ;; Hardware stack levels used:    1
 29653 ;; Hardware stack levels required when called:   16
 29654 ;; This function calls:
 29655 ;;		_UART1_SetRxInterruptHandler
 29656 ;; This function is called by:
 29657 ;;		_SYSTEM_Initialize
 29658 ;; This function uses a reentrant model
 29659 ;;
 29660                           
 29661                           	psect	text113
 29662  01B4E8                     __ptext113:
 29663                           	opt callstack 0
 29664  01B4E8                     _UART1_Initialize:
 29665                           	opt callstack 13
 29666                           
 29667                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 29668                           
 29669                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29670                           ;incstack = 0
 29671  01B4E8  0139               	movlb	57	; () banked
 29672  01B4EA  9793               	bcf	147,3,b	;volatile
 29673                           
 29674                           ; BSR set to: 57
 29675                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 29676  01B4EC  0EC8               	movlw	low _UART1_Receive_ISR
 29677  01B4EE  6EE6               	movwf	postinc1,c
 29678  01B4F0  0EBF               	movlw	high _UART1_Receive_ISR
 29679  01B4F2  6EE6               	movwf	postinc1,c
 29680  01B4F4  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 29681  01B4F6  6EE6               	movwf	postinc1,c
 29682  01B4F8  EC0B  F0DE         	call	_UART1_SetRxInterruptHandler	;wreg free
 29683                           
 29684                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 29685  01B4FC  013D               	movlb	61	; () banked
 29686  01B4FE  6BEC               	clrf	236,b	;volatile
 29687                           
 29688                           ; BSR set to: 61
 29689                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29690  01B500  6BED               	clrf	237,b	;volatile
 29691                           
 29692                           ; BSR set to: 61
 29693                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29694  01B502  6BEE               	clrf	238,b	;volatile
 29695                           
 29696                           ; BSR set to: 61
 29697                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29698  01B504  6BEF               	clrf	239,b	;volatile
 29699                           
 29700                           ; BSR set to: 61
 29701                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29702  01B506  6BF0               	clrf	240,b	;volatile
 29703                           
 29704                           ; BSR set to: 61
 29705                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29706  01B508  6BF1               	clrf	241,b	;volatile
 29707                           
 29708                           ; BSR set to: 61
 29709                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29710  01B50A  0EB0               	movlw	176
 29711  01B50C  6FF2               	movwf	242,b	;volatile
 29712                           
 29713                           ; BSR set to: 61
 29714                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29715  01B50E  0E80               	movlw	128
 29716  01B510  6FF3               	movwf	243,b	;volatile
 29717                           
 29718                           ; BSR set to: 61
 29719                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29720  01B512  6BF4               	clrf	244,b	;volatile
 29721                           
 29722                           ; BSR set to: 61
 29723                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29724  01B514  0E8A               	movlw	138
 29725  01B516  6FF5               	movwf	245,b	;volatile
 29726                           
 29727                           ; BSR set to: 61
 29728                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29729  01B518  6BF6               	clrf	246,b	;volatile
 29730                           
 29731                           ; BSR set to: 61
 29732                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29733  01B51A  6BF7               	clrf	247,b	;volatile
 29734                           
 29735                           ; BSR set to: 61
 29736                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29737  01B51C  6BF8               	clrf	248,b	;volatile
 29738                           
 29739                           ; BSR set to: 61
 29740                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29741  01B51E  6BF9               	clrf	249,b	;volatile
 29742                           
 29743                           ; BSR set to: 61
 29744                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29745  01B520  6BFA               	clrf	250,b	;volatile
 29746                           
 29747                           ; BSR set to: 61
 29748                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29749  01B522  6A47               	clrf	_uart1RxHead^0,c	;volatile
 29750                           
 29751                           ; BSR set to: 61
 29752                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29753  01B524  6A46               	clrf	_uart1RxTail^0,c	;volatile
 29754                           
 29755                           ; BSR set to: 61
 29756                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29757  01B526  0100               	movlb	0	; () banked
 29758  01B528  6BCE               	clrf	_uart1RxCount& (0+255),b	;volatile
 29759                           
 29760                           ; BSR set to: 0
 29761                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29762  01B52A  0139               	movlb	57	; () banked
 29763  01B52C  8793               	bsf	147,3,b	;volatile
 29764                           
 29765                           ; BSR set to: 57
 29766                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29767  01B52E  0012               	return		;funcret
 29768  01B530                     __end_of_UART1_Initialize:
 29769                           	opt callstack 0
 29770                           
 29771 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29772 ;; Defined at:
 29773 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29774 ;; Parameters:    Size  Location     Type
 29775 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29776 ;;		 -> UART1_Receive_ISR(1), 
 29777 ;; Auto vars:     Size  Location     Type
 29778 ;;		None
 29779 ;; Return value:  Size  Location     Type
 29780 ;;                  1  [STACK] void 
 29781 ;; Registers used:
 29782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29783 ;; Tracked objects:
 29784 ;;		On entry : 3F/39
 29785 ;;		On exit  : 0/0
 29786 ;;		Unchanged: 0/0
 29787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29792 ;;Total ram usage:        0 bytes
 29793 ;; Hardware stack levels used:    1
 29794 ;; Hardware stack levels required when called:   15
 29795 ;; This function calls:
 29796 ;;		Nothing
 29797 ;; This function is called by:
 29798 ;;		_UART1_Initialize
 29799 ;; This function uses a reentrant model
 29800 ;;
 29801                           
 29802                           	psect	text114
 29803  01BC16                     __ptext114:
 29804                           	opt callstack 0
 29805  01BC16                     _UART1_SetRxInterruptHandler:
 29806                           	opt callstack 13
 29807                           
 29808                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29809                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29810                           
 29811                           ; BSR set to: 57
 29812                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29813                           ;incstack = 0
 29814  01BC16  50E1               	movf	fsr1l,w,c
 29815  01BC18  0FFD               	addlw	-3
 29816  01BC1A  6ED9               	movwf	fsr2l,c
 29817  01BC1C  50E2               	movf	fsr1h,w,c
 29818  01BC1E  6EDA               	movwf	fsr2h,c
 29819  01BC20  0EFF               	movlw	255
 29820  01BC22  22DA               	addwfc	fsr2h,f,c
 29821  01BC24  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 29822  01BC2A  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 29823  01BC30  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 29824                           
 29825                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29826  01BC36  52E5               	movf	postdec1,f,c
 29827  01BC38  52E5               	movf	postdec1,f,c
 29828  01BC3A  52E5               	movf	postdec1,f,c
 29829  01BC3C  0012               	return		;funcret
 29830  01BC3E                     __end_of_UART1_SetRxInterruptHandler:
 29831                           	opt callstack 0
 29832                           
 29833 ;; *************** function _TMR6_Initialize *****************
 29834 ;; Defined at:
 29835 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29836 ;; Parameters:    Size  Location     Type
 29837 ;;		None
 29838 ;; Auto vars:     Size  Location     Type
 29839 ;;		None
 29840 ;; Return value:  Size  Location     Type
 29841 ;;                  1  [STACK] void 
 29842 ;; Registers used:
 29843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29844 ;; Tracked objects:
 29845 ;;		On entry : 3F/39
 29846 ;;		On exit  : 0/0
 29847 ;;		Unchanged: 0/0
 29848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29853 ;;Total ram usage:        0 bytes
 29854 ;; Hardware stack levels used:    1
 29855 ;; Hardware stack levels required when called:   16
 29856 ;; This function calls:
 29857 ;;		_TMR6_SetInterruptHandler
 29858 ;; This function is called by:
 29859 ;;		_SYSTEM_Initialize
 29860 ;; This function uses a reentrant model
 29861 ;;
 29862                           
 29863                           	psect	text115
 29864  01BB4C                     __ptext115:
 29865                           	opt callstack 0
 29866  01BB4C                     _TMR6_Initialize:
 29867                           	opt callstack 13
 29868                           
 29869                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29870                           
 29871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29872                           ;incstack = 0
 29873  01BB4C  0E01               	movlw	1
 29874  01BB4E  6E96               	movwf	150,c	;volatile
 29875                           
 29876                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29877  01BB50  6A95               	clrf	149,c	;volatile
 29878                           
 29879                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29880  01BB52  6A97               	clrf	151,c	;volatile
 29881                           
 29882                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29883  01BB54  0E7C               	movlw	124
 29884  01BB56  6E93               	movwf	147,c	;volatile
 29885                           
 29886                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29887  01BB58  6A92               	clrf	146,c	;volatile
 29888                           
 29889                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29890  01BB5A  0139               	movlb	57	; () banked
 29891  01BB5C  91A9               	bcf	169,0,b	;volatile
 29892                           
 29893                           ; BSR set to: 57
 29894                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29895  01BB5E  8199               	bsf	153,0,b	;volatile
 29896                           
 29897                           ; BSR set to: 57
 29898                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29899  01BB60  0EBE               	movlw	low _TMR6_DefaultInterruptHandler
 29900  01BB62  6EE6               	movwf	postinc1,c
 29901  01BB64  0EB3               	movlw	high _TMR6_DefaultInterruptHandler
 29902  01BB66  6EE6               	movwf	postinc1,c
 29903  01BB68  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29904  01BB6A  6EE6               	movwf	postinc1,c
 29905  01BB6C  EC1F  F0DE         	call	_TMR6_SetInterruptHandler	;wreg free
 29906                           
 29907                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29908  01BB70  0EE0               	movlw	224
 29909  01BB72  6E94               	movwf	148,c	;volatile
 29910                           
 29911                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29912  01BB74  0012               	return		;funcret
 29913  01BB76                     __end_of_TMR6_Initialize:
 29914                           	opt callstack 0
 29915                           
 29916 ;; *************** function _TMR6_SetInterruptHandler *****************
 29917 ;; Defined at:
 29918 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29919 ;; Parameters:    Size  Location     Type
 29920 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29921 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29922 ;; Auto vars:     Size  Location     Type
 29923 ;;		None
 29924 ;; Return value:  Size  Location     Type
 29925 ;;                  1  [STACK] void 
 29926 ;; Registers used:
 29927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29928 ;; Tracked objects:
 29929 ;;		On entry : 3F/39
 29930 ;;		On exit  : 0/0
 29931 ;;		Unchanged: 0/0
 29932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29937 ;;Total ram usage:        0 bytes
 29938 ;; Hardware stack levels used:    1
 29939 ;; Hardware stack levels required when called:   15
 29940 ;; This function calls:
 29941 ;;		Nothing
 29942 ;; This function is called by:
 29943 ;;		_TMR6_Initialize
 29944 ;; This function uses a reentrant model
 29945 ;;
 29946                           
 29947                           	psect	text116
 29948  01BC3E                     __ptext116:
 29949                           	opt callstack 0
 29950  01BC3E                     _TMR6_SetInterruptHandler:
 29951                           	opt callstack 13
 29952                           
 29953                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29954                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29955                           
 29956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29957                           ;incstack = 0
 29958  01BC3E  50E1               	movf	fsr1l,w,c
 29959  01BC40  0FFD               	addlw	-3
 29960  01BC42  6ED9               	movwf	fsr2l,c
 29961  01BC44  50E2               	movf	fsr1h,w,c
 29962  01BC46  6EDA               	movwf	fsr2h,c
 29963  01BC48  0EFF               	movlw	255
 29964  01BC4A  22DA               	addwfc	fsr2h,f,c
 29965  01BC4C  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 29966  01BC52  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 29967  01BC58  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 29968                           
 29969                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29970  01BC5E  52E5               	movf	postdec1,f,c
 29971  01BC60  52E5               	movf	postdec1,f,c
 29972  01BC62  52E5               	movf	postdec1,f,c
 29973  01BC64  0012               	return		;funcret
 29974  01BC66                     __end_of_TMR6_SetInterruptHandler:
 29975                           	opt callstack 0
 29976                           
 29977 ;; *************** function _TMR5_Initialize *****************
 29978 ;; Defined at:
 29979 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 29980 ;; Parameters:    Size  Location     Type
 29981 ;;		None
 29982 ;; Auto vars:     Size  Location     Type
 29983 ;;		None
 29984 ;; Return value:  Size  Location     Type
 29985 ;;                  1  [STACK] void 
 29986 ;; Registers used:
 29987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29988 ;; Tracked objects:
 29989 ;;		On entry : 0/39
 29990 ;;		On exit  : 0/0
 29991 ;;		Unchanged: 0/0
 29992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29997 ;;Total ram usage:        0 bytes
 29998 ;; Hardware stack levels used:    1
 29999 ;; Hardware stack levels required when called:   16
 30000 ;; This function calls:
 30001 ;;		_TMR5_SetInterruptHandler
 30002 ;; This function is called by:
 30003 ;;		_SYSTEM_Initialize
 30004 ;; This function uses a reentrant model
 30005 ;;
 30006                           
 30007                           	psect	text117
 30008  01B530                     __ptext117:
 30009                           	opt callstack 0
 30010  01B530                     _TMR5_Initialize:
 30011                           	opt callstack 13
 30012                           
 30013                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 30014                           
 30015                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30016                           ;incstack = 0
 30017  01B530  6A9B               	clrf	155,c	;volatile
 30018                           
 30019                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 30020  01B532  6A9C               	clrf	156,c	;volatile
 30021                           
 30022                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 30023  01B534  0E01               	movlw	1
 30024  01B536  6E9D               	movwf	157,c	;volatile
 30025                           
 30026                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 30027  01B538  0E63               	movlw	99
 30028  01B53A  6E99               	movwf	153,c	;volatile
 30029                           
 30030                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 30031  01B53C  0EC0               	movlw	192
 30032  01B53E  6E98               	movwf	152,c	;volatile
 30033                           
 30034                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 30035  01B540  5098               	movf	152,w,c	;volatile
 30036  01B542  006F FE64  F001    	movff	16281,btemp	;volatile
 30037  01B548  6A02               	clrf	(btemp+1)^0,c
 30038  01B54A  0060  F004  F002   	movff	btemp,btemp+1
 30039  01B550  6A01               	clrf	btemp^0,c
 30040  01B552  1001               	iorwf	btemp^0,w,c
 30041  01B554  0100               	movlb	0	; () banked
 30042  01B556  6FC8               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 30043  01B558  5002               	movf	(btemp+1)^0,w,c
 30044  01B55A  6FC9               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 30045                           
 30046                           ; BSR set to: 0
 30047                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 30048  01B55C  0139               	movlb	57	; () banked
 30049  01B55E  9DA8               	bcf	168,6,b	;volatile
 30050                           
 30051                           ; BSR set to: 57
 30052                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 30053  01B560  8D98               	bsf	152,6,b	;volatile
 30054                           
 30055                           ; BSR set to: 57
 30056                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 30057  01B562  0E04               	movlw	low _TMR5_DefaultInterruptHandler
 30058  01B564  6EE6               	movwf	postinc1,c
 30059  01B566  0EB9               	movlw	high _TMR5_DefaultInterruptHandler
 30060  01B568  6EE6               	movwf	postinc1,c
 30061  01B56A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 30062  01B56C  6EE6               	movwf	postinc1,c
 30063  01B56E  EC33  F0DE         	call	_TMR5_SetInterruptHandler	;wreg free
 30064                           
 30065                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 30066  01B572  0E31               	movlw	49
 30067  01B574  6E9A               	movwf	154,c	;volatile
 30068                           
 30069                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30070  01B576  0012               	return		;funcret
 30071  01B578                     __end_of_TMR5_Initialize:
 30072                           	opt callstack 0
 30073                           
 30074 ;; *************** function _TMR5_SetInterruptHandler *****************
 30075 ;; Defined at:
 30076 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 30077 ;; Parameters:    Size  Location     Type
 30078 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30079 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 30080 ;; Auto vars:     Size  Location     Type
 30081 ;;		None
 30082 ;; Return value:  Size  Location     Type
 30083 ;;                  1  [STACK] void 
 30084 ;; Registers used:
 30085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30086 ;; Tracked objects:
 30087 ;;		On entry : 3F/39
 30088 ;;		On exit  : 0/0
 30089 ;;		Unchanged: 0/0
 30090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30095 ;;Total ram usage:        0 bytes
 30096 ;; Hardware stack levels used:    1
 30097 ;; Hardware stack levels required when called:   15
 30098 ;; This function calls:
 30099 ;;		Nothing
 30100 ;; This function is called by:
 30101 ;;		_TMR5_Initialize
 30102 ;; This function uses a reentrant model
 30103 ;;
 30104                           
 30105                           	psect	text118
 30106  01BC66                     __ptext118:
 30107                           	opt callstack 0
 30108  01BC66                     _TMR5_SetInterruptHandler:
 30109                           	opt callstack 13
 30110                           
 30111                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 30112                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30113                           
 30114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30115                           ;incstack = 0
 30116  01BC66  50E1               	movf	fsr1l,w,c
 30117  01BC68  0FFD               	addlw	-3
 30118  01BC6A  6ED9               	movwf	fsr2l,c
 30119  01BC6C  50E2               	movf	fsr1h,w,c
 30120  01BC6E  6EDA               	movwf	fsr2h,c
 30121  01BC70  0EFF               	movlw	255
 30122  01BC72  22DA               	addwfc	fsr2h,f,c
 30123  01BC74  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 30124  01BC7A  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 30125  01BC80  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 30126                           
 30127                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30128  01BC86  52E5               	movf	postdec1,f,c
 30129  01BC88  52E5               	movf	postdec1,f,c
 30130  01BC8A  52E5               	movf	postdec1,f,c
 30131  01BC8C  0012               	return		;funcret
 30132  01BC8E                     __end_of_TMR5_SetInterruptHandler:
 30133                           	opt callstack 0
 30134                           
 30135 ;; *************** function _TMR3_Initialize *****************
 30136 ;; Defined at:
 30137 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 30138 ;; Parameters:    Size  Location     Type
 30139 ;;		None
 30140 ;; Auto vars:     Size  Location     Type
 30141 ;;		None
 30142 ;; Return value:  Size  Location     Type
 30143 ;;                  1  [STACK] void 
 30144 ;; Registers used:
 30145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 30146 ;; Tracked objects:
 30147 ;;		On entry : 0/39
 30148 ;;		On exit  : 0/0
 30149 ;;		Unchanged: 0/0
 30150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30155 ;;Total ram usage:        0 bytes
 30156 ;; Hardware stack levels used:    1
 30157 ;; Hardware stack levels required when called:   16
 30158 ;; This function calls:
 30159 ;;		_TMR3_SetInterruptHandler
 30160 ;; This function is called by:
 30161 ;;		_SYSTEM_Initialize
 30162 ;; This function uses a reentrant model
 30163 ;;
 30164                           
 30165                           	psect	text119
 30166  01B578                     __ptext119:
 30167                           	opt callstack 0
 30168  01B578                     _TMR3_Initialize:
 30169                           	opt callstack 13
 30170                           
 30171                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 30172                           
 30173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30174                           ;incstack = 0
 30175  01B578  6AA7               	clrf	167,c	;volatile
 30176                           
 30177                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 30178  01B57A  6AA8               	clrf	168,c	;volatile
 30179                           
 30180                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 30181  01B57C  0E01               	movlw	1
 30182  01B57E  6EA9               	movwf	169,c	;volatile
 30183                           
 30184                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 30185  01B580  0E3C               	movlw	60
 30186  01B582  6EA5               	movwf	165,c	;volatile
 30187                           
 30188                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 30189  01B584  0EB0               	movlw	176
 30190  01B586  6EA4               	movwf	164,c	;volatile
 30191                           
 30192                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 30193  01B588  50A4               	movf	164,w,c	;volatile
 30194  01B58A  006F FE94  F001    	movff	16293,btemp	;volatile
 30195  01B590  6A02               	clrf	(btemp+1)^0,c
 30196  01B592  0060  F004  F002   	movff	btemp,btemp+1
 30197  01B598  6A01               	clrf	btemp^0,c
 30198  01B59A  1001               	iorwf	btemp^0,w,c
 30199  01B59C  0100               	movlb	0	; () banked
 30200  01B59E  6FC4               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 30201  01B5A0  5002               	movf	(btemp+1)^0,w,c
 30202  01B5A2  6FC5               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 30203                           
 30204                           ; BSR set to: 0
 30205                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 30206  01B5A4  0139               	movlb	57	; () banked
 30207  01B5A6  9DA6               	bcf	166,6,b	;volatile
 30208                           
 30209                           ; BSR set to: 57
 30210                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 30211  01B5A8  8D96               	bsf	150,6,b	;volatile
 30212                           
 30213                           ; BSR set to: 57
 30214                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 30215  01B5AA  0EE8               	movlw	low _TMR3_DefaultInterruptHandler
 30216  01B5AC  6EE6               	movwf	postinc1,c
 30217  01B5AE  0EC1               	movlw	high _TMR3_DefaultInterruptHandler
 30218  01B5B0  6EE6               	movwf	postinc1,c
 30219  01B5B2  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 30220  01B5B4  6EE6               	movwf	postinc1,c
 30221  01B5B6  EC47  F0DE         	call	_TMR3_SetInterruptHandler	;wreg free
 30222                           
 30223                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 30224  01B5BA  0E31               	movlw	49
 30225  01B5BC  6EA6               	movwf	166,c	;volatile
 30226                           
 30227                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30228  01B5BE  0012               	return		;funcret
 30229  01B5C0                     __end_of_TMR3_Initialize:
 30230                           	opt callstack 0
 30231                           
 30232 ;; *************** function _TMR3_SetInterruptHandler *****************
 30233 ;; Defined at:
 30234 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 30235 ;; Parameters:    Size  Location     Type
 30236 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30237 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 30238 ;; Auto vars:     Size  Location     Type
 30239 ;;		None
 30240 ;; Return value:  Size  Location     Type
 30241 ;;                  1  [STACK] void 
 30242 ;; Registers used:
 30243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30244 ;; Tracked objects:
 30245 ;;		On entry : 0/1
 30246 ;;		On exit  : 0/0
 30247 ;;		Unchanged: 0/0
 30248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30253 ;;Total ram usage:        0 bytes
 30254 ;; Hardware stack levels used:    1
 30255 ;; Hardware stack levels required when called:   15
 30256 ;; This function calls:
 30257 ;;		Nothing
 30258 ;; This function is called by:
 30259 ;;		_TMR3_Initialize
 30260 ;;		_init_bsoc
 30261 ;; This function uses a reentrant model
 30262 ;;
 30263                           
 30264                           	psect	text120
 30265  01BC8E                     __ptext120:
 30266                           	opt callstack 0
 30267  01BC8E                     _TMR3_SetInterruptHandler:
 30268                           	opt callstack 14
 30269                           
 30270                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 30271                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30272                           
 30273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30274                           ;incstack = 0
 30275  01BC8E  50E1               	movf	fsr1l,w,c
 30276  01BC90  0FFD               	addlw	-3
 30277  01BC92  6ED9               	movwf	fsr2l,c
 30278  01BC94  50E2               	movf	fsr1h,w,c
 30279  01BC96  6EDA               	movwf	fsr2h,c
 30280  01BC98  0EFF               	movlw	255
 30281  01BC9A  22DA               	addwfc	fsr2h,f,c
 30282  01BC9C  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 30283  01BCA2  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 30284  01BCA8  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 30285                           
 30286                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30287  01BCAE  52E5               	movf	postdec1,f,c
 30288  01BCB0  52E5               	movf	postdec1,f,c
 30289  01BCB2  52E5               	movf	postdec1,f,c
 30290  01BCB4  0012               	return		;funcret
 30291  01BCB6                     __end_of_TMR3_SetInterruptHandler:
 30292                           	opt callstack 0
 30293                           
 30294 ;; *************** function _TMR2_Initialize *****************
 30295 ;; Defined at:
 30296 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 30297 ;; Parameters:    Size  Location     Type
 30298 ;;		None
 30299 ;; Auto vars:     Size  Location     Type
 30300 ;;		None
 30301 ;; Return value:  Size  Location     Type
 30302 ;;                  1  [STACK] void 
 30303 ;; Registers used:
 30304 ;;		wreg, status,2
 30305 ;; Tracked objects:
 30306 ;;		On entry : 0/3E
 30307 ;;		On exit  : 3F/39
 30308 ;;		Unchanged: 0/0
 30309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30314 ;;Total ram usage:        0 bytes
 30315 ;; Hardware stack levels used:    1
 30316 ;; Hardware stack levels required when called:   15
 30317 ;; This function calls:
 30318 ;;		Nothing
 30319 ;; This function is called by:
 30320 ;;		_SYSTEM_Initialize
 30321 ;; This function uses a reentrant model
 30322 ;;
 30323                           
 30324                           	psect	text121
 30325  01C04E                     __ptext121:
 30326                           	opt callstack 0
 30327  01C04E                     _TMR2_Initialize:
 30328                           	opt callstack 14
 30329                           
 30330                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 30331                           
 30332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30333                           ;incstack = 0
 30334  01C04E  0E01               	movlw	1
 30335  01C050  6EAE               	movwf	174,c	;volatile
 30336                           
 30337                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 30338  01C052  6AAD               	clrf	173,c	;volatile
 30339                           
 30340                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 30341  01C054  6AAF               	clrf	175,c	;volatile
 30342                           
 30343                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 30344  01C056  0E63               	movlw	99
 30345  01C058  6EAB               	movwf	171,c	;volatile
 30346                           
 30347                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 30348  01C05A  6AAA               	clrf	170,c	;volatile
 30349                           
 30350                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 30351  01C05C  0139               	movlb	57	; () banked
 30352  01C05E  95A4               	bcf	164,2,b	;volatile
 30353                           
 30354                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 30355  01C060  0EC0               	movlw	192
 30356  01C062  6EAC               	movwf	172,c	;volatile
 30357                           
 30358                           ; BSR set to: 57
 30359                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30360  01C064  0012               	return		;funcret
 30361  01C066                     __end_of_TMR2_Initialize:
 30362                           	opt callstack 0
 30363                           
 30364 ;; *************** function _SPI1_Initialize *****************
 30365 ;; Defined at:
 30366 ;;		line 64 in file "mcc_generated_files/spi1.c"
 30367 ;; Parameters:    Size  Location     Type
 30368 ;;		None
 30369 ;; Auto vars:     Size  Location     Type
 30370 ;;		None
 30371 ;; Return value:  Size  Location     Type
 30372 ;;                  1  [STACK] void 
 30373 ;; Registers used:
 30374 ;;		wreg, status,2
 30375 ;; Tracked objects:
 30376 ;;		On entry : 3F/39
 30377 ;;		On exit  : 3F/3D
 30378 ;;		Unchanged: 0/0
 30379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30384 ;;Total ram usage:        0 bytes
 30385 ;; Hardware stack levels used:    1
 30386 ;; Hardware stack levels required when called:   15
 30387 ;; This function calls:
 30388 ;;		Nothing
 30389 ;; This function is called by:
 30390 ;;		_SYSTEM_Initialize
 30391 ;; This function uses a reentrant model
 30392 ;;
 30393                           
 30394                           	psect	text122
 30395  01C066                     __ptext122:
 30396                           	opt callstack 0
 30397  01C066                     _SPI1_Initialize:
 30398                           	opt callstack 14
 30399                           
 30400                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 30401                           
 30402                           ; BSR set to: 57
 30403                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30404                           ;incstack = 0
 30405  01C066  0E40               	movlw	64
 30406  01C068  013D               	movlb	61	; () banked
 30407  01C06A  6F15               	movwf	21,b	;volatile
 30408                           
 30409                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 30410  01C06C  0E03               	movlw	3
 30411  01C06E  6F16               	movwf	22,b	;volatile
 30412                           
 30413                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 30414  01C070  0E4F               	movlw	79
 30415  01C072  6F19               	movwf	25,b	;volatile
 30416                           
 30417                           ; BSR set to: 61
 30418                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 30419  01C074  6B1C               	clrf	28,b	;volatile
 30420                           
 30421                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 30422  01C076  0E83               	movlw	131
 30423  01C078  6F14               	movwf	20,b	;volatile
 30424                           
 30425                           ; BSR set to: 61
 30426                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30427  01C07A  0012               	return		;funcret
 30428  01C07C                     __end_of_SPI1_Initialize:
 30429                           	opt callstack 0
 30430                           
 30431 ;; *************** function _PWM8_Initialize *****************
 30432 ;; Defined at:
 30433 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 30434 ;; Parameters:    Size  Location     Type
 30435 ;;		None
 30436 ;; Auto vars:     Size  Location     Type
 30437 ;;		None
 30438 ;; Return value:  Size  Location     Type
 30439 ;;                  1  [STACK] void 
 30440 ;; Registers used:
 30441 ;;		wreg, status,2
 30442 ;; Tracked objects:
 30443 ;;		On entry : 3F/39
 30444 ;;		On exit  : 3F/3F
 30445 ;;		Unchanged: 0/0
 30446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30451 ;;Total ram usage:        0 bytes
 30452 ;; Hardware stack levels used:    1
 30453 ;; Hardware stack levels required when called:   15
 30454 ;; This function calls:
 30455 ;;		Nothing
 30456 ;; This function is called by:
 30457 ;;		_SYSTEM_Initialize
 30458 ;; This function uses a reentrant model
 30459 ;;
 30460                           
 30461                           	psect	text123
 30462  01C07C                     __ptext123:
 30463                           	opt callstack 0
 30464  01C07C                     _PWM8_Initialize:
 30465                           	opt callstack 14
 30466                           
 30467                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 30468                           
 30469                           ; BSR set to: 61
 30470                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30471                           ;incstack = 0
 30472  01C07C  0E80               	movlw	128
 30473  01C07E  6E62               	movwf	98,c	;volatile
 30474                           
 30475                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 30476  01C080  6A61               	clrf	97,c	;volatile
 30477                           
 30478                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 30479  01C082  0E40               	movlw	64
 30480  01C084  6E60               	movwf	96,c	;volatile
 30481                           
 30482                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 30483  01C086  013F               	movlb	63	; () banked
 30484  01C088  515F               	movf	95,w,b	;volatile
 30485  01C08A  0B3F               	andlw	-193
 30486  01C08C  0940               	iorlw	64
 30487  01C08E  6F5F               	movwf	95,b	;volatile
 30488                           
 30489                           ; BSR set to: 63
 30490                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30491  01C090  0012               	return		;funcret
 30492  01C092                     __end_of_PWM8_Initialize:
 30493                           	opt callstack 0
 30494                           
 30495 ;; *************** function _PMD_Initialize *****************
 30496 ;; Defined at:
 30497 ;;		line 90 in file "mcc_generated_files/mcc.c"
 30498 ;; Parameters:    Size  Location     Type
 30499 ;;		None
 30500 ;; Auto vars:     Size  Location     Type
 30501 ;;		None
 30502 ;; Return value:  Size  Location     Type
 30503 ;;                  1  [STACK] void 
 30504 ;; Registers used:
 30505 ;;		None
 30506 ;; Tracked objects:
 30507 ;;		On entry : 3F/39
 30508 ;;		On exit  : 3F/39
 30509 ;;		Unchanged: 0/0
 30510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30515 ;;Total ram usage:        0 bytes
 30516 ;; Hardware stack levels used:    1
 30517 ;; Hardware stack levels required when called:   15
 30518 ;; This function calls:
 30519 ;;		Nothing
 30520 ;; This function is called by:
 30521 ;;		_SYSTEM_Initialize
 30522 ;; This function uses a reentrant model
 30523 ;;
 30524                           
 30525                           	psect	text124
 30526  01C0A8                     __ptext124:
 30527                           	opt callstack 0
 30528  01C0A8                     _PMD_Initialize:
 30529                           	opt callstack 14
 30530                           
 30531                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 30532                           
 30533                           ; BSR set to: 63
 30534                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30535                           ;incstack = 0
 30536  01C0A8  0139               	movlb	57	; () banked
 30537  01C0AA  6BC0               	clrf	192,b	;volatile
 30538                           
 30539                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 30540  01C0AC  6BC1               	clrf	193,b	;volatile
 30541                           
 30542                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 30543  01C0AE  6BC2               	clrf	194,b	;volatile
 30544                           
 30545                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 30546  01C0B0  6BC3               	clrf	195,b	;volatile
 30547                           
 30548                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 30549  01C0B2  6BC4               	clrf	196,b	;volatile
 30550                           
 30551                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 30552  01C0B4  6BC5               	clrf	197,b	;volatile
 30553                           
 30554                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 30555  01C0B6  6BC6               	clrf	198,b	;volatile
 30556                           
 30557                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 30558  01C0B8  6BC7               	clrf	199,b	;volatile
 30559                           
 30560                           ; BSR set to: 57
 30561                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30562  01C0BA  0012               	return		;funcret
 30563  01C0BC                     __end_of_PMD_Initialize:
 30564                           	opt callstack 0
 30565                           
 30566 ;; *************** function _PIN_MANAGER_Initialize *****************
 30567 ;; Defined at:
 30568 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 30569 ;; Parameters:    Size  Location     Type
 30570 ;;		None
 30571 ;; Auto vars:     Size  Location     Type
 30572 ;;		None
 30573 ;; Return value:  Size  Location     Type
 30574 ;;                  1  [STACK] void 
 30575 ;; Registers used:
 30576 ;;		wreg, status,2
 30577 ;; Tracked objects:
 30578 ;;		On entry : 3F/39
 30579 ;;		On exit  : 3F/3A
 30580 ;;		Unchanged: 0/0
 30581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30586 ;;Total ram usage:        0 bytes
 30587 ;; Hardware stack levels used:    1
 30588 ;; Hardware stack levels required when called:   15
 30589 ;; This function calls:
 30590 ;;		Nothing
 30591 ;; This function is called by:
 30592 ;;		_SYSTEM_Initialize
 30593 ;; This function uses a reentrant model
 30594 ;;
 30595                           
 30596                           	psect	text125
 30597  01AAA0                     __ptext125:
 30598                           	opt callstack 0
 30599  01AAA0                     _PIN_MANAGER_Initialize:
 30600                           	opt callstack 14
 30601                           
 30602                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 30603                           
 30604                           ; BSR set to: 57
 30605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30606                           ;incstack = 0
 30607  01AAA0  0E07               	movlw	7
 30608  01AAA2  6EBE               	movwf	190,c	;volatile
 30609                           
 30610                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 30611  01AAA4  0E80               	movlw	128
 30612  01AAA6  6EBD               	movwf	189,c	;volatile
 30613                           
 30614                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 30615  01AAA8  6ABA               	clrf	186,c	;volatile
 30616                           
 30617                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x20;
 30618  01AAAA  0E20               	movlw	32
 30619  01AAAC  6EBF               	movwf	191,c	;volatile
 30620                           
 30621                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 30622  01AAAE  6ABB               	clrf	187,c	;volatile
 30623                           
 30624                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 30625  01AAB0  0E07               	movlw	7
 30626  01AAB2  6EBC               	movwf	188,c	;volatile
 30627                           
 30628                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 30629  01AAB4  6AC6               	clrf	198,c	;volatile
 30630                           
 30631                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 30632  01AAB6  0E0F               	movlw	15
 30633  01AAB8  6EC7               	movwf	199,c	;volatile
 30634                           
 30635                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 30636  01AABA  68C2               	setf	194,c	;volatile
 30637                           
 30638                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 30639  01AABC  0EBF               	movlw	191
 30640  01AABE  6EC3               	movwf	195,c	;volatile
 30641                           
 30642                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 30643  01AAC0  0E90               	movlw	144
 30644  01AAC2  6EC4               	movwf	196,c	;volatile
 30645                           
 30646                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 30647  01AAC4  0E0C               	movlw	12
 30648  01AAC6  6EC5               	movwf	197,c	;volatile
 30649                           
 30650                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 30651  01AAC8  013A               	movlb	58	; () banked
 30652  01AACA  6B70               	clrf	112,b	;volatile
 30653                           
 30654                           ; BSR set to: 58
 30655                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 30656  01AACC  6B60               	clrf	96,b	;volatile
 30657                           
 30658                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 30659  01AACE  0E3C               	movlw	60
 30660  01AAD0  6F50               	movwf	80,b	;volatile
 30661                           
 30662                           ; BSR set to: 58
 30663                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 30664  01AAD2  6B80               	clrf	128,b	;volatile
 30665                           
 30666                           ; BSR set to: 58
 30667                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 30668  01AAD4  6B90               	clrf	144,b	;volatile
 30669                           
 30670                           ; BSR set to: 58
 30671                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 30672  01AAD6  6940               	setf	64,b	;volatile
 30673                           
 30674                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 30675  01AAD8  0E0C               	movlw	12
 30676  01AADA  6F71               	movwf	113,b	;volatile
 30677                           
 30678                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 30679  01AADC  0E0F               	movlw	15
 30680  01AADE  6F91               	movwf	145,b	;volatile
 30681                           
 30682                           ; BSR set to: 58
 30683                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 30684  01AAE0  6B81               	clrf	129,b	;volatile
 30685                           
 30686                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 30687  01AAE2  0E83               	movlw	131
 30688  01AAE4  6F51               	movwf	81,b	;volatile
 30689                           
 30690                           ; BSR set to: 58
 30691                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 30692  01AAE6  6B41               	clrf	65,b	;volatile
 30693                           
 30694                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30695  01AAE8  0E97               	movlw	151
 30696  01AAEA  6F61               	movwf	97,b	;volatile
 30697                           
 30698                           ; BSR set to: 58
 30699                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30700  01AAEC  6B82               	clrf	130,b	;volatile
 30701                           
 30702                           ; BSR set to: 58
 30703                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30704  01AAEE  6B92               	clrf	146,b	;volatile
 30705                           
 30706                           ; BSR set to: 58
 30707                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30708  01AAF0  6B42               	clrf	66,b	;volatile
 30709                           
 30710                           ; BSR set to: 58
 30711                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30712  01AAF2  6B52               	clrf	82,b	;volatile
 30713                           
 30714                           ; BSR set to: 58
 30715                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30716  01AAF4  6B62               	clrf	98,b	;volatile
 30717                           
 30718                           ; BSR set to: 58
 30719                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30720  01AAF6  6B72               	clrf	114,b	;volatile
 30721                           
 30722                           ; BSR set to: 58
 30723                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30724  01AAF8  6943               	setf	67,b	;volatile
 30725                           
 30726                           ; BSR set to: 58
 30727                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30728  01AAFA  6953               	setf	83,b	;volatile
 30729                           
 30730                           ; BSR set to: 58
 30731                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30732  01AAFC  6963               	setf	99,b	;volatile
 30733                           
 30734                           ; BSR set to: 58
 30735                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30736  01AAFE  6973               	setf	115,b	;volatile
 30737                           
 30738                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30739  01AB00  0E07               	movlw	7
 30740  01AB02  6F83               	movwf	131,b	;volatile
 30741                           
 30742                           ; BSR set to: 58
 30743                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30744  01AB04  6993               	setf	147,b	;volatile
 30745                           
 30746                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30747  01AB06  0E0F               	movlw	15
 30748  01AB08  6FE8               	movwf	232,b	;volatile
 30749                           
 30750                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30751  01AB0A  0E13               	movlw	19
 30752  01AB0C  6FDE               	movwf	222,b	;volatile
 30753                           
 30754                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30755  01AB0E  0E16               	movlw	22
 30756  01AB10  6F0E               	movwf	14,b	;volatile
 30757                           
 30758                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30759  01AB12  0E1E               	movlw	30
 30760  01AB14  6F13               	movwf	19,b	;volatile
 30761                           
 30762                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30763  01AB16  0E08               	movlw	8
 30764  01AB18  6FC0               	movwf	192,b	;volatile
 30765                           
 30766                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30767  01AB1A  0E10               	movlw	16
 30768  01AB1C  6F19               	movwf	25,b	;volatile
 30769                           
 30770                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30771  01AB1E  0E09               	movlw	9
 30772  01AB20  6FC1               	movwf	193,b	;volatile
 30773                           
 30774                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30775  01AB22  0E1F               	movlw	31
 30776  01AB24  6F15               	movwf	21,b	;volatile
 30777                           
 30778                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30779  01AB26  0E13               	movlw	19
 30780  01AB28  6F16               	movwf	22,b	;volatile
 30781                           
 30782                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30783  01AB2A  0E17               	movlw	23
 30784  01AB2C  6FE5               	movwf	229,b	;volatile
 30785                           
 30786                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30787  01AB2E  0E14               	movlw	20
 30788  01AB30  6FDF               	movwf	223,b	;volatile
 30789                           
 30790                           ; BSR set to: 58
 30791                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30792  01AB32  0012               	return		;funcret
 30793  01AB34                     __end_of_PIN_MANAGER_Initialize:
 30794                           	opt callstack 0
 30795                           
 30796 ;; *************** function _OSCILLATOR_Initialize *****************
 30797 ;; Defined at:
 30798 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30799 ;; Parameters:    Size  Location     Type
 30800 ;;		None
 30801 ;; Auto vars:     Size  Location     Type
 30802 ;;		None
 30803 ;; Return value:  Size  Location     Type
 30804 ;;                  1  [STACK] void 
 30805 ;; Registers used:
 30806 ;;		wreg, status,2
 30807 ;; Tracked objects:
 30808 ;;		On entry : 3F/3A
 30809 ;;		On exit  : 3F/39
 30810 ;;		Unchanged: 0/0
 30811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30816 ;;Total ram usage:        0 bytes
 30817 ;; Hardware stack levels used:    1
 30818 ;; Hardware stack levels required when called:   15
 30819 ;; This function calls:
 30820 ;;		Nothing
 30821 ;; This function is called by:
 30822 ;;		_SYSTEM_Initialize
 30823 ;; This function uses a reentrant model
 30824 ;;
 30825                           
 30826                           	psect	text126
 30827  01C092                     __ptext126:
 30828                           	opt callstack 0
 30829  01C092                     _OSCILLATOR_Initialize:
 30830                           	opt callstack 14
 30831                           
 30832                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30833                           
 30834                           ; BSR set to: 58
 30835                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30836                           ;incstack = 0
 30837  01C092  0E20               	movlw	32
 30838  01C094  0139               	movlb	57	; () banked
 30839  01C096  6FD9               	movwf	217,b	;volatile
 30840                           
 30841                           ; BSR set to: 57
 30842                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30843  01C098  6BDB               	clrf	219,b	;volatile
 30844                           
 30845                           ; BSR set to: 57
 30846                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30847  01C09A  6BDD               	clrf	221,b	;volatile
 30848                           
 30849                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30850  01C09C  0E02               	movlw	2
 30851  01C09E  6FDF               	movwf	223,b	;volatile
 30852                           
 30853                           ; BSR set to: 57
 30854                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30855  01C0A0  6BDE               	clrf	222,b	;volatile
 30856  01C0A2                     l169:
 30857                           
 30858                           ; BSR set to: 57
 30859                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30860  01C0A2  B1DC               	btfsc	220,0,b	;volatile
 30861  01C0A4  0012               	return	
 30862  01C0A6  D7FD               	goto	l169
 30863  01C0A8                     __end_of_OSCILLATOR_Initialize:
 30864                           	opt callstack 0
 30865                           
 30866 ;; *************** function _INTERRUPT_Initialize *****************
 30867 ;; Defined at:
 30868 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30869 ;; Parameters:    Size  Location     Type
 30870 ;;		None
 30871 ;; Auto vars:     Size  Location     Type
 30872 ;;  state           1  [STACK] _Bool 
 30873 ;; Return value:  Size  Location     Type
 30874 ;;                  1  [STACK] void 
 30875 ;; Registers used:
 30876 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30877 ;; Tracked objects:
 30878 ;;		On entry : 0/0
 30879 ;;		On exit  : 3F/39
 30880 ;;		Unchanged: 0/0
 30881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30886 ;;Total ram usage:        0 bytes
 30887 ;; Hardware stack levels used:    1
 30888 ;; Hardware stack levels required when called:   15
 30889 ;; This function calls:
 30890 ;;		Nothing
 30891 ;; This function is called by:
 30892 ;;		_SYSTEM_Initialize
 30893 ;; This function uses a reentrant model
 30894 ;;
 30895                           
 30896                           	psect	text127
 30897  01B01E                     __ptext127:
 30898                           	opt callstack 0
 30899  01B01E                     _INTERRUPT_Initialize:
 30900                           	opt callstack 0
 30901                           
 30902                           ; BSR set to: 57
 30903                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30904  01B01E  52E6               	movf	postinc1,f,c
 30905                           
 30906                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30907                           
 30908                           ;incstack = 0
 30909  01B020  8AD2               	bsf	210,5,c	;volatile
 30910                           
 30911                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30912  01B022  AED2               	btfss	16338,7,c	;volatile
 30913  01B024  D003               	goto	u9440
 30914  01B026  6A0C               	clrf	(btemp+11)^0,c
 30915  01B028  2A0C               	incf	(btemp+11)^0,f,c
 30916  01B02A  D001               	goto	u9458
 30917  01B02C                     u9440:
 30918  01B02C  6A0C               	clrf	(btemp+11)^0,c
 30919  01B02E                     u9458:
 30920                           
 30921                           ;stkvar	_state @ sp[(-1)+0]
 30922  01B02E  0EFF               	movlw	-1
 30923  01B030  0060  F033  FFE3   	movff	btemp+11,plusw1
 30924                           
 30925                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30926  01B036  9ED2               	bcf	16338,7,c	;volatile
 30927                           
 30928                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30929  01B038  0E55               	movlw	85
 30930  01B03A  6ED4               	movwf	212,c	;volatile
 30931                           
 30932                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30933  01B03C  0EAA               	movlw	170
 30934  01B03E  6ED4               	movwf	212,c	;volatile
 30935                           
 30936                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30937  01B040  90D4               	bcf	212,0,c	;volatile
 30938                           
 30939                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30940  01B042  0138               	movlb	56	; () banked
 30941  01B044  6B9F               	clrf	159,b	;volatile
 30942                           
 30943                           ; BSR set to: 56
 30944                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30945  01B046  6B9E               	clrf	158,b	;volatile
 30946                           
 30947                           ; BSR set to: 56
 30948                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30949  01B048  0E08               	movlw	8
 30950  01B04A  6F9D               	movwf	157,b	;volatile
 30951                           
 30952                           ; BSR set to: 56
 30953                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30954  01B04C  0E55               	movlw	85
 30955  01B04E  6ED4               	movwf	212,c	;volatile
 30956                           
 30957                           ; BSR set to: 56
 30958                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30959  01B050  0EAA               	movlw	170
 30960  01B052  6ED4               	movwf	212,c	;volatile
 30961                           
 30962                           ; BSR set to: 56
 30963                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30964  01B054  80D4               	bsf	212,0,c	;volatile
 30965                           
 30966                           ; BSR set to: 56
 30967                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30968                           ;stkvar	_state @ sp[(-1)+0]
 30969  01B056  0EFF               	movlw	-1
 30970  01B058  B0E3               	btfsc	plusw1,0,c
 30971  01B05A  D002               	bra	u9465
 30972  01B05C  9ED2               	bcf	16338,7,c	;volatile
 30973  01B05E  D001               	bra	u9466
 30974  01B060                     u9465:
 30975  01B060  8ED2               	bsf	16338,7,c	;volatile
 30976  01B062                     u9466:
 30977                           
 30978                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30979  01B062  0139               	movlb	57	; () banked
 30980  01B064  8782               	bsf	130,3,b	;volatile
 30981                           
 30982                           ; BSR set to: 57
 30983                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30984  01B066  8382               	bsf	130,1,b	;volatile
 30985                           
 30986                           ; BSR set to: 57
 30987                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30988  01B068  8182               	bsf	130,0,b	;volatile
 30989                           
 30990                           ; BSR set to: 57
 30991                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30992  01B06A  8582               	bsf	130,2,b	;volatile
 30993                           
 30994                           ; BSR set to: 57
 30995                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30996  01B06C  8786               	bsf	134,3,b	;volatile
 30997                           
 30998                           ; BSR set to: 57
 30999                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 31000  01B06E  8586               	bsf	134,2,b	;volatile
 31001                           
 31002                           ; BSR set to: 57
 31003                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 31004  01B070  8783               	bsf	131,3,b	;volatile
 31005                           
 31006                           ; BSR set to: 57
 31007                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 31008  01B072  8181               	bsf	129,0,b	;volatile
 31009                           
 31010                           ; BSR set to: 57
 31011                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 31012  01B074  9185               	bcf	133,0,b	;volatile
 31013                           
 31014                           ; BSR set to: 57
 31015                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 31016  01B076  8189               	bsf	137,0,b	;volatile
 31017                           
 31018                           ; BSR set to: 57
 31019                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 31020  01B078  9D88               	bcf	136,6,b	;volatile
 31021                           
 31022                           ; BSR set to: 57
 31023                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 31024  01B07A  8581               	bsf	129,2,b	;volatile
 31025                           
 31026                           ; BSR set to: 57
 31027                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 31028  01B07C  8781               	bsf	129,3,b	;volatile
 31029                           
 31030                           ; BSR set to: 57
 31031                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 31032  01B07E  9D86               	bcf	134,6,b	;volatile
 31033                           
 31034                           ; BSR set to: 57
 31035                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 31036  01B080  52E5               	movf	postdec1,f,c
 31037  01B082  0012               	return		;funcret
 31038  01B084                     __end_of_INTERRUPT_Initialize:
 31039                           	opt callstack 0
 31040                           
 31041 ;; *************** function _FVR_Initialize *****************
 31042 ;; Defined at:
 31043 ;;		line 58 in file "mcc_generated_files/fvr.c"
 31044 ;; Parameters:    Size  Location     Type
 31045 ;;		None
 31046 ;; Auto vars:     Size  Location     Type
 31047 ;;		None
 31048 ;; Return value:  Size  Location     Type
 31049 ;;                  1  [STACK] void 
 31050 ;; Registers used:
 31051 ;;		wreg, status,2
 31052 ;; Tracked objects:
 31053 ;;		On entry : 3F/39
 31054 ;;		On exit  : 3F/3E
 31055 ;;		Unchanged: 0/0
 31056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31061 ;;Total ram usage:        0 bytes
 31062 ;; Hardware stack levels used:    1
 31063 ;; Hardware stack levels required when called:   15
 31064 ;; This function calls:
 31065 ;;		Nothing
 31066 ;; This function is called by:
 31067 ;;		_SYSTEM_Initialize
 31068 ;; This function uses a reentrant model
 31069 ;;
 31070                           
 31071                           	psect	text128
 31072  01C1BE                     __ptext128:
 31073                           	opt callstack 0
 31074  01C1BE                     _FVR_Initialize:
 31075                           	opt callstack 14
 31076                           
 31077                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 31078                           
 31079                           ; BSR set to: 57
 31080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31081                           ;incstack = 0
 31082  01C1BE  0EAF               	movlw	175
 31083  01C1C0  013E               	movlb	62	; () banked
 31084  01C1C2  6FC1               	movwf	193,b	;volatile
 31085                           
 31086                           ; BSR set to: 62
 31087                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31088  01C1C4  0012               	return		;funcret
 31089  01C1C6                     __end_of_FVR_Initialize:
 31090                           	opt callstack 0
 31091                           
 31092 ;; *************** function _EXT_INT_Initialize *****************
 31093 ;; Defined at:
 31094 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 31095 ;; Parameters:    Size  Location     Type
 31096 ;;		None
 31097 ;; Auto vars:     Size  Location     Type
 31098 ;;		None
 31099 ;; Return value:  Size  Location     Type
 31100 ;;                  1  [STACK] void 
 31101 ;; Registers used:
 31102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31103 ;; Tracked objects:
 31104 ;;		On entry : 3F/3F
 31105 ;;		On exit  : 3F/39
 31106 ;;		Unchanged: 0/0
 31107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31112 ;;Total ram usage:        0 bytes
 31113 ;; Hardware stack levels used:    1
 31114 ;; Hardware stack levels required when called:   16
 31115 ;; This function calls:
 31116 ;;		_INT0_SetInterruptHandler
 31117 ;;		_INT1_SetInterruptHandler
 31118 ;; This function is called by:
 31119 ;;		_SYSTEM_Initialize
 31120 ;; This function uses a reentrant model
 31121 ;;
 31122                           
 31123                           	psect	text129
 31124  01B9A6                     __ptext129:
 31125                           	opt callstack 0
 31126  01B9A6                     _EXT_INT_Initialize:
 31127                           	opt callstack 13
 31128                           
 31129                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 31130                           
 31131                           ; BSR set to: 62
 31132                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31133                           ;incstack = 0
 31134  01B9A6  0139               	movlb	57	; () banked
 31135  01B9A8  91A1               	bcf	161,0,b	;volatile
 31136                           
 31137                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 31138  01B9AA  90D2               	bcf	210,0,c	;volatile
 31139                           
 31140                           ; BSR set to: 57
 31141                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 31142  01B9AC  0EEA               	movlw	low _INT0_DefaultInterruptHandler
 31143  01B9AE  6EE6               	movwf	postinc1,c
 31144  01B9B0  0EC1               	movlw	high _INT0_DefaultInterruptHandler
 31145  01B9B2  6EE6               	movwf	postinc1,c
 31146  01B9B4  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 31147  01B9B6  6EE6               	movwf	postinc1,c
 31148  01B9B8  EC6F  F0DE         	call	_INT0_SetInterruptHandler	;wreg free
 31149                           
 31150                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 31151  01B9BC  0139               	movlb	57	; () banked
 31152  01B9BE  8191               	bsf	145,0,b	;volatile
 31153                           
 31154                           ; BSR set to: 57
 31155                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 31156  01B9C0  91A5               	bcf	165,0,b	;volatile
 31157                           
 31158                           ; BSR set to: 57
 31159                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 31160  01B9C2  92D2               	bcf	210,1,c	;volatile
 31161                           
 31162                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 31163  01B9C4  0EE6               	movlw	low _INT1_DefaultInterruptHandler
 31164  01B9C6  6EE6               	movwf	postinc1,c
 31165  01B9C8  0EC1               	movlw	high _INT1_DefaultInterruptHandler
 31166  01B9CA  6EE6               	movwf	postinc1,c
 31167  01B9CC  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 31168  01B9CE  6EE6               	movwf	postinc1,c
 31169  01B9D0  EC5B  F0DE         	call	_INT1_SetInterruptHandler	;wreg free
 31170                           
 31171                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 31172  01B9D4  0139               	movlb	57	; () banked
 31173  01B9D6  8195               	bsf	149,0,b	;volatile
 31174                           
 31175                           ; BSR set to: 57
 31176                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 31177  01B9D8  0012               	return		;funcret
 31178  01B9DA                     __end_of_EXT_INT_Initialize:
 31179                           	opt callstack 0
 31180                           
 31181 ;; *************** function _INT1_SetInterruptHandler *****************
 31182 ;; Defined at:
 31183 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 31184 ;; Parameters:    Size  Location     Type
 31185 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31186 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 31187 ;; Auto vars:     Size  Location     Type
 31188 ;;		None
 31189 ;; Return value:  Size  Location     Type
 31190 ;;                  1  [STACK] void 
 31191 ;; Registers used:
 31192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31193 ;; Tracked objects:
 31194 ;;		On entry : 3F/39
 31195 ;;		On exit  : 0/0
 31196 ;;		Unchanged: 0/0
 31197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31202 ;;Total ram usage:        0 bytes
 31203 ;; Hardware stack levels used:    1
 31204 ;; Hardware stack levels required when called:   15
 31205 ;; This function calls:
 31206 ;;		Nothing
 31207 ;; This function is called by:
 31208 ;;		_EXT_INT_Initialize
 31209 ;;		_start_switch_handler
 31210 ;; This function uses a reentrant model
 31211 ;;
 31212                           
 31213                           	psect	text130
 31214  01BCB6                     __ptext130:
 31215                           	opt callstack 0
 31216  01BCB6                     _INT1_SetInterruptHandler:
 31217                           	opt callstack 14
 31218                           
 31219                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 31220                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31221                           
 31222                           ; BSR set to: 57
 31223                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31224                           ;incstack = 0
 31225  01BCB6  50E1               	movf	fsr1l,w,c
 31226  01BCB8  0FFD               	addlw	-3
 31227  01BCBA  6ED9               	movwf	fsr2l,c
 31228  01BCBC  50E2               	movf	fsr1h,w,c
 31229  01BCBE  6EDA               	movwf	fsr2h,c
 31230  01BCC0  0EFF               	movlw	255
 31231  01BCC2  22DA               	addwfc	fsr2h,f,c
 31232  01BCC4  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 31233  01BCCA  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 31234  01BCD0  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 31235                           
 31236                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31237  01BCD6  52E5               	movf	postdec1,f,c
 31238  01BCD8  52E5               	movf	postdec1,f,c
 31239  01BCDA  52E5               	movf	postdec1,f,c
 31240  01BCDC  0012               	return		;funcret
 31241  01BCDE                     __end_of_INT1_SetInterruptHandler:
 31242                           	opt callstack 0
 31243                           
 31244 ;; *************** function _INT0_SetInterruptHandler *****************
 31245 ;; Defined at:
 31246 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 31247 ;; Parameters:    Size  Location     Type
 31248 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31249 ;;		 -> INT0_DefaultInterruptHandler(1), 
 31250 ;; Auto vars:     Size  Location     Type
 31251 ;;		None
 31252 ;; Return value:  Size  Location     Type
 31253 ;;                  1  [STACK] void 
 31254 ;; Registers used:
 31255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31256 ;; Tracked objects:
 31257 ;;		On entry : 3F/39
 31258 ;;		On exit  : 0/0
 31259 ;;		Unchanged: 0/0
 31260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31265 ;;Total ram usage:        0 bytes
 31266 ;; Hardware stack levels used:    1
 31267 ;; Hardware stack levels required when called:   15
 31268 ;; This function calls:
 31269 ;;		Nothing
 31270 ;; This function is called by:
 31271 ;;		_EXT_INT_Initialize
 31272 ;; This function uses a reentrant model
 31273 ;;
 31274                           
 31275                           	psect	text131
 31276  01BCDE                     __ptext131:
 31277                           	opt callstack 0
 31278  01BCDE                     _INT0_SetInterruptHandler:
 31279                           	opt callstack 13
 31280                           
 31281                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 31282                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31283                           
 31284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31285                           ;incstack = 0
 31286  01BCDE  50E1               	movf	fsr1l,w,c
 31287  01BCE0  0FFD               	addlw	-3
 31288  01BCE2  6ED9               	movwf	fsr2l,c
 31289  01BCE4  50E2               	movf	fsr1h,w,c
 31290  01BCE6  6EDA               	movwf	fsr2h,c
 31291  01BCE8  0EFF               	movlw	255
 31292  01BCEA  22DA               	addwfc	fsr2h,f,c
 31293  01BCEC  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 31294  01BCF2  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 31295  01BCF8  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 31296                           
 31297                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 31298  01BCFE  52E5               	movf	postdec1,f,c
 31299  01BD00  52E5               	movf	postdec1,f,c
 31300  01BD02  52E5               	movf	postdec1,f,c
 31301  01BD04  0012               	return		;funcret
 31302  01BD06                     __end_of_INT0_SetInterruptHandler:
 31303                           	opt callstack 0
 31304                           
 31305 ;; *************** function _DMA2_Initialize *****************
 31306 ;; Defined at:
 31307 ;;		line 61 in file "mcc_generated_files/dma2.c"
 31308 ;; Parameters:    Size  Location     Type
 31309 ;;		None
 31310 ;; Auto vars:     Size  Location     Type
 31311 ;;		None
 31312 ;; Return value:  Size  Location     Type
 31313 ;;                  1  [STACK] void 
 31314 ;; Registers used:
 31315 ;;		wreg, status,2
 31316 ;; Tracked objects:
 31317 ;;		On entry : 3F/3D
 31318 ;;		On exit  : 3F/3B
 31319 ;;		Unchanged: 0/0
 31320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31325 ;;Total ram usage:        0 bytes
 31326 ;; Hardware stack levels used:    1
 31327 ;; Hardware stack levels required when called:   15
 31328 ;; This function calls:
 31329 ;;		Nothing
 31330 ;; This function is called by:
 31331 ;;		_SYSTEM_Initialize
 31332 ;; This function uses a reentrant model
 31333 ;;
 31334                           
 31335                           	psect	text132
 31336  01B2C0                     __ptext132:
 31337                           	opt callstack 0
 31338  01B2C0                     _DMA2_Initialize:
 31339                           	opt callstack 14
 31340                           
 31341                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 31342                           
 31343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31344                           ;incstack = 0
 31345  01B2C0  0E00               	movlw	0
 31346  01B2C2  013B               	movlb	59	; () banked
 31347  01B2C4  6FD9               	movwf	217,b	;volatile
 31348  01B2C6  0E10               	movlw	16
 31349  01B2C8  6FDA               	movwf	218,b	;volatile
 31350  01B2CA  0E00               	movlw	0
 31351  01B2CC  6FDB               	movwf	219,b	;volatile
 31352                           
 31353                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 31354  01B2CE  0E3F               	movlw	63
 31355  01B2D0  6FD1               	movwf	209,b	;volatile
 31356  01B2D2  0EBB               	movlw	187
 31357  01B2D4  6FD0               	movwf	208,b	;volatile
 31358                           
 31359                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 31360  01B2D6  0E03               	movlw	3
 31361  01B2D8  6FDD               	movwf	221,b	;volatile
 31362                           
 31363                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 31364  01B2DA  0E00               	movlw	0
 31365  01B2DC  6FD8               	movwf	216,b	;volatile
 31366  01B2DE  0E01               	movlw	1
 31367  01B2E0  6FD7               	movwf	215,b	;volatile
 31368                           
 31369                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 31370  01B2E2  0E00               	movlw	0
 31371  01B2E4  6FCF               	movwf	207,b	;volatile
 31372  01B2E6  0E01               	movlw	1
 31373  01B2E8  6FCE               	movwf	206,b	;volatile
 31374                           
 31375                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 31376  01B2EA  0E1C               	movlw	28
 31377  01B2EC  6FDF               	movwf	223,b	;volatile
 31378                           
 31379                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 31380  01B2EE  0E3D               	movlw	61
 31381  01B2F0  6FDE               	movwf	222,b	;volatile
 31382                           
 31383                           ; BSR set to: 59
 31384                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 31385  01B2F2  0139               	movlb	57	; () banked
 31386  01B2F4  97A5               	bcf	165,3,b	;volatile
 31387                           
 31388                           ; BSR set to: 57
 31389                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 31390  01B2F6  95A5               	bcf	165,2,b	;volatile
 31391                           
 31392                           ; BSR set to: 57
 31393                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 31394  01B2F8  9BA5               	bcf	165,5,b	;volatile
 31395                           
 31396                           ; BSR set to: 57
 31397                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 31398  01B2FA  99A5               	bcf	165,4,b	;volatile
 31399                           
 31400                           ; BSR set to: 57
 31401                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 31402  01B2FC  9795               	bcf	149,3,b	;volatile
 31403                           
 31404                           ; BSR set to: 57
 31405                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 31406  01B2FE  9595               	bcf	149,2,b	;volatile
 31407                           
 31408                           ; BSR set to: 57
 31409                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 31410  01B300  9B95               	bcf	149,5,b	;volatile
 31411                           
 31412                           ; BSR set to: 57
 31413                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 31414  01B302  9995               	bcf	149,4,b	;volatile
 31415  01B304  9ED2               	bcf	16338,7,c	;# 
 31416  01B306  0139               	banksel	14831	;# 
 31417  01B308  0E55               	movlw	85	;# 
 31418  01B30A  6FEF               	movwf	14831,b	;# 
 31419  01B30C  0EAA               	movlw	170	;# 
 31420  01B30E  6FEF               	movwf	14831,b	;# 
 31421  01B310  81EF               	bsf	14831,0,b	;# 
 31422  01B312  8ED2               	bsf	16338,7,c	;# 
 31423                           
 31424                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 31425  01B314  013B               	movlb	59	; () banked
 31426  01B316  6BDC               	clrf	220,b	;volatile
 31427                           
 31428                           ; BSR set to: 59
 31429                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31430  01B318  0012               	return		;funcret
 31431  01B31A                     __end_of_DMA2_Initialize:
 31432                           	opt callstack 0
 31433                           
 31434 ;; *************** function _DMA1_Initialize *****************
 31435 ;; Defined at:
 31436 ;;		line 86 in file "mcc_generated_files/dma1.c"
 31437 ;; Parameters:    Size  Location     Type
 31438 ;;		None
 31439 ;; Auto vars:     Size  Location     Type
 31440 ;;		None
 31441 ;; Return value:  Size  Location     Type
 31442 ;;                  1  [STACK] void 
 31443 ;; Registers used:
 31444 ;;		wreg, status,2
 31445 ;; Tracked objects:
 31446 ;;		On entry : 3F/3B
 31447 ;;		On exit  : 3F/3B
 31448 ;;		Unchanged: 0/0
 31449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31454 ;;Total ram usage:        0 bytes
 31455 ;; Hardware stack levels used:    1
 31456 ;; Hardware stack levels required when called:   15
 31457 ;; This function calls:
 31458 ;;		Nothing
 31459 ;; This function is called by:
 31460 ;;		_SYSTEM_Initialize
 31461 ;; This function uses a reentrant model
 31462 ;;
 31463                           
 31464                           	psect	text133
 31465  01AEE0                     __ptext133:
 31466                           	opt callstack 0
 31467  01AEE0                     _DMA1_Initialize:
 31468                           	opt callstack 14
 31469                           
 31470                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 31471                           
 31472                           ; BSR set to: 59
 31473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31474                           ;incstack = 0
 31475  01AEE0  0E00               	movlw	0
 31476  01AEE2  013B               	movlb	59	; () banked
 31477  01AEE4  6FF9               	movwf	249,b	;volatile
 31478  01AEE6  0E10               	movlw	16
 31479  01AEE8  6FFA               	movwf	250,b	;volatile
 31480  01AEEA  0E00               	movlw	0
 31481  01AEEC  6FFB               	movwf	251,b	;volatile
 31482                           
 31483                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 31484  01AEEE  0E3D               	movlw	61
 31485  01AEF0  6FF1               	movwf	241,b	;volatile
 31486  01AEF2  0E11               	movlw	17
 31487  01AEF4  6FF0               	movwf	240,b	;volatile
 31488                           
 31489                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 31490  01AEF6  0E03               	movlw	3
 31491  01AEF8  6FFD               	movwf	253,b	;volatile
 31492                           
 31493                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 31494  01AEFA  0E00               	movlw	0
 31495  01AEFC  6FF8               	movwf	248,b	;volatile
 31496  01AEFE  0E01               	movlw	1
 31497  01AF00  6FF7               	movwf	247,b	;volatile
 31498                           
 31499                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 31500  01AF02  0E00               	movlw	0
 31501  01AF04  6FEF               	movwf	239,b	;volatile
 31502  01AF06  0E01               	movlw	1
 31503  01AF08  6FEE               	movwf	238,b	;volatile
 31504                           
 31505                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 31506  01AF0A  0E15               	movlw	21
 31507  01AF0C  6FFF               	movwf	255,b	;volatile
 31508                           
 31509                           ; BSR set to: 59
 31510                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 31511  01AF0E  6BFE               	clrf	254,b	;volatile
 31512                           
 31513                           ; BSR set to: 59
 31514                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 31515  01AF10  0139               	movlb	57	; () banked
 31516  01AF12  93A2               	bcf	162,1,b	;volatile
 31517                           
 31518                           ; BSR set to: 57
 31519                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 31520  01AF14  91A2               	bcf	162,0,b	;volatile
 31521                           
 31522                           ; BSR set to: 57
 31523                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 31524  01AF16  97A2               	bcf	162,3,b	;volatile
 31525                           
 31526                           ; BSR set to: 57
 31527                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 31528  01AF18  95A2               	bcf	162,2,b	;volatile
 31529                           
 31530                           ; BSR set to: 57
 31531                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 31532  01AF1A  8392               	bsf	146,1,b	;volatile
 31533                           
 31534                           ; BSR set to: 57
 31535                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 31536  01AF1C  8192               	bsf	146,0,b	;volatile
 31537                           
 31538                           ; BSR set to: 57
 31539                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 31540  01AF1E  8792               	bsf	146,3,b	;volatile
 31541                           
 31542                           ; BSR set to: 57
 31543                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 31544  01AF20  8592               	bsf	146,2,b	;volatile
 31545                           
 31546                           ; BSR set to: 57
 31547                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 31548  01AF22  6BF1               	clrf	241,b	;volatile
 31549                           
 31550                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 31551  01AF24  0E01               	movlw	1
 31552  01AF26  6FF2               	movwf	242,b	;volatile
 31553                           
 31554                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 31555  01AF28  0E04               	movlw	4
 31556  01AF2A  6FF3               	movwf	243,b	;volatile
 31557                           
 31558                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 31559  01AF2C  0E02               	movlw	2
 31560  01AF2E  6FF4               	movwf	244,b	;volatile
 31561                           
 31562                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 31563  01AF30  0E03               	movlw	3
 31564  01AF32  6FF7               	movwf	247,b	;volatile
 31565  01AF34  9ED2               	bcf	16338,7,c	;# 
 31566  01AF36  0139               	banksel	14831	;# 
 31567  01AF38  0E55               	movlw	85	;# 
 31568  01AF3A  6FEF               	movwf	14831,b	;# 
 31569  01AF3C  0EAA               	movlw	170	;# 
 31570  01AF3E  6FEF               	movwf	14831,b	;# 
 31571  01AF40  81EF               	bsf	14831,0,b	;# 
 31572  01AF42  8ED2               	bsf	16338,7,c	;# 
 31573                           
 31574                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 31575  01AF44  013B               	movlb	59	; () banked
 31576  01AF46  6BFC               	clrf	252,b	;volatile
 31577                           
 31578                           ; BSR set to: 59
 31579                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31580  01AF48  0012               	return		;funcret
 31581  01AF4A                     __end_of_DMA1_Initialize:
 31582                           	opt callstack 0
 31583                           
 31584 ;; *************** function _CLKREF_Initialize *****************
 31585 ;; Defined at:
 31586 ;;		line 58 in file "mcc_generated_files/clkref.c"
 31587 ;; Parameters:    Size  Location     Type
 31588 ;;		None
 31589 ;; Auto vars:     Size  Location     Type
 31590 ;;		None
 31591 ;; Return value:  Size  Location     Type
 31592 ;;                  1  [STACK] void 
 31593 ;; Registers used:
 31594 ;;		wreg, status,2
 31595 ;; Tracked objects:
 31596 ;;		On entry : 3F/3B
 31597 ;;		On exit  : 3F/3C
 31598 ;;		Unchanged: 0/0
 31599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31604 ;;Total ram usage:        0 bytes
 31605 ;; Hardware stack levels used:    1
 31606 ;; Hardware stack levels required when called:   15
 31607 ;; This function calls:
 31608 ;;		Nothing
 31609 ;; This function is called by:
 31610 ;;		_SYSTEM_Initialize
 31611 ;; This function uses a reentrant model
 31612 ;;
 31613                           
 31614                           	psect	text134
 31615  01C166                     __ptext134:
 31616                           	opt callstack 0
 31617  01C166                     _CLKREF_Initialize:
 31618                           	opt callstack 14
 31619                           
 31620                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 31621                           
 31622                           ; BSR set to: 59
 31623                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31624                           ;incstack = 0
 31625  01C166  013C               	movlb	60	; () banked
 31626  01C168  6BE6               	clrf	230,b	;volatile
 31627                           
 31628                           ; BSR set to: 60
 31629                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 31630  01C16A  0E94               	movlw	148
 31631  01C16C  6FE5               	movwf	229,b	;volatile
 31632                           
 31633                           ; BSR set to: 60
 31634                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 31635  01C16E  0012               	return		;funcret
 31636  01C170                     __end_of_CLKREF_Initialize:
 31637                           	opt callstack 0
 31638                           
 31639 ;; *************** function _ADCC_Initialize *****************
 31640 ;; Defined at:
 31641 ;;		line 65 in file "mcc_generated_files/adcc.c"
 31642 ;; Parameters:    Size  Location     Type
 31643 ;;		None
 31644 ;; Auto vars:     Size  Location     Type
 31645 ;;		None
 31646 ;; Return value:  Size  Location     Type
 31647 ;;                  1  [STACK] void 
 31648 ;; Registers used:
 31649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 31650 ;; Tracked objects:
 31651 ;;		On entry : 3F/3E
 31652 ;;		On exit  : 0/0
 31653 ;;		Unchanged: 0/0
 31654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31659 ;;Total ram usage:        0 bytes
 31660 ;; Hardware stack levels used:    1
 31661 ;; Hardware stack levels required when called:   16
 31662 ;; This function calls:
 31663 ;;		_ADCC_SetADIInterruptHandler
 31664 ;;		_ADCC_SetADTIInterruptHandler
 31665 ;; This function is called by:
 31666 ;;		_SYSTEM_Initialize
 31667 ;; This function uses a reentrant model
 31668 ;;
 31669                           
 31670                           	psect	text135
 31671  01AF4A                     __ptext135:
 31672                           	opt callstack 0
 31673  01AF4A                     _ADCC_Initialize:
 31674                           	opt callstack 13
 31675                           
 31676                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 31677                           
 31678                           ; BSR set to: 60
 31679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31680                           ;incstack = 0
 31681  01AF4A  013E               	movlb	62	; () banked
 31682  01AF4C  6BDE               	clrf	222,b	;volatile
 31683                           
 31684                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 31685  01AF4E  6BDF               	clrf	223,b	;volatile
 31686                           
 31687                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 31688  01AF50  6BE0               	clrf	224,b	;volatile
 31689                           
 31690                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 31691  01AF52  6BE1               	clrf	225,b	;volatile
 31692                           
 31693                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31694  01AF54  6BE4               	clrf	228,b	;volatile
 31695                           
 31696                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31697  01AF56  6BE5               	clrf	229,b	;volatile
 31698                           
 31699                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31700  01AF58  6BEA               	clrf	234,b	;volatile
 31701                           
 31702                           ; BSR set to: 62
 31703                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31704  01AF5A  0E40               	movlw	64
 31705  01AF5C  6FEC               	movwf	236,b	;volatile
 31706                           
 31707                           ; BSR set to: 62
 31708                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31709  01AF5E  6BF1               	clrf	241,b	;volatile
 31710                           
 31711                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31712  01AF60  0E20               	movlw	32
 31713  01AF62  6FF3               	movwf	243,b	;volatile
 31714                           
 31715                           ; BSR set to: 62
 31716                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31717  01AF64  6BF4               	clrf	244,b	;volatile
 31718                           
 31719                           ; BSR set to: 62
 31720                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31721  01AF66  6BF5               	clrf	245,b	;volatile
 31722                           
 31723                           ; BSR set to: 62
 31724                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31725  01AF68  6BF6               	clrf	246,b	;volatile
 31726                           
 31727                           ; BSR set to: 62
 31728                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31729  01AF6A  6BF7               	clrf	247,b	;volatile
 31730                           
 31731                           ; BSR set to: 62
 31732                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31733  01AF6C  6BF9               	clrf	249,b	;volatile
 31734                           
 31735                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31736  01AF6E  0E5B               	movlw	91
 31737  01AF70  6FFA               	movwf	250,b	;volatile
 31738                           
 31739                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31740  01AF72  0E27               	movlw	39
 31741  01AF74  6FFB               	movwf	251,b	;volatile
 31742                           
 31743                           ; BSR set to: 62
 31744                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31745  01AF76  6BFC               	clrf	252,b	;volatile
 31746                           
 31747                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31748  01AF78  0E02               	movlw	2
 31749  01AF7A  6FFD               	movwf	253,b	;volatile
 31750                           
 31751                           ; BSR set to: 62
 31752                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31753  01AF7C  6BFE               	clrf	254,b	;volatile
 31754                           
 31755                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31756  01AF7E  0E07               	movlw	7
 31757  01AF80  6FFF               	movwf	255,b	;volatile
 31758                           
 31759                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31760  01AF82  0E84               	movlw	132
 31761  01AF84  6FF8               	movwf	248,b	;volatile
 31762                           
 31763                           ; BSR set to: 62
 31764                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31765  01AF86  0139               	movlb	57	; () banked
 31766  01AF88  95A1               	bcf	161,2,b	;volatile
 31767                           
 31768                           ; BSR set to: 57
 31769                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31770  01AF8A  8591               	bsf	145,2,b	;volatile
 31771                           
 31772                           ; BSR set to: 57
 31773                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31774  01AF8C  0EEC               	movlw	low _ADCC_DefaultInterruptHandler
 31775  01AF8E  6EE6               	movwf	postinc1,c
 31776  01AF90  0EC1               	movlw	high _ADCC_DefaultInterruptHandler
 31777  01AF92  6EE6               	movwf	postinc1,c
 31778  01AF94  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31779  01AF96  6EE6               	movwf	postinc1,c
 31780  01AF98  EC97  F0DE         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31781                           
 31782                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31783  01AF9C  0139               	movlb	57	; () banked
 31784  01AF9E  97A1               	bcf	161,3,b	;volatile
 31785                           
 31786                           ; BSR set to: 57
 31787                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31788  01AFA0  8791               	bsf	145,3,b	;volatile
 31789                           
 31790                           ; BSR set to: 57
 31791                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31792  01AFA2  0EEC               	movlw	low _ADCC_DefaultInterruptHandler
 31793  01AFA4  6EE6               	movwf	postinc1,c
 31794  01AFA6  0EC1               	movlw	high _ADCC_DefaultInterruptHandler
 31795  01AFA8  6EE6               	movwf	postinc1,c
 31796  01AFAA  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31797  01AFAC  6EE6               	movwf	postinc1,c
 31798  01AFAE  EC83  F0DE         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31799                           
 31800                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31801  01AFB2  0012               	return		;funcret
 31802  01AFB4                     __end_of_ADCC_Initialize:
 31803                           	opt callstack 0
 31804                           
 31805 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31806 ;; Defined at:
 31807 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31808 ;; Parameters:    Size  Location     Type
 31809 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31810 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31811 ;; Auto vars:     Size  Location     Type
 31812 ;;		None
 31813 ;; Return value:  Size  Location     Type
 31814 ;;                  1  [STACK] void 
 31815 ;; Registers used:
 31816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31817 ;; Tracked objects:
 31818 ;;		On entry : 0/1
 31819 ;;		On exit  : 0/0
 31820 ;;		Unchanged: 0/0
 31821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31826 ;;Total ram usage:        0 bytes
 31827 ;; Hardware stack levels used:    1
 31828 ;; Hardware stack levels required when called:   15
 31829 ;; This function calls:
 31830 ;;		Nothing
 31831 ;; This function is called by:
 31832 ;;		_ADCC_Initialize
 31833 ;;		_start_adc_scan
 31834 ;; This function uses a reentrant model
 31835 ;;
 31836                           
 31837                           	psect	text136
 31838  01BD06                     __ptext136:
 31839                           	opt callstack 0
 31840  01BD06                     _ADCC_SetADTIInterruptHandler:
 31841                           	opt callstack 14
 31842                           
 31843                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31844                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31845                           
 31846                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31847                           ;incstack = 0
 31848  01BD06  50E1               	movf	fsr1l,w,c
 31849  01BD08  0FFD               	addlw	-3
 31850  01BD0A  6ED9               	movwf	fsr2l,c
 31851  01BD0C  50E2               	movf	fsr1h,w,c
 31852  01BD0E  6EDA               	movwf	fsr2h,c
 31853  01BD10  0EFF               	movlw	255
 31854  01BD12  22DA               	addwfc	fsr2h,f,c
 31855  01BD14  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31856  01BD1A  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31857  01BD20  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31858                           
 31859                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31860  01BD26  52E5               	movf	postdec1,f,c
 31861  01BD28  52E5               	movf	postdec1,f,c
 31862  01BD2A  52E5               	movf	postdec1,f,c
 31863  01BD2C  0012               	return		;funcret
 31864  01BD2E                     __end_of_ADCC_SetADTIInterruptHandler:
 31865                           	opt callstack 0
 31866                           
 31867 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31868 ;; Defined at:
 31869 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31870 ;; Parameters:    Size  Location     Type
 31871 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31872 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31873 ;; Auto vars:     Size  Location     Type
 31874 ;;		None
 31875 ;; Return value:  Size  Location     Type
 31876 ;;                  1  [STACK] void 
 31877 ;; Registers used:
 31878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31879 ;; Tracked objects:
 31880 ;;		On entry : 7/1
 31881 ;;		On exit  : 0/0
 31882 ;;		Unchanged: 0/0
 31883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31888 ;;Total ram usage:        0 bytes
 31889 ;; Hardware stack levels used:    1
 31890 ;; Hardware stack levels required when called:   15
 31891 ;; This function calls:
 31892 ;;		Nothing
 31893 ;; This function is called by:
 31894 ;;		_ADCC_Initialize
 31895 ;;		_start_adc_scan
 31896 ;; This function uses a reentrant model
 31897 ;;
 31898                           
 31899                           	psect	text137
 31900  01BD2E                     __ptext137:
 31901                           	opt callstack 0
 31902  01BD2E                     _ADCC_SetADIInterruptHandler:
 31903                           	opt callstack 14
 31904                           
 31905                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31906                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31907                           
 31908                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31909                           ;incstack = 0
 31910  01BD2E  50E1               	movf	fsr1l,w,c
 31911  01BD30  0FFD               	addlw	-3
 31912  01BD32  6ED9               	movwf	fsr2l,c
 31913  01BD34  50E2               	movf	fsr1h,w,c
 31914  01BD36  6EDA               	movwf	fsr2h,c
 31915  01BD38  0EFF               	movlw	255
 31916  01BD3A  22DA               	addwfc	fsr2h,f,c
 31917  01BD3C  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31918  01BD42  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31919  01BD48  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31920                           
 31921                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31922  01BD4E  52E5               	movf	postdec1,f,c
 31923  01BD50  52E5               	movf	postdec1,f,c
 31924  01BD52  52E5               	movf	postdec1,f,c
 31925  01BD54  0012               	return		;funcret
 31926  01BD56                     __end_of_ADCC_SetADIInterruptHandler:
 31927                           	opt callstack 0
 31928                           
 31929 ;; *************** function _INT1_ISR *****************
 31930 ;; Defined at:
 31931 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31932 ;; Parameters:    Size  Location     Type
 31933 ;;		None
 31934 ;; Auto vars:     Size  Location     Type
 31935 ;;		None
 31936 ;; Return value:  Size  Location     Type
 31937 ;;                  1    wreg      void 
 31938 ;; Registers used:
 31939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31940 ;; Tracked objects:
 31941 ;;		On entry : 0/0
 31942 ;;		On exit  : 0/0
 31943 ;;		Unchanged: 0/0
 31944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31947 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31948 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31949 ;;Total ram usage:        4 bytes
 31950 ;; Hardware stack levels used:    1
 31951 ;; Hardware stack levels required when called:    5
 31952 ;; This function calls:
 31953 ;;		_INT1_CallBack
 31954 ;; This function is called by:
 31955 ;;		Interrupt level 1
 31956 ;; This function uses a non-reentrant model
 31957 ;;
 31958                           
 31959                           	psect	text138
 31960  01B854                     __ptext138:
 31961                           	opt callstack 0
 31962  01B854                     _INT1_ISR:
 31963                           	opt callstack 11
 31964                           
 31965                           ;incstack = 0
 31966  01B854  006F FF60  F027    	movff	status,??_INT1_ISR
 31967  01B85A  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 31968  01B860  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 31969  01B866  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 31970  01B86C  EE16  F0AF         	lfsr	1,___intlo_sp
 31971                           
 31972                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31973  01B870  0139               	movlb	57	; () banked
 31974  01B872  91A5               	bcf	165,0,b	;volatile
 31975                           
 31976                           ; BSR set to: 57
 31977                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31978  01B874  EC0C  F0DF         	call	_INT1_CallBack	;wreg free
 31979  01B878  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 31980  01B87E  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 31981  01B884  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 31982  01B88A  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 31983  01B890  0011               	retfie		f
 31984  01B892                     __end_of_INT1_ISR:
 31985                           	opt callstack 0
 31986                           
 31987 ;; *************** function _INT1_CallBack *****************
 31988 ;; Defined at:
 31989 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31990 ;; Parameters:    Size  Location     Type
 31991 ;;		None
 31992 ;; Auto vars:     Size  Location     Type
 31993 ;;		None
 31994 ;; Return value:  Size  Location     Type
 31995 ;;                  1  [STACK] void 
 31996 ;; Registers used:
 31997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31998 ;; Tracked objects:
 31999 ;;		On entry : 3F/39
 32000 ;;		On exit  : 0/0
 32001 ;;		Unchanged: 0/0
 32002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32007 ;;Total ram usage:        0 bytes
 32008 ;; Hardware stack levels used:    1
 32009 ;; Hardware stack levels required when called:    4
 32010 ;; This function calls:
 32011 ;;		Absolute function
 32012 ;;		_INT1_DefaultInterruptHandler
 32013 ;;		_switch_handler
 32014 ;; This function is called by:
 32015 ;;		_INT1_ISR
 32016 ;; This function uses a reentrant model
 32017 ;;
 32018                           
 32019                           	psect	text139
 32020  01BE18                     __ptext139:
 32021                           	opt callstack 0
 32022  01BE18                     _INT1_CallBack:
 32023                           	opt callstack 11
 32024                           
 32025                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 32026                           
 32027                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32028                           ;incstack = 0
 32029  01BE18  0100               	movlb	0	; () banked
 32030  01BE1A  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 32031  01BE1C  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32032  01BE1E  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32033  01BE20  B4D8               	btfsc	status,2,c
 32034  01BE22  0012               	return	
 32035                           
 32036                           ; BSR set to: 0
 32037                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 32038  01BE24  D801               	call	u1000_28
 32039  01BE26  0012               	return	
 32040  01BE28                     u1000_28:
 32041  01BE28  0005               	push	
 32042  01BE2A  6EFA               	movwf	pclath,c
 32043  01BE2C  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 32044  01BE2E  6EFD               	movwf	tosl,c
 32045  01BE30  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 32046  01BE32  6EFE               	movwf	tosh,c
 32047  01BE34  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 32048  01BE36  6EFF               	movwf	tosu,c
 32049  01BE38  50FA               	movf	pclath,w,c
 32050  01BE3A  0012               	return		;indir
 32051  01BE3C                     __end_of_INT1_CallBack:
 32052                           	opt callstack 0
 32053                           
 32054 ;; *************** function _INT1_DefaultInterruptHandler *****************
 32055 ;; Defined at:
 32056 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 32057 ;; Parameters:    Size  Location     Type
 32058 ;;		None
 32059 ;; Auto vars:     Size  Location     Type
 32060 ;;		None
 32061 ;; Return value:  Size  Location     Type
 32062 ;;                  1  [STACK] void 
 32063 ;; Registers used:
 32064 ;;		None
 32065 ;; Tracked objects:
 32066 ;;		On entry : 3F/0
 32067 ;;		On exit  : 0/0
 32068 ;;		Unchanged: 0/0
 32069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32074 ;;Total ram usage:        0 bytes
 32075 ;; Hardware stack levels used:    1
 32076 ;; Hardware stack levels required when called:    3
 32077 ;; This function calls:
 32078 ;;		Nothing
 32079 ;; This function is called by:
 32080 ;;		_EXT_INT_Initialize
 32081 ;;		_INT1_CallBack
 32082 ;; This function uses a reentrant model
 32083 ;;
 32084                           
 32085                           	psect	text140
 32086  01C1E6                     __ptext140:
 32087                           	opt callstack 0
 32088  01C1E6                     _INT1_DefaultInterruptHandler:
 32089                           	opt callstack 11
 32090                           
 32091                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32092                           
 32093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32094                           ;incstack = 0
 32095  01C1E6  0012               	return		;funcret
 32096  01C1E8                     __end_of_INT1_DefaultInterruptHandler:
 32097                           	opt callstack 0
 32098                           
 32099 ;; *************** function _switch_handler *****************
 32100 ;; Defined at:
 32101 ;;		line 58 in file "dio.c"
 32102 ;; Parameters:    Size  Location     Type
 32103 ;;		None
 32104 ;; Auto vars:     Size  Location     Type
 32105 ;;  i               1  [STACK] unsigned char 
 32106 ;;  sw_value        1  [STACK] unsigned char 
 32107 ;; Return value:  Size  Location     Type
 32108 ;;                  1  [STACK] void 
 32109 ;; Registers used:
 32110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 32111 ;; Tracked objects:
 32112 ;;		On entry : 3F/0
 32113 ;;		On exit  : 0/0
 32114 ;;		Unchanged: 0/0
 32115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32120 ;;Total ram usage:        0 bytes
 32121 ;; Hardware stack levels used:    1
 32122 ;; Hardware stack levels required when called:    3
 32123 ;; This function calls:
 32124 ;;		Nothing
 32125 ;; This function is called by:
 32126 ;;		_start_switch_handler
 32127 ;;		_INT1_CallBack
 32128 ;; This function uses a reentrant model
 32129 ;;
 32130                           
 32131                           	psect	text141
 32132  0193D4                     __ptext141:
 32133                           	opt callstack 0
 32134  0193D4                     _switch_handler:
 32135                           	opt callstack 0
 32136                           
 32137                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32138  0193D4  52E6               	movf	postinc1,f,c
 32139  0193D6  52E6               	movf	postinc1,f,c
 32140                           
 32141                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 32142                           ;stkvar	_i @ sp[(-2)+0]
 32143                           
 32144                           ;incstack = 0
 32145  0193D8  0EFE               	movlw	-2
 32146  0193DA  6AE3               	clrf	plusw1,c
 32147  0193DC  9EBD               	bcf	189,7,c	;volatile
 32148  0193DE  9ABF               	bcf	191,5,c	;volatile
 32149                           
 32150                           ;dio.c: 73:  __nop();
 32151  0193E0  F000               	nop	
 32152                           
 32153                           ;dio.c: 74:  __nop();
 32154  0193E2  F000               	nop	
 32155                           
 32156                           ;dio.c: 75:  __nop();
 32157  0193E4  F000               	nop	
 32158                           
 32159                           ;dio.c: 76:  __nop();
 32160  0193E6  F000               	nop	
 32161                           
 32162                           ;dio.c: 77:  __nop();
 32163  0193E8  F000               	nop	
 32164                           
 32165                           ;dio.c: 78:  __nop();
 32166  0193EA  F000               	nop	
 32167  0193EC  D019               	goto	l10562
 32168  0193EE                     l10550:
 32169                           
 32170                           ;dio.c: 83:    sw_value = PORTFbits.RF3;
 32171  0193EE  A6CF               	btfss	207,3,c	;volatile
 32172  0193F0  D011               	goto	u969_20
 32173  0193F2  D00D               	goto	u969_21
 32174  0193F4                     u966_28:
 32175                           
 32176                           ;stkvar	_sw_value @ sp[(-2)+1]
 32177  0193F4  0EFF               	movlw	-1
 32178  0193F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 32179                           
 32180                           ;dio.c: 84:    break;
 32181  0193FC  D027               	goto	l10564
 32182  0193FE                     l10552:
 32183                           
 32184                           ;dio.c: 86:    sw_value = PORTFbits.RF2;
 32185  0193FE  A4CF               	btfss	207,2,c	;volatile
 32186  019400  D009               	goto	u969_20
 32187  019402  D005               	goto	u969_21
 32188  019404                     l10554:
 32189                           
 32190                           ;dio.c: 89:    sw_value = PORTFbits.RF1;
 32191  019404  A2CF               	btfss	207,1,c	;volatile
 32192  019406  D006               	goto	u969_20
 32193  019408  D002               	goto	u969_21
 32194  01940A                     l10556:
 32195                           
 32196                           ;dio.c: 92:    sw_value = PORTFbits.RF0;
 32197  01940A  A0CF               	btfss	207,0,c	;volatile
 32198  01940C  D003               	goto	u969_20
 32199  01940E                     u969_21:
 32200  01940E  6A0C               	clrf	(btemp+11)^0,c
 32201  019410  2A0C               	incf	(btemp+11)^0,f,c
 32202  019412  D7F0               	goto	u966_28
 32203  019414                     u969_20:
 32204  019414  6A0C               	clrf	(btemp+11)^0,c
 32205  019416  D7EE               	goto	u966_28
 32206  019418                     l10558:
 32207                           
 32208                           ;dio.c: 95:    sw_value = 1;
 32209                           ;stkvar	_sw_value @ sp[(-2)+1]
 32210  019418  0EFF               	movlw	-1
 32211  01941A  6AE3               	clrf	plusw1,c
 32212  01941C  2AE3               	incf	plusw1,f,c
 32213                           
 32214                           ;dio.c: 96:    break;
 32215  01941E  D016               	goto	l10564
 32216  019420                     l10562:
 32217                           
 32218                           ;stkvar	_i @ sp[(-2)+0]
 32219  019420  0EFE               	movlw	-2
 32220  019422  50E3               	movf	plusw1,w,c
 32221  019424  6E0B               	movwf	(btemp+10)^0,c
 32222  019426  6A0C               	clrf	(btemp+11)^0,c
 32223                           
 32224                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32225                           ; Switch size 1, requested type "simple"
 32226                           ; Number of cases is 1, Range of values is 0 to 0
 32227                           ; switch strategies available:
 32228                           ; Name         Instructions Cycles
 32229                           ; simple_byte            4     3 (average)
 32230                           ;	Chosen strategy is simple_byte
 32231  019428  500C               	movf	(btemp+11)^0,w,c
 32232  01942A  0A00               	xorlw	0	; case 0
 32233  01942C  A4D8               	btfss	status,2,c
 32234  01942E  D7F4               	goto	l10558
 32235                           
 32236                           ; Switch size 1, requested type "simple"
 32237                           ; Number of cases is 4, Range of values is 0 to 3
 32238                           ; switch strategies available:
 32239                           ; Name         Instructions Cycles
 32240                           ; simple_byte           13     7 (average)
 32241                           ;	Chosen strategy is simple_byte
 32242  019430  500B               	movf	(btemp+10)^0,w,c
 32243  019432  0A00               	xorlw	0	; case 0
 32244  019434  B4D8               	btfsc	status,2,c
 32245  019436  D7E9               	goto	l10556
 32246  019438  0A01               	xorlw	1	; case 1
 32247  01943A  B4D8               	btfsc	status,2,c
 32248  01943C  D7E3               	goto	l10554
 32249  01943E  0A03               	xorlw	3	; case 2
 32250  019440  B4D8               	btfsc	status,2,c
 32251  019442  D7DD               	goto	l10552
 32252  019444  0A01               	xorlw	1	; case 3
 32253  019446  B4D8               	btfsc	status,2,c
 32254  019448  D7D2               	goto	l10550
 32255  01944A  D7E6               	goto	l10558
 32256  01944C                     l10564:
 32257                           
 32258                           ;dio.c: 100:   if (sw_value) {
 32259                           ;stkvar	_sw_value @ sp[(-2)+1]
 32260  01944C  0EFF               	movlw	-1
 32261  01944E  50E3               	movf	plusw1,w,c
 32262  019450  B4D8               	btfsc	status,2,c
 32263  019452  D018               	goto	l10570
 32264                           
 32265                           ;dio.c: 101:    if (S.button[i].sw == SW_ON) {
 32266                           ;stkvar	_i @ sp[(-2)+0]
 32267  019454  0EFE               	movlw	-2
 32268  019456  50E3               	movf	plusw1,w,c
 32269  019458  0D05               	mullw	5
 32270  01945A  0E54               	movlw	low _S
 32271  01945C  24F3               	addwf	243,w,c
 32272  01945E  6ED9               	movwf	fsr2l,c
 32273  019460  0E02               	movlw	high _S
 32274  019462  20F4               	addwfc	prodh,w,c
 32275  019464  6EDA               	movwf	fsr2h,c
 32276  019466  04DE               	decf	postinc2,w,c
 32277  019468  A4D8               	btfss	status,2,c
 32278  01946A  D049               	goto	l10578
 32279                           
 32280                           ;dio.c: 102:     S.button[i].sw = SW_OFF;
 32281                           ;stkvar	_i @ sp[(-2)+0]
 32282  01946C  0EFE               	movlw	-2
 32283  01946E  50E3               	movf	plusw1,w,c
 32284  019470  0D05               	mullw	5
 32285  019472  0E54               	movlw	low _S
 32286  019474  24F3               	addwf	243,w,c
 32287  019476  6ED9               	movwf	fsr2l,c
 32288  019478  0E02               	movlw	high _S
 32289  01947A  20F4               	addwfc	prodh,w,c
 32290  01947C  6EDA               	movwf	fsr2h,c
 32291  01947E  0E00               	movlw	0
 32292  019480  6EDF               	movwf	indf2,c
 32293  019482  D03D               	goto	l10578
 32294  019484                     l10570:
 32295                           
 32296                           ;dio.c: 105:    if (S.button[i].sw == SW_OFF) {
 32297                           ;stkvar	_i @ sp[(-2)+0]
 32298  019484  0EFE               	movlw	-2
 32299  019486  50E3               	movf	plusw1,w,c
 32300  019488  0D05               	mullw	5
 32301  01948A  0E54               	movlw	low _S
 32302  01948C  24F3               	addwf	243,w,c
 32303  01948E  6ED9               	movwf	fsr2l,c
 32304  019490  0E02               	movlw	high _S
 32305  019492  20F4               	addwfc	prodh,w,c
 32306  019494  6EDA               	movwf	fsr2h,c
 32307  019496  50DF               	movf	indf2,w,c
 32308  019498  A4D8               	btfss	status,2,c
 32309  01949A  D031               	goto	l10578
 32310                           
 32311                           ;dio.c: 106:     S.button[i].sw = SW_ON;
 32312                           ;stkvar	_i @ sp[(-2)+0]
 32313  01949C  0EFE               	movlw	-2
 32314  01949E  50E3               	movf	plusw1,w,c
 32315  0194A0  0D05               	mullw	5
 32316  0194A2  0E54               	movlw	low _S
 32317  0194A4  24F3               	addwf	243,w,c
 32318  0194A6  6ED9               	movwf	fsr2l,c
 32319  0194A8  0E02               	movlw	high _S
 32320  0194AA  20F4               	addwfc	prodh,w,c
 32321  0194AC  6EDA               	movwf	fsr2h,c
 32322  0194AE  0E01               	movlw	1
 32323  0194B0  6EDF               	movwf	indf2,c
 32324                           
 32325                           ;dio.c: 107:     S.button[i].count = V.timerint_count;
 32326  0194B2  EE20  F1EB         	lfsr	2,_V+187	;volatile
 32327                           
 32328                           ;stkvar	_i @ sp[(-2)+0]
 32329  0194B6  0EFE               	movlw	-2
 32330  0194B8  50E3               	movf	plusw1,w,c
 32331  0194BA  0D05               	mullw	5
 32332  0194BC  0E55               	movlw	low (_S+1)
 32333  0194BE  24F3               	addwf	243,w,c
 32334  0194C0  6EE9               	movwf	fsr0l,c
 32335  0194C2  0E02               	movlw	high (_S+1)
 32336  0194C4  20F4               	addwfc	prodh,w,c
 32337  0194C6  6EEA               	movwf	fsr0h,c
 32338  0194C8  006F FF7B FFEE     	movff	postinc2,postinc0
 32339  0194CE  006F FF7B FFEE     	movff	postinc2,postinc0
 32340  0194D4  006F FF7B FFEE     	movff	postinc2,postinc0
 32341  0194DA  006F FF7B FFEE     	movff	postinc2,postinc0
 32342                           
 32343                           ;dio.c: 108:     S.sw_bitmap |= 1 << i;
 32344                           ;stkvar	_i @ sp[(-2)+0]
 32345  0194E0  0EFE               	movlw	-2
 32346  0194E2  006F FF8C  F00C    	movff	plusw1,btemp+11
 32347  0194E8  0E01               	movlw	1
 32348  0194EA  6E0B               	movwf	(btemp+10)^0,c
 32349  0194EC  2A0C               	incf	(btemp+11)^0,f,c
 32350  0194EE  D002               	goto	u973_24
 32351  0194F0                     u973_25:
 32352  0194F0  90D8               	bcf	status,0,c
 32353  0194F2  360B               	rlcf	(btemp+10)^0,f,c
 32354  0194F4                     u973_24:
 32355  0194F4  2E0C               	decfsz	(btemp+11)^0,f,c
 32356  0194F6  D7FC               	goto	u973_25
 32357  0194F8  500B               	movf	(btemp+10)^0,w,c
 32358  0194FA  0102               	movlb	2	; () banked
 32359  0194FC  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 32360  0194FE                     l10578:
 32361                           
 32362                           ;dio.c: 111:  } while (++i < 4);
 32363                           ;stkvar	_i @ sp[(-2)+0]
 32364  0194FE  0EFE               	movlw	-2
 32365  019500  2AE3               	incf	plusw1,f,c
 32366  019502  0EFE               	movlw	-2
 32367  019504  006F FF8C  F001    	movff	plusw1,btemp
 32368  01950A  0E03               	movlw	3
 32369  01950C  6401               	cpfsgt	btemp^0,c
 32370  01950E  D788               	goto	l10562
 32371                           
 32372                           ;dio.c: 120:  do { LATDbits.LATD7 = 1; } while(0);
 32373  019510  8EBD               	bsf	189,7,c	;volatile
 32374                           
 32375                           ;dio.c: 121:  do { LATFbits.LATF5 = 1; } while(0);
 32376  019512  8ABF               	bsf	191,5,c	;volatile
 32377                           
 32378                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32379  019514  52E5               	movf	postdec1,f,c
 32380  019516  52E5               	movf	postdec1,f,c
 32381  019518  0012               	return		;funcret
 32382  01951A                     __end_of_switch_handler:
 32383                           	opt callstack 0
 32384                           
 32385 ;; *************** function _TMR5_ISR *****************
 32386 ;; Defined at:
 32387 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 32388 ;; Parameters:    Size  Location     Type
 32389 ;;		None
 32390 ;; Auto vars:     Size  Location     Type
 32391 ;;		None
 32392 ;; Return value:  Size  Location     Type
 32393 ;;                  1    wreg      void 
 32394 ;; Registers used:
 32395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32396 ;; Tracked objects:
 32397 ;;		On entry : 0/0
 32398 ;;		On exit  : 3F/0
 32399 ;;		Unchanged: 0/0
 32400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32403 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32404 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32405 ;;Total ram usage:       15 bytes
 32406 ;; Hardware stack levels used:    1
 32407 ;; Hardware stack levels required when called:    9
 32408 ;; This function calls:
 32409 ;;		_TMR5_CallBack
 32410 ;;		_TMR5_WriteTimer
 32411 ;; This function is called by:
 32412 ;;		Interrupt level 1
 32413 ;; This function uses a non-reentrant model
 32414 ;;
 32415                           
 32416                           	psect	text142
 32417  01A208                     __ptext142:
 32418                           	opt callstack 0
 32419  01A208                     _TMR5_ISR:
 32420                           	opt callstack 7
 32421                           
 32422                           ;incstack = 0
 32423  01A208  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 32424  01A20E  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 32425  01A214  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 32426  01A21A  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 32427  01A220  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 32428  01A226  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 32429  01A22C  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 32430  01A232  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 32431  01A238  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 32432  01A23E  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 32433  01A244  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 32434  01A24A  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 32435  01A250  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 32436  01A256  EE16  F0AF         	lfsr	1,___intlo_sp
 32437                           
 32438                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 32439  01A25A  0139               	movlb	57	; () banked
 32440  01A25C  9DA8               	bcf	168,6,b	;volatile
 32441                           
 32442                           ; BSR set to: 57
 32443                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 32444  01A25E  0060  F323  FFE6   	movff	_timer5ReloadVal,postinc1
 32445  01A264  0060  F327  FFE6   	movff	_timer5ReloadVal+1,postinc1
 32446  01A26A  ECE9  F0DB         	call	_TMR5_WriteTimer	;wreg free
 32447                           
 32448                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 32449  01A26E  0101               	movlb	1	; () banked
 32450  01A270  51DA               	movf	(_V+170)& (0+255),w,b	;volatile
 32451  01A272  6E2B               	movwf	??_TMR5_ISR^0,c
 32452  01A274  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 32453  01A276  0E05               	movlw	5
 32454  01A278  262B               	addwf	??_TMR5_ISR^0,f,c
 32455  01A27A  0E00               	movlw	0
 32456  01A27C  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 32457  01A27E  0100               	movlb	0	; () banked
 32458  01A280  4BC6               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 32459  01A282  2BC7               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32460  01A284  502B               	movf	??_TMR5_ISR^0,w,c
 32461  01A286  5DC6               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 32462  01A288  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 32463  01A28A  59C7               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32464  01A28C  A0D8               	btfss	status,0,c
 32465  01A28E  D005               	goto	i1l1019
 32466                           
 32467                           ; BSR set to: 0
 32468                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 32469  01A290  EC1E  F0DF         	call	_TMR5_CallBack	;wreg free
 32470                           
 32471                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 32472  01A294  0100               	movlb	0	; () banked
 32473  01A296  6BC6               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 32474  01A298  6BC7               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 32475  01A29A                     i1l1019:
 32476                           
 32477                           ; BSR set to: 0
 32478  01A29A  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 32479  01A2A0  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 32480  01A2A6  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 32481  01A2AC  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 32482  01A2B2  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 32483  01A2B8  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 32484  01A2BE  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 32485  01A2C4  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 32486  01A2CA  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 32487  01A2D0  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 32488  01A2D6  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 32489  01A2DC  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 32490  01A2E2  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 32491  01A2E8  0011               	retfie		f
 32492  01A2EA                     __end_of_TMR5_ISR:
 32493                           	opt callstack 0
 32494                           
 32495 ;; *************** function _TMR5_WriteTimer *****************
 32496 ;; Defined at:
 32497 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 32498 ;; Parameters:    Size  Location     Type
 32499 ;;  timerVal        2  [STACK] unsigned short 
 32500 ;; Auto vars:     Size  Location     Type
 32501 ;;		None
 32502 ;; Return value:  Size  Location     Type
 32503 ;;                  1  [STACK] void 
 32504 ;; Registers used:
 32505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32506 ;; Tracked objects:
 32507 ;;		On entry : 3F/39
 32508 ;;		On exit  : 0/0
 32509 ;;		Unchanged: 0/0
 32510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32515 ;;Total ram usage:        0 bytes
 32516 ;; Hardware stack levels used:    1
 32517 ;; Hardware stack levels required when called:    3
 32518 ;; This function calls:
 32519 ;;		Nothing
 32520 ;; This function is called by:
 32521 ;;		_TMR5_ISR
 32522 ;; This function uses a reentrant model
 32523 ;;
 32524                           
 32525                           	psect	text143
 32526  01B7D2                     __ptext143:
 32527                           	opt callstack 0
 32528  01B7D2                     _TMR5_WriteTimer:
 32529                           	opt callstack 12
 32530                           
 32531                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 32532                           
 32533                           ; BSR set to: 0
 32534                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32535                           ;incstack = 0
 32536  01B7D2  A49A               	btfss	154,2,c	;volatile
 32537  01B7D4  D00F               	goto	l10780
 32538                           
 32539                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 32540  01B7D6  909A               	bcf	154,0,c	;volatile
 32541                           
 32542                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 32543                           ;stkvar	_timerVal @ sp[(0)+-2]
 32544  01B7D8  0EFF               	movlw	255
 32545  01B7DA  24E1               	addwf	fsr1l,w,c
 32546  01B7DC  6ED9               	movwf	fsr2l,c
 32547  01B7DE  0EFF               	movlw	255
 32548  01B7E0  20E2               	addwfc	fsr1h,w,c
 32549  01B7E2  6EDA               	movwf	fsr2h,c
 32550  01B7E4  50DF               	movf	indf2,w,c
 32551  01B7E6  6E99               	movwf	153,c	;volatile
 32552                           
 32553                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 32554                           ;stkvar	_timerVal @ sp[(0)+-2]
 32555  01B7E8  0EFE               	movlw	-2
 32556  01B7EA  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32557                           
 32558                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 32559  01B7F0  809A               	bsf	154,0,c	;volatile
 32560                           
 32561                           ;mcc_generated_files/tmr5.c: 144:  } else {
 32562  01B7F2  D00C               	goto	l1002
 32563  01B7F4                     l10780:
 32564                           
 32565                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 32566                           ;stkvar	_timerVal @ sp[(0)+-2]
 32567  01B7F4  0EFF               	movlw	255
 32568  01B7F6  24E1               	addwf	fsr1l,w,c
 32569  01B7F8  6ED9               	movwf	fsr2l,c
 32570  01B7FA  0EFF               	movlw	255
 32571  01B7FC  20E2               	addwfc	fsr1h,w,c
 32572  01B7FE  6EDA               	movwf	fsr2h,c
 32573  01B800  50DF               	movf	indf2,w,c
 32574  01B802  6E99               	movwf	153,c	;volatile
 32575                           
 32576                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 32577                           ;stkvar	_timerVal @ sp[(0)+-2]
 32578  01B804  0EFE               	movlw	-2
 32579  01B806  006F FF8F FF98     	movff	plusw1,16280	;volatile
 32580  01B80C                     l1002:
 32581                           
 32582                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32583  01B80C  52E5               	movf	postdec1,f,c
 32584  01B80E  52E5               	movf	postdec1,f,c
 32585  01B810  0012               	return		;funcret
 32586  01B812                     __end_of_TMR5_WriteTimer:
 32587                           	opt callstack 0
 32588                           
 32589 ;; *************** function _TMR5_CallBack *****************
 32590 ;; Defined at:
 32591 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 32592 ;; Parameters:    Size  Location     Type
 32593 ;;		None
 32594 ;; Auto vars:     Size  Location     Type
 32595 ;;		None
 32596 ;; Return value:  Size  Location     Type
 32597 ;;                  1  [STACK] void 
 32598 ;; Registers used:
 32599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 32600 ;; Tracked objects:
 32601 ;;		On entry : 3F/0
 32602 ;;		On exit  : 0/0
 32603 ;;		Unchanged: 0/0
 32604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32609 ;;Total ram usage:        0 bytes
 32610 ;; Hardware stack levels used:    1
 32611 ;; Hardware stack levels required when called:    8
 32612 ;; This function calls:
 32613 ;;		Absolute function
 32614 ;;		_TMR5_DefaultInterruptHandler
 32615 ;; This function is called by:
 32616 ;;		_TMR5_ISR
 32617 ;; This function uses a reentrant model
 32618 ;;
 32619                           
 32620                           	psect	text144
 32621  01BE3C                     __ptext144:
 32622                           	opt callstack 0
 32623  01BE3C                     _TMR5_CallBack:
 32624                           	opt callstack 7
 32625                           
 32626                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 32627                           
 32628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32629                           ;incstack = 0
 32630  01BE3C  0100               	movlb	0	; () banked
 32631  01BE3E  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32632  01BE40  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32633  01BE42  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32634  01BE44  B4D8               	btfsc	status,2,c
 32635  01BE46  0012               	return	
 32636                           
 32637                           ; BSR set to: 0
 32638                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 32639  01BE48  D801               	call	u1009_28
 32640  01BE4A  0012               	return	
 32641  01BE4C                     u1009_28:
 32642  01BE4C  0005               	push	
 32643  01BE4E  6EFA               	movwf	pclath,c
 32644  01BE50  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 32645  01BE52  6EFD               	movwf	tosl,c
 32646  01BE54  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 32647  01BE56  6EFE               	movwf	tosh,c
 32648  01BE58  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 32649  01BE5A  6EFF               	movwf	tosu,c
 32650  01BE5C  50FA               	movf	pclath,w,c
 32651  01BE5E  0012               	return		;indir
 32652  01BE60                     __end_of_TMR5_CallBack:
 32653                           	opt callstack 0
 32654                           
 32655 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 32656 ;; Defined at:
 32657 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 32658 ;; Parameters:    Size  Location     Type
 32659 ;;		None
 32660 ;; Auto vars:     Size  Location     Type
 32661 ;;		None
 32662 ;; Return value:  Size  Location     Type
 32663 ;;                  1  [STACK] void 
 32664 ;; Registers used:
 32665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32666 ;; Tracked objects:
 32667 ;;		On entry : 3F/0
 32668 ;;		On exit  : 0/0
 32669 ;;		Unchanged: 0/0
 32670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32675 ;;Total ram usage:        0 bytes
 32676 ;; Hardware stack levels used:    1
 32677 ;; Hardware stack levels required when called:    7
 32678 ;; This function calls:
 32679 ;;		_check_day_time
 32680 ;; This function is called by:
 32681 ;;		_TMR5_Initialize
 32682 ;;		_TMR5_CallBack
 32683 ;; This function uses a reentrant model
 32684 ;;
 32685                           
 32686                           	psect	text145
 32687  01B904                     __ptext145:
 32688                           	opt callstack 0
 32689  01B904                     _TMR5_DefaultInterruptHandler:
 32690                           	opt callstack 7
 32691                           
 32692                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 32693                           
 32694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32695                           ;incstack = 0
 32696  01B904  A0BE               	btfss	190,0,c	;volatile
 32697  01B906  D002               	goto	u950_20
 32698  01B908  0E01               	movlw	1
 32699  01B90A  D001               	goto	u950_26
 32700  01B90C                     u950_20:
 32701  01B90C  0E00               	movlw	0
 32702  01B90E                     u950_26:
 32703  01B90E  0AFF               	xorlw	255
 32704  01B910  6E0C               	movwf	(btemp+11)^0,c
 32705  01B912  50BE               	movf	190,w,c	;volatile
 32706  01B914  180C               	xorwf	(btemp+11)^0,w,c
 32707  01B916  0BFE               	andlw	-2
 32708  01B918  180C               	xorwf	(btemp+11)^0,w,c
 32709  01B91A  6EBE               	movwf	190,c	;volatile
 32710                           
 32711                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 32712  01B91C  0E01               	movlw	1
 32713  01B91E  0101               	movlb	1	; () banked
 32714  01B920  27EB               	addwf	(_V+187)& (0+255),f,b	;volatile
 32715  01B922  0E00               	movlw	0
 32716  01B924  23EC               	addwfc	(_V+188)& (0+255),f,b	;volatile
 32717  01B926  23ED               	addwfc	(_V+189)& (0+255),f,b	;volatile
 32718  01B928  23EE               	addwfc	(_V+190)& (0+255),f,b	;volatile
 32719                           
 32720                           ; BSR set to: 1
 32721                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 32722  01B92A  0E01               	movlw	1
 32723  01B92C  27B1               	addwf	(_V+129)& (0+255),f,b	;volatile
 32724  01B92E  0E00               	movlw	0
 32725  01B930  23B2               	addwfc	(_V+130)& (0+255),f,b	;volatile
 32726  01B932  23B3               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32727  01B934  23B4               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32728                           
 32729                           ; BSR set to: 1
 32730                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 32731  01B936  EC09  F0C4         	call	_check_day_time	;wreg free
 32732                           
 32733                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32734  01B93A  0012               	return		;funcret
 32735  01B93C                     __end_of_TMR5_DefaultInterruptHandler:
 32736                           	opt callstack 0
 32737                           
 32738 ;; *************** function _check_day_time *****************
 32739 ;; Defined at:
 32740 ;;		line 165 in file "mbmc.c"
 32741 ;; Parameters:    Size  Location     Type
 32742 ;;		None
 32743 ;; Auto vars:     Size  Location     Type
 32744 ;;  light           4  [STACK] float 
 32745 ;; Return value:  Size  Location     Type
 32746 ;;                  1  [STACK] _Bool 
 32747 ;; Registers used:
 32748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32749 ;; Tracked objects:
 32750 ;;		On entry : 3F/1
 32751 ;;		On exit  : 0/0
 32752 ;;		Unchanged: 0/0
 32753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32758 ;;Total ram usage:        0 bytes
 32759 ;; Hardware stack levels used:    1
 32760 ;; Hardware stack levels required when called:    6
 32761 ;; This function calls:
 32762 ;;		___flge
 32763 ;;		_conv_raw_result
 32764 ;;		_get_ac_charger_relay
 32765 ;;		_set_ac_charger_relay
 32766 ;; This function is called by:
 32767 ;;		_TMR5_DefaultInterruptHandler
 32768 ;; This function uses a reentrant model
 32769 ;;
 32770                           
 32771                           	psect	text146
 32772  018812                     __ptext146:
 32773                           	opt callstack 0
 32774  018812                     _check_day_time:
 32775                           	opt callstack 0
 32776                           
 32777                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32778  018812  52E6               	movf	postinc1,f,c
 32779  018814  52E6               	movf	postinc1,f,c
 32780  018816  52E6               	movf	postinc1,f,c
 32781  018818  52E6               	movf	postinc1,f,c
 32782                           
 32783                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 32784                           
 32785                           ;incstack = 0
 32786  01881A  0E00               	movlw	0
 32787  01881C  6EE6               	movwf	postinc1,c
 32788  01881E  0E0D               	movlw	13
 32789  018820  6EE6               	movwf	postinc1,c
 32790  018822  EC5D  F0A9         	call	_conv_raw_result	;wreg free
 32791                           
 32792                           ;stkvar	_light @ sp[(-4)+0]
 32793  018826  0EFC               	movlw	-4
 32794  018828  0060  F007  FFE3   	movff	btemp,plusw1
 32795  01882E  0EFD               	movlw	-3
 32796  018830  0060  F00B  FFE3   	movff	btemp+1,plusw1
 32797  018836  0EFE               	movlw	-2
 32798  018838  0060  F00F  FFE3   	movff	btemp+2,plusw1
 32799  01883E  0EFF               	movlw	-1
 32800  018840  0060  F013  FFE3   	movff	btemp+3,plusw1
 32801                           
 32802                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 32803  018846  2A42               	incf	check_day_time@day_delay^0,f,c
 32804  018848  0442               	decf	check_day_time@day_delay^0,w,c
 32805  01884A  A4D8               	btfss	status,2,c
 32806  01884C  D0A9               	goto	l1898
 32807  01884E  0101               	movlb	1	; () banked
 32808  018850  51DE               	movf	(_V+174)& (0+255),w,b	;volatile
 32809  018852  B4D8               	btfsc	status,2,c
 32810  018854  D0A5               	goto	l1898
 32811                           
 32812                           ; BSR set to: 1
 32813                           ;mbmc.c: 173:   if (C.soc > 15) {
 32814  018856  EE21  F3B5         	lfsr	2,_C+182	;volatile
 32815  01885A  0E01               	movlw	1
 32816  01885C  50DB               	movf	plusw2,w,c
 32817  01885E  E104               	bnz	u929_20
 32818  018860  0E10               	movlw	16
 32819  018862  5CDE               	subwf	postinc2,w,c
 32820  018864  A0D8               	btfss	status,0,c
 32821  018866  D073               	goto	l9866
 32822  018868                     u929_20:
 32823                           
 32824                           ; BSR set to: 1
 32825                           ;mbmc.c: 174:    if (!C.day) {
 32826  018868  EE22  F021         	lfsr	2,_C+290	;volatile
 32827  01886C  50DF               	movf	indf2,w,c
 32828  01886E  A4D8               	btfss	status,2,c
 32829  018870  D035               	goto	l9854
 32830                           
 32831                           ; BSR set to: 1
 32832                           ;mbmc.c: 175:     if (light > 22.0) {
 32833                           ;stkvar	_light @ sp[(-4)+0]
 32834  018872  0EFC               	movlw	-4
 32835  018874  006F FF8F FFE6     	movff	plusw1,postinc1
 32836  01887A  006F FF8F FFE6     	movff	plusw1,postinc1
 32837  018880  006F FF8F FFE6     	movff	plusw1,postinc1
 32838  018886  006F FF8F FFE6     	movff	plusw1,postinc1
 32839  01888C  0E00               	movlw	0
 32840  01888E  6EE6               	movwf	postinc1,c
 32841  018890  0E00               	movlw	0
 32842  018892  6EE6               	movwf	postinc1,c
 32843  018894  0EB0               	movlw	176
 32844  018896  6EE6               	movwf	postinc1,c
 32845  018898  0E41               	movlw	65
 32846  01889A  6EE6               	movwf	postinc1,c
 32847  01889C  ECE0  F0C7         	call	___flge	;wreg free
 32848  0188A0  B001               	btfsc	btemp& (0+255),0,c
 32849  0188A2  D07E               	goto	l1898
 32850                           
 32851                           ;mbmc.c: 176:      C.day = 1;
 32852  0188A4  0E01               	movlw	1
 32853  0188A6  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 32854                           
 32855                           ;mbmc.c: 177:      C.day_start = V.ticks;
 32856  0188AC  EE20  F1B1         	lfsr	2,_V+129	;volatile
 32857  0188B0  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 32858  0188B6  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 32859  0188BC  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 32860  0188C2  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 32861                           
 32862                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 32863  0188C8  EC9C  F0E0         	call	_get_ac_charger_relay	;wreg free
 32864  0188CC  5001               	movf	btemp^0,w,c
 32865  0188CE  B4D8               	btfsc	status,2,c
 32866  0188D0  D06B               	goto	l1894
 32867                           
 32868                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 32869  0188D2  0E00               	movlw	0
 32870  0188D4  6EE6               	movwf	postinc1,c
 32871  0188D6  EC7F  F0E0         	call	_set_ac_charger_relay	;wreg free
 32872  0188DA  D066               	goto	l1894
 32873  0188DC                     l9854:
 32874                           
 32875                           ; BSR set to: 1
 32876                           ;mbmc.c: 184:     if (light < 12.0) {
 32877  0188DC  0E00               	movlw	0
 32878  0188DE  6EE6               	movwf	postinc1,c
 32879  0188E0  0E00               	movlw	0
 32880  0188E2  6EE6               	movwf	postinc1,c
 32881  0188E4  0E40               	movlw	64
 32882  0188E6  6EE6               	movwf	postinc1,c
 32883  0188E8  0E41               	movlw	65
 32884  0188EA  6EE6               	movwf	postinc1,c
 32885                           
 32886                           ;stkvar	_light @ sp[(-8)+0]
 32887  0188EC  0EF8               	movlw	-8
 32888  0188EE  006F FF8F FFE6     	movff	plusw1,postinc1
 32889  0188F4  006F FF8F FFE6     	movff	plusw1,postinc1
 32890  0188FA  006F FF8F FFE6     	movff	plusw1,postinc1
 32891  018900  006F FF8F FFE6     	movff	plusw1,postinc1
 32892  018906  ECE0  F0C7         	call	___flge	;wreg free
 32893  01890A  B001               	btfsc	btemp& (0+255),0,c
 32894  01890C  D049               	goto	l1898
 32895                           
 32896                           ;mbmc.c: 185:      C.day = 0;
 32897  01890E  0E00               	movlw	0
 32898  018910  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 32899                           
 32900                           ;mbmc.c: 186:      C.day_end = V.ticks;
 32901  018916  EE20  F1B1         	lfsr	2,_V+129	;volatile
 32902  01891A  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 32903  018920  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 32904  018926  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 32905  01892C  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 32906                           
 32907                           ;mbmc.c: 190:      if ((C.soc < 40)) {
 32908  018932  EE21  F3B5         	lfsr	2,_C+182	;volatile
 32909  018936  0E01               	movlw	1
 32910  018938  50DB               	movf	plusw2,w,c
 32911  01893A  E136               	bnz	l1894
 32912  01893C  0E28               	movlw	40
 32913  01893E  5CDE               	subwf	postinc2,w,c
 32914  018940  B0D8               	btfsc	status,0,c
 32915  018942  D032               	goto	l1894
 32916                           
 32917                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 32918  018944  0E01               	movlw	1
 32919  018946  6EE6               	movwf	postinc1,c
 32920  018948  EC7F  F0E0         	call	_set_ac_charger_relay	;wreg free
 32921  01894C  D02D               	goto	l1894
 32922  01894E                     l9866:
 32923                           
 32924                           ; BSR set to: 1
 32925                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 32926  01894E  EE21  F377         	lfsr	2,_C+120	;volatile
 32927  018952  006F FF7B FFE6     	movff	postinc2,postinc1
 32928  018958  006F FF7B FFE6     	movff	postinc2,postinc1
 32929  01895E  006F FF7B FFE6     	movff	postinc2,postinc1
 32930  018964  006F FF7B FFE6     	movff	postinc2,postinc1
 32931  01896A  EE21  F37B         	lfsr	2,_C+124	;volatile
 32932  01896E  006F FF7B FFE6     	movff	postinc2,postinc1
 32933  018974  006F FF7B FFE6     	movff	postinc2,postinc1
 32934  01897A  006F FF7B FFE6     	movff	postinc2,postinc1
 32935  018980  006F FF7B FFE6     	movff	postinc2,postinc1
 32936  018986  ECE0  F0C7         	call	___flge	;wreg free
 32937  01898A  B001               	btfsc	btemp& (0+255),0,c
 32938  01898C  D009               	goto	l1898
 32939                           
 32940                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 32941  01898E  EC9C  F0E0         	call	_get_ac_charger_relay	;wreg free
 32942  018992  5001               	movf	btemp^0,w,c
 32943  018994  A4D8               	btfss	status,2,c
 32944  018996  D004               	goto	l1898
 32945                           
 32946                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 32947  018998  0E01               	movlw	1
 32948  01899A  6EE6               	movwf	postinc1,c
 32949  01899C  EC7F  F0E0         	call	_set_ac_charger_relay	;wreg free
 32950  0189A0                     l1898:
 32951                           
 32952                           ;mbmc.c: 204:  if (day_delay >= 240)
 32953  0189A0  0EEF               	movlw	239
 32954  0189A2  6442               	cpfsgt	check_day_time@day_delay^0,c
 32955  0189A4  D001               	goto	l1894
 32956                           
 32957                           ;mbmc.c: 205:   day_delay = 0;
 32958  0189A6  6A42               	clrf	check_day_time@day_delay^0,c
 32959  0189A8                     l1894:
 32960                           
 32961                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32962  0189A8  52E5               	movf	postdec1,f,c
 32963  0189AA  52E5               	movf	postdec1,f,c
 32964  0189AC  52E5               	movf	postdec1,f,c
 32965  0189AE  52E5               	movf	postdec1,f,c
 32966  0189B0  0012               	return		;funcret
 32967  0189B2                     __end_of_check_day_time:
 32968                           	opt callstack 0
 32969                           
 32970 ;; *************** function _set_ac_charger_relay *****************
 32971 ;; Defined at:
 32972 ;;		line 135 in file "mbmc.c"
 32973 ;; Parameters:    Size  Location     Type
 32974 ;;  mode            1  [STACK] _Bool 
 32975 ;; Auto vars:     Size  Location     Type
 32976 ;;		None
 32977 ;; Return value:  Size  Location     Type
 32978 ;;                  1  [STACK] void 
 32979 ;; Registers used:
 32980 ;;		wreg, fsr1l, fsr1h
 32981 ;; Tracked objects:
 32982 ;;		On entry : 0/1
 32983 ;;		On exit  : 0/0
 32984 ;;		Unchanged: 0/0
 32985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32990 ;;Total ram usage:        0 bytes
 32991 ;; Hardware stack levels used:    1
 32992 ;; Hardware stack levels required when called:    3
 32993 ;; This function calls:
 32994 ;;		Nothing
 32995 ;; This function is called by:
 32996 ;;		_check_day_time
 32997 ;; This function uses a reentrant model
 32998 ;;
 32999                           
 33000                           	psect	text147
 33001  01C0FE                     __ptext147:
 33002                           	opt callstack 0
 33003  01C0FE                     _set_ac_charger_relay:
 33004                           	opt callstack 9
 33005                           
 33006                           ;mbmc.c: 135: void set_ac_charger_relay(_Bool mode);mbmc.c: 136: {;mbmc.c: 137:  LATDbit
      +                          s.LATD6 = mode;
 33007                           ;stkvar	_mode @ sp[(0)+-1]
 33008                           
 33009                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33010                           ;incstack = 0
 33011  01C0FE  0EFF               	movlw	-1
 33012  01C100  B0E3               	btfsc	plusw1,0,c
 33013  01C102  D002               	bra	u924_25
 33014  01C104  9CBD               	bcf	189,6,c	;volatile
 33015  01C106  D001               	bra	u924_26
 33016  01C108                     u924_25:
 33017  01C108  8CBD               	bsf	189,6,c	;volatile
 33018  01C10A                     u924_26:
 33019                           
 33020                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 33021  01C10A  52E5               	movf	postdec1,f,c
 33022  01C10C  0012               	return		;funcret
 33023  01C10E                     __end_of_set_ac_charger_relay:
 33024                           	opt callstack 0
 33025                           
 33026 ;; *************** function _get_ac_charger_relay *****************
 33027 ;; Defined at:
 33028 ;;		line 140 in file "mbmc.c"
 33029 ;; Parameters:    Size  Location     Type
 33030 ;;		None
 33031 ;; Auto vars:     Size  Location     Type
 33032 ;;		None
 33033 ;; Return value:  Size  Location     Type
 33034 ;;                  1  [STACK] _Bool 
 33035 ;; Registers used:
 33036 ;;		btemp
 33037 ;; Tracked objects:
 33038 ;;		On entry : 0/1
 33039 ;;		On exit  : 0/0
 33040 ;;		Unchanged: 0/0
 33041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33046 ;;Total ram usage:        0 bytes
 33047 ;; Hardware stack levels used:    1
 33048 ;; Hardware stack levels required when called:    3
 33049 ;; This function calls:
 33050 ;;		Nothing
 33051 ;; This function is called by:
 33052 ;;		_check_day_time
 33053 ;;		_calc_bsoc
 33054 ;; This function uses a reentrant model
 33055 ;;
 33056                           
 33057                           	psect	text148
 33058  01C138                     __ptext148:
 33059                           	opt callstack 0
 33060  01C138                     _get_ac_charger_relay:
 33061                           	opt callstack 10
 33062                           
 33063                           ;mbmc.c: 142:  return LATDbits.LATD6;
 33064                           
 33065                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33066                           ;incstack = 0
 33067  01C138  ACBD               	btfss	189,6,c	;volatile
 33068  01C13A  D003               	goto	u943_20
 33069  01C13C  6A01               	clrf	btemp^0,c
 33070  01C13E  2A01               	incf	btemp^0,f,c
 33071  01C140  0012               	return	
 33072  01C142                     u943_20:
 33073  01C142  6A01               	clrf	btemp^0,c
 33074                           
 33075                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 33076  01C144  0012               	return		;funcret
 33077  01C146                     __end_of_get_ac_charger_relay:
 33078                           	opt callstack 0
 33079                           
 33080 ;; *************** function _TMR3_ISR *****************
 33081 ;; Defined at:
 33082 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 33083 ;; Parameters:    Size  Location     Type
 33084 ;;		None
 33085 ;; Auto vars:     Size  Location     Type
 33086 ;;		None
 33087 ;; Return value:  Size  Location     Type
 33088 ;;                  1    wreg      void 
 33089 ;; Registers used:
 33090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33091 ;; Tracked objects:
 33092 ;;		On entry : 0/0
 33093 ;;		On exit  : 3F/0
 33094 ;;		Unchanged: 0/0
 33095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33098 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33099 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33100 ;;Total ram usage:       25 bytes
 33101 ;; Hardware stack levels used:    1
 33102 ;; Hardware stack levels required when called:   14
 33103 ;; This function calls:
 33104 ;;		_TMR3_CallBack
 33105 ;;		_TMR3_WriteTimer
 33106 ;; This function is called by:
 33107 ;;		Interrupt level 1
 33108 ;; This function uses a non-reentrant model
 33109 ;;
 33110                           
 33111                           	psect	text149
 33112  019124                     __ptext149:
 33113                           	opt callstack 0
 33114  019124                     _TMR3_ISR:
 33115                           	opt callstack 2
 33116                           
 33117                           ;incstack = 0
 33118  019124  006F FF60  F0D7    	movff	status,??_TMR3_ISR
 33119  01912A  006F FFD8  F0D8    	movff	tblptrl,??_TMR3_ISR+1
 33120  019130  006F FFDC  F0D9    	movff	tblptrh,??_TMR3_ISR+2
 33121  019136  006F FFE0  F0DA    	movff	tblptru,??_TMR3_ISR+3
 33122  01913C  006F FFD4  F0DB    	movff	tablat,??_TMR3_ISR+4
 33123  019142  0060  F004  F0DC   	movff	btemp,??_TMR3_ISR+5
 33124  019148  0060  F008  F0DD   	movff	btemp+1,??_TMR3_ISR+6
 33125  01914E  0060  F00C  F0DE   	movff	btemp+2,??_TMR3_ISR+7
 33126  019154  0060  F010  F0DF   	movff	btemp+3,??_TMR3_ISR+8
 33127  01915A  0060  F014  F0E0   	movff	btemp+4,??_TMR3_ISR+9
 33128  019160  0060  F018  F0E1   	movff	btemp+5,??_TMR3_ISR+10
 33129  019166  0060  F01C  F0E2   	movff	btemp+6,??_TMR3_ISR+11
 33130  01916C  0060  F020  F0E3   	movff	btemp+7,??_TMR3_ISR+12
 33131  019172  0060  F024  F0E4   	movff	btemp+8,??_TMR3_ISR+13
 33132  019178  0060  F028  F0E5   	movff	btemp+9,??_TMR3_ISR+14
 33133  01917E  0060  F02C  F0E6   	movff	btemp+10,??_TMR3_ISR+15
 33134  019184  0060  F030  F0E7   	movff	btemp+11,??_TMR3_ISR+16
 33135  01918A  0060  F044  F0E8   	movff	btemp+16,??_TMR3_ISR+17
 33136  019190  0060  F048  F0E9   	movff	btemp+17,??_TMR3_ISR+18
 33137  019196  0060  F04C  F0EA   	movff	btemp+18,??_TMR3_ISR+19
 33138  01919C  0060  F050  F0EB   	movff	btemp+19,??_TMR3_ISR+20
 33139  0191A2  0060  F054  F0EC   	movff	btemp+20,??_TMR3_ISR+21
 33140  0191A8  0060  F058  F0ED   	movff	btemp+21,??_TMR3_ISR+22
 33141  0191AE  0060  F05C  F0EE   	movff	btemp+22,??_TMR3_ISR+23
 33142  0191B4  0060  F060  F0EF   	movff	btemp+23,??_TMR3_ISR+24
 33143  0191BA  EE16  F0AF         	lfsr	1,___intlo_sp
 33144                           
 33145                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 33146  0191BE  0139               	movlb	57	; () banked
 33147  0191C0  9DA6               	bcf	166,6,b	;volatile
 33148                           
 33149                           ; BSR set to: 57
 33150                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 33151  0191C2  0060  F313  FFE6   	movff	_timer3ReloadVal,postinc1
 33152  0191C8  0060  F317  FFE6   	movff	_timer3ReloadVal+1,postinc1
 33153  0191CE  EC09  F0DC         	call	_TMR3_WriteTimer	;wreg free
 33154                           
 33155                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 33156  0191D2  0100               	movlb	0	; () banked
 33157  0191D4  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 33158  0191D6  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 33159  0191D8  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 33160  0191DA  E104               	bnz	i1u1259_20
 33161  0191DC  0E28               	movlw	40
 33162  0191DE  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 33163  0191E0  A0D8               	btfss	status,0,c
 33164  0191E2  D005               	goto	i1l1207
 33165  0191E4                     i1u1259_20:
 33166                           
 33167                           ; BSR set to: 0
 33168                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 33169  0191E4  EC30  F0DF         	call	_TMR3_CallBack	;wreg free
 33170                           
 33171                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 33172  0191E8  0100               	movlb	0	; () banked
 33173  0191EA  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 33174  0191EC  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 33175  0191EE                     i1l1207:
 33176                           
 33177                           ; BSR set to: 0
 33178  0191EE  0060  F3BC  F018   	movff	??_TMR3_ISR+24,btemp+23
 33179  0191F4  0060  F3B8  F017   	movff	??_TMR3_ISR+23,btemp+22
 33180  0191FA  0060  F3B4  F016   	movff	??_TMR3_ISR+22,btemp+21
 33181  019200  0060  F3B0  F015   	movff	??_TMR3_ISR+21,btemp+20
 33182  019206  0060  F3AC  F014   	movff	??_TMR3_ISR+20,btemp+19
 33183  01920C  0060  F3A8  F013   	movff	??_TMR3_ISR+19,btemp+18
 33184  019212  0060  F3A4  F012   	movff	??_TMR3_ISR+18,btemp+17
 33185  019218  0060  F3A0  F011   	movff	??_TMR3_ISR+17,btemp+16
 33186  01921E  0060  F39C  F00C   	movff	??_TMR3_ISR+16,btemp+11
 33187  019224  0060  F398  F00B   	movff	??_TMR3_ISR+15,btemp+10
 33188  01922A  0060  F394  F00A   	movff	??_TMR3_ISR+14,btemp+9
 33189  019230  0060  F390  F009   	movff	??_TMR3_ISR+13,btemp+8
 33190  019236  0060  F38C  F008   	movff	??_TMR3_ISR+12,btemp+7
 33191  01923C  0060  F388  F007   	movff	??_TMR3_ISR+11,btemp+6
 33192  019242  0060  F384  F006   	movff	??_TMR3_ISR+10,btemp+5
 33193  019248  0060  F380  F005   	movff	??_TMR3_ISR+9,btemp+4
 33194  01924E  0060  F37C  F004   	movff	??_TMR3_ISR+8,btemp+3
 33195  019254  0060  F378  F003   	movff	??_TMR3_ISR+7,btemp+2
 33196  01925A  0060  F374  F002   	movff	??_TMR3_ISR+6,btemp+1
 33197  019260  0060  F370  F001   	movff	??_TMR3_ISR+5,btemp
 33198  019266  0060  F36F  FFF5   	movff	??_TMR3_ISR+4,tablat
 33199  01926C  0060  F36B  FFF8   	movff	??_TMR3_ISR+3,tblptru
 33200  019272  0060  F367  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 33201  019278  0060  F363  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 33202  01927E  0060  F35F  FFD8   	movff	??_TMR3_ISR,status
 33203  019284  0011               	retfie		f
 33204  019286                     __end_of_TMR3_ISR:
 33205                           	opt callstack 0
 33206                           
 33207 ;; *************** function _TMR3_WriteTimer *****************
 33208 ;; Defined at:
 33209 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 33210 ;; Parameters:    Size  Location     Type
 33211 ;;  timerVal        2  [STACK] unsigned short 
 33212 ;; Auto vars:     Size  Location     Type
 33213 ;;		None
 33214 ;; Return value:  Size  Location     Type
 33215 ;;                  1  [STACK] void 
 33216 ;; Registers used:
 33217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 33218 ;; Tracked objects:
 33219 ;;		On entry : 3F/39
 33220 ;;		On exit  : 0/0
 33221 ;;		Unchanged: 0/0
 33222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33227 ;;Total ram usage:        0 bytes
 33228 ;; Hardware stack levels used:    1
 33229 ;; Hardware stack levels required when called:    3
 33230 ;; This function calls:
 33231 ;;		Nothing
 33232 ;; This function is called by:
 33233 ;;		_TMR3_ISR
 33234 ;; This function uses a reentrant model
 33235 ;;
 33236                           
 33237                           	psect	text150
 33238  01B812                     __ptext150:
 33239                           	opt callstack 0
 33240  01B812                     _TMR3_WriteTimer:
 33241                           	opt callstack 12
 33242                           
 33243                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 33244                           
 33245                           ; BSR set to: 0
 33246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33247                           ;incstack = 0
 33248  01B812  A4A6               	btfss	166,2,c	;volatile
 33249  01B814  D00F               	goto	l10798
 33250                           
 33251                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 33252  01B816  90A6               	bcf	166,0,c	;volatile
 33253                           
 33254                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 33255                           ;stkvar	_timerVal @ sp[(0)+-2]
 33256  01B818  0EFF               	movlw	255
 33257  01B81A  24E1               	addwf	fsr1l,w,c
 33258  01B81C  6ED9               	movwf	fsr2l,c
 33259  01B81E  0EFF               	movlw	255
 33260  01B820  20E2               	addwfc	fsr1h,w,c
 33261  01B822  6EDA               	movwf	fsr2h,c
 33262  01B824  50DF               	movf	indf2,w,c
 33263  01B826  6EA5               	movwf	165,c	;volatile
 33264                           
 33265                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 33266                           ;stkvar	_timerVal @ sp[(0)+-2]
 33267  01B828  0EFE               	movlw	-2
 33268  01B82A  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 33269                           
 33270                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 33271  01B830  80A6               	bsf	166,0,c	;volatile
 33272                           
 33273                           ;mcc_generated_files/tmr3.c: 141:     }
 33274  01B832  D00C               	goto	l1190
 33275  01B834                     l10798:
 33276                           
 33277                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 33278                           ;stkvar	_timerVal @ sp[(0)+-2]
 33279  01B834  0EFF               	movlw	255
 33280  01B836  24E1               	addwf	fsr1l,w,c
 33281  01B838  6ED9               	movwf	fsr2l,c
 33282  01B83A  0EFF               	movlw	255
 33283  01B83C  20E2               	addwfc	fsr1h,w,c
 33284  01B83E  6EDA               	movwf	fsr2h,c
 33285  01B840  50DF               	movf	indf2,w,c
 33286  01B842  6EA5               	movwf	165,c	;volatile
 33287                           
 33288                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 33289                           ;stkvar	_timerVal @ sp[(0)+-2]
 33290  01B844  0EFE               	movlw	-2
 33291  01B846  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 33292  01B84C                     l1190:
 33293                           
 33294                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 33295  01B84C  52E5               	movf	postdec1,f,c
 33296  01B84E  52E5               	movf	postdec1,f,c
 33297  01B850  0012               	return		;funcret
 33298  01B852                     __end_of_TMR3_WriteTimer:
 33299                           	opt callstack 0
 33300                           
 33301 ;; *************** function _TMR3_CallBack *****************
 33302 ;; Defined at:
 33303 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 33304 ;; Parameters:    Size  Location     Type
 33305 ;;		None
 33306 ;; Auto vars:     Size  Location     Type
 33307 ;;		None
 33308 ;; Return value:  Size  Location     Type
 33309 ;;                  1  [STACK] void 
 33310 ;; Registers used:
 33311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 33312 ;; Tracked objects:
 33313 ;;		On entry : 3F/0
 33314 ;;		On exit  : 0/0
 33315 ;;		Unchanged: 0/0
 33316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33321 ;;Total ram usage:        0 bytes
 33322 ;; Hardware stack levels used:    1
 33323 ;; Hardware stack levels required when called:   13
 33324 ;; This function calls:
 33325 ;;		Absolute function
 33326 ;;		_TMR3_DefaultInterruptHandler
 33327 ;;		_calc_bsoc
 33328 ;; This function is called by:
 33329 ;;		_TMR3_ISR
 33330 ;; This function uses a reentrant model
 33331 ;;
 33332                           
 33333                           	psect	text151
 33334  01BE60                     __ptext151:
 33335                           	opt callstack 0
 33336  01BE60                     _TMR3_CallBack:
 33337                           	opt callstack 2
 33338                           
 33339                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 33340                           
 33341                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33342                           ;incstack = 0
 33343  01BE60  0100               	movlb	0	; () banked
 33344  01BE62  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 33345  01BE64  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 33346  01BE66  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 33347  01BE68  B4D8               	btfsc	status,2,c
 33348  01BE6A  0012               	return	
 33349                           
 33350                           ; BSR set to: 0
 33351                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 33352  01BE6C  D801               	call	u1249_28
 33353  01BE6E  0012               	return	
 33354  01BE70                     u1249_28:
 33355  01BE70  0005               	push	
 33356  01BE72  6EFA               	movwf	pclath,c
 33357  01BE74  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 33358  01BE76  6EFD               	movwf	tosl,c
 33359  01BE78  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 33360  01BE7A  6EFE               	movwf	tosh,c
 33361  01BE7C  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 33362  01BE7E  6EFF               	movwf	tosu,c
 33363  01BE80  50FA               	movf	pclath,w,c
 33364  01BE82  0012               	return		;indir
 33365  01BE84                     __end_of_TMR3_CallBack:
 33366                           	opt callstack 0
 33367                           
 33368 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 33369 ;; Defined at:
 33370 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 33371 ;; Parameters:    Size  Location     Type
 33372 ;;		None
 33373 ;; Auto vars:     Size  Location     Type
 33374 ;;		None
 33375 ;; Return value:  Size  Location     Type
 33376 ;;                  1  [STACK] void 
 33377 ;; Registers used:
 33378 ;;		None
 33379 ;; Tracked objects:
 33380 ;;		On entry : 3F/0
 33381 ;;		On exit  : 0/0
 33382 ;;		Unchanged: 0/0
 33383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33388 ;;Total ram usage:        0 bytes
 33389 ;; Hardware stack levels used:    1
 33390 ;; Hardware stack levels required when called:    3
 33391 ;; This function calls:
 33392 ;;		Nothing
 33393 ;; This function is called by:
 33394 ;;		_TMR3_Initialize
 33395 ;;		_TMR3_CallBack
 33396 ;; This function uses a reentrant model
 33397 ;;
 33398                           
 33399                           	psect	text152
 33400  01C1E8                     __ptext152:
 33401                           	opt callstack 0
 33402  01C1E8                     _TMR3_DefaultInterruptHandler:
 33403                           	opt callstack 11
 33404                           
 33405                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33406                           
 33407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33408                           ;incstack = 0
 33409  01C1E8  0012               	return		;funcret
 33410  01C1EA                     __end_of_TMR3_DefaultInterruptHandler:
 33411                           	opt callstack 0
 33412                           
 33413 ;; *************** function _calc_bsoc *****************
 33414 ;; Defined at:
 33415 ;;		line 39 in file "bsoc.c"
 33416 ;; Parameters:    Size  Location     Type
 33417 ;;		None
 33418 ;; Auto vars:     Size  Location     Type
 33419 ;;  adj             4  [STACK] float 
 33420 ;;  log_ptr         2  [STACK] PTR unsigned char 
 33421 ;;		 -> port_data(512), 
 33422 ;; Return value:  Size  Location     Type
 33423 ;;                  1  [STACK] void 
 33424 ;; Registers used:
 33425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 33426 ;; Tracked objects:
 33427 ;;		On entry : 3F/0
 33428 ;;		On exit  : 5/1
 33429 ;;		Unchanged: 0/0
 33430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33435 ;;Total ram usage:        0 bytes
 33436 ;; Hardware stack levels used:    1
 33437 ;; Hardware stack levels required when called:   12
 33438 ;; This function calls:
 33439 ;;		_StartTimer
 33440 ;;		___asfladd
 33441 ;;		___fldiv
 33442 ;;		___flge
 33443 ;;		___flmul
 33444 ;;		___flneg
 33445 ;;		___fltol
 33446 ;;		_fabsf
 33447 ;;		_get_ac_charger_relay
 33448 ;;		_port_data_dma_ptr
 33449 ;;		_send_port_data_dma
 33450 ;;		_sprintf
 33451 ;;		_strlen
 33452 ;; This function is called by:
 33453 ;;		_init_bsoc
 33454 ;;		_TMR3_CallBack
 33455 ;; This function uses a reentrant model
 33456 ;;
 33457                           
 33458                           	psect	text153
 33459  013340                     __ptext153:
 33460                           	opt callstack 0
 33461  013340                     _calc_bsoc:
 33462                           	opt callstack 0
 33463                           
 33464                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33465  013340  0E06               	movlw	6
 33466  013342  26E1               	addwf	fsr1l,f,c
 33467  013344  0E00               	movlw	0
 33468  013346  22E2               	addwfc	fsr1h,f,c
 33469                           
 33470                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 33471                           
 33472                           ;incstack = 0
 33473  013348  0E00               	movlw	0
 33474  01334A  6E09               	movwf	(btemp+8)^0,c
 33475  01334C  0E00               	movlw	0
 33476  01334E  6E0A               	movwf	(btemp+9)^0,c
 33477  013350  0E80               	movlw	128
 33478  013352  6E0B               	movwf	(btemp+10)^0,c
 33479  013354  0E3F               	movlw	63
 33480  013356  6E0C               	movwf	(btemp+11)^0,c
 33481                           
 33482                           ;stkvar	_adj @ sp[(-6)+0]
 33483  013358  0EFA               	movlw	-6
 33484  01335A  0060  F027  FFE3   	movff	btemp+8,plusw1
 33485  013360  0EFB               	movlw	-5
 33486  013362  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33487  013368  0EFC               	movlw	-4
 33488  01336A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33489  013370  0EFD               	movlw	-3
 33490  013372  0060  F033  FFE3   	movff	btemp+11,plusw1
 33491  013378  82BE               	bsf	190,1,c	;volatile
 33492                           
 33493                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 33494  01337A  0E00               	movlw	0
 33495  01337C  6EE6               	movwf	postinc1,c
 33496  01337E  0E00               	movlw	0
 33497  013380  6EE6               	movwf	postinc1,c
 33498  013382  0E61               	movlw	97
 33499  013384  6EE6               	movwf	postinc1,c
 33500  013386  0E45               	movlw	69
 33501  013388  6EE6               	movwf	postinc1,c
 33502  01338A  EE21  F343         	lfsr	2,_C+68	;volatile
 33503  01338E  006F FF7B FFE6     	movff	postinc2,postinc1
 33504  013394  006F FF7B FFE6     	movff	postinc2,postinc1
 33505  01339A  006F FF7B FFE6     	movff	postinc2,postinc1
 33506  0133A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33507  0133A6  ECA0  F0A6         	call	___fldiv	;wreg free
 33508  0133AA  0060  F007  FFE6   	movff	btemp,postinc1
 33509  0133B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33510  0133B6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33511  0133BC  0060  F013  FFE6   	movff	btemp+3,postinc1
 33512  0133C2  0E8F               	movlw	low (_C+144)
 33513  0133C4  6EE6               	movwf	postinc1,c
 33514  0133C6  0E07               	movlw	high (_C+144)
 33515  0133C8  6EE6               	movwf	postinc1,c
 33516  0133CA  EC34  F0D7         	call	___asfladd	;wreg free
 33517                           
 33518                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 33519  0133CE  EE21  F38F         	lfsr	2,_C+144	;volatile
 33520  0133D2  006F FF7B FFE6     	movff	postinc2,postinc1
 33521  0133D8  006F FF7B FFE6     	movff	postinc2,postinc1
 33522  0133DE  006F FF7B FFE6     	movff	postinc2,postinc1
 33523  0133E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33524  0133EA  EE21  F38B         	lfsr	2,_C+140	;volatile
 33525  0133EE  006F FF7B FFE6     	movff	postinc2,postinc1
 33526  0133F4  006F FF7B FFE6     	movff	postinc2,postinc1
 33527  0133FA  006F FF7B FFE6     	movff	postinc2,postinc1
 33528  013400  006F FF7B FFE6     	movff	postinc2,postinc1
 33529  013406  ECE0  F0C7         	call	___flge	;wreg free
 33530  01340A  B001               	btfsc	btemp& (0+255),0,c
 33531  01340C  D00E               	goto	l12844
 33532                           
 33533                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 33534  01340E  EE21  F38B         	lfsr	2,_C+140	;volatile
 33535  013412  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 33536  013418  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 33537  01341E  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 33538  013424  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 33539  01342A                     l12844:
 33540                           
 33541                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 33542  01342A  0ECD               	movlw	205
 33543  01342C  6EE6               	movwf	postinc1,c
 33544  01342E  0ECC               	movlw	204
 33545  013430  6EE6               	movwf	postinc1,c
 33546  013432  0ECC               	movlw	204
 33547  013434  6EE6               	movwf	postinc1,c
 33548  013436  0E3D               	movlw	61
 33549  013438  6EE6               	movwf	postinc1,c
 33550  01343A  EE21  F38F         	lfsr	2,_C+144	;volatile
 33551  01343E  006F FF7B FFE6     	movff	postinc2,postinc1
 33552  013444  006F FF7B FFE6     	movff	postinc2,postinc1
 33553  01344A  006F FF7B FFE6     	movff	postinc2,postinc1
 33554  013450  006F FF7B FFE6     	movff	postinc2,postinc1
 33555  013456  ECE0  F0C7         	call	___flge	;wreg free
 33556  01345A  B001               	btfsc	btemp& (0+255),0,c
 33557  01345C  D010               	goto	l12848
 33558                           
 33559                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 33560  01345E  0ECD               	movlw	205
 33561  013460  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 33562  013466  0ECC               	movlw	204
 33563  013468  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 33564  01346E  0ECC               	movlw	204
 33565  013470  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 33566  013476  0E3D               	movlw	61
 33567  013478  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 33568  01347E                     l12848:
 33569                           
 33570                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 33571  01347E  EE21  F343         	lfsr	2,_C+68	;volatile
 33572  013482  006F FF7B FFE6     	movff	postinc2,postinc1
 33573  013488  006F FF7B FFE6     	movff	postinc2,postinc1
 33574  01348E  006F FF7B FFE6     	movff	postinc2,postinc1
 33575  013494  006F FF7B FFE6     	movff	postinc2,postinc1
 33576  01349A  0E0A               	movlw	10
 33577  01349C  6EE6               	movwf	postinc1,c
 33578  01349E  0ED7               	movlw	215
 33579  0134A0  6EE6               	movwf	postinc1,c
 33580  0134A2  0E23               	movlw	35
 33581  0134A4  6EE6               	movwf	postinc1,c
 33582  0134A6  0E3C               	movlw	60
 33583  0134A8  6EE6               	movwf	postinc1,c
 33584  0134AA  ECE0  F0C7         	call	___flge	;wreg free
 33585  0134AE  B001               	btfsc	btemp& (0+255),0,c
 33586  0134B0  D01C               	goto	l12852
 33587                           
 33588                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 33589  0134B2  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 33590  0134B8  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 33591  0134BE  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 33592  0134C4  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 33593                           
 33594                           ;stkvar	_adj @ sp[(-6)+0]
 33595  0134CA  0EFA               	movlw	-6
 33596  0134CC  0060  F027  FFE3   	movff	btemp+8,plusw1
 33597  0134D2  0EFB               	movlw	-5
 33598  0134D4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33599  0134DA  0EFC               	movlw	-4
 33600  0134DC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33601  0134E2  0EFD               	movlw	-3
 33602  0134E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 33603  0134EA                     l12852:
 33604                           
 33605                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 33606  0134EA  0E0A               	movlw	10
 33607  0134EC  6EE6               	movwf	postinc1,c
 33608  0134EE  0ED7               	movlw	215
 33609  0134F0  6EE6               	movwf	postinc1,c
 33610  0134F2  0E23               	movlw	35
 33611  0134F4  6EE6               	movwf	postinc1,c
 33612  0134F6  0E3C               	movlw	60
 33613  0134F8  6EE6               	movwf	postinc1,c
 33614  0134FA  EE21  F343         	lfsr	2,_C+68	;volatile
 33615  0134FE  006F FF7B FFE6     	movff	postinc2,postinc1
 33616  013504  006F FF7B FFE6     	movff	postinc2,postinc1
 33617  01350A  006F FF7B FFE6     	movff	postinc2,postinc1
 33618  013510  006F FF7B FFE6     	movff	postinc2,postinc1
 33619  013516  ECE0  F0C7         	call	___flge	;wreg free
 33620  01351A  B001               	btfsc	btemp& (0+255),0,c
 33621  01351C  D01C               	goto	l12856
 33622                           
 33623                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 33624  01351E  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 33625  013524  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 33626  01352A  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 33627  013530  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 33628                           
 33629                           ;stkvar	_adj @ sp[(-6)+0]
 33630  013536  0EFA               	movlw	-6
 33631  013538  0060  F027  FFE3   	movff	btemp+8,plusw1
 33632  01353E  0EFB               	movlw	-5
 33633  013540  0060  F02B  FFE3   	movff	btemp+9,plusw1
 33634  013546  0EFC               	movlw	-4
 33635  013548  0060  F02F  FFE3   	movff	btemp+10,plusw1
 33636  01354E  0EFD               	movlw	-3
 33637  013550  0060  F033  FFE3   	movff	btemp+11,plusw1
 33638  013556                     l12856:
 33639                           
 33640                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 33641  013556  0E00               	movlw	0
 33642  013558  6EE6               	movwf	postinc1,c
 33643  01355A  0E00               	movlw	0
 33644  01355C  6EE6               	movwf	postinc1,c
 33645  01355E  0E61               	movlw	97
 33646  013560  6EE6               	movwf	postinc1,c
 33647  013562  0E45               	movlw	69
 33648  013564  6EE6               	movwf	postinc1,c
 33649                           
 33650                           ;stkvar	_adj @ sp[(-10)+0]
 33651  013566  0EF6               	movlw	-10
 33652  013568  006F FF8F FFE6     	movff	plusw1,postinc1
 33653  01356E  006F FF8F FFE6     	movff	plusw1,postinc1
 33654  013574  006F FF8F FFE6     	movff	plusw1,postinc1
 33655  01357A  006F FF8F FFE6     	movff	plusw1,postinc1
 33656  013580  EE21  F343         	lfsr	2,_C+68	;volatile
 33657  013584  006F FF7B FFE6     	movff	postinc2,postinc1
 33658  01358A  006F FF7B FFE6     	movff	postinc2,postinc1
 33659  013590  006F FF7B FFE6     	movff	postinc2,postinc1
 33660  013596  006F FF7B FFE6     	movff	postinc2,postinc1
 33661  01359C  ECAD  F09E         	call	___flmul	;wreg free
 33662  0135A0  0060  F007  FFE6   	movff	btemp,postinc1
 33663  0135A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33664  0135AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33665  0135B2  0060  F013  FFE6   	movff	btemp+3,postinc1
 33666  0135B8  ECA0  F0A6         	call	___fldiv	;wreg free
 33667  0135BC  0060  F007  FFE6   	movff	btemp,postinc1
 33668  0135C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33669  0135C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33670  0135CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 33671  0135D4  0E8F               	movlw	low (_C+144)
 33672  0135D6  6EE6               	movwf	postinc1,c
 33673  0135D8  0E07               	movlw	high (_C+144)
 33674  0135DA  6EE6               	movwf	postinc1,c
 33675  0135DC  EC34  F0D7         	call	___asfladd	;wreg free
 33676                           
 33677                           ;bsoc.c: 58:  if (C.dynamic_ah_adj > (C.bank_ah))
 33678  0135E0  EE21  F39B         	lfsr	2,_C+156	;volatile
 33679  0135E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33680  0135EA  006F FF7B FFE6     	movff	postinc2,postinc1
 33681  0135F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33682  0135F6  006F FF7B FFE6     	movff	postinc2,postinc1
 33683  0135FC  EE21  F38B         	lfsr	2,_C+140	;volatile
 33684  013600  006F FF7B FFE6     	movff	postinc2,postinc1
 33685  013606  006F FF7B FFE6     	movff	postinc2,postinc1
 33686  01360C  006F FF7B FFE6     	movff	postinc2,postinc1
 33687  013612  006F FF7B FFE6     	movff	postinc2,postinc1
 33688  013618  ECE0  F0C7         	call	___flge	;wreg free
 33689  01361C  B001               	btfsc	btemp& (0+255),0,c
 33690  01361E  D00E               	goto	l12862
 33691                           
 33692                           ;bsoc.c: 59:   C.dynamic_ah_adj = C.bank_ah;
 33693  013620  EE21  F38B         	lfsr	2,_C+140	;volatile
 33694  013624  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 33695  01362A  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 33696  013630  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 33697  013636  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 33698  01363C                     l12862:
 33699                           
 33700                           ;bsoc.c: 60:  if (C.dynamic_ah_adj < 0.1)
 33701  01363C  0ECD               	movlw	205
 33702  01363E  6EE6               	movwf	postinc1,c
 33703  013640  0ECC               	movlw	204
 33704  013642  6EE6               	movwf	postinc1,c
 33705  013644  0ECC               	movlw	204
 33706  013646  6EE6               	movwf	postinc1,c
 33707  013648  0E3D               	movlw	61
 33708  01364A  6EE6               	movwf	postinc1,c
 33709  01364C  EE21  F39B         	lfsr	2,_C+156	;volatile
 33710  013650  006F FF7B FFE6     	movff	postinc2,postinc1
 33711  013656  006F FF7B FFE6     	movff	postinc2,postinc1
 33712  01365C  006F FF7B FFE6     	movff	postinc2,postinc1
 33713  013662  006F FF7B FFE6     	movff	postinc2,postinc1
 33714  013668  ECE0  F0C7         	call	___flge	;wreg free
 33715  01366C  B001               	btfsc	btemp& (0+255),0,c
 33716  01366E  D010               	goto	l12866
 33717                           
 33718                           ;bsoc.c: 61:   C.dynamic_ah_adj = 0.1;
 33719  013670  0ECD               	movlw	205
 33720  013672  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 33721  013678  0ECC               	movlw	204
 33722  01367A  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 33723  013680  0ECC               	movlw	204
 33724  013682  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 33725  013688  0E3D               	movlw	61
 33726  01368A  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 33727  013690                     l12866:
 33728                           
 33729                           ;bsoc.c: 64:  C.pv_ah += (C.c_pv / 3600.0);
 33730  013690  0E00               	movlw	0
 33731  013692  6EE6               	movwf	postinc1,c
 33732  013694  0E00               	movlw	0
 33733  013696  6EE6               	movwf	postinc1,c
 33734  013698  0E61               	movlw	97
 33735  01369A  6EE6               	movwf	postinc1,c
 33736  01369C  0E45               	movlw	69
 33737  01369E  6EE6               	movwf	postinc1,c
 33738  0136A0  EE21  F347         	lfsr	2,_C+72	;volatile
 33739  0136A4  006F FF7B FFE6     	movff	postinc2,postinc1
 33740  0136AA  006F FF7B FFE6     	movff	postinc2,postinc1
 33741  0136B0  006F FF7B FFE6     	movff	postinc2,postinc1
 33742  0136B6  006F FF7B FFE6     	movff	postinc2,postinc1
 33743  0136BC  ECA0  F0A6         	call	___fldiv	;wreg free
 33744  0136C0  0060  F007  FFE6   	movff	btemp,postinc1
 33745  0136C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33746  0136CC  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33747  0136D2  0060  F013  FFE6   	movff	btemp+3,postinc1
 33748  0136D8  0E93               	movlw	low (_C+148)
 33749  0136DA  6EE6               	movwf	postinc1,c
 33750  0136DC  0E07               	movlw	high (_C+148)
 33751  0136DE  6EE6               	movwf	postinc1,c
 33752  0136E0  EC34  F0D7         	call	___asfladd	;wreg free
 33753                           
 33754                           ;bsoc.c: 65:  C.pvkw += (C.p_pv / 3600.0);
 33755  0136E4  0E00               	movlw	0
 33756  0136E6  6EE6               	movwf	postinc1,c
 33757  0136E8  0E00               	movlw	0
 33758  0136EA  6EE6               	movwf	postinc1,c
 33759  0136EC  0E61               	movlw	97
 33760  0136EE  6EE6               	movwf	postinc1,c
 33761  0136F0  0E45               	movlw	69
 33762  0136F2  6EE6               	movwf	postinc1,c
 33763  0136F4  EE21  F37B         	lfsr	2,_C+124	;volatile
 33764  0136F8  006F FF7B FFE6     	movff	postinc2,postinc1
 33765  0136FE  006F FF7B FFE6     	movff	postinc2,postinc1
 33766  013704  006F FF7B FFE6     	movff	postinc2,postinc1
 33767  01370A  006F FF7B FFE6     	movff	postinc2,postinc1
 33768  013710  ECA0  F0A6         	call	___fldiv	;wreg free
 33769  013714  0060  F007  FFE6   	movff	btemp,postinc1
 33770  01371A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33771  013720  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33772  013726  0060  F013  FFE6   	movff	btemp+3,postinc1
 33773  01372C  0EA7               	movlw	low (_C+168)
 33774  01372E  6EE6               	movwf	postinc1,c
 33775  013730  0E07               	movlw	high (_C+168)
 33776  013732  6EE6               	movwf	postinc1,c
 33777  013734  EC34  F0D7         	call	___asfladd	;wreg free
 33778                           
 33779                           ;bsoc.c: 66:  C.invkw += (C.p_inverter / 3600.0);
 33780  013738  0E00               	movlw	0
 33781  01373A  6EE6               	movwf	postinc1,c
 33782  01373C  0E00               	movlw	0
 33783  01373E  6EE6               	movwf	postinc1,c
 33784  013740  0E61               	movlw	97
 33785  013742  6EE6               	movwf	postinc1,c
 33786  013744  0E45               	movlw	69
 33787  013746  6EE6               	movwf	postinc1,c
 33788  013748  EE21  F377         	lfsr	2,_C+120	;volatile
 33789  01374C  006F FF7B FFE6     	movff	postinc2,postinc1
 33790  013752  006F FF7B FFE6     	movff	postinc2,postinc1
 33791  013758  006F FF7B FFE6     	movff	postinc2,postinc1
 33792  01375E  006F FF7B FFE6     	movff	postinc2,postinc1
 33793  013764  ECA0  F0A6         	call	___fldiv	;wreg free
 33794  013768  0060  F007  FFE6   	movff	btemp,postinc1
 33795  01376E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33796  013774  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33797  01377A  0060  F013  FFE6   	movff	btemp+3,postinc1
 33798  013780  0EAB               	movlw	low (_C+172)
 33799  013782  6EE6               	movwf	postinc1,c
 33800  013784  0E07               	movlw	high (_C+172)
 33801  013786  6EE6               	movwf	postinc1,c
 33802  013788  EC34  F0D7         	call	___asfladd	;wreg free
 33803                           
 33804                           ;bsoc.c: 67:  C.loadkw += (C.p_load / 3600.0);
 33805  01378C  0E00               	movlw	0
 33806  01378E  6EE6               	movwf	postinc1,c
 33807  013790  0E00               	movlw	0
 33808  013792  6EE6               	movwf	postinc1,c
 33809  013794  0E61               	movlw	97
 33810  013796  6EE6               	movwf	postinc1,c
 33811  013798  0E45               	movlw	69
 33812  01379A  6EE6               	movwf	postinc1,c
 33813  01379C  EE21  F373         	lfsr	2,_C+116	;volatile
 33814  0137A0  006F FF7B FFE6     	movff	postinc2,postinc1
 33815  0137A6  006F FF7B FFE6     	movff	postinc2,postinc1
 33816  0137AC  006F FF7B FFE6     	movff	postinc2,postinc1
 33817  0137B2  006F FF7B FFE6     	movff	postinc2,postinc1
 33818  0137B8  ECA0  F0A6         	call	___fldiv	;wreg free
 33819  0137BC  0060  F007  FFE6   	movff	btemp,postinc1
 33820  0137C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33821  0137C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33822  0137CE  0060  F013  FFE6   	movff	btemp+3,postinc1
 33823  0137D4  0EAF               	movlw	low (_C+176)
 33824  0137D6  6EE6               	movwf	postinc1,c
 33825  0137D8  0E07               	movlw	high (_C+176)
 33826  0137DA  6EE6               	movwf	postinc1,c
 33827  0137DC  EC34  F0D7         	call	___asfladd	;wreg free
 33828                           
 33829                           ;bsoc.c: 68:  if (C.p_bat > 0.0)
 33830  0137E0  EE21  F37F         	lfsr	2,_C+128	;volatile
 33831  0137E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33832  0137EA  006F FF7B FFE6     	movff	postinc2,postinc1
 33833  0137F0  006F FF7B FFE6     	movff	postinc2,postinc1
 33834  0137F6  006F FF7B FFE6     	movff	postinc2,postinc1
 33835  0137FC  0E00               	movlw	0
 33836  0137FE  6EE6               	movwf	postinc1,c
 33837  013800  0E00               	movlw	0
 33838  013802  6EE6               	movwf	postinc1,c
 33839  013804  0E00               	movlw	0
 33840  013806  6EE6               	movwf	postinc1,c
 33841  013808  0E00               	movlw	0
 33842  01380A  6EE6               	movwf	postinc1,c
 33843  01380C  ECE0  F0C7         	call	___flge	;wreg free
 33844  013810  B001               	btfsc	btemp& (0+255),0,c
 33845  013812  D02A               	goto	l12872
 33846                           
 33847                           ;bsoc.c: 69:   C.bkwi += (C.p_bat / 3600.0);
 33848  013814  0E00               	movlw	0
 33849  013816  6EE6               	movwf	postinc1,c
 33850  013818  0E00               	movlw	0
 33851  01381A  6EE6               	movwf	postinc1,c
 33852  01381C  0E61               	movlw	97
 33853  01381E  6EE6               	movwf	postinc1,c
 33854  013820  0E45               	movlw	69
 33855  013822  6EE6               	movwf	postinc1,c
 33856  013824  EE21  F37F         	lfsr	2,_C+128	;volatile
 33857  013828  006F FF7B FFE6     	movff	postinc2,postinc1
 33858  01382E  006F FF7B FFE6     	movff	postinc2,postinc1
 33859  013834  006F FF7B FFE6     	movff	postinc2,postinc1
 33860  01383A  006F FF7B FFE6     	movff	postinc2,postinc1
 33861  013840  ECA0  F0A6         	call	___fldiv	;wreg free
 33862  013844  0060  F007  FFE6   	movff	btemp,postinc1
 33863  01384A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33864  013850  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33865  013856  0060  F013  FFE6   	movff	btemp+3,postinc1
 33866  01385C  0E9F               	movlw	low (_C+160)
 33867  01385E  6EE6               	movwf	postinc1,c
 33868  013860  0E07               	movlw	high (_C+160)
 33869  013862  6EE6               	movwf	postinc1,c
 33870  013864  EC34  F0D7         	call	___asfladd	;wreg free
 33871  013868                     l12872:
 33872                           
 33873                           ;bsoc.c: 70:  if (C.p_bat < 0.0)
 33874  013868  EE21  F37F         	lfsr	2,_C+128	;volatile
 33875  01386C  0E03               	movlw	3
 33876  01386E  AEDB               	btfss	plusw2,7,c
 33877  013870  D038               	goto	l12876
 33878                           
 33879                           ;bsoc.c: 71:   C.bkwo += fabsf(C.p_bat / 3600.0);
 33880  013872  0E00               	movlw	0
 33881  013874  6EE6               	movwf	postinc1,c
 33882  013876  0E00               	movlw	0
 33883  013878  6EE6               	movwf	postinc1,c
 33884  01387A  0E61               	movlw	97
 33885  01387C  6EE6               	movwf	postinc1,c
 33886  01387E  0E45               	movlw	69
 33887  013880  6EE6               	movwf	postinc1,c
 33888  013882  EE21  F37F         	lfsr	2,_C+128	;volatile
 33889  013886  006F FF7B FFE6     	movff	postinc2,postinc1
 33890  01388C  006F FF7B FFE6     	movff	postinc2,postinc1
 33891  013892  006F FF7B FFE6     	movff	postinc2,postinc1
 33892  013898  006F FF7B FFE6     	movff	postinc2,postinc1
 33893  01389E  ECA0  F0A6         	call	___fldiv	;wreg free
 33894  0138A2  0060  F007  FFE6   	movff	btemp,postinc1
 33895  0138A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33896  0138AE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33897  0138B4  0060  F013  FFE6   	movff	btemp+3,postinc1
 33898  0138BA  EC5E  F0D3         	call	_fabsf	;wreg free
 33899  0138BE  0060  F007  FFE6   	movff	btemp,postinc1
 33900  0138C4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33901  0138CA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33902  0138D0  0060  F013  FFE6   	movff	btemp+3,postinc1
 33903  0138D6  0EA3               	movlw	low (_C+164)
 33904  0138D8  6EE6               	movwf	postinc1,c
 33905  0138DA  0E07               	movlw	high (_C+164)
 33906  0138DC  6EE6               	movwf	postinc1,c
 33907  0138DE  EC34  F0D7         	call	___asfladd	;wreg free
 33908  0138E2                     l12876:
 33909                           
 33910                           ;bsoc.c: 73:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 33911  0138E2  0E00               	movlw	0
 33912  0138E4  6EE6               	movwf	postinc1,c
 33913  0138E6  0E00               	movlw	0
 33914  0138E8  6EE6               	movwf	postinc1,c
 33915  0138EA  0EC8               	movlw	200
 33916  0138EC  6EE6               	movwf	postinc1,c
 33917  0138EE  0E42               	movlw	66
 33918  0138F0  6EE6               	movwf	postinc1,c
 33919  0138F2  EE21  F38B         	lfsr	2,_C+140	;volatile
 33920  0138F6  006F FF7B FFE6     	movff	postinc2,postinc1
 33921  0138FC  006F FF7B FFE6     	movff	postinc2,postinc1
 33922  013902  006F FF7B FFE6     	movff	postinc2,postinc1
 33923  013908  006F FF7B FFE6     	movff	postinc2,postinc1
 33924  01390E  EE21  F39B         	lfsr	2,_C+156	;volatile
 33925  013912  006F FF7B FFE6     	movff	postinc2,postinc1
 33926  013918  006F FF7B FFE6     	movff	postinc2,postinc1
 33927  01391E  006F FF7B FFE6     	movff	postinc2,postinc1
 33928  013924  006F FF7B FFE6     	movff	postinc2,postinc1
 33929  01392A  ECA0  F0A6         	call	___fldiv	;wreg free
 33930  01392E  0060  F007  FFE6   	movff	btemp,postinc1
 33931  013934  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33932  01393A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33933  013940  0060  F013  FFE6   	movff	btemp+3,postinc1
 33934  013946  ECAD  F09E         	call	___flmul	;wreg free
 33935  01394A  0060  F007  FFE6   	movff	btemp,postinc1
 33936  013950  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33937  013956  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33938  01395C  0060  F013  FFE6   	movff	btemp+3,postinc1
 33939  013962  EC27  F0C7         	call	___fltol	;wreg free
 33940  013966  0060  F004  F00B   	movff	btemp,btemp+10
 33941  01396C  0060  F008  F00C   	movff	btemp+1,btemp+11
 33942  013972  0E01               	movlw	1
 33943  013974  260B               	addwf	(btemp+10)^0,f,c
 33944  013976  0E00               	movlw	0
 33945  013978  220C               	addwfc	(btemp+11)^0,f,c
 33946  01397A  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 33947  013980  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 33948                           
 33949                           ;bsoc.c: 74:  if (C.soc > 100)
 33950  013986  EE21  F3B5         	lfsr	2,_C+182	;volatile
 33951  01398A  0E01               	movlw	1
 33952  01398C  50DB               	movf	plusw2,w,c
 33953  01398E  E104               	bnz	u1242_20
 33954  013990  0E65               	movlw	101
 33955  013992  5CDE               	subwf	postinc2,w,c
 33956  013994  A0D8               	btfss	status,0,c
 33957  013996  D008               	goto	l12882
 33958  013998                     u1242_20:
 33959                           
 33960                           ;bsoc.c: 75:   C.soc = 100;
 33961  013998  0E64               	movlw	100
 33962  01399A  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 33963  0139A0  0E00               	movlw	0
 33964  0139A2  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 33965  0139A8                     l12882:
 33966                           
 33967                           ;bsoc.c: 77:  if (C.c_bat < 0.0) {
 33968  0139A8  EE21  F343         	lfsr	2,_C+68	;volatile
 33969  0139AC  0E03               	movlw	3
 33970  0139AE  AEDB               	btfss	plusw2,7,c
 33971  0139B0  D047               	goto	l2041
 33972                           
 33973                           ;bsoc.c: 78:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 33974  0139B2  EE21  F343         	lfsr	2,_C+68	;volatile
 33975  0139B6  006F FF7B FFE6     	movff	postinc2,postinc1
 33976  0139BC  006F FF7B FFE6     	movff	postinc2,postinc1
 33977  0139C2  006F FF7B FFE6     	movff	postinc2,postinc1
 33978  0139C8  006F FF7B FFE6     	movff	postinc2,postinc1
 33979  0139CE  EE21  F39B         	lfsr	2,_C+156	;volatile
 33980  0139D2  006F FF7B FFE6     	movff	postinc2,postinc1
 33981  0139D8  006F FF7B FFE6     	movff	postinc2,postinc1
 33982  0139DE  006F FF7B FFE6     	movff	postinc2,postinc1
 33983  0139E4  006F FF7B FFE6     	movff	postinc2,postinc1
 33984  0139EA  ECA0  F0A6         	call	___fldiv	;wreg free
 33985  0139EE  0060  F007  FFE6   	movff	btemp,postinc1
 33986  0139F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33987  0139FA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33988  013A00  0060  F013  FFE6   	movff	btemp+3,postinc1
 33989  013A06  EC50  F0DA         	call	___flneg	;wreg free
 33990  013A0A  0060  F007  FFE6   	movff	btemp,postinc1
 33991  013A10  0060  F00B  FFE6   	movff	btemp+1,postinc1
 33992  013A16  0060  F00F  FFE6   	movff	btemp+2,postinc1
 33993  013A1C  0060  F013  FFE6   	movff	btemp+3,postinc1
 33994  013A22  EC27  F0C7         	call	___fltol	;wreg free
 33995  013A26  0060  F004  F00B   	movff	btemp,btemp+10
 33996  013A2C  0060  F008  F00C   	movff	btemp+1,btemp+11
 33997  013A32  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 33998  013A38  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 33999                           
 34000                           ;bsoc.c: 79:  } else {
 34001  013A3E  D008               	goto	l12886
 34002  013A40                     l2041:
 34003                           
 34004                           ;bsoc.c: 80:   C.runtime = 120;
 34005  013A40  0E78               	movlw	120
 34006  013A42  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34007  013A48  0E00               	movlw	0
 34008  013A4A  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34009  013A50                     l12886:
 34010                           
 34011                           ;bsoc.c: 82:  if (C.runtime > 120)
 34012  013A50  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34013  013A54  0E01               	movlw	1
 34014  013A56  50DB               	movf	plusw2,w,c
 34015  013A58  E104               	bnz	u1244_20
 34016  013A5A  0E79               	movlw	121
 34017  013A5C  5CDE               	subwf	postinc2,w,c
 34018  013A5E  A0D8               	btfss	status,0,c
 34019  013A60  D008               	goto	l12890
 34020  013A62                     u1244_20:
 34021                           
 34022                           ;bsoc.c: 83:   C.runtime = 120;
 34023  013A62  0E78               	movlw	120
 34024  013A64  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 34025  013A6A  0E00               	movlw	0
 34026  013A6C  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 34027  013A72                     l12890:
 34028                           
 34029                           ;bsoc.c: 85:  V.lowint_count++;
 34030  013A72  0E01               	movlw	1
 34031  013A74  0101               	movlb	1	; () banked
 34032  013A76  27E3               	addwf	(_V+179)& (0+255),f,b	;volatile
 34033  013A78  0E00               	movlw	0
 34034  013A7A  23E4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 34035  013A7C  23E5               	addwfc	(_V+181)& (0+255),f,b	;volatile
 34036  013A7E  23E6               	addwfc	(_V+182)& (0+255),f,b	;volatile
 34037                           
 34038                           ;bsoc.c: 87:  if (!log_update_wait++ && V.system_stable) {
 34039  013A80  2A41               	incf	calc_bsoc@log_update_wait^0,f,c
 34040  013A82  0441               	decf	calc_bsoc@log_update_wait^0,w,c
 34041  013A84  A4D8               	btfss	status,2,c
 34042  013A86  D15B               	goto	l12902
 34043                           
 34044                           ; BSR set to: 1
 34045  013A88  51DE               	movf	(_V+174)& (0+255),w,b	;volatile
 34046  013A8A  B4D8               	btfsc	status,2,c
 34047  013A8C  D158               	goto	l12902
 34048                           
 34049                           ; BSR set to: 1
 34050                           ;bsoc.c: 88:   log_ptr = port_data_dma_ptr();
 34051  013A8E  ECB8  F0E0         	call	_port_data_dma_ptr	;wreg free
 34052                           
 34053                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34054  013A92  0EFF               	movlw	-1
 34055  013A94  0060  F00B  FFE3   	movff	btemp+1,plusw1
 34056  013A9A  0EFE               	movlw	-2
 34057  013A9C  0060  F007  FFE3   	movff	btemp,plusw1
 34058                           
 34059                           ;bsoc.c: 89:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 34060  013AA2  EE21  F3B9         	lfsr	2,_C+186	;volatile
 34061  013AA6  006F FF7B FFE6     	movff	postinc2,postinc1
 34062  013AAC  006F FF7B FFE6     	movff	postinc2,postinc1
 34063  013AB2  006F FF7B FFE6     	movff	postinc2,postinc1
 34064  013AB8  006F FF7B FFE6     	movff	postinc2,postinc1
 34065  013ABE  EE21  F3BD         	lfsr	2,_C+190	;volatile
 34066  013AC2  006F FF7B FFE6     	movff	postinc2,postinc1
 34067  013AC8  006F FF7B FFE6     	movff	postinc2,postinc1
 34068  013ACE  006F FF7B FFE6     	movff	postinc2,postinc1
 34069  013AD4  006F FF7B FFE6     	movff	postinc2,postinc1
 34070  013ADA  EE21  F39B         	lfsr	2,_C+156	;volatile
 34071  013ADE  006F FF7B FFE6     	movff	postinc2,postinc1
 34072  013AE4  006F FF7B FFE6     	movff	postinc2,postinc1
 34073  013AEA  006F FF7B FFE6     	movff	postinc2,postinc1
 34074  013AF0  006F FF7B FFE6     	movff	postinc2,postinc1
 34075  013AF6  EE22  F026         	lfsr	2,_C+295	;volatile
 34076  013AFA  006F FF7B FFE6     	movff	postinc2,postinc1
 34077  013B00  006F FF7B FFE6     	movff	postinc2,postinc1
 34078  013B06  006F FF7B FFE6     	movff	postinc2,postinc1
 34079  013B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 34080  013B12  EE22  F022         	lfsr	2,_C+291	;volatile
 34081  013B16  006F FF7B FFE6     	movff	postinc2,postinc1
 34082  013B1C  006F FF7B FFE6     	movff	postinc2,postinc1
 34083  013B22  006F FF7B FFE6     	movff	postinc2,postinc1
 34084  013B28  006F FF7B FFE6     	movff	postinc2,postinc1
 34085  013B2E  EE22  F021         	lfsr	2,_C+290	;volatile
 34086  013B32  50DF               	movf	indf2,w,c
 34087  013B34  6EE6               	movwf	postinc1,c
 34088  013B36  0E00               	movlw	0
 34089  013B38  6EE6               	movwf	postinc1,c
 34090  013B3A  EC9C  F0E0         	call	_get_ac_charger_relay	;wreg free
 34091  013B3E  5001               	movf	btemp^0,w,c
 34092  013B40  6EE6               	movwf	postinc1,c
 34093  013B42  0E00               	movlw	0
 34094  013B44  6EE6               	movwf	postinc1,c
 34095  013B46  EE21  F367         	lfsr	2,_C+104	;volatile
 34096  013B4A  006F FF7B FFE6     	movff	postinc2,postinc1
 34097  013B50  006F FF7B FFE6     	movff	postinc2,postinc1
 34098  013B56  006F FF7B FFE6     	movff	postinc2,postinc1
 34099  013B5C  006F FF7B FFE6     	movff	postinc2,postinc1
 34100  013B62  EE21  F387         	lfsr	2,_C+136	;volatile
 34101  013B66  006F FF7B FFE6     	movff	postinc2,postinc1
 34102  013B6C  006F FF7B FFE6     	movff	postinc2,postinc1
 34103  013B72  006F FF7B FFE6     	movff	postinc2,postinc1
 34104  013B78  006F FF7B FFE6     	movff	postinc2,postinc1
 34105  013B7E  EE21  F3B3         	lfsr	2,_C+180	;volatile
 34106  013B82  006F FF78  F00B    	movff	postinc2,btemp+10
 34107  013B88  006F FF74  F00C    	movff	postdec2,btemp+11
 34108  013B8E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34109  013B94  0060  F033  FFE6   	movff	btemp+11,postinc1
 34110  013B9A  EE21  F3B5         	lfsr	2,_C+182	;volatile
 34111  013B9E  006F FF78  F00B    	movff	postinc2,btemp+10
 34112  013BA4  006F FF74  F00C    	movff	postdec2,btemp+11
 34113  013BAA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 34114  013BB0  0060  F033  FFE6   	movff	btemp+11,postinc1
 34115  013BB6  EE21  F393         	lfsr	2,_C+148	;volatile
 34116  013BBA  006F FF7B FFE6     	movff	postinc2,postinc1
 34117  013BC0  006F FF7B FFE6     	movff	postinc2,postinc1
 34118  013BC6  006F FF7B FFE6     	movff	postinc2,postinc1
 34119  013BCC  006F FF7B FFE6     	movff	postinc2,postinc1
 34120  013BD2  EE21  F38F         	lfsr	2,_C+144	;volatile
 34121  013BD6  006F FF7B FFE6     	movff	postinc2,postinc1
 34122  013BDC  006F FF7B FFE6     	movff	postinc2,postinc1
 34123  013BE2  006F FF7B FFE6     	movff	postinc2,postinc1
 34124  013BE8  006F FF7B FFE6     	movff	postinc2,postinc1
 34125  013BEE  EE21  F377         	lfsr	2,_C+120	;volatile
 34126  013BF2  006F FF7B FFE6     	movff	postinc2,postinc1
 34127  013BF8  006F FF7B FFE6     	movff	postinc2,postinc1
 34128  013BFE  006F FF7B FFE6     	movff	postinc2,postinc1
 34129  013C04  006F FF7B FFE6     	movff	postinc2,postinc1
 34130  013C0A  EE21  F373         	lfsr	2,_C+116	;volatile
 34131  013C0E  006F FF7B FFE6     	movff	postinc2,postinc1
 34132  013C14  006F FF7B FFE6     	movff	postinc2,postinc1
 34133  013C1A  006F FF7B FFE6     	movff	postinc2,postinc1
 34134  013C20  006F FF7B FFE6     	movff	postinc2,postinc1
 34135  013C26  EE21  F37B         	lfsr	2,_C+124	;volatile
 34136  013C2A  006F FF7B FFE6     	movff	postinc2,postinc1
 34137  013C30  006F FF7B FFE6     	movff	postinc2,postinc1
 34138  013C36  006F FF7B FFE6     	movff	postinc2,postinc1
 34139  013C3C  006F FF7B FFE6     	movff	postinc2,postinc1
 34140  013C42  EE21  F37F         	lfsr	2,_C+128	;volatile
 34141  013C46  006F FF7B FFE6     	movff	postinc2,postinc1
 34142  013C4C  006F FF7B FFE6     	movff	postinc2,postinc1
 34143  013C52  006F FF7B FFE6     	movff	postinc2,postinc1
 34144  013C58  006F FF7B FFE6     	movff	postinc2,postinc1
 34145  013C5E  EE21  F363         	lfsr	2,_C+100	;volatile
 34146  013C62  006F FF7B FFE6     	movff	postinc2,postinc1
 34147  013C68  006F FF7B FFE6     	movff	postinc2,postinc1
 34148  013C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 34149  013C74  006F FF7B FFE6     	movff	postinc2,postinc1
 34150  013C7A  EE21  F34B         	lfsr	2,_C+76	;volatile
 34151  013C7E  006F FF7B FFE6     	movff	postinc2,postinc1
 34152  013C84  006F FF7B FFE6     	movff	postinc2,postinc1
 34153  013C8A  006F FF7B FFE6     	movff	postinc2,postinc1
 34154  013C90  006F FF7B FFE6     	movff	postinc2,postinc1
 34155  013C96  EE21  F34F         	lfsr	2,_C+80	;volatile
 34156  013C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 34157  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 34158  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 34159  013CAC  006F FF7B FFE6     	movff	postinc2,postinc1
 34160  013CB2  EE21  F353         	lfsr	2,_C+84	;volatile
 34161  013CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 34162  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 34163  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 34164  013CC8  006F FF7B FFE6     	movff	postinc2,postinc1
 34165  013CCE  0060  F6C7  FFE6   	movff	_V+129,postinc1
 34166  013CD4  0060  F6CB  FFE6   	movff	_V+130,postinc1
 34167  013CDA  0060  F6CF  FFE6   	movff	_V+131,postinc1
 34168  013CE0  0060  F6D3  FFE6   	movff	_V+132,postinc1
 34169  013CE6  0E31               	movlw	49
 34170  013CE8  6EE6               	movwf	postinc1,c
 34171  013CEA  0E00               	movlw	0
 34172  013CEC  6EE6               	movwf	postinc1,c
 34173  013CEE  0E21               	movlw	low STR_64
 34174  013CF0  6EE6               	movwf	postinc1,c
 34175  013CF2  0EFC               	movlw	high STR_64
 34176  013CF4  6EE6               	movwf	postinc1,c
 34177                           
 34178                           ;stkvar	_log_ptr @ sp[(-90)+4]
 34179  013CF6  0EAA               	movlw	-86
 34180  013CF8  006F FF8F FFE6     	movff	plusw1,postinc1
 34181  013CFE  006F FF8F FFE6     	movff	plusw1,postinc1
 34182  013D04  0E56               	movlw	86
 34183  013D06  6EE6               	movwf	postinc1,c
 34184  013D08  EC12  F0CF         	call	_sprintf	;wreg free
 34185                           
 34186                           ; BSR set to: 0
 34187                           ;bsoc.c: 95:   StartTimer(TMR_DISPLAY, 125);
 34188  013D0C  0E7D               	movlw	125
 34189  013D0E  6EE6               	movwf	postinc1,c
 34190  013D10  0E00               	movlw	0
 34191  013D12  6EE6               	movwf	postinc1,c
 34192  013D14  0E0A               	movlw	10
 34193  013D16  6EE6               	movwf	postinc1,c
 34194  013D18  ECA9  F0DB         	call	_StartTimer	;wreg free
 34195                           
 34196                           ;bsoc.c: 96:   send_port_data_dma(strlen((char*) log_ptr));
 34197                           ;stkvar	_log_ptr @ sp[(-6)+4]
 34198  013D1C  0EFE               	movlw	-2
 34199  013D1E  006F FF8F FFE6     	movff	plusw1,postinc1
 34200  013D24  006F FF8F FFE6     	movff	plusw1,postinc1
 34201  013D2A  ECB3  F0D4         	call	_strlen	;wreg free
 34202  013D2E  0060  F007  FFE6   	movff	btemp,postinc1
 34203  013D34  0060  F00B  FFE6   	movff	btemp+1,postinc1
 34204  013D3A  ECB6  F0D9         	call	_send_port_data_dma	;wreg free
 34205  013D3E                     l12902:
 34206                           
 34207                           ;bsoc.c: 98:  if (log_update_wait >= 10)
 34208  013D3E  0E09               	movlw	9
 34209  013D40  6441               	cpfsgt	calc_bsoc@log_update_wait^0,c
 34210  013D42  D001               	goto	l2045
 34211                           
 34212                           ;bsoc.c: 99:   log_update_wait = 0;
 34213  013D44  6A41               	clrf	calc_bsoc@log_update_wait^0,c
 34214  013D46                     l2045:
 34215                           
 34216                           ;bsoc.c: 101:  C.update = 0;
 34217  013D46  0E00               	movlw	0
 34218  013D48  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 34219                           
 34220                           ;bsoc.c: 103:  do { LATEbits.LATE1 = 0; } while(0);
 34221  013D4E  92BE               	bcf	190,1,c	;volatile
 34222                           
 34223                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 34224  013D50  0EFA               	movlw	250
 34225  013D52  26E1               	addwf	fsr1l,f,c
 34226  013D54  0EFF               	movlw	255
 34227  013D56  22E2               	addwfc	fsr1h,f,c
 34228  013D58  0012               	return		;funcret
 34229  013D5A                     __end_of_calc_bsoc:
 34230                           	opt callstack 0
 34231                           
 34232 ;; *************** function _send_port_data_dma *****************
 34233 ;; Defined at:
 34234 ;;		line 404 in file "eadog.c"
 34235 ;; Parameters:    Size  Location     Type
 34236 ;;  dsize           2  [STACK] unsigned short 
 34237 ;; Auto vars:     Size  Location     Type
 34238 ;;		None
 34239 ;; Return value:  Size  Location     Type
 34240 ;;                  1  [STACK] void 
 34241 ;; Registers used:
 34242 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 34243 ;; Tracked objects:
 34244 ;;		On entry : 0/0
 34245 ;;		On exit  : 3F/3B
 34246 ;;		Unchanged: 0/0
 34247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34252 ;;Total ram usage:        0 bytes
 34253 ;; Hardware stack levels used:    1
 34254 ;; Hardware stack levels required when called:    3
 34255 ;; This function calls:
 34256 ;;		Nothing
 34257 ;; This function is called by:
 34258 ;;		_calc_bsoc
 34259 ;; This function uses a reentrant model
 34260 ;;
 34261                           
 34262                           	psect	text154
 34263  01B36C                     __ptext154:
 34264                           	opt callstack 0
 34265  01B36C                     _send_port_data_dma:
 34266                           	opt callstack 10
 34267                           
 34268                           ;eadog.c: 404: void send_port_data_dma(uint16_t dsize);eadog.c: 405: {;eadog.c: 406:  if
      +                           (dsize > 512)
 34269                           ;stkvar	_dsize @ sp[(0)+-2]
 34270                           
 34271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34272                           ;incstack = 0
 34273  01B36C  0EFE               	movlw	-2
 34274  01B36E  04E3               	decf	plusw1,w,c
 34275  01B370  0EFF               	movlw	-1
 34276  01B372  006F FF8C  F001    	movff	plusw1,btemp
 34277  01B378  0E02               	movlw	2
 34278  01B37A  5A01               	subwfb	btemp^0,f,c
 34279  01B37C  A0D8               	btfss	status,0,c
 34280  01B37E  D00C               	goto	l9976
 34281                           
 34282                           ;eadog.c: 407:   dsize = 512;
 34283  01B380  0E00               	movlw	0
 34284  01B382  6E0B               	movwf	(btemp+10)^0,c
 34285  01B384  0E02               	movlw	2
 34286  01B386  6E0C               	movwf	(btemp+11)^0,c
 34287                           
 34288                           ;stkvar	_dsize @ sp[(0)+-2]
 34289  01B388  0EFE               	movlw	-2
 34290  01B38A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 34291  01B390  0EFF               	movlw	-1
 34292  01B392  0060  F033  FFE3   	movff	btemp+11,plusw1
 34293  01B398                     l9976:
 34294                           
 34295                           ;eadog.c: 409:  DMA2CON0bits.EN = 0;
 34296  01B398  013B               	movlb	59	; () banked
 34297  01B39A  9FDC               	bcf	220,7,b	;volatile
 34298                           
 34299                           ; BSR set to: 59
 34300                           ;eadog.c: 410:  DMA2SSZ = dsize;
 34301                           ;stkvar	_dsize @ sp[(0)+-2]
 34302  01B39C  0EFE               	movlw	-2
 34303  01B39E  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 34304  01B3A4  0EFF               	movlw	-1
 34305  01B3A6  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 34306                           
 34307                           ; BSR set to: 59
 34308                           ;eadog.c: 411:  DMA2DSZ = 1;
 34309  01B3AC  0E00               	movlw	0
 34310  01B3AE  6FCF               	movwf	207,b	;volatile
 34311  01B3B0  0E01               	movlw	1
 34312  01B3B2  6FCE               	movwf	206,b	;volatile
 34313                           
 34314                           ; BSR set to: 59
 34315                           ;eadog.c: 412:  DMA2CON0bits.EN = 1;
 34316  01B3B4  8FDC               	bsf	220,7,b	;volatile
 34317                           
 34318                           ; BSR set to: 59
 34319                           ;eadog.c: 413:  DMA2CON0bits.DMA2SIRQEN = 1;
 34320  01B3B6  8DDC               	bsf	220,6,b	;volatile
 34321                           
 34322                           ; BSR set to: 59
 34323                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 34324  01B3B8  52E5               	movf	postdec1,f,c
 34325  01B3BA  52E5               	movf	postdec1,f,c
 34326  01B3BC  0012               	return		;funcret
 34327  01B3BE                     __end_of_send_port_data_dma:
 34328                           	opt callstack 0
 34329                           
 34330 ;; *************** function _port_data_dma_ptr *****************
 34331 ;; Defined at:
 34332 ;;		line 419 in file "eadog.c"
 34333 ;; Parameters:    Size  Location     Type
 34334 ;;		None
 34335 ;; Auto vars:     Size  Location     Type
 34336 ;;		None
 34337 ;; Return value:  Size  Location     Type
 34338 ;;                  2  [STACK] PTR unsigned char 
 34339 ;; Registers used:
 34340 ;;		wreg, status,2, status,0, btemp, btemp+1
 34341 ;; Tracked objects:
 34342 ;;		On entry : 3F/1
 34343 ;;		On exit  : 0/0
 34344 ;;		Unchanged: 0/0
 34345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34350 ;;Total ram usage:        0 bytes
 34351 ;; Hardware stack levels used:    1
 34352 ;; Hardware stack levels required when called:    3
 34353 ;; This function calls:
 34354 ;;		Nothing
 34355 ;; This function is called by:
 34356 ;;		_calc_bsoc
 34357 ;; This function uses a reentrant model
 34358 ;;
 34359                           
 34360                           	psect	text155
 34361  01C170                     __ptext155:
 34362                           	opt callstack 0
 34363  01C170                     _port_data_dma_ptr:
 34364                           	opt callstack 10
 34365                           
 34366                           ;eadog.c: 421:  return port_data;
 34367                           
 34368                           ; BSR set to: 59
 34369                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34370                           ;incstack = 0
 34371  01C170  0EFF               	movlw	low _port_data
 34372  01C172  6E01               	movwf	btemp^0,c
 34373  01C174  0E04               	movlw	high _port_data
 34374  01C176  6E02               	movwf	(btemp+1)^0,c
 34375                           
 34376                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34377  01C178  0012               	return		;funcret
 34378  01C17A                     __end_of_port_data_dma_ptr:
 34379                           	opt callstack 0
 34380                           
 34381 ;; *************** function ___asfladd *****************
 34382 ;; Defined at:
 34383 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 34384 ;; Parameters:    Size  Location     Type
 34385 ;;  f1p             2  [STACK] PTR 
 34386 ;;		 -> C(299), 
 34387 ;;  f2              4  [STACK] PTR 
 34388 ;; Auto vars:     Size  Location     Type
 34389 ;;		None
 34390 ;; Return value:  Size  Location     Type
 34391 ;;                  4  [STACK] PTR 
 34392 ;; Registers used:
 34393 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 34394 ;; Tracked objects:
 34395 ;;		On entry : 0/0
 34396 ;;		On exit  : 0/0
 34397 ;;		Unchanged: 0/0
 34398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34403 ;;Total ram usage:        0 bytes
 34404 ;; Hardware stack levels used:    1
 34405 ;; Hardware stack levels required when called:    4
 34406 ;; This function calls:
 34407 ;;		___fladd
 34408 ;; This function is called by:
 34409 ;;		_calc_bsoc
 34410 ;; This function uses a reentrant model
 34411 ;;
 34412                           
 34413                           	psect	text156
 34414  01AE68                     __ptext156:
 34415                           	opt callstack 0
 34416  01AE68                     ___asfladd:
 34417                           	opt callstack 9
 34418                           
 34419                           ;	Return value of ___asfladd is never used
 34420                           ;stkvar	_f2 @ sp[(0)+-6]
 34421                           
 34422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34423                           ;incstack = 0
 34424  01AE68  0EFA               	movlw	-6
 34425  01AE6A  006F FF8F FFE6     	movff	plusw1,postinc1
 34426  01AE70  006F FF8F FFE6     	movff	plusw1,postinc1
 34427  01AE76  006F FF8F FFE6     	movff	plusw1,postinc1
 34428  01AE7C  006F FF8F FFE6     	movff	plusw1,postinc1
 34429                           
 34430                           ;stkvar	_f1p @ sp[(-4)+-2]
 34431  01AE82  0EFA               	movlw	-6
 34432  01AE84  006F FF8F FFD9     	movff	plusw1,fsr2l
 34433  01AE8A  0EFB               	movlw	-5
 34434  01AE8C  006F FF8F FFDA     	movff	plusw1,fsr2h
 34435  01AE92  006F FF7B FFE6     	movff	postinc2,postinc1
 34436  01AE98  006F FF7B FFE6     	movff	postinc2,postinc1
 34437  01AE9E  006F FF7B FFE6     	movff	postinc2,postinc1
 34438  01AEA4  006F FF7B FFE6     	movff	postinc2,postinc1
 34439  01AEAA  ECC2  F0A2         	call	___fladd	;wreg free
 34440                           
 34441                           ;stkvar	_f1p @ sp[(0)+-2]
 34442  01AEAE  0EFE               	movlw	-2
 34443  01AEB0  006F FF8F FFD9     	movff	plusw1,fsr2l
 34444  01AEB6  0EFF               	movlw	-1
 34445  01AEB8  006F FF8F FFDA     	movff	plusw1,fsr2h
 34446  01AEBE  0060  F007  FFDE   	movff	btemp,postinc2
 34447  01AEC4  0060  F00B  FFDE   	movff	btemp+1,postinc2
 34448  01AECA  0060  F00F  FFDE   	movff	btemp+2,postinc2
 34449  01AED0  0060  F013  FFDE   	movff	btemp+3,postinc2
 34450                           
 34451                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 34452  01AED6  0EFA               	movlw	250
 34453  01AED8  26E1               	addwf	fsr1l,f,c
 34454  01AEDA  0EFF               	movlw	255
 34455  01AEDC  22E2               	addwfc	fsr1h,f,c
 34456  01AEDE  0012               	return		;funcret
 34457  01AEE0                     __end_of___asfladd:
 34458                           	opt callstack 0
 34459                           
 34460 ;; *************** function _INT0_ISR *****************
 34461 ;; Defined at:
 34462 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 34463 ;; Parameters:    Size  Location     Type
 34464 ;;		None
 34465 ;; Auto vars:     Size  Location     Type
 34466 ;;		None
 34467 ;; Return value:  Size  Location     Type
 34468 ;;                  1    wreg      void 
 34469 ;; Registers used:
 34470 ;;		wreg, status,2, status,0, pclath, tosl
 34471 ;; Tracked objects:
 34472 ;;		On entry : 0/0
 34473 ;;		On exit  : 0/0
 34474 ;;		Unchanged: 0/0
 34475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34480 ;;Total ram usage:        0 bytes
 34481 ;; Hardware stack levels used:    1
 34482 ;; Hardware stack levels required when called:    2
 34483 ;; This function calls:
 34484 ;;		_INT0_CallBack
 34485 ;; This function is called by:
 34486 ;;		Interrupt level 2
 34487 ;; This function uses a non-reentrant model
 34488 ;;
 34489                           
 34490                           	psect	text157
 34491  01C148                     __ptext157:
 34492                           	opt callstack 0
 34493  01C148                     _INT0_ISR:
 34494                           	opt callstack 2
 34495                           
 34496                           ;incstack = 0
 34497  01C148  EE14  F15E         	lfsr	1,___inthi_sp
 34498                           
 34499                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 34500  01C14C  0139               	movlb	57	; () banked
 34501  01C14E  91A1               	bcf	161,0,b	;volatile
 34502                           
 34503                           ; BSR set to: 57
 34504                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 34505  01C150  EC42  F0DF         	call	_INT0_CallBack	;wreg free
 34506  01C154  0011               	retfie		f
 34507  01C156                     __end_of_INT0_ISR:
 34508                           	opt callstack 0
 34509                           
 34510 ;; *************** function _INT0_CallBack *****************
 34511 ;; Defined at:
 34512 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 34513 ;; Parameters:    Size  Location     Type
 34514 ;;		None
 34515 ;; Auto vars:     Size  Location     Type
 34516 ;;		None
 34517 ;; Return value:  Size  Location     Type
 34518 ;;                  1  [STACK] void 
 34519 ;; Registers used:
 34520 ;;		wreg, status,2, status,0, pclath, tosl
 34521 ;; Tracked objects:
 34522 ;;		On entry : 3F/39
 34523 ;;		On exit  : 0/0
 34524 ;;		Unchanged: 0/0
 34525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34530 ;;Total ram usage:        0 bytes
 34531 ;; Hardware stack levels used:    1
 34532 ;; Hardware stack levels required when called:    1
 34533 ;; This function calls:
 34534 ;;		Absolute function
 34535 ;;		_INT0_DefaultInterruptHandler
 34536 ;; This function is called by:
 34537 ;;		_INT0_ISR
 34538 ;; This function uses a reentrant model
 34539 ;;
 34540                           
 34541                           	psect	text158
 34542  01BE84                     __ptext158:
 34543                           	opt callstack 0
 34544  01BE84                     _INT0_CallBack:
 34545                           	opt callstack 2
 34546                           
 34547                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 34548                           
 34549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34550                           ;incstack = 0
 34551  01BE84  0100               	movlb	0	; () banked
 34552  01BE86  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 34553  01BE88  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34554  01BE8A  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34555  01BE8C  B4D8               	btfsc	status,2,c
 34556  01BE8E  0012               	return	
 34557                           
 34558                           ; BSR set to: 0
 34559                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 34560  01BE90  D801               	call	u998_48
 34561  01BE92  0012               	return	
 34562  01BE94                     u998_48:
 34563  01BE94  0005               	push	
 34564  01BE96  6EFA               	movwf	pclath,c
 34565  01BE98  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 34566  01BE9A  6EFD               	movwf	tosl,c
 34567  01BE9C  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 34568  01BE9E  6EFE               	movwf	tosh,c
 34569  01BEA0  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 34570  01BEA2  6EFF               	movwf	tosu,c
 34571  01BEA4  50FA               	movf	pclath,w,c
 34572  01BEA6  0012               	return		;indir
 34573  01BEA8                     __end_of_INT0_CallBack:
 34574                           	opt callstack 0
 34575                           
 34576 ;; *************** function _INT0_DefaultInterruptHandler *****************
 34577 ;; Defined at:
 34578 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 34579 ;; Parameters:    Size  Location     Type
 34580 ;;		None
 34581 ;; Auto vars:     Size  Location     Type
 34582 ;;		None
 34583 ;; Return value:  Size  Location     Type
 34584 ;;                  1  [STACK] void 
 34585 ;; Registers used:
 34586 ;;		None
 34587 ;; Tracked objects:
 34588 ;;		On entry : 3F/0
 34589 ;;		On exit  : 0/0
 34590 ;;		Unchanged: 0/0
 34591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34596 ;;Total ram usage:        0 bytes
 34597 ;; Hardware stack levels used:    1
 34598 ;; This function calls:
 34599 ;;		Nothing
 34600 ;; This function is called by:
 34601 ;;		_EXT_INT_Initialize
 34602 ;;		_INT0_CallBack
 34603 ;; This function uses a reentrant model
 34604 ;;
 34605                           
 34606                           	psect	text159
 34607  01C1EA                     __ptext159:
 34608                           	opt callstack 0
 34609  01C1EA                     _INT0_DefaultInterruptHandler:
 34610                           	opt callstack 2
 34611                           
 34612                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34613                           
 34614                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34615                           ;incstack = 0
 34616  01C1EA  0012               	return		;funcret
 34617  01C1EC                     __end_of_INT0_DefaultInterruptHandler:
 34618                           	opt callstack 0
 34619                           
 34620 ;; *************** function _Default_ISR *****************
 34621 ;; Defined at:
 34622 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 34623 ;; Parameters:    Size  Location     Type
 34624 ;;		None
 34625 ;; Auto vars:     Size  Location     Type
 34626 ;;		None
 34627 ;; Return value:  Size  Location     Type
 34628 ;;                  1    wreg      void 
 34629 ;; Registers used:
 34630 ;;		None
 34631 ;; Tracked objects:
 34632 ;;		On entry : 0/0
 34633 ;;		On exit  : 0/0
 34634 ;;		Unchanged: 0/0
 34635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34640 ;;Total ram usage:        0 bytes
 34641 ;; Hardware stack levels used:    1
 34642 ;; This function calls:
 34643 ;;		Nothing
 34644 ;; This function is called by:
 34645 ;;		Interrupt level 2
 34646 ;; This function uses a non-reentrant model
 34647 ;;
 34648                           
 34649                           	psect	text160
 34650  01C1E0                     __ptext160:
 34651                           	opt callstack 0
 34652  01C1E0                     _Default_ISR:
 34653                           	opt callstack 4
 34654                           
 34655                           ;incstack = 0
 34656  01C1E0  EE14  F15E         	lfsr	1,___inthi_sp
 34657  01C1E4  0011               	retfie		f
 34658  01C1E6                     __end_of_Default_ISR:
 34659                           	opt callstack 0
 34660                           
 34661 ;; *************** function _ADCC_ISR *****************
 34662 ;; Defined at:
 34663 ;;		line 314 in file "mcc_generated_files/adcc.c"
 34664 ;; Parameters:    Size  Location     Type
 34665 ;;		None
 34666 ;; Auto vars:     Size  Location     Type
 34667 ;;		None
 34668 ;; Return value:  Size  Location     Type
 34669 ;;                  1    wreg      void 
 34670 ;; Registers used:
 34671 ;;		wreg, status,2, status,0, pclath, tosl
 34672 ;; Tracked objects:
 34673 ;;		On entry : 0/0
 34674 ;;		On exit  : 0/0
 34675 ;;		Unchanged: 0/0
 34676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34681 ;;Total ram usage:        0 bytes
 34682 ;; Hardware stack levels used:    1
 34683 ;; Hardware stack levels required when called:    1
 34684 ;; This function calls:
 34685 ;;		Absolute function
 34686 ;;		_ADCC_DefaultInterruptHandler
 34687 ;;		_adc_int_handler
 34688 ;; This function is called by:
 34689 ;;		Interrupt level 2
 34690 ;; This function uses a non-reentrant model
 34691 ;;
 34692                           
 34693                           	psect	text161
 34694  01BAF4                     __ptext161:
 34695                           	opt callstack 0
 34696  01BAF4                     _ADCC_ISR:
 34697                           	opt callstack 3
 34698                           
 34699                           ;incstack = 0
 34700  01BAF4  EE14  F15E         	lfsr	1,___inthi_sp
 34701                           
 34702                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 34703  01BAF8  0139               	movlb	57	; () banked
 34704  01BAFA  95A1               	bcf	161,2,b	;volatile
 34705                           
 34706                           ; BSR set to: 57
 34707                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 34708  01BAFC  0100               	movlb	0	; () banked
 34709  01BAFE  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34710  01BB00  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34711  01BB02  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34712  01BB04  B4D8               	btfsc	status,2,c
 34713  01BB06  0011               	retfie		f
 34714                           
 34715                           ; BSR set to: 0
 34716                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 34717  01BB08  D801               	call	i2u1042_48
 34718  01BB0A  0011               	retfie		f
 34719  01BB0C                     i2u1042_48:
 34720  01BB0C  0005               	push	
 34721  01BB0E  6EFA               	movwf	pclath,c
 34722  01BB10  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 34723  01BB12  6EFD               	movwf	tosl,c
 34724  01BB14  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 34725  01BB16  6EFE               	movwf	tosh,c
 34726  01BB18  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 34727  01BB1A  6EFF               	movwf	tosu,c
 34728  01BB1C  50FA               	movf	pclath,w,c
 34729  01BB1E  0012               	return		;indir
 34730  01BB20                     __end_of_ADCC_ISR:
 34731                           	opt callstack 0
 34732                           
 34733 ;; *************** function _adc_int_t_handler *****************
 34734 ;; Defined at:
 34735 ;;		line 146 in file "daq.c"
 34736 ;; Parameters:    Size  Location     Type
 34737 ;;		None
 34738 ;; Auto vars:     Size  Location     Type
 34739 ;;		None
 34740 ;; Return value:  Size  Location     Type
 34741 ;;                  1  [STACK] void 
 34742 ;; Registers used:
 34743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 34744 ;; Tracked objects:
 34745 ;;		On entry : 3F/0
 34746 ;;		On exit  : 0/0
 34747 ;;		Unchanged: 0/0
 34748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34753 ;;Total ram usage:        0 bytes
 34754 ;; Hardware stack levels used:    1
 34755 ;; Hardware stack levels required when called:    1
 34756 ;; This function calls:
 34757 ;;		_ADCC_DischargeSampleCapacitor
 34758 ;;		_ADCC_StartConversion
 34759 ;; This function is called by:
 34760 ;;		_start_adc_scan
 34761 ;;		_ADCC_ThresholdISR
 34762 ;; This function uses a reentrant model
 34763 ;;
 34764                           
 34765                           	psect	text162
 34766  01ADE6                     __ptext162:
 34767                           	opt callstack 0
 34768  01ADE6                     _adc_int_t_handler:
 34769                           	opt callstack 2
 34770                           
 34771                           ;daq.c: 151:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 34772                           
 34773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34774                           ;incstack = 0
 34775  01ADE6  013E               	movlb	62	; () banked
 34776  01ADE8  51E6               	movf	230,w,b	;volatile
 34777  01ADEA  006F FB9C  F001    	movff	16103,btemp	;volatile
 34778  01ADF0  6A02               	clrf	(btemp+1)^0,c
 34779  01ADF2  0060  F004  F002   	movff	btemp,btemp+1
 34780  01ADF8  6A01               	clrf	btemp^0,c
 34781  01ADFA  2601               	addwf	btemp^0,f,c
 34782  01ADFC  0E00               	movlw	0
 34783  01ADFE  2202               	addwfc	(btemp+1)^0,f,c
 34784  01AE00  0101               	movlb	1	; () banked
 34785  01AE02  512C               	movf	(_R+44)& (0+255),w,b	;volatile
 34786  01AE04  0D02               	mullw	2
 34787  01AE06  0E00               	movlw	low _R
 34788  01AE08  24F3               	addwf	243,w,c
 34789  01AE0A  6ED9               	movwf	fsr2l,c
 34790  01AE0C  0E01               	movlw	high _R
 34791  01AE0E  20F4               	addwfc	prodh,w,c
 34792  01AE10  6EDA               	movwf	fsr2h,c
 34793  01AE12  0060  F007  FFDE   	movff	btemp,postinc2
 34794  01AE18  0060  F00B  FFDD   	movff	btemp+1,postdec2
 34795  01AE1E                     l11176:
 34796                           
 34797                           ;daq.c: 153:   if (++R.scan_index > 0XD) {
 34798  01AE1E  0101               	movlb	1	; () banked
 34799  01AE20  2B2C               	incf	(_R+44)& (0+255),f,b	;volatile
 34800  01AE22  0E0D               	movlw	13
 34801  01AE24  652C               	cpfsgt	(_R+44)& (0+255),b	;volatile
 34802  01AE26  D003               	goto	l11182
 34803                           
 34804                           ; BSR set to: 1
 34805                           ;daq.c: 154:    R.done = 1;
 34806  01AE28  0E01               	movlw	1
 34807  01AE2A  6F2F               	movwf	(_R+47)& (0+255),b	;volatile
 34808  01AE2C  0012               	return	
 34809  01AE2E                     l11182:
 34810                           
 34811                           ; BSR set to: 1
 34812                           ;daq.c: 160:  } while (!((R.scan_select >> R.scan_index) &0x1));
 34813  01AE2E  0060  F4B0  F00C   	movff	_R+44,btemp+11	;volatile
 34814  01AE34  EE20  F12D         	lfsr	2,_R+45	;volatile
 34815  01AE38  006F FF78  F009    	movff	postinc2,btemp+8
 34816  01AE3E  006F FF74  F00A    	movff	postdec2,btemp+9
 34817  01AE44  2A0C               	incf	(btemp+11)^0,f,c
 34818  01AE46  D003               	goto	u1039_44
 34819  01AE48                     u1039_45:
 34820  01AE48  90D8               	bcf	status,0,c
 34821  01AE4A  320A               	rrcf	(btemp+9)^0,f,c
 34822  01AE4C  3209               	rrcf	(btemp+8)^0,f,c
 34823  01AE4E                     u1039_44:
 34824  01AE4E  2E0C               	decfsz	(btemp+11)^0,f,c
 34825  01AE50  D7FB               	goto	u1039_45
 34826  01AE52  A009               	btfss	(btemp+8)^0,0,c
 34827  01AE54  D7E4               	goto	l11176
 34828                           
 34829                           ;daq.c: 161:  ADCC_DischargeSampleCapacitor();
 34830  01AE56  ECCF  F0E0         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 34831                           
 34832                           ; BSR set to: 62
 34833                           ;daq.c: 162:  ADCC_StartConversion(R.scan_index & 0xf);
 34834  01AE5A  0101               	movlb	1	; () banked
 34835  01AE5C  512C               	movf	(_R+44)& (0+255),w,b	;volatile
 34836  01AE5E  0B0F               	andlw	15
 34837  01AE60  6EE6               	movwf	postinc1,c
 34838  01AE62  EC5E  F0E0         	call	_ADCC_StartConversion	;wreg free
 34839                           
 34840                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34841  01AE66  0012               	return		;funcret
 34842  01AE68                     __end_of_adc_int_t_handler:
 34843                           	opt callstack 0
 34844                           
 34845 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 34846 ;; Defined at:
 34847 ;;		line 339 in file "mcc_generated_files/adcc.c"
 34848 ;; Parameters:    Size  Location     Type
 34849 ;;		None
 34850 ;; Auto vars:     Size  Location     Type
 34851 ;;		None
 34852 ;; Return value:  Size  Location     Type
 34853 ;;                  1  [STACK] void 
 34854 ;; Registers used:
 34855 ;;		None
 34856 ;; Tracked objects:
 34857 ;;		On entry : 3F/0
 34858 ;;		On exit  : 0/0
 34859 ;;		Unchanged: 0/0
 34860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34865 ;;Total ram usage:        0 bytes
 34866 ;; Hardware stack levels used:    1
 34867 ;; This function calls:
 34868 ;;		Nothing
 34869 ;; This function is called by:
 34870 ;;		_ADCC_Initialize
 34871 ;;		_ADCC_ISR
 34872 ;;		_ADCC_ThresholdISR
 34873 ;; This function uses a reentrant model
 34874 ;;
 34875                           
 34876                           	psect	text163
 34877  01C1EC                     __ptext163:
 34878                           	opt callstack 0
 34879  01C1EC                     _ADCC_DefaultInterruptHandler:
 34880                           	opt callstack 3
 34881                           
 34882                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34883                           
 34884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34885                           ;incstack = 0
 34886  01C1EC  0012               	return		;funcret
 34887  01C1EE                     __end_of_ADCC_DefaultInterruptHandler:
 34888                           	opt callstack 0
 34889                           
 34890 ;; *************** function _adc_int_handler *****************
 34891 ;; Defined at:
 34892 ;;		line 136 in file "daq.c"
 34893 ;; Parameters:    Size  Location     Type
 34894 ;;		None
 34895 ;; Auto vars:     Size  Location     Type
 34896 ;;		None
 34897 ;; Return value:  Size  Location     Type
 34898 ;;                  1  [STACK] void 
 34899 ;; Registers used:
 34900 ;;		None
 34901 ;; Tracked objects:
 34902 ;;		On entry : 3F/0
 34903 ;;		On exit  : 0/0
 34904 ;;		Unchanged: 0/0
 34905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34910 ;;Total ram usage:        0 bytes
 34911 ;; Hardware stack levels used:    1
 34912 ;; This function calls:
 34913 ;;		Nothing
 34914 ;; This function is called by:
 34915 ;;		_start_adc_scan
 34916 ;;		_ADCC_ISR
 34917 ;; This function uses a reentrant model
 34918 ;;
 34919                           
 34920                           	psect	text164
 34921  01C1EE                     __ptext164:
 34922                           	opt callstack 0
 34923  01C1EE                     _adc_int_handler:
 34924                           	opt callstack 3
 34925                           
 34926                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34927                           
 34928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34929                           ;incstack = 0
 34930  01C1EE  0012               	return		;funcret
 34931  01C1F0                     __end_of_adc_int_handler:
 34932                           	opt callstack 0
 34933                           
 34934 ;; *************** function _ADCC_ThresholdISR *****************
 34935 ;; Defined at:
 34936 ;;		line 327 in file "mcc_generated_files/adcc.c"
 34937 ;; Parameters:    Size  Location     Type
 34938 ;;		None
 34939 ;; Auto vars:     Size  Location     Type
 34940 ;;		None
 34941 ;; Return value:  Size  Location     Type
 34942 ;;                  1    wreg      void 
 34943 ;; Registers used:
 34944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 34945 ;; Tracked objects:
 34946 ;;		On entry : 0/0
 34947 ;;		On exit  : 0/0
 34948 ;;		Unchanged: 0/0
 34949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34952 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34953 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34954 ;;Total ram usage:        5 bytes
 34955 ;; Hardware stack levels used:    1
 34956 ;; Hardware stack levels required when called:    2
 34957 ;; This function calls:
 34958 ;;		Absolute function
 34959 ;;		_ADCC_DefaultInterruptHandler
 34960 ;;		_adc_int_t_handler
 34961 ;; This function is called by:
 34962 ;;		Interrupt level 2
 34963 ;; This function uses a non-reentrant model
 34964 ;;
 34965                           
 34966                           	psect	text165
 34967  01AFB4                     __ptext165:
 34968                           	opt callstack 0
 34969  01AFB4                     _ADCC_ThresholdISR:
 34970                           	opt callstack 2
 34971                           
 34972                           ;incstack = 0
 34973  01AFB4  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 34974  01AFBA  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 34975  01AFC0  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 34976  01AFC6  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 34977  01AFCC  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 34978  01AFD2  EE14  F15E         	lfsr	1,___inthi_sp
 34979                           
 34980                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 34981  01AFD6  0139               	movlb	57	; () banked
 34982  01AFD8  97A1               	bcf	161,3,b	;volatile
 34983                           
 34984                           ; BSR set to: 57
 34985                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 34986  01AFDA  0100               	movlb	0	; () banked
 34987  01AFDC  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 34988  01AFDE  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 34989  01AFE0  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 34990  01AFE2  B4D8               	btfsc	status,2,c
 34991  01AFE4  D00C               	goto	i2u1044_49
 34992                           
 34993                           ; BSR set to: 0
 34994                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 34995  01AFE6  D801               	call	i2u1044_48
 34996  01AFE8  D00A               	goto	i2u1044_49
 34997  01AFEA                     i2u1044_48:
 34998  01AFEA  0005               	push	
 34999  01AFEC  6EFA               	movwf	pclath,c
 35000  01AFEE  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 35001  01AFF0  6EFD               	movwf	tosl,c
 35002  01AFF2  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 35003  01AFF4  6EFE               	movwf	tosh,c
 35004  01AFF6  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 35005  01AFF8  6EFF               	movwf	tosu,c
 35006  01AFFA  50FA               	movf	pclath,w,c
 35007  01AFFC  0012               	return		;indir
 35008  01AFFE                     i2u1044_49:
 35009  01AFFE  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 35010  01B004  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 35011  01B00A  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 35012  01B010  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 35013  01B016  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 35014  01B01C  0011               	retfie		f
 35015  01B01E                     __end_of_ADCC_ThresholdISR:
 35016                           	opt callstack 0
 35017                           
 35018 ;; *************** function _UART1_rx_vect_isr *****************
 35019 ;; Defined at:
 35020 ;;		line 181 in file "mcc_generated_files/uart1.c"
 35021 ;; Parameters:    Size  Location     Type
 35022 ;;		None
 35023 ;; Auto vars:     Size  Location     Type
 35024 ;;		None
 35025 ;; Return value:  Size  Location     Type
 35026 ;;                  1    wreg      void 
 35027 ;; Registers used:
 35028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35029 ;; Tracked objects:
 35030 ;;		On entry : 0/0
 35031 ;;		On exit  : 0/0
 35032 ;;		Unchanged: 0/0
 35033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35038 ;;Total ram usage:        0 bytes
 35039 ;; Hardware stack levels used:    1
 35040 ;; Hardware stack levels required when called:    1
 35041 ;; This function calls:
 35042 ;;		Absolute function
 35043 ;;		_UART1_Receive_ISR
 35044 ;; This function is called by:
 35045 ;;		Interrupt level 2
 35046 ;; This function uses a non-reentrant model
 35047 ;;
 35048                           
 35049                           	psect	text166
 35050  01BD58                     __ptext166:
 35051                           	opt callstack 0
 35052  01BD58                     _UART1_rx_vect_isr:
 35053                           	opt callstack 3
 35054                           
 35055                           ;incstack = 0
 35056  01BD58  EE14  F15E         	lfsr	1,___inthi_sp
 35057                           
 35058                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 35059  01BD5C  0100               	movlb	0	; () banked
 35060  01BD5E  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35061  01BD60  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35062  01BD62  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35063  01BD64  B4D8               	btfsc	status,2,c
 35064  01BD66  0011               	retfie		f
 35065                           
 35066                           ; BSR set to: 0
 35067                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 35068  01BD68  D801               	call	i2u1046_48
 35069  01BD6A  0011               	retfie		f
 35070  01BD6C                     i2u1046_48:
 35071  01BD6C  0005               	push	
 35072  01BD6E  6EFA               	movwf	pclath,c
 35073  01BD70  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 35074  01BD72  6EFD               	movwf	tosl,c
 35075  01BD74  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 35076  01BD76  6EFE               	movwf	tosh,c
 35077  01BD78  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 35078  01BD7A  6EFF               	movwf	tosu,c
 35079  01BD7C  50FA               	movf	pclath,w,c
 35080  01BD7E  0012               	return		;indir
 35081  01BD80                     __end_of_UART1_rx_vect_isr:
 35082                           	opt callstack 0
 35083                           
 35084 ;; *************** function _UART1_Receive_ISR *****************
 35085 ;; Defined at:
 35086 ;;		line 192 in file "mcc_generated_files/uart1.c"
 35087 ;; Parameters:    Size  Location     Type
 35088 ;;		None
 35089 ;; Auto vars:     Size  Location     Type
 35090 ;;		None
 35091 ;; Return value:  Size  Location     Type
 35092 ;;                  1  [STACK] void 
 35093 ;; Registers used:
 35094 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35095 ;; Tracked objects:
 35096 ;;		On entry : 3F/0
 35097 ;;		On exit  : 3F/0
 35098 ;;		Unchanged: 0/0
 35099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35104 ;;Total ram usage:        0 bytes
 35105 ;; Hardware stack levels used:    1
 35106 ;; This function calls:
 35107 ;;		Nothing
 35108 ;; This function is called by:
 35109 ;;		_UART1_Initialize
 35110 ;;		_UART1_rx_vect_isr
 35111 ;; This function uses a reentrant model
 35112 ;;
 35113                           
 35114                           	psect	text167
 35115  01BFC8                     __ptext167:
 35116                           	opt callstack 0
 35117  01BFC8                     _UART1_Receive_ISR:
 35118                           	opt callstack 3
 35119                           
 35120                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 35121                           
 35122                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35123                           ;incstack = 0
 35124  01BFC8  5047               	movf	_uart1RxHead^0,w,c
 35125  01BFCA  0F6C               	addlw	low _uart1RxBuffer
 35126  01BFCC  6ED9               	movwf	fsr2l,c
 35127  01BFCE  6ADA               	clrf	fsr2h,c
 35128  01BFD0  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 35129  01BFD6  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 35130                           
 35131                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 35132  01BFD8  0E07               	movlw	7
 35133  01BFDA  6447               	cpfsgt	_uart1RxHead^0,c
 35134  01BFDC  D001               	goto	l10742
 35135                           
 35136                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 35137  01BFDE  6A47               	clrf	_uart1RxHead^0,c	;volatile
 35138  01BFE0                     l10742:
 35139                           
 35140                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 35141  01BFE0  0100               	movlb	0	; () banked
 35142  01BFE2  2BCE               	incf	_uart1RxCount& (0+255),f,b	;volatile
 35143                           
 35144                           ; BSR set to: 0
 35145                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35146  01BFE4  0012               	return		;funcret
 35147  01BFE6                     __end_of_UART1_Receive_ISR:
 35148                           	opt callstack 0
 35149                           
 35150 ;; *************** function _UART2_tx_vect_isr *****************
 35151 ;; Defined at:
 35152 ;;		line 195 in file "mcc_generated_files/uart2.c"
 35153 ;; Parameters:    Size  Location     Type
 35154 ;;		None
 35155 ;; Auto vars:     Size  Location     Type
 35156 ;;		None
 35157 ;; Return value:  Size  Location     Type
 35158 ;;                  1    wreg      void 
 35159 ;; Registers used:
 35160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35161 ;; Tracked objects:
 35162 ;;		On entry : 0/0
 35163 ;;		On exit  : 0/0
 35164 ;;		Unchanged: 0/0
 35165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35170 ;;Total ram usage:        0 bytes
 35171 ;; Hardware stack levels used:    1
 35172 ;; Hardware stack levels required when called:    1
 35173 ;; This function calls:
 35174 ;;		Absolute function
 35175 ;;		_UART2_Transmit_ISR
 35176 ;; This function is called by:
 35177 ;;		Interrupt level 2
 35178 ;; This function uses a non-reentrant model
 35179 ;;
 35180                           
 35181                           	psect	text168
 35182  01BD80                     __ptext168:
 35183                           	opt callstack 0
 35184  01BD80                     _UART2_tx_vect_isr:
 35185                           	opt callstack 3
 35186                           
 35187                           ; BSR set to: 0
 35188                           ;incstack = 0
 35189  01BD80  EE14  F15E         	lfsr	1,___inthi_sp
 35190                           
 35191                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 35192  01BD84  0100               	movlb	0	; () banked
 35193  01BD86  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35194  01BD88  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35195  01BD8A  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35196  01BD8C  B4D8               	btfsc	status,2,c
 35197  01BD8E  0011               	retfie		f
 35198                           
 35199                           ; BSR set to: 0
 35200                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 35201  01BD90  D801               	call	i2u1048_48
 35202  01BD92  0011               	retfie		f
 35203  01BD94                     i2u1048_48:
 35204  01BD94  0005               	push	
 35205  01BD96  6EFA               	movwf	pclath,c
 35206  01BD98  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 35207  01BD9A  6EFD               	movwf	tosl,c
 35208  01BD9C  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 35209  01BD9E  6EFE               	movwf	tosh,c
 35210  01BDA0  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 35211  01BDA2  6EFF               	movwf	tosu,c
 35212  01BDA4  50FA               	movf	pclath,w,c
 35213  01BDA6  0012               	return		;indir
 35214  01BDA8                     __end_of_UART2_tx_vect_isr:
 35215                           	opt callstack 0
 35216                           
 35217 ;; *************** function _UART2_Transmit_ISR *****************
 35218 ;; Defined at:
 35219 ;;		line 213 in file "mcc_generated_files/uart2.c"
 35220 ;; Parameters:    Size  Location     Type
 35221 ;;		None
 35222 ;; Auto vars:     Size  Location     Type
 35223 ;;		None
 35224 ;; Return value:  Size  Location     Type
 35225 ;;                  1  [STACK] void 
 35226 ;; Registers used:
 35227 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35228 ;; Tracked objects:
 35229 ;;		On entry : 3F/0
 35230 ;;		On exit  : 3B/39
 35231 ;;		Unchanged: 0/0
 35232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35237 ;;Total ram usage:        0 bytes
 35238 ;; Hardware stack levels used:    1
 35239 ;; This function calls:
 35240 ;;		Nothing
 35241 ;; This function is called by:
 35242 ;;		_UART2_Initialize
 35243 ;;		_UART2_tx_vect_isr
 35244 ;; This function uses a reentrant model
 35245 ;;
 35246                           
 35247                           	psect	text169
 35248  01BB20                     __ptext169:
 35249                           	opt callstack 0
 35250  01BB20                     _UART2_Transmit_ISR:
 35251                           	opt callstack 3
 35252                           
 35253                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 35254                           
 35255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35256                           ;incstack = 0
 35257  01BB20  0E40               	movlw	64
 35258  01BB22  6044               	cpfslt	_uart2TxBufferRemaining^0,c
 35259  01BB24  D010               	goto	l673
 35260                           
 35261                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 35262  01BB26  0E00               	movlw	low _uart2TxBuffer
 35263  01BB28  2445               	addwf	_uart2TxTail^0,w,c	;volatile
 35264  01BB2A  6ED9               	movwf	fsr2l,c
 35265  01BB2C  6ADA               	clrf	fsr2h,c
 35266  01BB2E  0E03               	movlw	high _uart2TxBuffer
 35267  01BB30  22DA               	addwfc	fsr2h,f,c
 35268  01BB32  50DF               	movf	indf2,w,c
 35269  01BB34  013D               	movlb	61	; () banked
 35270  01BB36  6FD2               	movwf	210,b	;volatile
 35271                           
 35272                           ; BSR set to: 61
 35273  01BB38  2A45               	incf	_uart2TxTail^0,f,c	;volatile
 35274                           
 35275                           ; BSR set to: 61
 35276                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 35277  01BB3A  0E3F               	movlw	63
 35278  01BB3C  6445               	cpfsgt	_uart2TxTail^0,c
 35279  01BB3E  D001               	goto	l10754
 35280                           
 35281                           ; BSR set to: 61
 35282                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 35283  01BB40  6A45               	clrf	_uart2TxTail^0,c	;volatile
 35284  01BB42                     l10754:
 35285                           
 35286                           ; BSR set to: 61
 35287                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 35288  01BB42  2A44               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 35289                           
 35290                           ;mcc_generated_files/uart2.c: 224:     }
 35291  01BB44  0012               	return	
 35292  01BB46                     l673:
 35293                           
 35294                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 35295  01BB46  0139               	movlb	57	; () banked
 35296  01BB48  9796               	bcf	150,3,b	;volatile
 35297                           
 35298                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 35299  01BB4A  0012               	return		;funcret
 35300  01BB4C                     __end_of_UART2_Transmit_ISR:
 35301                           	opt callstack 0
 35302                           
 35303 ;; *************** function _UART2_rx_vect_isr *****************
 35304 ;; Defined at:
 35305 ;;		line 203 in file "mcc_generated_files/uart2.c"
 35306 ;; Parameters:    Size  Location     Type
 35307 ;;		None
 35308 ;; Auto vars:     Size  Location     Type
 35309 ;;		None
 35310 ;; Return value:  Size  Location     Type
 35311 ;;                  1    wreg      void 
 35312 ;; Registers used:
 35313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 35314 ;; Tracked objects:
 35315 ;;		On entry : 0/0
 35316 ;;		On exit  : 0/0
 35317 ;;		Unchanged: 0/0
 35318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35323 ;;Total ram usage:        0 bytes
 35324 ;; Hardware stack levels used:    1
 35325 ;; Hardware stack levels required when called:    1
 35326 ;; This function calls:
 35327 ;;		Absolute function
 35328 ;;		_UART2_Receive_ISR
 35329 ;; This function is called by:
 35330 ;;		Interrupt level 2
 35331 ;; This function uses a non-reentrant model
 35332 ;;
 35333                           
 35334                           	psect	text170
 35335  01BDA8                     __ptext170:
 35336                           	opt callstack 0
 35337  01BDA8                     _UART2_rx_vect_isr:
 35338                           	opt callstack 3
 35339                           
 35340                           ;incstack = 0
 35341  01BDA8  EE14  F15E         	lfsr	1,___inthi_sp
 35342                           
 35343                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 35344  01BDAC  0100               	movlb	0	; () banked
 35345  01BDAE  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 35346  01BDB0  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 35347  01BDB2  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 35348  01BDB4  B4D8               	btfsc	status,2,c
 35349  01BDB6  0011               	retfie		f
 35350                           
 35351                           ; BSR set to: 0
 35352                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 35353  01BDB8  D801               	call	i2u1050_48
 35354  01BDBA  0011               	retfie		f
 35355  01BDBC                     i2u1050_48:
 35356  01BDBC  0005               	push	
 35357  01BDBE  6EFA               	movwf	pclath,c
 35358  01BDC0  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 35359  01BDC2  6EFD               	movwf	tosl,c
 35360  01BDC4  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 35361  01BDC6  6EFE               	movwf	tosh,c
 35362  01BDC8  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 35363  01BDCA  6EFF               	movwf	tosu,c
 35364  01BDCC  50FA               	movf	pclath,w,c
 35365  01BDCE  0012               	return		;indir
 35366  01BDD0                     __end_of_UART2_rx_vect_isr:
 35367                           	opt callstack 0
 35368                           
 35369 ;; *************** function _UART2_Receive_ISR *****************
 35370 ;; Defined at:
 35371 ;;		line 233 in file "mcc_generated_files/uart2.c"
 35372 ;; Parameters:    Size  Location     Type
 35373 ;;		None
 35374 ;; Auto vars:     Size  Location     Type
 35375 ;;		None
 35376 ;; Return value:  Size  Location     Type
 35377 ;;                  1  [STACK] void 
 35378 ;; Registers used:
 35379 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35380 ;; Tracked objects:
 35381 ;;		On entry : 3F/0
 35382 ;;		On exit  : 3F/0
 35383 ;;		Unchanged: 0/0
 35384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35389 ;;Total ram usage:        0 bytes
 35390 ;; Hardware stack levels used:    1
 35391 ;; This function calls:
 35392 ;;		Nothing
 35393 ;; This function is called by:
 35394 ;;		_UART2_Initialize
 35395 ;;		_UART2_rx_vect_isr
 35396 ;; This function uses a reentrant model
 35397 ;;
 35398                           
 35399                           	psect	text171
 35400  01BF30                     __ptext171:
 35401                           	opt callstack 0
 35402  01BF30                     _UART2_Receive_ISR:
 35403                           	opt callstack 3
 35404                           
 35405                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 35406                           
 35407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35408                           ;incstack = 0
 35409  01BF30  0E00               	movlw	low _uart2RxBuffer
 35410  01BF32  2443               	addwf	_uart2RxHead^0,w,c	;volatile
 35411  01BF34  6ED9               	movwf	fsr2l,c
 35412  01BF36  6ADA               	clrf	fsr2h,c
 35413  01BF38  0E04               	movlw	high _uart2RxBuffer
 35414  01BF3A  22DA               	addwfc	fsr2h,f,c
 35415  01BF3C  006F F743 FFDF     	movff	15824,indf2	;volatile
 35416  01BF42  2A43               	incf	_uart2RxHead^0,f,c	;volatile
 35417                           
 35418                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 35419  01BF44  2843               	incf	_uart2RxHead^0,w,c
 35420  01BF46  B4D8               	btfsc	status,2,c
 35421                           
 35422                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 35423  01BF48  6A43               	clrf	_uart2RxHead^0,c	;volatile
 35424                           
 35425                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 35426  01BF4A  0100               	movlb	0	; () banked
 35427  01BF4C  2BCB               	incf	_uart2RxCount& (0+255),f,b	;volatile
 35428                           
 35429                           ; BSR set to: 0
 35430                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 35431  01BF4E  0012               	return		;funcret
 35432  01BF50                     __end_of_UART2_Receive_ISR:
 35433                           	opt callstack 0
 35434                           
 35435 ;; *************** function _TMR6_ISR *****************
 35436 ;; Defined at:
 35437 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 35438 ;; Parameters:    Size  Location     Type
 35439 ;;		None
 35440 ;; Auto vars:     Size  Location     Type
 35441 ;;		None
 35442 ;; Return value:  Size  Location     Type
 35443 ;;                  1    wreg      void 
 35444 ;; Registers used:
 35445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 35446 ;; Tracked objects:
 35447 ;;		On entry : 0/0
 35448 ;;		On exit  : 0/0
 35449 ;;		Unchanged: 0/0
 35450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35453 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35455 ;;Total ram usage:        1 bytes
 35456 ;; Hardware stack levels used:    1
 35457 ;; Hardware stack levels required when called:    2
 35458 ;; This function calls:
 35459 ;;		_TMR6_CallBack
 35460 ;; This function is called by:
 35461 ;;		Interrupt level 2
 35462 ;; This function uses a non-reentrant model
 35463 ;;
 35464                           
 35465                           	psect	text172
 35466  01C01C                     __ptext172:
 35467                           	opt callstack 0
 35468  01C01C                     _TMR6_ISR:
 35469                           	opt callstack 2
 35470                           
 35471                           ; BSR set to: 0
 35472                           ;incstack = 0
 35473  01C01C  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 35474  01C022  EE14  F15E         	lfsr	1,___inthi_sp
 35475                           
 35476                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 35477  01C026  0139               	movlb	57	; () banked
 35478  01C028  91A9               	bcf	169,0,b	;volatile
 35479                           
 35480                           ; BSR set to: 57
 35481                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 35482  01C02A  EC54  F0DF         	call	_TMR6_CallBack	;wreg free
 35483  01C02E  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 35484  01C034  0011               	retfie		f
 35485  01C036                     __end_of_TMR6_ISR:
 35486                           	opt callstack 0
 35487                           
 35488 ;; *************** function _TMR6_CallBack *****************
 35489 ;; Defined at:
 35490 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 35491 ;; Parameters:    Size  Location     Type
 35492 ;;		None
 35493 ;; Auto vars:     Size  Location     Type
 35494 ;;		None
 35495 ;; Return value:  Size  Location     Type
 35496 ;;                  1  [STACK] void 
 35497 ;; Registers used:
 35498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 35499 ;; Tracked objects:
 35500 ;;		On entry : 3F/39
 35501 ;;		On exit  : 0/0
 35502 ;;		Unchanged: 0/0
 35503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35508 ;;Total ram usage:        0 bytes
 35509 ;; Hardware stack levels used:    1
 35510 ;; Hardware stack levels required when called:    1
 35511 ;; This function calls:
 35512 ;;		Absolute function
 35513 ;;		_TMR6_DefaultInterruptHandler
 35514 ;; This function is called by:
 35515 ;;		_TMR6_ISR
 35516 ;; This function uses a reentrant model
 35517 ;;
 35518                           
 35519                           	psect	text173
 35520  01BEA8                     __ptext173:
 35521                           	opt callstack 0
 35522  01BEA8                     _TMR6_CallBack:
 35523                           	opt callstack 2
 35524                           
 35525                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 35526                           
 35527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35528                           ;incstack = 0
 35529  01BEA8  0100               	movlb	0	; () banked
 35530  01BEAA  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 35531  01BEAC  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 35532  01BEAE  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 35533  01BEB0  B4D8               	btfsc	status,2,c
 35534  01BEB2  0012               	return	
 35535                           
 35536                           ; BSR set to: 0
 35537                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 35538  01BEB4  D801               	call	u1006_48
 35539  01BEB6  0012               	return	
 35540  01BEB8                     u1006_48:
 35541  01BEB8  0005               	push	
 35542  01BEBA  6EFA               	movwf	pclath,c
 35543  01BEBC  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 35544  01BEBE  6EFD               	movwf	tosl,c
 35545  01BEC0  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 35546  01BEC2  6EFE               	movwf	tosh,c
 35547  01BEC4  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 35548  01BEC6  6EFF               	movwf	tosu,c
 35549  01BEC8  50FA               	movf	pclath,w,c
 35550  01BECA  0012               	return		;indir
 35551  01BECC                     __end_of_TMR6_CallBack:
 35552                           	opt callstack 0
 35553                           
 35554 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 35555 ;; Defined at:
 35556 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 35557 ;; Parameters:    Size  Location     Type
 35558 ;;		None
 35559 ;; Auto vars:     Size  Location     Type
 35560 ;;  i               1  [STACK] unsigned char 
 35561 ;; Return value:  Size  Location     Type
 35562 ;;                  1  [STACK] void 
 35563 ;; Registers used:
 35564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 35565 ;; Tracked objects:
 35566 ;;		On entry : 3F/0
 35567 ;;		On exit  : 0/0
 35568 ;;		Unchanged: 0/0
 35569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35574 ;;Total ram usage:        0 bytes
 35575 ;; Hardware stack levels used:    1
 35576 ;; This function calls:
 35577 ;;		Nothing
 35578 ;; This function is called by:
 35579 ;;		_TMR6_Initialize
 35580 ;;		_TMR6_CallBack
 35581 ;; This function uses a reentrant model
 35582 ;;
 35583                           
 35584                           	psect	text174
 35585  01B3BE                     __ptext174:
 35586                           	opt callstack 0
 35587  01B3BE                     _TMR6_DefaultInterruptHandler:
 35588                           	opt callstack 0
 35589                           
 35590                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35591  01B3BE  52E6               	movf	postinc1,f,c
 35592                           
 35593                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 35594                           ;stkvar	_i @ sp[(-1)+0]
 35595                           
 35596                           ;incstack = 0
 35597  01B3C0  0EFF               	movlw	-1
 35598  01B3C2  6AE3               	clrf	plusw1,c
 35599  01B3C4                     l10364:
 35600                           
 35601                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 35602                           ;stkvar	_i @ sp[(-1)+0]
 35603  01B3C4  0EFF               	movlw	-1
 35604  01B3C6  50E3               	movf	plusw1,w,c
 35605  01B3C8  0D02               	mullw	2
 35606  01B3CA  0E7D               	movlw	low _tickCount
 35607  01B3CC  24F3               	addwf	243,w,c
 35608  01B3CE  6ED9               	movwf	fsr2l,c
 35609  01B3D0  0E02               	movlw	high _tickCount
 35610  01B3D2  20F4               	addwfc	prodh,w,c
 35611  01B3D4  6EDA               	movwf	fsr2h,c
 35612  01B3D6  50DE               	movf	postinc2,w,c
 35613  01B3D8  10DE               	iorwf	postinc2,w,c
 35614  01B3DA  B4D8               	btfsc	status,2,c
 35615  01B3DC  D00C               	goto	l10368
 35616                           
 35617                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 35618                           ;stkvar	_i @ sp[(-1)+0]
 35619  01B3DE  0EFF               	movlw	-1
 35620  01B3E0  50E3               	movf	plusw1,w,c
 35621  01B3E2  0D02               	mullw	2
 35622  01B3E4  0E7D               	movlw	low _tickCount
 35623  01B3E6  24F3               	addwf	243,w,c
 35624  01B3E8  6ED9               	movwf	fsr2l,c
 35625  01B3EA  0E02               	movlw	high _tickCount
 35626  01B3EC  20F4               	addwfc	prodh,w,c
 35627  01B3EE  6EDA               	movwf	fsr2h,c
 35628  01B3F0  06DE               	decf	postinc2,f,c
 35629  01B3F2  0E00               	movlw	0
 35630  01B3F4  5ADD               	subwfb	postdec2,f,c
 35631  01B3F6                     l10368:
 35632                           
 35633                           ;mcc_generated_files/tmr6.c: 207:  }
 35634                           ;stkvar	_i @ sp[(-1)+0]
 35635  01B3F6  0EFF               	movlw	-1
 35636  01B3F8  2AE3               	incf	plusw1,f,c
 35637                           
 35638                           ;stkvar	_i @ sp[(-1)+0]
 35639  01B3FA  0EFF               	movlw	-1
 35640  01B3FC  006F FF8C  F001    	movff	plusw1,btemp
 35641  01B402  0E0C               	movlw	12
 35642  01B404  6401               	cpfsgt	btemp^0,c
 35643  01B406  D7DE               	goto	l10364
 35644                           
 35645                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35646  01B408  52E5               	movf	postdec1,f,c
 35647  01B40A  0012               	return		;funcret
 35648  01B40C                     __end_of_TMR6_DefaultInterruptHandler:
 35649                           	opt callstack 0
 35650                           
 35651 ;; *************** function _DMA1_DMASCNT_ISR *****************
 35652 ;; Defined at:
 35653 ;;		line 126 in file "mcc_generated_files/dma1.c"
 35654 ;; Parameters:    Size  Location     Type
 35655 ;;		None
 35656 ;; Auto vars:     Size  Location     Type
 35657 ;;		None
 35658 ;; Return value:  Size  Location     Type
 35659 ;;                  1    wreg      void 
 35660 ;; Registers used:
 35661 ;;		None
 35662 ;; Tracked objects:
 35663 ;;		On entry : 0/0
 35664 ;;		On exit  : 3F/0
 35665 ;;		Unchanged: 0/0
 35666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35671 ;;Total ram usage:        0 bytes
 35672 ;; Hardware stack levels used:    1
 35673 ;; This function calls:
 35674 ;;		Nothing
 35675 ;; This function is called by:
 35676 ;;		Interrupt level 2
 35677 ;; This function uses a non-reentrant model
 35678 ;;
 35679                           
 35680                           	psect	text175
 35681  01C158                     __ptext175:
 35682                           	opt callstack 0
 35683  01C158                     _DMA1_DMASCNT_ISR:
 35684                           	opt callstack 4
 35685                           
 35686                           ;incstack = 0
 35687  01C158  EE14  F15E         	lfsr	1,___inthi_sp
 35688                           
 35689                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 35690  01C15C  0139               	movlb	57	; () banked
 35691  01C15E  91A2               	bcf	162,0,b	;volatile
 35692                           
 35693                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 35694  01C160  0100               	movlb	0	; () banked
 35695  01C162  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 35696                           
 35697                           ; BSR set to: 0
 35698  01C164  0011               	retfie		f
 35699  01C166                     __end_of_DMA1_DMASCNT_ISR:
 35700                           	opt callstack 0
 35701                           
 35702 ;; *************** function _DMA1_DMADCNT_ISR *****************
 35703 ;; Defined at:
 35704 ;;		line 133 in file "mcc_generated_files/dma1.c"
 35705 ;; Parameters:    Size  Location     Type
 35706 ;;		None
 35707 ;; Auto vars:     Size  Location     Type
 35708 ;;		None
 35709 ;; Return value:  Size  Location     Type
 35710 ;;                  1    wreg      void 
 35711 ;; Registers used:
 35712 ;;		None
 35713 ;; Tracked objects:
 35714 ;;		On entry : 0/0
 35715 ;;		On exit  : 3F/39
 35716 ;;		Unchanged: 0/0
 35717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35722 ;;Total ram usage:        0 bytes
 35723 ;; Hardware stack levels used:    1
 35724 ;; This function calls:
 35725 ;;		Nothing
 35726 ;; This function is called by:
 35727 ;;		Interrupt level 2
 35728 ;; This function uses a non-reentrant model
 35729 ;;
 35730                           
 35731                           	psect	text176
 35732  01C17C                     __ptext176:
 35733                           	opt callstack 0
 35734  01C17C                     _DMA1_DMADCNT_ISR:
 35735                           	opt callstack 4
 35736                           
 35737                           ; BSR set to: 0
 35738                           ;incstack = 0
 35739  01C17C  EE14  F15E         	lfsr	1,___inthi_sp
 35740                           
 35741                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 35742  01C180  0139               	movlb	57	; () banked
 35743  01C182  93A2               	bcf	162,1,b	;volatile
 35744                           
 35745                           ; BSR set to: 57
 35746  01C184  0011               	retfie		f
 35747  01C186                     __end_of_DMA1_DMADCNT_ISR:
 35748                           	opt callstack 0
 35749                           
 35750 ;; *************** function _DMA1_DMAA_ISR *****************
 35751 ;; Defined at:
 35752 ;;		line 143 in file "mcc_generated_files/dma1.c"
 35753 ;; Parameters:    Size  Location     Type
 35754 ;;		None
 35755 ;; Auto vars:     Size  Location     Type
 35756 ;;		None
 35757 ;; Return value:  Size  Location     Type
 35758 ;;                  1    wreg      void 
 35759 ;; Registers used:
 35760 ;;		None
 35761 ;; Tracked objects:
 35762 ;;		On entry : 0/0
 35763 ;;		On exit  : 3F/39
 35764 ;;		Unchanged: 0/0
 35765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35770 ;;Total ram usage:        0 bytes
 35771 ;; Hardware stack levels used:    1
 35772 ;; This function calls:
 35773 ;;		Nothing
 35774 ;; This function is called by:
 35775 ;;		Interrupt level 2
 35776 ;; This function uses a non-reentrant model
 35777 ;;
 35778                           
 35779                           	psect	text177
 35780  01C188                     __ptext177:
 35781                           	opt callstack 0
 35782  01C188                     _DMA1_DMAA_ISR:
 35783                           	opt callstack 4
 35784                           
 35785                           ; BSR set to: 57
 35786                           ;incstack = 0
 35787  01C188  EE14  F15E         	lfsr	1,___inthi_sp
 35788                           
 35789                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 35790  01C18C  0139               	movlb	57	; () banked
 35791  01C18E  97A2               	bcf	162,3,b	;volatile
 35792                           
 35793                           ; BSR set to: 57
 35794  01C190  0011               	retfie		f
 35795  01C192                     __end_of_DMA1_DMAA_ISR:
 35796                           	opt callstack 0
 35797                           
 35798 ;; *************** function _DMA1_DMAOR_ISR *****************
 35799 ;; Defined at:
 35800 ;;		line 154 in file "mcc_generated_files/dma1.c"
 35801 ;; Parameters:    Size  Location     Type
 35802 ;;		None
 35803 ;; Auto vars:     Size  Location     Type
 35804 ;;		None
 35805 ;; Return value:  Size  Location     Type
 35806 ;;                  1    wreg      void 
 35807 ;; Registers used:
 35808 ;;		None
 35809 ;; Tracked objects:
 35810 ;;		On entry : 0/0
 35811 ;;		On exit  : 3F/39
 35812 ;;		Unchanged: 0/0
 35813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35818 ;;Total ram usage:        0 bytes
 35819 ;; Hardware stack levels used:    1
 35820 ;; This function calls:
 35821 ;;		Nothing
 35822 ;; This function is called by:
 35823 ;;		Interrupt level 2
 35824 ;; This function uses a non-reentrant model
 35825 ;;
 35826                           
 35827                           	psect	text178
 35828  01C194                     __ptext178:
 35829                           	opt callstack 0
 35830  01C194                     _DMA1_DMAOR_ISR:
 35831                           	opt callstack 4
 35832                           
 35833                           ; BSR set to: 57
 35834                           ;incstack = 0
 35835  01C194  EE14  F15E         	lfsr	1,___inthi_sp
 35836                           
 35837                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 35838  01C198  0139               	movlb	57	; () banked
 35839  01C19A  95A2               	bcf	162,2,b	;volatile
 35840                           
 35841                           ; BSR set to: 57
 35842  01C19C  0011               	retfie		f
 35843  01C19E                     __end_of_DMA1_DMAOR_ISR:
 35844                           	opt callstack 0
 35845                           
 35846                           ;
 35847                           ; Interrupt Vector Table @ 0x8
 35848                           ;
 35849                           
 35850                           	psect	ivt0x8
 35851  000008                     __pivt0x8:
 35852                           	opt callstack 0
 35853  000008                     ivt0x8_base:
 35854                           	opt callstack 0
 35855                           
 35856                           ; Vector 0 : SWINT
 35857  000008  7078               	dw	_Default_ISR shr (0+2)
 35858                           
 35859                           ; Vector 1 : HLVD
 35860  00000A  7078               	dw	_Default_ISR shr (0+2)
 35861                           
 35862                           ; Vector 2 : OSF
 35863  00000C  7078               	dw	_Default_ISR shr (0+2)
 35864                           
 35865                           ; Vector 3 : CSW
 35866  00000E  7078               	dw	_Default_ISR shr (0+2)
 35867                           
 35868                           ; Vector 4 : NVM
 35869  000010  7078               	dw	_Default_ISR shr (0+2)
 35870                           
 35871                           ; Vector 5 : SCAN
 35872  000012  7078               	dw	_Default_ISR shr (0+2)
 35873                           
 35874                           ; Vector 6 : CRC
 35875  000014  7078               	dw	_Default_ISR shr (0+2)
 35876                           
 35877                           ; Vector 7 : IOC
 35878  000016  7078               	dw	_Default_ISR shr (0+2)
 35879                           
 35880                           ; Vector 8 : INT0
 35881  000018  7052               	dw	_INT0_ISR shr (0+2)
 35882                           
 35883                           ; Vector 9 : ZCD
 35884  00001A  7078               	dw	_Default_ISR shr (0+2)
 35885                           
 35886                           ; Vector 10 : AD
 35887  00001C  6EBD               	dw	_ADCC_ISR shr (0+2)
 35888                           
 35889                           ; Vector 11 : ADT
 35890  00001E  6BED               	dw	_ADCC_ThresholdISR shr (0+2)
 35891                           
 35892                           ; Vector 12 : CMP1
 35893  000020  7078               	dw	_Default_ISR shr (0+2)
 35894                           
 35895                           ; Vector 13 : SMT1
 35896  000022  7078               	dw	_Default_ISR shr (0+2)
 35897                           
 35898                           ; Vector 14 : SMT1PRA
 35899  000024  7078               	dw	_Default_ISR shr (0+2)
 35900                           
 35901                           ; Vector 15 : SMT1PRW
 35902  000026  7078               	dw	_Default_ISR shr (0+2)
 35903                           
 35904                           ; Vector 16 : DMA1SCNT
 35905  000028  7056               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 35906                           
 35907                           ; Vector 17 : DMA1DCNT
 35908  00002A  705F               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 35909                           
 35910                           ; Vector 18 : DMA1OR
 35911  00002C  7065               	dw	_DMA1_DMAOR_ISR shr (0+2)
 35912                           
 35913                           ; Vector 19 : DMA1A
 35914  00002E  7062               	dw	_DMA1_DMAA_ISR shr (0+2)
 35915                           
 35916                           ; Vector 20 : SPI1RX
 35917  000030  7078               	dw	_Default_ISR shr (0+2)
 35918                           
 35919                           ; Vector 21 : SPI1TX
 35920  000032  7078               	dw	_Default_ISR shr (0+2)
 35921                           
 35922                           ; Vector 22 : SPI1
 35923  000034  7078               	dw	_Default_ISR shr (0+2)
 35924                           
 35925                           ; Vector 23 : I2C1RX
 35926  000036  7078               	dw	_Default_ISR shr (0+2)
 35927                           
 35928                           ; Vector 24 : I2C1TX
 35929  000038  7078               	dw	_Default_ISR shr (0+2)
 35930                           
 35931                           ; Vector 25 : I2C1
 35932  00003A  7078               	dw	_Default_ISR shr (0+2)
 35933                           
 35934                           ; Vector 26 : I2C1E
 35935  00003C  7078               	dw	_Default_ISR shr (0+2)
 35936                           
 35937                           ; Vector 27 : U1RX
 35938  00003E  6F56               	dw	_UART1_rx_vect_isr shr (0+2)
 35939                           
 35940                           ; Vector 28 : U1TX
 35941  000040  7078               	dw	_Default_ISR shr (0+2)
 35942                           
 35943                           ; Vector 29 : U1E
 35944  000042  7078               	dw	_Default_ISR shr (0+2)
 35945                           
 35946                           ; Vector 30 : U1
 35947  000044  7078               	dw	_Default_ISR shr (0+2)
 35948                           
 35949                           ; Vector 31 : TMR0
 35950  000046  7078               	dw	_Default_ISR shr (0+2)
 35951                           
 35952                           ; Vector 32 : TMR1
 35953  000048  7078               	dw	_Default_ISR shr (0+2)
 35954                           
 35955                           ; Vector 33 : TMR1G
 35956  00004A  7078               	dw	_Default_ISR shr (0+2)
 35957                           
 35958                           ; Vector 34 : TMR2
 35959  00004C  7078               	dw	_Default_ISR shr (0+2)
 35960                           
 35961                           ; Vector 35 : CCP1
 35962  00004E  7078               	dw	_Default_ISR shr (0+2)
 35963                           
 35964                           ; Vector 36 : Undefined
 35965  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 35966                           
 35967                           ; Vector 37 : NCO1
 35968  000052  7078               	dw	_Default_ISR shr (0+2)
 35969                           
 35970                           ; Vector 38 : CWG1
 35971  000054  7078               	dw	_Default_ISR shr (0+2)
 35972                           
 35973                           ; Vector 39 : CLC1
 35974  000056  7078               	dw	_Default_ISR shr (0+2)
 35975                           
 35976                           ; Vector 40 : INT1
 35977  000058  6E15               	dw	_INT1_ISR shr (0+2)
 35978                           
 35979                           ; Vector 41 : CMP2
 35980  00005A  7078               	dw	_Default_ISR shr (0+2)
 35981                           
 35982                           ; Vector 42 : DMA2SCNT
 35983  00005C  7078               	dw	_Default_ISR shr (0+2)
 35984                           
 35985                           ; Vector 43 : DMA2DCNT
 35986  00005E  7078               	dw	_Default_ISR shr (0+2)
 35987                           
 35988                           ; Vector 44 : DMA2OR
 35989  000060  7078               	dw	_Default_ISR shr (0+2)
 35990                           
 35991                           ; Vector 45 : DMA2A
 35992  000062  7078               	dw	_Default_ISR shr (0+2)
 35993                           
 35994                           ; Vector 46 : I2C2RX
 35995  000064  7078               	dw	_Default_ISR shr (0+2)
 35996                           
 35997                           ; Vector 47 : I2C2TX
 35998  000066  7078               	dw	_Default_ISR shr (0+2)
 35999                           
 36000                           ; Vector 48 : I2C2
 36001  000068  7078               	dw	_Default_ISR shr (0+2)
 36002                           
 36003                           ; Vector 49 : I2C2E
 36004  00006A  7078               	dw	_Default_ISR shr (0+2)
 36005                           
 36006                           ; Vector 50 : U2RX
 36007  00006C  6F6A               	dw	_UART2_rx_vect_isr shr (0+2)
 36008                           
 36009                           ; Vector 51 : U2TX
 36010  00006E  6F60               	dw	_UART2_tx_vect_isr shr (0+2)
 36011                           
 36012                           ; Vector 52 : U2E
 36013  000070  7078               	dw	_Default_ISR shr (0+2)
 36014                           
 36015                           ; Vector 53 : U2
 36016  000072  7078               	dw	_Default_ISR shr (0+2)
 36017                           
 36018                           ; Vector 54 : TMR3
 36019  000074  6449               	dw	_TMR3_ISR shr (0+2)
 36020                           
 36021                           ; Vector 55 : TMR3G
 36022  000076  7078               	dw	_Default_ISR shr (0+2)
 36023                           
 36024                           ; Vector 56 : TMR4
 36025  000078  7078               	dw	_Default_ISR shr (0+2)
 36026                           
 36027                           ; Vector 57 : CCP2
 36028  00007A  7078               	dw	_Default_ISR shr (0+2)
 36029                           
 36030                           ; Vector 58 : Undefined
 36031  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 36032                           
 36033                           ; Vector 59 : CWG2
 36034  00007E  7078               	dw	_Default_ISR shr (0+2)
 36035                           
 36036                           ; Vector 60 : CLC2
 36037  000080  7078               	dw	_Default_ISR shr (0+2)
 36038                           
 36039                           ; Vector 61 : INT2
 36040  000082  7078               	dw	_Default_ISR shr (0+2)
 36041                           
 36042                           ; Vector 62 : Undefined
 36043  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 36044                           
 36045                           ; Vector 63 : Undefined
 36046  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 36047                           
 36048                           ; Vector 64 : Undefined
 36049  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 36050                           
 36051                           ; Vector 65 : Undefined
 36052  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 36053                           
 36054                           ; Vector 66 : Undefined
 36055  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 36056                           
 36057                           ; Vector 67 : Undefined
 36058  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 36059                           
 36060                           ; Vector 68 : Undefined
 36061  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 36062                           
 36063                           ; Vector 69 : Undefined
 36064  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 36065                           
 36066                           ; Vector 70 : TMR5
 36067  000094  6882               	dw	_TMR5_ISR shr (0+2)
 36068                           
 36069                           ; Vector 71 : TMR5G
 36070  000096  7078               	dw	_Default_ISR shr (0+2)
 36071                           
 36072                           ; Vector 72 : TMR6
 36073  000098  7007               	dw	_TMR6_ISR shr (0+2)
 36074                           
 36075                           ; Vector 73 : CCP3
 36076  00009A  7078               	dw	_Default_ISR shr (0+2)
 36077                           
 36078                           ; Vector 74 : CWG3
 36079  00009C  7078               	dw	_Default_ISR shr (0+2)
 36080                           
 36081                           ; Vector 75 : CLC3
 36082  00009E  7078               	dw	_Default_ISR shr (0+2)
 36083                           
 36084                           ; Vector 76 : Undefined
 36085  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 36086                           
 36087                           ; Vector 77 : Undefined
 36088  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 36089                           
 36090                           ; Vector 78 : Undefined
 36091  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 36092                           
 36093                           ; Vector 79 : Undefined
 36094  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 36095                           
 36096                           ; Vector 80 : CCP4
 36097  0000A8  7078               	dw	_Default_ISR shr (0+2)
 36098                           
 36099                           ; Vector 81 : CLC4
 36100  0000AA  7078               	dw	_Default_ISR shr (0+2)
 36101  0000AC                     ivt0x8_undefint:
 36102                           	opt callstack 0
 36103  0000AC  00FF               	reset	
 36104                           
 36105                           	psect	text179
 36106  000000                     __ptext179:
 36107                           	opt callstack 0
 36108                           
 36109                           	psect	rparam
 36110  0000                     
 36111                           	psect	temp
 36112  000001                     btemp:
 36113                           	opt callstack 0
 36114  000001                     	ds	32
 36115  0000                     wtemp0	set	btemp
 36116  0000                     wtemp1	set	btemp+2
 36117  0000                     wtemp2	set	btemp+4
 36118  0000                     wtemp3	set	btemp+6
 36119  0000                     wtemp4	set	btemp+8
 36120  0000                     wtemp5	set	btemp+10
 36121  0000                     wtemp8	set	btemp+1
 36122  0000                     ttemp0	set	btemp
 36123  0000                     ttemp1	set	btemp+3
 36124  0000                     ttemp2	set	btemp+6
 36125  0000                     ttemp3	set	btemp+9
 36126  0000                     ttemp5	set	btemp+1
 36127  0000                     ttemp6	set	btemp+4
 36128  0000                     ttemp7	set	btemp+8
 36129  0000                     ltemp0	set	btemp
 36130  0000                     ltemp1	set	btemp+4
 36131  0000                     ltemp2	set	btemp+8
 36132  0000                     lltemp0	set	btemp
 36133  0000                     lltemp1	set	btemp+8
 36134  0000                     lltemp2	set	btemp+16
 36135  0000                     lltemp3	set	btemp+24
 36136                           tosu	equ	0x3FFF
 36137                           tosh	equ	0x3FFE
 36138                           tosl	equ	0x3FFD
 36139                           stkptr	equ	0x3FFC
 36140                           pclatu	equ	0x3FFB
 36141                           pclath	equ	0x3FFA
 36142                           pcl	equ	0x3FF9
 36143                           tblptru	equ	0x3FF8
 36144                           tblptrh	equ	0x3FF7
 36145                           tblptrl	equ	0x3FF6
 36146                           tablat	equ	0x3FF5
 36147                           prodh	equ	0x3FF4
 36148                           prodl	equ	0x3FF3
 36149                           indf0	equ	0x3FEF
 36150                           postinc0	equ	0x3FEE
 36151                           postdec0	equ	0x3FED
 36152                           preinc0	equ	0x3FEC
 36153                           plusw0	equ	0x3FEB
 36154                           fsr0h	equ	0x3FEA
 36155                           fsr0l	equ	0x3FE9
 36156                           wreg	equ	0x3FE8
 36157                           indf1	equ	0x3FE7
 36158                           postinc1	equ	0x3FE6
 36159                           postdec1	equ	0x3FE5
 36160                           preinc1	equ	0x3FE4
 36161                           plusw1	equ	0x3FE3
 36162                           fsr1h	equ	0x3FE2
 36163                           fsr1l	equ	0x3FE1
 36164                           bsr	equ	0x3FE0
 36165                           indf2	equ	0x3FDF
 36166                           postinc2	equ	0x3FDE
 36167                           postdec2	equ	0x3FDD
 36168                           preinc2	equ	0x3FDC
 36169                           plusw2	equ	0x3FDB
 36170                           fsr2h	equ	0x3FDA
 36171                           fsr2l	equ	0x3FD9
 36172                           status	equ	0x3FD8


Data Sizes:
    Strings     990
    Constant    492
    Data        1064
    BSS         1299
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     239
    BANK2           256      0     231
    BANK3           256      0     198
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_101(CODE[1]), STR_63(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[3]), STR_75(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 121
		 -> ct(STACK[3]), STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), 
		 -> STR_48(CODE[19]), STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_46(CODE[9]), STR_45(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_70(CODE[4]), STR_69(CODE[4]), STR_66(CODE[4]), STR_65(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[20]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[20]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[26]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6178_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[17]), 
		 -> STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), STR_38(CODE[20]), 
		 -> STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), STR_34(CODE[20]), 
		 -> STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[17]), 
		 -> STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), STR_38(CODE[20]), 
		 -> STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), STR_34(CODE[20]), 
		 -> STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 121
		 -> STR_64(CODE[121]), STR_62(CODE[3]), STR_61(CODE[3]), STR_60(CODE[19]), 
		 -> STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), STR_56(CODE[19]), 
		 -> STR_55(CODE[19]), STR_54(CODE[24]), STR_53(CODE[15]), STR_52(CODE[15]), 
		 -> STR_51(CODE[15]), STR_50(CODE[10]), STR_49(CODE[10]), STR_48(CODE[19]), 
		 -> STR_47(CODE[19]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[17]), 
		 -> STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), STR_38(CODE[20]), 
		 -> STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), STR_34(CODE[20]), 
		 -> STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[20]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), STR_18(CODE[26]), 
		 -> STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[22]), STR_10(CODE[22]), 
		 -> STR_9(CODE[26]), STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_46(CODE[9]), STR_45(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[191]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_46(CODE[9]), 
		 -> STR_45(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[191]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4593tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_46(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_45(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[191]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  478427
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         1     1      0    1421
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0   10948
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         9     5      4     687
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1   10561
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   12957
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    9380
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    7483
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    7393
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    7393
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    7393
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    7144
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                            96    10     86   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
       ___fltol
       ___xxtofl
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fladd
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EF       7       93.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     460      58        0.0%
DATA                 0      0     96D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jan  3 04:43:02 2020

                     _SPI1_Exchange8bit BF50                __end_of_set_display_info BFC8  
                                     _C 06FF                                       _D 082A  
                                     _H 00F7                                       _P 009E  
                                     _R 0100                                       _S 0254  
                                     _T FB05                                       _V 0130  
      __end_of_TMR5_SetInterruptHandler BC8E            __end_of_start_switch_handler BF30  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC0D                  __end_of_FVR_Initialize C1C6  
                        _check_day_time 8812                             __CFG_LVP$ON 000000  
                                   l169 C0A2                                     l807 BF5E  
                                   l673 BB46                                     _GIE 01FE97  
                                   _abs B5C0                                     _pad 9C00  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize C04E  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack BE84  
                     _update_adc_result B892                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 011A                           _INT1_CallBack BE18  
                          __CFG_ZCD$OFF 000000                                    l1002 B80C  
                                  l2041 3A40                                    l2202 123A  
                                  l1340 190A                                    l1324 12A2  
                                  l2045 3D46                                    l3021 457A  
                                  l1190 B84C                                    l1350 19AC  
                                  l1342 1910                                    l2231 066A  
                                  l2320 60DE                                    l1360 1BB2  
                                  l2305 6804                                    l1361 1DDC  
                                  l2146 9C5C                                    l3123 7B90  
                       _timer3ReloadVal 00C4                                    l3061 864C  
                                  l1605 B954                                    l2166 58AC  
                                  l2246 0B1A                                    l1366 2354  
                                  l2087 73E4                                    l1721 BFC4  
                                  l2370 3336                                    l1459 B270  
                                  l3092 B600                                    l2700 8FB6  
                                  l3084 8B3E                                    l2284 74D2  
                                  l1590 ABBE                                    l1664 B8E8  
                                  l3192 98A2                                    l1681 9E20  
                                  l1673 82F2                                    l1834 8808  
                                  l1586 A8B8                                    l1674 844E  
                                  l2662 A54C                    _ADCC_StartConversion C0BC  
                                  l1783 57C8                                    l2673 9118  
                                  l1881 A134                                    l2666 9044  
                                  l3474 ADDC                                    l3459 8236  
                                  l2940 4D36                                    l1894 89A8  
                                  l1966 AC52                                    l3487 AD58  
                                  l1975 A02C                                    l2952 4BC6  
                                  l1898 89A0                                    l8020 B5F0  
                                  l8100 6796                                    l2985 52B0  
                                  l8034 8ADC                                    l8300 50EA  
                                  l8220 4DD6                                    l8140 775C  
                                  l8044 8B36                                    l8310 512C  
                                  l8214 4D96                                    l8134 7708  
                                  l8038 8AE0                                    l8062 ADCC  
                                  l8118 AD48                                    l8320 5176  
                                  l8240 4EB4                                    l8224 4DEC  
                                  l8306 5106                                    l8234 4E74  
                                  l8226 4E1C                                    l8146 77A2  
                                  l8090 6690                                    l8340 522C  
                                  l8324 517C                                    l8252 4F38  
                                  l8244 4ECA                                    l8092 66E0  
                                  l8076 6572                                    l8510 4528  
                                  l8502 44E4                                    l8406 3F16  
                                  l8334 51F0                                    l8246 4EFA  
                                  l7710 A9AE                                    l8158 7874  
                                  l8512 4542                                    l8352 5284  
                                  l8096 6728                                    l8370 3DB0  
                                  l8354 5294                                    l8346 525C  
                                  l8266 4F8C                                    l8258 4F72  
                                  l8194 7F72                                    l8186 7EC6  
                                  l8178 7E3E                                    l8380 3E26  
                                  l8292 50B8                                    l8284 5052  
                                  l8276 501C                                    l9332 7940  
                                  l7708 A98C                                    l8532 92AA  
                                  l8604 9BE6                                    l8620 A54A  
                                  l8612 A4D4                                    l7910 4C34  
                                  l7822 4942                                    l7742 461A  
                                  l8286 5064                                    l8294 50BC  
                                  l9350 7A1A                                    l9342 79D6  
                                  l9334 7962                                    l8464 438A  
                                  l8376 3DF0                                    l7824 4954  
                                  l7832 498E                                    l7808 48B0  
                                  l7760 46CA                                    l7736 45DA  
                                  l9352 7A3E                                    l8544 92E0  
                                  l8616 A516                                    l8704 8D1C  
                                  l8482 4400                                    l8458 436E  
                                  l8394 3EBE                                    l8378 3DF6  
                                  l7922 4C92                                    l7906 4C2E  
                                  l7850 4A2A                                    l7818 4922  
                                  l7770 4720                                    l7754 4698  
                                  l7746 4630                                    l8634 9092  
                                  l9354 7A7C                                    l8538 92C0  
                                  l8492 4474                                    l8468 43B0  
                                  l8396 3EC4                                    l8388 3E7E  
                                  l7932 4CBE                                    l7852 4A3C  
                                  l7860 4A78                                    l7828 495E  
                                  l7772 4750                                    l7748 4660  
                                  l8628 9002                                    l9700 52EC  
                                  l9348 7A02                                    l8716 8DEE  
                                  l8478 43FA                                    l8398 3EF4  
                                  l7766 470A                                    l8646 9116  
                                  l8638 90E0                                    l9710 543E  
                                  l9358 7AE4                                    l8566 93BA  
                                  l8558 9386                                    l8582 9B1A  
                                  l8654 B4BE                                    l8496 44BA  
                                  l7944 4D16                                    l7936 4CD6  
                                  l7872 4B50                                    l7856 4A46  
                                  l8752 B35C                                    l9368 7B80  
                                  l8680 8F22                                    l8664 8EA0  
                                  l9384 80A8                                    l8736 9600  
                                  l8728 9554                                    l7938 4CE6  
                                  l7890 4BE8                                    l7882 4BAA  
                                  l7874 4B76                                    l7778 4772  
                                  l9650 8508                                    l9642 849C  
                                  l9722 557E                                    l9714 554C  
                                  l8586 9B32                                    l8578 9B08  
                                  l8690 8F64                                    l8682 8F3E  
                                  l9386 8114                                    l7892 4BFA  
                                  l9652 8516                                    l9740 5796  
                                  l8596 9BB2                                    l9662 8578  
                                  l9654 852C                                    l9734 56FA  
                                  l9726 561A                                    l7896 4C06  
                                  l9664 8596                                    l9656 854A  
                                  l8688 8F4E                                    l9674 85CA  
                                  l9666 85AC                                    l9684 862C  
                                  l9748 57A8                                    l9854 88DC  
                                  l9694 52BC                                    l9766 BBBE  
                                  l9942 BADA                                    STR_1 FDC0  
                                  STR_2 FDAB                                    STR_3 FFD2  
                                  l9866 894E                                    STR_4 FD6C  
                                  STR_5 FD42                                    l9884 B95E  
                                  STR_6 FD42                                    STR_7 FD42  
                                  STR_8 FD57                                    STR_9 FCCE  
                                  l9976 B398                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6010 B5D4                                    u6020 8A60  
                                  u6110 AD8A                                    u6120 AD8C  
                                  u6025 8A56                                    u6210 670E  
                                  _T6PR 003F93                                    u6300 BA90  
                                  u7100 9B5E                                    u6140 650A  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  u5430 A9DC                                    u7030 930C  
                                  u6070 8B2E                                    u6150 6556  
                                  _PMD2 0039C2                                    u6215 6704  
                                  _PMD3 0039C3                                    u6320 7702  
                                  u7120 9BD2                                    u6080 8B30  
                                  u6240 B684                                    _PMD4 0039C4  
                                  u6065 8B10                                    u6145 6500  
                                  _PMD5 0039C5                                    u6410 78FE  
                                  u7050 93A6                                    u6250 B686  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u5620 4986                                    u6340 7758  
                                  u6500 7FAA                                    u7220 B4BA  
                                  u7300 8F6C                                    u5460 BA5E  
                                  u6260 AD06                                    u5437 A9CE  
                                  u5630 49A6                                    u7230 8E80  
                                  u6190 6636                                    u5470 BA60  
                                  u6270 AD08                                    u6351 7762  
                                  u6175 6590                                    u6360 779C  
                                  u6520 7FFC                                    u6440 7E38  
                                  u7160 A546                                    u7320 8F96  
                                  u7240 8E94                                    u6176 6596  
                                  u7400 9580                                    u5625 4976  
                                  u6177 65A4                                    u5730 4B98  
                                  u5570 48D6                                    u6290 BA8E  
                                  u6370 77CE                                    u7250 8ECE  
                                  u7235 8E76                                    u6195 662C  
                                  u7331 8CDC                                    u5580 48F6  
                                  u6700 516E                                    u6460 7E8E  
                                  u7340 8D16                                    u7420 9638  
                                  u5900 BA2E                                    u5581 48F0  
                                  u5830 4C82                                    u6390 78AC  
                                  u6470 7EC0                                    u7350 8D48  
                                  u5910 BA30                                    u7255 8EC4  
                                  u9104 52D6                                    u7440 B338  
                                  u6480 7EF2                                    u9105 52D0  
                                  u5770 4C0C                                    u5690 4A6E  
                                  u9210 565E                                    u7450 B358  
                                  u7370 8E26                                    u5835 4C72  
                                  u5860 4CA2                                    u6740 51CA  
                                  u6660 50E4                                    u9060 85C0  
                                  u9204 5656                                    u9124 5306  
                                  u9205 5650                                    u9125 5300  
                                  u5790 4C26                                    u5598 48F8  
                                  u6750 5204                                    u7390 954E  
                                  u5695 4A5E                                    u6920 43F2  
                                  u6760 5240                                    u9144 5328  
                                  u6745 51BA                                    u9145 5322  
                                  u6850 3F04                                    u9164 5566  
                                  u8620 8142                                    u9165 5560  
                                  u8550 79D2                                    u9440 B02C  
                                  u6960 444E                                    u9184 5634  
                                  u6865 4098                                    u9185 562E  
                                  u6970 4488                                    u8570 7B2A  
                                  u6875 4160                                    u8627 8134  
                                  u9515 C0E8                                    u6980 44CE  
                                  u8580 7B2C                                    u8660 81DC  
                                  u9516 C0EA                                    u6965 443E  
                                  u6885 4328                                    u9525 C0D8  
                                  u8670 820A                                    u9526 C0DA  
                                  u9560 866C                                    u9465 B060  
                                  u9385 B6C0                                    u8665 81D6  
                                  u9466 B062                                    u9458 B02E  
                                  u9650 BEFA                                    _PLLR 01CEE0  
                                  u8667 81C8                                    u8677 81FC  
                                  u9656 BEFC                                    u9808 AC40  
                                  u9760 ABF8                                    u9790 AC3E  
                                  u9778 ABFA                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR BB20  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FC1D                                    _cp_l FC19  
                                  _atoi 7926                                    _ctoa AC56  
                                  _main 1244                                    _dtoa 57CE  
                                  _nanf B14A                                    _seed 00CF  
                                  _prec 003C                                    _nout 00C0  
                                  _spin FB95                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 73E8                                    btemp 0001  
                                  _utoa 67C0                                    _xtoa 609A  
                __end_of_check_adc_scan C1AE                           ___fpclassifyf 89B2  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 00C8  
             __end_of_SPI1_Exchange8bit BF6E               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize B578             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr BD58                            ___param_bank 000000  
                __end_of_check_day_time 89B2                      ?_UART1_rx_vect_isr 0021  
                      __end_of_INT0_ISR C156                        __end_of_INT1_ISR B892  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma A8C0  
         __end_of_OSCILLATOR_Initialize C0A8                                   l11010 73AC  
                                 l11012 73D4                                   l11022 A55C  
                                 l12010 5BC8                                   l11026 A59A  
                                 l11116 B7CA                                   l11070 608C  
                                 l12014 5C04                                   l12102 04D2  
                                 l10440 86CE                                   l12120 058E  
                                 l12040 00F0                                   l10520 B8B2  
                                 l12210 0C32                                   l12114 0554  
                                 l10364 B3C4                                   l10436 86BA  
                                 l10428 868E                                   l12060 0216  
                                 l12028 00AC                                   l13012 82C2  
                                 l11076 9F3A                                   l11182 AE2E  
                                 l10550 93EE                                   l12310 119A  
                                 l12222 0CBA                                   l12230 0D24  
                                 l12134 05F6                                   l12126 0594  
                                 l12118 057C                                   l12062 022C  
                                 l10368 B3F6                                   l11176 AE1E  
                                 l10552 93FE                                   l12152 06B8  
                                 l12136 0602                                   l12048 0146  
                                 l12400 6A46                                   l11088 9F96  
                                 l10570 9484                                   l10554 9404  
                                 l10562 9420                                   l12162 077A  
                                 l12058 01EA                                   l12066 0258  
                                 l12330 7454                                   l13026 83EA  
                                 l11098 A006                                   l13202 1914  
                                 l10556 940A                                   l10564 944C  
                                 l12172 0926                                   l12156 06F0  
                                 l12092 0396                                   l12076 02FC  
                                 l12084 032A                                   l13204 1942  
                                 l13132 146E                                   l10742 BFE0  
                                 l10558 9418                                   l10478 B8FE  
                                 l12238 0D90                                   l12246 0EA2  
                                 l12350 7544                                   l12422 60CE  
                                 l10590 AC0C                                   l13310 22E6  
                                 l13302 22BC                                   l12272 0FD6  
                                 l12096 0406                                   l12360 75FE  
                                 l12520 2476                                   l10920 A1F6  
                                 l13320 232A                                   l13224 199C  
                                 l13216 1976                                   l13080 12AA  
                                 l10754 BB42                                   l10578 94FE  
                                 l10906 8CA8                                   l12274 0FF0  
                                 l12258 0F3A                                   l12194 0B12  
                                 l12186 0A48                                   l12098 0470  
                                 l12354 7574                                   l12346 7508  
                                 l12442 61A4                                   l12434 6144  
                                 l12522 24B0                                   l10682 9AAE  
                                 l10914 A150                                   l13330 2380  
                                 l13234 19BE                                   l13082 12BC  
                                 l13074 1284                                   l10780 B7F4  
                                 l12284 1092                                   l12196 0B34  
                                 l12364 762A                                   l12428 6108  
                                 l12604 2B96                                   l12524 24C6  
                                 l13316 2304                                   l13308 22CE  
                                 l13180 16E2                                   l13076 128C  
                                 PRLOCK 0039EF                                   l11910 9C66  
                                 l12294 10E2                                   l12390 6850  
                                 l12382 67F4                                   l12542 25F8  
                                 l12702 32E2                                   l10942 7132  
                                 l10678 9A0A                                   l13262 2060  
                                 l13246 1ABE                                   l11840 97B8  
                                 l11904 9C2C                                   l12368 7666  
                                 l12608 2BCA                                   l12544 2632  
                                 l12720 A918                                   l12800 9D38  
                                 l10952 7176                                   l10944 7142  
                                 l13272 21DC                                   l13192 17BC  
                                 l11914 9CA2                                   l12482 640A  
                                 l12458 629A                                   l12466 6320  
                                 l12562 27AC                                   l12546 2648  
                                 l10962 71AC                                   l10946 7146  
                                 l13258 1FFE                                   l13274 2208  
                                 l11852 AA18                                   l11908 9C54  
                                 l11924 A406                                   l12628 2D2A  
                                 l12580 2930                                   l12572 2844  
                                 l12740 A796                                   l10980 722E  
                                 l10972 71E0                                   l10956 7182  
                                 l13292 227E                                   l12902 3D3E  
                                 l10798 B834                                   l11918 9CEC  
                                 l11942 AC74                                   l12638 2DD8  
                                 l12742 A7D8                                   l11856 AA56  
                                 l11944 ACA0                                   l12672 312C  
                                 l12648 2EFA                                   l12584 2984  
                                 l11872 6EC4                                   l10968 71D4  
                                 l13288 225A                                   l12658 2FB0  
                                 l12770 A632                                   l12852 34EA  
                                 l12844 342A                                   l11980 5904  
                                 l12692 32BE                                   l12596 2ADE  
                                 l11892 709A                                   l11884 6FEC  
                                 l12772 A63A                                   l12764 A612  
                                 l10988 7254                                   l12862 363C  
                                 l11990 5B16                                   l12686 3264  
                                 l11878 6F82                                   l12766 A620  
                                 l12950 995E                                   l12872 3868  
                                 l12856 3556                                   l12848 347E  
                                 l11976 58E6                                   l11968 589C  
                                 l12696 32C2                                   l12768 A628  
                                 l12776 A640                                   l12890 3A72  
                                 l12882 39A8                                   l12866 3690  
                                 l12778 A66C                                   l12876 38E2  
                                 l12886 3A50                         __end_of___aodiv 7926  
                          _Volts_to_SOC 99CE                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4D40  
                                 _ADCLK 003EFF                         __end_of___aomod 8020  
                                 _ADPCH 003EF1                         __end_of___fldiv 52BA  
                                 _ADREF 003EFD                         __end_of___awdiv 93D4  
                       __end_of___flneg B4E8                                   STR_10 FD16  
                                 STR_11 FD2C                                   STR_12 FD81  
                                 STR_21 FF83                                   STR_13 FD96  
                                 STR_30 FF5D                                   STR_22 FE77  
                                 STR_14 FDEA                                   STR_23 FF37  
                                 STR_31 FEC5                                   STR_15 FDD5  
                                 STR_40 FF94                                   STR_24 FF24  
                                 STR_32 FED8                                   STR_16 FD00  
                                 STR_41 FF94                                   STR_33 FEEB  
                                 STR_25 FE27                                   STR_17 FC9A  
                         __CFG_WDTE$OFF 000000                                   STR_50 FFBF  
                                 STR_42 FF83                                   STR_26 FF11  
                                 STR_34 FE3B                                   STR_18 FCB4  
                                 STR_43 FFFC                                   STR_51 FFA4  
                                 STR_19 FF94                                   STR_27 FEFE  
                                 STR_35 FE8B                                   STR_52 FFA4  
                                 STR_44 FFF9                                   STR_28 FF70  
                                 STR_36 FE13                         __end_of___awmod 9C00  
                                 STR_53 FFA4                                   STR_45 FFB3  
                                 STR_29 FF4A                                   STR_37 FDFF  
                                 STR_70 FFE3                                   STR_46 FFC9  
                                 STR_38 FE4F                                   STR_54 FCE8  
                                 STR_63 FC99                                   STR_47 FE9F  
                                 STR_39 FE63                                   STR_48 FE9F  
                                 STR_56 FEB2                                   STR_64 FC21  
                                 _ADRPT 003EEC                                   STR_73 FFEA  
                                 STR_65 FFD7                                   STR_49 FFBF  
                                 STR_82 FFED                                   STR_66 FFDF  
                                 STR_75 FFEA                                   STR_84 FFED  
                                 STR_92 FFF6                                   STR_77 FFF0  
                                 STR_69 FFDB                                   STR_94 FFF6  
                                 STR_79 FFF0                                   STR_87 FFF3  
                                 STR_96 FFE7                         __end_of___flmul 4584  
                                 STR_89 FFF3                                   STR_98 FFE7  
                       __end_of___flsub B64C                         __end_of___fltol 8FC0  
                                 u11000 5882                                   u11020 58D2  
                                 u11030 5B2A                                   u11200 02A6  
                                 u11041 5B5A                                   u11050 5B70  
                                 u11210 02A8                                   u11130 00DA  
                                 u11051 5B6E                                   u11060 5B84  
                                 u12020 250E                                   u11070 5B88  
                                 u11310 05C6                                   u12030 2510  
                                 u11160 0194                                   u12200 2C86  
                                 u12040 2536                                   u11090 5B9E  
                                 u11250 050E                                   u11170 0196  
                       __end_of___lodiv 8E4E                                   u11420 0A18  
                                 u12140 2898                                   u12300 A8F8  
                                 u11350 0648                                   u12070 2690  
                                 u11600 116E                                   u11520 0EE4  
                                 u11280 0562                                   u12160 2A0C  
                                 u12080 2692                                   u11610 1170  
                                 u12090 26B8                                   _U1P1H 003DED  
                                 u10900 A480                                   u12260 3004  
                                 _U1P2H 003DEF                                   u12190 2C84  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u11720 768C  
                                 u11800 6AB6                                   u12280 31B4  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u10770 97AC                                   u10850 710E  
                                 _U1P3L 003DF0                                   u10907 A472  
                                 u11580 10B8                                   u11740 67DA  
                                 u11900 6252                                   u11820 60B4  
                                 u10790 9828                                   u10950 57FE  
                                 u12630 1594                                   _U2P1L 003DD4  
                                 u10960 5800                                   u11680 756A  
                                 u11920 631C                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u11690 75B0  
                                 u11930 633C                                   u11850 619C  
                                 u12570 843A                                   u12650 17EA  
                                 _U2P3L 003DD8                                   u11771 6A88  
                                 u10980 5870                                   u11780 6A9E  
                                 u11860 61F0                                   u12580 843C  
                                 u11781 6A9C                                   u11941 636C  
                                 u11925 62FE                                   u11790 6AB2  
                                 u11950 6382                                   u11870 61F2  
                                 u12750 224A                                   u11951 6380  
                                 _T5CLK 003F9D                                   u11960 6396  
                                 u12760 2264                                   u11697 75A2  
                       __end_of___lomod 965A                                   u11970 639A  
                                 u11890 6250                                   u12770 2276  
                                 u12756 224C                                   _T2HLT 003FAD  
                                 u12766 2266                                   u12776 2278  
                                 _T5CON 003F9A                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 00AB                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0026                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result B8CC  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR C1E0                 __size_of_clear_adc_scan 0006  
     __size_of_TMR3_SetInterruptHandler 0028       __size_of_TMR6_SetInterruptHandler 0028  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 9286  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR A2EA                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR C036                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                                   _fabsf A6BC  
                                 _flags 003E                __size_of_calc_model_data 044C  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
          __end_of_get_ac_charger_relay C146                                   _fputc 9788  
            __size_of_send_lcd_cmd_long 0040                         __end_of_isalpha B690  
                                 _fputs AA08                         __end_of_isdigit BA9A  
                       __end_of_ivln2_h FC19                      __CFG_MCLRE$EXTMCLR 000000  
                                 _srand B972                                   _width 003A  
                                 _putch C002            __end_of_set_ac_charger_relay C10E  
                       __end_of_islower BA3A                         __end_of_isspace B36C  
              _INT1_SetInterruptHandler BCB6                         __end_of_isupper BA6A  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0001                                   ttemp1 0004  
                                 ttemp2 0007                                   ttemp3 000A  
                                 ttemp5 0002                                   ttemp6 0005  
                                 ttemp7 0009                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler BC3E             _UART1_SetRxInterruptHandler BC16  
                                 wtemp0 0001                                   wtemp1 0003  
                                 wtemp2 0005                                   wtemp3 0007  
                                 wtemp4 0009                                   wtemp5 000B  
                                 wtemp8 0002                         __end_of_sprintf 9F2E  
                       __end_of_tolower ADE6                         __end_of_strncmp 8240  
                       __end_of_toupper AD62               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr BD80                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize B530                   __end_of_ringBufS_init BB9E  
                       __initialization A2EA                       _UART2_rx_vect_isr BDA8  
                          __end_of_cp_h FC21                            __end_of_cp_l FC1D  
                          __end_of_atoi 7B9A                            __end_of_ctoa ACDE  
                          __end_of_main 2394                            __end_of_dtoa 5C4E  
                          __end_of_nanf B1AC                            __end_of_spin FC0D  
                          __end_of_stoa 76A6                            __end_of_utoa 6B00  
                          __end_of_xtoa 6454                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize C066  
                 __end_of_send_lcd_data BDF4                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button B7D2                _TMR5_SetInterruptHandler BC66  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 00A2                       _port_data_dma_ptr C170  
                    esr_check@esr_state 0040                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize BB4C  
                       _PWM8_Initialize C07C                        _UART1_Initialize B4E8  
                     _UART2_tx_vect_isr BD80                      _UART2_Transmit_ISR BB20  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan B084  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue B690  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0021                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                i1l1019 A29A                                  _RB6PPS 003A0E  
                                i1l1207 91EE                    _start_switch_handler BF10  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize B5C0                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright C12A  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u924_25 C108                                  u924_26 C10A  
                                u950_20 B90C                                  u950_26 B90E  
                                u943_20 C142                                  u929_20 8868  
                  __size_of_hid_display 0102                                  u973_24 94F4  
                                u973_25 94F0                                  u966_28 93F4  
                                u969_20 9414                                  u969_21 940E  
                                u998_48 BE94                        __end_of___xxtofl 8656  
 __end_of_ADCC_DischargeSampleCapacitor C1A6  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor C19E                __end_of_send_lcd_cmd_dma BF8C  
                       _TMR3_WriteTimer B812                     ??_UART2_tx_vect_isr 0026  
             __end_of_UART2_rx_vect_isr BDD0              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize C166                        _UART2_Initialize B1AC  
                                _WaitMs B93C                         _conv_raw_result 52BA  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 8FC0                                  ___fleq A492  
                     _ADCC_ThresholdISR AFB4                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush AB34                                  _efgtoa 0000  
                                _floorf 6454                      ?_ADCC_ThresholdISR 0021  
                                _memset 6E2C                    __size_of_help_button 0038  
                                clear_0 A35C                                  clear_1 A370  
                                clear_2 A382                                  clear_3 A38E  
                                clear_4 A39A                                  clear_5 A3A6  
             __end_of_port_data_dma_ptr C17A                                  _printf B0E8  
                    _eaDogM_WriteString A8C0                                  _strcpy A3BE  
                             ?_ADCC_ISR 0021                                  _strlen A966  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 04FF  
                       _ADCC_Initialize AF4A                          _PMD_Initialize C0A8  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr BDA8  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0021                  __end_of_start_adc_scan B0E8  
                          __mediumconst FA34                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay B2C0                        __end_of_spinners A206  
                      __end_of_vfprintf A816                              _StartTimer B752  
                    __size_of___asfladd 0078           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize B578                       _SYSTEM_Initialize B456  
                            __accesstop 0060                 __end_of__initialization A3B8  
                             ?_INT0_ISR 0021                               ?_INT1_ISR 0021  
                  __end_of_display_help C1BE                    __end_of_display_info C1B6  
             __end_of_CLKREF_Initialize C170                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer B7D2  
                 _set_temp_display_help C0EE                        _clear_hid_pflags BDF4  
                 __end_of_TMR3_CallBack BE84               __end_of_ADCC_ThresholdISR B01E  
                    __size_of_calc_bsoc 0A1A                  __end_of_ringBufS_flush ABC6  
                        __pcstackCOMRAM 0021                              ___inthi_sp 115E  
                            ___intlo_sp 18AF                            __pidataBANK0 C10E  
                          __pidataBANK1 A030             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf A76A                               ?_TMR3_ISR 0021  
                             ?_TMR5_ISR 0021                               ?_TMR6_ISR 0021  
                        ivt0x8_undefint 00AC                           __end_of_fputc 98AC  
                         __end_of_fputs AAA0                    _get_ac_charger_relay C138  
                         __end_of_srand B9A6                   __end_of_TMR5_CallBack BE60  
                         __end_of_putch C01C                    _set_ac_charger_relay C0FE  
               __end_of_PWM8_Initialize C092                 __end_of_TMR6_Initialize BB76  
                     _adc_int_t_handler ADE6                  __end_of_PMD_Initialize C0BC  
                            __end_of_bp FC15                              ??_ADCC_ISR 0021  
                 __end_of_TMR6_CallBack BECC             __size_of_EXT_INT_Initialize 0034  
              calc_bsoc@log_update_wait 0041                  __size_of_calc_ror_data 0186  
                         _DMA1_DMAA_ISR C188                   TMR3_ISR@CountCallBack 00C2  
                        _clear_adc_scan C1C6                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 00B7  
             __end_of_SYSTEM_Initialize B4A0                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer B852  
                            __pbssBANK0 0060                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            _check_help 8240                 __end_of_conv_raw_result 57CE  
                    __size_of_esr_check 02D0                   _INT0_InterruptHandler 00BD  
                            ??_INT0_ISR 0021                              ??_INT1_ISR 0027  
                     __end_of_TimerDone BBC6                        _DMA1_DMADCNT_ISR C17C  
                    __size_of_init_bsoc 0246              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma B9DA                   __end_of_wait_lcd_done C002  
      __end_of_TMR3_SetInterruptHandler BCB6                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler BC66                              ??_TMR3_ISR 00D7  
               __end_of_ADCC_Initialize AFB4                              ??_TMR5_ISR 002B  
             __end_of_adc_int_t_handler AE68                              ??_TMR6_ISR 0026  
                     __end_of___asfladd AEE0                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler BD2E  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler BD06  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR BFC8  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan C1CC                                 u1000_28 BE28  
                               u1006_48 BEB8                                 u1009_28 BE4C  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR C158  
                               u1039_44 AE4E                                 u1039_45 AE48  
                               _U1ERRIE 003DFA                                 u1242_20 3998  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               u1244_20 3A62                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 u1249_28 BE70  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0021  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 3D5A  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch BAC8  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer B812  
               __size_of_switch_handler 0146                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one C0EE              __end_of_set_load_relay_two C0DE  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 8B48                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim C036                                 __Lparam 0000  
              __end_of_UART1_Initialize B530                       __end_of_hid_input AC56  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 76A6  
                               ___fladd 4584                                 ___aomod 7DE0  
                               ___fldiv 4D40                                 ___awdiv 9286  
                               ___flneg B4A0                                 ___awmod 9AE8  
                               ___flmul 3D5A                                 ___flsub B606  
                               ___fltol 8E4E                                 ___lodiv 8CCE  
                               ___lomod 951A               __end_of_UART1_Receive_ISR BFE6  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 99CE                                 __pcinit A2EA  
              __end_of_mode_lamp_bright C138                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand C11C  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 B20C                                 __ptext2 BF10  
                               __ptext3 B972                                 __ptext4 A120  
                               __ptext5 B9DA                                 __ptext6 98AC  
                               __ptext7 BDD0                                 __ptext8 B6D2  
                               __ptext9 B712                       __end_of_esr_check 73E8  
                     _UART2_Receive_ISR BF30                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize C092  
                          __size_of_abs 0046                                 us642999 7910  
                          __size_of_pad 0114                                 us653999 800E  
                     __end_of_init_bsoc 7DE0                                 _isalpha B64C  
                               us743999 964A                                 _isdigit BA6A  
                               _ivln2_h FC15                                 us738999 8E38  
                             _T3CONbits 003FA6                                 _mode_sw 00CA  
                     __end_of_lp_filter 8812                                 _islower BA0A  
                               _isspace B31A                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize B20C  
                               _isupper BA3A              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 9E24                                 _tolower AD62  
                 __size_of_display_help 0008                                 _utctime 0096  
                 __size_of_display_info 0008                                 _strncmp 8020  
                               _toupper ACDE                    end_of_initialization A3B8  
             __size_of_convert_adc_data 00B8                      _check_enter_button B792  
                             i1u1259_20 91E4     __end_of_UART2_SetRxInterruptHandler BC16  
           _UART2_SetRxInterruptHandler BBEE                               i2u1050_48 BDBC  
                             i2u1042_48 BB0C                               i2u1044_48 AFEA  
                             i2u1044_49 AFFE                               i2u1046_48 BD6C  
                             i2u1048_48 BD94                 check_day_time@day_delay 0042  
                     __end_of_set_vterm BFAA                       __end_of_vfpfcnvrt 3340  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 0082  
                   __size_of_StartTimer 0040                       __end_of_start_lcd C1D8  
             __end_of_UART2_Receive_ISR BF50                          wdtdelay@dcount 009A  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0027  
                 _INT1_InterruptHandler 00BA                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc C1DE                _TMR3_SetInterruptHandler BC8E  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler BC3E  
                          _display_help C1B6                   _TMR5_InterruptHandler 00A5  
                          _display_info C1AE    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags BE18                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler BD56             _ADCC_SetADIInterruptHandler BD2E  
                            _update_lcd 9D14                         _calc_model_data 5C4E  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B20C                         _DMA1_Initialize AEE0  
                            _start_bsoc BEEE                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize C066                   __end_of_get_vterm_ptr BAC8  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs B972            __end_of_INTERRUPT_Initialize B084  
                            _vterm_dump 965A                          __end_of___flge 9122  
                        __end_of___fleq A556    __end_of_INT0_DefaultInterruptHandler C1EC  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler C1EA  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize B2C0  
                         __pidataBIGRAM 6B00                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 67C0             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 7118  
                        __end_of_printf B14A                __end_of_DMA1_DMADCNT_ISR C186  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack BEA8  
                        __end_of_strcpy A492                          __end_of_strlen AA08  
                   start_initialization A2EA    __end_of_TMR5_DefaultInterruptHandler B93C  
 __size_of_TMR5_DefaultInterruptHandler 0038            _TMR5_DefaultInterruptHandler B904  
       __size_of_PIN_MANAGER_Initialize 0094                             __end_of_abs B606  
                 __end_of_INT1_CallBack BE3C               __size_of_set_display_info 001E  
                           __end_of_pad 9D14                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd B752                          _switch_handler 93D4  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 8B48  
                         _uart2RxBuffer 0400                __end_of_DMA1_DMASCNT_ISR C166  
                         _uart2TxBuffer 0300                          _DMA1_DMAOR_ISR C194  
                   __end_of_hid_display A030              __end_of_send_port_data_dma B3BE  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 0122  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone BB9E  
                         _ringBufS_init BB76                             __pdataBANK0 00F0  
                           __pdataBANK1 0100              __size_of_UART2_Receive_ISR 0020  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize B9DA  
               __end_of_calc_model_data 609A                           _send_lcd_data BDD0  
                   __end_of_help_button B904         __end_of_eaDogM_WriteStringAtPos A6BC  
                   __end_of_BVSOC_TABLE FB05                               ___asfladd AE68  
                  calc_model_data@bcror 008E                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize AF4A                    calc_model_data@bvror 0092  
                           __pbssCOMRAM 003A        __end_of_INT0_SetInterruptHandler BD06  
                         __pcstackBANK0 00D7                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 951A  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize C07C  
              _UART1_RxInterruptHandler 00B1                _UART2_TxInterruptHandler 00B4  
                             __end_of_T FB95                        _convert_adc_data A556  
                             _calc_bsoc 3340               __size_of_ringBufS_put_dma 00AA  
                          _init_display 98AC                  __end_of_DMA1_DMAOR_ISR C19E  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A8  
                    calc_ror_data@bcror 0086                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize B31A                      calc_ror_data@bvror 008A  
                _PIN_MANAGER_Initialize AAA0                __size_of_TMR3_Initialize 0048  
                  __end_of_wait_lcd_set C1D2                           __pmediumconst FA34  
                             __ptext100 4D40                               __ptext101 8FC0  
                             __ptext110 B1AC                               __ptext102 5C4E  
                             __ptext111 BBC6                               __ptext103 C1D8  
                             __ptext120 BC8E                               __ptext112 BBEE  
                             __ptext104 BEEE                               __ptext121 C04E  
                             __ptext113 B4E8                               __ptext105 8656  
                             __ptext130 BCB6                               __ptext122 C066  
                             __ptext114 BC16                               __ptext106 B606  
                             __ptext131 BCDE                               __ptext123 C07C  
                             __ptext115 BB4C                               __ptext107 4584  
                             __ptext140 C1E6                               __ptext132 B2C0  
                             __ptext124 C0A8                               __ptext116 BC3E  
                             __ptext108 3D5A                               __ptext141 93D4  
                             __ptext133 AEE0                               __ptext125 AAA0  
                             __ptext117 B530                               __ptext109 B456  
                             __ptext150 B812                               __ptext142 A208  
                             __ptext134 C166                               __ptext126 C092  
                             __ptext118 BC66                               __ptext151 BE60  
                             __ptext143 B7D2                               __ptext135 AF4A  
                             __ptext127 B01E                               __ptext119 B578  
                             __ptext160 C1E0                               __ptext152 C1E8  
                             __ptext144 BE3C                               __ptext136 BD06  
                             __ptext128 C1BE                               __ptext161 BAF4  
                             __ptext153 3340                               __ptext145 B904  
                             __ptext137 BD2E                               __ptext129 B9A6  
                             __ptext170 BDA8                               __ptext162 ADE6  
                             __ptext154 B36C                               __ptext146 8812  
                             __ptext138 B854                               __ptext171 BF30  
                             __ptext163 C1EC                               __ptext155 C170  
                             __ptext147 C0FE                               __ptext139 BE18  
                             __ptext172 C01C                               __ptext164 C1EE  
                             __ptext156 AE68                               __ptext148 C138  
                             __ptext173 BEA8                               __ptext165 AFB4  
                             __ptext157 C148                               __ptext149 9124  
                             __ptext174 B3BE                               __ptext166 BD58  
                             __ptext158 BE84                               __ptext175 C158  
                             __ptext167 BFC8                               __ptext159 C1EA  
                             __ptext176 C17C                               __ptext168 BD80  
                             __ptext177 C188                               __ptext169 BB20  
                             __ptext178 C194                               __ptext179 0000  
                             _hid_input ABC6                      __end_of_StartTimer B792  
                    _set_load_relay_one C0DE                      _set_load_relay_two C0CE  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00E6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR BAF4  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 007E  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 7118                 __size_of_get_raw_result 0022  
                        __size_of_fabsf 00AE                               _init_bsoc 7B9A  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 8656                             _hid_display 9F2E  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize B01E                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0021  
                              _INT0_ISR C148                                _INT1_ISR B854  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 027D                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                            _SPI1CON0bits 003D14  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack BE60  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm BF8C  
                   __size_of_update_lcd 0110                             _help_button B8CC  
                              _TMR3_ISR 9124                             _BVSOC_TABLE FA35  
                              _TMR5_ISR A208                                _TMR6_ISR C01C  
                             _port_data 04FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 2394                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack BE3C  
                            _ADCON0bits 003EF8                      __end_of_check_help 8452  
                             _start_lcd C1D2                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack BEA8  
                 __size_of_send_lcd_cmd 0040       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc C1D8                        _set_display_info BFAA  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 A2FE  
                             copy_data1 A324                               copy_data2 A346  
              _INT0_SetInterruptHandler BCDE                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler BBEE             _UART2_SetTxInterruptHandler BBC6  
                          _uart1RxCount 00CE                            _uart2RxCount 00CB  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 00AE  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 0514  
                         _wait_lcd_done BFE6                            _send_lcd_cmd B712  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler C1EE                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch BAF4  
               __size_of_check_day_time 01A0                   __end_of_DMA1_DMAA_ISR C192  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 8452  
                     ?_DMA1_DMADCNT_ISR 0021             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand C12A  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0027  
                              __ptext10 BF50                                __ptext11 BB76  
                              __ptext20 C0BC                                __ptext12 7B9A  
                              __ptext21 C19E                                __ptext13 99CE  
                              __ptext30 965A                                __ptext22 C1C6  
                              __ptext14 9F2E                                __ptext31 9E24  
                              __ptext23 C1A6                                __ptext15 ABC6  
                              __ptext40 A8C0                                __ptext32 BA9A  
                              __ptext24 C0CE                                __ptext16 BAC8  
                              __ptext41 C1CC                                __ptext33 B93C  
                              __ptext25 C0DE                                __ptext17 7118  
                              __ptext50 BA0A                                __ptext42 C1D2  
                              __ptext34 9D14                                __ptext26 C11C  
                              __ptext18 B892                                __ptext51 B64C  
                              __ptext43 AB34                                __ptext35 A60E  
                              __ptext27 A556                                __ptext19 B084  
                              __ptext60 A3BE                                __ptext52 67C0  
                              __ptext44 6E2C                                __ptext36 BF6E  
                              __ptext28 BDF4                                __ptext61 6454  
                              __ptext53 951A                                __ptext45 B0E8  
                              __ptext37 BFE6                                __ptext29 8240  
                              __ptext70 7DE0                                __ptext62 89B2  
                              __ptext54 8CCE                                __ptext46 A76A  
                              __ptext38 B266                                __ptext71 76A6  
                              __ptext63 8E4E                                __ptext55 8020  
                              __ptext47 2394                                __ptext39 B40C  
                              __ptext80 B31A                                __ptext72 AC56  
                              __ptext64 B4A0                                __ptext56 73E8  
                              __ptext48 609A                                __ptext81 BA6A  
                              __ptext73 9C00                                __ptext65 A492  
                              __ptext57 0000                                __ptext49 ACDE  
                              __ptext90 B752                                __ptext82 BF8C  
                              __ptext74 A966                                __ptext66 9AE8  
                              __ptext58 AD62                                __ptext91 C1AE  
                              __ptext83 C0EE                                __ptext75 AA08  
                              __ptext67 9286                                __ptext59 BA3A  
                              __ptext92 C1B6                                __ptext84 BFAA  
                              __ptext76 9788                                __ptext68 57CE  
                              __ptext93 B792                                __ptext85 C036  
                              __ptext77 C002                                __ptext69 B5C0  
                              __ptext94 8B48                                __ptext86 C12A  
                              __ptext78 A816                                __ptext95 A6BC  
                              __ptext87 B690                                __ptext79 7926  
                              __ptext96 52BA                                __ptext88 B8CC  
                              __ptext97 B14A                                __ptext89 BB9E  
                              __ptext98 BECC                                __ptext99 8452  
                      __size_of_isupper 0030                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1163999 73FA  
                              us1094999 57E8                                us1175999 6826  
                              us1184999 611A                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma A816  
                  __end_of_Volts_to_SOC 9AE8                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 1150  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0021  
                 __end_of_init_port_dma BA0A                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00AE  
                             stoa@F1166 00F0                      ??_DMA1_DMASCNT_ISR 0027  
          __end_of_ADCC_StartConversion C0CE                                _spi_link 0060  
                              _wdtdelay B266              __end_of_UART2_Transmit_ISR BB4C  
                              _spinners A120                                _vfprintf A76A  
              __end_of_convert_adc_data A60E              __end_of_PWM8_LoadDutyValue B6D2  
  __end_of_TMR3_DefaultInterruptHandler C1EA   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler C1E8    __end_of_INT1_DefaultInterruptHandler C1E8  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler C1E6  
                    _send_port_data_dma B36C                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0043                             _uart1RxTail 0046  
                        _get_raw_result BECC                             _uart2TxHead 00CD  
                           _uart2RxTail 00CC                               spinners@s 0074  
                           _uart2TxTail 0045                            _wait_lcd_set C1CC  
                    _EXT_INT_Initialize B9A6    __end_of_TMR6_DefaultInterruptHandler B40C  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler B3BE  
                     _send_lcd_data_dma B40C    __end_of_ADCC_DefaultInterruptHandler C1EE  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler C1EC  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long B6D2          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help C0FE                   __end_of_calc_ror_data 8CCE  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString A966  
                 __end_of_mode_lamp_dim C04E                 __end_of_adc_int_handler C1F0  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 9E24                  _uart2TxBufferRemaining 0044  
                    __end_of_static_soc B266                      __end_of_start_bsoc BF10  
                        _FVR_Initialize C1BE                  __end_of_get_raw_result BEEE  
                      _send_lcd_cmd_dma BF6E                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 00C6        __end_of_INT1_SetInterruptHandler BCDE  
             __size_of_UART1_Initialize 0048               __end_of_send_lcd_data_dma B456  
                      ??_DMA1_DMAOR_ISR 0027               __end_of_send_lcd_cmd_long B712  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR C1E6  
        __end_of_PIN_MANAGER_Initialize AB34               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 9788                 _eaDogM_WriteStringAtPos A60E  
                         _get_vterm_ptr BA9A                          _check_adc_scan C1A6  
             __size_of_UART2_Initialize 0060  
