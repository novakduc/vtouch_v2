

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb  7 22:16:41 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=2
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=2
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=2
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1,inline
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1,inline
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=4,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=4,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=4,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1,group=1
   192                           	psect	text170,global,reloc=4,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=4,class=CODE,delta=1
   196                           	psect	text174,global,reloc=4,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1
   200                           	psect	text178,global,reloc=4,class=CODE,delta=1
   201                           	psect	text179,global,reloc=4,class=CODE,delta=1
   202                           	psect	text180,global,reloc=2,class=CODE,delta=1
   203                           	psect	text181,global,reloc=4,class=CODE,delta=1
   204                           	psect	text182,global,reloc=2,class=CODE,delta=1
   205                           	psect	text183,global,reloc=4,class=CODE,delta=1
   206                           	psect	text184,global,reloc=2,class=CODE,delta=1
   207                           	psect	text185,global,reloc=4,class=CODE,delta=1
   208                           	psect	text186,global,reloc=2,class=CODE,delta=1
   209                           	psect	text187,global,reloc=2,class=CODE,delta=1
   210                           	psect	text188,global,reloc=4,class=CODE,delta=1
   211                           	psect	text189,global,reloc=4,class=CODE,delta=1
   212                           	psect	text190,global,reloc=4,class=CODE,delta=1
   213                           	psect	text191,global,reloc=4,class=CODE,delta=1
   214                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   215                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   216                           	psect	text192,global,reloc=4,class=CODE,delta=1
   217                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   218                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   219  0000                     
   220                           ; Version 2.10
   221                           ; Generated 31/07/2019 GMT
   222                           ; 
   223                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   224                           ; All rights reserved.
   225                           ; 
   226                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   227                           ; 
   228                           ; Redistribution and use in source and binary forms, with or without modification, are
   229                           ; permitted provided that the following conditions are met:
   230                           ; 
   231                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   232                           ;        conditions and the following disclaimer.
   233                           ; 
   234                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   235                           ;        of conditions and the following disclaimer in the documentation and/or other
   236                           ;        materials provided with the distribution.
   237                           ; 
   238                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   239                           ;        software without specific prior written permission.
   240                           ; 
   241                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   242                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   243                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   244                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   245                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   246                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   247                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   248                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   249                           ; 
   250                           ; 
   251                           ; Code-generator required, PIC18F57K42 Definitions
   252                           ; 
   253                           ; SFR Addresses
   254  0000                     
   255 ;;_main$3807	offset	0
   256 ;;_main$3803	offset	2
   257 ;;_esr_temp	offset	4
   258 ;;_i_esr	offset	8
   259 ;;_shape	offset	10
   260 ;;_inp_index	offset	11
   261 ;;_k	offset	12
   262 ;;_j	offset	13
   263 ;;_i	offset	14
   264 ;;_mode	offset	15
   265 ;;_i_ror	offset	16
   266 ;;_s	offset=-2 (param)
   267 ;;_voltage	offset=-4 (param)
   268 ;;_voltage	offset=-4 (param)
   269 ;;_voltage	offset=-4 (param)
   270 ;;_set	offset=-1 (param)
   271 ;;_x	offset	0
   272 ;;_r_cal_ptr	offset	2
   273 ;;_y	offset	4
   274 ;;_bAdd	offset=-2 (param)
   275 ;;_data	offset=-1 (param)
   276 ;;_cmd	offset=-1 (param)
   277 ;;_cmd	offset=-1 (param)
   278 ;;_data	offset=-1 (param)
   279 ;;__this	offset=-2 (param)
   280 ;;_soc	offset	0
   281 ;;_slot	offset	2
   282 ;;_cvoltage	offset=-4 (param)
   283 ;;_h	offset=-2 (param)
   284 ;;_h	offset=-2 (param)
   285 ;;_fsm	offset=-1 (param)
   286 ;;_mode	offset=-1 (param)
   287 ;;_mode	offset=-1 (param)
   288 ;;_cmd	offset=-1 (param)
   289 ;;_cp	offset	0
   290 ;;_cb	offset	4
   291 ;;_x	offset	8
   292 ;;_x	offset	0
   293 ;;_y	offset	2
   294 ;;_r_cal_ptr	offset	4
   295 ;;_GIEBitValue	offset	0
   296 ;;_bAdd	offset=-2 (param)
   297 ;;_bData	offset=-3 (param)
   298 ;;_channel	offset=-1 (param)
   299 ;;_c	offset	0
   300 ;;_shape	offset=-1 (param)
   301 ;;_reset	offset=-2 (param)
   302 ;;_i	offset=-1 (param)
   303 ;;_mode	offset=-1 (param)
   304 ;;_cb	offset=-3 (param)
   305 ;;_cp	offset=-5 (param)
   306 ;;_value	offset=-2 (param)
   307 ;;_window	offset=-4 (param)
   308 ;;_standard	offset=-6 (param)
   309 ;;_i	offset	0
   310 ;;_h	offset=-2 (param)
   311 ;;_flipper	offset=-1 (param)
   312 ;;_f	offset	0
   313 ;;_ap	offset	6
   314 ;;_s	offset=-3 (param)
   315 ;;_fmt	offset=-5 (param)
   316 ;;_line	offset=-1 (param)
   317 ;;_vterm	offset=-2 (param)
   318 ;;_numMilliseconds	offset=-2 (param)
   319 ;;_vterm	offset=-1 (param)
   320 ;;_row	offset	0
   321 ;;_r	offset=-1 (param)
   322 ;;_c	offset=-2 (param)
   323 ;;_strPtr	offset=-4 (param)
   324 ;;_strPtr	offset=-1 (param)
   325 ;;_delay	offset=-4 (param)
   326 ;;_strPtr	offset=-1 (param)
   327 ;;_strPtr	offset=-2 (param)
   328 ;;__this	offset=-2 (param)
   329 ;;_clearBuffer	offset=-3 (param)
   330 ;;_s	offset	0
   331 ;;_k	offset	2
   332 ;;_dest	offset=-2 (param)
   333 ;;_c	offset=-4 (param)
   334 ;;_n	offset=-6 (param)
   335 ;;_ap	offset	0
   336 ;;_fmt	offset=-3 (param)
   337 ;;_cfmt	offset	0
   338 ;;_fp	offset=-2 (param)
   339 ;;_fmt	offset=-4 (param)
   340 ;;_ap	offset=-6 (param)
   341 ;;_vfpfcnvrt$6043	offset	0
   342 ;;_vfpfcnvrt$6054	offset	2
   343 ;;_vfpfcnvrt$6042	offset	4
   344 ;;_llu	offset	6
   345 ;;_ll	offset	14
   346 ;;_f	offset	22
   347 ;;_ct	offset	26
   348 ;;_cp	offset	29
   349 ;;_c	offset	31
   350 ;;_fp	offset=-2 (param)
   351 ;;_fmt	offset=-4 (param)
   352 ;;_ap	offset=-6 (param)
   353 ;;_xtoa$6028	offset	0
   354 ;;_xtoa$6027	offset	2
   355 ;;_n	offset	4
   356 ;;_c	offset	12
   357 ;;_i	offset	14
   358 ;;_w	offset	16
   359 ;;_p	offset	18
   360 ;;_fp	offset=-2 (param)
   361 ;;_d	offset=-10 (param)
   362 ;;_x	offset=-11 (param)
   363 ;;_toupper$6834	offset	0
   364 ;;_c	offset=-2 (param)
   365 ;;_c	offset=-2 (param)
   366 ;;_c	offset=-2 (param)
   367 ;;_n	offset	0
   368 ;;_i	offset	8
   369 ;;_w	offset	10
   370 ;;_p	offset	12
   371 ;;_fp	offset=-2 (param)
   372 ;;_d	offset=-10 (param)
   373 ;;_counter	offset	0
   374 ;;_dividend	offset=-8 (param)
   375 ;;_divisor	offset=-16 (param)
   376 ;;_quotient	offset	0
   377 ;;_counter	offset	8
   378 ;;_dividend	offset=-8 (param)
   379 ;;_divisor	offset=-16 (param)
   380 ;;_r	offset	0
   381 ;;_l	offset	2
   382 ;;__l	offset=-2 (param)
   383 ;;__r	offset=-4 (param)
   384 ;;_n	offset=-6 (param)
   385 ;;_nuls	offset	0
   386 ;;_l	offset	7
   387 ;;_p	offset	9
   388 ;;_cp	offset	11
   389 ;;_w	offset	13
   390 ;;_i	offset	15
   391 ;;_fp	offset=-2 (param)
   392 ;;_s	offset=-4 (param)
   393 ;;_efgtoa$6000	offset	0
   394 ;;_efgtoa$5999	offset	2
   395 ;;_efgtoa$5998	offset	4
   396 ;;_efgtoa$5994	offset	6
   397 ;;_efgtoa$5990	offset	8
   398 ;;_efgtoa$5989	offset	10
   399 ;;_u	offset	12
   400 ;;_g	offset	16
   401 ;;_l	offset	20
   402 ;;_h	offset	24
   403 ;;_ou	offset	28
   404 ;;_n	offset	32
   405 ;;_e	offset	34
   406 ;;_i	offset	36
   407 ;;_w	offset	38
   408 ;;_p	offset	40
   409 ;;_sign	offset	42
   410 ;;_d	offset	44
   411 ;;_ne	offset	46
   412 ;;_m	offset	48
   413 ;;_pp	offset	50
   414 ;;_t	offset	52
   415 ;;_mode	offset	54
   416 ;;_nmode	offset	55
   417 ;;_fp	offset=-2 (param)
   418 ;;_f	offset=-6 (param)
   419 ;;_c	offset=-7 (param)
   420 ;;_tolower$6819	offset	0
   421 ;;_c	offset=-2 (param)
   422 ;;_c	offset=-2 (param)
   423 ;;_d	offset	0
   424 ;;_s	offset	2
   425 ;;_dest	offset=-2 (param)
   426 ;;_src	offset=-4 (param)
   427 ;;_u	offset	0
   428 ;;_m	offset	4
   429 ;;_e	offset	8
   430 ;;_x	offset=-4 (param)
   431 ;;_u	offset	0
   432 ;;_e	offset	4
   433 ;;_x	offset=-4 (param)
   434 ;;_exp1	offset	0
   435 ;;_sign1	offset	1
   436 ;;_f1	offset=-4 (param)
   437 ;;_f1	offset=-4 (param)
   438 ;;_ff1	offset=-4 (param)
   439 ;;_ff2	offset=-8 (param)
   440 ;;_sign	offset	0
   441 ;;_counter	offset	1
   442 ;;_dividend	offset=-2 (param)
   443 ;;_divisor	offset=-4 (param)
   444 ;;_quotient	offset	0
   445 ;;_sign	offset	2
   446 ;;_counter	offset	3
   447 ;;_dividend	offset=-2 (param)
   448 ;;_divisor	offset=-4 (param)
   449 ;;_dtoa$5966	offset	0
   450 ;;_n	offset	2
   451 ;;_i	offset	10
   452 ;;_s	offset	12
   453 ;;_w	offset	14
   454 ;;_p	offset	16
   455 ;;_fp	offset=-2 (param)
   456 ;;_d	offset=-10 (param)
   457 ;;_a	offset=-2 (param)
   458 ;;_sign	offset	0
   459 ;;_counter	offset	1
   460 ;;_dividend	offset=-8 (param)
   461 ;;_divisor	offset=-16 (param)
   462 ;;_quotient	offset	0
   463 ;;_sign	offset	8
   464 ;;_counter	offset	9
   465 ;;_dividend	offset=-8 (param)
   466 ;;_divisor	offset=-16 (param)
   467 ;;_w	offset	0
   468 ;;_fp	offset=-2 (param)
   469 ;;_c	offset=-3 (param)
   470 ;;_w	offset	0
   471 ;;_i	offset	2
   472 ;;_fp	offset=-2 (param)
   473 ;;_buf	offset=-4 (param)
   474 ;;_p	offset=-6 (param)
   475 ;;_a	offset	0
   476 ;;_s	offset=-2 (param)
   477 ;;_i	offset	0
   478 ;;_c	offset	2
   479 ;;_s	offset=-2 (param)
   480 ;;_fp	offset=-4 (param)
   481 ;;_c	offset=-2 (param)
   482 ;;_fp	offset=-4 (param)
   483 ;;_c	offset=-1 (param)
   484 ;;__this	offset=-2 (param)
   485 ;;_c	offset=-3 (param)
   486 ;;_atoi$6550	offset	0
   487 ;;_atoi$6548	offset	2
   488 ;;_atoi$6549	offset	4
   489 ;;_n	offset	5
   490 ;;_neg	offset	7
   491 ;;_s	offset=-2 (param)
   492 ;;_isspace$6599	offset	0
   493 ;;_c	offset=-2 (param)
   494 ;;_c	offset=-2 (param)
   495 ;;_vterm	offset=-1 (param)
   496 ;;_new_response_info	offset=-1 (param)
   497 ;;_new_response_info	offset=-1 (param)
   498 ;;_level	offset=-2 (param)
   499 ;;_dutyValue	offset=-2 (param)
   500 ;;_timer	offset=-1 (param)
   501 ;;_timer	offset=-1 (param)
   502 ;;_count	offset=-3 (param)
   503 ;;_h	offset=-2 (param)
   504 ;;_u	offset	0
   505 ;;_x	offset=-4 (param)
   506 ;;_chan	offset=-1 (param)
   507 ;;_to_what	offset=-2 (param)
   508 ;;_u	offset	0
   509 ;;_s	offset=-2 (param)
   510 ;;_index	offset=-1 (param)
   511 ;;_arg	offset	0
   512 ;;_exp	offset	4
   513 ;;_sign	offset=-1 (param)
   514 ;;_val	offset=-5 (param)
   515 ;;_grs	offset	0
   516 ;;_rem	offset	4
   517 ;;_new_exp	offset	8
   518 ;;_aexp	offset	10
   519 ;;_bexp	offset	11
   520 ;;_sign	offset	12
   521 ;;_b	offset=-4 (param)
   522 ;;_a	offset=-8 (param)
   523 ;;_ff1	offset=-4 (param)
   524 ;;_ff2	offset=-8 (param)
   525 ;;_lp_speed	offset	0
   526 ;;_new	offset=-4 (param)
   527 ;;_bn	offset=-5 (param)
   528 ;;_slow	offset=-6 (param)
   529 ;;_b	offset=-4 (param)
   530 ;;_a	offset=-8 (param)
   531 ;;_grs	offset	0
   532 ;;_bexp	offset	1
   533 ;;_aexp	offset	2
   534 ;;_signs	offset	3
   535 ;;_b	offset=-4 (param)
   536 ;;_a	offset=-8 (param)
   537 ;;_prod	offset	0
   538 ;;_grs	offset	4
   539 ;;_temp	offset	8
   540 ;;_bexp	offset	10
   541 ;;_aexp	offset	11
   542 ;;_sign	offset	12
   543 ;;_b	offset=-4 (param)
   544 ;;_a	offset=-8 (param)
   545 ;;_InterruptHandler	offset=-3 (param)
   546 ;;_InterruptHandler	offset=-3 (param)
   547 ;;_InterruptHandler	offset=-3 (param)
   548 ;;_InterruptHandler	offset=-3 (param)
   549 ;;_InterruptHandler	offset=-3 (param)
   550 ;;_InterruptHandler	offset=-3 (param)
   551 ;;_state	offset	0
   552 ;;_InterruptHandler	offset=-3 (param)
   553 ;;_InterruptHandler	offset=-3 (param)
   554 ;;_InterruptHandler	offset=-3 (param)
   555 ;;_InterruptHandler	offset=-3 (param)
   556 ;;_i	offset	0
   557 ;;_sw_value	offset	1
   558 ;;_timerVal	offset=-2 (param)
   559 ;;_light	offset	0
   560 ;;_mode	offset=-1 (param)
   561 ;;_chan	offset=-1 (param)
   562 ;;_to_what	offset=-2 (param)
   563 ;;_u	offset	0
   564 ;;_s	offset=-2 (param)
   565 ;;_index	offset=-1 (param)
   566 ;;_arg	offset	0
   567 ;;_exp	offset	4
   568 ;;_sign	offset=-1 (param)
   569 ;;_val	offset=-5 (param)
   570 ;;_b	offset=-4 (param)
   571 ;;_a	offset=-8 (param)
   572 ;;_grs	offset	0
   573 ;;_bexp	offset	1
   574 ;;_aexp	offset	2
   575 ;;_signs	offset	3
   576 ;;_b	offset=-4 (param)
   577 ;;_a	offset=-8 (param)
   578 ;;_prod	offset	0
   579 ;;_grs	offset	4
   580 ;;_temp	offset	8
   581 ;;_bexp	offset	10
   582 ;;_aexp	offset	11
   583 ;;_sign	offset	12
   584 ;;_b	offset=-4 (param)
   585 ;;_a	offset=-8 (param)
   586 ;;_grs	offset	0
   587 ;;_rem	offset	4
   588 ;;_new_exp	offset	8
   589 ;;_aexp	offset	10
   590 ;;_bexp	offset	11
   591 ;;_sign	offset	12
   592 ;;_b	offset=-4 (param)
   593 ;;_a	offset=-8 (param)
   594 ;;_ff1	offset=-4 (param)
   595 ;;_ff2	offset=-8 (param)
   596 ;;_timerVal	offset=-2 (param)
   597 ;;_adj	offset	0
   598 ;;_log_ptr	offset	4
   599 ;;_f	offset	0
   600 ;;_ap	offset	6
   601 ;;_s	offset=-3 (param)
   602 ;;_fmt	offset=-5 (param)
   603 ;;_cfmt	offset	0
   604 ;;_fp	offset=-2 (param)
   605 ;;_fmt	offset=-4 (param)
   606 ;;_ap	offset=-6 (param)
   607 ;;_vfpfcnvrt$6043	offset	0
   608 ;;_vfpfcnvrt$6054	offset	2
   609 ;;_vfpfcnvrt$6042	offset	4
   610 ;;_llu	offset	6
   611 ;;_ll	offset	14
   612 ;;_f	offset	22
   613 ;;_ct	offset	26
   614 ;;_cp	offset	29
   615 ;;_c	offset	31
   616 ;;_fp	offset=-2 (param)
   617 ;;_fmt	offset=-4 (param)
   618 ;;_ap	offset=-6 (param)
   619 ;;_xtoa$6028	offset	0
   620 ;;_xtoa$6027	offset	2
   621 ;;_n	offset	4
   622 ;;_c	offset	12
   623 ;;_i	offset	14
   624 ;;_w	offset	16
   625 ;;_p	offset	18
   626 ;;_fp	offset=-2 (param)
   627 ;;_d	offset=-10 (param)
   628 ;;_x	offset=-11 (param)
   629 ;;_toupper$6834	offset	0
   630 ;;_c	offset=-2 (param)
   631 ;;_c	offset=-2 (param)
   632 ;;_c	offset=-2 (param)
   633 ;;_n	offset	0
   634 ;;_i	offset	8
   635 ;;_w	offset	10
   636 ;;_p	offset	12
   637 ;;_fp	offset=-2 (param)
   638 ;;_d	offset=-10 (param)
   639 ;;_counter	offset	0
   640 ;;_dividend	offset=-8 (param)
   641 ;;_divisor	offset=-16 (param)
   642 ;;_quotient	offset	0
   643 ;;_counter	offset	8
   644 ;;_dividend	offset=-8 (param)
   645 ;;_divisor	offset=-16 (param)
   646 ;;_r	offset	0
   647 ;;_l	offset	2
   648 ;;__l	offset=-2 (param)
   649 ;;__r	offset=-4 (param)
   650 ;;_n	offset=-6 (param)
   651 ;;_nuls	offset	0
   652 ;;_l	offset	7
   653 ;;_p	offset	9
   654 ;;_cp	offset	11
   655 ;;_w	offset	13
   656 ;;_i	offset	15
   657 ;;_fp	offset=-2 (param)
   658 ;;_s	offset=-4 (param)
   659 ;;_efgtoa$6000	offset	0
   660 ;;_efgtoa$5999	offset	2
   661 ;;_efgtoa$5998	offset	4
   662 ;;_efgtoa$5994	offset	6
   663 ;;_efgtoa$5990	offset	8
   664 ;;_efgtoa$5989	offset	10
   665 ;;_u	offset	12
   666 ;;_g	offset	16
   667 ;;_l	offset	20
   668 ;;_h	offset	24
   669 ;;_ou	offset	28
   670 ;;_n	offset	32
   671 ;;_e	offset	34
   672 ;;_i	offset	36
   673 ;;_w	offset	38
   674 ;;_p	offset	40
   675 ;;_sign	offset	42
   676 ;;_d	offset	44
   677 ;;_ne	offset	46
   678 ;;_m	offset	48
   679 ;;_pp	offset	50
   680 ;;_t	offset	52
   681 ;;_mode	offset	54
   682 ;;_nmode	offset	55
   683 ;;_fp	offset=-2 (param)
   684 ;;_f	offset=-6 (param)
   685 ;;_c	offset=-7 (param)
   686 ;;_tolower$6819	offset	0
   687 ;;_c	offset=-2 (param)
   688 ;;_c	offset=-2 (param)
   689 ;;_d	offset	0
   690 ;;_s	offset	2
   691 ;;_dest	offset=-2 (param)
   692 ;;_src	offset=-4 (param)
   693 ;;_u	offset	0
   694 ;;_m	offset	4
   695 ;;_e	offset	8
   696 ;;_x	offset=-4 (param)
   697 ;;_u	offset	0
   698 ;;_e	offset	4
   699 ;;_x	offset=-4 (param)
   700 ;;_exp1	offset	0
   701 ;;_sign1	offset	1
   702 ;;_f1	offset=-4 (param)
   703 ;;_f1	offset=-4 (param)
   704 ;;_ff1	offset=-4 (param)
   705 ;;_ff2	offset=-8 (param)
   706 ;;_sign	offset	0
   707 ;;_counter	offset	1
   708 ;;_dividend	offset=-2 (param)
   709 ;;_divisor	offset=-4 (param)
   710 ;;_quotient	offset	0
   711 ;;_sign	offset	2
   712 ;;_counter	offset	3
   713 ;;_dividend	offset=-2 (param)
   714 ;;_divisor	offset=-4 (param)
   715 ;;_dtoa$5966	offset	0
   716 ;;_n	offset	2
   717 ;;_i	offset	10
   718 ;;_s	offset	12
   719 ;;_w	offset	14
   720 ;;_p	offset	16
   721 ;;_fp	offset=-2 (param)
   722 ;;_d	offset=-10 (param)
   723 ;;_a	offset=-2 (param)
   724 ;;_sign	offset	0
   725 ;;_counter	offset	1
   726 ;;_dividend	offset=-8 (param)
   727 ;;_divisor	offset=-16 (param)
   728 ;;_quotient	offset	0
   729 ;;_sign	offset	8
   730 ;;_counter	offset	9
   731 ;;_dividend	offset=-8 (param)
   732 ;;_divisor	offset=-16 (param)
   733 ;;_w	offset	0
   734 ;;_fp	offset=-2 (param)
   735 ;;_c	offset=-3 (param)
   736 ;;_w	offset	0
   737 ;;_i	offset	2
   738 ;;_fp	offset=-2 (param)
   739 ;;_buf	offset=-4 (param)
   740 ;;_p	offset=-6 (param)
   741 ;;_a	offset	0
   742 ;;_s	offset=-2 (param)
   743 ;;_i	offset	0
   744 ;;_c	offset	2
   745 ;;_s	offset=-2 (param)
   746 ;;_fp	offset=-4 (param)
   747 ;;_c	offset=-2 (param)
   748 ;;_fp	offset=-4 (param)
   749 ;;_c	offset=-1 (param)
   750 ;;__this	offset=-2 (param)
   751 ;;_c	offset=-3 (param)
   752 ;;_atoi$6550	offset	0
   753 ;;_atoi$6548	offset	2
   754 ;;_atoi$6549	offset	4
   755 ;;_n	offset	5
   756 ;;_neg	offset	7
   757 ;;_s	offset=-2 (param)
   758 ;;_isspace$6599	offset	0
   759 ;;_c	offset=-2 (param)
   760 ;;_c	offset=-2 (param)
   761 ;;_dsize	offset=-2 (param)
   762 ;;_u	offset	0
   763 ;;_x	offset=-4 (param)
   764 ;;_f1p	offset=-2 (param)
   765 ;;_f2	offset=-6 (param)
   766 ;;_timer	offset=-1 (param)
   767 ;;_count	offset=-3 (param)
   768 ;;_channel	offset=-1 (param)
   769 ;;_i	offset	0
   770                           
   771                           	psect	idataBIGRAM
   772  0170E2                     __pidataBIGRAM:
   773                           	opt callstack 0
   774                           
   775                           ;initializer for _port_data
   776  0170E2  FF                 	db	255
   777  0170E3  00                 	db	0
   778  0170E4  FF                 	db	255
   779  0170E5  00                 	db	0
   780  0170E6  FF                 	db	255
   781  0170E7  00                 	db	0
   782  0170E8  FF                 	db	255
   783  0170E9  00                 	db	0
   784  0170EA  FF                 	db	255
   785  0170EB  00                 	db	0
   786  0170EC  FF                 	db	255
   787  0170ED  00                 	db	0
   788  0170EE  FF                 	db	255
   789  0170EF  00                 	db	0
   790  0170F0  FF                 	db	255
   791  0170F1  00                 	db	0
   792  0170F2  00                 	db	0
   793  0170F3  00                 	db	0
   794  0170F4  00                 	db	0
   795  0170F5  00                 	db	0
   796  0170F6  00                 	db	0
   797  0170F7  00                 	db	0
   798  0170F8  00                 	db	0
   799  0170F9  00                 	db	0
   800  0170FA  00                 	db	0
   801  0170FB  00                 	db	0
   802  0170FC  00                 	db	0
   803  0170FD  00                 	db	0
   804  0170FE  00                 	db	0
   805  0170FF  00                 	db	0
   806  017100  00                 	db	0
   807  017101  00                 	db	0
   808  017102  00                 	db	0
   809  017103  00                 	db	0
   810  017104  00                 	db	0
   811  017105  00                 	db	0
   812  017106  00                 	db	0
   813  017107  00                 	db	0
   814  017108  00                 	db	0
   815  017109  00                 	db	0
   816  01710A  00                 	db	0
   817  01710B  00                 	db	0
   818  01710C  00                 	db	0
   819  01710D  00                 	db	0
   820  01710E  00                 	db	0
   821  01710F  00                 	db	0
   822  017110  00                 	db	0
   823  017111  00                 	db	0
   824  017112  00                 	db	0
   825  017113  00                 	db	0
   826  017114  00                 	db	0
   827  017115  00                 	db	0
   828  017116  00                 	db	0
   829  017117  00                 	db	0
   830  017118  00                 	db	0
   831  017119  00                 	db	0
   832  01711A  00                 	db	0
   833  01711B  00                 	db	0
   834  01711C  00                 	db	0
   835  01711D  00                 	db	0
   836  01711E  00                 	db	0
   837  01711F  00                 	db	0
   838  017120  00                 	db	0
   839  017121  00                 	db	0
   840  017122  00                 	db	0
   841  017123  00                 	db	0
   842  017124  00                 	db	0
   843  017125  00                 	db	0
   844  017126  00                 	db	0
   845  017127  00                 	db	0
   846  017128  00                 	db	0
   847  017129  00                 	db	0
   848  01712A  00                 	db	0
   849  01712B  00                 	db	0
   850  01712C  00                 	db	0
   851  01712D  00                 	db	0
   852  01712E  00                 	db	0
   853  01712F  00                 	db	0
   854  017130  00                 	db	0
   855  017131  00                 	db	0
   856  017132  00                 	db	0
   857  017133  00                 	db	0
   858  017134  00                 	db	0
   859  017135  00                 	db	0
   860  017136  00                 	db	0
   861  017137  00                 	db	0
   862  017138  00                 	db	0
   863  017139  00                 	db	0
   864  01713A  00                 	db	0
   865  01713B  00                 	db	0
   866  01713C  00                 	db	0
   867  01713D  00                 	db	0
   868  01713E  00                 	db	0
   869  01713F  00                 	db	0
   870  017140  00                 	db	0
   871  017141  00                 	db	0
   872  017142  00                 	db	0
   873  017143  00                 	db	0
   874  017144  00                 	db	0
   875  017145  00                 	db	0
   876  017146  00                 	db	0
   877  017147  00                 	db	0
   878  017148  00                 	db	0
   879  017149  00                 	db	0
   880  01714A  00                 	db	0
   881  01714B  00                 	db	0
   882  01714C  00                 	db	0
   883  01714D  00                 	db	0
   884  01714E  00                 	db	0
   885  01714F  00                 	db	0
   886  017150  00                 	db	0
   887  017151  00                 	db	0
   888  017152  00                 	db	0
   889  017153  00                 	db	0
   890  017154  00                 	db	0
   891  017155  00                 	db	0
   892  017156  00                 	db	0
   893  017157  00                 	db	0
   894  017158  00                 	db	0
   895  017159  00                 	db	0
   896  01715A  00                 	db	0
   897  01715B  00                 	db	0
   898  01715C  00                 	db	0
   899  01715D  00                 	db	0
   900  01715E  00                 	db	0
   901  01715F  00                 	db	0
   902  017160  00                 	db	0
   903  017161  00                 	db	0
   904  017162  00                 	db	0
   905  017163  00                 	db	0
   906  017164  00                 	db	0
   907  017165  00                 	db	0
   908  017166  00                 	db	0
   909  017167  00                 	db	0
   910  017168  00                 	db	0
   911  017169  00                 	db	0
   912  01716A  00                 	db	0
   913  01716B  00                 	db	0
   914  01716C  00                 	db	0
   915  01716D  00                 	db	0
   916  01716E  00                 	db	0
   917  01716F  00                 	db	0
   918  017170  00                 	db	0
   919  017171  00                 	db	0
   920  017172  00                 	db	0
   921  017173  00                 	db	0
   922  017174  00                 	db	0
   923  017175  00                 	db	0
   924  017176  00                 	db	0
   925  017177  00                 	db	0
   926  017178  00                 	db	0
   927  017179  00                 	db	0
   928  01717A  00                 	db	0
   929  01717B  00                 	db	0
   930  01717C  00                 	db	0
   931  01717D  00                 	db	0
   932  01717E  00                 	db	0
   933  01717F  00                 	db	0
   934  017180  00                 	db	0
   935  017181  00                 	db	0
   936  017182  00                 	db	0
   937  017183  00                 	db	0
   938  017184  00                 	db	0
   939  017185  00                 	db	0
   940  017186  00                 	db	0
   941  017187  00                 	db	0
   942  017188  00                 	db	0
   943  017189  00                 	db	0
   944  01718A  00                 	db	0
   945  01718B  00                 	db	0
   946  01718C  00                 	db	0
   947  01718D  00                 	db	0
   948  01718E  00                 	db	0
   949  01718F  00                 	db	0
   950  017190  00                 	db	0
   951  017191  00                 	db	0
   952  017192  00                 	db	0
   953  017193  00                 	db	0
   954  017194  00                 	db	0
   955  017195  00                 	db	0
   956  017196  00                 	db	0
   957  017197  00                 	db	0
   958  017198  00                 	db	0
   959  017199  00                 	db	0
   960  01719A  00                 	db	0
   961  01719B  00                 	db	0
   962  01719C  00                 	db	0
   963  01719D  00                 	db	0
   964  01719E  00                 	db	0
   965  01719F  00                 	db	0
   966  0171A0  00                 	db	0
   967  0171A1  00                 	db	0
   968  0171A2  00                 	db	0
   969  0171A3  00                 	db	0
   970  0171A4  00                 	db	0
   971  0171A5  00                 	db	0
   972  0171A6  00                 	db	0
   973  0171A7  00                 	db	0
   974  0171A8  00                 	db	0
   975  0171A9  00                 	db	0
   976  0171AA  00                 	db	0
   977  0171AB  00                 	db	0
   978  0171AC  00                 	db	0
   979  0171AD  00                 	db	0
   980  0171AE  00                 	db	0
   981  0171AF  00                 	db	0
   982  0171B0  00                 	db	0
   983  0171B1  00                 	db	0
   984  0171B2  00                 	db	0
   985  0171B3  00                 	db	0
   986  0171B4  00                 	db	0
   987  0171B5  00                 	db	0
   988  0171B6  00                 	db	0
   989  0171B7  00                 	db	0
   990  0171B8  00                 	db	0
   991  0171B9  00                 	db	0
   992  0171BA  00                 	db	0
   993  0171BB  00                 	db	0
   994  0171BC  00                 	db	0
   995  0171BD  00                 	db	0
   996  0171BE  00                 	db	0
   997  0171BF  00                 	db	0
   998  0171C0  00                 	db	0
   999  0171C1  00                 	db	0
  1000  0171C2  00                 	db	0
  1001  0171C3  00                 	db	0
  1002  0171C4  00                 	db	0
  1003  0171C5  00                 	db	0
  1004  0171C6  00                 	db	0
  1005  0171C7  00                 	db	0
  1006  0171C8  00                 	db	0
  1007  0171C9  00                 	db	0
  1008  0171CA  00                 	db	0
  1009  0171CB  00                 	db	0
  1010  0171CC  00                 	db	0
  1011  0171CD  00                 	db	0
  1012  0171CE  00                 	db	0
  1013  0171CF  00                 	db	0
  1014  0171D0  00                 	db	0
  1015  0171D1  00                 	db	0
  1016  0171D2  00                 	db	0
  1017  0171D3  00                 	db	0
  1018  0171D4  00                 	db	0
  1019  0171D5  00                 	db	0
  1020  0171D6  00                 	db	0
  1021  0171D7  00                 	db	0
  1022  0171D8  00                 	db	0
  1023  0171D9  00                 	db	0
  1024  0171DA  00                 	db	0
  1025  0171DB  00                 	db	0
  1026  0171DC  00                 	db	0
  1027  0171DD  00                 	db	0
  1028  0171DE  00                 	db	0
  1029  0171DF  00                 	db	0
  1030  0171E0  00                 	db	0
  1031  0171E1  00                 	db	0
  1032  0171E2  00                 	db	0
  1033  0171E3  00                 	db	0
  1034  0171E4  00                 	db	0
  1035  0171E5  00                 	db	0
  1036  0171E6  00                 	db	0
  1037  0171E7  00                 	db	0
  1038  0171E8  00                 	db	0
  1039  0171E9  00                 	db	0
  1040  0171EA  00                 	db	0
  1041  0171EB  00                 	db	0
  1042  0171EC  00                 	db	0
  1043  0171ED  00                 	db	0
  1044  0171EE  00                 	db	0
  1045  0171EF  00                 	db	0
  1046  0171F0  00                 	db	0
  1047  0171F1  00                 	db	0
  1048  0171F2  00                 	db	0
  1049  0171F3  00                 	db	0
  1050  0171F4  00                 	db	0
  1051  0171F5  00                 	db	0
  1052  0171F6  00                 	db	0
  1053  0171F7  00                 	db	0
  1054  0171F8  00                 	db	0
  1055  0171F9  00                 	db	0
  1056  0171FA  00                 	db	0
  1057  0171FB  00                 	db	0
  1058  0171FC  00                 	db	0
  1059  0171FD  00                 	db	0
  1060  0171FE  00                 	db	0
  1061  0171FF  00                 	db	0
  1062  017200  00                 	db	0
  1063  017201  00                 	db	0
  1064  017202  00                 	db	0
  1065  017203  00                 	db	0
  1066  017204  00                 	db	0
  1067  017205  00                 	db	0
  1068  017206  00                 	db	0
  1069  017207  00                 	db	0
  1070  017208  00                 	db	0
  1071  017209  00                 	db	0
  1072  01720A  00                 	db	0
  1073  01720B  00                 	db	0
  1074  01720C  00                 	db	0
  1075  01720D  00                 	db	0
  1076  01720E  00                 	db	0
  1077  01720F  00                 	db	0
  1078  017210  00                 	db	0
  1079  017211  00                 	db	0
  1080  017212  00                 	db	0
  1081  017213  00                 	db	0
  1082  017214  00                 	db	0
  1083  017215  00                 	db	0
  1084  017216  00                 	db	0
  1085  017217  00                 	db	0
  1086  017218  00                 	db	0
  1087  017219  00                 	db	0
  1088  01721A  00                 	db	0
  1089  01721B  00                 	db	0
  1090  01721C  00                 	db	0
  1091  01721D  00                 	db	0
  1092  01721E  00                 	db	0
  1093  01721F  00                 	db	0
  1094  017220  00                 	db	0
  1095  017221  00                 	db	0
  1096  017222  00                 	db	0
  1097  017223  00                 	db	0
  1098  017224  00                 	db	0
  1099  017225  00                 	db	0
  1100  017226  00                 	db	0
  1101  017227  00                 	db	0
  1102  017228  00                 	db	0
  1103  017229  00                 	db	0
  1104  01722A  00                 	db	0
  1105  01722B  00                 	db	0
  1106  01722C  00                 	db	0
  1107  01722D  00                 	db	0
  1108  01722E  00                 	db	0
  1109  01722F  00                 	db	0
  1110  017230  00                 	db	0
  1111  017231  00                 	db	0
  1112  017232  00                 	db	0
  1113  017233  00                 	db	0
  1114  017234  00                 	db	0
  1115  017235  00                 	db	0
  1116  017236  00                 	db	0
  1117  017237  00                 	db	0
  1118  017238  00                 	db	0
  1119  017239  00                 	db	0
  1120  01723A  00                 	db	0
  1121  01723B  00                 	db	0
  1122  01723C  00                 	db	0
  1123  01723D  00                 	db	0
  1124  01723E  00                 	db	0
  1125  01723F  00                 	db	0
  1126  017240  00                 	db	0
  1127  017241  00                 	db	0
  1128  017242  00                 	db	0
  1129  017243  00                 	db	0
  1130  017244  00                 	db	0
  1131  017245  00                 	db	0
  1132  017246  00                 	db	0
  1133  017247  00                 	db	0
  1134  017248  00                 	db	0
  1135  017249  00                 	db	0
  1136  01724A  00                 	db	0
  1137  01724B  00                 	db	0
  1138  01724C  00                 	db	0
  1139  01724D  00                 	db	0
  1140  01724E  00                 	db	0
  1141  01724F  00                 	db	0
  1142  017250  00                 	db	0
  1143  017251  00                 	db	0
  1144  017252  00                 	db	0
  1145  017253  00                 	db	0
  1146  017254  00                 	db	0
  1147  017255  00                 	db	0
  1148  017256  00                 	db	0
  1149  017257  00                 	db	0
  1150  017258  00                 	db	0
  1151  017259  00                 	db	0
  1152  01725A  00                 	db	0
  1153  01725B  00                 	db	0
  1154  01725C  00                 	db	0
  1155  01725D  00                 	db	0
  1156  01725E  00                 	db	0
  1157  01725F  00                 	db	0
  1158  017260  00                 	db	0
  1159  017261  00                 	db	0
  1160  017262  00                 	db	0
  1161  017263  00                 	db	0
  1162  017264  00                 	db	0
  1163  017265  00                 	db	0
  1164  017266  00                 	db	0
  1165  017267  00                 	db	0
  1166  017268  00                 	db	0
  1167  017269  00                 	db	0
  1168  01726A  00                 	db	0
  1169  01726B  00                 	db	0
  1170  01726C  00                 	db	0
  1171  01726D  00                 	db	0
  1172  01726E  00                 	db	0
  1173  01726F  00                 	db	0
  1174  017270  00                 	db	0
  1175  017271  00                 	db	0
  1176  017272  00                 	db	0
  1177  017273  00                 	db	0
  1178  017274  00                 	db	0
  1179  017275  00                 	db	0
  1180  017276  00                 	db	0
  1181  017277  00                 	db	0
  1182  017278  00                 	db	0
  1183  017279  00                 	db	0
  1184  01727A  00                 	db	0
  1185  01727B  00                 	db	0
  1186  01727C  00                 	db	0
  1187  01727D  00                 	db	0
  1188  01727E  00                 	db	0
  1189  01727F  00                 	db	0
  1190  017280  00                 	db	0
  1191  017281  00                 	db	0
  1192  017282  00                 	db	0
  1193  017283  00                 	db	0
  1194  017284  00                 	db	0
  1195  017285  00                 	db	0
  1196  017286  00                 	db	0
  1197  017287  00                 	db	0
  1198  017288  00                 	db	0
  1199  017289  00                 	db	0
  1200  01728A  00                 	db	0
  1201  01728B  00                 	db	0
  1202  01728C  00                 	db	0
  1203  01728D  00                 	db	0
  1204  01728E  00                 	db	0
  1205  01728F  00                 	db	0
  1206  017290  00                 	db	0
  1207  017291  00                 	db	0
  1208  017292  00                 	db	0
  1209  017293  00                 	db	0
  1210  017294  00                 	db	0
  1211  017295  00                 	db	0
  1212  017296  00                 	db	0
  1213  017297  00                 	db	0
  1214  017298  00                 	db	0
  1215  017299  00                 	db	0
  1216  01729A  00                 	db	0
  1217  01729B  00                 	db	0
  1218  01729C  00                 	db	0
  1219  01729D  00                 	db	0
  1220  01729E  00                 	db	0
  1221  01729F  00                 	db	0
  1222  0172A0  00                 	db	0
  1223  0172A1  00                 	db	0
  1224  0172A2  00                 	db	0
  1225  0172A3  00                 	db	0
  1226  0172A4  00                 	db	0
  1227  0172A5  00                 	db	0
  1228  0172A6  00                 	db	0
  1229  0172A7  00                 	db	0
  1230  0172A8  00                 	db	0
  1231  0172A9  00                 	db	0
  1232  0172AA  00                 	db	0
  1233  0172AB  00                 	db	0
  1234  0172AC  00                 	db	0
  1235  0172AD  00                 	db	0
  1236  0172AE  00                 	db	0
  1237  0172AF  00                 	db	0
  1238  0172B0  00                 	db	0
  1239  0172B1  00                 	db	0
  1240  0172B2  00                 	db	0
  1241  0172B3  00                 	db	0
  1242  0172B4  00                 	db	0
  1243  0172B5  00                 	db	0
  1244  0172B6  00                 	db	0
  1245  0172B7  00                 	db	0
  1246  0172B8  00                 	db	0
  1247  0172B9  00                 	db	0
  1248  0172BA  00                 	db	0
  1249  0172BB  00                 	db	0
  1250  0172BC  00                 	db	0
  1251  0172BD  00                 	db	0
  1252  0172BE  00                 	db	0
  1253  0172BF  00                 	db	0
  1254  0172C0  00                 	db	0
  1255  0172C1  00                 	db	0
  1256  0172C2  00                 	db	0
  1257  0172C3  00                 	db	0
  1258  0172C4  00                 	db	0
  1259  0172C5  00                 	db	0
  1260  0172C6  00                 	db	0
  1261  0172C7  00                 	db	0
  1262  0172C8  00                 	db	0
  1263  0172C9  00                 	db	0
  1264  0172CA  00                 	db	0
  1265  0172CB  00                 	db	0
  1266  0172CC  00                 	db	0
  1267  0172CD  00                 	db	0
  1268  0172CE  00                 	db	0
  1269  0172CF  00                 	db	0
  1270  0172D0  00                 	db	0
  1271  0172D1  00                 	db	0
  1272  0172D2  00                 	db	0
  1273  0172D3  00                 	db	0
  1274  0172D4  00                 	db	0
  1275  0172D5  00                 	db	0
  1276  0172D6  00                 	db	0
  1277  0172D7  00                 	db	0
  1278  0172D8  00                 	db	0
  1279  0172D9  00                 	db	0
  1280  0172DA  00                 	db	0
  1281  0172DB  00                 	db	0
  1282  0172DC  00                 	db	0
  1283  0172DD  00                 	db	0
  1284  0172DE  00                 	db	0
  1285  0172DF  00                 	db	0
  1286  0172E0  00                 	db	0
  1287  0172E1  00                 	db	0
  1288                           
  1289                           ;initializer for _C
  1290  0172E2  0000               	dw	0
  1291  0172E4  0000               	dw	0
  1292  0172E6  0000               	dw	0
  1293  0172E8  0000               	dw	0
  1294  0172EA  0000               	dw	0
  1295  0172EC  0000               	dw	0
  1296  0172EE  0000               	dw	0
  1297  0172F0  0000               	dw	0
  1298  0172F2  0000               	dw	0
  1299  0172F4  0000               	dw	0
  1300  0172F6  0000               	dw	0
  1301  0172F8  0000               	dw	0
  1302  0172FA  0000               	dw	0
  1303  0172FC  0000               	dw	0
  1304  0172FE  0000               	dw	0
  1305  017300  0000               	dw	0
  1306  017302  0000               	dw	0
  1307  017304  0000               	dw	0
  1308  017306  0000               	dw	0
  1309  017308  0000               	dw	0
  1310  01730A  0000               	dw	0
  1311  01730C  0000               	dw	0
  1312  01730E  0000               	dw	0
  1313  017310  0000               	dw	0
  1314  017312  0000               	dw	0
  1315  017314  0000               	dw	0
  1316  017316  0000               	dw	0
  1317  017318  0000               	dw	0
  1318  01731A  0000               	dw	0
  1319  01731C  0000               	dw	0
  1320  01731E  0000               	dw	0
  1321  017320  0000               	dw	0
  1322  017322  0000               	dw	0
  1323  017324  0000               	dw	0
  1324  017326  0000               	dw	0
  1325  017328  0000               	dw	0
  1326  01732A  0000               	dw	0
  1327  01732C  0000               	dw	0
  1328  01732E  0000               	dw	0
  1329  017330  0000               	dw	0
  1330  017332  0000               	dw	0
  1331  017334  0000               	dw	0
  1332  017336  0000               	dw	0
  1333  017338  0000               	dw	0
  1334  01733A  0000               	dw	0
  1335  01733C  0000               	dw	0
  1336  01733E  0000               	dw	0
  1337  017340  0000               	dw	0
  1338  017342  0000               	dw	0
  1339  017344  0000               	dw	0
  1340  017346  0000               	dw	0
  1341  017348  0000               	dw	0
  1342  01734A  0000               	dw	0
  1343  01734C  0000               	dw	0
  1344  01734E  0000               	dw	0
  1345  017350  0000               	dw	0
  1346  017352  0000               	dw	0
  1347  017354  0000               	dw	0
  1348  017356  0000               	dw	0
  1349  017358  0000               	dw	0
  1350  01735A  0000               	dw	0
  1351  01735C  0000               	dw	0
  1352  01735E  0000               	dw	0
  1353  017360  0000               	dw	0
  1354  017362  0000               	dw	0
  1355  017364  0000               	dw	0
  1356  017366  0000               	dw	0
  1357  017368  0000               	dw	0
  1358  01736A  0000               	dw	0
  1359  01736C  0000               	dw	0
  1360  01736E  0000               	dw	0
  1361  017370  42FA               	dw	17146
  1362  017372  0000               	dw	0
  1363  017374  0000               	dw	0
  1364  017376  0000               	dw	0
  1365  017378  0000               	dw	0
  1366  01737A  0000               	dw	0
  1367  01737C  0000               	dw	0
  1368  01737E  0000               	dw	0
  1369  017380  0000               	dw	0
  1370  017382  0000               	dw	0
  1371  017384  0000               	dw	0
  1372  017386  0000               	dw	0
  1373  017388  0000               	dw	0
  1374  01738A  0000               	dw	0
  1375  01738C  0000               	dw	0
  1376  01738E  0000               	dw	0
  1377  017390  0000               	dw	0
  1378  017392  0000               	dw	0
  1379  017394  0000               	dw	0
  1380  017396  0000               	dw	0
  1381  017398  0000               	dw	0
  1382  01739A  00                 	db	0
  1383  01739B  01                 	db	1
  1384  01739C  0000               	dw	0
  1385  01739E  3F80               	dw	16256
  1386  0173A0  0000               	dw	0
  1387  0173A2  3F80               	dw	16256
  1388  0173A4  00                 	db	0
  1389  0173A5  00                 	db	0
  1390  0173A6  00                 	db	0
  1391  0173A7  00                 	db	0
  1392  0173A8  00                 	db	0
  1393  0173A9  00                 	db	0
  1394  0173AA  00                 	db	0
  1395  0173AB  00                 	db	0
  1396  0173AC  00                 	db	0
  1397  0173AD  00                 	db	0
  1398  0173AE  00                 	db	0
  1399  0173AF  00                 	db	0
  1400  0173B0  00                 	db	0
  1401  0173B1  00                 	db	0
  1402  0173B2  00                 	db	0
  1403  0173B3  00                 	db	0
  1404  0173B4  00                 	db	0
  1405  0173B5  00                 	db	0
  1406  0173B6  00                 	db	0
  1407  0173B7  00                 	db	0
  1408  0173B8  00                 	db	0
  1409  0173B9  00                 	db	0
  1410  0173BA  00                 	db	0
  1411  0173BB  00                 	db	0
  1412  0173BC  00                 	db	0
  1413  0173BD  00                 	db	0
  1414  0173BE  00                 	db	0
  1415  0173BF  00                 	db	0
  1416  0173C0  00                 	db	0
  1417  0173C1  00                 	db	0
  1418  0173C2  00                 	db	0
  1419  0173C3  00                 	db	0
  1420  0173C4  00                 	db	0
  1421  0173C5  00                 	db	0
  1422  0173C6  00                 	db	0
  1423  0173C7  00                 	db	0
  1424  0173C8  00                 	db	0
  1425  0173C9  00                 	db	0
  1426  0173CA  00                 	db	0
  1427  0173CB  00                 	db	0
  1428  0173CC  00                 	db	0
  1429  0173CD  00                 	db	0
  1430  0173CE  00                 	db	0
  1431  0173CF  00                 	db	0
  1432  0173D0  00                 	db	0
  1433  0173D1  00                 	db	0
  1434  0173D2  00                 	db	0
  1435  0173D3  00                 	db	0
  1436  0173D4  00                 	db	0
  1437  0173D5  00                 	db	0
  1438  0173D6  00                 	db	0
  1439  0173D7  00                 	db	0
  1440  0173D8  00                 	db	0
  1441  0173D9  00                 	db	0
  1442  0173DA  00                 	db	0
  1443  0173DB  00                 	db	0
  1444  0173DC  00                 	db	0
  1445  0173DD  00                 	db	0
  1446  0173DE  00                 	db	0
  1447  0173DF  00                 	db	0
  1448  0173E0  00                 	db	0
  1449  0173E1  00                 	db	0
  1450  0173E2  00                 	db	0
  1451  0173E3  00                 	db	0
  1452  0173E4  00                 	db	0
  1453  0173E5  00                 	db	0
  1454  0173E6  00                 	db	0
  1455  0173E7  00                 	db	0
  1456  0173E8  00                 	db	0
  1457  0173E9  00                 	db	0
  1458  0173EA  00                 	db	0
  1459  0173EB  00                 	db	0
  1460  0173EC  00                 	db	0
  1461  0173ED  00                 	db	0
  1462  0173EE  00                 	db	0
  1463  0173EF  00                 	db	0
  1464  0173F0  0000               	dw	0
  1465  0173F2  0000               	dw	0
  1466  0173F4  0000               	dw	0
  1467  0173F6  0000               	dw	0
  1468  0173F8  0000               	dw	0
  1469  0173FA  0000               	dw	0
  1470  0173FC  0000               	dw	0
  1471  0173FE  0000               	dw	0
  1472  017400  0000               	dw	0
  1473  017402  0000               	dw	0
  1474  017404  01                 	db	1
  1475  017405  00                 	db	0
  1476  017406  00                 	db	0
  1477  017407  00                 	db	0
  1478  017408  00                 	db	0
  1479  017409  00                 	db	0
  1480  01740A  00                 	db	0
  1481  01740B  00                 	db	0
  1482  01740C  00                 	db	0
  1483                           
  1484                           	psect	idataBANK0
  1485  01C59E                     __pidataBANK0:
  1486                           	opt callstack 0
  1487                           
  1488                           ;initializer for _R
  1489  01C59E  0000               	dw	0
  1490  01C5A0  0000               	dw	0
  1491  01C5A2  0000               	dw	0
  1492  01C5A4  0000               	dw	0
  1493  01C5A6  0000               	dw	0
  1494  01C5A8  0000               	dw	0
  1495  01C5AA  0000               	dw	0
  1496  01C5AC  0000               	dw	0
  1497  01C5AE  0000               	dw	0
  1498  01C5B0  0000               	dw	0
  1499  01C5B2  0000               	dw	0
  1500  01C5B4  0000               	dw	0
  1501  01C5B6  0000               	dw	0
  1502  01C5B8  0000               	dw	0
  1503  01C5BA  0000               	dw	0
  1504  01C5BC  0000               	dw	0
  1505  01C5BE  0000               	dw	0
  1506  01C5C0  0000               	dw	0
  1507  01C5C2  0000               	dw	0
  1508  01C5C4  0F62               	dw	3938
  1509  01C5C6  0FA4               	dw	4004
  1510  01C5C8  2D0E               	dw	11534
  1511  01C5CA  3DB2               	dw	15794
  1512  01C5CC  DD98               	dw	56728
  1513  01C5CE  3D13               	dw	15635
  1514  01C5D0  00                 	db	0
  1515  01C5D1  0000               	dw	0
  1516  01C5D3  00                 	db	0
  1517  01C5D4  1957               	dw	6487
  1518  01C5D6  4242               	dw	16962
  1519                           
  1520                           	psect	idataBANK1
  1521  01ACB6                     __pidataBANK1:
  1522                           	opt callstack 0
  1523                           
  1524                           ;initializer for stoa@F1166
  1525  01ACB6  28                 	db	40
  1526  01ACB7  6E                 	db	110
  1527  01ACB8  75                 	db	117
  1528  01ACB9  6C                 	db	108
  1529  01ACBA  6C                 	db	108
  1530  01ACBB  29                 	db	41
  1531  01ACBC  00                 	db	0
  1532                           
  1533                           ;initializer for _V
  1534  01ACBD  00                 	db	0
  1535  01ACBE  00                 	db	0
  1536  01ACBF  00                 	db	0
  1537  01ACC0  00                 	db	0
  1538  01ACC1  00                 	db	0
  1539  01ACC2  00                 	db	0
  1540  01ACC3  00                 	db	0
  1541  01ACC4  00                 	db	0
  1542  01ACC5  00                 	db	0
  1543  01ACC6  00                 	db	0
  1544  01ACC7  00                 	db	0
  1545  01ACC8  00                 	db	0
  1546  01ACC9  00                 	db	0
  1547  01ACCA  00                 	db	0
  1548  01ACCB  00                 	db	0
  1549  01ACCC  00                 	db	0
  1550  01ACCD  00                 	db	0
  1551  01ACCE  00                 	db	0
  1552  01ACCF  00                 	db	0
  1553  01ACD0  00                 	db	0
  1554  01ACD1  00                 	db	0
  1555  01ACD2  00                 	db	0
  1556  01ACD3  00                 	db	0
  1557  01ACD4  00                 	db	0
  1558  01ACD5  00                 	db	0
  1559  01ACD6  00                 	db	0
  1560  01ACD7  00                 	db	0
  1561  01ACD8  00                 	db	0
  1562  01ACD9  00                 	db	0
  1563  01ACDA  00                 	db	0
  1564  01ACDB  00                 	db	0
  1565  01ACDC  00                 	db	0
  1566  01ACDD  00                 	db	0
  1567  01ACDE  00                 	db	0
  1568  01ACDF  00                 	db	0
  1569  01ACE0  00                 	db	0
  1570  01ACE1  00                 	db	0
  1571  01ACE2  00                 	db	0
  1572  01ACE3  00                 	db	0
  1573  01ACE4  00                 	db	0
  1574  01ACE5  00                 	db	0
  1575  01ACE6  00                 	db	0
  1576  01ACE7  00                 	db	0
  1577  01ACE8  00                 	db	0
  1578  01ACE9  00                 	db	0
  1579  01ACEA  00                 	db	0
  1580  01ACEB  00                 	db	0
  1581  01ACEC  00                 	db	0
  1582  01ACED  00                 	db	0
  1583  01ACEE  00                 	db	0
  1584  01ACEF  00                 	db	0
  1585  01ACF0  00                 	db	0
  1586  01ACF1  00                 	db	0
  1587  01ACF2  00                 	db	0
  1588  01ACF3  00                 	db	0
  1589  01ACF4  00                 	db	0
  1590  01ACF5  00                 	db	0
  1591  01ACF6  00                 	db	0
  1592  01ACF7  00                 	db	0
  1593  01ACF8  00                 	db	0
  1594  01ACF9  00                 	db	0
  1595  01ACFA  00                 	db	0
  1596  01ACFB  00                 	db	0
  1597  01ACFC  00                 	db	0
  1598  01ACFD  00                 	db	0
  1599  01ACFE  00                 	db	0
  1600  01ACFF  00                 	db	0
  1601  01AD00  00                 	db	0
  1602  01AD01  00                 	db	0
  1603  01AD02  00                 	db	0
  1604  01AD03  00                 	db	0
  1605  01AD04  00                 	db	0
  1606  01AD05  00                 	db	0
  1607  01AD06  00                 	db	0
  1608  01AD07  00                 	db	0
  1609  01AD08  00                 	db	0
  1610  01AD09  00                 	db	0
  1611  01AD0A  00                 	db	0
  1612  01AD0B  00                 	db	0
  1613  01AD0C  00                 	db	0
  1614  01AD0D  00                 	db	0
  1615  01AD0E  00                 	db	0
  1616  01AD0F  00                 	db	0
  1617  01AD10  00                 	db	0
  1618  01AD11  00                 	db	0
  1619  01AD12  00                 	db	0
  1620  01AD13  00                 	db	0
  1621  01AD14  00                 	db	0
  1622  01AD15  00                 	db	0
  1623  01AD16  00                 	db	0
  1624  01AD17  00                 	db	0
  1625  01AD18  00                 	db	0
  1626  01AD19  00                 	db	0
  1627  01AD1A  00                 	db	0
  1628  01AD1B  00                 	db	0
  1629  01AD1C  00                 	db	0
  1630  01AD1D  00                 	db	0
  1631  01AD1E  00                 	db	0
  1632  01AD1F  00                 	db	0
  1633  01AD20  00                 	db	0
  1634  01AD21  00                 	db	0
  1635  01AD22  00                 	db	0
  1636  01AD23  00                 	db	0
  1637  01AD24  00                 	db	0
  1638  01AD25  00                 	db	0
  1639  01AD26  00                 	db	0
  1640  01AD27  00                 	db	0
  1641  01AD28  00                 	db	0
  1642  01AD29  00                 	db	0
  1643  01AD2A  00                 	db	0
  1644  01AD2B  00                 	db	0
  1645  01AD2C  00                 	db	0
  1646  01AD2D  00                 	db	0
  1647  01AD2E  00                 	db	0
  1648  01AD2F  00                 	db	0
  1649  01AD30  00                 	db	0
  1650  01AD31  00                 	db	0
  1651  01AD32  00                 	db	0
  1652  01AD33  00                 	db	0
  1653  01AD34  00                 	db	0
  1654  01AD35  00                 	db	0
  1655  01AD36  00                 	db	0
  1656  01AD37  00                 	db	0
  1657  01AD38  00                 	db	0
  1658  01AD39  00                 	db	0
  1659  01AD3A  00                 	db	0
  1660  01AD3B  00                 	db	0
  1661  01AD3C  00                 	db	0
  1662  01AD3D  00                 	db	0
  1663  01AD3E  0000               	dw	0
  1664  01AD40  0000               	dw	0
  1665  01AD42  0000               	dw	0
  1666  01AD44  0000               	dw	0
  1667  01AD46  00                 	db	0
  1668  01AD47  00                 	db	0
  1669  01AD48  00                 	db	0
  1670  01AD49  00                 	db	0
  1671  01AD4A  00                 	db	0
  1672  01AD4B  00                 	db	0
  1673  01AD4C  0000               	dw	0
  1674  01AD4E  0000               	dw	0
  1675  01AD50  0000               	dw	0
  1676  01AD52  0000               	dw	0
  1677  01AD54  0000               	dw	0
  1678  01AD56  0000               	dw	0
  1679  01AD58  00                 	db	0
  1680  01AD59  00                 	db	0
  1681  01AD5A  00                 	db	0
  1682  01AD5B  00                 	db	0
  1683  01AD5C  00                 	db	0
  1684  01AD5D  00                 	db	0
  1685  01AD5E  00                 	db	0
  1686  01AD5F  00                 	db	0
  1687  01AD60  00                 	db	0
  1688  01AD61  00                 	db	0
  1689  01AD62  00                 	db	0
  1690  01AD63  0000               	dw	0
  1691  01AD65  0000               	dw	0
  1692  01AD67  2D                 	db	45
  1693  01AD68  00                 	db	0
  1694  01AD69  00                 	db	0
  1695  01AD6A  00                 	db	0
  1696  01AD6B  00                 	db	0
  1697  01AD6C  00                 	db	0
  1698  01AD6D  0000               	dw	0
  1699  01AD6F  0000               	dw	0
  1700  01AD71  0000               	dw	0
  1701  01AD73  0000               	dw	0
  1702  01AD75  0000               	dw	0
  1703  01AD77  0000               	dw	0
  1704  01AD79  0000               	dw	0
  1705  01AD7B  0000               	dw	0
  1706                           
  1707                           ;initializer for _H
  1708  01AD7D  00                 	db	0
  1709  01AD7E  00                 	db	0
  1710  01AD7F  01                 	db	1
  1711  01AD80  00                 	db	0
  1712  01AD81  01                 	db	1
  1713  01AD82  00                 	db	0
  1714  01AD83  01                 	db	1
  1715  01AD84  00                 	db	0
  1716  01AD85  00                 	db	0
  1717                           
  1718                           	psect	mediumconst
  1719  00F8E2                     __pmediumconst:
  1720                           	opt callstack 0
  1721  00F8E2  00                 	db	0
  1722  00F8E3                     _BVSOC_TABLE:
  1723                           	opt callstack 0
  1724  00F8E3  59D8               	dw	23000
  1725  00F8E5  0000               	dw	0
  1726  00F8E7  0005               	dw	5
  1727  00F8E9  0000               	dw	0
  1728  00F8EB  5B68               	dw	23400
  1729  00F8ED  0000               	dw	0
  1730  00F8EF  000A               	dw	10
  1731  00F8F1  0000               	dw	0
  1732  00F8F3  5C30               	dw	23600
  1733  00F8F5  0000               	dw	0
  1734  00F8F7  0014               	dw	20
  1735  00F8F9  0000               	dw	0
  1736  00F8FB  5E38               	dw	24120
  1737  00F8FD  0000               	dw	0
  1738  00F8FF  0019               	dw	25
  1739  00F901  0000               	dw	0
  1740  00F903  5E88               	dw	24200
  1741  00F905  0000               	dw	0
  1742  00F907  001E               	dw	30
  1743  00F909  0000               	dw	0
  1744  00F90B  5F78               	dw	24440
  1745  00F90D  0000               	dw	0
  1746  00F90F  0028               	dw	40
  1747  00F911  0000               	dw	0
  1748  00F913  5FDC               	dw	24540
  1749  00F915  0000               	dw	0
  1750  00F917  002D               	dw	45
  1751  00F919  0000               	dw	0
  1752  00F91B  6018               	dw	24600
  1753  00F91D  0000               	dw	0
  1754  00F91F  0032               	dw	50
  1755  00F921  0000               	dw	0
  1756  00F923  6046               	dw	24646
  1757  00F925  0000               	dw	0
  1758  00F927  0035               	dw	53
  1759  00F929  0000               	dw	0
  1760  00F92B  607C               	dw	24700
  1761  00F92D  0000               	dw	0
  1762  00F92F  0037               	dw	55
  1763  00F931  0000               	dw	0
  1764  00F933  60AE               	dw	24750
  1765  00F935  0000               	dw	0
  1766  00F937  0039               	dw	57
  1767  00F939  0000               	dw	0
  1768  00F93B  60E0               	dw	24800
  1769  00F93D  0000               	dw	0
  1770  00F93F  003C               	dw	60
  1771  00F941  0000               	dw	0
  1772  00F943  6112               	dw	24850
  1773  00F945  0000               	dw	0
  1774  00F947  003F               	dw	63
  1775  00F949  0000               	dw	0
  1776  00F94B  615D               	dw	24925
  1777  00F94D  0000               	dw	0
  1778  00F94F  0043               	dw	67
  1779  00F951  0000               	dw	0
  1780  00F953  61A8               	dw	25000
  1781  00F955  0000               	dw	0
  1782  00F957  0046               	dw	70
  1783  00F959  0000               	dw	0
  1784  00F95B  61BC               	dw	25020
  1785  00F95D  0000               	dw	0
  1786  00F95F  0048               	dw	72
  1787  00F961  0000               	dw	0
  1788  00F963  61D0               	dw	25040
  1789  00F965  0000               	dw	0
  1790  00F967  004B               	dw	75
  1791  00F969  0000               	dw	0
  1792  00F96B  61DA               	dw	25050
  1793  00F96D  0000               	dw	0
  1794  00F96F  0050               	dw	80
  1795  00F971  0000               	dw	0
  1796  00F973  61E4               	dw	25060
  1797  00F975  0000               	dw	0
  1798  00F977  0055               	dw	85
  1799  00F979  0000               	dw	0
  1800  00F97B  61F8               	dw	25080
  1801  00F97D  0000               	dw	0
  1802  00F97F  005A               	dw	90
  1803  00F981  0000               	dw	0
  1804  00F983  6208               	dw	25096
  1805  00F985  0000               	dw	0
  1806  00F987  005C               	dw	92
  1807  00F989  0000               	dw	0
  1808  00F98B  6222               	dw	25122
  1809  00F98D  0000               	dw	0
  1810  00F98F  005D               	dw	93
  1811  00F991  0000               	dw	0
  1812  00F993  6234               	dw	25140
  1813  00F995  0000               	dw	0
  1814  00F997  005F               	dw	95
  1815  00F999  0000               	dw	0
  1816  00F99B  6248               	dw	25160
  1817  00F99D  0000               	dw	0
  1818  00F99F  0061               	dw	97
  1819  00F9A1  0000               	dw	0
  1820  00F9A3  625C               	dw	25180
  1821  00F9A5  0000               	dw	0
  1822  00F9A7  0064               	dw	100
  1823  00F9A9  0000               	dw	0
  1824  00F9AB  6784               	dw	26500
  1825  00F9AD  0000               	dw	0
  1826  00F9AF  0062               	dw	98
  1827  00F9B1  0000               	dw	0
  1828  00F9B3                     __end_of_BVSOC_TABLE:
  1829                           	opt callstack 0
  1830  00F9B3                     _T:
  1831                           	opt callstack 0
  1832  00F9B3  63                 	db	99
  1833  00F9B4  6F                 	db	111
  1834  00F9B5  6D                 	db	109
  1835  00F9B6  6D                 	db	109
  1836  00F9B7  61                 	db	97
  1837  00F9B8  6E                 	db	110
  1838  00F9B9  64                 	db	100
  1839  00F9BA  73                 	db	115
  1840  00F9BB  20                 	db	32
  1841  00F9BC  31                 	db	49
  1842  00F9BD  00                 	db	0
  1843  00F9BE  00                 	db	0
  1844  00F9BF  00                 	db	0
  1845  00F9C0  00                 	db	0
  1846  00F9C1  00                 	db	0
  1847  00F9C2  00                 	db	0
  1848  00F9C3  00                 	db	0
  1849  00F9C4  00                 	db	0
  1850  00F9C5  64                 	db	100
  1851  00F9C6  69                 	db	105
  1852  00F9C7  73                 	db	115
  1853  00F9C8  70                 	db	112
  1854  00F9C9  6C                 	db	108
  1855  00F9CA  61                 	db	97
  1856  00F9CB  79                 	db	121
  1857  00F9CC  73                 	db	115
  1858  00F9CD  20                 	db	32
  1859  00F9CE  31                 	db	49
  1860  00F9CF  00                 	db	0
  1861  00F9D0  00                 	db	0
  1862  00F9D1  00                 	db	0
  1863  00F9D2  00                 	db	0
  1864  00F9D3  00                 	db	0
  1865  00F9D4  00                 	db	0
  1866  00F9D5  00                 	db	0
  1867  00F9D6  00                 	db	0
  1868  00F9D7  63                 	db	99
  1869  00F9D8  6F                 	db	111
  1870  00F9D9  6D                 	db	109
  1871  00F9DA  6D                 	db	109
  1872  00F9DB  61                 	db	97
  1873  00F9DC  6E                 	db	110
  1874  00F9DD  64                 	db	100
  1875  00F9DE  73                 	db	115
  1876  00F9DF  20                 	db	32
  1877  00F9E0  32                 	db	50
  1878  00F9E1  00                 	db	0
  1879  00F9E2  00                 	db	0
  1880  00F9E3  00                 	db	0
  1881  00F9E4  00                 	db	0
  1882  00F9E5  00                 	db	0
  1883  00F9E6  00                 	db	0
  1884  00F9E7  00                 	db	0
  1885  00F9E8  00                 	db	0
  1886  00F9E9  64                 	db	100
  1887  00F9EA  69                 	db	105
  1888  00F9EB  73                 	db	115
  1889  00F9EC  70                 	db	112
  1890  00F9ED  6C                 	db	108
  1891  00F9EE  61                 	db	97
  1892  00F9EF  79                 	db	121
  1893  00F9F0  73                 	db	115
  1894  00F9F1  20                 	db	32
  1895  00F9F2  32                 	db	50
  1896  00F9F3  00                 	db	0
  1897  00F9F4  00                 	db	0
  1898  00F9F5  00                 	db	0
  1899  00F9F6  00                 	db	0
  1900  00F9F7  00                 	db	0
  1901  00F9F8  00                 	db	0
  1902  00F9F9  00                 	db	0
  1903  00F9FA  00                 	db	0
  1904  00F9FB  63                 	db	99
  1905  00F9FC  6F                 	db	111
  1906  00F9FD  6D                 	db	109
  1907  00F9FE  6D                 	db	109
  1908  00F9FF  61                 	db	97
  1909  00FA00  6E                 	db	110
  1910  00FA01  64                 	db	100
  1911  00FA02  73                 	db	115
  1912  00FA03  20                 	db	32
  1913  00FA04  33                 	db	51
  1914  00FA05  00                 	db	0
  1915  00FA06  00                 	db	0
  1916  00FA07  00                 	db	0
  1917  00FA08  00                 	db	0
  1918  00FA09  00                 	db	0
  1919  00FA0A  00                 	db	0
  1920  00FA0B  00                 	db	0
  1921  00FA0C  00                 	db	0
  1922  00FA0D  64                 	db	100
  1923  00FA0E  69                 	db	105
  1924  00FA0F  73                 	db	115
  1925  00FA10  70                 	db	112
  1926  00FA11  6C                 	db	108
  1927  00FA12  61                 	db	97
  1928  00FA13  79                 	db	121
  1929  00FA14  73                 	db	115
  1930  00FA15  20                 	db	32
  1931  00FA16  33                 	db	51
  1932  00FA17  00                 	db	0
  1933  00FA18  00                 	db	0
  1934  00FA19  00                 	db	0
  1935  00FA1A  00                 	db	0
  1936  00FA1B  00                 	db	0
  1937  00FA1C  00                 	db	0
  1938  00FA1D  00                 	db	0
  1939  00FA1E  00                 	db	0
  1940  00FA1F  63                 	db	99
  1941  00FA20  6F                 	db	111
  1942  00FA21  6D                 	db	109
  1943  00FA22  6D                 	db	109
  1944  00FA23  61                 	db	97
  1945  00FA24  6E                 	db	110
  1946  00FA25  64                 	db	100
  1947  00FA26  73                 	db	115
  1948  00FA27  20                 	db	32
  1949  00FA28  34                 	db	52
  1950  00FA29  00                 	db	0
  1951  00FA2A  00                 	db	0
  1952  00FA2B  00                 	db	0
  1953  00FA2C  00                 	db	0
  1954  00FA2D  00                 	db	0
  1955  00FA2E  00                 	db	0
  1956  00FA2F  00                 	db	0
  1957  00FA30  00                 	db	0
  1958  00FA31  64                 	db	100
  1959  00FA32  69                 	db	105
  1960  00FA33  73                 	db	115
  1961  00FA34  70                 	db	112
  1962  00FA35  6C                 	db	108
  1963  00FA36  61                 	db	97
  1964  00FA37  79                 	db	121
  1965  00FA38  73                 	db	115
  1966  00FA39  20                 	db	32
  1967  00FA3A  34                 	db	52
  1968  00FA3B  00                 	db	0
  1969  00FA3C  00                 	db	0
  1970  00FA3D  00                 	db	0
  1971  00FA3E  00                 	db	0
  1972  00FA3F  00                 	db	0
  1973  00FA40  00                 	db	0
  1974  00FA41  00                 	db	0
  1975  00FA42  00                 	db	0
  1976  00FA43                     __end_of_T:
  1977                           	opt callstack 0
  1978  00FA43                     _spin:
  1979                           	opt callstack 0
  1980  00FA43  7C                 	db	124
  1981  00FA44  7C                 	db	124
  1982  00FA45  2F                 	db	47
  1983  00FA46  2F                 	db	47
  1984  00FA47  2D                 	db	45
  1985  00FA48  2D                 	db	45
  1986  00FA49  00                 	db	0
  1987  00FA4A  00                 	db	0
  1988  00FA4B  00                 	db	0
  1989  00FA4C  00                 	db	0
  1990  00FA4D  00                 	db	0
  1991  00FA4E  00                 	db	0
  1992  00FA4F  00                 	db	0
  1993  00FA50  00                 	db	0
  1994  00FA51  00                 	db	0
  1995  00FA52  00                 	db	0
  1996  00FA53  00                 	db	0
  1997  00FA54  00                 	db	0
  1998  00FA55  00                 	db	0
  1999  00FA56  00                 	db	0
  2000  00FA57  7C                 	db	124
  2001  00FA58  7C                 	db	124
  2002  00FA59  2F                 	db	47
  2003  00FA5A  2F                 	db	47
  2004  00FA5B  2D                 	db	45
  2005  00FA5C  2D                 	db	45
  2006  00FA5D  5C                 	db	92
  2007  00FA5E  5C                 	db	92
  2008  00FA5F  00                 	db	0
  2009  00FA60  00                 	db	0
  2010  00FA61  00                 	db	0
  2011  00FA62  00                 	db	0
  2012  00FA63  00                 	db	0
  2013  00FA64  00                 	db	0
  2014  00FA65  00                 	db	0
  2015  00FA66  00                 	db	0
  2016  00FA67  00                 	db	0
  2017  00FA68  00                 	db	0
  2018  00FA69  00                 	db	0
  2019  00FA6A  00                 	db	0
  2020  00FA6B  4F                 	db	79
  2021  00FA6C  4F                 	db	79
  2022  00FA6D  4F                 	db	79
  2023  00FA6E  4F                 	db	79
  2024  00FA6F  4F                 	db	79
  2025  00FA70  4F                 	db	79
  2026  00FA71  2D                 	db	45
  2027  00FA72  2D                 	db	45
  2028  00FA73  5F                 	db	95
  2029  00FA74  5F                 	db	95
  2030  00FA75  2D                 	db	45
  2031  00FA76  00                 	db	0
  2032  00FA77  00                 	db	0
  2033  00FA78  00                 	db	0
  2034  00FA79  00                 	db	0
  2035  00FA7A  00                 	db	0
  2036  00FA7B  00                 	db	0
  2037  00FA7C  00                 	db	0
  2038  00FA7D  00                 	db	0
  2039  00FA7E  00                 	db	0
  2040  00FA7F  76                 	db	118
  2041  00FA80  76                 	db	118
  2042  00FA81  3C                 	db	60
  2043  00FA82  3C                 	db	60
  2044  00FA83  5E                 	db	94
  2045  00FA84  5E                 	db	94
  2046  00FA85  3E                 	db	62
  2047  00FA86  3E                 	db	62
  2048  00FA87  00                 	db	0
  2049  00FA88  00                 	db	0
  2050  00FA89  00                 	db	0
  2051  00FA8A  00                 	db	0
  2052  00FA8B  00                 	db	0
  2053  00FA8C  00                 	db	0
  2054  00FA8D  00                 	db	0
  2055  00FA8E  00                 	db	0
  2056  00FA8F  00                 	db	0
  2057  00FA90  00                 	db	0
  2058  00FA91  00                 	db	0
  2059  00FA92  00                 	db	0
  2060  00FA93  2E                 	db	46
  2061  00FA94  2E                 	db	46
  2062  00FA95  2A                 	db	42
  2063  00FA96  2A                 	db	42
  2064  00FA97  78                 	db	120
  2065  00FA98  23                 	db	35
  2066  00FA99  78                 	db	120
  2067  00FA9A  23                 	db	35
  2068  00FA9B  58                 	db	88
  2069  00FA9C  58                 	db	88
  2070  00FA9D  7C                 	db	124
  2071  00FA9E  7C                 	db	124
  2072  00FA9F  2D                 	db	45
  2073  00FAA0  2D                 	db	45
  2074  00FAA1  00                 	db	0
  2075  00FAA2  00                 	db	0
  2076  00FAA3  00                 	db	0
  2077  00FAA4  00                 	db	0
  2078  00FAA5  00                 	db	0
  2079  00FAA6  00                 	db	0
  2080  00FAA7  2E                 	db	46
  2081  00FAA8  2E                 	db	46
  2082  00FAA9  6F                 	db	111
  2083  00FAAA  6F                 	db	111
  2084  00FAAB  4F                 	db	79
  2085  00FAAC  4F                 	db	79
  2086  00FAAD  6F                 	db	111
  2087  00FAAE  6F                 	db	111
  2088  00FAAF  00                 	db	0
  2089  00FAB0  00                 	db	0
  2090  00FAB1  00                 	db	0
  2091  00FAB2  00                 	db	0
  2092  00FAB3  00                 	db	0
  2093  00FAB4  00                 	db	0
  2094  00FAB5  00                 	db	0
  2095  00FAB6  00                 	db	0
  2096  00FAB7  00                 	db	0
  2097  00FAB8  00                 	db	0
  2098  00FAB9  00                 	db	0
  2099  00FABA  00                 	db	0
  2100  00FABB                     __end_of_spin:
  2101                           	opt callstack 0
  2102  00FABB  0000               	dw	0
  2103  00FABD  3F80               	dw	16256
  2104  00FABF  0000               	dw	0
  2105  00FAC1  3FC0               	dw	16320
  2106  00FAC3                     __end_of_bp:
  2107                           	opt callstack 0
  2108  00FAC3  AA00               	dw	43520
  2109  00FAC5  3FB8               	dw	16312
  2110  00FAC7                     __end_of_ivln2_h:
  2111                           	opt callstack 0
  2112  00FAC7  23C6               	dw	9158
  2113  00FAC9  B8F6               	dw	47350
  2114  00FACB                     __end_of_cp_l:
  2115                           	opt callstack 0
  2116  00FACB  4000               	dw	16384
  2117  00FACD  3F76               	dw	16246
  2118  00FACF                     __end_of_cp_h:
  2119                           	opt callstack 0
  2120  0000                     _IVTADL	set	14493
  2121  0000                     _IVTADH	set	14494
  2122  0000                     _IVTADU	set	14495
  2123  0000                     _PIR6bits	set	14758
  2124  0000                     _PIR4bits	set	14756
  2125  0000                     _PIE8bits	set	14744
  2126  0000                     _PIR8bits	set	14760
  2127  0000                     _NVMCON2	set	14822
  2128  0000                     _NVMDAT	set	14819
  2129  0000                     _NVMADRL	set	14816
  2130  0000                     _NVMADRH	set	14817
  2131  0000                     _NVMCON1bits	set	14821
  2132  0000                     _SCANPR	set	14839
  2133  0000                     _DMA2PR	set	14836
  2134  0000                     _DMA1PR	set	14835
  2135  0000                     _MAINPR	set	14834
  2136  0000                     _ISRPR	set	14833
  2137  0000                     _PIE2bits	set	14738
  2138  0000                     _PIR2bits	set	14754
  2139  0000                     _PIE9bits	set	14745
  2140  0000                     _PIR9bits	set	14761
  2141  0000                     _PIE6bits	set	14742
  2142  0000                     _PIE3bits	set	14739
  2143  0000                     _PMD7	set	14791
  2144  0000                     _PMD6	set	14790
  2145  0000                     _PMD5	set	14789
  2146  0000                     _PMD4	set	14788
  2147  0000                     _PMD3	set	14787
  2148  0000                     _PMD2	set	14786
  2149  0000                     _PMD1	set	14785
  2150  0000                     _PMD0	set	14784
  2151  0000                     _OSCTUNE	set	14814
  2152  0000                     _OSCFRQ	set	14815
  2153  0000                     _OSCEN	set	14813
  2154  0000                     _OSCCON3	set	14811
  2155  0000                     _OSCCON1	set	14809
  2156  0000                     _IPR8bits	set	14728
  2157  0000                     _IPR9bits	set	14729
  2158  0000                     _IPR5bits	set	14725
  2159  0000                     _IPR1bits	set	14721
  2160  0000                     _IPR3bits	set	14723
  2161  0000                     _IPR6bits	set	14726
  2162  0000                     _IPR2bits	set	14722
  2163  0000                     _PIE5bits	set	14741
  2164  0000                     _PIE1bits	set	14737
  2165  0000                     _PIR5bits	set	14757
  2166  0000                     _PIR1bits	set	14753
  2167  0000                     _PLLR	set	118496
  2168  0000                     _SPI1SDIPPS	set	15071
  2169  0000                     _U1RXPPS	set	15077
  2170  0000                     _RC6PPS	set	14870
  2171  0000                     _RC5PPS	set	14869
  2172  0000                     _INT1PPS	set	15041
  2173  0000                     _RD1PPS	set	14873
  2174  0000                     _INT0PPS	set	15040
  2175  0000                     _RC3PPS	set	14867
  2176  0000                     _RB6PPS	set	14862
  2177  0000                     _SPI1SCKPPS	set	15070
  2178  0000                     _U2RXPPS	set	15080
  2179  0000                     _SLRCONF	set	14995
  2180  0000                     _SLRCONE	set	14979
  2181  0000                     _SLRCOND	set	14963
  2182  0000                     _SLRCONC	set	14947
  2183  0000                     _SLRCONB	set	14931
  2184  0000                     _SLRCONA	set	14915
  2185  0000                     _ODCOND	set	14962
  2186  0000                     _ODCONC	set	14946
  2187  0000                     _ODCONB	set	14930
  2188  0000                     _ODCONA	set	14914
  2189  0000                     _ODCONF	set	14994
  2190  0000                     _ODCONE	set	14978
  2191  0000                     _WPUC	set	14945
  2192  0000                     _WPUA	set	14913
  2193  0000                     _WPUB	set	14929
  2194  0000                     _WPUE	set	14977
  2195  0000                     _WPUF	set	14993
  2196  0000                     _WPUD	set	14961
  2197  0000                     _ANSELA	set	14912
  2198  0000                     _ANSELF	set	14992
  2199  0000                     _ANSELE	set	14976
  2200  0000                     _ANSELB	set	14928
  2201  0000                     _ANSELC	set	14944
  2202  0000                     _ANSELD	set	14960
  2203  0000                     _DMA2SSA	set	15321
  2204  0000                     _DMA1SSA	set	15353
  2205  0000                     _DMA2DSZ	set	15310
  2206  0000                     _DMA2SSZ	set	15319
  2207  0000                     _DMA2DSA	set	15312
  2208  0000                     _DMA1DSZ	set	15342
  2209  0000                     _DMA1SSZ	set	15351
  2210  0000                     _DMA1DSA	set	15344
  2211  0000                     _DMA2CON0bits	set	15324
  2212  0000                     _DMA2CON1bits	set	15325
  2213  0000                     _DMA1CON0bits	set	15356
  2214  0000                     _DMA1CON1bits	set	15357
  2215  0000                     _DMA2CON0	set	15324
  2216  0000                     _DMA2AIRQ	set	15326
  2217  0000                     _DMA2SIRQ	set	15327
  2218  0000                     _DMA2CON1	set	15325
  2219  0000                     _DMA1CON0	set	15356
  2220  0000                     _DMA1AIRQ	set	15358
  2221  0000                     _DMA1SIRQ	set	15359
  2222  0000                     _DMA1CON1	set	15357
  2223  0000                     _CLKRCON	set	15589
  2224  0000                     _CLKRCLK	set	15590
  2225  0000                     _SPI1CON1bits	set	15637
  2226  0000                     _SPI1STATUSbits	set	15639
  2227  0000                     _SPI1INTFbits	set	15642
  2228  0000                     _SPI1CON0bits	set	15636
  2229  0000                     _SPI1RXB	set	15632
  2230  0000                     _SPI1TXB	set	15633
  2231  0000                     _SPI1TCNTL	set	15634
  2232  0000                     _SPI1CON0	set	15636
  2233  0000                     _SPI1CLK	set	15644
  2234  0000                     _SPI1BAUD	set	15641
  2235  0000                     _SPI1CON2	set	15638
  2236  0000                     _SPI1CON1	set	15637
  2237  0000                     _U2RXB	set	15824
  2238  0000                     _U2TXB	set	15826
  2239  0000                     _U2ERRIE	set	15842
  2240  0000                     _U2ERRIR	set	15841
  2241  0000                     _U2UIR	set	15840
  2242  0000                     _U2FIFO	set	15839
  2243  0000                     _U2BRGH	set	15838
  2244  0000                     _U2BRGL	set	15837
  2245  0000                     _U2CON2	set	15836
  2246  0000                     _U2CON1	set	15835
  2247  0000                     _U2CON0	set	15834
  2248  0000                     _U2P3L	set	15832
  2249  0000                     _U2P2L	set	15830
  2250  0000                     _U2P1L	set	15828
  2251  0000                     _U1RXB	set	15848
  2252  0000                     _U1ERRIE	set	15866
  2253  0000                     _U1ERRIR	set	15865
  2254  0000                     _U1UIR	set	15864
  2255  0000                     _U1FIFO	set	15863
  2256  0000                     _U1BRGH	set	15862
  2257  0000                     _U1BRGL	set	15861
  2258  0000                     _U1CON2	set	15860
  2259  0000                     _U1CON1	set	15859
  2260  0000                     _U1CON0	set	15858
  2261  0000                     _U1P3H	set	15857
  2262  0000                     _U1P3L	set	15856
  2263  0000                     _U1P2H	set	15855
  2264  0000                     _U1P2L	set	15854
  2265  0000                     _U1P1H	set	15853
  2266  0000                     _U1P1L	set	15852
  2267  0000                     _FVRCON	set	16065
  2268  0000                     _ADFLTRL	set	16102
  2269  0000                     _ADFLTRH	set	16103
  2270  0000                     _ADCON0bits	set	16120
  2271  0000                     _ADCON0	set	16120
  2272  0000                     _ADCLK	set	16127
  2273  0000                     _ADACT	set	16126
  2274  0000                     _ADREF	set	16125
  2275  0000                     _ADSTAT	set	16124
  2276  0000                     _ADCON3	set	16123
  2277  0000                     _ADCON2	set	16122
  2278  0000                     _ADCON1	set	16121
  2279  0000                     _ADPREH	set	16119
  2280  0000                     _ADPREL	set	16118
  2281  0000                     _ADCAP	set	16117
  2282  0000                     _ADACQH	set	16116
  2283  0000                     _ADACQL	set	16115
  2284  0000                     _ADPCH	set	16113
  2285  0000                     _ADRPT	set	16108
  2286  0000                     _ADACCU	set	16106
  2287  0000                     _ADSTPTH	set	16101
  2288  0000                     _ADSTPTL	set	16100
  2289  0000                     _ADUTHH	set	16097
  2290  0000                     _ADUTHL	set	16096
  2291  0000                     _ADLTHH	set	16095
  2292  0000                     _ADLTHL	set	16094
  2293  0000                     _CCPTMRS1bits	set	16223
  2294  0000                     _PORTDbits	set	16333
  2295  0000                     _PORTFbits	set	16335
  2296  0000                     _LATFbits	set	16319
  2297  0000                     _LATCbits	set	16316
  2298  0000                     _LATDbits	set	16317
  2299  0000                     _PORTBbits	set	16331
  2300  0000                     _T3CONbits	set	16294
  2301  0000                     _T3CON	set	16294
  2302  0000                     _TMR3L	set	16292
  2303  0000                     _TMR3H	set	16293
  2304  0000                     _T3CLK	set	16297
  2305  0000                     _T3GATE	set	16296
  2306  0000                     _T3GCON	set	16295
  2307  0000                     _T2CON	set	16300
  2308  0000                     _T2TMR	set	16298
  2309  0000                     _T2PR	set	16299
  2310  0000                     _T2RST	set	16303
  2311  0000                     _T2HLT	set	16301
  2312  0000                     _T2CLKCON	set	16302
  2313  0000                     _PWM8DCL	set	16224
  2314  0000                     _PWM8DCH	set	16225
  2315  0000                     _PWM8CON	set	16226
  2316  0000                     _LATEbits	set	16318
  2317  0000                     _T5CONbits	set	16282
  2318  0000                     _T5CON	set	16282
  2319  0000                     _TMR5L	set	16280
  2320  0000                     _TMR5H	set	16281
  2321  0000                     _T5CLK	set	16285
  2322  0000                     _T5GATE	set	16284
  2323  0000                     _T5GCON	set	16283
  2324  0000                     _T6CON	set	16276
  2325  0000                     _T6TMR	set	16274
  2326  0000                     _T6PR	set	16275
  2327  0000                     _T6RST	set	16279
  2328  0000                     _T6HLT	set	16277
  2329  0000                     _T6CLKCON	set	16278
  2330  0000                     _TRISD	set	16325
  2331  0000                     _TRISC	set	16324
  2332  0000                     _TRISB	set	16323
  2333  0000                     _TRISA	set	16322
  2334  0000                     _TRISF	set	16327
  2335  0000                     _TRISE	set	16326
  2336  0000                     _LATC	set	16316
  2337  0000                     _LATB	set	16315
  2338  0000                     _LATF	set	16319
  2339  0000                     _LATA	set	16314
  2340  0000                     _LATD	set	16317
  2341  0000                     _LATE	set	16318
  2342  0000                     _IVTLOCKbits	set	16340
  2343  0000                     _IVTLOCK	set	16340
  2344  0000                     _INTCON0bits	set	16338
  2345  0000                     _GIE	set	130711
  2346  00FACF                     STR_81:
  2347                           
  2348                           ; BSR set to: 57
  2349  00FACF  20                 	db	32
  2350  00FAD0  25                 	db	37
  2351  00FAD1  63                 	db	99	;'c'
  2352  00FAD2  20                 	db	32
  2353  00FAD3  2C                 	db	44
  2354  00FAD4  25                 	db	37
  2355  00FAD5  6C                 	db	108	;'l'
  2356  00FAD6  75                 	db	117	;'u'
  2357  00FAD7  2C                 	db	44
  2358  00FAD8  25                 	db	37
  2359  00FAD9  34                 	db	52	;'4'
  2360  00FADA  2E                 	db	46
  2361  00FADB  34                 	db	52	;'4'
  2362  00FADC  66                 	db	102	;'f'
  2363  00FADD  2C                 	db	44
  2364  00FADE  25                 	db	37
  2365  00FADF  34                 	db	52	;'4'
  2366  00FAE0  2E                 	db	46
  2367  00FAE1  34                 	db	52	;'4'
  2368  00FAE2  66                 	db	102	;'f'
  2369  00FAE3  2C                 	db	44
  2370  00FAE4  25                 	db	37
  2371  00FAE5  34                 	db	52	;'4'
  2372  00FAE6  2E                 	db	46
  2373  00FAE7  34                 	db	52	;'4'
  2374  00FAE8  66                 	db	102	;'f'
  2375  00FAE9  2C                 	db	44
  2376  00FAEA  25                 	db	37
  2377  00FAEB  34                 	db	52	;'4'
  2378  00FAEC  2E                 	db	46
  2379  00FAED  34                 	db	52	;'4'
  2380  00FAEE  66                 	db	102	;'f'
  2381  00FAEF  2C                 	db	44
  2382  00FAF0  25                 	db	37
  2383  00FAF1  34                 	db	52	;'4'
  2384  00FAF2  2E                 	db	46
  2385  00FAF3  34                 	db	52	;'4'
  2386  00FAF4  66                 	db	102	;'f'
  2387  00FAF5  2C                 	db	44
  2388  00FAF6  25                 	db	37
  2389  00FAF7  34                 	db	52	;'4'
  2390  00FAF8  2E                 	db	46
  2391  00FAF9  33                 	db	51	;'3'
  2392  00FAFA  66                 	db	102	;'f'
  2393  00FAFB  2C                 	db	44
  2394  00FAFC  25                 	db	37
  2395  00FAFD  34                 	db	52	;'4'
  2396  00FAFE  2E                 	db	46
  2397  00FAFF  33                 	db	51	;'3'
  2398  00FB00  66                 	db	102	;'f'
  2399  00FB01  2C                 	db	44
  2400  00FB02  25                 	db	37
  2401  00FB03  34                 	db	52	;'4'
  2402  00FB04  2E                 	db	46
  2403  00FB05  33                 	db	51	;'3'
  2404  00FB06  66                 	db	102	;'f'
  2405  00FB07  2C                 	db	44
  2406  00FB08  25                 	db	37
  2407  00FB09  34                 	db	52	;'4'
  2408  00FB0A  2E                 	db	46
  2409  00FB0B  33                 	db	51	;'3'
  2410  00FB0C  66                 	db	102	;'f'
  2411  00FB0D  2C                 	db	44
  2412  00FB0E  25                 	db	37
  2413  00FB0F  34                 	db	52	;'4'
  2414  00FB10  2E                 	db	46
  2415  00FB11  33                 	db	51	;'3'
  2416  00FB12  66                 	db	102	;'f'
  2417  00FB13  2C                 	db	44
  2418  00FB14  25                 	db	37
  2419  00FB15  34                 	db	52	;'4'
  2420  00FB16  2E                 	db	46
  2421  00FB17  33                 	db	51	;'3'
  2422  00FB18  66                 	db	102	;'f'
  2423  00FB19  2C                 	db	44
  2424  00FB1A  25                 	db	37
  2425  00FB1B  64                 	db	100	;'d'
  2426  00FB1C  2C                 	db	44
  2427  00FB1D  25                 	db	37
  2428  00FB1E  64                 	db	100	;'d'
  2429  00FB1F  2C                 	db	44
  2430  00FB20  25                 	db	37
  2431  00FB21  32                 	db	50	;'2'
  2432  00FB22  2E                 	db	46
  2433  00FB23  36                 	db	54	;'6'
  2434  00FB24  66                 	db	102	;'f'
  2435  00FB25  2C                 	db	44
  2436  00FB26  25                 	db	37
  2437  00FB27  34                 	db	52	;'4'
  2438  00FB28  2E                 	db	46
  2439  00FB29  33                 	db	51	;'3'
  2440  00FB2A  66                 	db	102	;'f'
  2441  00FB2B  2C                 	db	44
  2442  00FB2C  25                 	db	37
  2443  00FB2D  64                 	db	100	;'d'
  2444  00FB2E  2C                 	db	44
  2445  00FB2F  25                 	db	37
  2446  00FB30  64                 	db	100	;'d'
  2447  00FB31  2C                 	db	44
  2448  00FB32  25                 	db	37
  2449  00FB33  6C                 	db	108	;'l'
  2450  00FB34  75                 	db	117	;'u'
  2451  00FB35  2C                 	db	44
  2452  00FB36  25                 	db	37
  2453  00FB37  6C                 	db	108	;'l'
  2454  00FB38  75                 	db	117	;'u'
  2455  00FB39  2C                 	db	44
  2456  00FB3A  25                 	db	37
  2457  00FB3B  34                 	db	52	;'4'
  2458  00FB3C  2E                 	db	46
  2459  00FB3D  33                 	db	51	;'3'
  2460  00FB3E  66                 	db	102	;'f'
  2461  00FB3F  2C                 	db	44
  2462  00FB40  25                 	db	37
  2463  00FB41  34                 	db	52	;'4'
  2464  00FB42  2E                 	db	46
  2465  00FB43  33                 	db	51	;'3'
  2466  00FB44  66                 	db	102	;'f'
  2467  00FB45  2C                 	db	44
  2468  00FB46  25                 	db	37
  2469  00FB47  34                 	db	52	;'4'
  2470  00FB48  2E                 	db	46
  2471  00FB49  33                 	db	51	;'3'
  2472  00FB4A  66                 	db	102	;'f'
  2473  00FB4B  0D                 	db	13
  2474  00FB4C  0A                 	db	10
  2475  00FB4D  00                 	db	0
  2476  00FB4E                     STR_39:
  2477                           
  2478                           ; BSR set to: 57
  2479  00FB4E  53                 	db	83	;'S'
  2480  00FB4F  25                 	db	37
  2481  00FB50  63                 	db	99	;'c'
  2482  00FB51  43                 	db	67	;'C'
  2483  00FB52  20                 	db	32
  2484  00FB53  25                 	db	37
  2485  00FB54  64                 	db	100	;'d'
  2486  00FB55  20                 	db	32
  2487  00FB56  52                 	db	82	;'R'
  2488  00FB57  55                 	db	85	;'U'
  2489  00FB58  4E                 	db	78	;'N'
  2490  00FB59  20                 	db	32
  2491  00FB5A  25                 	db	37
  2492  00FB5B  64                 	db	100	;'d'
  2493  00FB5C  20                 	db	32
  2494  00FB5D  56                 	db	86	;'V'
  2495  00FB5E  25                 	db	37
  2496  00FB5F  32                 	db	50	;'2'
  2497  00FB60  2E                 	db	46
  2498  00FB61  32                 	db	50	;'2'
  2499  00FB62  66                 	db	102	;'f'
  2500  00FB63  20                 	db	32
  2501  00FB64  20                 	db	32
  2502  00FB65  20                 	db	32
  2503  00FB66  20                 	db	32
  2504  00FB67  20                 	db	32
  2505  00FB68  20                 	db	32
  2506  00FB69  20                 	db	32
  2507  00FB6A  00                 	db	0
  2508  00FB6B                     STR_20:
  2509                           
  2510                           ; BSR set to: 57
  2511  00FB6B  52                 	db	82	;'R'
  2512  00FB6C  31                 	db	49	;'1'
  2513  00FB6D  20                 	db	32
  2514  00FB6E  25                 	db	37
  2515  00FB6F  32                 	db	50	;'2'
  2516  00FB70  2E                 	db	46
  2517  00FB71  33                 	db	51	;'3'
  2518  00FB72  66                 	db	102	;'f'
  2519  00FB73  20                 	db	32
  2520  00FB74  25                 	db	37
  2521  00FB75  33                 	db	51	;'3'
  2522  00FB76  2E                 	db	46
  2523  00FB77  34                 	db	52	;'4'
  2524  00FB78  66                 	db	102	;'f'
  2525  00FB79  20                 	db	32
  2526  00FB7A  20                 	db	32
  2527  00FB7B  20                 	db	32
  2528  00FB7C  20                 	db	32
  2529  00FB7D  20                 	db	32
  2530  00FB7E  20                 	db	32
  2531  00FB7F  20                 	db	32
  2532  00FB80  20                 	db	32
  2533  00FB81  20                 	db	32
  2534  00FB82  20                 	db	32
  2535  00FB83  20                 	db	32
  2536  00FB84  00                 	db	0
  2537  00FB85                     STR_21:
  2538                           
  2539                           ; BSR set to: 57
  2540  00FB85  52                 	db	82	;'R'
  2541  00FB86  32                 	db	50	;'2'
  2542  00FB87  20                 	db	32
  2543  00FB88  25                 	db	37
  2544  00FB89  32                 	db	50	;'2'
  2545  00FB8A  2E                 	db	46
  2546  00FB8B  33                 	db	51	;'3'
  2547  00FB8C  66                 	db	102	;'f'
  2548  00FB8D  20                 	db	32
  2549  00FB8E  25                 	db	37
  2550  00FB8F  33                 	db	51	;'3'
  2551  00FB90  2E                 	db	46
  2552  00FB91  34                 	db	52	;'4'
  2553  00FB92  66                 	db	102	;'f'
  2554  00FB93  20                 	db	32
  2555  00FB94  20                 	db	32
  2556  00FB95  20                 	db	32
  2557  00FB96  20                 	db	32
  2558  00FB97  20                 	db	32
  2559  00FB98  20                 	db	32
  2560  00FB99  20                 	db	32
  2561  00FB9A  20                 	db	32
  2562  00FB9B  20                 	db	32
  2563  00FB9C  20                 	db	32
  2564  00FB9D  20                 	db	32
  2565  00FB9E  00                 	db	0
  2566  00FB9F                     STR_11:
  2567                           
  2568                           ; BSR set to: 57
  2569  00FB9F  53                 	db	83	;'S'
  2570  00FBA0  20                 	db	32
  2571  00FBA1  53                 	db	83	;'S'
  2572  00FBA2  25                 	db	37
  2573  00FBA3  63                 	db	99	;'c'
  2574  00FBA4  43                 	db	67	;'C'
  2575  00FBA5  20                 	db	32
  2576  00FBA6  25                 	db	37
  2577  00FBA7  64                 	db	100	;'d'
  2578  00FBA8  20                 	db	32
  2579  00FBA9  25                 	db	37
  2580  00FBAA  32                 	db	50	;'2'
  2581  00FBAB  2E                 	db	46
  2582  00FBAC  34                 	db	52	;'4'
  2583  00FBAD  66                 	db	102	;'f'
  2584  00FBAE  20                 	db	32
  2585  00FBAF  20                 	db	32
  2586  00FBB0  20                 	db	32
  2587  00FBB1  20                 	db	32
  2588  00FBB2  20                 	db	32
  2589  00FBB3  20                 	db	32
  2590  00FBB4  20                 	db	32
  2591  00FBB5  20                 	db	32
  2592  00FBB6  20                 	db	32
  2593  00FBB7  20                 	db	32
  2594  00FBB8  00                 	db	0
  2595  00FBB9                     
  2596                           ; BSR set to: 57
  2597  00FBB9  20                 	db	32
  2598  00FBBA  4D                 	db	77	;'M'
  2599  00FBBB  65                 	db	101	;'e'
  2600  00FBBC  73                 	db	115	;'s'
  2601  00FBBD  67                 	db	103	;'g'
  2602  00FBBE  20                 	db	32
  2603  00FBBF  25                 	db	37
  2604  00FBC0  64                 	db	100	;'d'
  2605  00FBC1  20                 	db	32
  2606  00FBC2  53                 	db	83	;'S'
  2607  00FBC3  74                 	db	116	;'t'
  2608  00FBC4  61                 	db	97	;'a'
  2609  00FBC5  63                 	db	99	;'c'
  2610  00FBC6  6B                 	db	107	;'k'
  2611  00FBC7  20                 	db	32
  2612  00FBC8  25                 	db	37
  2613  00FBC9  64                 	db	100	;'d'
  2614  00FBCA  20                 	db	32
  2615  00FBCB  20                 	db	32
  2616  00FBCC  20                 	db	32
  2617  00FBCD  20                 	db	32
  2618  00FBCE  20                 	db	32
  2619  00FBCF  20                 	db	32
  2620  00FBD0  00                 	db	0
  2621  00FBD1                     STR_40:
  2622                           
  2623                           ; BSR set to: 57
  2624  00FBD1  45                 	db	69	;'E'
  2625  00FBD2  53                 	db	83	;'S'
  2626  00FBD3  52                 	db	82	;'R'
  2627  00FBD4  20                 	db	32
  2628  00FBD5  20                 	db	32
  2629  00FBD6  25                 	db	37
  2630  00FBD7  32                 	db	50	;'2'
  2631  00FBD8  2E                 	db	46
  2632  00FBD9  36                 	db	54	;'6'
  2633  00FBDA  66                 	db	102	;'f'
  2634  00FBDB  20                 	db	32
  2635  00FBDC  20                 	db	32
  2636  00FBDD  20                 	db	32
  2637  00FBDE  20                 	db	32
  2638  00FBDF  20                 	db	32
  2639  00FBE0  20                 	db	32
  2640  00FBE1  20                 	db	32
  2641  00FBE2  20                 	db	32
  2642  00FBE3  20                 	db	32
  2643  00FBE4  20                 	db	32
  2644  00FBE5  20                 	db	32
  2645  00FBE6  20                 	db	32
  2646  00FBE7  00                 	db	0
  2647  00FBE8                     STR_37:
  2648                           
  2649                           ; BSR set to: 57
  2650  00FBE8  42                 	db	66	;'B'
  2651  00FBE9  41                 	db	65	;'A'
  2652  00FBEA  54                 	db	84	;'T'
  2653  00FBEB  54                 	db	84	;'T'
  2654  00FBEC  20                 	db	32
  2655  00FBED  50                 	db	80	;'P'
  2656  00FBEE  57                 	db	87	;'W'
  2657  00FBEF  52                 	db	82	;'R'
  2658  00FBF0  20                 	db	32
  2659  00FBF1  25                 	db	37
  2660  00FBF2  33                 	db	51	;'3'
  2661  00FBF3  2E                 	db	46
  2662  00FBF4  32                 	db	50	;'2'
  2663  00FBF5  66                 	db	102	;'f'
  2664  00FBF6  20                 	db	32
  2665  00FBF7  20                 	db	32
  2666  00FBF8  20                 	db	32
  2667  00FBF9  20                 	db	32
  2668  00FBFA  20                 	db	32
  2669  00FBFB  20                 	db	32
  2670  00FBFC  20                 	db	32
  2671  00FBFD  20                 	db	32
  2672  00FBFE  00                 	db	0
  2673  00FBFF                     STR_41:
  2674                           
  2675                           ; BSR set to: 57
  2676  00FBFF  52                 	db	82	;'R'
  2677  00FC00  31                 	db	49	;'1'
  2678  00FC01  20                 	db	32
  2679  00FC02  25                 	db	37
  2680  00FC03  32                 	db	50	;'2'
  2681  00FC04  2E                 	db	46
  2682  00FC05  33                 	db	51	;'3'
  2683  00FC06  66                 	db	102	;'f'
  2684  00FC07  20                 	db	32
  2685  00FC08  25                 	db	37
  2686  00FC09  33                 	db	51	;'3'
  2687  00FC0A  2E                 	db	46
  2688  00FC0B  34                 	db	52	;'4'
  2689  00FC0C  66                 	db	102	;'f'
  2690  00FC0D  20                 	db	32
  2691  00FC0E  20                 	db	32
  2692  00FC0F  20                 	db	32
  2693  00FC10  20                 	db	32
  2694  00FC11  20                 	db	32
  2695  00FC12  20                 	db	32
  2696  00FC13  20                 	db	32
  2697  00FC14  20                 	db	32
  2698  00FC15  00                 	db	0
  2699  00FC16                     STR_42:
  2700                           
  2701                           ; BSR set to: 57
  2702  00FC16  52                 	db	82	;'R'
  2703  00FC17  32                 	db	50	;'2'
  2704  00FC18  20                 	db	32
  2705  00FC19  25                 	db	37
  2706  00FC1A  32                 	db	50	;'2'
  2707  00FC1B  2E                 	db	46
  2708  00FC1C  33                 	db	51	;'3'
  2709  00FC1D  66                 	db	102	;'f'
  2710  00FC1E  20                 	db	32
  2711  00FC1F  25                 	db	37
  2712  00FC20  33                 	db	51	;'3'
  2713  00FC21  2E                 	db	46
  2714  00FC22  34                 	db	52	;'4'
  2715  00FC23  66                 	db	102	;'f'
  2716  00FC24  20                 	db	32
  2717  00FC25  20                 	db	32
  2718  00FC26  20                 	db	32
  2719  00FC27  20                 	db	32
  2720  00FC28  20                 	db	32
  2721  00FC29  20                 	db	32
  2722  00FC2A  20                 	db	32
  2723  00FC2B  20                 	db	32
  2724  00FC2C  00                 	db	0
  2725  00FC2D                     STR_38:
  2726                           
  2727                           ; BSR set to: 57
  2728  00FC2D  42                 	db	66	;'B'
  2729  00FC2E  41                 	db	65	;'A'
  2730  00FC2F  48                 	db	72	;'H'
  2731  00FC30  20                 	db	32
  2732  00FC31  25                 	db	37
  2733  00FC32  33                 	db	51	;'3'
  2734  00FC33  2E                 	db	46
  2735  00FC34  32                 	db	50	;'2'
  2736  00FC35  66                 	db	102	;'f'
  2737  00FC36  20                 	db	32
  2738  00FC37  50                 	db	80	;'P'
  2739  00FC38  25                 	db	37
  2740  00FC39  33                 	db	51	;'3'
  2741  00FC3A  2E                 	db	46
  2742  00FC3B  32                 	db	50	;'2'
  2743  00FC3C  66                 	db	102	;'f'
  2744  00FC3D  20                 	db	32
  2745  00FC3E  20                 	db	32
  2746  00FC3F  20                 	db	32
  2747  00FC40  20                 	db	32
  2748  00FC41  20                 	db	32
  2749  00FC42  20                 	db	32
  2750  00FC43  00                 	db	0
  2751  00FC44                     STR_14:
  2752                           
  2753                           ; BSR set to: 57
  2754  00FC44  20                 	db	32
  2755  00FC45  20                 	db	32
  2756  00FC46  20                 	db	32
  2757  00FC47  20                 	db	32
  2758  00FC48  20                 	db	32
  2759  00FC49  20                 	db	32
  2760  00FC4A  20                 	db	32
  2761  00FC4B  20                 	db	32
  2762  00FC4C  20                 	db	32
  2763  00FC4D  20                 	db	32
  2764  00FC4E  20                 	db	32
  2765  00FC4F  20                 	db	32
  2766  00FC50  20                 	db	32
  2767  00FC51  20                 	db	32
  2768  00FC52  20                 	db	32
  2769  00FC53  20                 	db	32
  2770  00FC54  20                 	db	32
  2771  00FC55  20                 	db	32
  2772  00FC56  20                 	db	32
  2773  00FC57  20                 	db	32
  2774  00FC58  20                 	db	32
  2775  00FC59  00                 	db	0
  2776  00FC5A                     STR_19:
  2777                           
  2778                           ; BSR set to: 57
  2779  00FC5A  45                 	db	69	;'E'
  2780  00FC5B  53                 	db	83	;'S'
  2781  00FC5C  52                 	db	82	;'R'
  2782  00FC5D  20                 	db	32
  2783  00FC5E  20                 	db	32
  2784  00FC5F  25                 	db	37
  2785  00FC60  32                 	db	50	;'2'
  2786  00FC61  2E                 	db	46
  2787  00FC62  36                 	db	54	;'6'
  2788  00FC63  66                 	db	102	;'f'
  2789  00FC64  20                 	db	32
  2790  00FC65  20                 	db	32
  2791  00FC66  20                 	db	32
  2792  00FC67  20                 	db	32
  2793  00FC68  20                 	db	32
  2794  00FC69  20                 	db	32
  2795  00FC6A  20                 	db	32
  2796  00FC6B  20                 	db	32
  2797  00FC6C  20                 	db	32
  2798  00FC6D  20                 	db	32
  2799  00FC6E  20                 	db	32
  2800  00FC6F  00                 	db	0
  2801  00FC70                     STR_12:
  2802                           
  2803                           ; BSR set to: 57
  2804  00FC70  53                 	db	83	;'S'
  2805  00FC71  74                 	db	116	;'t'
  2806  00FC72  61                 	db	97	;'a'
  2807  00FC73  74                 	db	116	;'t'
  2808  00FC74  69                 	db	105	;'i'
  2809  00FC75  63                 	db	99	;'c'
  2810  00FC76  20                 	db	32
  2811  00FC77  53                 	db	83	;'S'
  2812  00FC78  4F                 	db	79	;'O'
  2813  00FC79  43                 	db	67	;'C'
  2814  00FC7A  20                 	db	32
  2815  00FC7B  25                 	db	37
  2816  00FC7C  64                 	db	100	;'d'
  2817  00FC7D  20                 	db	32
  2818  00FC7E  20                 	db	32
  2819  00FC7F  20                 	db	32
  2820  00FC80  20                 	db	32
  2821  00FC81  20                 	db	32
  2822  00FC82  20                 	db	32
  2823  00FC83  20                 	db	32
  2824  00FC84  20                 	db	32
  2825  00FC85  00                 	db	0
  2826  00FC86                     STR_34:
  2827                           
  2828                           ; BSR set to: 57
  2829  00FC86  42                 	db	66	;'B'
  2830  00FC87  41                 	db	65	;'A'
  2831  00FC88  54                 	db	84	;'T'
  2832  00FC89  20                 	db	32
  2833  00FC8A  49                 	db	73	;'I'
  2834  00FC8B  57                 	db	87	;'W'
  2835  00FC8C  48                 	db	72	;'H'
  2836  00FC8D  20                 	db	32
  2837  00FC8E  25                 	db	37
  2838  00FC8F  34                 	db	52	;'4'
  2839  00FC90  2E                 	db	46
  2840  00FC91  31                 	db	49	;'1'
  2841  00FC92  66                 	db	102	;'f'
  2842  00FC93  20                 	db	32
  2843  00FC94  20                 	db	32
  2844  00FC95  20                 	db	32
  2845  00FC96  20                 	db	32
  2846  00FC97  20                 	db	32
  2847  00FC98  20                 	db	32
  2848  00FC99  20                 	db	32
  2849  00FC9A  20                 	db	32
  2850  00FC9B  00                 	db	0
  2851  00FC9C                     STR_35:
  2852                           
  2853                           ; BSR set to: 57
  2854  00FC9C  42                 	db	66	;'B'
  2855  00FC9D  41                 	db	65	;'A'
  2856  00FC9E  54                 	db	84	;'T'
  2857  00FC9F  20                 	db	32
  2858  00FCA0  4F                 	db	79	;'O'
  2859  00FCA1  57                 	db	87	;'W'
  2860  00FCA2  48                 	db	72	;'H'
  2861  00FCA3  20                 	db	32
  2862  00FCA4  25                 	db	37
  2863  00FCA5  34                 	db	52	;'4'
  2864  00FCA6  2E                 	db	46
  2865  00FCA7  31                 	db	49	;'1'
  2866  00FCA8  66                 	db	102	;'f'
  2867  00FCA9  20                 	db	32
  2868  00FCAA  20                 	db	32
  2869  00FCAB  20                 	db	32
  2870  00FCAC  20                 	db	32
  2871  00FCAD  20                 	db	32
  2872  00FCAE  20                 	db	32
  2873  00FCAF  20                 	db	32
  2874  00FCB0  20                 	db	32
  2875  00FCB1  00                 	db	0
  2876  00FCB2                     STR_36:
  2877                           
  2878                           ; BSR set to: 57
  2879  00FCB2  42                 	db	66	;'B'
  2880  00FCB3  41                 	db	65	;'A'
  2881  00FCB4  54                 	db	84	;'T'
  2882  00FCB5  20                 	db	32
  2883  00FCB6  54                 	db	84	;'T'
  2884  00FCB7  57                 	db	87	;'W'
  2885  00FCB8  48                 	db	72	;'H'
  2886  00FCB9  20                 	db	32
  2887  00FCBA  25                 	db	37
  2888  00FCBB  34                 	db	52	;'4'
  2889  00FCBC  2E                 	db	46
  2890  00FCBD  31                 	db	49	;'1'
  2891  00FCBE  66                 	db	102	;'f'
  2892  00FCBF  20                 	db	32
  2893  00FCC0  20                 	db	32
  2894  00FCC1  20                 	db	32
  2895  00FCC2  20                 	db	32
  2896  00FCC3  20                 	db	32
  2897  00FCC4  20                 	db	32
  2898  00FCC5  20                 	db	32
  2899  00FCC6  20                 	db	32
  2900  00FCC7  00                 	db	0
  2901  00FCC8                     STR_30:
  2902                           
  2903                           ; BSR set to: 57
  2904  00FCC8  49                 	db	73	;'I'
  2905  00FCC9  4E                 	db	78	;'N'
  2906  00FCCA  56                 	db	86	;'V'
  2907  00FCCB  20                 	db	32
  2908  00FCCC  20                 	db	32
  2909  00FCCD  57                 	db	87	;'W'
  2910  00FCCE  48                 	db	72	;'H'
  2911  00FCCF  20                 	db	32
  2912  00FCD0  25                 	db	37
  2913  00FCD1  33                 	db	51	;'3'
  2914  00FCD2  2E                 	db	46
  2915  00FCD3  32                 	db	50	;'2'
  2916  00FCD4  66                 	db	102	;'f'
  2917  00FCD5  20                 	db	32
  2918  00FCD6  20                 	db	32
  2919  00FCD7  20                 	db	32
  2920  00FCD8  20                 	db	32
  2921  00FCD9  20                 	db	32
  2922  00FCDA  20                 	db	32
  2923  00FCDB  20                 	db	32
  2924  00FCDC  20                 	db	32
  2925  00FCDD  00                 	db	0
  2926  00FCDE                     STR_29:
  2927                           
  2928                           ; BSR set to: 57
  2929  00FCDE  4C                 	db	76	;'L'
  2930  00FCDF  4F                 	db	79	;'O'
  2931  00FCE0  41                 	db	65	;'A'
  2932  00FCE1  44                 	db	68	;'D'
  2933  00FCE2  20                 	db	32
  2934  00FCE3  57                 	db	87	;'W'
  2935  00FCE4  48                 	db	72	;'H'
  2936  00FCE5  20                 	db	32
  2937  00FCE6  25                 	db	37
  2938  00FCE7  33                 	db	51	;'3'
  2939  00FCE8  2E                 	db	46
  2940  00FCE9  32                 	db	50	;'2'
  2941  00FCEA  66                 	db	102	;'f'
  2942  00FCEB  20                 	db	32
  2943  00FCEC  20                 	db	32
  2944  00FCED  20                 	db	32
  2945  00FCEE  20                 	db	32
  2946  00FCEF  20                 	db	32
  2947  00FCF0  20                 	db	32
  2948  00FCF1  20                 	db	32
  2949  00FCF2  20                 	db	32
  2950  00FCF3  00                 	db	0
  2951  00FCF4                     STR_28:
  2952                           
  2953                           ; BSR set to: 57
  2954  00FCF4  50                 	db	80	;'P'
  2955  00FCF5  56                 	db	86	;'V'
  2956  00FCF6  20                 	db	32
  2957  00FCF7  25                 	db	37
  2958  00FCF8  63                 	db	99	;'c'
  2959  00FCF9  20                 	db	32
  2960  00FCFA  57                 	db	87	;'W'
  2961  00FCFB  48                 	db	72	;'H'
  2962  00FCFC  20                 	db	32
  2963  00FCFD  25                 	db	37
  2964  00FCFE  33                 	db	51	;'3'
  2965  00FCFF  2E                 	db	46
  2966  00FD00  32                 	db	50	;'2'
  2967  00FD01  66                 	db	102	;'f'
  2968  00FD02  20                 	db	32
  2969  00FD03  20                 	db	32
  2970  00FD04  20                 	db	32
  2971  00FD05  20                 	db	32
  2972  00FD06  20                 	db	32
  2973  00FD07  20                 	db	32
  2974  00FD08  20                 	db	32
  2975  00FD09  00                 	db	0
  2976  00FD0A                     STR_27:
  2977                           
  2978                           ; BSR set to: 57
  2979  00FD0A  49                 	db	73	;'I'
  2980  00FD0B  4E                 	db	78	;'N'
  2981  00FD0C  56                 	db	86	;'V'
  2982  00FD0D  20                 	db	32
  2983  00FD0E  20                 	db	32
  2984  00FD0F  50                 	db	80	;'P'
  2985  00FD10  57                 	db	87	;'W'
  2986  00FD11  52                 	db	82	;'R'
  2987  00FD12  20                 	db	32
  2988  00FD13  25                 	db	37
  2989  00FD14  33                 	db	51	;'3'
  2990  00FD15  2E                 	db	46
  2991  00FD16  32                 	db	50	;'2'
  2992  00FD17  66                 	db	102	;'f'
  2993  00FD18  20                 	db	32
  2994  00FD19  20                 	db	32
  2995  00FD1A  20                 	db	32
  2996  00FD1B  20                 	db	32
  2997  00FD1C  20                 	db	32
  2998  00FD1D  20                 	db	32
  2999  00FD1E  20                 	db	32
  3000  00FD1F  00                 	db	0
  3001  00FD20                     STR_26:
  3002                           
  3003                           ; BSR set to: 57
  3004  00FD20  4C                 	db	76	;'L'
  3005  00FD21  4F                 	db	79	;'O'
  3006  00FD22  41                 	db	65	;'A'
  3007  00FD23  44                 	db	68	;'D'
  3008  00FD24  20                 	db	32
  3009  00FD25  50                 	db	80	;'P'
  3010  00FD26  57                 	db	87	;'W'
  3011  00FD27  52                 	db	82	;'R'
  3012  00FD28  20                 	db	32
  3013  00FD29  25                 	db	37
  3014  00FD2A  33                 	db	51	;'3'
  3015  00FD2B  2E                 	db	46
  3016  00FD2C  32                 	db	50	;'2'
  3017  00FD2D  66                 	db	102	;'f'
  3018  00FD2E  20                 	db	32
  3019  00FD2F  20                 	db	32
  3020  00FD30  20                 	db	32
  3021  00FD31  20                 	db	32
  3022  00FD32  20                 	db	32
  3023  00FD33  20                 	db	32
  3024  00FD34  20                 	db	32
  3025  00FD35  00                 	db	0
  3026  00FD36                     STR_25:
  3027                           
  3028                           ; BSR set to: 57
  3029  00FD36  50                 	db	80	;'P'
  3030  00FD37  56                 	db	86	;'V'
  3031  00FD38  20                 	db	32
  3032  00FD39  25                 	db	37
  3033  00FD3A  63                 	db	99	;'c'
  3034  00FD3B  20                 	db	32
  3035  00FD3C  50                 	db	80	;'P'
  3036  00FD3D  57                 	db	87	;'W'
  3037  00FD3E  52                 	db	82	;'R'
  3038  00FD3F  20                 	db	32
  3039  00FD40  25                 	db	37
  3040  00FD41  33                 	db	51	;'3'
  3041  00FD42  2E                 	db	46
  3042  00FD43  32                 	db	50	;'2'
  3043  00FD44  66                 	db	102	;'f'
  3044  00FD45  20                 	db	32
  3045  00FD46  20                 	db	32
  3046  00FD47  20                 	db	32
  3047  00FD48  20                 	db	32
  3048  00FD49  20                 	db	32
  3049  00FD4A  20                 	db	32
  3050  00FD4B  00                 	db	0
  3051  00FD4C                     STR_13:
  3052                           
  3053                           ; BSR set to: 57
  3054  00FD4C  42                 	db	66	;'B'
  3055  00FD4D  61                 	db	97	;'a'
  3056  00FD4E  74                 	db	116	;'t'
  3057  00FD4F  74                 	db	116	;'t'
  3058  00FD50  65                 	db	101	;'e'
  3059  00FD51  72                 	db	114	;'r'
  3060  00FD52  79                 	db	121	;'y'
  3061  00FD53  20                 	db	32
  3062  00FD54  41                 	db	65	;'A'
  3063  00FD55  68                 	db	104	;'h'
  3064  00FD56  20                 	db	32
  3065  00FD57  25                 	db	37
  3066  00FD58  33                 	db	51	;'3'
  3067  00FD59  2E                 	db	46
  3068  00FD5A  32                 	db	50	;'2'
  3069  00FD5B  66                 	db	102	;'f'
  3070  00FD5C  20                 	db	32
  3071  00FD5D  20                 	db	32
  3072  00FD5E  20                 	db	32
  3073  00FD5F  20                 	db	32
  3074  00FD60  20                 	db	32
  3075  00FD61  00                 	db	0
  3076  00FD62                     STR_32:
  3077                           
  3078                           ; BSR set to: 57
  3079  00FD62  42                 	db	66	;'B'
  3080  00FD63  56                 	db	86	;'V'
  3081  00FD64  20                 	db	32
  3082  00FD65  25                 	db	37
  3083  00FD66  32                 	db	50	;'2'
  3084  00FD67  2E                 	db	46
  3085  00FD68  32                 	db	50	;'2'
  3086  00FD69  66                 	db	102	;'f'
  3087  00FD6A  20                 	db	32
  3088  00FD6B  42                 	db	66	;'B'
  3089  00FD6C  41                 	db	65	;'A'
  3090  00FD6D  20                 	db	32
  3091  00FD6E  25                 	db	37
  3092  00FD6F  32                 	db	50	;'2'
  3093  00FD70  2E                 	db	46
  3094  00FD71  32                 	db	50	;'2'
  3095  00FD72  66                 	db	102	;'f'
  3096  00FD73  20                 	db	32
  3097  00FD74  20                 	db	32
  3098  00FD75  20                 	db	32
  3099  00FD76  20                 	db	32
  3100  00FD77  00                 	db	0
  3101  00FD78                     STR_33:
  3102                           
  3103                           ; BSR set to: 57
  3104  00FD78  43                 	db	67	;'C'
  3105  00FD79  56                 	db	86	;'V'
  3106  00FD7A  20                 	db	32
  3107  00FD7B  25                 	db	37
  3108  00FD7C  32                 	db	50	;'2'
  3109  00FD7D  2E                 	db	46
  3110  00FD7E  32                 	db	50	;'2'
  3111  00FD7F  66                 	db	102	;'f'
  3112  00FD80  20                 	db	32
  3113  00FD81  4C                 	db	76	;'L'
  3114  00FD82  41                 	db	65	;'A'
  3115  00FD83  20                 	db	32
  3116  00FD84  25                 	db	37
  3117  00FD85  32                 	db	50	;'2'
  3118  00FD86  2E                 	db	46
  3119  00FD87  32                 	db	50	;'2'
  3120  00FD88  66                 	db	102	;'f'
  3121  00FD89  20                 	db	32
  3122  00FD8A  20                 	db	32
  3123  00FD8B  20                 	db	32
  3124  00FD8C  20                 	db	32
  3125  00FD8D  00                 	db	0
  3126  00FD8E                     STR_31:
  3127                           
  3128                           ; BSR set to: 57
  3129  00FD8E  50                 	db	80	;'P'
  3130  00FD8F  56                 	db	86	;'V'
  3131  00FD90  20                 	db	32
  3132  00FD91  25                 	db	37
  3133  00FD92  32                 	db	50	;'2'
  3134  00FD93  2E                 	db	46
  3135  00FD94  32                 	db	50	;'2'
  3136  00FD95  66                 	db	102	;'f'
  3137  00FD96  20                 	db	32
  3138  00FD97  50                 	db	80	;'P'
  3139  00FD98  41                 	db	65	;'A'
  3140  00FD99  20                 	db	32
  3141  00FD9A  25                 	db	37
  3142  00FD9B  32                 	db	50	;'2'
  3143  00FD9C  2E                 	db	46
  3144  00FD9D  32                 	db	50	;'2'
  3145  00FD9E  66                 	db	102	;'f'
  3146  00FD9F  20                 	db	32
  3147  00FDA0  20                 	db	32
  3148  00FDA1  20                 	db	32
  3149  00FDA2  20                 	db	32
  3150  00FDA3  00                 	db	0
  3151  00FDA4                     STR_43:
  3152                           
  3153                           ; BSR set to: 57
  3154  00FDA4  25                 	db	37
  3155  00FDA5  64                 	db	100	;'d'
  3156  00FDA6  20                 	db	32
  3157  00FDA7  25                 	db	37
  3158  00FDA8  32                 	db	50	;'2'
  3159  00FDA9  2E                 	db	46
  3160  00FDAA  34                 	db	52	;'4'
  3161  00FDAB  66                 	db	102	;'f'
  3162  00FDAC  2C                 	db	44
  3163  00FDAD  20                 	db	32
  3164  00FDAE  25                 	db	37
  3165  00FDAF  64                 	db	100	;'d'
  3166  00FDB0  20                 	db	32
  3167  00FDB1  20                 	db	32
  3168  00FDB2  54                 	db	84	;'T'
  3169  00FDB3  52                 	db	82	;'R'
  3170  00FDB4  49                 	db	73	;'I'
  3171  00FDB5  4D                 	db	77	;'M'
  3172  00FDB6  20                 	db	32
  3173  00FDB7  20                 	db	32
  3174  00FDB8  20                 	db	32
  3175  00FDB9  00                 	db	0
  3176  00FDBA                     STR_52:
  3177                           
  3178                           ; BSR set to: 57
  3179  00FDBA  20                 	db	32
  3180  00FDBB  25                 	db	37
  3181  00FDBC  64                 	db	100	;'d'
  3182  00FDBD  20                 	db	32
  3183  00FDBE  25                 	db	37
  3184  00FDBF  64                 	db	100	;'d'
  3185  00FDC0  20                 	db	32
  3186  00FDC1  20                 	db	32
  3187  00FDC2  20                 	db	32
  3188  00FDC3  20                 	db	32
  3189  00FDC4  20                 	db	32
  3190  00FDC5  20                 	db	32
  3191  00FDC6  20                 	db	32
  3192  00FDC7  20                 	db	32
  3193  00FDC8  20                 	db	32
  3194  00FDC9  20                 	db	32
  3195  00FDCA  20                 	db	32
  3196  00FDCB  20                 	db	32
  3197  00FDCC  20                 	db	32
  3198  00FDCD  20                 	db	32
  3199  00FDCE  00                 	db	0
  3200  00FDCF                     STR_47:
  3201                           
  3202                           ; BSR set to: 57
  3203  00FDCF  53                 	db	83	;'S'
  3204  00FDD0  65                 	db	101	;'e'
  3205  00FDD1  6E                 	db	110	;'n'
  3206  00FDD2  73                 	db	115	;'s'
  3207  00FDD3  6F                 	db	111	;'o'
  3208  00FDD4  72                 	db	114	;'r'
  3209  00FDD5  20                 	db	32
  3210  00FDD6  20                 	db	32
  3211  00FDD7  20                 	db	32
  3212  00FDD8  20                 	db	32
  3213  00FDD9  20                 	db	32
  3214  00FDDA  20                 	db	32
  3215  00FDDB  20                 	db	32
  3216  00FDDC  20                 	db	32
  3217  00FDDD  20                 	db	32
  3218  00FDDE  20                 	db	32
  3219  00FDDF  20                 	db	32
  3220  00FDE0  20                 	db	32
  3221  00FDE1  20                 	db	32
  3222  00FDE2  20                 	db	32
  3223  00FDE3  00                 	db	0
  3224  00FDE4                     STR_55:
  3225                           
  3226                           ; BSR set to: 57
  3227  00FDE4  20                 	db	32
  3228  00FDE5  25                 	db	37
  3229  00FDE6  6C                 	db	108	;'l'
  3230  00FDE7  64                 	db	100	;'d'
  3231  00FDE8  20                 	db	32
  3232  00FDE9  25                 	db	37
  3233  00FDEA  6C                 	db	108	;'l'
  3234  00FDEB  64                 	db	100	;'d'
  3235  00FDEC  20                 	db	32
  3236  00FDED  20                 	db	32
  3237  00FDEE  20                 	db	32
  3238  00FDEF  20                 	db	32
  3239  00FDF0  20                 	db	32
  3240  00FDF1  20                 	db	32
  3241  00FDF2  20                 	db	32
  3242  00FDF3  20                 	db	32
  3243  00FDF4  20                 	db	32
  3244  00FDF5  20                 	db	32
  3245  00FDF6  20                 	db	32
  3246  00FDF7  20                 	db	32
  3247  00FDF8  00                 	db	0
  3248  00FDF9                     STR_10:
  3249                           
  3250                           ; BSR set to: 57
  3251  00FDF9  42                 	db	66	;'B'
  3252  00FDFA  56                 	db	86	;'V'
  3253  00FDFB  20                 	db	32
  3254  00FDFC  25                 	db	37
  3255  00FDFD  32                 	db	50	;'2'
  3256  00FDFE  2E                 	db	46
  3257  00FDFF  34                 	db	52	;'4'
  3258  00FE00  66                 	db	102	;'f'
  3259  00FE01  20                 	db	32
  3260  00FE02  20                 	db	32
  3261  00FE03  20                 	db	32
  3262  00FE04  20                 	db	32
  3263  00FE05  20                 	db	32
  3264  00FE06  20                 	db	32
  3265  00FE07  20                 	db	32
  3266  00FE08  20                 	db	32
  3267  00FE09  20                 	db	32
  3268  00FE0A  20                 	db	32
  3269  00FE0B  20                 	db	32
  3270  00FE0C  20                 	db	32
  3271  00FE0D  00                 	db	0
  3272  00FE0E                     STR_4:
  3273                           
  3274                           ; BSR set to: 57
  3275  00FE0E  20                 	db	32
  3276  00FE0F  4E                 	db	78	;'N'
  3277  00FE10  53                 	db	83	;'S'
  3278  00FE11  41                 	db	65	;'A'
  3279  00FE12  53                 	db	83	;'S'
  3280  00FE13  50                 	db	80	;'P'
  3281  00FE14  4F                 	db	79	;'O'
  3282  00FE15  4F                 	db	79	;'O'
  3283  00FE16  4B                 	db	75	;'K'
  3284  00FE17  20                 	db	32
  3285  00FE18  20                 	db	32
  3286  00FE19  20                 	db	32
  3287  00FE1A  20                 	db	32
  3288  00FE1B  20                 	db	32
  3289  00FE1C  20                 	db	32
  3290  00FE1D  20                 	db	32
  3291  00FE1E  20                 	db	32
  3292  00FE1F  20                 	db	32
  3293  00FE20  20                 	db	32
  3294  00FE21  20                 	db	32
  3295  00FE22  00                 	db	0
  3296  00FE23                     STR_15:
  3297                           
  3298                           ; BSR set to: 57
  3299  00FE23  42                 	db	66	;'B'
  3300  00FE24  61                 	db	97	;'a'
  3301  00FE25  74                 	db	116	;'t'
  3302  00FE26  74                 	db	116	;'t'
  3303  00FE27  65                 	db	101	;'e'
  3304  00FE28  72                 	db	114	;'r'
  3305  00FE29  79                 	db	121	;'y'
  3306  00FE2A  20                 	db	32
  3307  00FE2B  45                 	db	69	;'E'
  3308  00FE2C  53                 	db	83	;'S'
  3309  00FE2D  52                 	db	82	;'R'
  3310  00FE2E  20                 	db	32
  3311  00FE2F  20                 	db	32
  3312  00FE30  20                 	db	32
  3313  00FE31  20                 	db	32
  3314  00FE32  20                 	db	32
  3315  00FE33  20                 	db	32
  3316  00FE34  20                 	db	32
  3317  00FE35  20                 	db	32
  3318  00FE36  20                 	db	32
  3319  00FE37  00                 	db	0
  3320  00FE38                     STR_16:
  3321                           
  3322                           ; BSR set to: 57
  3323  00FE38  43                 	db	67	;'C'
  3324  00FE39  61                 	db	97	;'a'
  3325  00FE3A  6C                 	db	108	;'l'
  3326  00FE3B  63                 	db	99	;'c'
  3327  00FE3C  75                 	db	117	;'u'
  3328  00FE3D  6C                 	db	108	;'l'
  3329  00FE3E  61                 	db	97	;'a'
  3330  00FE3F  74                 	db	116	;'t'
  3331  00FE40  69                 	db	105	;'i'
  3332  00FE41  6F                 	db	111	;'o'
  3333  00FE42  6E                 	db	110	;'n'
  3334  00FE43  20                 	db	32
  3335  00FE44  20                 	db	32
  3336  00FE45  20                 	db	32
  3337  00FE46  20                 	db	32
  3338  00FE47  20                 	db	32
  3339  00FE48  20                 	db	32
  3340  00FE49  20                 	db	32
  3341  00FE4A  20                 	db	32
  3342  00FE4B  20                 	db	32
  3343  00FE4C  00                 	db	0
  3344  00FE4D                     STR_48:
  3345                           
  3346                           ; BSR set to: 57
  3347  00FE4D  43                 	db	67	;'C'
  3348  00FE4E  61                 	db	97	;'a'
  3349  00FE4F  6C                 	db	108	;'l'
  3350  00FE50  69                 	db	105	;'i'
  3351  00FE51  62                 	db	98	;'b'
  3352  00FE52  72                 	db	114	;'r'
  3353  00FE53  61                 	db	97	;'a'
  3354  00FE54  74                 	db	116	;'t'
  3355  00FE55  69                 	db	105	;'i'
  3356  00FE56  6F                 	db	111	;'o'
  3357  00FE57  6E                 	db	110	;'n'
  3358  00FE58  20                 	db	32
  3359  00FE59  20                 	db	32
  3360  00FE5A  20                 	db	32
  3361  00FE5B  20                 	db	32
  3362  00FE5C  20                 	db	32
  3363  00FE5D  20                 	db	32
  3364  00FE5E  20                 	db	32
  3365  00FE5F  20                 	db	32
  3366  00FE60  20                 	db	32
  3367  00FE61  00                 	db	0
  3368  00FE62                     STR_2:
  3369                           
  3370                           ; BSR set to: 57
  3371  00FE62  20                 	db	32
  3372  00FE63  56                 	db	86	;'V'
  3373  00FE64  65                 	db	101	;'e'
  3374  00FE65  72                 	db	114	;'r'
  3375  00FE66  73                 	db	115	;'s'
  3376  00FE67  69                 	db	105	;'i'
  3377  00FE68  6F                 	db	111	;'o'
  3378  00FE69  6E                 	db	110	;'n'
  3379  00FE6A  20                 	db	32
  3380  00FE6B  25                 	db	37
  3381  00FE6C  73                 	db	115	;'s'
  3382  00FE6D  20                 	db	32
  3383  00FE6E  20                 	db	32
  3384  00FE6F  20                 	db	32
  3385  00FE70  20                 	db	32
  3386  00FE71  20                 	db	32
  3387  00FE72  20                 	db	32
  3388  00FE73  20                 	db	32
  3389  00FE74  20                 	db	32
  3390  00FE75  20                 	db	32
  3391  00FE76  00                 	db	0
  3392  00FE77                     STR_59:
  3393                           
  3394                           ; BSR set to: 57
  3395  00FE77  4F                 	db	79	;'O'
  3396  00FE78  75                 	db	117	;'u'
  3397  00FE79  74                 	db	116	;'t'
  3398  00FE7A  20                 	db	32
  3399  00FE7B  4F                 	db	79	;'O'
  3400  00FE7C  66                 	db	102	;'f'
  3401  00FE7D  20                 	db	32
  3402  00FE7E  52                 	db	82	;'R'
  3403  00FE7F  61                 	db	97	;'a'
  3404  00FE80  6E                 	db	110	;'n'
  3405  00FE81  67                 	db	103	;'g'
  3406  00FE82  65                 	db	101	;'e'
  3407  00FE83  20                 	db	32
  3408  00FE84  20                 	db	32
  3409  00FE85  20                 	db	32
  3410  00FE86  20                 	db	32
  3411  00FE87  20                 	db	32
  3412  00FE88  20                 	db	32
  3413  00FE89  20                 	db	32
  3414  00FE8A  20                 	db	32
  3415  00FE8B  00                 	db	0
  3416  00FE8C                     STR_56:
  3417                           
  3418                           ; BSR set to: 57
  3419  00FE8C  5A                 	db	90	;'Z'
  3420  00FE8D  65                 	db	101	;'e'
  3421  00FE8E  72                 	db	114	;'r'
  3422  00FE8F  6F                 	db	111	;'o'
  3423  00FE90  20                 	db	32
  3424  00FE91  43                 	db	67	;'C'
  3425  00FE92  61                 	db	97	;'a'
  3426  00FE93  6C                 	db	108	;'l'
  3427  00FE94  20                 	db	32
  3428  00FE95  53                 	db	83	;'S'
  3429  00FE96  65                 	db	101	;'e'
  3430  00FE97  74                 	db	116	;'t'
  3431  00FE98  20                 	db	32
  3432  00FE99  20                 	db	32
  3433  00FE9A  20                 	db	32
  3434  00FE9B  20                 	db	32
  3435  00FE9C  20                 	db	32
  3436  00FE9D  20                 	db	32
  3437  00FE9E  20                 	db	32
  3438  00FE9F  20                 	db	32
  3439  00FEA0  00                 	db	0
  3440  00FEA1                     STR_1:
  3441                           
  3442                           ; BSR set to: 57
  3443  00FEA1  20                 	db	32
  3444  00FEA2  4D                 	db	77	;'M'
  3445  00FEA3  42                 	db	66	;'B'
  3446  00FEA4  4D                 	db	77	;'M'
  3447  00FEA5  43                 	db	67	;'C'
  3448  00FEA6  20                 	db	32
  3449  00FEA7  53                 	db	83	;'S'
  3450  00FEA8  4F                 	db	79	;'O'
  3451  00FEA9  4C                 	db	76	;'L'
  3452  00FEAA  41                 	db	65	;'A'
  3453  00FEAB  52                 	db	82	;'R'
  3454  00FEAC  4D                 	db	77	;'M'
  3455  00FEAD  4F                 	db	79	;'O'
  3456  00FEAE  4E                 	db	78	;'N'
  3457  00FEAF  20                 	db	32
  3458  00FEB0  20                 	db	32
  3459  00FEB1  20                 	db	32
  3460  00FEB2  20                 	db	32
  3461  00FEB3  20                 	db	32
  3462  00FEB4  20                 	db	32
  3463  00FEB5  00                 	db	0
  3464  00FEB6                     STR_46:
  3465                           
  3466                           ; BSR set to: 57
  3467  00FEB6  50                 	db	80	;'P'
  3468  00FEB7  56                 	db	86	;'V'
  3469  00FEB8  20                 	db	32
  3470  00FEB9  61                 	db	97	;'a'
  3471  00FEBA  6E                 	db	110	;'n'
  3472  00FEBB  64                 	db	100	;'d'
  3473  00FEBC  20                 	db	32
  3474  00FEBD  42                 	db	66	;'B'
  3475  00FEBE  41                 	db	65	;'A'
  3476  00FEBF  54                 	db	84	;'T'
  3477  00FEC0  54                 	db	84	;'T'
  3478  00FEC1  45                 	db	69	;'E'
  3479  00FEC2  52                 	db	82	;'R'
  3480  00FEC3  59                 	db	89	;'Y'
  3481  00FEC4  20                 	db	32
  3482  00FEC5  20                 	db	32
  3483  00FEC6  20                 	db	32
  3484  00FEC7  20                 	db	32
  3485  00FEC8  20                 	db	32
  3486  00FEC9  20                 	db	32
  3487  00FECA  00                 	db	0
  3488  00FECB                     STR_18:
  3489                           
  3490                           ; BSR set to: 57
  3491  00FECB  43                 	db	67	;'C'
  3492  00FECC  68                 	db	104	;'h'
  3493  00FECD  65                 	db	101	;'e'
  3494  00FECE  63                 	db	99	;'c'
  3495  00FECF  6B                 	db	107	;'k'
  3496  00FED0  69                 	db	105	;'i'
  3497  00FED1  6E                 	db	110	;'n'
  3498  00FED2  67                 	db	103	;'g'
  3499  00FED3  20                 	db	32
  3500  00FED4  25                 	db	37
  3501  00FED5  63                 	db	99	;'c'
  3502  00FED6  20                 	db	32
  3503  00FED7  25                 	db	37
  3504  00FED8  63                 	db	99	;'c'
  3505  00FED9  20                 	db	32
  3506  00FEDA  20                 	db	32
  3507  00FEDB  20                 	db	32
  3508  00FEDC  20                 	db	32
  3509  00FEDD  20                 	db	32
  3510  00FEDE  20                 	db	32
  3511  00FEDF  00                 	db	0
  3512  00FEE0                     STR_51:
  3513                           
  3514                           ; BSR set to: 57
  3515  00FEE0  53                 	db	83	;'S'
  3516  00FEE1  65                 	db	101	;'e'
  3517  00FEE2  6E                 	db	110	;'n'
  3518  00FEE3  73                 	db	115	;'s'
  3519  00FEE4  6F                 	db	111	;'o'
  3520  00FEE5  72                 	db	114	;'r'
  3521  00FEE6  20                 	db	32
  3522  00FEE7  52                 	db	82	;'R'
  3523  00FEE8  65                 	db	101	;'e'
  3524  00FEE9  61                 	db	97	;'a'
  3525  00FEEA  64                 	db	100	;'d'
  3526  00FEEB  69                 	db	105	;'i'
  3527  00FEEC  6E                 	db	110	;'n'
  3528  00FEED  67                 	db	103	;'g'
  3529  00FEEE  73                 	db	115	;'s'
  3530  00FEEF  20                 	db	32
  3531  00FEF0  20                 	db	32
  3532  00FEF1  20                 	db	32
  3533  00FEF2  20                 	db	32
  3534  00FEF3  20                 	db	32
  3535  00FEF4  00                 	db	0
  3536  00FEF5                     STR_8:
  3537                           
  3538                           ; BSR set to: 57
  3539  00FEF5  52                 	db	82	;'R'
  3540  00FEF6  65                 	db	101	;'e'
  3541  00FEF7  61                 	db	97	;'a'
  3542  00FEF8  64                 	db	100	;'d'
  3543  00FEF9  20                 	db	32
  3544  00FEFA  45                 	db	69	;'E'
  3545  00FEFB  45                 	db	69	;'E'
  3546  00FEFC  50                 	db	80	;'P'
  3547  00FEFD  52                 	db	82	;'R'
  3548  00FEFE  4F                 	db	79	;'O'
  3549  00FEFF  4D                 	db	77	;'M'
  3550  00FF00  20                 	db	32
  3551  00FF01  44                 	db	68	;'D'
  3552  00FF02  41                 	db	65	;'A'
  3553  00FF03  54                 	db	84	;'T'
  3554  00FF04  41                 	db	65	;'A'
  3555  00FF05  20                 	db	32
  3556  00FF06  20                 	db	32
  3557  00FF07  20                 	db	32
  3558  00FF08  20                 	db	32
  3559  00FF09  00                 	db	0
  3560  00FF0A                     STR_17:
  3561                           
  3562                           ; BSR set to: 57
  3563  00FF0A  43                 	db	67	;'C'
  3564  00FF0B  68                 	db	104	;'h'
  3565  00FF0C  65                 	db	101	;'e'
  3566  00FF0D  63                 	db	99	;'c'
  3567  00FF0E  6B                 	db	107	;'k'
  3568  00FF0F  20                 	db	32
  3569  00FF10  33                 	db	51	;'3'
  3570  00FF11  30                 	db	48	;'0'
  3571  00FF12  20                 	db	32
  3572  00FF13  73                 	db	115	;'s'
  3573  00FF14  65                 	db	101	;'e'
  3574  00FF15  63                 	db	99	;'c'
  3575  00FF16  6F                 	db	111	;'o'
  3576  00FF17  6E                 	db	110	;'n'
  3577  00FF18  64                 	db	100	;'d'
  3578  00FF19  73                 	db	115	;'s'
  3579  00FF1A  20                 	db	32
  3580  00FF1B  20                 	db	32
  3581  00FF1C  20                 	db	32
  3582  00FF1D  20                 	db	32
  3583  00FF1E  00                 	db	0
  3584  00FF1F                     STR_53:
  3585                           
  3586                           ; BSR set to: 57
  3587  00FF1F  53                 	db	83	;'S'
  3588  00FF20  74                 	db	116	;'t'
  3589  00FF21  61                 	db	97	;'a'
  3590  00FF22  62                 	db	98	;'b'
  3591  00FF23  69                 	db	105	;'i'
  3592  00FF24  6C                 	db	108	;'l'
  3593  00FF25  69                 	db	105	;'i'
  3594  00FF26  74                 	db	116	;'t'
  3595  00FF27  79                 	db	121	;'y'
  3596  00FF28  20                 	db	32
  3597  00FF29  63                 	db	99	;'c'
  3598  00FF2A  6C                 	db	108	;'l'
  3599  00FF2B  6F                 	db	111	;'o'
  3600  00FF2C  63                 	db	99	;'c'
  3601  00FF2D  6B                 	db	107	;'k'
  3602  00FF2E  20                 	db	32
  3603  00FF2F  25                 	db	37
  3604  00FF30  64                 	db	100	;'d'
  3605  00FF31  20                 	db	32
  3606  00FF32  20                 	db	32
  3607  00FF33  00                 	db	0
  3608  00FF34                     STR_9:
  3609                           
  3610                           ; BSR set to: 57
  3611  00FF34  49                 	db	73	;'I'
  3612  00FF35  6E                 	db	110	;'n'
  3613  00FF36  76                 	db	118	;'v'
  3614  00FF37  61                 	db	97	;'a'
  3615  00FF38  6C                 	db	108	;'l'
  3616  00FF39  69                 	db	105	;'i'
  3617  00FF3A  64                 	db	100	;'d'
  3618  00FF3B  20                 	db	32
  3619  00FF3C  45                 	db	69	;'E'
  3620  00FF3D  45                 	db	69	;'E'
  3621  00FF3E  50                 	db	80	;'P'
  3622  00FF3F  52                 	db	82	;'R'
  3623  00FF40  4F                 	db	79	;'O'
  3624  00FF41  4D                 	db	77	;'M'
  3625  00FF42  20                 	db	32
  3626  00FF43  44                 	db	68	;'D'
  3627  00FF44  41                 	db	65	;'A'
  3628  00FF45  54                 	db	84	;'T'
  3629  00FF46  41                 	db	65	;'A'
  3630  00FF47  20                 	db	32
  3631  00FF48  00                 	db	0
  3632  00FF49                     STR_49:
  3633                           
  3634                           ; BSR set to: 57
  3635  00FF49  52                 	db	82	;'R'
  3636  00FF4A  65                 	db	101	;'e'
  3637  00FF4B  6C                 	db	108	;'l'
  3638  00FF4C  65                 	db	101	;'e'
  3639  00FF4D  61                 	db	97	;'a'
  3640  00FF4E  73                 	db	115	;'s'
  3641  00FF4F  65                 	db	101	;'e'
  3642  00FF50  20                 	db	32
  3643  00FF51  62                 	db	98	;'b'
  3644  00FF52  75                 	db	117	;'u'
  3645  00FF53  74                 	db	116	;'t'
  3646  00FF54  74                 	db	116	;'t'
  3647  00FF55  6F                 	db	111	;'o'
  3648  00FF56  6E                 	db	110	;'n'
  3649  00FF57  20                 	db	32
  3650  00FF58  25                 	db	37
  3651  00FF59  63                 	db	99	;'c'
  3652  00FF5A  20                 	db	32
  3653  00FF5B  20                 	db	32
  3654  00FF5C  00                 	db	0
  3655  00FF5D                     STR_64:
  3656                           
  3657                           ; BSR set to: 57
  3658  00FF5D  48                 	db	72	;'H'
  3659  00FF5E  45                 	db	69	;'E'
  3660  00FF5F  4C                 	db	76	;'L'
  3661  00FF60  50                 	db	80	;'P'
  3662  00FF61  20                 	db	32
  3663  00FF62  25                 	db	37
  3664  00FF63  73                 	db	115	;'s'
  3665  00FF64  20                 	db	32
  3666  00FF65  20                 	db	32
  3667  00FF66  20                 	db	32
  3668  00FF67  20                 	db	32
  3669  00FF68  20                 	db	32
  3670  00FF69  20                 	db	32
  3671  00FF6A  20                 	db	32
  3672  00FF6B  20                 	db	32
  3673  00FF6C  20                 	db	32
  3674  00FF6D  20                 	db	32
  3675  00FF6E  20                 	db	32
  3676  00FF6F  00                 	db	0
  3677  00FF70                     
  3678                           ; BSR set to: 57
  3679  00FF70  44                 	db	68	;'D'
  3680  00FF71  49                 	db	73	;'I'
  3681  00FF72  53                 	db	83	;'S'
  3682  00FF73  50                 	db	80	;'P'
  3683  00FF74  4C                 	db	76	;'L'
  3684  00FF75  41                 	db	65	;'A'
  3685  00FF76  59                 	db	89	;'Y'
  3686  00FF77  20                 	db	32
  3687  00FF78  25                 	db	37
  3688  00FF79  73                 	db	115	;'s'
  3689  00FF7A  20                 	db	32
  3690  00FF7B  20                 	db	32
  3691  00FF7C  20                 	db	32
  3692  00FF7D  20                 	db	32
  3693  00FF7E  20                 	db	32
  3694  00FF7F  20                 	db	32
  3695  00FF80  20                 	db	32
  3696  00FF81  20                 	db	32
  3697  00FF82  00                 	db	0
  3698  00FF83                     
  3699                           ; BSR set to: 57
  3700  00FF83  25                 	db	37
  3701  00FF84  64                 	db	100	;'d'
  3702  00FF85  20                 	db	32
  3703  00FF86  25                 	db	37
  3704  00FF87  32                 	db	50	;'2'
  3705  00FF88  2E                 	db	46
  3706  00FF89  34                 	db	52	;'4'
  3707  00FF8A  66                 	db	102	;'f'
  3708  00FF8B  2C                 	db	44
  3709  00FF8C  20                 	db	32
  3710  00FF8D  25                 	db	37
  3711  00FF8E  64                 	db	100	;'d'
  3712  00FF8F  20                 	db	32
  3713  00FF90  20                 	db	32
  3714  00FF91  20                 	db	32
  3715  00FF92  23                 	db	35
  3716  00FF93  00                 	db	0
  3717  00FF94                     STR_22:
  3718                           
  3719                           ; BSR set to: 57
  3720  00FF94  25                 	db	37
  3721  00FF95  64                 	db	100	;'d'
  3722  00FF96  20                 	db	32
  3723  00FF97  25                 	db	37
  3724  00FF98  32                 	db	50	;'2'
  3725  00FF99  2E                 	db	46
  3726  00FF9A  34                 	db	52	;'4'
  3727  00FF9B  66                 	db	102	;'f'
  3728  00FF9C  20                 	db	32
  3729  00FF9D  20                 	db	32
  3730  00FF9E  20                 	db	32
  3731  00FF9F  25                 	db	37
  3732  00FFA0  64                 	db	100	;'d'
  3733  00FFA1  20                 	db	32
  3734  00FFA2  20                 	db	32
  3735  00FFA3  00                 	db	0
  3736  00FFA4                     STR_68:
  3737                           
  3738                           ; BSR set to: 57
  3739  00FFA4  76                 	db	118	;'v'
  3740  00FFA5  74                 	db	116	;'t'
  3741  00FFA6  65                 	db	101	;'e'
  3742  00FFA7  72                 	db	114	;'r'
  3743  00FFA8  6D                 	db	109	;'m'
  3744  00FFA9  20                 	db	32
  3745  00FFAA  25                 	db	37
  3746  00FFAB  78                 	db	120	;'x'
  3747  00FFAC  3A                 	db	58	;':'
  3748  00FFAD  25                 	db	37
  3749  00FFAE  78                 	db	120	;'x'
  3750  00FFAF  20                 	db	32
  3751  00FFB0  20                 	db	32
  3752  00FFB1  20                 	db	32
  3753  00FFB2  00                 	db	0
  3754  00FFB3                     STR_62:
  3755                           
  3756                           ; BSR set to: 57
  3757  00FFB3  46                 	db	70	;'F'
  3758  00FFB4  65                 	db	101	;'e'
  3759  00FFB5  62                 	db	98	;'b'
  3760  00FFB6  20                 	db	32
  3761  00FFB7  20                 	db	32
  3762  00FFB8  37                 	db	55	;'7'
  3763  00FFB9  20                 	db	32
  3764  00FFBA  32                 	db	50	;'2'
  3765  00FFBB  30                 	db	48	;'0'
  3766  00FFBC  32                 	db	50	;'2'
  3767  00FFBD  30                 	db	48	;'0'
  3768  00FFBE  00                 	db	0
  3769  00FFBF                     STR_66:
  3770                           
  3771                           ; BSR set to: 57
  3772  00FFBF  25                 	db	37
  3773  00FFC0  73                 	db	115	;'s'
  3774  00FFC1  20                 	db	32
  3775  00FFC2  20                 	db	32
  3776  00FFC3  20                 	db	32
  3777  00FFC4  20                 	db	32
  3778  00FFC5  20                 	db	32
  3779  00FFC6  20                 	db	32
  3780  00FFC7  20                 	db	32
  3781  00FFC8  00                 	db	0
  3782  00FFC9                     STR_63:
  3783                           
  3784                           ; BSR set to: 57
  3785  00FFC9  31                 	db	49	;'1'
  3786  00FFCA  34                 	db	52	;'4'
  3787  00FFCB  3A                 	db	58	;':'
  3788  00FFCC  31                 	db	49	;'1'
  3789  00FFCD  36                 	db	54	;'6'
  3790  00FFCE  3A                 	db	58	;':'
  3791  00FFCF  32                 	db	50	;'2'
  3792  00FFD0  35                 	db	53	;'5'
  3793  00FFD1  00                 	db	0
  3794  00FFD2                     STR_3:
  3795                           
  3796                           ; BSR set to: 57
  3797  00FFD2  31                 	db	49	;'1'
  3798  00FFD3  2E                 	db	46
  3799  00FFD4  31                 	db	49	;'1'
  3800  00FFD5  38                 	db	56	;'8'
  3801  00FFD6  00                 	db	0
  3802  00FFD7                     STR_82:
  3803                           
  3804                           ; BSR set to: 57
  3805  00FFD7  49                 	db	73	;'I'
  3806  00FFD8  4E                 	db	78	;'N'
  3807  00FFD9  46                 	db	70	;'F'
  3808  00FFDA  00                 	db	0
  3809  00FFDB                     STR_86:
  3810                           
  3811                           ; BSR set to: 57
  3812  00FFDB  4E                 	db	78	;'N'
  3813  00FFDC  41                 	db	65	;'A'
  3814  00FFDD  4E                 	db	78	;'N'
  3815  00FFDE  00                 	db	0
  3816  00FFDF                     STR_83:
  3817                           
  3818                           ; BSR set to: 57
  3819  00FFDF  69                 	db	105	;'i'
  3820  00FFE0  6E                 	db	110	;'n'
  3821  00FFE1  66                 	db	102	;'f'
  3822  00FFE2  00                 	db	0
  3823  00FFE3                     STR_87:
  3824                           
  3825                           ; BSR set to: 57
  3826  00FFE3  6E                 	db	110	;'n'
  3827  00FFE4  61                 	db	97	;'a'
  3828  00FFE5  6E                 	db	110	;'n'
  3829  00FFE6  00                 	db	0
  3830  00FFE7                     STR_113:
  3831                           
  3832                           ; BSR set to: 57
  3833  00FFE7  6C                 	db	108	;'l'
  3834  00FFE8  58                 	db	88	;'X'
  3835  00FFE9  00                 	db	0
  3836  00FFEA                     STR_90:
  3837                           
  3838                           ; BSR set to: 57
  3839  00FFEA  6C                 	db	108	;'l'
  3840  00FFEB  64                 	db	100	;'d'
  3841  00FFEC  00                 	db	0
  3842  00FFED                     STR_99:
  3843                           
  3844                           ; BSR set to: 57
  3845  00FFED  6C                 	db	108	;'l'
  3846  00FFEE  66                 	db	102	;'f'
  3847  00FFEF  00                 	db	0
  3848  00FFF0                     STR_94:
  3849                           
  3850                           ; BSR set to: 57
  3851  00FFF0  6C                 	db	108	;'l'
  3852  00FFF1  69                 	db	105	;'i'
  3853  00FFF2  00                 	db	0
  3854  00FFF3                     STR_104:
  3855                           
  3856                           ; BSR set to: 57
  3857  00FFF3  6C                 	db	108	;'l'
  3858  00FFF4  75                 	db	117	;'u'
  3859  00FFF5  00                 	db	0
  3860  00FFF6                     STR_109:
  3861                           
  3862                           ; BSR set to: 57
  3863  00FFF6  6C                 	db	108	;'l'
  3864  00FFF7  78                 	db	120	;'x'
  3865  00FFF8  00                 	db	0
  3866  00FFF9                     STR_61:
  3867                           
  3868                           ; BSR set to: 57
  3869  00FFF9  25                 	db	37
  3870  00FFFA  63                 	db	99	;'c'
  3871  00FFFB  00                 	db	0
  3872  00FFFC                     STR_60:
  3873                           
  3874                           ; BSR set to: 57
  3875  00FFFC  25                 	db	37
  3876  00FFFD  73                 	db	115	;'s'
  3877  00FFFE  00                 	db	0
  3878  0000                     
  3879                           ; #config settings
  3880  00FFFF  00                 	db	0	; dummy byte at the end
  3881  0000                     
  3882                           	psect	cinit
  3883  01AA16                     __pcinit:
  3884                           	opt callstack 0
  3885  01AA16                     start_initialization:
  3886                           	opt callstack 0
  3887  01AA16                     __initialization:
  3888                           	opt callstack 0
  3889                           
  3890                           ; Initialize objects allocated to BIGRAM (811 bytes)
  3891                           ; load TBLPTR registers with __pidataBIGRAM
  3892  01AA16  0EE2               	movlw	low __pidataBIGRAM
  3893  01AA18  6EF6               	movwf	tblptrl,c
  3894  01AA1A  0E70               	movlw	high __pidataBIGRAM
  3895  01AA1C  6EF7               	movwf	tblptrh,c
  3896  01AA1E  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3897  01AA20  6EF8               	movwf	tblptru,c
  3898  01AA22  EE01  F0FF         	lfsr	0,__pdataBIGRAM
  3899  01AA26  EE20 F32B          	lfsr	2,811
  3900  01AA2A                     copy_data0:
  3901  01AA2A  0009               	tblrd		*+
  3902  01AA2C  006F FFD7 FFEE     	movff	tablat,postinc0
  3903  01AA32  50DD               	movf	postdec2,w,c
  3904  01AA34  50D9               	movf	fsr2l,w,c
  3905  01AA36  E1F9               	bnz	copy_data0
  3906  01AA38  50DA               	movf	fsr2h,w,c
  3907  01AA3A  E1F7               	bnz	copy_data0
  3908                           
  3909                           ; Initialize objects allocated to BANK1 (208 bytes)
  3910                           ; load TBLPTR registers with __pidataBANK1
  3911  01AA3C  0EB6               	movlw	low __pidataBANK1
  3912  01AA3E  6EF6               	movwf	tblptrl,c
  3913  01AA40  0EAC               	movlw	high __pidataBANK1
  3914  01AA42  6EF7               	movwf	tblptrh,c
  3915  01AA44  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3916  01AA46  6EF8               	movwf	tblptru,c
  3917  01AA48  EE00  F100         	lfsr	0,__pdataBANK1
  3918  01AA4C  EE20 F0D0          	lfsr	2,208
  3919  01AA50                     copy_data1:
  3920  01AA50  0009               	tblrd		*+
  3921  01AA52  006F FFD7 FFEE     	movff	tablat,postinc0
  3922  01AA58  50DD               	movf	postdec2,w,c
  3923  01AA5A  50D9               	movf	fsr2l,w,c
  3924  01AA5C  E1F9               	bnz	copy_data1
  3925                           
  3926                           ; Initialize objects allocated to BANK0 (58 bytes)
  3927                           ; load TBLPTR registers with __pidataBANK0
  3928  01AA5E  0E9E               	movlw	low __pidataBANK0
  3929  01AA60  6EF6               	movwf	tblptrl,c
  3930  01AA62  0EC5               	movlw	high __pidataBANK0
  3931  01AA64  6EF7               	movwf	tblptrh,c
  3932  01AA66  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3933  01AA68  6EF8               	movwf	tblptru,c
  3934  01AA6A  EE00  F0AB         	lfsr	0,__pdataBANK0
  3935  01AA6E  EE20 F03A          	lfsr	2,58
  3936  01AA72                     copy_data2:
  3937  01AA72  0009               	tblrd		*+
  3938  01AA74  006F FFD7 FFEE     	movff	tablat,postinc0
  3939  01AA7A  50DD               	movf	postdec2,w,c
  3940  01AA7C  50D9               	movf	fsr2l,w,c
  3941  01AA7E  E1F9               	bnz	copy_data2
  3942                           
  3943                           ; Clear objects allocated to BIGRAM (482 bytes)
  3944  01AA80  EE02  F02A         	lfsr	0,__pbssBIGRAM
  3945  01AA84  EE20 F1E2          	lfsr	2,482
  3946  01AA88                     clear_0:
  3947  01AA88  6AEE               	clrf	postinc0,c
  3948  01AA8A  50DD               	movf	postdec2,w,c
  3949  01AA8C  50D9               	movf	fsr2l,w,c
  3950  01AA8E  E1FC               	bnz	clear_0
  3951  01AA90  50DA               	movf	fsr2h,w,c
  3952  01AA92  E1FA               	bnz	clear_0
  3953                           
  3954                           ; Clear objects allocated to BANK4 (255 bytes)
  3955  01AA94  EE01  F000         	lfsr	0,__pbssBANK4
  3956  01AA98  EE20 F0FF          	lfsr	2,255
  3957  01AA9C                     clear_1:
  3958  01AA9C  6AEE               	clrf	postinc0,c
  3959  01AA9E  50DD               	movf	postdec2,w,c
  3960  01AAA0  50D9               	movf	fsr2l,w,c
  3961  01AAA2  E1FC               	bnz	clear_1
  3962  01AAA4  50DA               	movf	fsr2h,w,c
  3963  01AAA6  E1FA               	bnz	clear_1
  3964                           
  3965                           ; Clear objects allocated to BANK3 (256 bytes)
  3966  01AAA8  EE00  F300         	lfsr	0,__pbssBANK3
  3967  01AAAC  EE20 F100          	lfsr	2,256
  3968  01AAB0                     clear_2:
  3969  01AAB0  6AEE               	clrf	postinc0,c
  3970  01AAB2  50DD               	movf	postdec2,w,c
  3971  01AAB4  50D9               	movf	fsr2l,w,c
  3972  01AAB6  E1FC               	bnz	clear_2
  3973  01AAB8  50DA               	movf	fsr2h,w,c
  3974  01AABA  E1FA               	bnz	clear_2
  3975                           
  3976                           ; Clear objects allocated to BANK2 (239 bytes)
  3977  01AABC  EE00  F200         	lfsr	0,__pbssBANK2
  3978  01AAC0  0EEF               	movlw	239
  3979  01AAC2                     clear_3:
  3980  01AAC2  6AEE               	clrf	postinc0,c
  3981  01AAC4  06E8               	decf	wreg,f,c
  3982  01AAC6  E1FD               	bnz	clear_3
  3983                           
  3984                           ; Clear objects allocated to BANK1 (42 bytes)
  3985  01AAC8  EE00  F1D0         	lfsr	0,__pbssBANK1
  3986  01AACC  0E2A               	movlw	42
  3987  01AACE                     clear_4:
  3988  01AACE  6AEE               	clrf	postinc0,c
  3989  01AAD0  06E8               	decf	wreg,f,c
  3990  01AAD2  E1FD               	bnz	clear_4
  3991                           
  3992                           ; Clear objects allocated to BANK0 (75 bytes)
  3993  01AAD4  EE00  F060         	lfsr	0,__pbssBANK0
  3994  01AAD8  0E4B               	movlw	75
  3995  01AADA                     clear_5:
  3996  01AADA  6AEE               	clrf	postinc0,c
  3997  01AADC  06E8               	decf	wreg,f,c
  3998  01AADE  E1FD               	bnz	clear_5
  3999                           
  4000                           ; Clear objects allocated to COMRAM (14 bytes)
  4001  01AAE0  EE00  F03A         	lfsr	0,__pbssCOMRAM
  4002  01AAE4  0E0E               	movlw	14
  4003  01AAE6                     clear_6:
  4004  01AAE6  6AEE               	clrf	postinc0,c
  4005  01AAE8  06E8               	decf	wreg,f,c
  4006  01AAEA  E1FD               	bnz	clear_6
  4007                           
  4008                           ;
  4009                           ; Setup IVTBASE
  4010                           ;
  4011  01AAEC  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  4012  01AAEE  6ED5               	movwf	213,c
  4013  01AAF0  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  4014  01AAF2  6ED6               	movwf	214,c
  4015  01AAF4  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  4016  01AAF6  6ED7               	movwf	215,c
  4017  01AAF8                     end_of_initialization:
  4018                           	opt callstack 0
  4019  01AAF8                     __end_of__initialization:
  4020                           	opt callstack 0
  4021  01AAF8  0100               	movlb	0
  4022  01AAFA  EF00  F080         	goto	_main	;jump to C main() function
  4023                           
  4024                           	psect	bssCOMRAM
  4025  00003A                     __pbssCOMRAM:
  4026                           	opt callstack 0
  4027  00003A                     _width:
  4028                           	opt callstack 0
  4029  00003A                     	ds	2
  4030  00003C                     _prec:
  4031                           	opt callstack 0
  4032  00003C                     	ds	2
  4033  00003E                     _flags:
  4034                           	opt callstack 0
  4035  00003E                     	ds	2
  4036  000040                     calc_bsoc@log_update_wait:
  4037                           	opt callstack 0
  4038  000040                     	ds	1
  4039  000041                     check_day_time@day_delay:
  4040                           	opt callstack 0
  4041  000041                     	ds	1
  4042  000042                     dac_spi_control@S0:
  4043                           	opt callstack 0
  4044  000042                     	ds	1
  4045  000043                     dac_spi_control@init:
  4046                           	opt callstack 0
  4047  000043                     	ds	1
  4048  000044                     _uart2RxHead:
  4049                           	opt callstack 0
  4050  000044                     	ds	1
  4051  000045                     _uart2TxBufferRemaining:
  4052                           	opt callstack 0
  4053  000045                     	ds	1
  4054  000046                     _uart2TxTail:
  4055                           	opt callstack 0
  4056  000046                     	ds	1
  4057  000047                     _uart1RxHead:
  4058                           	opt callstack 0
  4059  000047                     	ds	1
  4060                           
  4061                           	psect	bssBANK0
  4062  000060                     __pbssBANK0:
  4063                           	opt callstack 0
  4064  000060                     ___fpclassifyf@F463:
  4065                           	opt callstack 0
  4066  000060                     	ds	4
  4067  000064                     calc_ror_data@bcror:
  4068                           	opt callstack 0
  4069  000064                     	ds	4
  4070  000068                     calc_ror_data@bvror:
  4071                           	opt callstack 0
  4072  000068                     	ds	4
  4073  00006C                     calc_model_data@bcror:
  4074                           	opt callstack 0
  4075  00006C                     	ds	4
  4076  000070                     calc_model_data@bvror:
  4077                           	opt callstack 0
  4078  000070                     	ds	4
  4079  000074                     wdtdelay@dcount:
  4080                           	opt callstack 0
  4081  000074                     	ds	4
  4082  000078                     _TMR3_InterruptHandler:
  4083                           	opt callstack 0
  4084  000078                     	ds	3
  4085  00007B                     _TMR5_InterruptHandler:
  4086                           	opt callstack 0
  4087  00007B                     	ds	3
  4088  00007E                     _TMR6_InterruptHandler:
  4089                           	opt callstack 0
  4090  00007E                     	ds	3
  4091  000081                     _ADCC_ADTI_InterruptHandler:
  4092                           	opt callstack 0
  4093  000081                     	ds	3
  4094  000084                     _ADCC_ADI_InterruptHandler:
  4095                           	opt callstack 0
  4096  000084                     	ds	3
  4097  000087                     _UART1_RxInterruptHandler:
  4098                           	opt callstack 0
  4099  000087                     	ds	3
  4100  00008A                     _UART2_TxInterruptHandler:
  4101                           	opt callstack 0
  4102  00008A                     	ds	3
  4103  00008D                     _UART2_RxInterruptHandler:
  4104                           	opt callstack 0
  4105  00008D                     	ds	3
  4106  000090                     _INT1_InterruptHandler:
  4107                           	opt callstack 0
  4108  000090                     	ds	3
  4109  000093                     _INT0_InterruptHandler:
  4110                           	opt callstack 0
  4111  000093                     	ds	3
  4112  000096                     _nout:
  4113                           	opt callstack 0
  4114  000096                     	ds	2
  4115  000098                     TMR3_ISR@CountCallBack:
  4116                           	opt callstack 0
  4117  000098                     	ds	2
  4118  00009A                     _timer3ReloadVal:
  4119                           	opt callstack 0
  4120  00009A                     	ds	2
  4121  00009C                     TMR5_ISR@CountCallBack:
  4122                           	opt callstack 0
  4123  00009C                     	ds	2
  4124  00009E                     _timer5ReloadVal:
  4125                           	opt callstack 0
  4126  00009E                     	ds	2
  4127  0000A0                     esr_check@esr_state:
  4128                           	opt callstack 0
  4129  0000A0                     	ds	1
  4130  0000A1                     dac_spi_control@SB:
  4131                           	opt callstack 0
  4132  0000A1                     	ds	1
  4133  0000A2                     dac_spi_control@SC:
  4134                           	opt callstack 0
  4135  0000A2                     	ds	1
  4136  0000A3                     dac_spi_control@S2:
  4137                           	opt callstack 0
  4138  0000A3                     	ds	1
  4139  0000A4                     dac_spi_control@S1:
  4140                           	opt callstack 0
  4141  0000A4                     	ds	1
  4142  0000A5                     _mode_sw:
  4143                           	opt callstack 0
  4144  0000A5                     	ds	1
  4145  0000A6                     _uart2RxCount:
  4146                           	opt callstack 0
  4147  0000A6                     	ds	1
  4148  0000A7                     _uart2RxTail:
  4149                           	opt callstack 0
  4150  0000A7                     	ds	1
  4151  0000A8                     _uart2TxHead:
  4152                           	opt callstack 0
  4153  0000A8                     	ds	1
  4154  0000A9                     _uart1RxCount:
  4155                           	opt callstack 0
  4156  0000A9                     	ds	1
  4157  0000AA                     _uart1RxTail:
  4158                           	opt callstack 0
  4159  0000AA                     	ds	1
  4160                           
  4161                           	psect	dataBANK0
  4162  0000AB                     __pdataBANK0:
  4163                           	opt callstack 0
  4164  0000AB                     _R:
  4165                           	opt callstack 0
  4166  0000AB                     	ds	58
  4167                           
  4168                           	psect	bssBANK1
  4169  0001D0                     __pbssBANK1:
  4170                           	opt callstack 0
  4171  0001D0                     _spi_link:
  4172                           	opt callstack 0
  4173  0001D0                     	ds	12
  4174  0001DC                     _uart1RxBuffer:
  4175                           	opt callstack 0
  4176  0001DC                     	ds	8
  4177  0001E4                     spinners@s:
  4178                           	opt callstack 0
  4179  0001E4                     	ds	6
  4180  0001EA                     floorf@F524:
  4181                           	opt callstack 0
  4182  0001EA                     	ds	4
  4183  0001EE                     fabsf@F463:
  4184                           	opt callstack 0
  4185  0001EE                     	ds	4
  4186  0001F2                     _utctime:
  4187                           	opt callstack 0
  4188  0001F2                     	ds	4
  4189  0001F6                     _P:
  4190                           	opt callstack 0
  4191  0001F6                     	ds	4
  4192                           
  4193                           	psect	dataBANK1
  4194  000100                     __pdataBANK1:
  4195                           	opt callstack 0
  4196  000100                     stoa@F1166:
  4197                           	opt callstack 0
  4198  000100                     	ds	7
  4199  000107                     _V:
  4200                           	opt callstack 0
  4201  000107                     	ds	192
  4202  0001C7                     _H:
  4203                           	opt callstack 0
  4204  0001C7                     	ds	9
  4205                           
  4206                           	psect	bssBANK2
  4207  000200                     __pbssBANK2:
  4208                           	opt callstack 0
  4209  000200                     lp_filter@smooth:
  4210                           	opt callstack 0
  4211  000200                     	ds	84
  4212  000254                     _S:
  4213                           	opt callstack 0
  4214  000254                     	ds	41
  4215  00027D                     _tickCount:
  4216                           	opt callstack 0
  4217  00027D                     	ds	26
  4218  000297                     _dbuf:
  4219                           	opt callstack 0
  4220  000297                     	ds	80
  4221  0002E7                     _seed:
  4222                           	opt callstack 0
  4223  0002E7                     	ds	8
  4224                           
  4225                           	psect	bssBANK3
  4226  000300                     __pbssBANK3:
  4227                           	opt callstack 0
  4228  000300                     _uart2TxBuffer:
  4229                           	opt callstack 0
  4230  000300                     	ds	64
  4231  000340                     _ring_buf2:
  4232                           	opt callstack 0
  4233  000340                     	ds	67
  4234  000383                     _ring_buf1:
  4235                           	opt callstack 0
  4236  000383                     	ds	67
  4237  0003C6                     _r_cal:
  4238                           	opt callstack 0
  4239  0003C6                     	ds	58
  4240                           
  4241                           	psect	bssBANK4
  4242  000400                     __pbssBANK4:
  4243                           	opt callstack 0
  4244  000400                     _uart2RxBuffer:
  4245                           	opt callstack 0
  4246  000400                     	ds	255
  4247                           
  4248                           	psect	bssBIGRAM
  4249  00082A                     __pbssBIGRAM:
  4250                           	opt callstack 0
  4251  00082A                     _D:
  4252                           	opt callstack 0
  4253  00082A                     	ds	482
  4254                           
  4255                           	psect	dataBIGRAM
  4256  0004FF                     __pdataBIGRAM:
  4257                           	opt callstack 0
  4258  0004FF                     _port_data:
  4259                           	opt callstack 0
  4260  0004FF                     	ds	512
  4261  0006FF                     _C:
  4262                           	opt callstack 0
  4263  0006FF                     	ds	299
  4264                           
  4265                           	psect	cstackBANK0
  4266  0000E5                     __pcstackBANK0:
  4267                           	opt callstack 0
  4268  0000E5                     ??_TMR3_ISR:
  4269                           
  4270                           ; 1 bytes @ 0x0
  4271  0000E5                     	ds	25
  4272                           
  4273                           	psect	cstackCOMRAM
  4274  000021                     __pcstackCOMRAM:
  4275                           	opt callstack 0
  4276  000021                     ??_ADCC_ThresholdISR:
  4277  000021                     
  4278                           ; 1 bytes @ 0x0
  4279  000021                     	ds	5
  4280  000026                     ??_TMR6_ISR:
  4281                           
  4282                           ; 1 bytes @ 0x5
  4283  000026                     	ds	1
  4284  000027                     ??_INT1_ISR:
  4285  000027                     
  4286                           ; 1 bytes @ 0x6
  4287  000027                     	ds	4
  4288  00002B                     ??_TMR5_ISR:
  4289                           
  4290                           ; 1 bytes @ 0xA
  4291  00002B                     	ds	15
  4292                           
  4293 ;;
  4294 ;;Main: autosize = 17, tempsize = 0, incstack = 0, save=0
  4295 ;;
  4296 ;; *************** function _main *****************
  4297 ;; Defined at:
  4298 ;;		line 189 in file "main.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;		None
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  esr_temp        4  [STACK] float 
  4303 ;;  i_esr           2  [STACK] unsigned short 
  4304 ;;  shape           1  [STACK] unsigned char 
  4305 ;;  inp_index       1  [STACK] unsigned char 
  4306 ;;  k               1  [STACK] unsigned char 
  4307 ;;  j               1  [STACK] unsigned char 
  4308 ;;  i               1  [STACK] unsigned char 
  4309 ;;  mode            1  [STACK] enum E17013
  4310 ;;  i_ror           1  [STACK] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1  [STACK] void 
  4313 ;; Registers used:
  4314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4324 ;;Total ram usage:        0 bytes
  4325 ;; Hardware stack levels required when called:   29
  4326 ;; This function calls:
  4327 ;;		_SYSTEM_Initialize
  4328 ;;		_StartTimer
  4329 ;;		_TimerDone
  4330 ;;		_WaitMs
  4331 ;;		___fladd
  4332 ;;		___flge
  4333 ;;		___fltol
  4334 ;;		_calc_model_data
  4335 ;;		_calc_ror_data
  4336 ;;		_check_adc_scan
  4337 ;;		_check_enter_button
  4338 ;;		_check_help
  4339 ;;		_clear_adc_scan
  4340 ;;		_clear_hid_pflags
  4341 ;;		_conv_raw_result
  4342 ;;		_convert_adc_data
  4343 ;;		_current_sensor_cal
  4344 ;;		_eaDogM_WriteCommand
  4345 ;;		_esr_check
  4346 ;;		_fabsf
  4347 ;;		_get_raw_result
  4348 ;;		_get_switch
  4349 ;;		_get_vterm_ptr
  4350 ;;		_hid_display
  4351 ;;		_init_bsoc
  4352 ;;		_init_display
  4353 ;;		_init_port_dma
  4354 ;;		_lp_filter
  4355 ;;		_mode_lamp_dim
  4356 ;;		_read_cal_data
  4357 ;;		_set_dac
  4358 ;;		_set_dac_a
  4359 ;;		_set_dac_b
  4360 ;;		_set_display_info
  4361 ;;		_set_load_relay_one
  4362 ;;		_set_load_relay_two
  4363 ;;		_set_vterm
  4364 ;;		_spinners
  4365 ;;		_sprintf
  4366 ;;		_srand
  4367 ;;		_start_adc_scan
  4368 ;;		_start_switch_handler
  4369 ;;		_static_soc
  4370 ;;		_update_cal_data
  4371 ;;		_update_lcd
  4372 ;;		_wait_lcd_done
  4373 ;; This function is called by:
  4374 ;;		Startup code after reset
  4375 ;; This function uses a reentrant model
  4376 ;;
  4377                           
  4378                           	psect	text0
  4379  010000                     __ptext0:
  4380                           	opt callstack 0
  4381  010000                     _main:
  4382                           	opt callstack 0
  4383                           
  4384                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4385  010000  0E11               	movlw	17
  4386  010002  26E1               	addwf	fsr1l,f,c
  4387  010004  0E00               	movlw	0
  4388  010006  22E2               	addwfc	fsr1h,f,c
  4389                           
  4390                           ;main.c: 191:  UI_STATES mode;;main.c: 192:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  4391                           ;stkvar	_inp_index @ sp[(-17)+11]
  4392                           
  4393                           ;incstack = 0
  4394  010008  0EFA               	movlw	-6
  4395  01000A  6AE3               	clrf	plusw1,c
  4396                           
  4397                           ;stkvar	_i @ sp[(-17)+14]
  4398  01000C  0EFD               	movlw	-3
  4399  01000E  6AE3               	clrf	plusw1,c
  4400                           
  4401                           ;stkvar	_j @ sp[(-17)+13]
  4402  010010  0EFC               	movlw	-4
  4403  010012  6AE3               	clrf	plusw1,c
  4404  010014  2AE3               	incf	plusw1,f,c
  4405                           
  4406                           ;stkvar	_k @ sp[(-17)+12]
  4407  010016  0EFB               	movlw	-5
  4408  010018  6AE3               	clrf	plusw1,c
  4409  01001A  82E3               	bsf	plusw1,1,c
  4410                           
  4411                           ;main.c: 195:  SYSTEM_Initialize();
  4412  01001C  ECD2  F0E0         	call	_SYSTEM_Initialize	;wreg free
  4413                           
  4414                           ; BSR set to: 60
  4415                           ;main.c: 198:  (INTCON0bits.GIEH = 1);
  4416  010020  8ED2               	bsf	210,7,c	;volatile
  4417                           
  4418                           ; BSR set to: 60
  4419                           ;main.c: 201:  (INTCON0bits.GIEL = 1);
  4420  010022  8CD2               	bsf	210,6,c	;volatile
  4421                           
  4422                           ; BSR set to: 60
  4423                           ;main.c: 203:  V.ui_state = UI_STATE_INIT;
  4424  010024  0101               	movlb	1	; () banked
  4425  010026  6B07               	clrf	_V& (0+255),b	;volatile
  4426                           
  4427                           ; BSR set to: 1
  4428                           ;main.c: 208:  WaitMs(300);
  4429  010028  0E2C               	movlw	44
  4430  01002A  6EE6               	movwf	postinc1,c
  4431  01002C  0E01               	movlw	1
  4432  01002E  6EE6               	movwf	postinc1,c
  4433  010030  EC41  F0E3         	call	_WaitMs	;wreg free
  4434                           
  4435                           ;main.c: 209:  if (PORTBbits.RB0) {
  4436  010034  A0CB               	btfss	203,0,c	;volatile
  4437  010036  D004               	goto	l14004
  4438                           
  4439                           ;main.c: 210:   mode = UI_STATE_HOST;
  4440                           ;stkvar	_mode @ sp[(-17)+15]
  4441  010038  0EFE               	movlw	-2
  4442  01003A  6AE3               	clrf	plusw1,c
  4443  01003C  2AE3               	incf	plusw1,f,c
  4444                           
  4445                           ;main.c: 211:  } else {
  4446  01003E  D004               	goto	l14006
  4447  010040                     l14004:
  4448                           
  4449                           ;main.c: 212:   mode = UI_STATE_LOG;
  4450                           ;stkvar	_mode @ sp[(-17)+15]
  4451  010040  0EFE               	movlw	-2
  4452  010042  6AE3               	clrf	plusw1,c
  4453  010044  80E3               	bsf	plusw1,0,c
  4454  010046  82E3               	bsf	plusw1,1,c	;indir
  4455  010048                     l14006:
  4456                           
  4457                           ;main.c: 215:  if (mode == UI_STATE_HOST) {
  4458                           ;stkvar	_mode @ sp[(-17)+15]
  4459  010048  0EFE               	movlw	-2
  4460  01004A  04E3               	decf	plusw1,w,c
  4461  01004C  A4D8               	btfss	status,2,c
  4462  01004E  D007               	goto	l1342
  4463                           
  4464                           ;main.c: 216:   do { LATDbits.LATD0 = 1; } while(0);
  4465  010050  80BD               	bsf	189,0,c	;volatile
  4466                           
  4467                           ;main.c: 217:   V.mode_pwm = 70;
  4468  010052  0E00               	movlw	0
  4469  010054  0101               	movlb	1	; () banked
  4470  010056  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  4471  010058  0E46               	movlw	70
  4472  01005A  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  4473                           
  4474                           ;main.c: 218:  } else {
  4475  01005C  D004               	goto	l14010
  4476  01005E                     l1342:
  4477  01005E  90BD               	bcf	189,0,c	;volatile
  4478                           
  4479                           ;main.c: 220:   V.mode_pwm = 0;
  4480  010060  0101               	movlb	1	; () banked
  4481  010062  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  4482  010064  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  4483  010066                     l14010:
  4484                           
  4485                           ; BSR set to: 1
  4486                           ;main.c: 222:  mode_lamp_dim(V.mode_pwm);
  4487  010066  0060  F673  FFE6   	movff	_V+149,postinc1
  4488  01006C  0060  F677  FFE6   	movff	_V+150,postinc1
  4489  010072  ECFD  F0E6         	call	_mode_lamp_dim	;wreg free
  4490  010076  D39B               	goto	l14158
  4491  010078                     l14012:
  4492                           
  4493                           ; BSR set to: 1
  4494                           ;main.c: 230:    init_port_dma();
  4495  010078  ECDD  F0E3         	call	_init_port_dma	;wreg free
  4496                           
  4497                           ; BSR set to: 59
  4498                           ;main.c: 232:    init_display();
  4499  01007C  EC96  F0D4         	call	_init_display	;wreg free
  4500                           
  4501                           ; BSR set to: 61
  4502                           ;main.c: 233:    eaDogM_WriteCommand(0b00001100);
  4503  010080  0E0C               	movlw	12
  4504  010082  6EE6               	movwf	postinc1,c
  4505  010084  EC74  F0E7         	call	_eaDogM_WriteCommand	;wreg free
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;main.c: 234:    set_dac();
  4509  010088  EC3D  F0D8         	call	_set_dac	;wreg free
  4510                           
  4511                           ;main.c: 238:    set_load_relay_one(1);
  4512  01008C  0E01               	movlw	1
  4513  01008E  6EE6               	movwf	postinc1,c
  4514  010090  EC5C  F0E7         	call	_set_load_relay_one	;wreg free
  4515                           
  4516                           ;main.c: 239:    set_load_relay_two(1);
  4517  010094  0E01               	movlw	1
  4518  010096  6EE6               	movwf	postinc1,c
  4519  010098  EC54  F0E7         	call	_set_load_relay_two	;wreg free
  4520                           
  4521                           ;main.c: 241:    V.ui_state = mode;
  4522                           ;stkvar	_mode @ sp[(-17)+15]
  4523  01009C  0EFE               	movlw	-2
  4524  01009E  006F FF8C  F107    	movff	plusw1,_V	;volatile
  4525                           
  4526                           ;main.c: 242:    srand(1957);
  4527  0100A4  0EA5               	movlw	165
  4528  0100A6  6EE6               	movwf	postinc1,c
  4529  0100A8  0E07               	movlw	7
  4530  0100AA  6EE6               	movwf	postinc1,c
  4531  0100AC  EC5C  F0E3         	call	_srand	;wreg free
  4532                           
  4533                           ; BSR set to: 2
  4534                           ;main.c: 243:    set_vterm(0);
  4535  0100B0  0E00               	movlw	0
  4536  0100B2  6EE6               	movwf	postinc1,c
  4537  0100B4  ECB5  F0E6         	call	_set_vterm	;wreg free
  4538                           
  4539                           ;main.c: 244:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON      ");
  4540  0100B8  0EA1               	movlw	low STR_1
  4541  0100BA  6EE6               	movwf	postinc1,c
  4542  0100BC  0EFE               	movlw	high STR_1
  4543  0100BE  6EE6               	movwf	postinc1,c
  4544  0100C0  0E00               	movlw	0
  4545  0100C2  6EE6               	movwf	postinc1,c
  4546  0100C4  0E00               	movlw	0
  4547  0100C6  6EE6               	movwf	postinc1,c
  4548  0100C8  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  4549  0100CC  0060  F007  FFE6   	movff	btemp,postinc1
  4550  0100D2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4551  0100D8  0E04               	movlw	4
  4552  0100DA  6EE6               	movwf	postinc1,c
  4553  0100DC  EC1C  F0D3         	call	_sprintf	;wreg free
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;main.c: 245:    sprintf(get_vterm_ptr(1, 0), " Version %s         ", "1.18");
  4557  0100E0  0ED2               	movlw	low STR_3
  4558  0100E2  6EE6               	movwf	postinc1,c
  4559  0100E4  0EFF               	movlw	high STR_3
  4560  0100E6  6EE6               	movwf	postinc1,c
  4561  0100E8  0E62               	movlw	low STR_2
  4562  0100EA  6EE6               	movwf	postinc1,c
  4563  0100EC  0EFE               	movlw	high STR_2
  4564  0100EE  6EE6               	movwf	postinc1,c
  4565  0100F0  0E00               	movlw	0
  4566  0100F2  6EE6               	movwf	postinc1,c
  4567  0100F4  0E01               	movlw	1
  4568  0100F6  6EE6               	movwf	postinc1,c
  4569  0100F8  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  4570  0100FC  0060  F007  FFE6   	movff	btemp,postinc1
  4571  010102  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4572  010108  0E06               	movlw	6
  4573  01010A  6EE6               	movwf	postinc1,c
  4574  01010C  EC1C  F0D3         	call	_sprintf	;wreg free
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;main.c: 246:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK           ");
  4578  010110  0E0E               	movlw	low STR_4
  4579  010112  6EE6               	movwf	postinc1,c
  4580  010114  0EFE               	movlw	high STR_4
  4581  010116  6EE6               	movwf	postinc1,c
  4582  010118  0E00               	movlw	0
  4583  01011A  6EE6               	movwf	postinc1,c
  4584  01011C  0E02               	movlw	2
  4585  01011E  6EE6               	movwf	postinc1,c
  4586  010120  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  4587  010124  0060  F007  FFE6   	movff	btemp,postinc1
  4588  01012A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4589  010130  0E04               	movlw	4
  4590  010132  6EE6               	movwf	postinc1,c
  4591  010134  EC1C  F0D3         	call	_sprintf	;wreg free
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 2), "                    ");
  4595  010138  0E45               	movlw	low (STR_14+1)
  4596  01013A  6EE6               	movwf	postinc1,c
  4597  01013C  0EFC               	movlw	high (STR_14+1)
  4598  01013E  6EE6               	movwf	postinc1,c
  4599  010140  0E02               	movlw	2
  4600  010142  6EE6               	movwf	postinc1,c
  4601  010144  0E00               	movlw	0
  4602  010146  6EE6               	movwf	postinc1,c
  4603  010148  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  4604  01014C  0060  F007  FFE6   	movff	btemp,postinc1
  4605  010152  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4606  010158  0E04               	movlw	4
  4607  01015A  6EE6               	movwf	postinc1,c
  4608  01015C  EC1C  F0D3         	call	_sprintf	;wreg free
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 2), "                    ");
  4612  010160  0E45               	movlw	low (STR_14+1)
  4613  010162  6EE6               	movwf	postinc1,c
  4614  010164  0EFC               	movlw	high (STR_14+1)
  4615  010166  6EE6               	movwf	postinc1,c
  4616  010168  0E02               	movlw	2
  4617  01016A  6EE6               	movwf	postinc1,c
  4618  01016C  0E01               	movlw	1
  4619  01016E  6EE6               	movwf	postinc1,c
  4620  010170  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  4621  010174  0060  F007  FFE6   	movff	btemp,postinc1
  4622  01017A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4623  010180  0E04               	movlw	4
  4624  010182  6EE6               	movwf	postinc1,c
  4625  010184  EC1C  F0D3         	call	_sprintf	;wreg free
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 2), "                    ");
  4629  010188  0E45               	movlw	low (STR_14+1)
  4630  01018A  6EE6               	movwf	postinc1,c
  4631  01018C  0EFC               	movlw	high (STR_14+1)
  4632  01018E  6EE6               	movwf	postinc1,c
  4633  010190  0E02               	movlw	2
  4634  010192  6EE6               	movwf	postinc1,c
  4635  010194  0E02               	movlw	2
  4636  010196  6EE6               	movwf	postinc1,c
  4637  010198  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  4638  01019C  0060  F007  FFE6   	movff	btemp,postinc1
  4639  0101A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4640  0101A8  0E04               	movlw	4
  4641  0101AA  6EE6               	movwf	postinc1,c
  4642  0101AC  EC1C  F0D3         	call	_sprintf	;wreg free
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;main.c: 250:    update_lcd(0);
  4646  0101B0  0E00               	movlw	0
  4647  0101B2  6EE6               	movwf	postinc1,c
  4648  0101B4  EC94  F0D2         	call	_update_lcd	;wreg free
  4649                           
  4650                           ;main.c: 251:    WaitMs(1000);
  4651  0101B8  0EE8               	movlw	232
  4652  0101BA  6EE6               	movwf	postinc1,c
  4653  0101BC  0E03               	movlw	3
  4654  0101BE  6EE6               	movwf	postinc1,c
  4655  0101C0  EC41  F0E3         	call	_WaitMs	;wreg free
  4656                           
  4657                           ;main.c: 252:    StartTimer(TMR_DISPLAY, 250);
  4658  0101C4  0EFA               	movlw	250
  4659  0101C6  6EE6               	movwf	postinc1,c
  4660  0101C8  0E00               	movlw	0
  4661  0101CA  6EE6               	movwf	postinc1,c
  4662  0101CC  0E0A               	movlw	10
  4663  0101CE  6EE6               	movwf	postinc1,c
  4664  0101D0  EC50  F0E2         	call	_StartTimer	;wreg free
  4665                           
  4666                           ;main.c: 253:    StartTimer(TMR_ADC, 200);
  4667  0101D4  0EC8               	movlw	200
  4668  0101D6  6EE6               	movwf	postinc1,c
  4669  0101D8  0E00               	movlw	0
  4670  0101DA  6EE6               	movwf	postinc1,c
  4671  0101DC  0E01               	movlw	1
  4672  0101DE  6EE6               	movwf	postinc1,c
  4673  0101E0  EC50  F0E2         	call	_StartTimer	;wreg free
  4674                           
  4675                           ;main.c: 254:    StartTimer(TMR_INFO, 3000);
  4676  0101E4  0EB8               	movlw	184
  4677  0101E6  6EE6               	movwf	postinc1,c
  4678  0101E8  0E0B               	movlw	11
  4679  0101EA  6EE6               	movwf	postinc1,c
  4680  0101EC  0E07               	movlw	7
  4681  0101EE  6EE6               	movwf	postinc1,c
  4682  0101F0  EC50  F0E2         	call	_StartTimer	;wreg free
  4683                           
  4684                           ;main.c: 255:    StartTimer(TMR_FLIPPER, 1500);
  4685  0101F4  0EDC               	movlw	220
  4686  0101F6  6EE6               	movwf	postinc1,c
  4687  0101F8  0E05               	movlw	5
  4688  0101FA  6EE6               	movwf	postinc1,c
  4689  0101FC  0E0B               	movlw	11
  4690  0101FE  6EE6               	movwf	postinc1,c
  4691  010200  EC50  F0E2         	call	_StartTimer	;wreg free
  4692                           
  4693                           ;main.c: 256:    StartTimer(TMR_HELPDIS, 3000);
  4694  010204  0EB8               	movlw	184
  4695  010206  6EE6               	movwf	postinc1,c
  4696  010208  0E0B               	movlw	11
  4697  01020A  6EE6               	movwf	postinc1,c
  4698  01020C  0E09               	movlw	9
  4699  01020E  6EE6               	movwf	postinc1,c
  4700  010210  EC50  F0E2         	call	_StartTimer	;wreg free
  4701                           
  4702                           ;main.c: 258:    start_adc_scan();
  4703  010214  ECE9  F0DE         	call	_start_adc_scan	;wreg free
  4704                           
  4705                           ;main.c: 259:    start_switch_handler();
  4706  010218  EC77  F0E6         	call	_start_switch_handler	;wreg free
  4707                           
  4708                           ; BSR set to: 57
  4709                           ;main.c: 260:    WaitMs(1000);
  4710  01021C  0EE8               	movlw	232
  4711  01021E  6EE6               	movwf	postinc1,c
  4712  010220  0E03               	movlw	3
  4713  010222  6EE6               	movwf	postinc1,c
  4714  010224  EC41  F0E3         	call	_WaitMs	;wreg free
  4715                           
  4716                           ;main.c: 265:    if (read_cal_data()) {
  4717  010228  EC1C  F0D4         	call	_read_cal_data	;wreg free
  4718  01022C  5001               	movf	btemp^0,w,c
  4719  01022E  B4D8               	btfsc	status,2,c
  4720  010230  D017               	goto	l14068
  4721                           
  4722                           ; BSR set to: 3
  4723                           ;main.c: 266:     update_cal_data();
  4724  010232  EC15  F0E7         	call	_update_cal_data	;wreg free
  4725                           
  4726                           ;main.c: 267:     sprintf(get_vterm_ptr(2, 0), "Read EEPROM DATA    ");
  4727  010236  0EF5               	movlw	low STR_8
  4728  010238  6EE6               	movwf	postinc1,c
  4729  01023A  0EFE               	movlw	high STR_8
  4730  01023C  6EE6               	movwf	postinc1,c
  4731  01023E  0E00               	movlw	0
  4732  010240  6EE6               	movwf	postinc1,c
  4733  010242  0E02               	movlw	2
  4734  010244  6EE6               	movwf	postinc1,c
  4735  010246  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  4736  01024A  0060  F007  FFE6   	movff	btemp,postinc1
  4737  010250  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4738  010256  0E04               	movlw	4
  4739  010258  6EE6               	movwf	postinc1,c
  4740  01025A  EC1C  F0D3         	call	_sprintf	;wreg free
  4741                           
  4742                           ;main.c: 268:    } else {
  4743  01025E  D014               	goto	l1348
  4744  010260                     l14068:
  4745                           
  4746                           ; BSR set to: 3
  4747                           ;main.c: 269:     sprintf(get_vterm_ptr(2, 0), "Invalid EEPROM DATA ");
  4748  010260  0E34               	movlw	low STR_9
  4749  010262  6EE6               	movwf	postinc1,c
  4750  010264  0EFF               	movlw	high STR_9
  4751  010266  6EE6               	movwf	postinc1,c
  4752  010268  0E00               	movlw	0
  4753  01026A  6EE6               	movwf	postinc1,c
  4754  01026C  0E02               	movlw	2
  4755  01026E  6EE6               	movwf	postinc1,c
  4756  010270  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  4757  010274  0060  F007  FFE6   	movff	btemp,postinc1
  4758  01027A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4759  010280  0E04               	movlw	4
  4760  010282  6EE6               	movwf	postinc1,c
  4761  010284  EC1C  F0D3         	call	_sprintf	;wreg free
  4762  010288                     l1348:
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;main.c: 271:    update_lcd(0);
  4766  010288  0E00               	movlw	0
  4767  01028A  6EE6               	movwf	postinc1,c
  4768  01028C  EC94  F0D2         	call	_update_lcd	;wreg free
  4769                           
  4770                           ;main.c: 272:    WaitMs(2000);
  4771  010290  0ED0               	movlw	208
  4772  010292  6EE6               	movwf	postinc1,c
  4773  010294  0E07               	movlw	7
  4774  010296  6EE6               	movwf	postinc1,c
  4775  010298  EC41  F0E3         	call	_WaitMs	;wreg free
  4776                           
  4777                           ;main.c: 274:    i_ror = 1;
  4778                           ;stkvar	_i_ror @ sp[(-17)+16]
  4779  01029C  0EFF               	movlw	-1
  4780  01029E  6AE3               	clrf	plusw1,c
  4781  0102A0  2AE3               	incf	plusw1,f,c
  4782  0102A2                     l14074:
  4783                           
  4784                           ;main.c: 276:     calc_ror_data();
  4785  0102A2  ECA7  F0C9         	call	_calc_ror_data	;wreg free
  4786                           
  4787                           ;main.c: 277:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f            ", conv_raw_result(V
      +                          _BAT, CONV));
  4788  0102A6  0E00               	movlw	0
  4789  0102A8  6EE6               	movwf	postinc1,c
  4790  0102AA  0E04               	movlw	4
  4791  0102AC  6EE6               	movwf	postinc1,c
  4792  0102AE  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  4793  0102B2  0060  F007  FFE6   	movff	btemp,postinc1
  4794  0102B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4795  0102BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4796  0102C4  0060  F013  FFE6   	movff	btemp+3,postinc1
  4797  0102CA  0EF9               	movlw	low STR_10
  4798  0102CC  6EE6               	movwf	postinc1,c
  4799  0102CE  0EFD               	movlw	high STR_10
  4800  0102D0  6EE6               	movwf	postinc1,c
  4801  0102D2  0E00               	movlw	0
  4802  0102D4  6EE6               	movwf	postinc1,c
  4803  0102D6  0E01               	movlw	1
  4804  0102D8  6EE6               	movwf	postinc1,c
  4805  0102DA  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  4806  0102DE  0060  F007  FFE6   	movff	btemp,postinc1
  4807  0102E4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4808  0102EA  0E08               	movlw	8
  4809  0102EC  6EE6               	movwf	postinc1,c
  4810  0102EE  EC1C  F0D3         	call	_sprintf	;wreg free
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;main.c: 278:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f          ", spinners(5, 
      +                          0), i_ror, C.bv_ror);
  4814  0102F2  EE21  F36B         	lfsr	2,_C+108	;volatile
  4815  0102F6  006F FF7B FFE6     	movff	postinc2,postinc1
  4816  0102FC  006F FF7B FFE6     	movff	postinc2,postinc1
  4817  010302  006F FF7B FFE6     	movff	postinc2,postinc1
  4818  010308  006F FF7B FFE6     	movff	postinc2,postinc1
  4819                           
  4820                           ;stkvar	_i_ror @ sp[(-21)+16]
  4821  01030E  0EFB               	movlw	-5
  4822  010310  50E3               	movf	plusw1,w,c
  4823  010312  6EE6               	movwf	postinc1,c
  4824  010314  0E00               	movlw	0
  4825  010316  6EE6               	movwf	postinc1,c
  4826  010318  0E00               	movlw	0
  4827  01031A  6EE6               	movwf	postinc1,c
  4828  01031C  0E05               	movlw	5
  4829  01031E  6EE6               	movwf	postinc1,c
  4830  010320  ECA1  F0D3         	call	_spinners	;wreg free
  4831  010324  5001               	movf	btemp^0,w,c
  4832  010326  6EE6               	movwf	postinc1,c
  4833  010328  0E00               	movlw	0
  4834  01032A  6EE6               	movwf	postinc1,c
  4835  01032C  0E9F               	movlw	low STR_11
  4836  01032E  6EE6               	movwf	postinc1,c
  4837  010330  0EFB               	movlw	high STR_11
  4838  010332  6EE6               	movwf	postinc1,c
  4839  010334  0E00               	movlw	0
  4840  010336  6EE6               	movwf	postinc1,c
  4841  010338  0E02               	movlw	2
  4842  01033A  6EE6               	movwf	postinc1,c
  4843  01033C  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  4844  010340  0060  F007  FFE6   	movff	btemp,postinc1
  4845  010346  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4846  01034C  0E0C               	movlw	12
  4847  01034E  6EE6               	movwf	postinc1,c
  4848  010350  EC1C  F0D3         	call	_sprintf	;wreg free
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;main.c: 279:     update_lcd(0);
  4852  010354  0E00               	movlw	0
  4853  010356  6EE6               	movwf	postinc1,c
  4854  010358  EC94  F0D2         	call	_update_lcd	;wreg free
  4855                           
  4856                           ;main.c: 280:     clear_adc_scan();
  4857  01035C  ECC9  F0E7         	call	_clear_adc_scan	;wreg free
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;main.c: 281:     start_adc_scan();
  4861  010360  ECE9  F0DE         	call	_start_adc_scan	;wreg free
  4862                           
  4863                           ;main.c: 282:     WaitMs(2000);
  4864  010364  0ED0               	movlw	208
  4865  010366  6EE6               	movwf	postinc1,c
  4866  010368  0E07               	movlw	7
  4867  01036A  6EE6               	movwf	postinc1,c
  4868  01036C  EC41  F0E3         	call	_WaitMs	;wreg free
  4869                           
  4870                           ;main.c: 285:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4871                           ;stkvar	_i_ror @ sp[(-17)+16]
  4872  010370  0EFF               	movlw	-1
  4873  010372  006F FF8C  F00C    	movff	plusw1,btemp+11
  4874  010378  2A0C               	incf	(btemp+11)^0,f,c
  4875  01037A  0060  F033  FFE3   	movff	btemp+11,plusw1
  4876  010380  060C               	decf	(btemp+11)^0,f,c
  4877  010382  0E1E               	movlw	30
  4878  010384  600C               	cpfslt	(btemp+11)^0,c
  4879  010386  D01A               	goto	u13460
  4880  010388  EE21  F36B         	lfsr	2,_C+108	;volatile
  4881  01038C  006F FF7B FFE6     	movff	postinc2,postinc1
  4882  010392  006F FF7B FFE6     	movff	postinc2,postinc1
  4883  010398  006F FF7B FFE6     	movff	postinc2,postinc1
  4884  01039E  006F FF7B FFE6     	movff	postinc2,postinc1
  4885  0103A4  0E42               	movlw	66
  4886  0103A6  6EE6               	movwf	postinc1,c
  4887  0103A8  0E60               	movlw	96
  4888  0103AA  6EE6               	movwf	postinc1,c
  4889  0103AC  0E65               	movlw	101
  4890  0103AE  6EE6               	movwf	postinc1,c
  4891  0103B0  0E3C               	movlw	60
  4892  0103B2  6EE6               	movwf	postinc1,c
  4893  0103B4  ECE3  F0CB         	call	___flge	;wreg free
  4894  0103B8  A001               	btfss	btemp& (0+255),0,c
  4895  0103BA  D773               	goto	l14074
  4896  0103BC                     u13460:
  4897                           
  4898                           ;main.c: 287:    static_soc();
  4899  0103BC  ECAD  F0DF         	call	_static_soc	;wreg free
  4900                           
  4901                           ;main.c: 288:    init_bsoc();
  4902  0103C0  ECC2  F0C0         	call	_init_bsoc	;wreg free
  4903                           
  4904                           ;main.c: 289:    set_load_relay_one(0);
  4905  0103C4  0E00               	movlw	0
  4906  0103C6  6EE6               	movwf	postinc1,c
  4907  0103C8  EC5C  F0E7         	call	_set_load_relay_one	;wreg free
  4908                           
  4909                           ;main.c: 290:    set_load_relay_two(0);
  4910  0103CC  0E00               	movlw	0
  4911  0103CE  6EE6               	movwf	postinc1,c
  4912  0103D0  EC54  F0E7         	call	_set_load_relay_two	;wreg free
  4913                           
  4914                           ;main.c: 291:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4915  0103D4  EE21  F3B5         	lfsr	2,_C+182	;volatile
  4916  0103D8  006F FF78  F00B    	movff	postinc2,btemp+10
  4917  0103DE  006F FF74  F00C    	movff	postdec2,btemp+11
  4918  0103E4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  4919  0103EA  0060  F033  FFE6   	movff	btemp+11,postinc1
  4920  0103F0  0E70               	movlw	low STR_12
  4921  0103F2  6EE6               	movwf	postinc1,c
  4922  0103F4  0EFC               	movlw	high STR_12
  4923  0103F6  6EE6               	movwf	postinc1,c
  4924  0103F8  0E00               	movlw	0
  4925  0103FA  6EE6               	movwf	postinc1,c
  4926  0103FC  0E00               	movlw	0
  4927  0103FE  6EE6               	movwf	postinc1,c
  4928  010400  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  4929  010404  0060  F007  FFE6   	movff	btemp,postinc1
  4930  01040A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4931  010410  0E06               	movlw	6
  4932  010412  6EE6               	movwf	postinc1,c
  4933  010414  EC1C  F0D3         	call	_sprintf	;wreg free
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;main.c: 292:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4937  010418  EE21  F38F         	lfsr	2,_C+144	;volatile
  4938  01041C  006F FF7B FFE6     	movff	postinc2,postinc1
  4939  010422  006F FF7B FFE6     	movff	postinc2,postinc1
  4940  010428  006F FF7B FFE6     	movff	postinc2,postinc1
  4941  01042E  006F FF7B FFE6     	movff	postinc2,postinc1
  4942  010434  0E4C               	movlw	low STR_13
  4943  010436  6EE6               	movwf	postinc1,c
  4944  010438  0EFD               	movlw	high STR_13
  4945  01043A  6EE6               	movwf	postinc1,c
  4946  01043C  0E00               	movlw	0
  4947  01043E  6EE6               	movwf	postinc1,c
  4948  010440  0E01               	movlw	1
  4949  010442  6EE6               	movwf	postinc1,c
  4950  010444  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  4951  010448  0060  F007  FFE6   	movff	btemp,postinc1
  4952  01044E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4953  010454  0E08               	movlw	8
  4954  010456  6EE6               	movwf	postinc1,c
  4955  010458  EC1C  F0D3         	call	_sprintf	;wreg free
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;main.c: 293:    sprintf(get_vterm_ptr(2, 0), "                     ");
  4959  01045C  0E44               	movlw	low STR_14
  4960  01045E  6EE6               	movwf	postinc1,c
  4961  010460  0EFC               	movlw	high STR_14
  4962  010462  6EE6               	movwf	postinc1,c
  4963  010464  0E00               	movlw	0
  4964  010466  6EE6               	movwf	postinc1,c
  4965  010468  0E02               	movlw	2
  4966  01046A  6EE6               	movwf	postinc1,c
  4967  01046C  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  4968  010470  0060  F007  FFE6   	movff	btemp,postinc1
  4969  010476  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4970  01047C  0E04               	movlw	4
  4971  01047E  6EE6               	movwf	postinc1,c
  4972  010480  EC1C  F0D3         	call	_sprintf	;wreg free
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;main.c: 294:    update_lcd(0);
  4976  010484  0E00               	movlw	0
  4977  010486  6EE6               	movwf	postinc1,c
  4978  010488  EC94  F0D2         	call	_update_lcd	;wreg free
  4979                           
  4980                           ;main.c: 295:    WaitMs(2000);
  4981  01048C  0ED0               	movlw	208
  4982  01048E  6EE6               	movwf	postinc1,c
  4983  010490  0E07               	movlw	7
  4984  010492  6EE6               	movwf	postinc1,c
  4985  010494  EC41  F0E3         	call	_WaitMs	;wreg free
  4986                           
  4987                           ;main.c: 296:    sprintf(get_vterm_ptr(0, 0), "Battery ESR         ");
  4988  010498  0E23               	movlw	low STR_15
  4989  01049A  6EE6               	movwf	postinc1,c
  4990  01049C  0EFE               	movlw	high STR_15
  4991  01049E  6EE6               	movwf	postinc1,c
  4992  0104A0  0E00               	movlw	0
  4993  0104A2  6EE6               	movwf	postinc1,c
  4994  0104A4  0E00               	movlw	0
  4995  0104A6  6EE6               	movwf	postinc1,c
  4996  0104A8  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  4997  0104AC  0060  F007  FFE6   	movff	btemp,postinc1
  4998  0104B2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4999  0104B8  0E04               	movlw	4
  5000  0104BA  6EE6               	movwf	postinc1,c
  5001  0104BC  EC1C  F0D3         	call	_sprintf	;wreg free
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;main.c: 297:    sprintf(get_vterm_ptr(1, 0), "Calculation         ");
  5005  0104C0  0E38               	movlw	low STR_16
  5006  0104C2  6EE6               	movwf	postinc1,c
  5007  0104C4  0EFE               	movlw	high STR_16
  5008  0104C6  6EE6               	movwf	postinc1,c
  5009  0104C8  0E00               	movlw	0
  5010  0104CA  6EE6               	movwf	postinc1,c
  5011  0104CC  0E01               	movlw	1
  5012  0104CE  6EE6               	movwf	postinc1,c
  5013  0104D0  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5014  0104D4  0060  F007  FFE6   	movff	btemp,postinc1
  5015  0104DA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5016  0104E0  0E04               	movlw	4
  5017  0104E2  6EE6               	movwf	postinc1,c
  5018  0104E4  EC1C  F0D3         	call	_sprintf	;wreg free
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;main.c: 298:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds    ");
  5022  0104E8  0E0A               	movlw	low STR_17
  5023  0104EA  6EE6               	movwf	postinc1,c
  5024  0104EC  0EFF               	movlw	high STR_17
  5025  0104EE  6EE6               	movwf	postinc1,c
  5026  0104F0  0E00               	movlw	0
  5027  0104F2  6EE6               	movwf	postinc1,c
  5028  0104F4  0E02               	movlw	2
  5029  0104F6  6EE6               	movwf	postinc1,c
  5030  0104F8  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5031  0104FC  0060  F007  FFE6   	movff	btemp,postinc1
  5032  010502  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5033  010508  0E04               	movlw	4
  5034  01050A  6EE6               	movwf	postinc1,c
  5035  01050C  EC1C  F0D3         	call	_sprintf	;wreg free
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;main.c: 299:    update_lcd(0);
  5039  010510  0E00               	movlw	0
  5040  010512  6EE6               	movwf	postinc1,c
  5041  010514  EC94  F0D2         	call	_update_lcd	;wreg free
  5042                           
  5043                           ;main.c: 300:    uint16_t i_esr = 1;
  5044  010518  0E01               	movlw	1
  5045  01051A  6E0B               	movwf	(btemp+10)^0,c
  5046  01051C  0E00               	movlw	0
  5047  01051E  6E0C               	movwf	(btemp+11)^0,c
  5048                           
  5049                           ;stkvar	_i_esr @ sp[(-17)+8]
  5050  010520  0EF7               	movlw	-9
  5051  010522  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5052  010528  0EF8               	movlw	-8
  5053  01052A  0060  F033  FFE3   	movff	btemp+11,plusw1
  5054                           
  5055                           ;main.c: 302:    float esr_temp;;main.c: 303:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  5056  010530  D06D               	goto	l14134
  5057  010532                     l14122:
  5058                           
  5059                           ;main.c: 304:     WaitMs(110);
  5060  010532  0E6E               	movlw	110
  5061  010534  6EE6               	movwf	postinc1,c
  5062  010536  0E00               	movlw	0
  5063  010538  6EE6               	movwf	postinc1,c
  5064  01053A  EC41  F0E3         	call	_WaitMs	;wreg free
  5065                           
  5066                           ;main.c: 305:     shape = (uint8_t) fabsf(esr_temp);
  5067                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5068  01053E  0EF3               	movlw	-13
  5069  010540  006F FF8F FFE6     	movff	plusw1,postinc1
  5070  010546  006F FF8F FFE6     	movff	plusw1,postinc1
  5071  01054C  006F FF8F FFE6     	movff	plusw1,postinc1
  5072  010552  006F FF8F FFE6     	movff	plusw1,postinc1
  5073  010558  EC98  F0D8         	call	_fabsf	;wreg free
  5074  01055C  0060  F007  FFE6   	movff	btemp,postinc1
  5075  010562  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5076  010568  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5077  01056E  0060  F013  FFE6   	movff	btemp+3,postinc1
  5078  010574  EC2A  F0CB         	call	___fltol	;wreg free
  5079  010578  0060  F004  F00C   	movff	btemp,btemp+11
  5080                           
  5081                           ;stkvar	_shape @ sp[(-17)+10]
  5082  01057E  0EF9               	movlw	-7
  5083  010580  0060  F033  FFE3   	movff	btemp+11,plusw1
  5084                           
  5085                           ;main.c: 306:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  5086  010586  0E00               	movlw	0
  5087  010588  6EE6               	movwf	postinc1,c
  5088                           
  5089                           ;stkvar	_shape @ sp[(-18)+10]
  5090  01058A  0EF8               	movlw	-8
  5091  01058C  50E3               	movf	plusw1,w,c
  5092  01058E  6EE6               	movwf	postinc1,c
  5093  010590  ECA1  F0D3         	call	_spinners	;wreg free
  5094  010594  5001               	movf	btemp^0,w,c
  5095  010596  6EE6               	movwf	postinc1,c
  5096  010598  0E00               	movlw	0
  5097  01059A  6EE6               	movwf	postinc1,c
  5098  01059C  0E00               	movlw	0
  5099  01059E  6EE6               	movwf	postinc1,c
  5100  0105A0  0E00               	movlw	0
  5101  0105A2  6EE6               	movwf	postinc1,c
  5102  0105A4  ECA1  F0D3         	call	_spinners	;wreg free
  5103  0105A8  5001               	movf	btemp^0,w,c
  5104  0105AA  6EE6               	movwf	postinc1,c
  5105  0105AC  0E00               	movlw	0
  5106  0105AE  6EE6               	movwf	postinc1,c
  5107  0105B0  0ECB               	movlw	low STR_18
  5108  0105B2  6EE6               	movwf	postinc1,c
  5109  0105B4  0EFE               	movlw	high STR_18
  5110  0105B6  6EE6               	movwf	postinc1,c
  5111  0105B8  0E00               	movlw	0
  5112  0105BA  6EE6               	movwf	postinc1,c
  5113  0105BC  0E02               	movlw	2
  5114  0105BE  6EE6               	movwf	postinc1,c
  5115  0105C0  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5116  0105C4  0060  F007  FFE6   	movff	btemp,postinc1
  5117  0105CA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5118  0105D0  0E08               	movlw	8
  5119  0105D2  6EE6               	movwf	postinc1,c
  5120  0105D4  EC1C  F0D3         	call	_sprintf	;wreg free
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;main.c: 307:     update_lcd(0);
  5124  0105D8  0E00               	movlw	0
  5125  0105DA  6EE6               	movwf	postinc1,c
  5126  0105DC  EC94  F0D2         	call	_update_lcd	;wreg free
  5127                           
  5128                           ;main.c: 309:     if (i_esr++ > 512)
  5129                           ;stkvar	_i_esr @ sp[(-17)+8]
  5130  0105E0  50E1               	movf	fsr1l,w,c
  5131  0105E2  0FF7               	addlw	-9
  5132  0105E4  6ED9               	movwf	fsr2l,c
  5133  0105E6  50E2               	movf	fsr1h,w,c
  5134  0105E8  6EDA               	movwf	fsr2h,c
  5135  0105EA  0EFF               	movlw	255
  5136  0105EC  22DA               	addwfc	fsr2h,f,c
  5137  0105EE  006F FF7C  F00B    	movff	indf2,btemp+10
  5138  0105F4  0E01               	movlw	1
  5139  0105F6  26DE               	addwf	postinc2,f,c
  5140  0105F8  006F FF7C  F00C    	movff	indf2,btemp+11
  5141  0105FE  0E00               	movlw	0
  5142  010600  22DD               	addwfc	postdec2,f,c
  5143  010602  040B               	decf	(btemp+10)^0,w,c
  5144  010604  0E02               	movlw	2
  5145  010606  580C               	subwfb	(btemp+11)^0,w,c
  5146  010608  B0D8               	btfsc	status,0,c
  5147  01060A  D017               	goto	u13480
  5148  01060C                     l14134:
  5149                           
  5150                           ;main.c: 303:    while ((esr_temp = esr_check(0)) < 0.0) {
  5151  01060C  0E00               	movlw	0
  5152  01060E  6EE6               	movwf	postinc1,c
  5153  010610  EC7D  F0BB         	call	_esr_check	;wreg free
  5154                           
  5155                           ;stkvar	_esr_temp @ sp[(-17)+4]
  5156  010614  0EF3               	movlw	-13
  5157  010616  0060  F007  FFE3   	movff	btemp,plusw1
  5158  01061C  0EF4               	movlw	-12
  5159  01061E  0060  F00B  FFE3   	movff	btemp+1,plusw1
  5160  010624  0EF5               	movlw	-11
  5161  010626  0060  F00F  FFE3   	movff	btemp+2,plusw1
  5162  01062C  0EF6               	movlw	-10
  5163  01062E  0060  F013  FFE3   	movff	btemp+3,plusw1
  5164  010634  0EF6               	movlw	-10
  5165  010636  BEE3               	btfsc	plusw1,7,c
  5166  010638  D77C               	goto	l14122
  5167  01063A                     u13480:
  5168                           
  5169                           ;main.c: 312:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  5170  01063A  EE21  F387         	lfsr	2,_C+136	;volatile
  5171  01063E  006F FF7B FFE6     	movff	postinc2,postinc1
  5172  010644  006F FF7B FFE6     	movff	postinc2,postinc1
  5173  01064A  006F FF7B FFE6     	movff	postinc2,postinc1
  5174  010650  006F FF7B FFE6     	movff	postinc2,postinc1
  5175  010656  0E5A               	movlw	low STR_19
  5176  010658  6EE6               	movwf	postinc1,c
  5177  01065A  0EFC               	movlw	high STR_19
  5178  01065C  6EE6               	movwf	postinc1,c
  5179  01065E  0E00               	movlw	0
  5180  010660  6EE6               	movwf	postinc1,c
  5181  010662  0E00               	movlw	0
  5182  010664  6EE6               	movwf	postinc1,c
  5183  010666  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5184  01066A  0060  F007  FFE6   	movff	btemp,postinc1
  5185  010670  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5186  010676  0E08               	movlw	8
  5187  010678  6EE6               	movwf	postinc1,c
  5188  01067A  EC1C  F0D3         	call	_sprintf	;wreg free
  5189                           
  5190                           ;main.c: 313:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  5191  01067E  EE22  F00D         	lfsr	2,_C+270	;volatile
  5192  010682  006F FF7B FFE6     	movff	postinc2,postinc1
  5193  010688  006F FF7B FFE6     	movff	postinc2,postinc1
  5194  01068E  006F FF7B FFE6     	movff	postinc2,postinc1
  5195  010694  006F FF7B FFE6     	movff	postinc2,postinc1
  5196  01069A  EE22  F019         	lfsr	2,_C+282	;volatile
  5197  01069E  006F FF7B FFE6     	movff	postinc2,postinc1
  5198  0106A4  006F FF7B FFE6     	movff	postinc2,postinc1
  5199  0106AA  006F FF7B FFE6     	movff	postinc2,postinc1
  5200  0106B0  006F FF7B FFE6     	movff	postinc2,postinc1
  5201  0106B6  0E6B               	movlw	low STR_20
  5202  0106B8  6EE6               	movwf	postinc1,c
  5203  0106BA  0EFB               	movlw	high STR_20
  5204  0106BC  6EE6               	movwf	postinc1,c
  5205  0106BE  0E00               	movlw	0
  5206  0106C0  6EE6               	movwf	postinc1,c
  5207  0106C2  0E01               	movlw	1
  5208  0106C4  6EE6               	movwf	postinc1,c
  5209  0106C6  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5210  0106CA  0060  F007  FFE6   	movff	btemp,postinc1
  5211  0106D0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5212  0106D6  0E0C               	movlw	12
  5213  0106D8  6EE6               	movwf	postinc1,c
  5214  0106DA  EC1C  F0D3         	call	_sprintf	;wreg free
  5215                           
  5216                           ;main.c: 314:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  5217  0106DE  EE22  F011         	lfsr	2,_C+274	;volatile
  5218  0106E2  006F FF7B FFE6     	movff	postinc2,postinc1
  5219  0106E8  006F FF7B FFE6     	movff	postinc2,postinc1
  5220  0106EE  006F FF7B FFE6     	movff	postinc2,postinc1
  5221  0106F4  006F FF7B FFE6     	movff	postinc2,postinc1
  5222  0106FA  EE22  F01D         	lfsr	2,_C+286	;volatile
  5223  0106FE  006F FF7B FFE6     	movff	postinc2,postinc1
  5224  010704  006F FF7B FFE6     	movff	postinc2,postinc1
  5225  01070A  006F FF7B FFE6     	movff	postinc2,postinc1
  5226  010710  006F FF7B FFE6     	movff	postinc2,postinc1
  5227  010716  0E85               	movlw	low STR_21
  5228  010718  6EE6               	movwf	postinc1,c
  5229  01071A  0EFB               	movlw	high STR_21
  5230  01071C  6EE6               	movwf	postinc1,c
  5231  01071E  0E00               	movlw	0
  5232  010720  6EE6               	movwf	postinc1,c
  5233  010722  0E02               	movlw	2
  5234  010724  6EE6               	movwf	postinc1,c
  5235  010726  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5236  01072A  0060  F007  FFE6   	movff	btemp,postinc1
  5237  010730  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5238  010736  0E0C               	movlw	12
  5239  010738  6EE6               	movwf	postinc1,c
  5240  01073A  EC1C  F0D3         	call	_sprintf	;wreg free
  5241                           
  5242                           ;main.c: 315:    update_lcd(0);
  5243  01073E  0E00               	movlw	0
  5244  010740  6EE6               	movwf	postinc1,c
  5245  010742  EC94  F0D2         	call	_update_lcd	;wreg free
  5246                           
  5247                           ;main.c: 316:    WaitMs(4000);
  5248  010746  0EA0               	movlw	160
  5249  010748  6EE6               	movwf	postinc1,c
  5250  01074A  0E0F               	movlw	15
  5251  01074C  6EE6               	movwf	postinc1,c
  5252  01074E  EC41  F0E3         	call	_WaitMs	;wreg free
  5253                           
  5254                           ;main.c: 317:    V.sensor_set = get_switch(SCALIB);
  5255  010752  0E04               	movlw	4
  5256  010754  6EE6               	movwf	postinc1,c
  5257  010756  EC54  F0E4         	call	_get_switch	;wreg free
  5258  01075A  5001               	movf	btemp^0,w,c
  5259  01075C  B4D8               	btfsc	status,2,c
  5260  01075E  D002               	goto	u13490
  5261  010760  0E01               	movlw	1
  5262  010762  D001               	goto	u13500
  5263  010764                     u13490:
  5264  010764  0E00               	movlw	0
  5265  010766                     u13500:
  5266  010766  0101               	movlb	1	; () banked
  5267  010768  6FB5               	movwf	(_V+174)& (0+255),b	;volatile
  5268                           
  5269                           ; BSR set to: 1
  5270                           ;main.c: 318:    WaitMs(1000);
  5271  01076A  0EE8               	movlw	232
  5272  01076C  6EE6               	movwf	postinc1,c
  5273  01076E  0E03               	movlw	3
  5274  010770  6EE6               	movwf	postinc1,c
  5275  010772  EC41  F0E3         	call	_WaitMs	;wreg free
  5276                           
  5277                           ;main.c: 319:    if (V.sensor_set && get_switch(SCALIB)) {
  5278  010776  0101               	movlb	1	; () banked
  5279  010778  51B5               	movf	(_V+174)& (0+255),w,b	;volatile
  5280  01077A  B4D8               	btfsc	status,2,c
  5281  01077C  D00F               	goto	l14152
  5282                           
  5283                           ; BSR set to: 1
  5284  01077E  0E04               	movlw	4
  5285  010780  6EE6               	movwf	postinc1,c
  5286  010782  EC54  F0E4         	call	_get_switch	;wreg free
  5287  010786  5001               	movf	btemp^0,w,c
  5288  010788  B4D8               	btfsc	status,2,c
  5289  01078A  D008               	goto	l14152
  5290                           
  5291                           ;main.c: 320:     current_sensor_cal();
  5292  01078C  EC7C  F0AC         	call	_current_sensor_cal	;wreg free
  5293                           
  5294                           ;main.c: 321:     WaitMs(4000);
  5295  010790  0EA0               	movlw	160
  5296  010792  6EE6               	movwf	postinc1,c
  5297  010794  0E0F               	movlw	15
  5298  010796  6EE6               	movwf	postinc1,c
  5299  010798  EC41  F0E3         	call	_WaitMs	;wreg free
  5300  01079C                     l14152:
  5301                           
  5302                           ;main.c: 323:    V.sensor_set = 0;
  5303  01079C  0101               	movlb	1	; () banked
  5304  01079E  6BB5               	clrf	(_V+174)& (0+255),b	;volatile
  5305                           
  5306                           ; BSR set to: 1
  5307                           ;main.c: 324:    V.system_stable = 1;
  5308  0107A0  0E01               	movlw	1
  5309  0107A2  6FB6               	movwf	(_V+175)& (0+255),b	;volatile
  5310                           
  5311                           ;main.c: 325:    break;
  5312  0107A4  D01B               	goto	l14160
  5313  0107A6                     l1361:
  5314                           
  5315                           ; BSR set to: 1
  5316                           ;main.c: 331:    P.SYSTEM_STABLE = 1;
  5317  0107A6  81F7               	bsf	(_P+1)& (0+255),0,b	;volatile
  5318                           
  5319                           ;main.c: 332:    break;
  5320  0107A8  D019               	goto	l14160
  5321  0107AA                     l1363:
  5322                           
  5323                           ; BSR set to: 1
  5324                           ;main.c: 335:    V.ui_state = UI_STATE_INIT;
  5325  0107AA  6B07               	clrf	_V& (0+255),b	;volatile
  5326                           
  5327                           ;main.c: 336:    break;
  5328  0107AC  D017               	goto	l14160
  5329  0107AE                     l14158:
  5330  0107AE  0101               	movlb	1	; () banked
  5331  0107B0  5107               	movf	_V& (0+255),w,b	;volatile
  5332  0107B2  6E0B               	movwf	(btemp+10)^0,c
  5333  0107B4  6A0C               	clrf	(btemp+11)^0,c
  5334                           
  5335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5336                           ; Switch size 1, requested type "simple"
  5337                           ; Number of cases is 1, Range of values is 0 to 0
  5338                           ; switch strategies available:
  5339                           ; Name         Instructions Cycles
  5340                           ; simple_byte            4     3 (average)
  5341                           ;	Chosen strategy is simple_byte
  5342  0107B6  500C               	movf	(btemp+11)^0,w,c
  5343  0107B8  0A00               	xorlw	0	; case 0
  5344  0107BA  A4D8               	btfss	status,2,c
  5345  0107BC  D7F6               	goto	l1363
  5346                           
  5347                           ; BSR set to: 1
  5348                           ; Switch size 1, requested type "simple"
  5349                           ; Number of cases is 5, Range of values is 0 to 5
  5350                           ; switch strategies available:
  5351                           ; Name         Instructions Cycles
  5352                           ; simple_byte           16     9 (average)
  5353                           ;	Chosen strategy is simple_byte
  5354  0107BE  500B               	movf	(btemp+10)^0,w,c
  5355  0107C0  0A00               	xorlw	0	; case 0
  5356  0107C2  B4D8               	btfsc	status,2,c
  5357  0107C4  D459               	goto	l14012
  5358  0107C6  0A01               	xorlw	1	; case 1
  5359  0107C8  B4D8               	btfsc	status,2,c
  5360  0107CA  D008               	goto	l14160
  5361  0107CC  0A02               	xorlw	2	; case 3
  5362  0107CE  B4D8               	btfsc	status,2,c
  5363  0107D0  D005               	goto	l14160
  5364  0107D2  0A07               	xorlw	7	; case 4
  5365  0107D4  B4D8               	btfsc	status,2,c
  5366  0107D6  D7E7               	goto	l1361
  5367  0107D8  0A01               	xorlw	1	; case 5
  5368  0107DA  D7E7               	goto	l1363
  5369  0107DC                     l14160:
  5370                           
  5371                           ; BSR set to: 1
  5372                           ;main.c: 339:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  5373  0107DC  0E01               	movlw	1
  5374  0107DE  6EE6               	movwf	postinc1,c
  5375  0107E0  ECBF  F0E4         	call	_TimerDone	;wreg free
  5376  0107E4  5001               	movf	btemp^0,w,c
  5377  0107E6  B4D8               	btfsc	status,2,c
  5378  0107E8  D013               	goto	l14172
  5379  0107EA  ECB5  F0E7         	call	_check_adc_scan	;wreg free
  5380  0107EE  5001               	movf	btemp^0,w,c
  5381  0107F0  B4D8               	btfsc	status,2,c
  5382  0107F2  D00E               	goto	l14172
  5383                           
  5384                           ;main.c: 343:    convert_adc_data();
  5385  0107F4  ECE1  F0D7         	call	_convert_adc_data	;wreg free
  5386                           
  5387                           ;main.c: 347:    clear_adc_scan();
  5388  0107F8  ECC9  F0E7         	call	_clear_adc_scan	;wreg free
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;main.c: 348:    start_adc_scan();
  5392  0107FC  ECE9  F0DE         	call	_start_adc_scan	;wreg free
  5393                           
  5394                           ;main.c: 349:    StartTimer(TMR_ADC, 200);
  5395  010800  0EC8               	movlw	200
  5396  010802  6EE6               	movwf	postinc1,c
  5397  010804  0E00               	movlw	0
  5398  010806  6EE6               	movwf	postinc1,c
  5399  010808  0E01               	movlw	1
  5400  01080A  6EE6               	movwf	postinc1,c
  5401  01080C  EC50  F0E2         	call	_StartTimer	;wreg free
  5402  010810                     l14172:
  5403                           
  5404                           ;main.c: 356:   if (TimerDone(TMR_DISPLAY)) {
  5405                           
  5406                           ;main.c: 352:   if (V.ticks) {
  5407  010810  0E0A               	movlw	10
  5408  010812  6EE6               	movwf	postinc1,c
  5409  010814  ECBF  F0E4         	call	_TimerDone	;wreg free
  5410  010818  5001               	movf	btemp^0,w,c
  5411  01081A  B4D8               	btfsc	status,2,c
  5412  01081C  EFB4  F088         	goto	l14256
  5413                           
  5414                           ;main.c: 357:    if (TimerDone(TMR_HELPDIS)) {
  5415  010820  0E09               	movlw	9
  5416  010822  6EE6               	movwf	postinc1,c
  5417  010824  ECBF  F0E4         	call	_TimerDone	;wreg free
  5418  010828  5001               	movf	btemp^0,w,c
  5419  01082A  B4D8               	btfsc	status,2,c
  5420  01082C  D004               	goto	l14180
  5421                           
  5422                           ;main.c: 358:     set_display_info(DIS_STR);
  5423  01082E  0E00               	movlw	0
  5424  010830  6EE6               	movwf	postinc1,c
  5425  010832  ECC4  F0E6         	call	_set_display_info	;wreg free
  5426  010836                     l14180:
  5427                           
  5428                           ;main.c: 360:    calc_model_data();
  5429  010836  EC18  F0B1         	call	_calc_model_data	;wreg free
  5430                           
  5431                           ; BSR set to: 57
  5432                           ;main.c: 367:     hid_display(&H);
  5433                           
  5434                           ;main.c: 362:    if (0) {
  5435  01083A  0EC7               	movlw	low _H
  5436  01083C  6EE6               	movwf	postinc1,c
  5437  01083E  0E01               	movlw	high _H
  5438  010840  6EE6               	movwf	postinc1,c
  5439  010842  EC15  F0C4         	call	_hid_display	;wreg free
  5440                           
  5441                           ;main.c: 368:     switch (H.hid_display) {
  5442  010846  EF4A  F088         	goto	l14228
  5443  01084A                     l1371:
  5444                           
  5445                           ; BSR set to: 1
  5446                           ;main.c: 370:      V.calib = 0;
  5447  01084A  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5448                           
  5449                           ; BSR set to: 1
  5450                           ;main.c: 371:      sprintf(get_vterm_ptr(0, 0), "PV %c PWR %3.2f      ", (C.day) ? 'D' :
      +                           ' ', C.p_pv);
  5451  01084C  EE22  F021         	lfsr	2,_C+290	;volatile
  5452  010850  50DF               	movf	indf2,w,c
  5453  010852  A4D8               	btfss	status,2,c
  5454  010854  D002               	goto	l14190
  5455                           
  5456                           ; BSR set to: 1
  5457  010856  0E20               	movlw	32
  5458  010858  D001               	goto	L1
  5459  01085A                     l14190:
  5460                           
  5461                           ; BSR set to: 1
  5462  01085A  0E44               	movlw	68
  5463  01085C                     L1:
  5464  01085C  6E0B               	movwf	(btemp+10)^0,c
  5465  01085E  0E00               	movlw	0
  5466  010860  6E0C               	movwf	(btemp+11)^0,c
  5467                           
  5468                           ;stkvar	_main$3803 @ sp[(-17)+2]
  5469  010862  0EF1               	movlw	-15
  5470  010864  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5471  01086A  0EF2               	movlw	-14
  5472  01086C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5473                           
  5474                           ; BSR set to: 1
  5475  010872  EE21  F37B         	lfsr	2,_C+124	;volatile
  5476  010876  006F FF7B FFE6     	movff	postinc2,postinc1
  5477  01087C  006F FF7B FFE6     	movff	postinc2,postinc1
  5478  010882  006F FF7B FFE6     	movff	postinc2,postinc1
  5479  010888  006F FF7B FFE6     	movff	postinc2,postinc1
  5480                           
  5481                           ;stkvar	_main$3803 @ sp[(-21)+2]
  5482  01088E  0EED               	movlw	-19
  5483  010890  006F FF8F FFE6     	movff	plusw1,postinc1
  5484  010896  006F FF8F FFE6     	movff	plusw1,postinc1
  5485  01089C  0E36               	movlw	low STR_25
  5486  01089E  6EE6               	movwf	postinc1,c
  5487  0108A0  0EFD               	movlw	high STR_25
  5488  0108A2  6EE6               	movwf	postinc1,c
  5489  0108A4  0E00               	movlw	0
  5490  0108A6  6EE6               	movwf	postinc1,c
  5491  0108A8  0E00               	movlw	0
  5492  0108AA  6EE6               	movwf	postinc1,c
  5493  0108AC  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5494  0108B0  0060  F007  FFE6   	movff	btemp,postinc1
  5495  0108B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5496  0108BC  0E0A               	movlw	10
  5497  0108BE  6EE6               	movwf	postinc1,c
  5498  0108C0  EC1C  F0D3         	call	_sprintf	;wreg free
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;main.c: 372:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f       ", C.p_load);
  5502  0108C4  EE21  F373         	lfsr	2,_C+116	;volatile
  5503  0108C8  006F FF7B FFE6     	movff	postinc2,postinc1
  5504  0108CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5505  0108D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5506  0108DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5507  0108E0  0E20               	movlw	low STR_26
  5508  0108E2  6EE6               	movwf	postinc1,c
  5509  0108E4  0EFD               	movlw	high STR_26
  5510  0108E6  6EE6               	movwf	postinc1,c
  5511  0108E8  0E00               	movlw	0
  5512  0108EA  6EE6               	movwf	postinc1,c
  5513  0108EC  0E01               	movlw	1
  5514  0108EE  6EE6               	movwf	postinc1,c
  5515  0108F0  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5516  0108F4  0060  F007  FFE6   	movff	btemp,postinc1
  5517  0108FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5518  010900  0E08               	movlw	8
  5519  010902  6EE6               	movwf	postinc1,c
  5520  010904  EC1C  F0D3         	call	_sprintf	;wreg free
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;main.c: 373:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f       ", C.p_inverter);
  5524  010908  EE21  F377         	lfsr	2,_C+120	;volatile
  5525  01090C  006F FF7B FFE6     	movff	postinc2,postinc1
  5526  010912  006F FF7B FFE6     	movff	postinc2,postinc1
  5527  010918  006F FF7B FFE6     	movff	postinc2,postinc1
  5528  01091E  006F FF7B FFE6     	movff	postinc2,postinc1
  5529  010924  0E0A               	movlw	low STR_27
  5530  010926  6EE6               	movwf	postinc1,c
  5531  010928  0EFD               	movlw	high STR_27
  5532  01092A  6EE6               	movwf	postinc1,c
  5533  01092C  0E00               	movlw	0
  5534  01092E  6EE6               	movwf	postinc1,c
  5535  010930  0E02               	movlw	2
  5536  010932  6EE6               	movwf	postinc1,c
  5537  010934  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5538  010938  0060  F007  FFE6   	movff	btemp,postinc1
  5539  01093E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5540  010944  0E08               	movlw	8
  5541  010946  6EE6               	movwf	postinc1,c
  5542  010948  EC1C  F0D3         	call	_sprintf	;wreg free
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;main.c: 375:      sprintf(get_vterm_ptr(0, 1), "PV %c WH %3.2f       ", (C.day) ? 'D' :
      +                           ' ', C.pvkw);
  5546  01094C  EE22  F021         	lfsr	2,_C+290	;volatile
  5547  010950  50DF               	movf	indf2,w,c
  5548  010952  A4D8               	btfss	status,2,c
  5549  010954  D002               	goto	l14202
  5550                           
  5551                           ; BSR set to: 0
  5552  010956  0E20               	movlw	32
  5553  010958  D001               	goto	L2
  5554  01095A                     l14202:
  5555                           
  5556                           ; BSR set to: 0
  5557  01095A  0E44               	movlw	68
  5558  01095C                     L2:
  5559  01095C  6E0B               	movwf	(btemp+10)^0,c
  5560  01095E  0E00               	movlw	0
  5561  010960  6E0C               	movwf	(btemp+11)^0,c
  5562                           
  5563                           ;stkvar	_main$3807 @ sp[(-17)+0]
  5564  010962  0EEF               	movlw	-17
  5565  010964  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5566  01096A  0EF0               	movlw	-16
  5567  01096C  0060  F033  FFE3   	movff	btemp+11,plusw1
  5568                           
  5569                           ; BSR set to: 0
  5570  010972  EE21  F3A7         	lfsr	2,_C+168	;volatile
  5571  010976  006F FF7B FFE6     	movff	postinc2,postinc1
  5572  01097C  006F FF7B FFE6     	movff	postinc2,postinc1
  5573  010982  006F FF7B FFE6     	movff	postinc2,postinc1
  5574  010988  006F FF7B FFE6     	movff	postinc2,postinc1
  5575                           
  5576                           ;stkvar	_main$3807 @ sp[(-21)+0]
  5577  01098E  0EEB               	movlw	-21
  5578  010990  006F FF8F FFE6     	movff	plusw1,postinc1
  5579  010996  006F FF8F FFE6     	movff	plusw1,postinc1
  5580  01099C  0EF4               	movlw	low STR_28
  5581  01099E  6EE6               	movwf	postinc1,c
  5582  0109A0  0EFC               	movlw	high STR_28
  5583  0109A2  6EE6               	movwf	postinc1,c
  5584  0109A4  0E01               	movlw	1
  5585  0109A6  6EE6               	movwf	postinc1,c
  5586  0109A8  0E00               	movlw	0
  5587  0109AA  6EE6               	movwf	postinc1,c
  5588  0109AC  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5589  0109B0  0060  F007  FFE6   	movff	btemp,postinc1
  5590  0109B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5591  0109BC  0E0A               	movlw	10
  5592  0109BE  6EE6               	movwf	postinc1,c
  5593  0109C0  EC1C  F0D3         	call	_sprintf	;wreg free
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;main.c: 376:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f        ", C.loadkw);
  5597  0109C4  EE21  F3AF         	lfsr	2,_C+176	;volatile
  5598  0109C8  006F FF7B FFE6     	movff	postinc2,postinc1
  5599  0109CE  006F FF7B FFE6     	movff	postinc2,postinc1
  5600  0109D4  006F FF7B FFE6     	movff	postinc2,postinc1
  5601  0109DA  006F FF7B FFE6     	movff	postinc2,postinc1
  5602  0109E0  0EDE               	movlw	low STR_29
  5603  0109E2  6EE6               	movwf	postinc1,c
  5604  0109E4  0EFC               	movlw	high STR_29
  5605  0109E6  6EE6               	movwf	postinc1,c
  5606  0109E8  0E01               	movlw	1
  5607  0109EA  6EE6               	movwf	postinc1,c
  5608  0109EC  0E01               	movlw	1
  5609  0109EE  6EE6               	movwf	postinc1,c
  5610  0109F0  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5611  0109F4  0060  F007  FFE6   	movff	btemp,postinc1
  5612  0109FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5613  010A00  0E08               	movlw	8
  5614  010A02  6EE6               	movwf	postinc1,c
  5615  010A04  EC1C  F0D3         	call	_sprintf	;wreg free
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;main.c: 377:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f        ", C.invkw);
  5619  010A08  EE21  F3AB         	lfsr	2,_C+172	;volatile
  5620  010A0C  006F FF7B FFE6     	movff	postinc2,postinc1
  5621  010A12  006F FF7B FFE6     	movff	postinc2,postinc1
  5622  010A18  006F FF7B FFE6     	movff	postinc2,postinc1
  5623  010A1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5624  010A24  0EC8               	movlw	low STR_30
  5625  010A26  6EE6               	movwf	postinc1,c
  5626  010A28  0EFC               	movlw	high STR_30
  5627  010A2A  6EE6               	movwf	postinc1,c
  5628  010A2C  0E01               	movlw	1
  5629  010A2E  6EE6               	movwf	postinc1,c
  5630  010A30  0E02               	movlw	2
  5631  010A32  6EE6               	movwf	postinc1,c
  5632  010A34  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5633  010A38  0060  F007  FFE6   	movff	btemp,postinc1
  5634  010A3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5635  010A44  0E08               	movlw	8
  5636  010A46  6EE6               	movwf	postinc1,c
  5637  010A48  EC1C  F0D3         	call	_sprintf	;wreg free
  5638                           
  5639                           ;main.c: 378:      break;
  5640  010A4C  D339               	goto	l14230
  5641  010A4E                     l1381:
  5642                           
  5643                           ; BSR set to: 1
  5644                           ;main.c: 380:      V.calib = 0;
  5645  010A4E  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5646                           
  5647                           ; BSR set to: 1
  5648                           ;main.c: 381:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f    ", C.calc[V_PV], C
      +                          .calc[C_PV]);
  5649  010A50  EE21  F303         	lfsr	2,_C+4	;volatile
  5650  010A54  006F FF7B FFE6     	movff	postinc2,postinc1
  5651  010A5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5652  010A60  006F FF7B FFE6     	movff	postinc2,postinc1
  5653  010A66  006F FF7B FFE6     	movff	postinc2,postinc1
  5654  010A6C  EE21  F313         	lfsr	2,_C+20	;volatile
  5655  010A70  006F FF7B FFE6     	movff	postinc2,postinc1
  5656  010A76  006F FF7B FFE6     	movff	postinc2,postinc1
  5657  010A7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5658  010A82  006F FF7B FFE6     	movff	postinc2,postinc1
  5659  010A88  0E8E               	movlw	low STR_31
  5660  010A8A  6EE6               	movwf	postinc1,c
  5661  010A8C  0EFD               	movlw	high STR_31
  5662  010A8E  6EE6               	movwf	postinc1,c
  5663  010A90  0E00               	movlw	0
  5664  010A92  6EE6               	movwf	postinc1,c
  5665  010A94  0E00               	movlw	0
  5666  010A96  6EE6               	movwf	postinc1,c
  5667  010A98  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5668  010A9C  0060  F007  FFE6   	movff	btemp,postinc1
  5669  010AA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5670  010AA8  0E0C               	movlw	12
  5671  010AAA  6EE6               	movwf	postinc1,c
  5672  010AAC  EC1C  F0D3         	call	_sprintf	;wreg free
  5673                           
  5674                           ;main.c: 382:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f    ", C.calc[V_BAT], 
      +                          C.calc[C_BATT]);
  5675  010AB0  EE21  F2FF         	lfsr	2,_C
  5676  010AB4  006F FF7B FFE6     	movff	postinc2,postinc1
  5677  010ABA  006F FF7B FFE6     	movff	postinc2,postinc1
  5678  010AC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5679  010AC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5680  010ACC  EE21  F30F         	lfsr	2,_C+16	;volatile
  5681  010AD0  006F FF7B FFE6     	movff	postinc2,postinc1
  5682  010AD6  006F FF7B FFE6     	movff	postinc2,postinc1
  5683  010ADC  006F FF7B FFE6     	movff	postinc2,postinc1
  5684  010AE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5685  010AE8  0E62               	movlw	low STR_32
  5686  010AEA  6EE6               	movwf	postinc1,c
  5687  010AEC  0EFD               	movlw	high STR_32
  5688  010AEE  6EE6               	movwf	postinc1,c
  5689  010AF0  0E00               	movlw	0
  5690  010AF2  6EE6               	movwf	postinc1,c
  5691  010AF4  0E01               	movlw	1
  5692  010AF6  6EE6               	movwf	postinc1,c
  5693  010AF8  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5694  010AFC  0060  F007  FFE6   	movff	btemp,postinc1
  5695  010B02  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5696  010B08  0E0C               	movlw	12
  5697  010B0A  6EE6               	movwf	postinc1,c
  5698  010B0C  EC1C  F0D3         	call	_sprintf	;wreg free
  5699                           
  5700                           ;main.c: 383:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f    ", C.calc[V_CC], C
      +                          .c_load);
  5701  010B10  EE21  F33F         	lfsr	2,_C+64	;volatile
  5702  010B14  006F FF7B FFE6     	movff	postinc2,postinc1
  5703  010B1A  006F FF7B FFE6     	movff	postinc2,postinc1
  5704  010B20  006F FF7B FFE6     	movff	postinc2,postinc1
  5705  010B26  006F FF7B FFE6     	movff	postinc2,postinc1
  5706  010B2C  EE21  F307         	lfsr	2,_C+8	;volatile
  5707  010B30  006F FF7B FFE6     	movff	postinc2,postinc1
  5708  010B36  006F FF7B FFE6     	movff	postinc2,postinc1
  5709  010B3C  006F FF7B FFE6     	movff	postinc2,postinc1
  5710  010B42  006F FF7B FFE6     	movff	postinc2,postinc1
  5711  010B48  0E78               	movlw	low STR_33
  5712  010B4A  6EE6               	movwf	postinc1,c
  5713  010B4C  0EFD               	movlw	high STR_33
  5714  010B4E  6EE6               	movwf	postinc1,c
  5715  010B50  0E00               	movlw	0
  5716  010B52  6EE6               	movwf	postinc1,c
  5717  010B54  0E02               	movlw	2
  5718  010B56  6EE6               	movwf	postinc1,c
  5719  010B58  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5720  010B5C  0060  F007  FFE6   	movff	btemp,postinc1
  5721  010B62  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5722  010B68  0E0C               	movlw	12
  5723  010B6A  6EE6               	movwf	postinc1,c
  5724  010B6C  EC1C  F0D3         	call	_sprintf	;wreg free
  5725                           
  5726                           ;main.c: 385:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f        ", C.bkwi);
  5727  010B70  EE21  F39F         	lfsr	2,_C+160	;volatile
  5728  010B74  006F FF7B FFE6     	movff	postinc2,postinc1
  5729  010B7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5730  010B80  006F FF7B FFE6     	movff	postinc2,postinc1
  5731  010B86  006F FF7B FFE6     	movff	postinc2,postinc1
  5732  010B8C  0E86               	movlw	low STR_34
  5733  010B8E  6EE6               	movwf	postinc1,c
  5734  010B90  0EFC               	movlw	high STR_34
  5735  010B92  6EE6               	movwf	postinc1,c
  5736  010B94  0E01               	movlw	1
  5737  010B96  6EE6               	movwf	postinc1,c
  5738  010B98  0E00               	movlw	0
  5739  010B9A  6EE6               	movwf	postinc1,c
  5740  010B9C  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5741  010BA0  0060  F007  FFE6   	movff	btemp,postinc1
  5742  010BA6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5743  010BAC  0E08               	movlw	8
  5744  010BAE  6EE6               	movwf	postinc1,c
  5745  010BB0  EC1C  F0D3         	call	_sprintf	;wreg free
  5746                           
  5747                           ;main.c: 386:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f        ", C.bkwo);
  5748  010BB4  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5749  010BB8  006F FF7B FFE6     	movff	postinc2,postinc1
  5750  010BBE  006F FF7B FFE6     	movff	postinc2,postinc1
  5751  010BC4  006F FF7B FFE6     	movff	postinc2,postinc1
  5752  010BCA  006F FF7B FFE6     	movff	postinc2,postinc1
  5753  010BD0  0E9C               	movlw	low STR_35
  5754  010BD2  6EE6               	movwf	postinc1,c
  5755  010BD4  0EFC               	movlw	high STR_35
  5756  010BD6  6EE6               	movwf	postinc1,c
  5757  010BD8  0E01               	movlw	1
  5758  010BDA  6EE6               	movwf	postinc1,c
  5759  010BDC  0E01               	movlw	1
  5760  010BDE  6EE6               	movwf	postinc1,c
  5761  010BE0  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5762  010BE4  0060  F007  FFE6   	movff	btemp,postinc1
  5763  010BEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5764  010BF0  0E08               	movlw	8
  5765  010BF2  6EE6               	movwf	postinc1,c
  5766  010BF4  EC1C  F0D3         	call	_sprintf	;wreg free
  5767                           
  5768                           ;main.c: 387:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f        ", C.bkwi + C.bkwo
      +                          );
  5769  010BF8  EE21  F3A3         	lfsr	2,_C+164	;volatile
  5770  010BFC  006F FF7B FFE6     	movff	postinc2,postinc1
  5771  010C02  006F FF7B FFE6     	movff	postinc2,postinc1
  5772  010C08  006F FF7B FFE6     	movff	postinc2,postinc1
  5773  010C0E  006F FF7B FFE6     	movff	postinc2,postinc1
  5774  010C14  EE21  F39F         	lfsr	2,_C+160	;volatile
  5775  010C18  006F FF7B FFE6     	movff	postinc2,postinc1
  5776  010C1E  006F FF7B FFE6     	movff	postinc2,postinc1
  5777  010C24  006F FF7B FFE6     	movff	postinc2,postinc1
  5778  010C2A  006F FF7B FFE6     	movff	postinc2,postinc1
  5779  010C30  EC83  F0A3         	call	___fladd	;wreg free
  5780  010C34  0060  F007  FFE6   	movff	btemp,postinc1
  5781  010C3A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5782  010C40  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5783  010C46  0060  F013  FFE6   	movff	btemp+3,postinc1
  5784  010C4C  0EB2               	movlw	low STR_36
  5785  010C4E  6EE6               	movwf	postinc1,c
  5786  010C50  0EFC               	movlw	high STR_36
  5787  010C52  6EE6               	movwf	postinc1,c
  5788  010C54  0E01               	movlw	1
  5789  010C56  6EE6               	movwf	postinc1,c
  5790  010C58  0E02               	movlw	2
  5791  010C5A  6EE6               	movwf	postinc1,c
  5792  010C5C  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5793  010C60  0060  F007  FFE6   	movff	btemp,postinc1
  5794  010C66  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5795  010C6C  0E08               	movlw	8
  5796  010C6E  6EE6               	movwf	postinc1,c
  5797  010C70  EC1C  F0D3         	call	_sprintf	;wreg free
  5798                           
  5799                           ;main.c: 388:      break;
  5800  010C74  D225               	goto	l14230
  5801  010C76                     l1382:
  5802                           
  5803                           ; BSR set to: 1
  5804                           ;main.c: 390:      V.calib = 0;
  5805  010C76  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5806                           
  5807                           ; BSR set to: 1
  5808                           ;main.c: 391:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f        ", C.p_bat);
  5809  010C78  EE21  F37F         	lfsr	2,_C+128	;volatile
  5810  010C7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5811  010C82  006F FF7B FFE6     	movff	postinc2,postinc1
  5812  010C88  006F FF7B FFE6     	movff	postinc2,postinc1
  5813  010C8E  006F FF7B FFE6     	movff	postinc2,postinc1
  5814  010C94  0EE8               	movlw	low STR_37
  5815  010C96  6EE6               	movwf	postinc1,c
  5816  010C98  0EFB               	movlw	high STR_37
  5817  010C9A  6EE6               	movwf	postinc1,c
  5818  010C9C  0E00               	movlw	0
  5819  010C9E  6EE6               	movwf	postinc1,c
  5820  010CA0  0E00               	movlw	0
  5821  010CA2  6EE6               	movwf	postinc1,c
  5822  010CA4  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5823  010CA8  0060  F007  FFE6   	movff	btemp,postinc1
  5824  010CAE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5825  010CB4  0E08               	movlw	8
  5826  010CB6  6EE6               	movwf	postinc1,c
  5827  010CB8  EC1C  F0D3         	call	_sprintf	;wreg free
  5828                           
  5829                           ;main.c: 392:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f      ", C.dynamic_ah, 
      +                          C.pv_ah);
  5830  010CBC  EE21  F393         	lfsr	2,_C+148	;volatile
  5831  010CC0  006F FF7B FFE6     	movff	postinc2,postinc1
  5832  010CC6  006F FF7B FFE6     	movff	postinc2,postinc1
  5833  010CCC  006F FF7B FFE6     	movff	postinc2,postinc1
  5834  010CD2  006F FF7B FFE6     	movff	postinc2,postinc1
  5835  010CD8  EE21  F38F         	lfsr	2,_C+144	;volatile
  5836  010CDC  006F FF7B FFE6     	movff	postinc2,postinc1
  5837  010CE2  006F FF7B FFE6     	movff	postinc2,postinc1
  5838  010CE8  006F FF7B FFE6     	movff	postinc2,postinc1
  5839  010CEE  006F FF7B FFE6     	movff	postinc2,postinc1
  5840  010CF4  0E2D               	movlw	low STR_38
  5841  010CF6  6EE6               	movwf	postinc1,c
  5842  010CF8  0EFC               	movlw	high STR_38
  5843  010CFA  6EE6               	movwf	postinc1,c
  5844  010CFC  0E00               	movlw	0
  5845  010CFE  6EE6               	movwf	postinc1,c
  5846  010D00  0E01               	movlw	1
  5847  010D02  6EE6               	movwf	postinc1,c
  5848  010D04  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5849  010D08  0060  F007  FFE6   	movff	btemp,postinc1
  5850  010D0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5851  010D14  0E0C               	movlw	12
  5852  010D16  6EE6               	movwf	postinc1,c
  5853  010D18  EC1C  F0D3         	call	_sprintf	;wreg free
  5854                           
  5855                           ;main.c: 393:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d V%2.2f       ", spinners
      +                          (5, 0), C.soc, C.runtime, C.calc[V_BAT]);
  5856  010D1C  EE21  F30F         	lfsr	2,_C+16	;volatile
  5857  010D20  006F FF7B FFE6     	movff	postinc2,postinc1
  5858  010D26  006F FF7B FFE6     	movff	postinc2,postinc1
  5859  010D2C  006F FF7B FFE6     	movff	postinc2,postinc1
  5860  010D32  006F FF7B FFE6     	movff	postinc2,postinc1
  5861  010D38  EE21  F3B3         	lfsr	2,_C+180	;volatile
  5862  010D3C  006F FF78  F00B    	movff	postinc2,btemp+10
  5863  010D42  006F FF74  F00C    	movff	postdec2,btemp+11
  5864  010D48  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5865  010D4E  0060  F033  FFE6   	movff	btemp+11,postinc1
  5866  010D54  EE21  F3B5         	lfsr	2,_C+182	;volatile
  5867  010D58  006F FF78  F00B    	movff	postinc2,btemp+10
  5868  010D5E  006F FF74  F00C    	movff	postdec2,btemp+11
  5869  010D64  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5870  010D6A  0060  F033  FFE6   	movff	btemp+11,postinc1
  5871  010D70  0E00               	movlw	0
  5872  010D72  6EE6               	movwf	postinc1,c
  5873  010D74  0E05               	movlw	5
  5874  010D76  6EE6               	movwf	postinc1,c
  5875  010D78  ECA1  F0D3         	call	_spinners	;wreg free
  5876  010D7C  5001               	movf	btemp^0,w,c
  5877  010D7E  6EE6               	movwf	postinc1,c
  5878  010D80  0E00               	movlw	0
  5879  010D82  6EE6               	movwf	postinc1,c
  5880  010D84  0E4E               	movlw	low STR_39
  5881  010D86  6EE6               	movwf	postinc1,c
  5882  010D88  0EFB               	movlw	high STR_39
  5883  010D8A  6EE6               	movwf	postinc1,c
  5884  010D8C  0E00               	movlw	0
  5885  010D8E  6EE6               	movwf	postinc1,c
  5886  010D90  0E02               	movlw	2
  5887  010D92  6EE6               	movwf	postinc1,c
  5888  010D94  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5889  010D98  0060  F007  FFE6   	movff	btemp,postinc1
  5890  010D9E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5891  010DA4  0E0E               	movlw	14
  5892  010DA6  6EE6               	movwf	postinc1,c
  5893  010DA8  EC1C  F0D3         	call	_sprintf	;wreg free
  5894                           
  5895                           ;main.c: 395:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f            ", C.esr);
  5896  010DAC  EE21  F387         	lfsr	2,_C+136	;volatile
  5897  010DB0  006F FF7B FFE6     	movff	postinc2,postinc1
  5898  010DB6  006F FF7B FFE6     	movff	postinc2,postinc1
  5899  010DBC  006F FF7B FFE6     	movff	postinc2,postinc1
  5900  010DC2  006F FF7B FFE6     	movff	postinc2,postinc1
  5901  010DC8  0ED1               	movlw	low STR_40
  5902  010DCA  6EE6               	movwf	postinc1,c
  5903  010DCC  0EFB               	movlw	high STR_40
  5904  010DCE  6EE6               	movwf	postinc1,c
  5905  010DD0  0E01               	movlw	1
  5906  010DD2  6EE6               	movwf	postinc1,c
  5907  010DD4  0E00               	movlw	0
  5908  010DD6  6EE6               	movwf	postinc1,c
  5909  010DD8  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5910  010DDC  0060  F007  FFE6   	movff	btemp,postinc1
  5911  010DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5912  010DE8  0E08               	movlw	8
  5913  010DEA  6EE6               	movwf	postinc1,c
  5914  010DEC  EC1C  F0D3         	call	_sprintf	;wreg free
  5915                           
  5916                           ;main.c: 396:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f        ", C.bv_one_load,
      +                           C.load_i1);
  5917  010DF0  EE22  F00D         	lfsr	2,_C+270	;volatile
  5918  010DF4  006F FF7B FFE6     	movff	postinc2,postinc1
  5919  010DFA  006F FF7B FFE6     	movff	postinc2,postinc1
  5920  010E00  006F FF7B FFE6     	movff	postinc2,postinc1
  5921  010E06  006F FF7B FFE6     	movff	postinc2,postinc1
  5922  010E0C  EE22  F019         	lfsr	2,_C+282	;volatile
  5923  010E10  006F FF7B FFE6     	movff	postinc2,postinc1
  5924  010E16  006F FF7B FFE6     	movff	postinc2,postinc1
  5925  010E1C  006F FF7B FFE6     	movff	postinc2,postinc1
  5926  010E22  006F FF7B FFE6     	movff	postinc2,postinc1
  5927  010E28  0EFF               	movlw	low STR_41
  5928  010E2A  6EE6               	movwf	postinc1,c
  5929  010E2C  0EFB               	movlw	high STR_41
  5930  010E2E  6EE6               	movwf	postinc1,c
  5931  010E30  0E01               	movlw	1
  5932  010E32  6EE6               	movwf	postinc1,c
  5933  010E34  0E01               	movlw	1
  5934  010E36  6EE6               	movwf	postinc1,c
  5935  010E38  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5936  010E3C  0060  F007  FFE6   	movff	btemp,postinc1
  5937  010E42  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5938  010E48  0E0C               	movlw	12
  5939  010E4A  6EE6               	movwf	postinc1,c
  5940  010E4C  EC1C  F0D3         	call	_sprintf	;wreg free
  5941                           
  5942                           ;main.c: 397:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f        ", C.bv_full_load
      +                          , C.load_i2);
  5943  010E50  EE22  F011         	lfsr	2,_C+274	;volatile
  5944  010E54  006F FF7B FFE6     	movff	postinc2,postinc1
  5945  010E5A  006F FF7B FFE6     	movff	postinc2,postinc1
  5946  010E60  006F FF7B FFE6     	movff	postinc2,postinc1
  5947  010E66  006F FF7B FFE6     	movff	postinc2,postinc1
  5948  010E6C  EE22  F01D         	lfsr	2,_C+286	;volatile
  5949  010E70  006F FF7B FFE6     	movff	postinc2,postinc1
  5950  010E76  006F FF7B FFE6     	movff	postinc2,postinc1
  5951  010E7C  006F FF7B FFE6     	movff	postinc2,postinc1
  5952  010E82  006F FF7B FFE6     	movff	postinc2,postinc1
  5953  010E88  0E16               	movlw	low STR_42
  5954  010E8A  6EE6               	movwf	postinc1,c
  5955  010E8C  0EFC               	movlw	high STR_42
  5956  010E8E  6EE6               	movwf	postinc1,c
  5957  010E90  0E01               	movlw	1
  5958  010E92  6EE6               	movwf	postinc1,c
  5959  010E94  0E02               	movlw	2
  5960  010E96  6EE6               	movwf	postinc1,c
  5961  010E98  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  5962  010E9C  0060  F007  FFE6   	movff	btemp,postinc1
  5963  010EA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5964  010EA8  0E0C               	movlw	12
  5965  010EAA  6EE6               	movwf	postinc1,c
  5966  010EAC  EC1C  F0D3         	call	_sprintf	;wreg free
  5967                           
  5968                           ;main.c: 398:      break;
  5969  010EB0  D107               	goto	l14230
  5970  010EB2                     l14214:
  5971                           
  5972                           ; BSR set to: 1
  5973                           ;main.c: 400:      if (!V.calib) {
  5974  010EB2  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5975  010EB4  A4D8               	btfss	status,2,c
  5976  010EB6  D02D               	goto	l14218
  5977                           
  5978                           ; BSR set to: 1
  5979                           ;main.c: 401:       lp_filter(0.0, i, -1);
  5980  010EB8  0EFF               	movlw	255
  5981  010EBA  6EE6               	movwf	postinc1,c
  5982                           
  5983                           ;stkvar	_i @ sp[(-18)+14]
  5984  010EBC  0EFC               	movlw	-4
  5985  010EBE  50E3               	movf	plusw1,w,c
  5986  010EC0  6EE6               	movwf	postinc1,c
  5987  010EC2  0E00               	movlw	0
  5988  010EC4  6EE6               	movwf	postinc1,c
  5989  010EC6  0E00               	movlw	0
  5990  010EC8  6EE6               	movwf	postinc1,c
  5991  010ECA  0E00               	movlw	0
  5992  010ECC  6EE6               	movwf	postinc1,c
  5993  010ECE  0E00               	movlw	0
  5994  010ED0  6EE6               	movwf	postinc1,c
  5995  010ED2  EC2E  F0C7         	call	_lp_filter	;wreg free
  5996                           
  5997                           ;main.c: 402:       lp_filter(0.0, j, -1);
  5998  010ED6  0EFF               	movlw	255
  5999  010ED8  6EE6               	movwf	postinc1,c
  6000                           
  6001                           ;stkvar	_j @ sp[(-18)+13]
  6002  010EDA  0EFB               	movlw	-5
  6003  010EDC  50E3               	movf	plusw1,w,c
  6004  010EDE  6EE6               	movwf	postinc1,c
  6005  010EE0  0E00               	movlw	0
  6006  010EE2  6EE6               	movwf	postinc1,c
  6007  010EE4  0E00               	movlw	0
  6008  010EE6  6EE6               	movwf	postinc1,c
  6009  010EE8  0E00               	movlw	0
  6010  010EEA  6EE6               	movwf	postinc1,c
  6011  010EEC  0E00               	movlw	0
  6012  010EEE  6EE6               	movwf	postinc1,c
  6013  010EF0  EC2E  F0C7         	call	_lp_filter	;wreg free
  6014                           
  6015                           ;main.c: 403:       lp_filter(0.0, k, -1);
  6016  010EF4  0EFF               	movlw	255
  6017  010EF6  6EE6               	movwf	postinc1,c
  6018                           
  6019                           ;stkvar	_k @ sp[(-18)+12]
  6020  010EF8  0EFA               	movlw	-6
  6021  010EFA  50E3               	movf	plusw1,w,c
  6022  010EFC  6EE6               	movwf	postinc1,c
  6023  010EFE  0E00               	movlw	0
  6024  010F00  6EE6               	movwf	postinc1,c
  6025  010F02  0E00               	movlw	0
  6026  010F04  6EE6               	movwf	postinc1,c
  6027  010F06  0E00               	movlw	0
  6028  010F08  6EE6               	movwf	postinc1,c
  6029  010F0A  0E00               	movlw	0
  6030  010F0C  6EE6               	movwf	postinc1,c
  6031  010F0E  EC2E  F0C7         	call	_lp_filter	;wreg free
  6032  010F12                     l14218:
  6033                           
  6034                           ;main.c: 405:      V.calib = 1;
  6035  010F12  0E01               	movlw	1
  6036  010F14  0101               	movlb	1	; () banked
  6037  010F16  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  6038                           
  6039                           ; BSR set to: 1
  6040                           ;main.c: 406:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          i), C.calc[i], inp_index);
  6041                           ;stkvar	_inp_index @ sp[(-17)+11]
  6042  010F18  0EFA               	movlw	-6
  6043  010F1A  50E3               	movf	plusw1,w,c
  6044  010F1C  6EE6               	movwf	postinc1,c
  6045  010F1E  0E00               	movlw	0
  6046  010F20  6EE6               	movwf	postinc1,c
  6047                           
  6048                           ;stkvar	_i @ sp[(-19)+14]
  6049  010F22  0EFB               	movlw	-5
  6050  010F24  50E3               	movf	plusw1,w,c
  6051  010F26  0D04               	mullw	4
  6052  010F28  0EFF               	movlw	low _C
  6053  010F2A  24F3               	addwf	243,w,c
  6054  010F2C  6ED9               	movwf	fsr2l,c
  6055  010F2E  0E06               	movlw	high _C
  6056  010F30  20F4               	addwfc	prodh,w,c
  6057  010F32  6EDA               	movwf	fsr2h,c
  6058  010F34  006F FF7B FFE6     	movff	postinc2,postinc1
  6059  010F3A  006F FF7B FFE6     	movff	postinc2,postinc1
  6060  010F40  006F FF7B FFE6     	movff	postinc2,postinc1
  6061  010F46  006F FF7B FFE6     	movff	postinc2,postinc1
  6062                           
  6063                           ;stkvar	_i @ sp[(-23)+14]
  6064  010F4C  0EF7               	movlw	-9
  6065  010F4E  50E3               	movf	plusw1,w,c
  6066  010F50  6EE6               	movwf	postinc1,c
  6067  010F52  ECD3  F0E6         	call	_get_raw_result	;wreg free
  6068  010F56  0060  F007  FFE6   	movff	btemp,postinc1
  6069  010F5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6070  010F62  0EA4               	movlw	low STR_43
  6071  010F64  6EE6               	movwf	postinc1,c
  6072  010F66  0EFD               	movlw	high STR_43
  6073  010F68  6EE6               	movwf	postinc1,c
  6074  010F6A  0E00               	movlw	0
  6075  010F6C  6EE6               	movwf	postinc1,c
  6076  010F6E  0E00               	movlw	0
  6077  010F70  6EE6               	movwf	postinc1,c
  6078  010F72  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  6079  010F76  0060  F007  FFE6   	movff	btemp,postinc1
  6080  010F7C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6081  010F82  0E0C               	movlw	12
  6082  010F84  6EE6               	movwf	postinc1,c
  6083  010F86  EC1C  F0D3         	call	_sprintf	;wreg free
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;main.c: 407:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          j), C.calc[j], inp_index + 1);
  6087                           ;stkvar	_inp_index @ sp[(-17)+11]
  6088  010F8A  0EFA               	movlw	-6
  6089  010F8C  50E3               	movf	plusw1,w,c
  6090  010F8E  6E0B               	movwf	(btemp+10)^0,c
  6091  010F90  6A0C               	clrf	(btemp+11)^0,c
  6092  010F92  0E01               	movlw	1
  6093  010F94  260B               	addwf	(btemp+10)^0,f,c
  6094  010F96  0E00               	movlw	0
  6095  010F98  220C               	addwfc	(btemp+11)^0,f,c
  6096  010F9A  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6097  010FA0  0060  F033  FFE6   	movff	btemp+11,postinc1
  6098                           
  6099                           ;stkvar	_j @ sp[(-19)+13]
  6100  010FA6  0EFA               	movlw	-6
  6101  010FA8  50E3               	movf	plusw1,w,c
  6102  010FAA  0D04               	mullw	4
  6103  010FAC  0EFF               	movlw	low _C
  6104  010FAE  24F3               	addwf	243,w,c
  6105  010FB0  6ED9               	movwf	fsr2l,c
  6106  010FB2  0E06               	movlw	high _C
  6107  010FB4  20F4               	addwfc	prodh,w,c
  6108  010FB6  6EDA               	movwf	fsr2h,c
  6109  010FB8  006F FF7B FFE6     	movff	postinc2,postinc1
  6110  010FBE  006F FF7B FFE6     	movff	postinc2,postinc1
  6111  010FC4  006F FF7B FFE6     	movff	postinc2,postinc1
  6112  010FCA  006F FF7B FFE6     	movff	postinc2,postinc1
  6113                           
  6114                           ;stkvar	_j @ sp[(-23)+13]
  6115  010FD0  0EF6               	movlw	-10
  6116  010FD2  50E3               	movf	plusw1,w,c
  6117  010FD4  6EE6               	movwf	postinc1,c
  6118  010FD6  ECD3  F0E6         	call	_get_raw_result	;wreg free
  6119  010FDA  0060  F007  FFE6   	movff	btemp,postinc1
  6120  010FE0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6121  010FE6  0EA4               	movlw	low STR_43
  6122  010FE8  6EE6               	movwf	postinc1,c
  6123  010FEA  0EFD               	movlw	high STR_43
  6124  010FEC  6EE6               	movwf	postinc1,c
  6125  010FEE  0E00               	movlw	0
  6126  010FF0  6EE6               	movwf	postinc1,c
  6127  010FF2  0E01               	movlw	1
  6128  010FF4  6EE6               	movwf	postinc1,c
  6129  010FF6  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  6130  010FFA  0060  F007  FFE6   	movff	btemp,postinc1
  6131  011000  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6132  011006  0E0C               	movlw	12
  6133  011008  6EE6               	movwf	postinc1,c
  6134  01100A  EC1C  F0D3         	call	_sprintf	;wreg free
  6135                           
  6136                           ; BSR set to: 0
  6137                           ;main.c: 408:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d  TRIM   ", get_raw_result(
      +                          k), C.calc[k], inp_index + 2);
  6138                           ;stkvar	_inp_index @ sp[(-17)+11]
  6139  01100E  0EFA               	movlw	-6
  6140  011010  50E3               	movf	plusw1,w,c
  6141  011012  6E0B               	movwf	(btemp+10)^0,c
  6142  011014  6A0C               	clrf	(btemp+11)^0,c
  6143  011016  0E02               	movlw	2
  6144  011018  260B               	addwf	(btemp+10)^0,f,c
  6145  01101A  0E00               	movlw	0
  6146  01101C  220C               	addwfc	(btemp+11)^0,f,c
  6147  01101E  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6148  011024  0060  F033  FFE6   	movff	btemp+11,postinc1
  6149                           
  6150                           ;stkvar	_k @ sp[(-19)+12]
  6151  01102A  0EF9               	movlw	-7
  6152  01102C  50E3               	movf	plusw1,w,c
  6153  01102E  0D04               	mullw	4
  6154  011030  0EFF               	movlw	low _C
  6155  011032  24F3               	addwf	243,w,c
  6156  011034  6ED9               	movwf	fsr2l,c
  6157  011036  0E06               	movlw	high _C
  6158  011038  20F4               	addwfc	prodh,w,c
  6159  01103A  6EDA               	movwf	fsr2h,c
  6160  01103C  006F FF7B FFE6     	movff	postinc2,postinc1
  6161  011042  006F FF7B FFE6     	movff	postinc2,postinc1
  6162  011048  006F FF7B FFE6     	movff	postinc2,postinc1
  6163  01104E  006F FF7B FFE6     	movff	postinc2,postinc1
  6164                           
  6165                           ;stkvar	_k @ sp[(-23)+12]
  6166  011054  0EF5               	movlw	-11
  6167  011056  50E3               	movf	plusw1,w,c
  6168  011058  6EE6               	movwf	postinc1,c
  6169  01105A  ECD3  F0E6         	call	_get_raw_result	;wreg free
  6170  01105E  0060  F007  FFE6   	movff	btemp,postinc1
  6171  011064  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6172  01106A  0EA4               	movlw	low STR_43
  6173  01106C  6EE6               	movwf	postinc1,c
  6174  01106E  0EFD               	movlw	high STR_43
  6175  011070  6EE6               	movwf	postinc1,c
  6176  011072  0E00               	movlw	0
  6177  011074  6EE6               	movwf	postinc1,c
  6178  011076  0E02               	movlw	2
  6179  011078  6EE6               	movwf	postinc1,c
  6180  01107A  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
  6181  01107E  0060  F007  FFE6   	movff	btemp,postinc1
  6182  011084  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6183  01108A  0E0C               	movlw	12
  6184  01108C  6EE6               	movwf	postinc1,c
  6185  01108E  EC1C  F0D3         	call	_sprintf	;wreg free
  6186                           
  6187                           ;main.c: 409:      break;
  6188  011092  D016               	goto	l14230
  6189  011094                     l14228:
  6190  011094  0101               	movlb	1	; () banked
  6191  011096  51C7               	movf	_H& (0+255),w,b
  6192  011098  6E0B               	movwf	(btemp+10)^0,c
  6193  01109A  6A0C               	clrf	(btemp+11)^0,c
  6194                           
  6195                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6196                           ; Switch size 1, requested type "simple"
  6197                           ; Number of cases is 1, Range of values is 0 to 0
  6198                           ; switch strategies available:
  6199                           ; Name         Instructions Cycles
  6200                           ; simple_byte            4     3 (average)
  6201                           ;	Chosen strategy is simple_byte
  6202  01109C  500C               	movf	(btemp+11)^0,w,c
  6203  01109E  0A00               	xorlw	0	; case 0
  6204  0110A0  A4D8               	btfss	status,2,c
  6205  0110A2  D00E               	goto	l14230
  6206                           
  6207                           ; BSR set to: 1
  6208                           ; Switch size 1, requested type "simple"
  6209                           ; Number of cases is 4, Range of values is 0 to 3
  6210                           ; switch strategies available:
  6211                           ; Name         Instructions Cycles
  6212                           ; simple_byte           13     7 (average)
  6213                           ;	Chosen strategy is simple_byte
  6214  0110A4  500B               	movf	(btemp+10)^0,w,c
  6215  0110A6  0A00               	xorlw	0	; case 0
  6216  0110A8  B4D8               	btfsc	status,2,c
  6217  0110AA  D4D1               	goto	l1381
  6218  0110AC  0A01               	xorlw	1	; case 1
  6219  0110AE  B4D8               	btfsc	status,2,c
  6220  0110B0  EF25  F084         	goto	l1371
  6221  0110B4  0A03               	xorlw	3	; case 2
  6222  0110B6  B4D8               	btfsc	status,2,c
  6223  0110B8  D5DE               	goto	l1382
  6224  0110BA  0A01               	xorlw	1	; case 3
  6225  0110BC  B4D8               	btfsc	status,2,c
  6226  0110BE  D6F9               	goto	l14214
  6227  0110C0                     l14230:
  6228                           
  6229                           ;main.c: 413:     clear_hid_pflags(&H);
  6230  0110C0  0EC7               	movlw	low _H
  6231  0110C2  6EE6               	movwf	postinc1,c
  6232  0110C4  0E01               	movlw	high _H
  6233  0110C6  6EE6               	movwf	postinc1,c
  6234  0110C8  EC83  F0DE         	call	_clear_hid_pflags	;wreg free
  6235                           
  6236                           ;main.c: 415:    StartTimer(TMR_DISPLAY, 250);
  6237  0110CC  0EFA               	movlw	250
  6238  0110CE  6EE6               	movwf	postinc1,c
  6239  0110D0  0E00               	movlw	0
  6240  0110D2  6EE6               	movwf	postinc1,c
  6241  0110D4  0E0A               	movlw	10
  6242  0110D6  6EE6               	movwf	postinc1,c
  6243  0110D8  EC50  F0E2         	call	_StartTimer	;wreg free
  6244                           
  6245                           ;main.c: 416:    V.enter = check_enter_button(&H);
  6246  0110DC  0EC7               	movlw	low _H
  6247  0110DE  6EE6               	movwf	postinc1,c
  6248  0110E0  0E01               	movlw	high _H
  6249  0110E2  6EE6               	movwf	postinc1,c
  6250  0110E4  EC77  F0DD         	call	_check_enter_button	;wreg free
  6251  0110E8  5001               	movf	btemp^0,w,c
  6252  0110EA  0101               	movlb	1	; () banked
  6253  0110EC  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  6254                           
  6255                           ; BSR set to: 1
  6256                           ;main.c: 417:    if (V.enter && (H.hid_display != HID_AUX)) {
  6257  0110EE  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6258  0110F0  B4D8               	btfsc	status,2,c
  6259  0110F2  D011               	goto	l14244
  6260                           
  6261                           ; BSR set to: 1
  6262  0110F4  0E03               	movlw	3
  6263  0110F6  19C7               	xorwf	_H& (0+255),w,b
  6264  0110F8  B4D8               	btfsc	status,2,c
  6265  0110FA  D00D               	goto	l14244
  6266                           
  6267                           ; BSR set to: 1
  6268                           ;main.c: 418:     V.enter = 0;
  6269  0110FC  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6270                           
  6271                           ; BSR set to: 1
  6272                           ;main.c: 419:     V.screen = ~V.screen;
  6273  0110FE  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6274  011100  D002               	goto	u13620
  6275  011102  0E01               	movlw	1
  6276  011104  D001               	goto	u13626
  6277  011106                     u13620:
  6278  011106  0E00               	movlw	0
  6279  011108                     u13626:
  6280  011108  0AFF               	xorlw	255
  6281  01110A  6E0C               	movwf	(btemp+11)^0,c
  6282  01110C  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  6283  01110E  180C               	xorwf	(btemp+11)^0,w,c
  6284  011110  0BFE               	andlw	-2
  6285  011112  180C               	xorwf	(btemp+11)^0,w,c
  6286  011114  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  6287  011116                     l14244:
  6288                           
  6289                           ; BSR set to: 1
  6290                           ;main.c: 421:    set_vterm(V.screen);
  6291  011116  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6292  011118  D002               	goto	u13630
  6293  01111A  0E01               	movlw	1
  6294  01111C  D001               	goto	u13636
  6295  01111E                     u13630:
  6296  01111E  0E00               	movlw	0
  6297  011120                     u13636:
  6298  011120  6EE6               	movwf	postinc1,c
  6299  011122  ECB5  F0E6         	call	_set_vterm	;wreg free
  6300                           
  6301                           ;main.c: 422:    update_lcd(V.screen);
  6302  011126  0101               	movlb	1	; () banked
  6303  011128  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  6304  01112A  D002               	goto	u13640
  6305  01112C  0E01               	movlw	1
  6306  01112E  D001               	goto	u13646
  6307  011130                     u13640:
  6308  011130  0E00               	movlw	0
  6309  011132                     u13646:
  6310  011132  6EE6               	movwf	postinc1,c
  6311  011134  EC94  F0D2         	call	_update_lcd	;wreg free
  6312                           
  6313                           ;main.c: 424:    wait_lcd_done();
  6314  011138  EC44  F0E6         	call	_wait_lcd_done	;wreg free
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;main.c: 425:    set_dac_a(3.333);
  6318  01113C  0EDF               	movlw	223
  6319  01113E  6EE6               	movwf	postinc1,c
  6320  011140  0E4F               	movlw	79
  6321  011142  6EE6               	movwf	postinc1,c
  6322  011144  0E55               	movlw	85
  6323  011146  6EE6               	movwf	postinc1,c
  6324  011148  0E40               	movlw	64
  6325  01114A  6EE6               	movwf	postinc1,c
  6326  01114C  EC90  F0E3         	call	_set_dac_a	;wreg free
  6327                           
  6328                           ;main.c: 426:    set_dac_b(6.666);
  6329  011150  0EDF               	movlw	223
  6330  011152  6EE6               	movwf	postinc1,c
  6331  011154  0E4F               	movlw	79
  6332  011156  6EE6               	movwf	postinc1,c
  6333  011158  0ED5               	movlw	213
  6334  01115A  6EE6               	movwf	postinc1,c
  6335  01115C  0E40               	movlw	64
  6336  01115E  6EE6               	movwf	postinc1,c
  6337  011160  EC76  F0E3         	call	_set_dac_b	;wreg free
  6338                           
  6339                           ;main.c: 427:    set_dac();
  6340  011164  EC3D  F0D8         	call	_set_dac	;wreg free
  6341  011168                     l14256:
  6342                           
  6343                           ;main.c: 433:   check_help(V.flipper);
  6344  011168  0101               	movlb	1	; () banked
  6345  01116A  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  6346  01116C  6EE6               	movwf	postinc1,c
  6347  01116E  EC23  F0C5         	call	_check_help	;wreg free
  6348                           
  6349                           ;main.c: 435:   if (V.enter) {
  6350  011172  0101               	movlb	1	; () banked
  6351  011174  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  6352  011176  B4D8               	btfsc	status,2,c
  6353  011178  D062               	goto	l1387
  6354                           
  6355                           ; BSR set to: 1
  6356                           ;main.c: 436:    V.enter = 0;
  6357  01117A  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  6358                           
  6359                           ;main.c: 437:    V.calib = 0;
  6360  01117C  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  6361                           
  6362                           ; BSR set to: 1
  6363                           ;main.c: 438:    inp_index += 3;
  6364                           ;stkvar	_inp_index @ sp[(-17)+11]
  6365  01117E  0EFA               	movlw	-6
  6366  011180  006F FF8C  F001    	movff	plusw1,btemp
  6367  011186  0E03               	movlw	3
  6368  011188  2601               	addwf	btemp^0,f,c
  6369  01118A  0EFA               	movlw	-6
  6370  01118C  0060  F007  FFE3   	movff	btemp,plusw1
  6371                           
  6372                           ;main.c: 439:    if (inp_index > 9)
  6373                           ;stkvar	_inp_index @ sp[(-17)+11]
  6374  011192  0EFA               	movlw	-6
  6375  011194  006F FF8C  F001    	movff	plusw1,btemp
  6376  01119A  0E09               	movlw	9
  6377  01119C  6401               	cpfsgt	btemp^0,c
  6378  01119E  D03A               	goto	l14284
  6379                           
  6380                           ; BSR set to: 1
  6381                           ;main.c: 440:     inp_index = 0;
  6382                           ;stkvar	_inp_index @ sp[(-17)+11]
  6383  0111A0  0EFA               	movlw	-6
  6384  0111A2  6AE3               	clrf	plusw1,c
  6385  0111A4  D037               	goto	l14284
  6386  0111A6                     l14266:
  6387                           
  6388                           ; BSR set to: 1
  6389                           ;main.c: 443:     i = C_BATT;
  6390                           ;stkvar	_i @ sp[(-17)+14]
  6391  0111A6  0EFD               	movlw	-3
  6392  0111A8  6AE3               	clrf	plusw1,c
  6393                           
  6394                           ; BSR set to: 1
  6395                           ;main.c: 444:     j = C_PV;
  6396                           ;stkvar	_j @ sp[(-17)+13]
  6397  0111AA  0EFC               	movlw	-4
  6398  0111AC  6AE3               	clrf	plusw1,c
  6399  0111AE  2AE3               	incf	plusw1,f,c
  6400                           
  6401                           ; BSR set to: 1
  6402                           ;main.c: 445:     k = V_CC;
  6403                           ;stkvar	_k @ sp[(-17)+12]
  6404  0111B0  0EFB               	movlw	-5
  6405  0111B2  6AE3               	clrf	plusw1,c
  6406  0111B4  82E3               	bsf	plusw1,1,c
  6407                           
  6408                           ;main.c: 446:     break;
  6409  0111B6  D043               	goto	l1387
  6410  0111B8                     l14272:
  6411                           
  6412                           ; BSR set to: 1
  6413                           ;main.c: 448:     i = V_BAT;
  6414                           ;stkvar	_i @ sp[(-17)+14]
  6415  0111B8  0EFD               	movlw	-3
  6416  0111BA  6AE3               	clrf	plusw1,c
  6417  0111BC  84E3               	bsf	plusw1,2,c
  6418                           
  6419                           ;main.c: 449:     j = V_PV;
  6420                           ;stkvar	_j @ sp[(-17)+13]
  6421  0111BE  0EFC               	movlw	-4
  6422  0111C0  6AE3               	clrf	plusw1,c
  6423  0111C2  80E3               	bsf	plusw1,0,c
  6424  0111C4  84E3               	bsf	plusw1,2,c	;indir
  6425                           
  6426                           ;main.c: 450:     k = V_CBUS;
  6427                           ;stkvar	_k @ sp[(-17)+12]
  6428  0111C6  0EFB               	movlw	-5
  6429  0111C8  6AE3               	clrf	plusw1,c
  6430  0111CA  82E3               	bsf	plusw1,1,c
  6431  0111CC  84E3               	bsf	plusw1,2,c	;indir
  6432                           
  6433                           ;main.c: 451:     break;
  6434  0111CE  D037               	goto	l1387
  6435  0111D0                     l14274:
  6436                           
  6437                           ; BSR set to: 1
  6438                           ;main.c: 453:     i = V_BBAT;
  6439                           ;stkvar	_i @ sp[(-17)+14]
  6440  0111D0  0EFD               	movlw	-3
  6441  0111D2  6AE3               	clrf	plusw1,c
  6442  0111D4  82E3               	bsf	plusw1,1,c
  6443  0111D6  86E3               	bsf	plusw1,3,c	;indir
  6444                           
  6445                           ; BSR set to: 1
  6446                           ;main.c: 454:     j = V_TEMP;
  6447  0111D8  0E0B               	movlw	11
  6448  0111DA  6E0C               	movwf	(btemp+11)^0,c
  6449                           
  6450                           ;stkvar	_j @ sp[(-17)+13]
  6451  0111DC  0EFC               	movlw	-4
  6452  0111DE  0060  F033  FFE3   	movff	btemp+11,plusw1
  6453                           
  6454                           ; BSR set to: 1
  6455                           ;main.c: 455:     k = V_INVERTER;
  6456                           ;stkvar	_k @ sp[(-17)+12]
  6457  0111E4  0EFB               	movlw	-5
  6458  0111E6  6AE3               	clrf	plusw1,c
  6459  0111E8  84E3               	bsf	plusw1,2,c
  6460  0111EA  86E3               	bsf	plusw1,3,c	;indir
  6461                           
  6462                           ;main.c: 456:     break;
  6463  0111EC  D028               	goto	l1387
  6464  0111EE                     l14280:
  6465                           
  6466                           ; BSR set to: 1
  6467                           ;main.c: 458:     i = V_LIGHT_SENSOR;
  6468  0111EE  0E0D               	movlw	13
  6469  0111F0  6E0C               	movwf	(btemp+11)^0,c
  6470                           
  6471                           ;stkvar	_i @ sp[(-17)+14]
  6472  0111F2  0EFD               	movlw	-3
  6473  0111F4  0060  F033  FFE3   	movff	btemp+11,plusw1
  6474                           
  6475                           ;main.c: 459:     j = V_LIGHT_SENSOR;
  6476  0111FA  0E0D               	movlw	13
  6477  0111FC  6E0C               	movwf	(btemp+11)^0,c
  6478                           
  6479                           ;stkvar	_j @ sp[(-17)+13]
  6480  0111FE  0EFC               	movlw	-4
  6481  011200  0060  F033  FFE3   	movff	btemp+11,plusw1
  6482                           
  6483                           ;main.c: 460:     k = V_LIGHT_SENSOR;
  6484  011206  0E0D               	movlw	13
  6485  011208  6E0C               	movwf	(btemp+11)^0,c
  6486                           
  6487                           ;stkvar	_k @ sp[(-17)+12]
  6488  01120A  0EFB               	movlw	-5
  6489  01120C  0060  F033  FFE3   	movff	btemp+11,plusw1
  6490                           
  6491                           ;main.c: 461:     break;
  6492  011212  D015               	goto	l1387
  6493  011214                     l14284:
  6494                           
  6495                           ; BSR set to: 1
  6496                           ;stkvar	_inp_index @ sp[(-17)+11]
  6497  011214  0EFA               	movlw	-6
  6498  011216  50E3               	movf	plusw1,w,c
  6499  011218  6E0B               	movwf	(btemp+10)^0,c
  6500  01121A  6A0C               	clrf	(btemp+11)^0,c
  6501                           
  6502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6503                           ; Switch size 1, requested type "simple"
  6504                           ; Number of cases is 1, Range of values is 0 to 0
  6505                           ; switch strategies available:
  6506                           ; Name         Instructions Cycles
  6507                           ; simple_byte            4     3 (average)
  6508                           ;	Chosen strategy is simple_byte
  6509  01121C  500C               	movf	(btemp+11)^0,w,c
  6510  01121E  0A00               	xorlw	0	; case 0
  6511  011220  A4D8               	btfss	status,2,c
  6512  011222  D00D               	goto	l1387
  6513                           
  6514                           ; BSR set to: 1
  6515                           ; Switch size 1, requested type "simple"
  6516                           ; Number of cases is 4, Range of values is 0 to 9
  6517                           ; switch strategies available:
  6518                           ; Name         Instructions Cycles
  6519                           ; simple_byte           13     7 (average)
  6520                           ;	Chosen strategy is simple_byte
  6521  011224  500B               	movf	(btemp+10)^0,w,c
  6522  011226  0A00               	xorlw	0	; case 0
  6523  011228  B4D8               	btfsc	status,2,c
  6524  01122A  D7BD               	goto	l14266
  6525  01122C  0A03               	xorlw	3	; case 3
  6526  01122E  B4D8               	btfsc	status,2,c
  6527  011230  D7C3               	goto	l14272
  6528  011232  0A05               	xorlw	5	; case 6
  6529  011234  B4D8               	btfsc	status,2,c
  6530  011236  D7CC               	goto	l14274
  6531  011238  0A0F               	xorlw	15	; case 9
  6532  01123A  B4D8               	btfsc	status,2,c
  6533  01123C  D7D8               	goto	l14280
  6534  01123E                     l1387:
  6535                           
  6536                           ; BSR set to: 1
  6537                           ;main.c: 470:   if (V.set_sequ) {
  6538  01123E  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  6539  011240  EFD7  F083         	goto	l14158
  6540                           
  6541                           ; BSR set to: 1
  6542                           ;main.c: 471:    if (TimerDone(TMR_INFO)) {
  6543  011244  0E07               	movlw	7
  6544  011246  6EE6               	movwf	postinc1,c
  6545  011248  ECBF  F0E4         	call	_TimerDone	;wreg free
  6546  01124C  5001               	movf	btemp^0,w,c
  6547  01124E  B4D8               	btfsc	status,2,c
  6548  011250  D00C               	goto	l14294
  6549                           
  6550                           ;main.c: 472:     V.set_sequ = 0;
  6551  011252  0101               	movlb	1	; () banked
  6552  011254  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  6553                           
  6554                           ; BSR set to: 1
  6555                           ;main.c: 473:     set_vterm(0);
  6556  011256  0E00               	movlw	0
  6557  011258  6EE6               	movwf	postinc1,c
  6558  01125A  ECB5  F0E6         	call	_set_vterm	;wreg free
  6559                           
  6560                           ;main.c: 474:     update_lcd(0);
  6561  01125E  0E00               	movlw	0
  6562  011260  6EE6               	movwf	postinc1,c
  6563  011262  EC94  F0D2         	call	_update_lcd	;wreg free
  6564                           
  6565                           ;main.c: 475:    } else {
  6566  011266  EFD7  F083         	goto	l14158
  6567  01126A                     l14294:
  6568                           
  6569                           ;main.c: 476:     set_vterm(2);
  6570  01126A  0E02               	movlw	2
  6571  01126C  6EE6               	movwf	postinc1,c
  6572  01126E  ECB5  F0E6         	call	_set_vterm	;wreg free
  6573                           
  6574                           ;main.c: 477:     update_lcd(2);
  6575  011272  0E02               	movlw	2
  6576  011274  6EE6               	movwf	postinc1,c
  6577  011276  EC94  F0D2         	call	_update_lcd	;wreg free
  6578  01127A  EFD7  F083         	goto	l14158
  6579  01127E                     __end_of_main:
  6580                           	opt callstack 0
  6581                           
  6582 ;; *************** function _update_cal_data *****************
  6583 ;; Defined at:
  6584 ;;		line 390 in file "daq.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;		None
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;		None
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  1  [STACK] void 
  6591 ;; Registers used:
  6592 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  6593 ;; Tracked objects:
  6594 ;;		On entry : 3F/3
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6602 ;;Total ram usage:        0 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:   15
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		_main
  6609 ;; This function uses a reentrant model
  6610 ;;
  6611                           
  6612                           	psect	text1
  6613  01CE2A                     __ptext1:
  6614                           	opt callstack 0
  6615  01CE2A                     _update_cal_data:
  6616                           	opt callstack 15
  6617                           
  6618                           ;daq.c: 392:  R = r_cal;
  6619                           
  6620                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6621                           ;incstack = 0
  6622  01CE2A  EE20  F3C6         	lfsr	2,_r_cal
  6623  01CE2E  EE00  F0AB         	lfsr	0,_R	;volatile
  6624  01CE32  0E39               	movlw	57
  6625  01CE34                     u10691:
  6626  01CE34  006F FF6F FFEB     	movff	plusw2,plusw0
  6627  01CE3A  06E8               	decf	wreg,f,c
  6628  01CE3C  E2FB               	bc	u10691
  6629                           
  6630                           ; _update_cal_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  6631  01CE3E  0012               	return		;funcret
  6632  01CE40                     __end_of_update_cal_data:
  6633                           	opt callstack 0
  6634                           
  6635 ;; *************** function _static_soc *****************
  6636 ;; Defined at:
  6637 ;;		line 117 in file "mbmc.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;		None
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;		None
  6642 ;; Return value:  Size  Location     Type
  6643 ;;                  1  [STACK] void 
  6644 ;; Registers used:
  6645 ;;		wreg, fsr2l, fsr2h
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6655 ;;Total ram usage:        0 bytes
  6656 ;; Hardware stack levels used:    1
  6657 ;; Hardware stack levels required when called:   15
  6658 ;; This function calls:
  6659 ;;		Nothing
  6660 ;; This function is called by:
  6661 ;;		_main
  6662 ;; This function uses a reentrant model
  6663 ;;
  6664                           
  6665                           	psect	text2
  6666  01BF5A                     __ptext2:
  6667                           	opt callstack 0
  6668  01BF5A                     _static_soc:
  6669                           	opt callstack 15
  6670                           
  6671                           ;mbmc.c: 119:  C.runtime = 120;
  6672                           
  6673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6674                           ;incstack = 0
  6675  01BF5A  0E78               	movlw	120
  6676  01BF5C  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
  6677  01BF62  0E00               	movlw	0
  6678  01BF64  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
  6679                           
  6680                           ;mbmc.c: 120:  C.soc = 100;
  6681  01BF6A  0E64               	movlw	100
  6682  01BF6C  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
  6683  01BF72  0E00               	movlw	0
  6684  01BF74  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
  6685                           
  6686                           ;mbmc.c: 121:  C.dynamic_ah = C.bank_ah;
  6687  01BF7A  EE21  F38B         	lfsr	2,_C+140	;volatile
  6688  01BF7E  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
  6689  01BF84  006F FF78  F790    	movff	postinc2,_C+145	;volatile
  6690  01BF8A  006F FF78  F791    	movff	postinc2,_C+146	;volatile
  6691  01BF90  006F FF74  F792    	movff	postdec2,_C+147	;volatile
  6692                           
  6693                           ;mbmc.c: 122:  C.dynamic_ah_adj = C.dynamic_ah;
  6694  01BF96  EE21  F38F         	lfsr	2,_C+144	;volatile
  6695  01BF9A  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  6696  01BFA0  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  6697  01BFA6  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  6698  01BFAC  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  6699                           
  6700                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6701  01BFB2  0012               	return		;funcret
  6702  01BFB4                     __end_of_static_soc:
  6703                           	opt callstack 0
  6704                           
  6705 ;; *************** function _start_switch_handler *****************
  6706 ;; Defined at:
  6707 ;;		line 125 in file "dio.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;		None
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1  [STACK] void 
  6714 ;; Registers used:
  6715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  6716 ;; Tracked objects:
  6717 ;;		On entry : 1/0
  6718 ;;		On exit  : 3F/39
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6725 ;;Total ram usage:        0 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; Hardware stack levels required when called:   16
  6728 ;; This function calls:
  6729 ;;		_INT1_SetInterruptHandler
  6730 ;; This function is called by:
  6731 ;;		_main
  6732 ;; This function uses a reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text3
  6736  01CCEE                     __ptext3:
  6737                           	opt callstack 0
  6738  01CCEE                     _start_switch_handler:
  6739                           	opt callstack 14
  6740                           
  6741                           ;dio.c: 127:  (PIE5bits.INT1IE = 0);
  6742                           
  6743                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6744                           ;incstack = 0
  6745  01CCEE  0139               	movlb	57	; () banked
  6746  01CCF0  9195               	bcf	149,0,b	;volatile
  6747                           
  6748                           ; BSR set to: 57
  6749                           ;dio.c: 128:  INT1_SetInterruptHandler(switch_handler);
  6750  01CCF2  0ED8               	movlw	low _switch_handler
  6751  01CCF4  6EE6               	movwf	postinc1,c
  6752  01CCF6  0E9B               	movlw	high _switch_handler
  6753  01CCF8  6EE6               	movwf	postinc1,c
  6754  01CCFA  0E01               	movlw	low (_switch_handler shr (0+16))
  6755  01CCFC  6EE6               	movwf	postinc1,c
  6756  01CCFE  EC4B  F0E5         	call	_INT1_SetInterruptHandler	;wreg free
  6757                           
  6758                           ;dio.c: 129:  S.button[SNULL].sw = SW_INVALID;
  6759  01CD02  0E02               	movlw	2
  6760  01CD04  0102               	movlb	2	; () banked
  6761  01CD06  6F77               	movwf	(_S+35)& (0+255),b	;volatile
  6762                           
  6763                           ; BSR set to: 2
  6764                           ;dio.c: 130:  (PIE5bits.INT1IE = 1);
  6765  01CD08  0139               	movlb	57	; () banked
  6766  01CD0A  8195               	bsf	149,0,b	;volatile
  6767                           
  6768                           ; BSR set to: 57
  6769                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  6770  01CD0C  0012               	return		;funcret
  6771  01CD0E                     __end_of_start_switch_handler:
  6772                           	opt callstack 0
  6773                           
  6774 ;; *************** function _srand *****************
  6775 ;; Defined at:
  6776 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;  s               2  [STACK] unsigned int 
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;		None
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1  [STACK] void 
  6783 ;; Registers used:
  6784 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 3F/2
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6794 ;;Total ram usage:        0 bytes
  6795 ;; Hardware stack levels used:    1
  6796 ;; Hardware stack levels required when called:   15
  6797 ;; This function calls:
  6798 ;;		Nothing
  6799 ;; This function is called by:
  6800 ;;		_main
  6801 ;; This function uses a reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text4
  6805  01C6B8                     __ptext4:
  6806                           	opt callstack 0
  6807  01C6B8                     _srand:
  6808                           	opt callstack 15
  6809                           
  6810                           ;stkvar	_s @ sp[(0)+-2]
  6811                           
  6812                           ; BSR set to: 57
  6813                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6814                           ;incstack = 0
  6815  01C6B8  0EFE               	movlw	-2
  6816  01C6BA  50E3               	movf	plusw1,w,c
  6817  01C6BC  0FFF               	addlw	255
  6818  01C6BE  6E0B               	movwf	(btemp+10)^0,c
  6819  01C6C0  0EFF               	movlw	-1
  6820  01C6C2  006F FF8C  F00C    	movff	plusw1,btemp+11
  6821  01C6C8  0EFF               	movlw	255
  6822  01C6CA  220C               	addwfc	(btemp+11)^0,f,c
  6823  01C6CC  0060  F02C  F2E7   	movff	btemp+10,_seed
  6824  01C6D2  0060  F030  F2E8   	movff	btemp+11,_seed+1
  6825  01C6D8  0102               	movlb	2	; () banked
  6826  01C6DA  6BE9               	clrf	(_seed+2)& (0+255),b
  6827  01C6DC  6BEA               	clrf	(_seed+3)& (0+255),b
  6828  01C6DE  6BEB               	clrf	(_seed+4)& (0+255),b
  6829  01C6E0  6BEC               	clrf	(_seed+5)& (0+255),b
  6830  01C6E2  6BED               	clrf	(_seed+6)& (0+255),b
  6831  01C6E4  6BEE               	clrf	(_seed+7)& (0+255),b
  6832                           
  6833                           ; BSR set to: 2
  6834                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  6835  01C6E6  52E5               	movf	postdec1,f,c
  6836  01C6E8  52E5               	movf	postdec1,f,c
  6837  01C6EA  0012               	return		;funcret
  6838  01C6EC                     __end_of_srand:
  6839                           	opt callstack 0
  6840                           
  6841 ;; *************** function _set_dac_b *****************
  6842 ;; Defined at:
  6843 ;;		line 300 in file "daq.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;  voltage         4  [STACK] const float 
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  2  [STACK] unsigned short 
  6850 ;; Registers used:
  6851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6861 ;;Total ram usage:        0 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:   17
  6864 ;; This function calls:
  6865 ;;		_convert_dac_raw
  6866 ;; This function is called by:
  6867 ;;		_main
  6868 ;; This function uses a reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text5
  6872  01C6EC                     __ptext5:
  6873                           	opt callstack 0
  6874  01C6EC                     _set_dac_b:
  6875                           	opt callstack 13
  6876                           
  6877                           ;daq.c: 300: uint16_t set_dac_b(const float voltage);daq.c: 301: {;daq.c: 302:  R.raw_da
      +                          c[1] = convert_dac_raw(voltage);
  6878                           ;stkvar	_voltage @ sp[(0)+-4]
  6879                           
  6880                           ; BSR set to: 2
  6881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6882                           ;incstack = 0
  6883  01C6EC  0EFC               	movlw	-4
  6884  01C6EE  006F FF8F FFE6     	movff	plusw1,postinc1
  6885  01C6F4  006F FF8F FFE6     	movff	plusw1,postinc1
  6886  01C6FA  006F FF8F FFE6     	movff	plusw1,postinc1
  6887  01C700  006F FF8F FFE6     	movff	plusw1,postinc1
  6888  01C706  ECF2  F0D0         	call	_convert_dac_raw	;wreg free
  6889  01C70A  0060  F004  F0CD   	movff	btemp,_R+34	;volatile
  6890  01C710  0060  F008  F0CE   	movff	btemp+1,_R+35	;volatile
  6891                           
  6892                           ; _set_dac_b: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6893                           
  6894                           ;daq.c: 303:  return R.raw_dac[1];;	Return value of _set_dac_b is never used
  6895  01C716  52E5               	movf	postdec1,f,c
  6896  01C718  52E5               	movf	postdec1,f,c
  6897  01C71A  52E5               	movf	postdec1,f,c
  6898  01C71C  52E5               	movf	postdec1,f,c
  6899  01C71E  0012               	return		;funcret
  6900  01C720                     __end_of_set_dac_b:
  6901                           	opt callstack 0
  6902                           
  6903 ;; *************** function _set_dac_a *****************
  6904 ;; Defined at:
  6905 ;;		line 291 in file "daq.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;  voltage         4  [STACK] const float 
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;		None
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  2  [STACK] unsigned short 
  6912 ;; Registers used:
  6913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6914 ;; Tracked objects:
  6915 ;;		On entry : 3F/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6923 ;;Total ram usage:        0 bytes
  6924 ;; Hardware stack levels used:    1
  6925 ;; Hardware stack levels required when called:   17
  6926 ;; This function calls:
  6927 ;;		_convert_dac_raw
  6928 ;; This function is called by:
  6929 ;;		_main
  6930 ;; This function uses a reentrant model
  6931 ;;
  6932                           
  6933                           	psect	text6
  6934  01C720                     __ptext6:
  6935                           	opt callstack 0
  6936  01C720                     _set_dac_a:
  6937                           	opt callstack 13
  6938                           
  6939                           ;daq.c: 291: uint16_t set_dac_a(const float voltage);daq.c: 292: {;daq.c: 293:  R.raw_da
      +                          c[0] = convert_dac_raw(voltage);
  6940                           ;stkvar	_voltage @ sp[(0)+-4]
  6941                           
  6942                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6943                           ;incstack = 0
  6944  01C720  0EFC               	movlw	-4
  6945  01C722  006F FF8F FFE6     	movff	plusw1,postinc1
  6946  01C728  006F FF8F FFE6     	movff	plusw1,postinc1
  6947  01C72E  006F FF8F FFE6     	movff	plusw1,postinc1
  6948  01C734  006F FF8F FFE6     	movff	plusw1,postinc1
  6949  01C73A  ECF2  F0D0         	call	_convert_dac_raw	;wreg free
  6950  01C73E  0060  F004  F0CB   	movff	btemp,_R+32	;volatile
  6951  01C744  0060  F008  F0CC   	movff	btemp+1,_R+33	;volatile
  6952                           
  6953                           ; _set_dac_a: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  6954                           
  6955                           ;daq.c: 294:  return R.raw_dac[0];;	Return value of _set_dac_a is never used
  6956  01C74A  52E5               	movf	postdec1,f,c
  6957  01C74C  52E5               	movf	postdec1,f,c
  6958  01C74E  52E5               	movf	postdec1,f,c
  6959  01C750  52E5               	movf	postdec1,f,c
  6960  01C752  0012               	return		;funcret
  6961  01C754                     __end_of_set_dac_a:
  6962                           	opt callstack 0
  6963                           
  6964 ;; *************** function _convert_dac_raw *****************
  6965 ;; Defined at:
  6966 ;;		line 273 in file "daq.c"
  6967 ;; Parameters:    Size  Location     Type
  6968 ;;  voltage         4  [STACK] float 
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;		None
  6971 ;; Return value:  Size  Location     Type
  6972 ;;                  2  [STACK] unsigned short 
  6973 ;; Registers used:
  6974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
  6975 ;; Tracked objects:
  6976 ;;		On entry : 0/0
  6977 ;;		On exit  : 0/0
  6978 ;;		Unchanged: 0/0
  6979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6984 ;;Total ram usage:        0 bytes
  6985 ;; Hardware stack levels used:    1
  6986 ;; Hardware stack levels required when called:   16
  6987 ;; This function calls:
  6988 ;;		___fldiv
  6989 ;;		___flge
  6990 ;;		___fltol
  6991 ;; This function is called by:
  6992 ;;		_set_dac_a
  6993 ;;		_set_dac_b
  6994 ;; This function uses a reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text7
  6998  01A1E4                     __ptext7:
  6999                           	opt callstack 0
  7000  01A1E4                     _convert_dac_raw:
  7001                           	opt callstack 13
  7002                           
  7003                           ;daq.c: 273: static uint16_t convert_dac_raw(float voltage);daq.c: 274: {;daq.c: 278:  i
      +                          f (voltage < 0.001)
  7004                           
  7005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7006                           ;incstack = 0
  7007  01A1E4  0E6F               	movlw	111
  7008  01A1E6  6EE6               	movwf	postinc1,c
  7009  01A1E8  0E12               	movlw	18
  7010  01A1EA  6EE6               	movwf	postinc1,c
  7011  01A1EC  0E83               	movlw	131
  7012  01A1EE  6EE6               	movwf	postinc1,c
  7013  01A1F0  0E3A               	movlw	58
  7014  01A1F2  6EE6               	movwf	postinc1,c
  7015                           
  7016                           ;stkvar	_voltage @ sp[(-4)+-4]
  7017  01A1F4  0EF8               	movlw	-8
  7018  01A1F6  006F FF8F FFE6     	movff	plusw1,postinc1
  7019  01A1FC  006F FF8F FFE6     	movff	plusw1,postinc1
  7020  01A202  006F FF8F FFE6     	movff	plusw1,postinc1
  7021  01A208  006F FF8F FFE6     	movff	plusw1,postinc1
  7022  01A20E  ECE3  F0CB         	call	___flge	;wreg free
  7023  01A212  B001               	btfsc	btemp& (0+255),0,c
  7024  01A214  D018               	goto	l11138
  7025                           
  7026                           ;daq.c: 279:   voltage = 0.001;
  7027  01A216  0E6F               	movlw	111
  7028  01A218  6E09               	movwf	(btemp+8)^0,c
  7029  01A21A  0E12               	movlw	18
  7030  01A21C  6E0A               	movwf	(btemp+9)^0,c
  7031  01A21E  0E83               	movlw	131
  7032  01A220  6E0B               	movwf	(btemp+10)^0,c
  7033  01A222  0E3A               	movlw	58
  7034  01A224  6E0C               	movwf	(btemp+11)^0,c
  7035                           
  7036                           ;stkvar	_voltage @ sp[(0)+-4]
  7037  01A226  0EFC               	movlw	-4
  7038  01A228  0060  F027  FFE3   	movff	btemp+8,plusw1
  7039  01A22E  0EFD               	movlw	-3
  7040  01A230  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7041  01A236  0EFE               	movlw	-2
  7042  01A238  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7043  01A23E  0EFF               	movlw	-1
  7044  01A240  0060  F033  FFE3   	movff	btemp+11,plusw1
  7045  01A246                     l11138:
  7046                           
  7047                           ;daq.c: 280:  if (voltage > 10.0)
  7048                           ;stkvar	_voltage @ sp[(0)+-4]
  7049  01A246  0EFC               	movlw	-4
  7050  01A248  006F FF8F FFE6     	movff	plusw1,postinc1
  7051  01A24E  006F FF8F FFE6     	movff	plusw1,postinc1
  7052  01A254  006F FF8F FFE6     	movff	plusw1,postinc1
  7053  01A25A  006F FF8F FFE6     	movff	plusw1,postinc1
  7054  01A260  0E00               	movlw	0
  7055  01A262  6EE6               	movwf	postinc1,c
  7056  01A264  0E00               	movlw	0
  7057  01A266  6EE6               	movwf	postinc1,c
  7058  01A268  0E20               	movlw	32
  7059  01A26A  6EE6               	movwf	postinc1,c
  7060  01A26C  0E41               	movlw	65
  7061  01A26E  6EE6               	movwf	postinc1,c
  7062  01A270  ECE3  F0CB         	call	___flge	;wreg free
  7063  01A274  B001               	btfsc	btemp& (0+255),0,c
  7064  01A276  D018               	goto	l11142
  7065                           
  7066                           ;daq.c: 281:   voltage = 10.0;
  7067  01A278  0E00               	movlw	0
  7068  01A27A  6E09               	movwf	(btemp+8)^0,c
  7069  01A27C  0E00               	movlw	0
  7070  01A27E  6E0A               	movwf	(btemp+9)^0,c
  7071  01A280  0E20               	movlw	32
  7072  01A282  6E0B               	movwf	(btemp+10)^0,c
  7073  01A284  0E41               	movlw	65
  7074  01A286  6E0C               	movwf	(btemp+11)^0,c
  7075                           
  7076                           ;stkvar	_voltage @ sp[(0)+-4]
  7077  01A288  0EFC               	movlw	-4
  7078  01A28A  0060  F027  FFE3   	movff	btemp+8,plusw1
  7079  01A290  0EFD               	movlw	-3
  7080  01A292  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7081  01A298  0EFE               	movlw	-2
  7082  01A29A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7083  01A2A0  0EFF               	movlw	-1
  7084  01A2A2  0060  F033  FFE3   	movff	btemp+11,plusw1
  7085  01A2A8                     l11142:
  7086                           
  7087                           ;daq.c: 285:  return(uint16_t) (voltage / 0.002442);
  7088  01A2A8  0EF6               	movlw	246
  7089  01A2AA  6EE6               	movwf	postinc1,c
  7090  01A2AC  0E09               	movlw	9
  7091  01A2AE  6EE6               	movwf	postinc1,c
  7092  01A2B0  0E20               	movlw	32
  7093  01A2B2  6EE6               	movwf	postinc1,c
  7094  01A2B4  0E3B               	movlw	59
  7095  01A2B6  6EE6               	movwf	postinc1,c
  7096                           
  7097                           ;stkvar	_voltage @ sp[(-4)+-4]
  7098  01A2B8  0EF8               	movlw	-8
  7099  01A2BA  006F FF8F FFE6     	movff	plusw1,postinc1
  7100  01A2C0  006F FF8F FFE6     	movff	plusw1,postinc1
  7101  01A2C6  006F FF8F FFE6     	movff	plusw1,postinc1
  7102  01A2CC  006F FF8F FFE6     	movff	plusw1,postinc1
  7103  01A2D2  EC61  F0A7         	call	___fldiv	;wreg free
  7104  01A2D6  0060  F007  FFE6   	movff	btemp,postinc1
  7105  01A2DC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7106  01A2E2  0060  F00F  FFE6   	movff	btemp+2,postinc1
  7107  01A2E8  0060  F013  FFE6   	movff	btemp+3,postinc1
  7108  01A2EE  EC2A  F0CB         	call	___fltol	;wreg free
  7109                           
  7110                           ; _convert_dac_raw: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          4, argsize = 4, vargsize = 0
  7111  01A2F2  52E5               	movf	postdec1,f,c
  7112  01A2F4  52E5               	movf	postdec1,f,c
  7113  01A2F6  52E5               	movf	postdec1,f,c
  7114  01A2F8  52E5               	movf	postdec1,f,c
  7115  01A2FA  0012               	return		;funcret
  7116  01A2FC                     __end_of_convert_dac_raw:
  7117                           	opt callstack 0
  7118                           
  7119 ;; *************** function _set_dac *****************
  7120 ;; Defined at:
  7121 ;;		line 249 in file "daq.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;		None
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;		None
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  1  [STACK] void 
  7128 ;; Registers used:
  7129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7139 ;;Total ram usage:        0 bytes
  7140 ;; Hardware stack levels used:    1
  7141 ;; Hardware stack levels required when called:   16
  7142 ;; This function calls:
  7143 ;;		_SPI1_Exchange8bit
  7144 ;;		_dac_spi_control
  7145 ;; This function is called by:
  7146 ;;		_main
  7147 ;; This function uses a reentrant model
  7148 ;;
  7149                           
  7150                           	psect	text8
  7151  01B07A                     __ptext8:
  7152                           	opt callstack 0
  7153  01B07A                     _set_dac:
  7154                           	opt callstack 14
  7155                           
  7156                           ;daq.c: 251:  while (!SPI1STATUSbits.TXBE);
  7157                           
  7158                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7159                           ;incstack = 0
  7160  01B07A  013D               	movlb	61	; () banked
  7161  01B07C  AB17               	btfss	23,5,b	;volatile
  7162  01B07E  D7FD               	goto	_set_dac
  7163                           
  7164                           ; BSR set to: 61
  7165                           
  7166                           ;daq.c: 252:  do { LATCbits.LATC2 = 1; } while(0);
  7167  01B080  84BC               	bsf	188,2,c	;volatile
  7168                           
  7169                           ; BSR set to: 61
  7170                           
  7171                           ;daq.c: 253:  do { LATCbits.LATC0 = 1; } while(0);
  7172  01B082  80BC               	bsf	188,0,c	;volatile
  7173                           
  7174                           ; BSR set to: 61
  7175                           ;daq.c: 254:  dac_spi_control(1);
  7176  01B084  0E01               	movlw	1
  7177  01B086  6EE6               	movwf	postinc1,c
  7178  01B088  ECFE  F0DC         	call	_dac_spi_control	;wreg free
  7179                           
  7180                           ;daq.c: 255:  R.max5322_cmd.map.dac0 = R.raw_dac[0]&0xff;
  7181  01B08C  C0CB  F0CF         	movff	_R+32,_R+36	;volatile
  7182                           
  7183                           ;daq.c: 256:  R.max5322_cmd.map.dac1 = (R.raw_dac[0] >> 8) &0xf;
  7184  01B090  EE20  F0CB         	lfsr	2,_R+32	;volatile
  7185  01B094  006F FF78  F00B    	movff	postinc2,btemp+10
  7186  01B09A  006F FF74  F00C    	movff	postdec2,btemp+11
  7187  01B0A0  0060  F030  F00B   	movff	btemp+11,btemp+10
  7188  01B0A6  6A0C               	clrf	(btemp+11)^0,c
  7189  01B0A8  0E0F               	movlw	15
  7190  01B0AA  160B               	andwf	(btemp+10)^0,f,c
  7191  01B0AC  0100               	movlb	0	; () banked
  7192  01B0AE  51D0               	movf	(_R+37)& (0+255),w,b	;volatile
  7193  01B0B0  180B               	xorwf	(btemp+10)^0,w,c
  7194  01B0B2  0BF0               	andlw	-16
  7195  01B0B4  180B               	xorwf	(btemp+10)^0,w,c
  7196  01B0B6  6FD0               	movwf	(_R+37)& (0+255),b	;volatile
  7197                           
  7198                           ; BSR set to: 0
  7199                           ;daq.c: 257:  R.max5322_cmd.map.cont = 0b0100;
  7200  01B0B8  51D0               	movf	(_R+37)& (0+255),w,b	;volatile
  7201  01B0BA  0B0F               	andlw	-241
  7202  01B0BC  0940               	iorlw	64
  7203  01B0BE  6FD0               	movwf	(_R+37)& (0+255),b	;volatile
  7204                           
  7205                           ; BSR set to: 0
  7206  01B0C0  90BF               	bcf	191,0,c	;volatile
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;daq.c: 259:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7210  01B0C2  51D0               	movf	(_R+37)& (0+255),w,b	;volatile
  7211  01B0C4  6EE6               	movwf	postinc1,c
  7212  01B0C6  EC97  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  7213                           
  7214                           ; BSR set to: 57
  7215                           ;daq.c: 260:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7216  01B0CA  0100               	movlb	0	; () banked
  7217  01B0CC  51CF               	movf	(_R+36)& (0+255),w,b	;volatile
  7218  01B0CE  6EE6               	movwf	postinc1,c
  7219  01B0D0  EC97  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  7220                           
  7221                           ; BSR set to: 57
  7222  01B0D4  80BF               	bsf	191,0,c	;volatile
  7223                           
  7224                           ; BSR set to: 57
  7225                           ;daq.c: 262:  R.max5322_cmd.map.dac0 = R.raw_dac[1]&0xff;
  7226  01B0D6  C0CD  F0CF         	movff	_R+34,_R+36	;volatile
  7227                           
  7228                           ; BSR set to: 57
  7229                           ;daq.c: 263:  R.max5322_cmd.map.dac1 = (R.raw_dac[1] >> 8) &0xf;
  7230  01B0DA  EE20  F0CD         	lfsr	2,_R+34	;volatile
  7231  01B0DE  006F FF78  F00B    	movff	postinc2,btemp+10
  7232  01B0E4  006F FF74  F00C    	movff	postdec2,btemp+11
  7233  01B0EA  0060  F030  F00B   	movff	btemp+11,btemp+10
  7234  01B0F0  6A0C               	clrf	(btemp+11)^0,c
  7235  01B0F2  0E0F               	movlw	15
  7236  01B0F4  160B               	andwf	(btemp+10)^0,f,c
  7237  01B0F6  0100               	movlb	0	; () banked
  7238  01B0F8  51D0               	movf	(_R+37)& (0+255),w,b	;volatile
  7239  01B0FA  180B               	xorwf	(btemp+10)^0,w,c
  7240  01B0FC  0BF0               	andlw	-16
  7241  01B0FE  180B               	xorwf	(btemp+10)^0,w,c
  7242  01B100  6FD0               	movwf	(_R+37)& (0+255),b	;volatile
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;daq.c: 264:  R.max5322_cmd.map.cont = 0b0101;
  7246  01B102  51D0               	movf	(_R+37)& (0+255),w,b	;volatile
  7247  01B104  0B0F               	andlw	-241
  7248  01B106  0950               	iorlw	80
  7249  01B108  6FD0               	movwf	(_R+37)& (0+255),b	;volatile
  7250                           
  7251                           ; BSR set to: 0
  7252  01B10A  90BF               	bcf	191,0,c	;volatile
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;daq.c: 266:  SPI1_Exchange8bit(R.max5322_cmd.bd[1]);
  7256  01B10C  51D0               	movf	(_R+37)& (0+255),w,b	;volatile
  7257  01B10E  6EE6               	movwf	postinc1,c
  7258  01B110  EC97  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  7259                           
  7260                           ; BSR set to: 57
  7261                           ;daq.c: 267:  SPI1_Exchange8bit(R.max5322_cmd.bd[0]);
  7262  01B114  0100               	movlb	0	; () banked
  7263  01B116  51CF               	movf	(_R+36)& (0+255),w,b	;volatile
  7264  01B118  6EE6               	movwf	postinc1,c
  7265  01B11A  EC97  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  7266  01B11E                     l1901:
  7267  01B11E  013D               	movlb	61	; () banked
  7268  01B120  AB17               	btfss	23,5,b	;volatile
  7269  01B122  D7FD               	goto	l1901
  7270                           
  7271                           ; BSR set to: 61
  7272                           
  7273                           ;daq.c: 269:  do { LATFbits.LATF0 = 1; } while(0);
  7274  01B124  80BF               	bsf	191,0,c	;volatile
  7275                           
  7276                           ; BSR set to: 61
  7277                           ;daq.c: 270:  dac_spi_control(0);
  7278  01B126  0E00               	movlw	0
  7279  01B128  6EE6               	movwf	postinc1,c
  7280  01B12A  ECFE  F0DC         	call	_dac_spi_control	;wreg free
  7281                           
  7282                           ; _set_dac: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  7283  01B12E  0012               	return		;funcret
  7284  01B130                     __end_of_set_dac:
  7285                           	opt callstack 0
  7286                           
  7287 ;; *************** function _dac_spi_control *****************
  7288 ;; Defined at:
  7289 ;;		line 201 in file "daq.c"
  7290 ;; Parameters:    Size  Location     Type
  7291 ;;  set             1  [STACK] _Bool 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;		None
  7294 ;; Return value:  Size  Location     Type
  7295 ;;                  1  [STACK] void 
  7296 ;; Registers used:
  7297 ;;		wreg, fsr1l, fsr1h, status,2
  7298 ;; Tracked objects:
  7299 ;;		On entry : 3F/3D
  7300 ;;		On exit  : 0/0
  7301 ;;		Unchanged: 0/0
  7302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7307 ;;Total ram usage:        0 bytes
  7308 ;; Hardware stack levels used:    1
  7309 ;; Hardware stack levels required when called:   15
  7310 ;; This function calls:
  7311 ;;		Nothing
  7312 ;; This function is called by:
  7313 ;;		_set_dac
  7314 ;; This function uses a reentrant model
  7315 ;;
  7316                           
  7317                           	psect	text9
  7318  01B9FC                     __ptext9:
  7319                           	opt callstack 0
  7320  01B9FC                     _dac_spi_control:
  7321                           	opt callstack 14
  7322                           
  7323                           ;daq.c: 201: void dac_spi_control(_Bool set);daq.c: 202: {;daq.c: 203:  static _Bool ini
      +                          t = 0;;daq.c: 204:  static uint8_t S0, S1, S2, SC, SB;;daq.c: 206:  if (set) {
  7324                           ;stkvar	_set @ sp[(0)+-1]
  7325                           
  7326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7327                           ;incstack = 0
  7328  01B9FC  0EFF               	movlw	-1
  7329  01B9FE  50E3               	movf	plusw1,w,c
  7330  01BA00  B4D8               	btfsc	status,2,c
  7331  01BA02  D022               	goto	l11130
  7332                           
  7333                           ;daq.c: 207:   SPI1CON0bits.EN = 0;
  7334  01BA04  013D               	movlb	61	; () banked
  7335  01BA06  9F14               	bcf	20,7,b	;volatile
  7336                           
  7337                           ; BSR set to: 61
  7338                           ;daq.c: 208:   if (!init) {
  7339  01BA08  5043               	movf	dac_spi_control@init^0,w,c
  7340  01BA0A  A4D8               	btfss	status,2,c
  7341  01BA0C  D011               	goto	l11118
  7342                           
  7343                           ; BSR set to: 61
  7344                           ;daq.c: 209:    init = 1;
  7345  01BA0E  0E01               	movlw	1
  7346  01BA10  6E43               	movwf	dac_spi_control@init^0,c
  7347                           
  7348                           ; BSR set to: 61
  7349                           ;daq.c: 210:    S0 = SPI1CON0;
  7350  01BA12  006F F450  F042    	movff	15636,dac_spi_control@S0	;volatile
  7351                           
  7352                           ; BSR set to: 61
  7353                           ;daq.c: 211:    S1 = SPI1CON1;
  7354  01BA18  006F F454  F0A4    	movff	15637,dac_spi_control@S1	;volatile
  7355                           
  7356                           ; BSR set to: 61
  7357                           ;daq.c: 212:    S2 = SPI1CON2;
  7358  01BA1E  006F F458  F0A3    	movff	15638,dac_spi_control@S2	;volatile
  7359                           
  7360                           ; BSR set to: 61
  7361                           ;daq.c: 213:    SC = SPI1CLK;
  7362  01BA24  006F F470  F0A2    	movff	15644,dac_spi_control@SC	;volatile
  7363                           
  7364                           ; BSR set to: 61
  7365                           ;daq.c: 214:    SB = SPI1BAUD;
  7366  01BA2A  006F F464  F0A1    	movff	15641,dac_spi_control@SB	;volatile
  7367  01BA30                     l11118:
  7368                           
  7369                           ; BSR set to: 61
  7370                           ;daq.c: 220:   SPI1CON1 = 0x00;
  7371  01BA30  6B15               	clrf	21,b	;volatile
  7372                           
  7373                           ; BSR set to: 61
  7374                           ;daq.c: 221:   SPI1CON1bits.CKE = 1;
  7375  01BA32  8D15               	bsf	21,6,b	;volatile
  7376                           
  7377                           ; BSR set to: 61
  7378                           ;daq.c: 222:   SPI1CON1bits.CKP = 0;
  7379  01BA34  9B15               	bcf	21,5,b	;volatile
  7380                           
  7381                           ; BSR set to: 61
  7382                           ;daq.c: 223:   SPI1CON1bits.SMP = 0;
  7383  01BA36  9F15               	bcf	21,7,b	;volatile
  7384                           
  7385                           ;daq.c: 225:   SPI1CON2 = 0x03;
  7386  01BA38  0E03               	movlw	3
  7387  01BA3A  6F16               	movwf	22,b	;volatile
  7388                           
  7389                           ;daq.c: 227:   SPI1BAUD = 0x0f;
  7390  01BA3C  0E0F               	movlw	15
  7391  01BA3E  6F19               	movwf	25,b	;volatile
  7392                           
  7393                           ; BSR set to: 61
  7394                           ;daq.c: 229:   SPI1CLK = 0x00;
  7395  01BA40  6B1C               	clrf	28,b	;volatile
  7396                           
  7397                           ;daq.c: 231:   SPI1CON0 = 0x83;
  7398  01BA42  0E83               	movlw	131
  7399  01BA44  6F14               	movwf	20,b	;volatile
  7400  01BA46  D014               	goto	L3
  7401  01BA48                     l11130:
  7402                           
  7403                           ;daq.c: 234:   if (init) {
  7404  01BA48  5043               	movf	dac_spi_control@init^0,w,c
  7405  01BA4A  B4D8               	btfsc	status,2,c
  7406  01BA4C  D012               	goto	l1885
  7407                           
  7408                           ;daq.c: 238:    SPI1CON0bits.EN = 0;
  7409  01BA4E  013D               	movlb	61	; () banked
  7410  01BA50  9F14               	bcf	20,7,b	;volatile
  7411                           
  7412                           ;daq.c: 239:    SPI1CON1 = S1;
  7413  01BA52  0060  F293  FD15   	movff	dac_spi_control@S1,15637	;volatile
  7414                           
  7415                           ;daq.c: 240:    SPI1CON2 = S2;
  7416  01BA58  0060  F28F  FD16   	movff	dac_spi_control@S2,15638	;volatile
  7417                           
  7418                           ;daq.c: 241:    SPI1CLK = SC;
  7419  01BA5E  0060  F28B  FD1C   	movff	dac_spi_control@SC,15644	;volatile
  7420                           
  7421                           ;daq.c: 242:    SPI1BAUD = SB;
  7422  01BA64  0060  F287  FD19   	movff	dac_spi_control@SB,15641	;volatile
  7423                           
  7424                           ;daq.c: 243:    SPI1CON0 = S0;
  7425  01BA6A  0060  F10B  FD14   	movff	dac_spi_control@S0,15636	;volatile
  7426  01BA70                     L3:
  7427                           
  7428                           ;daq.c: 244:    SPI1CON0bits.EN = 1;
  7429  01BA70  8F14               	bsf	20,7,b	;volatile
  7430  01BA72                     l1885:
  7431                           
  7432                           ; _dac_spi_control: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          1, argsize = 1, vargsize = 0
  7433  01BA72  52E5               	movf	postdec1,f,c
  7434  01BA74  0012               	return		;funcret
  7435  01BA76                     __end_of_dac_spi_control:
  7436                           	opt callstack 0
  7437                           
  7438 ;; *************** function _read_cal_data *****************
  7439 ;; Defined at:
  7440 ;;		line 350 in file "daq.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;		None
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;  x               2  [STACK] unsigned short 
  7445 ;;  r_cal_ptr       2  [STACK] PTR unsigned char 
  7446 ;;		 -> r_cal(58), 
  7447 ;;  y               2  [STACK] unsigned short 
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  1  [STACK] _Bool 
  7450 ;; Registers used:
  7451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/39
  7454 ;;		On exit  : 3F/3
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7461 ;;Total ram usage:        0 bytes
  7462 ;; Hardware stack levels used:    1
  7463 ;; Hardware stack levels required when called:   16
  7464 ;; This function calls:
  7465 ;;		_DATAEE_ReadByte
  7466 ;; This function is called by:
  7467 ;;		_main
  7468 ;; This function uses a reentrant model
  7469 ;;
  7470                           
  7471                           	psect	text10
  7472  01A838                     __ptext10:
  7473                           	opt callstack 0
  7474  01A838                     _read_cal_data:
  7475                           	opt callstack 0
  7476                           
  7477                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7478  01A838  0E06               	movlw	6
  7479  01A83A  26E1               	addwf	fsr1l,f,c
  7480  01A83C  0E00               	movlw	0
  7481  01A83E  22E2               	addwfc	fsr1h,f,c
  7482                           
  7483                           ;daq.c: 352:  uint16_t x = 0, y;
  7484                           ;stkvar	_x @ sp[(-6)+0]
  7485                           
  7486                           ;incstack = 0
  7487  01A840  0EFA               	movlw	-6
  7488  01A842  6AE3               	clrf	plusw1,c
  7489  01A844  0EFB               	movlw	-5
  7490  01A846  6AE3               	clrf	plusw1,c
  7491                           
  7492                           ;daq.c: 353:  uint8_t *r_cal_ptr;;daq.c: 355:  y = sizeof(r_cal);
  7493  01A848  0E3A               	movlw	58
  7494  01A84A  6E0B               	movwf	(btemp+10)^0,c
  7495  01A84C  0E00               	movlw	0
  7496  01A84E  6E0C               	movwf	(btemp+11)^0,c
  7497                           
  7498                           ;stkvar	_y @ sp[(-6)+4]
  7499  01A850  0EFE               	movlw	-2
  7500  01A852  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7501  01A858  0EFF               	movlw	-1
  7502  01A85A  0060  F033  FFE3   	movff	btemp+11,plusw1
  7503                           
  7504                           ;daq.c: 356:  r_cal_ptr = (uint8_t*) & r_cal;
  7505                           ;stkvar	_r_cal_ptr @ sp[(-6)+2]
  7506  01A860  0E03               	movlw	high _r_cal
  7507  01A862  6E01               	movwf	btemp^0,c
  7508  01A864  0EFD               	movlw	-3
  7509  01A866  0060  F007  FFE3   	movff	btemp,plusw1
  7510  01A86C  0EC6               	movlw	low _r_cal
  7511  01A86E  6E01               	movwf	btemp^0,c
  7512  01A870  0EFC               	movlw	-4
  7513  01A872  0060  F007  FFE3   	movff	btemp,plusw1
  7514  01A878                     l11558:
  7515                           
  7516                           ;daq.c: 359:   r_cal_ptr[x] = DATAEE_ReadByte(x);
  7517                           ;stkvar	_x @ sp[(-6)+0]
  7518  01A878  0EFA               	movlw	-6
  7519  01A87A  006F FF8F FFE6     	movff	plusw1,postinc1
  7520  01A880  006F FF8F FFE6     	movff	plusw1,postinc1
  7521  01A886  ECC4  F0E3         	call	_DATAEE_ReadByte	;wreg free
  7522                           
  7523                           ;stkvar	_x @ sp[(-6)+0]
  7524  01A88A  0EFA               	movlw	-6
  7525  01A88C  006F FF8C  F00B    	movff	plusw1,btemp+10
  7526  01A892  0EFB               	movlw	-5
  7527  01A894  006F FF8C  F00C    	movff	plusw1,btemp+11
  7528                           
  7529                           ;stkvar	_r_cal_ptr @ sp[(-6)+2]
  7530  01A89A  0EFC               	movlw	-4
  7531  01A89C  006F FF8C  F009    	movff	plusw1,btemp+8
  7532  01A8A2  0EFD               	movlw	-3
  7533  01A8A4  006F FF8C  F00A    	movff	plusw1,btemp+9
  7534  01A8AA  500B               	movf	(btemp+10)^0,w,c
  7535  01A8AC  2409               	addwf	(btemp+8)^0,w,c
  7536  01A8AE  6ED9               	movwf	fsr2l,c
  7537  01A8B0  500C               	movf	(btemp+11)^0,w,c
  7538  01A8B2  200A               	addwfc	(btemp+9)^0,w,c
  7539  01A8B4  6EDA               	movwf	fsr2h,c
  7540  01A8B6  0060  F007  FFDF   	movff	btemp,indf2
  7541                           
  7542                           ;daq.c: 360:  } while (++x < y);
  7543                           ;stkvar	_y @ sp[(-6)+4]
  7544  01A8BC  0EFE               	movlw	-2
  7545  01A8BE  006F FF8C  F00B    	movff	plusw1,btemp+10
  7546  01A8C4  0EFF               	movlw	-1
  7547  01A8C6  006F FF8C  F00C    	movff	plusw1,btemp+11
  7548                           
  7549                           ;stkvar	_x @ sp[(-6)+0]
  7550  01A8CC  0EFA               	movlw	-6
  7551  01A8CE  50E3               	movf	plusw1,w,c
  7552  01A8D0  0F01               	addlw	1
  7553  01A8D2  6E01               	movwf	btemp^0,c
  7554  01A8D4  0EFA               	movlw	-6
  7555  01A8D6  0060  F007  FFE3   	movff	btemp,plusw1
  7556  01A8DC  6A01               	clrf	btemp^0,c
  7557  01A8DE  0EFB               	movlw	-5
  7558  01A8E0  50E3               	movf	plusw1,w,c
  7559  01A8E2  2001               	addwfc	btemp^0,w,c
  7560  01A8E4  6E01               	movwf	btemp^0,c
  7561  01A8E6  0EFB               	movlw	-5
  7562  01A8E8  0060  F007  FFE3   	movff	btemp,plusw1
  7563  01A8EE  0EFA               	movlw	-6
  7564  01A8F0  006F FF8C  F009    	movff	plusw1,btemp+8
  7565  01A8F6  0EFB               	movlw	-5
  7566  01A8F8  006F FF8C  F00A    	movff	plusw1,btemp+9
  7567  01A8FE  500B               	movf	(btemp+10)^0,w,c
  7568  01A900  5C09               	subwf	(btemp+8)^0,w,c
  7569  01A902  500C               	movf	(btemp+11)^0,w,c
  7570  01A904  580A               	subwfb	(btemp+9)^0,w,c
  7571  01A906  A0D8               	btfss	status,0,c
  7572  01A908  D7B7               	goto	l11558
  7573                           
  7574                           ;daq.c: 362:  if (r_cal.checkmark == 0x1957) {
  7575  01A90A  0E57               	movlw	87
  7576  01A90C  0103               	movlb	3	; () banked
  7577  01A90E  19FC               	xorwf	(_r_cal+54)& (0+255),w,b
  7578  01A910  E106               	bnz	l11570
  7579  01A912  0E19               	movlw	25
  7580  01A914  19FD               	xorwf	(_r_cal+55)& (0+255),w,b
  7581  01A916  A4D8               	btfss	status,2,c
  7582  01A918  D002               	goto	l11570
  7583                           
  7584                           ; BSR set to: 3
  7585                           ;daq.c: 363:   return 1;
  7586  01A91A  0E01               	movlw	1
  7587  01A91C  D001               	goto	L4
  7588  01A91E                     l11570:
  7589                           
  7590                           ; BSR set to: 3
  7591                           ;daq.c: 365:   return 0;
  7592  01A91E  0E00               	movlw	0
  7593  01A920                     L4:
  7594  01A920  6E01               	movwf	btemp^0,c
  7595                           
  7596                           ; BSR set to: 3
  7597                           ; _read_cal_data: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7598  01A922  0EFA               	movlw	250
  7599  01A924  26E1               	addwf	fsr1l,f,c
  7600  01A926  0EFF               	movlw	255
  7601  01A928  22E2               	addwfc	fsr1h,f,c
  7602  01A92A  0012               	return		;funcret
  7603  01A92C                     __end_of_read_cal_data:
  7604                           	opt callstack 0
  7605                           
  7606 ;; *************** function _DATAEE_ReadByte *****************
  7607 ;; Defined at:
  7608 ;;		line 194 in file "mcc_generated_files/memory.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  bAdd            2  [STACK] unsigned short 
  7611 ;; Auto vars:     Size  Location     Type
  7612 ;;		None
  7613 ;; Return value:  Size  Location     Type
  7614 ;;                  1  [STACK] unsigned char 
  7615 ;; Registers used:
  7616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  7617 ;; Tracked objects:
  7618 ;;		On entry : 0/39
  7619 ;;		On exit  : 0/0
  7620 ;;		Unchanged: 0/0
  7621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7626 ;;Total ram usage:        0 bytes
  7627 ;; Hardware stack levels used:    1
  7628 ;; Hardware stack levels required when called:   15
  7629 ;; This function calls:
  7630 ;;		Nothing
  7631 ;; This function is called by:
  7632 ;;		_read_cal_data
  7633 ;; This function uses a reentrant model
  7634 ;;
  7635                           
  7636                           	psect	text11
  7637  01C788                     __ptext11:
  7638                           	opt callstack 0
  7639  01C788                     _DATAEE_ReadByte:
  7640                           	opt callstack 14
  7641                           
  7642                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  7643                           ;stkvar	_bAdd @ sp[(0)+-2]
  7644                           
  7645                           ; BSR set to: 3
  7646                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7647                           ;incstack = 0
  7648  01C788  0EFF               	movlw	255
  7649  01C78A  24E1               	addwf	fsr1l,w,c
  7650  01C78C  6ED9               	movwf	fsr2l,c
  7651  01C78E  0EFF               	movlw	255
  7652  01C790  20E2               	addwfc	fsr1h,w,c
  7653  01C792  6EDA               	movwf	fsr2h,c
  7654  01C794  50DF               	movf	indf2,w,c
  7655  01C796  0B03               	andlw	3
  7656  01C798  0139               	movlb	57	; () banked
  7657  01C79A  6FE1               	movwf	225,b	;volatile
  7658                           
  7659                           ; BSR set to: 57
  7660                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  7661                           ;stkvar	_bAdd @ sp[(0)+-2]
  7662  01C79C  0EFE               	movlw	-2
  7663  01C79E  006F FF8F F9E0     	movff	plusw1,14816	;volatile
  7664                           
  7665                           ; BSR set to: 57
  7666                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  7667  01C7A4  0E3F               	movlw	-193
  7668  01C7A6  17E5               	andwf	229,f,b	;volsfr
  7669                           
  7670                           ; BSR set to: 57
  7671                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  7672  01C7A8  81E5               	bsf	229,0,b	;volsfr
  7673                           
  7674                           ; BSR set to: 57
  7675                           ;mcc_generated_files/memory.c: 200:     __nop();
  7676  01C7AA  F000               	nop	
  7677                           
  7678                           ;mcc_generated_files/memory.c: 201:     __nop();
  7679  01C7AC  F000               	nop	
  7680                           
  7681                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  7682  01C7AE  006E F78C  F001    	movff	14819,btemp	;volatile
  7683                           
  7684                           ; _DATAEE_ReadByte: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  7685  01C7B4  52E5               	movf	postdec1,f,c
  7686  01C7B6  52E5               	movf	postdec1,f,c
  7687  01C7B8  0012               	return		;funcret
  7688  01C7BA                     __end_of_DATAEE_ReadByte:
  7689                           	opt callstack 0
  7690                           
  7691 ;; *************** function _init_port_dma *****************
  7692 ;; Defined at:
  7693 ;;		line 104 in file "eadog.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;		None
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;		None
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  1  [STACK] void 
  7700 ;; Registers used:
  7701 ;;		wreg, status,2
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/1
  7704 ;;		On exit  : 3F/3B
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7711 ;;Total ram usage:        0 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; Hardware stack levels required when called:   15
  7714 ;; This function calls:
  7715 ;;		Nothing
  7716 ;; This function is called by:
  7717 ;;		_main
  7718 ;; This function uses a reentrant model
  7719 ;;
  7720                           
  7721                           	psect	text12
  7722  01C7BA                     __ptext12:
  7723                           	opt callstack 0
  7724  01C7BA                     _init_port_dma:
  7725                           	opt callstack 15
  7726                           
  7727                           ;eadog.c: 106:  DMA2CON1bits.DMODE = 0;
  7728                           
  7729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7730                           ;incstack = 0
  7731  01C7BA  0E3F               	movlw	-193
  7732  01C7BC  013B               	movlb	59	; () banked
  7733  01C7BE  17DD               	andwf	221,f,b	;volatile
  7734                           
  7735                           ; BSR set to: 59
  7736                           ;eadog.c: 107:  DMA2CON1bits.DSTP = 0;
  7737  01C7C0  9BDD               	bcf	221,5,b	;volatile
  7738                           
  7739                           ;eadog.c: 108:  DMA2CON1bits.SMODE = 1;
  7740  01C7C2  51DD               	movf	221,w,b	;volatile
  7741  01C7C4  0BF9               	andlw	-7
  7742  01C7C6  0902               	iorlw	2
  7743  01C7C8  6FDD               	movwf	221,b	;volatile
  7744                           
  7745                           ;eadog.c: 109:  DMA2CON1bits.SMR = 0;
  7746  01C7CA  0EE7               	movlw	-25
  7747  01C7CC  17DD               	andwf	221,f,b	;volatile
  7748                           
  7749                           ; BSR set to: 59
  7750                           ;eadog.c: 110:  DMA2CON1bits.SSTP = 1;
  7751  01C7CE  81DD               	bsf	221,0,b	;volatile
  7752                           
  7753                           ; BSR set to: 59
  7754                           ;eadog.c: 111:  DMA2CON0bits.SIRQEN = 0;
  7755  01C7D0  9DDC               	bcf	220,6,b	;volatile
  7756                           
  7757                           ;eadog.c: 112:  DMA2DSA = 0x3DEA;
  7758  01C7D2  0E3D               	movlw	61
  7759  01C7D4  6FD1               	movwf	209,b	;volatile
  7760  01C7D6  0EEA               	movlw	234
  7761  01C7D8  6FD0               	movwf	208,b	;volatile
  7762                           
  7763                           ;eadog.c: 113:  DMA2SSA = (uint32_t) port_data;
  7764  01C7DA  0EFF               	movlw	low _port_data
  7765  01C7DC  6FD9               	movwf	217,b	;volatile
  7766  01C7DE  0E04               	movlw	high _port_data
  7767  01C7E0  6FDA               	movwf	218,b	;volatile
  7768  01C7E2  0E00               	movlw	low (_port_data shr (0+16))
  7769  01C7E4  6FDB               	movwf	219,b	;volatile
  7770                           
  7771                           ; BSR set to: 59
  7772                           ;eadog.c: 114:  DMA2CON0bits.DGO = 0;
  7773  01C7E6  9BDC               	bcf	220,5,b	;volatile
  7774                           
  7775                           ; BSR set to: 59
  7776                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7777  01C7E8  0012               	return		;funcret
  7778  01C7EA                     __end_of_init_port_dma:
  7779                           	opt callstack 0
  7780                           
  7781 ;; *************** function _init_display *****************
  7782 ;; Defined at:
  7783 ;;		line 38 in file "eadog.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;		None
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;		None
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  1  [STACK] void 
  7790 ;; Registers used:
  7791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7792 ;; Tracked objects:
  7793 ;;		On entry : 3F/3B
  7794 ;;		On exit  : 3F/3D
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7801 ;;Total ram usage:        0 bytes
  7802 ;; Hardware stack levels used:    1
  7803 ;; Hardware stack levels required when called:   17
  7804 ;; This function calls:
  7805 ;;		_ringBufS_init
  7806 ;;		_send_lcd_cmd
  7807 ;;		_send_lcd_cmd_long
  7808 ;;		_send_lcd_data
  7809 ;;		_wdtdelay
  7810 ;; This function is called by:
  7811 ;;		_main
  7812 ;; This function uses a reentrant model
  7813 ;;
  7814                           
  7815                           	psect	text13
  7816  01A92C                     __ptext13:
  7817                           	opt callstack 0
  7818  01A92C                     _init_display:
  7819                           	opt callstack 13
  7820                           
  7821                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  7822                           
  7823                           ; BSR set to: 59
  7824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7825                           ;incstack = 0
  7826  01A92C  0E83               	movlw	low _ring_buf1
  7827  01A92E  0101               	movlb	1	; () banked
  7828  01A930  6FD6               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7829  01A932  0E03               	movlw	high _ring_buf1
  7830  01A934  6FD7               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7831                           
  7832                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  7833  01A936  0E40               	movlw	low _ring_buf2
  7834  01A938  6FD4               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7835  01A93A  0E03               	movlw	high _ring_buf2
  7836  01A93C  6FD5               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7837                           
  7838                           ; BSR set to: 1
  7839                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  7840  01A93E  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
  7841  01A944  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
  7842  01A94A  ECAB  F0E4         	call	_ringBufS_init	;wreg free
  7843                           
  7844                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  7845  01A94E  0060  F753  FFE6   	movff	_spi_link+4,postinc1
  7846  01A954  0060  F757  FFE6   	movff	_spi_link+5,postinc1
  7847  01A95A  ECAB  F0E4         	call	_ringBufS_init	;wreg free
  7848                           
  7849                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  7850  01A95E  84BE               	bsf	190,2,c	;volatile
  7851                           
  7852                           ;eadog.c: 47:  SPI1CON0bits.EN = 0;
  7853  01A960  013D               	movlb	61	; () banked
  7854  01A962  9F14               	bcf	20,7,b	;volatile
  7855                           
  7856                           ; BSR set to: 61
  7857                           ;eadog.c: 49:  SPI1CON1 = 0x20;
  7858  01A964  0E20               	movlw	32
  7859  01A966  6F15               	movwf	21,b	;volatile
  7860                           
  7861                           ; BSR set to: 61
  7862                           ;eadog.c: 51:  SPI1CON2 = 0x03;
  7863  01A968  0E03               	movlw	3
  7864  01A96A  6F16               	movwf	22,b	;volatile
  7865                           
  7866                           ; BSR set to: 61
  7867                           ;eadog.c: 53:  SPI1BAUD = 0x04;
  7868  01A96C  0E04               	movlw	4
  7869  01A96E  6F19               	movwf	25,b	;volatile
  7870                           
  7871                           ; BSR set to: 61
  7872                           ;eadog.c: 55:  SPI1CLK = 0x02;
  7873  01A970  0E02               	movlw	2
  7874  01A972  6F1C               	movwf	28,b	;volatile
  7875                           
  7876                           ; BSR set to: 61
  7877                           ;eadog.c: 57:  SPI1CON0 = 0x83;
  7878  01A974  0E83               	movlw	131
  7879  01A976  6F14               	movwf	20,b	;volatile
  7880                           
  7881                           ; BSR set to: 61
  7882                           ;eadog.c: 58:  SPI1CON0bits.EN = 1;
  7883  01A978  8F14               	bsf	20,7,b	;volatile
  7884                           
  7885                           ; BSR set to: 61
  7886                           ;eadog.c: 60:  wdtdelay(350000);
  7887  01A97A  0E30               	movlw	48
  7888  01A97C  6EE6               	movwf	postinc1,c
  7889  01A97E  0E57               	movlw	87
  7890  01A980  6EE6               	movwf	postinc1,c
  7891  01A982  0E05               	movlw	5
  7892  01A984  6EE6               	movwf	postinc1,c
  7893  01A986  0E00               	movlw	0
  7894  01A988  6EE6               	movwf	postinc1,c
  7895  01A98A  ECDA  F0DF         	call	_wdtdelay	;wreg free
  7896                           
  7897                           ; BSR set to: 0
  7898                           ;eadog.c: 61:  send_lcd_cmd_long(0x46);
  7899  01A98E  0E46               	movlw	70
  7900  01A990  6EE6               	movwf	postinc1,c
  7901  01A992  EC10  F0E2         	call	_send_lcd_cmd_long	;wreg free
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;eadog.c: 62:  send_lcd_cmd(0x41);
  7905  01A996  0E41               	movlw	65
  7906  01A998  6EE6               	movwf	postinc1,c
  7907  01A99A  EC30  F0E2         	call	_send_lcd_cmd	;wreg free
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;eadog.c: 63:  wdtdelay(80);
  7911  01A99E  0E50               	movlw	80
  7912  01A9A0  6EE6               	movwf	postinc1,c
  7913  01A9A2  0E00               	movlw	0
  7914  01A9A4  6EE6               	movwf	postinc1,c
  7915  01A9A6  0E00               	movlw	0
  7916  01A9A8  6EE6               	movwf	postinc1,c
  7917  01A9AA  0E00               	movlw	0
  7918  01A9AC  6EE6               	movwf	postinc1,c
  7919  01A9AE  ECDA  F0DF         	call	_wdtdelay	;wreg free
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;eadog.c: 64:  send_lcd_cmd(0x53);
  7923  01A9B2  0E53               	movlw	83
  7924  01A9B4  6EE6               	movwf	postinc1,c
  7925  01A9B6  EC30  F0E2         	call	_send_lcd_cmd	;wreg free
  7926                           
  7927                           ; BSR set to: 0
  7928                           ;eadog.c: 65:  send_lcd_data(2);
  7929  01A9BA  0E02               	movlw	2
  7930  01A9BC  6EE6               	movwf	postinc1,c
  7931  01A9BE  ECD8  F0E5         	call	_send_lcd_data	;wreg free
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;eadog.c: 66:  wdtdelay(80);
  7935  01A9C2  0E50               	movlw	80
  7936  01A9C4  6EE6               	movwf	postinc1,c
  7937  01A9C6  0E00               	movlw	0
  7938  01A9C8  6EE6               	movwf	postinc1,c
  7939  01A9CA  0E00               	movlw	0
  7940  01A9CC  6EE6               	movwf	postinc1,c
  7941  01A9CE  0E00               	movlw	0
  7942  01A9D0  6EE6               	movwf	postinc1,c
  7943  01A9D2  ECDA  F0DF         	call	_wdtdelay	;wreg free
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;eadog.c: 67:  send_lcd_cmd_long(0x51);
  7947  01A9D6  0E51               	movlw	81
  7948  01A9D8  6EE6               	movwf	postinc1,c
  7949  01A9DA  EC10  F0E2         	call	_send_lcd_cmd_long	;wreg free
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;eadog.c: 68:  SPI1CON0bits.EN = 0;
  7953  01A9DE  013D               	movlb	61	; () banked
  7954  01A9E0  9F14               	bcf	20,7,b	;volatile
  7955                           
  7956                           ; BSR set to: 61
  7957                           ;eadog.c: 69:  SPI1CON2 = 0x02;
  7958  01A9E2  0E02               	movlw	2
  7959  01A9E4  6F16               	movwf	22,b	;volatile
  7960                           
  7961                           ; BSR set to: 61
  7962                           ;eadog.c: 70:  SPI1CON0bits.EN = 1;
  7963  01A9E6  8F14               	bsf	20,7,b	;volatile
  7964                           
  7965                           ; BSR set to: 61
  7966                           ;eadog.c: 89:  SPI1INTFbits.SPI1TXUIF = 0;
  7967  01A9E8  931A               	bcf	26,1,b	;volatile
  7968                           
  7969                           ; BSR set to: 61
  7970                           ;eadog.c: 90:  DMA1CON1bits.DMODE = 0;
  7971  01A9EA  0E3F               	movlw	-193
  7972  01A9EC  013B               	movlb	59	; () banked
  7973  01A9EE  17FD               	andwf	253,f,b	;volatile
  7974                           
  7975                           ; BSR set to: 59
  7976                           ;eadog.c: 91:  DMA1CON1bits.DSTP = 0;
  7977  01A9F0  9BFD               	bcf	253,5,b	;volatile
  7978                           
  7979                           ; BSR set to: 59
  7980                           ;eadog.c: 92:  DMA1CON1bits.SMODE = 1;
  7981  01A9F2  51FD               	movf	253,w,b	;volatile
  7982  01A9F4  0BF9               	andlw	-7
  7983  01A9F6  0902               	iorlw	2
  7984  01A9F8  6FFD               	movwf	253,b	;volatile
  7985                           
  7986                           ; BSR set to: 59
  7987                           ;eadog.c: 93:  DMA1CON1bits.SMR = 0;
  7988  01A9FA  0EE7               	movlw	-25
  7989  01A9FC  17FD               	andwf	253,f,b	;volatile
  7990                           
  7991                           ; BSR set to: 59
  7992                           ;eadog.c: 94:  DMA1CON1bits.SSTP = 1;
  7993  01A9FE  81FD               	bsf	253,0,b	;volatile
  7994                           
  7995                           ; BSR set to: 59
  7996                           ;eadog.c: 95:  DMA1SSA = (uint32_t) & ring_buf1;
  7997  01AA00  0E83               	movlw	low _ring_buf1
  7998  01AA02  6FF9               	movwf	249,b	;volatile
  7999  01AA04  0E03               	movlw	high _ring_buf1
  8000  01AA06  6FFA               	movwf	250,b	;volatile
  8001  01AA08  0E00               	movlw	low (_ring_buf1 shr (0+16))
  8002  01AA0A  6FFB               	movwf	251,b	;volatile
  8003                           
  8004                           ; BSR set to: 59
  8005                           ;eadog.c: 96:  DMA1CON0bits.DGO = 0;
  8006  01AA0C  9BFC               	bcf	252,5,b	;volatile
  8007                           
  8008                           ; BSR set to: 59
  8009                           ;eadog.c: 97:  SPI1INTFbits.SPI1TXUIF = 1;
  8010  01AA0E  013D               	movlb	61	; () banked
  8011  01AA10  831A               	bsf	26,1,b	;volatile
  8012                           
  8013                           ; BSR set to: 61
  8014                           ;eadog.c: 98:  LATEbits.LATE2 = 0;
  8015  01AA12  94BE               	bcf	190,2,c	;volatile
  8016                           
  8017                           ; BSR set to: 61
  8018                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8019  01AA14  0012               	return		;funcret
  8020  01AA16                     __end_of_init_display:
  8021                           	opt callstack 0
  8022                           
  8023 ;; *************** function _send_lcd_data *****************
  8024 ;; Defined at:
  8025 ;;		line 123 in file "eadog.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  data            1  [STACK] const unsigned char 
  8028 ;; Auto vars:     Size  Location     Type
  8029 ;;		None
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  1  [STACK] void 
  8032 ;; Registers used:
  8033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8034 ;; Tracked objects:
  8035 ;;		On entry : 3F/0
  8036 ;;		On exit  : 3F/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8043 ;;Total ram usage:        0 bytes
  8044 ;; Hardware stack levels used:    1
  8045 ;; Hardware stack levels required when called:   16
  8046 ;; This function calls:
  8047 ;;		_SPI1_Exchange8bit
  8048 ;;		_wdtdelay
  8049 ;; This function is called by:
  8050 ;;		_init_display
  8051 ;; This function uses a reentrant model
  8052 ;;
  8053                           
  8054                           	psect	text14
  8055  01CBB0                     __ptext14:
  8056                           	opt callstack 0
  8057  01CBB0                     _send_lcd_data:
  8058                           	opt callstack 13
  8059                           
  8060                           ; BSR set to: 61
  8061                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8062                           ;incstack = 0
  8063                           ;eadog.c: 123: static void send_lcd_data(const uint8_t data);eadog.c: 124: {;eadog.c: 12
      +                          5:  do { LATCbits.LATC2 = 0; } while(0);
  8064  01CBB0  94BC               	bcf	188,2,c	;volatile
  8065                           
  8066                           ;eadog.c: 126:  SPI1_Exchange8bit(data);
  8067                           ;stkvar	_data @ sp[(0)+-1]
  8068  01CBB2  0EFF               	movlw	-1
  8069  01CBB4  50E3               	movf	plusw1,w,c
  8070  01CBB6  6EE6               	movwf	postinc1,c
  8071  01CBB8  EC97  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  8072                           
  8073                           ; BSR set to: 57
  8074                           ;eadog.c: 127:  wdtdelay(8);
  8075  01CBBC  0E08               	movlw	8
  8076  01CBBE  6EE6               	movwf	postinc1,c
  8077  01CBC0  0E00               	movlw	0
  8078  01CBC2  6EE6               	movwf	postinc1,c
  8079  01CBC4  0E00               	movlw	0
  8080  01CBC6  6EE6               	movwf	postinc1,c
  8081  01CBC8  0E00               	movlw	0
  8082  01CBCA  6EE6               	movwf	postinc1,c
  8083  01CBCC  ECDA  F0DF         	call	_wdtdelay	;wreg free
  8084                           
  8085                           ; BSR set to: 0
  8086                           ; _send_lcd_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1,
      +                           argsize = 1, vargsize = 0
  8087  01CBD0  52E5               	movf	postdec1,f,c
  8088  01CBD2  0012               	return		;funcret
  8089  01CBD4                     __end_of_send_lcd_data:
  8090                           	opt callstack 0
  8091                           
  8092 ;; *************** function _send_lcd_cmd_long *****************
  8093 ;; Defined at:
  8094 ;;		line 139 in file "eadog.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;  cmd             1  [STACK] const unsigned char 
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;		None
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  1  [STACK] void 
  8101 ;; Registers used:
  8102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8103 ;; Tracked objects:
  8104 ;;		On entry : 3F/0
  8105 ;;		On exit  : 3F/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8112 ;;Total ram usage:        0 bytes
  8113 ;; Hardware stack levels used:    1
  8114 ;; Hardware stack levels required when called:   16
  8115 ;; This function calls:
  8116 ;;		_SPI1_Exchange8bit
  8117 ;;		_wdtdelay
  8118 ;; This function is called by:
  8119 ;;		_init_display
  8120 ;; This function uses a reentrant model
  8121 ;;
  8122                           
  8123                           	psect	text15
  8124  01C420                     __ptext15:
  8125                           	opt callstack 0
  8126  01C420                     _send_lcd_cmd_long:
  8127                           	opt callstack 13
  8128                           
  8129                           ; BSR set to: 0
  8130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8131                           ;incstack = 0
  8132                           ;eadog.c: 139: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 140: {;eadog.c:
      +                           141:  do { LATCbits.LATC2 = 0; } while(0);
  8133  01C420  94BC               	bcf	188,2,c	;volatile
  8134                           
  8135                           ;eadog.c: 142:  SPI1_Exchange8bit(0xFE);
  8136  01C422  0EFE               	movlw	254
  8137  01C424  6EE6               	movwf	postinc1,c
  8138  01C426  EC97  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  8139                           
  8140                           ; BSR set to: 57
  8141                           ;eadog.c: 143:  wdtdelay(8);
  8142  01C42A  0E08               	movlw	8
  8143  01C42C  6EE6               	movwf	postinc1,c
  8144  01C42E  0E00               	movlw	0
  8145  01C430  6EE6               	movwf	postinc1,c
  8146  01C432  0E00               	movlw	0
  8147  01C434  6EE6               	movwf	postinc1,c
  8148  01C436  0E00               	movlw	0
  8149  01C438  6EE6               	movwf	postinc1,c
  8150  01C43A  ECDA  F0DF         	call	_wdtdelay	;wreg free
  8151                           
  8152                           ; BSR set to: 0
  8153                           ;eadog.c: 144:  SPI1_Exchange8bit(cmd);
  8154                           ;stkvar	_cmd @ sp[(0)+-1]
  8155  01C43E  0EFF               	movlw	-1
  8156  01C440  50E3               	movf	plusw1,w,c
  8157  01C442  6EE6               	movwf	postinc1,c
  8158  01C444  EC97  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  8159                           
  8160                           ;eadog.c: 145:  wdtdelay(800);
  8161  01C448  0E20               	movlw	32
  8162  01C44A  6EE6               	movwf	postinc1,c
  8163  01C44C  0E03               	movlw	3
  8164  01C44E  6EE6               	movwf	postinc1,c
  8165  01C450  0E00               	movlw	0
  8166  01C452  6EE6               	movwf	postinc1,c
  8167  01C454  0E00               	movlw	0
  8168  01C456  6EE6               	movwf	postinc1,c
  8169  01C458  ECDA  F0DF         	call	_wdtdelay	;wreg free
  8170                           
  8171                           ; BSR set to: 0
  8172                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8173  01C45C  52E5               	movf	postdec1,f,c
  8174  01C45E  0012               	return		;funcret
  8175  01C460                     __end_of_send_lcd_cmd_long:
  8176                           	opt callstack 0
  8177                           
  8178 ;; *************** function _send_lcd_cmd *****************
  8179 ;; Defined at:
  8180 ;;		line 130 in file "eadog.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;  cmd             1  [STACK] const unsigned char 
  8183 ;; Auto vars:     Size  Location     Type
  8184 ;;		None
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  1  [STACK] void 
  8187 ;; Registers used:
  8188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8189 ;; Tracked objects:
  8190 ;;		On entry : 3F/0
  8191 ;;		On exit  : 3F/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8198 ;;Total ram usage:        0 bytes
  8199 ;; Hardware stack levels used:    1
  8200 ;; Hardware stack levels required when called:   16
  8201 ;; This function calls:
  8202 ;;		_SPI1_Exchange8bit
  8203 ;;		_wdtdelay
  8204 ;; This function is called by:
  8205 ;;		_init_display
  8206 ;; This function uses a reentrant model
  8207 ;;
  8208                           
  8209                           	psect	text16
  8210  01C460                     __ptext16:
  8211                           	opt callstack 0
  8212  01C460                     _send_lcd_cmd:
  8213                           	opt callstack 13
  8214                           
  8215                           ; BSR set to: 0
  8216                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8217                           ;incstack = 0
  8218                           ;eadog.c: 130: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 131: {;eadog.c: 132:
      +                            do { LATCbits.LATC2 = 0; } while(0);
  8219  01C460  94BC               	bcf	188,2,c	;volatile
  8220                           
  8221                           ;eadog.c: 133:  SPI1_Exchange8bit(0xFE);
  8222  01C462  0EFE               	movlw	254
  8223  01C464  6EE6               	movwf	postinc1,c
  8224  01C466  EC97  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  8225                           
  8226                           ; BSR set to: 57
  8227                           ;eadog.c: 134:  wdtdelay(8);
  8228  01C46A  0E08               	movlw	8
  8229  01C46C  6EE6               	movwf	postinc1,c
  8230  01C46E  0E00               	movlw	0
  8231  01C470  6EE6               	movwf	postinc1,c
  8232  01C472  0E00               	movlw	0
  8233  01C474  6EE6               	movwf	postinc1,c
  8234  01C476  0E00               	movlw	0
  8235  01C478  6EE6               	movwf	postinc1,c
  8236  01C47A  ECDA  F0DF         	call	_wdtdelay	;wreg free
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;eadog.c: 135:  SPI1_Exchange8bit(cmd);
  8240                           ;stkvar	_cmd @ sp[(0)+-1]
  8241  01C47E  0EFF               	movlw	-1
  8242  01C480  50E3               	movf	plusw1,w,c
  8243  01C482  6EE6               	movwf	postinc1,c
  8244  01C484  EC97  F0E6         	call	_SPI1_Exchange8bit	;wreg free
  8245                           
  8246                           ;eadog.c: 136:  wdtdelay(8);
  8247  01C488  0E08               	movlw	8
  8248  01C48A  6EE6               	movwf	postinc1,c
  8249  01C48C  0E00               	movlw	0
  8250  01C48E  6EE6               	movwf	postinc1,c
  8251  01C490  0E00               	movlw	0
  8252  01C492  6EE6               	movwf	postinc1,c
  8253  01C494  0E00               	movlw	0
  8254  01C496  6EE6               	movwf	postinc1,c
  8255  01C498  ECDA  F0DF         	call	_wdtdelay	;wreg free
  8256                           
  8257                           ; BSR set to: 0
  8258                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  8259  01C49C  52E5               	movf	postdec1,f,c
  8260  01C49E  0012               	return		;funcret
  8261  01C4A0                     __end_of_send_lcd_cmd:
  8262                           	opt callstack 0
  8263                           
  8264 ;; *************** function _SPI1_Exchange8bit *****************
  8265 ;; Defined at:
  8266 ;;		line 79 in file "mcc_generated_files/spi1.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;  data            1  [STACK] unsigned char 
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;		None
  8271 ;; Return value:  Size  Location     Type
  8272 ;;                  1  [STACK] unsigned char 
  8273 ;; Registers used:
  8274 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  8275 ;; Tracked objects:
  8276 ;;		On entry : 0/0
  8277 ;;		On exit  : 3F/39
  8278 ;;		Unchanged: 0/0
  8279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8284 ;;Total ram usage:        0 bytes
  8285 ;; Hardware stack levels used:    1
  8286 ;; Hardware stack levels required when called:   15
  8287 ;; This function calls:
  8288 ;;		Nothing
  8289 ;; This function is called by:
  8290 ;;		_send_lcd_data
  8291 ;;		_send_lcd_cmd
  8292 ;;		_send_lcd_cmd_long
  8293 ;;		_set_dac
  8294 ;; This function uses a reentrant model
  8295 ;;
  8296                           
  8297                           	psect	text17
  8298  01CD2E                     __ptext17:
  8299                           	opt callstack 0
  8300  01CD2E                     _SPI1_Exchange8bit:
  8301                           	opt callstack 14
  8302                           
  8303                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  8304                           
  8305                           ; BSR set to: 0
  8306                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8307                           ;incstack = 0
  8308  01CD2E  0E01               	movlw	1
  8309  01CD30  013D               	movlb	61	; () banked
  8310  01CD32  6F12               	movwf	18,b	;volatile
  8311                           
  8312                           ; BSR set to: 61
  8313                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  8314                           ;stkvar	_data @ sp[(0)+-1]
  8315  01CD34  0EFF               	movlw	-1
  8316  01CD36  006F FF8F FD11     	movff	plusw1,15633	;volatile
  8317  01CD3C                     l807:
  8318                           
  8319                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  8320  01CD3C  0139               	movlb	57	; () banked
  8321  01CD3E  A9A2               	btfss	162,4,b	;volatile
  8322  01CD40  D7FD               	goto	l807
  8323                           
  8324                           ; BSR set to: 57
  8325                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  8326  01CD42  006F F440  F001    	movff	15632,btemp	;volatile
  8327                           
  8328                           ; BSR set to: 57
  8329                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8330  01CD48  52E5               	movf	postdec1,f,c
  8331  01CD4A  0012               	return		;funcret
  8332  01CD4C                     __end_of_SPI1_Exchange8bit:
  8333                           	opt callstack 0
  8334                           
  8335 ;; *************** function _ringBufS_init *****************
  8336 ;; Defined at:
  8337 ;;		line 22 in file "ringbufs.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;  _this           2  [STACK] PTR volatile struct ring
  8340 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;		None
  8343 ;; Return value:  Size  Location     Type
  8344 ;;                  1  [STACK] void 
  8345 ;; Registers used:
  8346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/1
  8349 ;;		On exit  : 0/0
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8356 ;;Total ram usage:        0 bytes
  8357 ;; Hardware stack levels used:    1
  8358 ;; Hardware stack levels required when called:   16
  8359 ;; This function calls:
  8360 ;;		_memset
  8361 ;; This function is called by:
  8362 ;;		_init_display
  8363 ;; This function uses a reentrant model
  8364 ;;
  8365                           
  8366                           	psect	text18
  8367  01C956                     __ptext18:
  8368                           	opt callstack 0
  8369  01C956                     _ringBufS_init:
  8370                           	opt callstack 13
  8371                           
  8372                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  8373                           
  8374                           ; BSR set to: 57
  8375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8376                           ;incstack = 0
  8377  01C956  0E43               	movlw	67
  8378  01C958  6EE6               	movwf	postinc1,c
  8379  01C95A  0E00               	movlw	0
  8380  01C95C  6EE6               	movwf	postinc1,c
  8381  01C95E  0E00               	movlw	0
  8382  01C960  6EE6               	movwf	postinc1,c
  8383  01C962  0E00               	movlw	0
  8384  01C964  6EE6               	movwf	postinc1,c
  8385                           
  8386                           ;stkvar	__this @ sp[(-4)+-2]
  8387  01C966  0EFA               	movlw	-6
  8388  01C968  006F FF8F FFE6     	movff	plusw1,postinc1
  8389  01C96E  006F FF8F FFE6     	movff	plusw1,postinc1
  8390  01C974  EC07  F0BA         	call	_memset	;wreg free
  8391                           
  8392                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8393  01C978  52E5               	movf	postdec1,f,c
  8394  01C97A  52E5               	movf	postdec1,f,c
  8395  01C97C  0012               	return		;funcret
  8396  01C97E                     __end_of_ringBufS_init:
  8397                           	opt callstack 0
  8398                           
  8399 ;; *************** function _init_bsoc *****************
  8400 ;; Defined at:
  8401 ;;		line 110 in file "bsoc.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;		None
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;		None
  8406 ;; Return value:  Size  Location     Type
  8407 ;;                  1  [STACK] void 
  8408 ;; Registers used:
  8409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8410 ;; Tracked objects:
  8411 ;;		On entry : 0/0
  8412 ;;		On exit  : 0/0
  8413 ;;		Unchanged: 0/0
  8414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8419 ;;Total ram usage:        0 bytes
  8420 ;; Hardware stack levels used:    1
  8421 ;; Hardware stack levels required when called:   18
  8422 ;; This function calls:
  8423 ;;		_TMR3_SetInterruptHandler
  8424 ;;		_Volts_to_SOC
  8425 ;;		___fldiv
  8426 ;;		___flmul
  8427 ;;		___fltol
  8428 ;;		___xxtofl
  8429 ;;		_conv_raw_result
  8430 ;; This function is called by:
  8431 ;;		_main
  8432 ;; This function uses a reentrant model
  8433 ;;
  8434                           
  8435                           	psect	text19
  8436  018184                     __ptext19:
  8437                           	opt callstack 0
  8438  018184                     _init_bsoc:
  8439                           	opt callstack 12
  8440                           
  8441                           ;bsoc.c: 115:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  8442                           
  8443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8444                           ;incstack = 0
  8445  018184  0E00               	movlw	0
  8446  018186  6EE6               	movwf	postinc1,c
  8447  018188  0E00               	movlw	0
  8448  01818A  6EE6               	movwf	postinc1,c
  8449  01818C  0E7A               	movlw	122
  8450  01818E  6EE6               	movwf	postinc1,c
  8451  018190  0E44               	movlw	68
  8452  018192  6EE6               	movwf	postinc1,c
  8453  018194  0E00               	movlw	0
  8454  018196  6EE6               	movwf	postinc1,c
  8455  018198  0E04               	movlw	4
  8456  01819A  6EE6               	movwf	postinc1,c
  8457  01819C  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  8458  0181A0  0060  F007  FFE6   	movff	btemp,postinc1
  8459  0181A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8460  0181AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8461  0181B2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8462  0181B8  EC2A  F0CB         	call	___fltol	;wreg free
  8463  0181BC  0060  F007  FFE6   	movff	btemp,postinc1
  8464  0181C2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8465  0181C8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8466  0181CE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8467  0181D4  0E00               	movlw	0
  8468  0181D6  6EE6               	movwf	postinc1,c
  8469  0181D8  EC2C  F0C6         	call	___xxtofl	;wreg free
  8470  0181DC  0060  F007  FFE6   	movff	btemp,postinc1
  8471  0181E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8472  0181E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8473  0181EE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8474  0181F4  EC6E  F09F         	call	___flmul	;wreg free
  8475  0181F8  0060  F007  FFE6   	movff	btemp,postinc1
  8476  0181FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8477  018204  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8478  01820A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8479  018210  EC2A  F0CB         	call	___fltol	;wreg free
  8480  018214  0060  F007  FFE6   	movff	btemp,postinc1
  8481  01821A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8482  018220  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8483  018226  0060  F013  FFE6   	movff	btemp+3,postinc1
  8484  01822C  EC84  F0D7         	call	_Volts_to_SOC	;wreg free
  8485  018230  0060  F004  F7B5   	movff	btemp,_C+182	;volatile
  8486  018236  0060  F008  F7B6   	movff	btemp+1,_C+183	;volatile
  8487                           
  8488                           ;bsoc.c: 116:  C.dynamic_ah = C.bank_ah * (Volts_to_SOC((uint32_t) conv_raw_result(V_BAT
      +                          , CONV) * 1000.0) / 100.0);
  8489  01823C  EE21  F38B         	lfsr	2,_C+140	;volatile
  8490  018240  006F FF7B FFE6     	movff	postinc2,postinc1
  8491  018246  006F FF7B FFE6     	movff	postinc2,postinc1
  8492  01824C  006F FF7B FFE6     	movff	postinc2,postinc1
  8493  018252  006F FF7B FFE6     	movff	postinc2,postinc1
  8494  018258  0E00               	movlw	0
  8495  01825A  6EE6               	movwf	postinc1,c
  8496  01825C  0E00               	movlw	0
  8497  01825E  6EE6               	movwf	postinc1,c
  8498  018260  0EC8               	movlw	200
  8499  018262  6EE6               	movwf	postinc1,c
  8500  018264  0E42               	movlw	66
  8501  018266  6EE6               	movwf	postinc1,c
  8502  018268  0E00               	movlw	0
  8503  01826A  6EE6               	movwf	postinc1,c
  8504  01826C  0E00               	movlw	0
  8505  01826E  6EE6               	movwf	postinc1,c
  8506  018270  0E7A               	movlw	122
  8507  018272  6EE6               	movwf	postinc1,c
  8508  018274  0E44               	movlw	68
  8509  018276  6EE6               	movwf	postinc1,c
  8510  018278  0E00               	movlw	0
  8511  01827A  6EE6               	movwf	postinc1,c
  8512  01827C  0E04               	movlw	4
  8513  01827E  6EE6               	movwf	postinc1,c
  8514  018280  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  8515  018284  0060  F007  FFE6   	movff	btemp,postinc1
  8516  01828A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8517  018290  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8518  018296  0060  F013  FFE6   	movff	btemp+3,postinc1
  8519  01829C  EC2A  F0CB         	call	___fltol	;wreg free
  8520  0182A0  0060  F007  FFE6   	movff	btemp,postinc1
  8521  0182A6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8522  0182AC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8523  0182B2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8524  0182B8  0E00               	movlw	0
  8525  0182BA  6EE6               	movwf	postinc1,c
  8526  0182BC  EC2C  F0C6         	call	___xxtofl	;wreg free
  8527  0182C0  0060  F007  FFE6   	movff	btemp,postinc1
  8528  0182C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8529  0182CC  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8530  0182D2  0060  F013  FFE6   	movff	btemp+3,postinc1
  8531  0182D8  EC6E  F09F         	call	___flmul	;wreg free
  8532  0182DC  0060  F007  FFE6   	movff	btemp,postinc1
  8533  0182E2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8534  0182E8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8535  0182EE  0060  F013  FFE6   	movff	btemp+3,postinc1
  8536  0182F4  EC2A  F0CB         	call	___fltol	;wreg free
  8537  0182F8  0060  F007  FFE6   	movff	btemp,postinc1
  8538  0182FE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8539  018304  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8540  01830A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8541  018310  EC84  F0D7         	call	_Volts_to_SOC	;wreg free
  8542  018314  0060  F004  F00B   	movff	btemp,btemp+10
  8543  01831A  0060  F008  F00C   	movff	btemp+1,btemp+11
  8544  018320  500B               	movf	(btemp+10)^0,w,c
  8545  018322  6E05               	movwf	(btemp+4)^0,c
  8546  018324  500C               	movf	(btemp+11)^0,w,c
  8547  018326  6E06               	movwf	(btemp+5)^0,c
  8548  018328  6A07               	clrf	(btemp+6)^0,c
  8549  01832A  6A08               	clrf	(btemp+7)^0,c
  8550  01832C  0060  F017  FFE6   	movff	btemp+4,postinc1
  8551  018332  0060  F01B  FFE6   	movff	btemp+5,postinc1
  8552  018338  0060  F01F  FFE6   	movff	btemp+6,postinc1
  8553  01833E  0060  F023  FFE6   	movff	btemp+7,postinc1
  8554  018344  0E00               	movlw	0
  8555  018346  6EE6               	movwf	postinc1,c
  8556  018348  EC2C  F0C6         	call	___xxtofl	;wreg free
  8557  01834C  0060  F007  FFE6   	movff	btemp,postinc1
  8558  018352  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8559  018358  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8560  01835E  0060  F013  FFE6   	movff	btemp+3,postinc1
  8561  018364  EC61  F0A7         	call	___fldiv	;wreg free
  8562  018368  0060  F007  FFE6   	movff	btemp,postinc1
  8563  01836E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8564  018374  0060  F00F  FFE6   	movff	btemp+2,postinc1
  8565  01837A  0060  F013  FFE6   	movff	btemp+3,postinc1
  8566  018380  EC6E  F09F         	call	___flmul	;wreg free
  8567  018384  0060  F004  F78F   	movff	btemp,_C+144	;volatile
  8568  01838A  0060  F008  F790   	movff	btemp+1,_C+145	;volatile
  8569  018390  0060  F00C  F791   	movff	btemp+2,_C+146	;volatile
  8570  018396  0060  F010  F792   	movff	btemp+3,_C+147	;volatile
  8571                           
  8572                           ;bsoc.c: 117:  C.dynamic_ah_adj = C.dynamic_ah;
  8573  01839C  EE21  F38F         	lfsr	2,_C+144	;volatile
  8574  0183A0  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
  8575  0183A6  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
  8576  0183AC  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
  8577  0183B2  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
  8578                           
  8579                           ;bsoc.c: 118:  TMR3_SetInterruptHandler(calc_bsoc);
  8580  0183B8  0E6E               	movlw	low _calc_bsoc
  8581  0183BA  6EE6               	movwf	postinc1,c
  8582  0183BC  0E34               	movlw	high _calc_bsoc
  8583  0183BE  6EE6               	movwf	postinc1,c
  8584  0183C0  0E01               	movlw	low (_calc_bsoc shr (0+16))
  8585  0183C2  6EE6               	movwf	postinc1,c
  8586  0183C4  EC37  F0E5         	call	_TMR3_SetInterruptHandler	;wreg free
  8587                           
  8588                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8589  0183C8  0012               	return		;funcret
  8590  0183CA                     __end_of_init_bsoc:
  8591                           	opt callstack 0
  8592                           
  8593 ;; *************** function _Volts_to_SOC *****************
  8594 ;; Defined at:
  8595 ;;		line 175 in file "bsoc.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;  cvoltage        4  [STACK] const unsigned long 
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;  soc             2  [STACK] unsigned short 
  8600 ;;  slot            1  [STACK] unsigned char 
  8601 ;; Return value:  Size  Location     Type
  8602 ;;                  2  [STACK] unsigned short 
  8603 ;; Registers used:
  8604 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  8605 ;; Tracked objects:
  8606 ;;		On entry : 0/0
  8607 ;;		On exit  : 0/0
  8608 ;;		Unchanged: 0/0
  8609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8614 ;;Total ram usage:        0 bytes
  8615 ;; Hardware stack levels used:    1
  8616 ;; Hardware stack levels required when called:   15
  8617 ;; This function calls:
  8618 ;;		Nothing
  8619 ;; This function is called by:
  8620 ;;		_init_bsoc
  8621 ;; This function uses a reentrant model
  8622 ;;
  8623                           
  8624                           	psect	text20
  8625  01AF08                     __ptext20:
  8626                           	opt callstack 0
  8627  01AF08                     _Volts_to_SOC:
  8628                           	opt callstack 0
  8629                           
  8630                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8631  01AF08  52E6               	movf	postinc1,f,c
  8632  01AF0A  52E6               	movf	postinc1,f,c
  8633  01AF0C  52E6               	movf	postinc1,f,c
  8634                           
  8635                           ;bsoc.c: 175: uint16_t Volts_to_SOC(const uint32_t cvoltage);bsoc.c: 176: {;bsoc.c: 177:
      +                            uint8_t slot;;bsoc.c: 178:  uint16_t soc = 0;
  8636                           ;stkvar	_soc @ sp[(-3)+0]
  8637                           
  8638                           ;incstack = 0
  8639  01AF0E  0EFD               	movlw	-3
  8640  01AF10  6AE3               	clrf	plusw1,c
  8641  01AF12  0EFE               	movlw	-2
  8642  01AF14  6AE3               	clrf	plusw1,c
  8643                           
  8644                           ;bsoc.c: 183:  for (slot = 0; slot < 26; slot++) {
  8645                           ;stkvar	_slot @ sp[(-3)+2]
  8646  01AF16  0EFF               	movlw	-1
  8647  01AF18  6AE3               	clrf	plusw1,c
  8648  01AF1A                     l11306:
  8649                           
  8650                           ;bsoc.c: 184:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  8651                           ;stkvar	_cvoltage @ sp[(-3)+-4]
  8652                           ;stkvar	_slot @ sp[(-3)+2]
  8653  01AF1A  0EFF               	movlw	-1
  8654  01AF1C  50E3               	movf	plusw1,w,c
  8655  01AF1E  0D08               	mullw	8
  8656  01AF20  0EE3               	movlw	low _BVSOC_TABLE
  8657  01AF22  24F3               	addwf	243,w,c
  8658  01AF24  6EF6               	movwf	tblptrl,c
  8659  01AF26  0EF8               	movlw	high _BVSOC_TABLE
  8660  01AF28  20F4               	addwfc	244,w,c
  8661  01AF2A  6EF7               	movwf	tblptrh,c
  8662  01AF2C                     	if	1	;There are 3 active tblptr bytes
  8663  01AF2C  6AF8               	clrf	tblptru,c
  8664  01AF2E  0E00               	movlw	low (__mediumconst shr (0+16))
  8665  01AF30  22F8               	addwfc	tblptru,f,c
  8666  01AF32                     	endif
  8667  01AF32  0EF9               	movlw	-7
  8668  01AF34  50E3               	movf	plusw1,w,c
  8669  01AF36  0009               	tblrd		*+
  8670  01AF38  5CF5               	subwf	tablat,w,c
  8671  01AF3A  0EFA               	movlw	-6
  8672  01AF3C  50E3               	movf	plusw1,w,c
  8673  01AF3E  0009               	tblrd		*+
  8674  01AF40  58F5               	subwfb	tablat,w,c
  8675  01AF42  0EFB               	movlw	-5
  8676  01AF44  50E3               	movf	plusw1,w,c
  8677  01AF46  0009               	tblrd		*+
  8678  01AF48  58F5               	subwfb	tablat,w,c
  8679  01AF4A  0EFC               	movlw	-4
  8680  01AF4C  50E3               	movf	plusw1,w,c
  8681  01AF4E  0009               	tblrd		*+
  8682  01AF50  58F5               	subwfb	tablat,w,c
  8683  01AF52  B0D8               	btfsc	status,0,c
  8684  01AF54  D020               	goto	l11310
  8685                           
  8686                           ;bsoc.c: 185:    soc = BVSOC_TABLE[slot][1];
  8687                           ;stkvar	_slot @ sp[(-3)+2]
  8688  01AF56  0EFF               	movlw	-1
  8689  01AF58  50E3               	movf	plusw1,w,c
  8690  01AF5A  0D08               	mullw	8
  8691  01AF5C  0E04               	movlw	4
  8692  01AF5E  26F3               	addwf	243,f,c
  8693  01AF60  0E00               	movlw	0
  8694  01AF62  22F4               	addwfc	244,f,c
  8695  01AF64  0EE3               	movlw	low _BVSOC_TABLE
  8696  01AF66  24F3               	addwf	243,w,c
  8697  01AF68  6EF6               	movwf	tblptrl,c
  8698  01AF6A  0EF8               	movlw	high _BVSOC_TABLE
  8699  01AF6C  20F4               	addwfc	244,w,c
  8700  01AF6E  6EF7               	movwf	tblptrh,c
  8701  01AF70                     	if	1	;There are 3 active tblptr bytes
  8702  01AF70  6AF8               	clrf	tblptru,c
  8703  01AF72  0E00               	movlw	low (__mediumconst shr (0+16))
  8704  01AF74  22F8               	addwfc	tblptru,f,c
  8705  01AF76                     	endif
  8706  01AF76  0009               	tblrd		*+
  8707  01AF78  006F FFD4  F00B    	movff	tablat,btemp+10
  8708  01AF7E  0009               	tblrd		*+
  8709  01AF80  006F FFD4  F00C    	movff	tablat,btemp+11
  8710                           
  8711                           ;stkvar	_soc @ sp[(-3)+0]
  8712  01AF86  0EFD               	movlw	-3
  8713  01AF88  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8714  01AF8E  0EFE               	movlw	-2
  8715  01AF90  0060  F033  FFE3   	movff	btemp+11,plusw1
  8716  01AF96                     l11310:
  8717                           
  8718                           ;bsoc.c: 187:  }
  8719                           ;stkvar	_slot @ sp[(-3)+2]
  8720  01AF96  0EFF               	movlw	-1
  8721  01AF98  2AE3               	incf	plusw1,f,c
  8722                           
  8723                           ;stkvar	_slot @ sp[(-3)+2]
  8724  01AF9A  0EFF               	movlw	-1
  8725  01AF9C  006F FF8C  F001    	movff	plusw1,btemp
  8726  01AFA2  0E19               	movlw	25
  8727  01AFA4  6401               	cpfsgt	btemp^0,c
  8728  01AFA6  D7B9               	goto	l11306
  8729                           
  8730                           ;bsoc.c: 188:  return soc;
  8731                           ;stkvar	_soc @ sp[(-3)+0]
  8732  01AFA8  0EFD               	movlw	-3
  8733  01AFAA  006F FF8C  F001    	movff	plusw1,btemp
  8734  01AFB0  0EFE               	movlw	-2
  8735  01AFB2  006F FF8C  F002    	movff	plusw1,btemp+1
  8736                           
  8737                           ; _Volts_to_SOC: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  8738  01AFB8  0EF9               	movlw	249
  8739  01AFBA  26E1               	addwf	fsr1l,f,c
  8740  01AFBC  0EFF               	movlw	255
  8741  01AFBE  22E2               	addwfc	fsr1h,f,c
  8742  01AFC0  0012               	return		;funcret
  8743  01AFC2                     __end_of_Volts_to_SOC:
  8744                           	opt callstack 0
  8745                           
  8746 ;; *************** function _hid_display *****************
  8747 ;; Defined at:
  8748 ;;		line 22 in file "hid.c"
  8749 ;; Parameters:    Size  Location     Type
  8750 ;;  h               2  [STACK] PTR struct H_data
  8751 ;;		 -> H(9), 
  8752 ;; Auto vars:     Size  Location     Type
  8753 ;;		None
  8754 ;; Return value:  Size  Location     Type
  8755 ;;                  2  [STACK] PTR struct H_data
  8756 ;; Registers used:
  8757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl, prodh
  8758 ;; Tracked objects:
  8759 ;;		On entry : 3F/39
  8760 ;;		On exit  : 0/0
  8761 ;;		Unchanged: 0/0
  8762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8767 ;;Total ram usage:        0 bytes
  8768 ;; Hardware stack levels used:    1
  8769 ;; Hardware stack levels required when called:   17
  8770 ;; This function calls:
  8771 ;;		_hid_input
  8772 ;; This function is called by:
  8773 ;;		_main
  8774 ;; This function uses a reentrant model
  8775 ;;
  8776                           
  8777                           	psect	text21
  8778  01882A                     __ptext21:
  8779                           	opt callstack 0
  8780  01882A                     _hid_display:
  8781                           	opt callstack 13
  8782                           
  8783                           ;hid.c: 22: H_data* hid_display(H_data* h);hid.c: 23: {;hid.c: 24:  hid_input(h);
  8784                           ;stkvar	_h @ sp[(0)+-2]
  8785                           
  8786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8787                           ;incstack = 0
  8788  01882A  0EFE               	movlw	-2
  8789  01882C  006F FF8F FFE6     	movff	plusw1,postinc1
  8790  018832  006F FF8F FFE6     	movff	plusw1,postinc1
  8791  018838  EC2D  F0CF         	call	_hid_input	;wreg free
  8792                           
  8793                           ;hid.c: 26:  switch (h->h_state) {
  8794  01883C  D0E6               	goto	l13898
  8795  01883E                     l13872:
  8796                           
  8797                           ;hid.c: 28:   h->h_state = H_STATE_DISPLAY;
  8798                           ;stkvar	_h @ sp[(0)+-2]
  8799  01883E  0EFE               	movlw	-2
  8800  018840  006F FF8C  F00B    	movff	plusw1,btemp+10
  8801  018846  0EFF               	movlw	-1
  8802  018848  006F FF8C  F00C    	movff	plusw1,btemp+11
  8803  01884E  0E01               	movlw	1
  8804  018850  240B               	addwf	(btemp+10)^0,w,c
  8805  018852  6ED9               	movwf	fsr2l,c
  8806  018854  0E00               	movlw	0
  8807  018856  200C               	addwfc	(btemp+11)^0,w,c
  8808  018858  6EDA               	movwf	fsr2h,c
  8809  01885A  0E01               	movlw	1
  8810  01885C  6EDF               	movwf	indf2,c
  8811                           
  8812                           ;hid.c: 29:   h->hid_display = HID_MAIN;
  8813                           ;stkvar	_h @ sp[(0)+-2]
  8814  01885E  0EFE               	movlw	-2
  8815  018860  006F FF8F FFD9     	movff	plusw1,fsr2l
  8816  018866  0EFF               	movlw	-1
  8817  018868  006F FF8F FFDA     	movff	plusw1,fsr2h
  8818  01886E  0E00               	movlw	0
  8819  018870  6EDF               	movwf	indf2,c
  8820                           
  8821                           ;hid.c: 30:   h->wait_enter = 1;
  8822                           ;stkvar	_h @ sp[(0)+-2]
  8823  018872  0EFE               	movlw	-2
  8824  018874  006F FF8C  F00B    	movff	plusw1,btemp+10
  8825  01887A  0EFF               	movlw	-1
  8826  01887C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8827  018882  0E04               	movlw	4
  8828  018884  240B               	addwf	(btemp+10)^0,w,c
  8829  018886  6ED9               	movwf	fsr2l,c
  8830  018888  0E00               	movlw	0
  8831  01888A  200C               	addwfc	(btemp+11)^0,w,c
  8832  01888C  6EDA               	movwf	fsr2h,c
  8833  01888E  0E01               	movlw	1
  8834  018890  6EDF               	movwf	indf2,c
  8835                           
  8836                           ;hid.c: 31:   h->wait_select = 1;
  8837                           ;stkvar	_h @ sp[(0)+-2]
  8838  018892  0EFE               	movlw	-2
  8839  018894  006F FF8C  F00B    	movff	plusw1,btemp+10
  8840  01889A  0EFF               	movlw	-1
  8841  01889C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8842  0188A2  0E02               	movlw	2
  8843  0188A4  240B               	addwf	(btemp+10)^0,w,c
  8844  0188A6  6ED9               	movwf	fsr2l,c
  8845  0188A8  0E00               	movlw	0
  8846  0188AA  200C               	addwfc	(btemp+11)^0,w,c
  8847  0188AC  6EDA               	movwf	fsr2h,c
  8848  0188AE  0E01               	movlw	1
  8849  0188B0  6EDF               	movwf	indf2,c
  8850                           
  8851                           ;hid.c: 32:   h->wait_calib = 1;
  8852                           ;stkvar	_h @ sp[(0)+-2]
  8853  0188B2  0EFE               	movlw	-2
  8854  0188B4  006F FF8C  F00B    	movff	plusw1,btemp+10
  8855  0188BA  0EFF               	movlw	-1
  8856  0188BC  006F FF8C  F00C    	movff	plusw1,btemp+11
  8857  0188C2  0E06               	movlw	6
  8858  0188C4  240B               	addwf	(btemp+10)^0,w,c
  8859  0188C6  6ED9               	movwf	fsr2l,c
  8860  0188C8  0E00               	movlw	0
  8861  0188CA  200C               	addwfc	(btemp+11)^0,w,c
  8862  0188CC  6EDA               	movwf	fsr2h,c
  8863  0188CE  0E01               	movlw	1
  8864  0188D0  6EDF               	movwf	indf2,c
  8865                           
  8866                           ;hid.c: 33:   h->select_p = SW_OFF;
  8867                           ;stkvar	_h @ sp[(0)+-2]
  8868  0188D2  0EFE               	movlw	-2
  8869  0188D4  006F FF8C  F00B    	movff	plusw1,btemp+10
  8870  0188DA  0EFF               	movlw	-1
  8871  0188DC  006F FF8C  F00C    	movff	plusw1,btemp+11
  8872  0188E2  0E03               	movlw	3
  8873  0188E4  240B               	addwf	(btemp+10)^0,w,c
  8874  0188E6  6ED9               	movwf	fsr2l,c
  8875  0188E8  0E00               	movlw	0
  8876  0188EA  200C               	addwfc	(btemp+11)^0,w,c
  8877  0188EC  6EDA               	movwf	fsr2h,c
  8878  0188EE  0E00               	movlw	0
  8879  0188F0  6EDF               	movwf	indf2,c
  8880                           
  8881                           ;hid.c: 34:   h->enter_p = SW_OFF;
  8882                           ;stkvar	_h @ sp[(0)+-2]
  8883  0188F2  0EFE               	movlw	-2
  8884  0188F4  006F FF8C  F00B    	movff	plusw1,btemp+10
  8885  0188FA  0EFF               	movlw	-1
  8886  0188FC  006F FF8C  F00C    	movff	plusw1,btemp+11
  8887  018902  0E05               	movlw	5
  8888  018904  240B               	addwf	(btemp+10)^0,w,c
  8889  018906  6ED9               	movwf	fsr2l,c
  8890  018908  0E00               	movlw	0
  8891  01890A  200C               	addwfc	(btemp+11)^0,w,c
  8892  01890C  6EDA               	movwf	fsr2h,c
  8893  01890E  0E00               	movlw	0
  8894  018910  6EDF               	movwf	indf2,c
  8895                           
  8896                           ;hid.c: 35:   h->calib_p = SW_OFF;
  8897                           ;stkvar	_h @ sp[(0)+-2]
  8898  018912  0EFE               	movlw	-2
  8899  018914  006F FF8C  F00B    	movff	plusw1,btemp+10
  8900  01891A  0EFF               	movlw	-1
  8901  01891C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8902  018922  0E07               	movlw	7
  8903  018924  240B               	addwf	(btemp+10)^0,w,c
  8904  018926  6ED9               	movwf	fsr2l,c
  8905  018928  0E00               	movlw	0
  8906  01892A  200C               	addwfc	(btemp+11)^0,w,c
  8907  01892C  6EDA               	movwf	fsr2h,c
  8908  01892E  0E00               	movlw	0
  8909  018930  D06A               	goto	L5
  8910  018932                     l13888:
  8911                           
  8912                           ;hid.c: 39:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  8913                           ;stkvar	_h @ sp[(0)+-2]
  8914  018932  0EFE               	movlw	-2
  8915  018934  006F FF8C  F00B    	movff	plusw1,btemp+10
  8916  01893A  0EFF               	movlw	-1
  8917  01893C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8918  018942  0E02               	movlw	2
  8919  018944  240B               	addwf	(btemp+10)^0,w,c
  8920  018946  6ED9               	movwf	fsr2l,c
  8921  018948  0E00               	movlw	0
  8922  01894A  200C               	addwfc	(btemp+11)^0,w,c
  8923  01894C  6EDA               	movwf	fsr2h,c
  8924  01894E  50DF               	movf	indf2,w,c
  8925  018950  A4D8               	btfss	status,2,c
  8926  018952  D076               	goto	l2115
  8927                           
  8928                           ;stkvar	_h @ sp[(0)+-2]
  8929  018954  0EFE               	movlw	-2
  8930  018956  006F FF8C  F00B    	movff	plusw1,btemp+10
  8931  01895C  0EFF               	movlw	-1
  8932  01895E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8933  018964  0E03               	movlw	3
  8934  018966  240B               	addwf	(btemp+10)^0,w,c
  8935  018968  6ED9               	movwf	fsr2l,c
  8936  01896A  0E00               	movlw	0
  8937  01896C  200C               	addwfc	(btemp+11)^0,w,c
  8938  01896E  6EDA               	movwf	fsr2h,c
  8939  018970  50DF               	movf	indf2,w,c
  8940  018972  A4D8               	btfss	status,2,c
  8941  018974  D065               	goto	l2115
  8942                           
  8943                           ;hid.c: 40:    h->sequence = ++h->sequence & 0x3;
  8944                           ;stkvar	_h @ sp[(0)+-2]
  8945  018976  0EFE               	movlw	-2
  8946  018978  006F FF8C  F00B    	movff	plusw1,btemp+10
  8947  01897E  0EFF               	movlw	-1
  8948  018980  006F FF8C  F00C    	movff	plusw1,btemp+11
  8949  018986  0E08               	movlw	8
  8950  018988  240B               	addwf	(btemp+10)^0,w,c
  8951  01898A  6ED9               	movwf	fsr2l,c
  8952  01898C  0E00               	movlw	0
  8953  01898E  200C               	addwfc	(btemp+11)^0,w,c
  8954  018990  6EDA               	movwf	fsr2h,c
  8955                           
  8956                           ;stkvar	_h @ sp[(0)+-2]
  8957  018992  0EFE               	movlw	-2
  8958  018994  006F FF8C  F00B    	movff	plusw1,btemp+10
  8959  01899A  0EFF               	movlw	-1
  8960  01899C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8961  0189A2  0E08               	movlw	8
  8962  0189A4  240B               	addwf	(btemp+10)^0,w,c
  8963  0189A6  6EE9               	movwf	fsr0l,c
  8964  0189A8  0E00               	movlw	0
  8965  0189AA  200C               	addwfc	(btemp+11)^0,w,c
  8966  0189AC  6EEA               	movwf	fsr0h,c
  8967  0189AE  2AEF               	incf	indf0,f,c
  8968  0189B0  50EF               	movf	indf0,w,c
  8969  0189B2  0B03               	andlw	3
  8970  0189B4  6EDF               	movwf	indf2,c
  8971                           
  8972                           ;hid.c: 41:    h->hid_display = h->sequence;
  8973                           ;stkvar	_h @ sp[(0)+-2]
  8974  0189B6  0EFE               	movlw	-2
  8975  0189B8  006F FF8C  F00B    	movff	plusw1,btemp+10
  8976  0189BE  0EFF               	movlw	-1
  8977  0189C0  006F FF8C  F00C    	movff	plusw1,btemp+11
  8978  0189C6  0E08               	movlw	8
  8979  0189C8  240B               	addwf	(btemp+10)^0,w,c
  8980  0189CA  6ED9               	movwf	fsr2l,c
  8981  0189CC  0E00               	movlw	0
  8982  0189CE  200C               	addwfc	(btemp+11)^0,w,c
  8983  0189D0  6EDA               	movwf	fsr2h,c
  8984                           
  8985                           ;stkvar	_h @ sp[(0)+-2]
  8986  0189D2  0EFE               	movlw	-2
  8987  0189D4  006F FF8F FFE9     	movff	plusw1,fsr0l
  8988  0189DA  0EFF               	movlw	-1
  8989  0189DC  006F FF8F FFEA     	movff	plusw1,fsr0h
  8990  0189E2  006F FF7F FFEF     	movff	indf2,indf0
  8991                           
  8992                           ;hid.c: 42:    h->wait_select = 1;
  8993                           ;stkvar	_h @ sp[(0)+-2]
  8994  0189E8  0EFE               	movlw	-2
  8995  0189EA  006F FF8C  F00B    	movff	plusw1,btemp+10
  8996  0189F0  0EFF               	movlw	-1
  8997  0189F2  006F FF8C  F00C    	movff	plusw1,btemp+11
  8998  0189F8  0E02               	movlw	2
  8999  0189FA  240B               	addwf	(btemp+10)^0,w,c
  9000  0189FC  6ED9               	movwf	fsr2l,c
  9001  0189FE  0E00               	movlw	0
  9002  018A00  200C               	addwfc	(btemp+11)^0,w,c
  9003  018A02  6EDA               	movwf	fsr2h,c
  9004  018A04  0E01               	movlw	1
  9005  018A06                     L5:
  9006  018A06  6EDF               	movwf	indf2,c
  9007  018A08  D01B               	goto	l2115
  9008  018A0A                     l13898:
  9009                           
  9010                           ;stkvar	_h @ sp[(0)+-2]
  9011  018A0A  0EFE               	movlw	-2
  9012  018A0C  006F FF8C  F00B    	movff	plusw1,btemp+10
  9013  018A12  0EFF               	movlw	-1
  9014  018A14  006F FF8C  F00C    	movff	plusw1,btemp+11
  9015  018A1A  0E01               	movlw	1
  9016  018A1C  240B               	addwf	(btemp+10)^0,w,c
  9017  018A1E  6ED9               	movwf	fsr2l,c
  9018  018A20  0E00               	movlw	0
  9019  018A22  200C               	addwfc	(btemp+11)^0,w,c
  9020  018A24  6EDA               	movwf	fsr2h,c
  9021  018A26  50DF               	movf	indf2,w,c
  9022  018A28  6E0B               	movwf	(btemp+10)^0,c
  9023  018A2A  6A0C               	clrf	(btemp+11)^0,c
  9024                           
  9025                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9026                           ; Switch size 1, requested type "simple"
  9027                           ; Number of cases is 1, Range of values is 0 to 0
  9028                           ; switch strategies available:
  9029                           ; Name         Instructions Cycles
  9030                           ; simple_byte            4     3 (average)
  9031                           ;	Chosen strategy is simple_byte
  9032  018A2C  500C               	movf	(btemp+11)^0,w,c
  9033  018A2E  0A00               	xorlw	0	; case 0
  9034  018A30  A4D8               	btfss	status,2,c
  9035  018A32  D77F               	goto	l13888
  9036                           
  9037                           ; Switch size 1, requested type "simple"
  9038                           ; Number of cases is 2, Range of values is 0 to 1
  9039                           ; switch strategies available:
  9040                           ; Name         Instructions Cycles
  9041                           ; simple_byte            7     4 (average)
  9042                           ;	Chosen strategy is simple_byte
  9043  018A34  500B               	movf	(btemp+10)^0,w,c
  9044  018A36  0A00               	xorlw	0	; case 0
  9045  018A38  B4D8               	btfsc	status,2,c
  9046  018A3A  D701               	goto	l13872
  9047  018A3C  0A01               	xorlw	1	; case 1
  9048  018A3E  D779               	goto	l13888
  9049  018A40                     l2115:
  9050                           
  9051                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  9052  018A40  52E5               	movf	postdec1,f,c
  9053  018A42  52E5               	movf	postdec1,f,c
  9054  018A44  0012               	return		;funcret
  9055  018A46                     __end_of_hid_display:
  9056                           	opt callstack 0
  9057                           
  9058 ;; *************** function _hid_input *****************
  9059 ;; Defined at:
  9060 ;;		line 3 in file "hid.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;  h               2  [STACK] PTR struct H_data
  9063 ;;		 -> H(9), 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;		None
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  2  [STACK] PTR struct H_data
  9068 ;; Registers used:
  9069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/39
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9079 ;;Total ram usage:        0 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; Hardware stack levels required when called:   16
  9082 ;; This function calls:
  9083 ;;		_get_switch
  9084 ;; This function is called by:
  9085 ;;		_hid_display
  9086 ;; This function uses a reentrant model
  9087 ;;
  9088                           
  9089                           	psect	text22
  9090  019E5A                     __ptext22:
  9091                           	opt callstack 0
  9092  019E5A                     _hid_input:
  9093                           	opt callstack 13
  9094                           
  9095                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  9096                           
  9097                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9098                           ;incstack = 0
  9099  019E5A  0E02               	movlw	2
  9100  019E5C  6EE6               	movwf	postinc1,c
  9101  019E5E  EC54  F0E4         	call	_get_switch	;wreg free
  9102  019E62  5001               	movf	btemp^0,w,c
  9103  019E64  B4D8               	btfsc	status,2,c
  9104  019E66  D02C               	goto	l13628
  9105                           
  9106                           ;hid.c: 6:   h->wait_select = 0;
  9107                           ;stkvar	_h @ sp[(0)+-2]
  9108  019E68  0EFE               	movlw	-2
  9109  019E6A  006F FF8C  F00B    	movff	plusw1,btemp+10
  9110  019E70  0EFF               	movlw	-1
  9111  019E72  006F FF8C  F00C    	movff	plusw1,btemp+11
  9112  019E78  0E02               	movlw	2
  9113  019E7A  240B               	addwf	(btemp+10)^0,w,c
  9114  019E7C  6ED9               	movwf	fsr2l,c
  9115  019E7E  0E00               	movlw	0
  9116  019E80  200C               	addwfc	(btemp+11)^0,w,c
  9117  019E82  6EDA               	movwf	fsr2h,c
  9118  019E84  0E00               	movlw	0
  9119  019E86  6EDF               	movwf	indf2,c
  9120                           
  9121                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  9122  019E88  0E02               	movlw	2
  9123  019E8A  6EE6               	movwf	postinc1,c
  9124  019E8C  EC54  F0E4         	call	_get_switch	;wreg free
  9125  019E90  5001               	movf	btemp^0,w,c
  9126  019E92  B4D8               	btfsc	status,2,c
  9127  019E94  D003               	goto	u12990
  9128  019E96  6A0C               	clrf	(btemp+11)^0,c
  9129  019E98  2A0C               	incf	(btemp+11)^0,f,c
  9130  019E9A  D001               	goto	u13008
  9131  019E9C                     u12990:
  9132  019E9C  6A0C               	clrf	(btemp+11)^0,c
  9133  019E9E                     u13008:
  9134                           
  9135                           ;stkvar	_h @ sp[(0)+-2]
  9136  019E9E  0EFE               	movlw	-2
  9137  019EA0  006F FF8C  F009    	movff	plusw1,btemp+8
  9138  019EA6  0EFF               	movlw	-1
  9139  019EA8  006F FF8C  F00A    	movff	plusw1,btemp+9
  9140  019EAE  0E03               	movlw	3
  9141  019EB0  2409               	addwf	(btemp+8)^0,w,c
  9142  019EB2  6ED9               	movwf	fsr2l,c
  9143  019EB4  0E00               	movlw	0
  9144  019EB6  200A               	addwfc	(btemp+9)^0,w,c
  9145  019EB8  6EDA               	movwf	fsr2h,c
  9146  019EBA  0060  F033  FFDF   	movff	btemp+11,indf2
  9147  019EC0                     l13628:
  9148                           
  9149                           ;hid.c: 10:  if (get_switch(SENTER)) {
  9150  019EC0  0E03               	movlw	3
  9151  019EC2  6EE6               	movwf	postinc1,c
  9152  019EC4  EC54  F0E4         	call	_get_switch	;wreg free
  9153  019EC8  5001               	movf	btemp^0,w,c
  9154  019ECA  B4D8               	btfsc	status,2,c
  9155  019ECC  D02C               	goto	l13634
  9156                           
  9157                           ;hid.c: 11:   h->wait_enter = 0;
  9158                           ;stkvar	_h @ sp[(0)+-2]
  9159  019ECE  0EFE               	movlw	-2
  9160  019ED0  006F FF8C  F00B    	movff	plusw1,btemp+10
  9161  019ED6  0EFF               	movlw	-1
  9162  019ED8  006F FF8C  F00C    	movff	plusw1,btemp+11
  9163  019EDE  0E04               	movlw	4
  9164  019EE0  240B               	addwf	(btemp+10)^0,w,c
  9165  019EE2  6ED9               	movwf	fsr2l,c
  9166  019EE4  0E00               	movlw	0
  9167  019EE6  200C               	addwfc	(btemp+11)^0,w,c
  9168  019EE8  6EDA               	movwf	fsr2h,c
  9169  019EEA  0E00               	movlw	0
  9170  019EEC  6EDF               	movwf	indf2,c
  9171                           
  9172                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  9173  019EEE  0E03               	movlw	3
  9174  019EF0  6EE6               	movwf	postinc1,c
  9175  019EF2  EC54  F0E4         	call	_get_switch	;wreg free
  9176  019EF6  5001               	movf	btemp^0,w,c
  9177  019EF8  B4D8               	btfsc	status,2,c
  9178  019EFA  D003               	goto	u13020
  9179  019EFC  6A0C               	clrf	(btemp+11)^0,c
  9180  019EFE  2A0C               	incf	(btemp+11)^0,f,c
  9181  019F00  D001               	goto	u13038
  9182  019F02                     u13020:
  9183  019F02  6A0C               	clrf	(btemp+11)^0,c
  9184  019F04                     u13038:
  9185                           
  9186                           ;stkvar	_h @ sp[(0)+-2]
  9187  019F04  0EFE               	movlw	-2
  9188  019F06  006F FF8C  F009    	movff	plusw1,btemp+8
  9189  019F0C  0EFF               	movlw	-1
  9190  019F0E  006F FF8C  F00A    	movff	plusw1,btemp+9
  9191  019F14  0E05               	movlw	5
  9192  019F16  2409               	addwf	(btemp+8)^0,w,c
  9193  019F18  6ED9               	movwf	fsr2l,c
  9194  019F1A  0E00               	movlw	0
  9195  019F1C  200A               	addwfc	(btemp+9)^0,w,c
  9196  019F1E  6EDA               	movwf	fsr2h,c
  9197  019F20  0060  F033  FFDF   	movff	btemp+11,indf2
  9198  019F26                     l13634:
  9199                           
  9200                           ;hid.c: 15:  if (get_switch(SCALIB)) {
  9201  019F26  0E04               	movlw	4
  9202  019F28  6EE6               	movwf	postinc1,c
  9203  019F2A  EC54  F0E4         	call	_get_switch	;wreg free
  9204  019F2E  5001               	movf	btemp^0,w,c
  9205  019F30  B4D8               	btfsc	status,2,c
  9206  019F32  D02C               	goto	l2106
  9207                           
  9208                           ;hid.c: 16:   h->wait_calib = 0;
  9209                           ;stkvar	_h @ sp[(0)+-2]
  9210  019F34  0EFE               	movlw	-2
  9211  019F36  006F FF8C  F00B    	movff	plusw1,btemp+10
  9212  019F3C  0EFF               	movlw	-1
  9213  019F3E  006F FF8C  F00C    	movff	plusw1,btemp+11
  9214  019F44  0E06               	movlw	6
  9215  019F46  240B               	addwf	(btemp+10)^0,w,c
  9216  019F48  6ED9               	movwf	fsr2l,c
  9217  019F4A  0E00               	movlw	0
  9218  019F4C  200C               	addwfc	(btemp+11)^0,w,c
  9219  019F4E  6EDA               	movwf	fsr2h,c
  9220  019F50  0E00               	movlw	0
  9221  019F52  6EDF               	movwf	indf2,c
  9222                           
  9223                           ;hid.c: 17:   h->calib_p = get_switch(SCALIB);
  9224  019F54  0E04               	movlw	4
  9225  019F56  6EE6               	movwf	postinc1,c
  9226  019F58  EC54  F0E4         	call	_get_switch	;wreg free
  9227  019F5C  5001               	movf	btemp^0,w,c
  9228  019F5E  B4D8               	btfsc	status,2,c
  9229  019F60  D003               	goto	u13050
  9230  019F62  6A0C               	clrf	(btemp+11)^0,c
  9231  019F64  2A0C               	incf	(btemp+11)^0,f,c
  9232  019F66  D001               	goto	u13068
  9233  019F68                     u13050:
  9234  019F68  6A0C               	clrf	(btemp+11)^0,c
  9235  019F6A                     u13068:
  9236                           
  9237                           ;stkvar	_h @ sp[(0)+-2]
  9238  019F6A  0EFE               	movlw	-2
  9239  019F6C  006F FF8C  F009    	movff	plusw1,btemp+8
  9240  019F72  0EFF               	movlw	-1
  9241  019F74  006F FF8C  F00A    	movff	plusw1,btemp+9
  9242  019F7A  0E07               	movlw	7
  9243  019F7C  2409               	addwf	(btemp+8)^0,w,c
  9244  019F7E  6ED9               	movwf	fsr2l,c
  9245  019F80  0E00               	movlw	0
  9246  019F82  200A               	addwfc	(btemp+9)^0,w,c
  9247  019F84  6EDA               	movwf	fsr2h,c
  9248  019F86  0060  F033  FFDF   	movff	btemp+11,indf2
  9249  019F8C                     l2106:
  9250                           
  9251                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  9252  019F8C  52E5               	movf	postdec1,f,c
  9253  019F8E  52E5               	movf	postdec1,f,c
  9254  019F90  0012               	return		;funcret
  9255  019F92                     __end_of_hid_input:
  9256                           	opt callstack 0
  9257                           
  9258 ;; *************** function _esr_check *****************
  9259 ;; Defined at:
  9260 ;;		line 197 in file "bsoc.c"
  9261 ;; Parameters:    Size  Location     Type
  9262 ;;  fsm             1  [STACK] const unsigned char 
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;		None
  9265 ;; Return value:  Size  Location     Type
  9266 ;;                  4  [STACK] float 
  9267 ;; Registers used:
  9268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9269 ;; Tracked objects:
  9270 ;;		On entry : 0/0
  9271 ;;		On exit  : 0/0
  9272 ;;		Unchanged: 0/0
  9273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9278 ;;Total ram usage:        0 bytes
  9279 ;; Hardware stack levels used:    1
  9280 ;; Hardware stack levels required when called:   18
  9281 ;; This function calls:
  9282 ;;		_StartTimer
  9283 ;;		_TimerDone
  9284 ;;		___fldiv
  9285 ;;		___flsub
  9286 ;;		_conv_raw_result
  9287 ;;		_fabsf
  9288 ;;		_set_load_relay_one
  9289 ;;		_set_load_relay_two
  9290 ;;		_update_adc_result
  9291 ;; This function is called by:
  9292 ;;		_main
  9293 ;; This function uses a reentrant model
  9294 ;;
  9295                           
  9296                           	psect	text23
  9297  0176FA                     __ptext23:
  9298                           	opt callstack 0
  9299  0176FA                     _esr_check:
  9300                           	opt callstack 12
  9301                           
  9302                           ;bsoc.c: 197: float esr_check(const uint8_t fsm);bsoc.c: 198: {;bsoc.c: 199:  static uin
      +                          t8_t esr_state = 0;;bsoc.c: 201:  if (fsm) {
  9303                           ;stkvar	_fsm @ sp[(0)+-1]
  9304                           
  9305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9306                           ;incstack = 0
  9307  0176FA  0EFF               	movlw	-1
  9308  0176FC  50E3               	movf	plusw1,w,c
  9309  0176FE  B4D8               	btfsc	status,2,c
  9310  017700  D149               	goto	l11670
  9311                           
  9312                           ;bsoc.c: 202:   esr_state = 0;
  9313  017702  0100               	movlb	0	; () banked
  9314  017704  6BA0               	clrf	esr_check@esr_state& (0+255),b
  9315                           
  9316                           ; BSR set to: 0
  9317                           ;bsoc.c: 203:   return -10.0;
  9318  017706  0E00               	movlw	0
  9319  017708  6E01               	movwf	btemp^0,c
  9320  01770A  0E00               	movlw	0
  9321  01770C  6E02               	movwf	(btemp+1)^0,c
  9322  01770E  0E20               	movlw	32
  9323  017710  6E03               	movwf	(btemp+2)^0,c
  9324  017712  0EC1               	movlw	193
  9325  017714  D15B               	goto	L6
  9326  017716                     l11602:
  9327                           
  9328                           ; BSR set to: 0
  9329                           ;bsoc.c: 208:   StartTimer(TMR_ESR, 10000);
  9330  017716  0E10               	movlw	16
  9331  017718  6EE6               	movwf	postinc1,c
  9332  01771A  0E27               	movlw	39
  9333  01771C  6EE6               	movwf	postinc1,c
  9334  01771E  0E0C               	movlw	12
  9335  017720  6EE6               	movwf	postinc1,c
  9336  017722  EC50  F0E2         	call	_StartTimer	;wreg free
  9337  017726                     l11604:
  9338                           
  9339                           ;bsoc.c: 209:   esr_state++;
  9340  017726  0100               	movlb	0	; () banked
  9341  017728  2BA0               	incf	esr_check@esr_state& (0+255),f,b
  9342                           
  9343                           ;bsoc.c: 210:   break;
  9344  01772A  D149               	goto	l11672
  9345  01772C                     l11606:
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;bsoc.c: 215:   set_load_relay_one(0);
  9349  01772C  0E00               	movlw	0
  9350  01772E  6EE6               	movwf	postinc1,c
  9351  017730  EC5C  F0E7         	call	_set_load_relay_one	;wreg free
  9352                           
  9353                           ;bsoc.c: 216:   set_load_relay_two(0);
  9354  017734  0E00               	movlw	0
  9355  017736  6EE6               	movwf	postinc1,c
  9356  017738  EC54  F0E7         	call	_set_load_relay_two	;wreg free
  9357                           
  9358                           ;bsoc.c: 217:   if (TimerDone(TMR_ESR)) {
  9359  01773C  0E0C               	movlw	12
  9360  01773E  6EE6               	movwf	postinc1,c
  9361  017740  ECBF  F0E4         	call	_TimerDone	;wreg free
  9362  017744  5001               	movf	btemp^0,w,c
  9363  017746  B4D8               	btfsc	status,2,c
  9364  017748  D009               	goto	l11612
  9365                           
  9366                           ;bsoc.c: 218:    StartTimer(TMR_ESR, 10000);
  9367  01774A  0E10               	movlw	16
  9368  01774C  6EE6               	movwf	postinc1,c
  9369  01774E  0E27               	movlw	39
  9370  017750  6EE6               	movwf	postinc1,c
  9371  017752  0E0C               	movlw	12
  9372  017754  6EE6               	movwf	postinc1,c
  9373  017756  EC50  F0E2         	call	_StartTimer	;wreg free
  9374                           
  9375                           ;bsoc.c: 219:   } else {
  9376  01775A  D006               	goto	l11616
  9377  01775C                     l11612:
  9378                           
  9379                           ;bsoc.c: 220:    return -2.0;
  9380  01775C  0E00               	movlw	0
  9381  01775E  6E01               	movwf	btemp^0,c
  9382  017760  0E00               	movlw	0
  9383  017762  6E02               	movwf	(btemp+1)^0,c
  9384  017764  0E00               	movlw	0
  9385  017766  D066               	goto	L8
  9386  017768                     l11616:
  9387                           
  9388                           ;bsoc.c: 225:   update_adc_result();
  9389  017768  ECEC  F0E2         	call	_update_adc_result	;wreg free
  9390                           
  9391                           ;bsoc.c: 226:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  9392  01776C  0E00               	movlw	0
  9393  01776E  6EE6               	movwf	postinc1,c
  9394  017770  0E04               	movlw	4
  9395  017772  6EE6               	movwf	postinc1,c
  9396  017774  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9397  017778  0060  F004  F815   	movff	btemp,_C+278	;volatile
  9398  01777E  0060  F008  F816   	movff	btemp+1,_C+279	;volatile
  9399  017784  0060  F00C  F817   	movff	btemp+2,_C+280	;volatile
  9400  01778A  0060  F010  F818   	movff	btemp+3,_C+281	;volatile
  9401  017790  D7CA               	goto	l11604
  9402  017792                     l11622:
  9403                           
  9404                           ; BSR set to: 0
  9405                           ;bsoc.c: 230:   set_load_relay_one(1);
  9406  017792  0E01               	movlw	1
  9407  017794  6EE6               	movwf	postinc1,c
  9408  017796  EC5C  F0E7         	call	_set_load_relay_one	;wreg free
  9409                           
  9410                           ;bsoc.c: 231:   if (TimerDone(TMR_ESR)) {
  9411  01779A  0E0C               	movlw	12
  9412  01779C  6EE6               	movwf	postinc1,c
  9413  01779E  ECBF  F0E4         	call	_TimerDone	;wreg free
  9414  0177A2  5001               	movf	btemp^0,w,c
  9415  0177A4  B4D8               	btfsc	status,2,c
  9416  0177A6  D009               	goto	l11628
  9417                           
  9418                           ;bsoc.c: 232:    StartTimer(TMR_ESR, 10000);
  9419  0177A8  0E10               	movlw	16
  9420  0177AA  6EE6               	movwf	postinc1,c
  9421  0177AC  0E27               	movlw	39
  9422  0177AE  6EE6               	movwf	postinc1,c
  9423  0177B0  0E0C               	movlw	12
  9424  0177B2  6EE6               	movwf	postinc1,c
  9425  0177B4  EC50  F0E2         	call	_StartTimer	;wreg free
  9426                           
  9427                           ;bsoc.c: 233:   } else {
  9428  0177B8  D006               	goto	l11632
  9429  0177BA                     l11628:
  9430                           
  9431                           ;bsoc.c: 234:    return -3.0;
  9432  0177BA  0E00               	movlw	0
  9433  0177BC  6E01               	movwf	btemp^0,c
  9434  0177BE  0E00               	movlw	0
  9435  0177C0  6E02               	movwf	(btemp+1)^0,c
  9436  0177C2  0E40               	movlw	64
  9437  0177C4  D037               	goto	L8
  9438  0177C6                     l11632:
  9439                           
  9440                           ;bsoc.c: 237:   update_adc_result();
  9441  0177C6  ECEC  F0E2         	call	_update_adc_result	;wreg free
  9442                           
  9443                           ;bsoc.c: 238:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  9444  0177CA  0E00               	movlw	0
  9445  0177CC  6EE6               	movwf	postinc1,c
  9446  0177CE  0E04               	movlw	4
  9447  0177D0  6EE6               	movwf	postinc1,c
  9448  0177D2  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9449  0177D6  0060  F004  F819   	movff	btemp,_C+282	;volatile
  9450  0177DC  0060  F008  F81A   	movff	btemp+1,_C+283	;volatile
  9451  0177E2  0060  F00C  F81B   	movff	btemp+2,_C+284	;volatile
  9452  0177E8  0060  F010  F81C   	movff	btemp+3,_C+285	;volatile
  9453                           
  9454                           ;bsoc.c: 239:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  9455  0177EE  0E00               	movlw	0
  9456  0177F0  6EE6               	movwf	postinc1,c
  9457  0177F2  0E00               	movlw	0
  9458  0177F4  6EE6               	movwf	postinc1,c
  9459  0177F6  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9460  0177FA  0060  F004  F80D   	movff	btemp,_C+270	;volatile
  9461  017800  0060  F008  F80E   	movff	btemp+1,_C+271	;volatile
  9462  017806  0060  F00C  F80F   	movff	btemp+2,_C+272	;volatile
  9463  01780C  0060  F010  F810   	movff	btemp+3,_C+273	;volatile
  9464  017812  D789               	goto	l11604
  9465  017814                     l11640:
  9466                           
  9467                           ; BSR set to: 0
  9468                           ;bsoc.c: 243:   set_load_relay_two(1);
  9469  017814  0E01               	movlw	1
  9470  017816  6EE6               	movwf	postinc1,c
  9471  017818  EC54  F0E7         	call	_set_load_relay_two	;wreg free
  9472                           
  9473                           ;bsoc.c: 244:   if (!TimerDone(TMR_ESR))
  9474  01781C  0E0C               	movlw	12
  9475  01781E  6EE6               	movwf	postinc1,c
  9476  017820  ECBF  F0E4         	call	_TimerDone	;wreg free
  9477  017824  5001               	movf	btemp^0,w,c
  9478  017826  A4D8               	btfss	status,2,c
  9479  017828  D008               	goto	l11648
  9480                           
  9481                           ;bsoc.c: 245:    return -4.0;
  9482  01782A  0E00               	movlw	0
  9483  01782C  6E01               	movwf	btemp^0,c
  9484  01782E  0E00               	movlw	0
  9485  017830  6E02               	movwf	(btemp+1)^0,c
  9486  017832  0E80               	movlw	128
  9487  017834                     L8:
  9488  017834  6E03               	movwf	(btemp+2)^0,c
  9489  017836  0EC0               	movlw	192
  9490  017838  D0C9               	goto	L6
  9491  01783A                     l11648:
  9492                           
  9493                           ;bsoc.c: 247:   update_adc_result();
  9494  01783A  ECEC  F0E2         	call	_update_adc_result	;wreg free
  9495                           
  9496                           ;bsoc.c: 248:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  9497  01783E  0E00               	movlw	0
  9498  017840  6EE6               	movwf	postinc1,c
  9499  017842  0E04               	movlw	4
  9500  017844  6EE6               	movwf	postinc1,c
  9501  017846  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9502  01784A  0060  F004  F81D   	movff	btemp,_C+286	;volatile
  9503  017850  0060  F008  F81E   	movff	btemp+1,_C+287	;volatile
  9504  017856  0060  F00C  F81F   	movff	btemp+2,_C+288	;volatile
  9505  01785C  0060  F010  F820   	movff	btemp+3,_C+289	;volatile
  9506                           
  9507                           ;bsoc.c: 249:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  9508  017862  0E00               	movlw	0
  9509  017864  6EE6               	movwf	postinc1,c
  9510  017866  0E00               	movlw	0
  9511  017868  6EE6               	movwf	postinc1,c
  9512  01786A  EC1E  F0AA         	call	_conv_raw_result	;wreg free
  9513  01786E  0060  F004  F811   	movff	btemp,_C+274	;volatile
  9514  017874  0060  F008  F812   	movff	btemp+1,_C+275	;volatile
  9515  01787A  0060  F00C  F813   	movff	btemp+2,_C+276	;volatile
  9516  017880  0060  F010  F814   	movff	btemp+3,_C+277	;volatile
  9517                           
  9518                           ;bsoc.c: 251:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  9519  017886  EE22  F011         	lfsr	2,_C+274	;volatile
  9520  01788A  006F FF7B FFE6     	movff	postinc2,postinc1
  9521  017890  006F FF7B FFE6     	movff	postinc2,postinc1
  9522  017896  006F FF7B FFE6     	movff	postinc2,postinc1
  9523  01789C  006F FF7B FFE6     	movff	postinc2,postinc1
  9524  0178A2  EE22  F00D         	lfsr	2,_C+270	;volatile
  9525  0178A6  006F FF7B FFE6     	movff	postinc2,postinc1
  9526  0178AC  006F FF7B FFE6     	movff	postinc2,postinc1
  9527  0178B2  006F FF7B FFE6     	movff	postinc2,postinc1
  9528  0178B8  006F FF7B FFE6     	movff	postinc2,postinc1
  9529  0178BE  ECAA  F0E1         	call	___flsub	;wreg free
  9530  0178C2  0060  F007  FFE6   	movff	btemp,postinc1
  9531  0178C8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9532  0178CE  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9533  0178D4  0060  F013  FFE6   	movff	btemp+3,postinc1
  9534  0178DA  EE22  F01D         	lfsr	2,_C+286	;volatile
  9535  0178DE  006F FF7B FFE6     	movff	postinc2,postinc1
  9536  0178E4  006F FF7B FFE6     	movff	postinc2,postinc1
  9537  0178EA  006F FF7B FFE6     	movff	postinc2,postinc1
  9538  0178F0  006F FF7B FFE6     	movff	postinc2,postinc1
  9539  0178F6  EE22  F019         	lfsr	2,_C+282	;volatile
  9540  0178FA  006F FF7B FFE6     	movff	postinc2,postinc1
  9541  017900  006F FF7B FFE6     	movff	postinc2,postinc1
  9542  017906  006F FF7B FFE6     	movff	postinc2,postinc1
  9543  01790C  006F FF7B FFE6     	movff	postinc2,postinc1
  9544  017912  ECAA  F0E1         	call	___flsub	;wreg free
  9545  017916  0060  F007  FFE6   	movff	btemp,postinc1
  9546  01791C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9547  017922  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9548  017928  0060  F013  FFE6   	movff	btemp+3,postinc1
  9549  01792E  EC61  F0A7         	call	___fldiv	;wreg free
  9550  017932  0060  F007  FFE6   	movff	btemp,postinc1
  9551  017938  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9552  01793E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  9553  017944  0060  F013  FFE6   	movff	btemp+3,postinc1
  9554  01794A  EC98  F0D8         	call	_fabsf	;wreg free
  9555  01794E  0060  F004  F787   	movff	btemp,_C+136	;volatile
  9556  017954  0060  F008  F788   	movff	btemp+1,_C+137	;volatile
  9557  01795A  0060  F00C  F789   	movff	btemp+2,_C+138	;volatile
  9558  017960  0060  F010  F78A   	movff	btemp+3,_C+139	;volatile
  9559                           
  9560                           ;bsoc.c: 252:   set_load_relay_one(0);
  9561  017966  0E00               	movlw	0
  9562  017968  6EE6               	movwf	postinc1,c
  9563  01796A  EC5C  F0E7         	call	_set_load_relay_one	;wreg free
  9564                           
  9565                           ;bsoc.c: 253:   set_load_relay_two(0);
  9566  01796E  0E00               	movlw	0
  9567  017970  6EE6               	movwf	postinc1,c
  9568  017972  EC54  F0E7         	call	_set_load_relay_two	;wreg free
  9569                           
  9570                           ;bsoc.c: 254:   esr_state = 0;
  9571  017976  0100               	movlb	0	; () banked
  9572  017978  6BA0               	clrf	esr_check@esr_state& (0+255),b
  9573                           
  9574                           ; BSR set to: 0
  9575                           ;bsoc.c: 255:   return C.esr;
  9576  01797A  0061  FE1C  F001   	movff	_C+136,btemp	;volatile
  9577  017980  0061  FE20  F002   	movff	_C+137,btemp+1	;volatile
  9578  017986  0061  FE24  F003   	movff	_C+138,btemp+2	;volatile
  9579  01798C  0061  FE28  F004   	movff	_C+139,btemp+3	;volatile
  9580  017992  D01D               	goto	l2231
  9581  017994                     l11670:
  9582  017994  0100               	movlb	0	; () banked
  9583  017996  51A0               	movf	esr_check@esr_state& (0+255),w,b
  9584  017998  6E0B               	movwf	(btemp+10)^0,c
  9585  01799A  6A0C               	clrf	(btemp+11)^0,c
  9586                           
  9587                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9588                           ; Switch size 1, requested type "simple"
  9589                           ; Number of cases is 1, Range of values is 0 to 0
  9590                           ; switch strategies available:
  9591                           ; Name         Instructions Cycles
  9592                           ; simple_byte            4     3 (average)
  9593                           ;	Chosen strategy is simple_byte
  9594  01799C  500C               	movf	(btemp+11)^0,w,c
  9595  01799E  0A00               	xorlw	0	; case 0
  9596  0179A0  A4D8               	btfss	status,2,c
  9597  0179A2  D00D               	goto	l11672
  9598                           
  9599                           ; BSR set to: 0
  9600                           ; Switch size 1, requested type "simple"
  9601                           ; Number of cases is 4, Range of values is 0 to 3
  9602                           ; switch strategies available:
  9603                           ; Name         Instructions Cycles
  9604                           ; simple_byte           13     7 (average)
  9605                           ;	Chosen strategy is simple_byte
  9606  0179A4  500B               	movf	(btemp+10)^0,w,c
  9607  0179A6  0A00               	xorlw	0	; case 0
  9608  0179A8  B4D8               	btfsc	status,2,c
  9609  0179AA  D6B5               	goto	l11602
  9610  0179AC  0A01               	xorlw	1	; case 1
  9611  0179AE  B4D8               	btfsc	status,2,c
  9612  0179B0  D6BD               	goto	l11606
  9613  0179B2  0A03               	xorlw	3	; case 2
  9614  0179B4  B4D8               	btfsc	status,2,c
  9615  0179B6  D6ED               	goto	l11622
  9616  0179B8  0A01               	xorlw	1	; case 3
  9617  0179BA  B4D8               	btfsc	status,2,c
  9618  0179BC  D72B               	goto	l11640
  9619  0179BE                     l11672:
  9620                           
  9621                           ; BSR set to: 0
  9622                           ;bsoc.c: 260:  return -1.0;
  9623  0179BE  0E00               	movlw	0
  9624  0179C0  6E01               	movwf	btemp^0,c
  9625  0179C2  0E00               	movlw	0
  9626  0179C4  6E02               	movwf	(btemp+1)^0,c
  9627  0179C6  0E80               	movlw	128
  9628  0179C8  6E03               	movwf	(btemp+2)^0,c
  9629  0179CA  0EBF               	movlw	191
  9630  0179CC                     L6:
  9631  0179CC  6E04               	movwf	(btemp+3)^0,c
  9632  0179CE                     l2231:
  9633                           
  9634                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  9635  0179CE  52E5               	movf	postdec1,f,c
  9636  0179D0  0012               	return		;funcret
  9637  0179D2                     __end_of_esr_check:
  9638                           	opt callstack 0
  9639                           
  9640 ;; *************** function _update_adc_result *****************
  9641 ;; Defined at:
  9642 ;;		line 103 in file "daq.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;		None
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;		None
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  1  [STACK] _Bool 
  9649 ;; Registers used:
  9650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9660 ;;Total ram usage:        0 bytes
  9661 ;; Hardware stack levels used:    1
  9662 ;; Hardware stack levels required when called:   17
  9663 ;; This function calls:
  9664 ;;		_StartTimer
  9665 ;;		_TimerDone
  9666 ;;		_check_adc_scan
  9667 ;;		_clear_adc_scan
  9668 ;;		_start_adc_scan
  9669 ;; This function is called by:
  9670 ;;		_esr_check
  9671 ;; This function uses a reentrant model
  9672 ;;
  9673                           
  9674                           	psect	text24
  9675  01C5D8                     __ptext24:
  9676                           	opt callstack 0
  9677  01C5D8                     _update_adc_result:
  9678                           	opt callstack 12
  9679                           
  9680                           ;daq.c: 105:  if (R.done) {
  9681                           
  9682                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9683                           ;incstack = 0
  9684  01C5D8  0100               	movlb	0	; () banked
  9685  01C5DA  51E0               	movf	(_R+53)& (0+255),w,b	;volatile
  9686  01C5DC  B4D8               	btfsc	status,2,c
  9687  01C5DE  0012               	return	
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;daq.c: 106:   clear_adc_scan();
  9691  01C5E0  ECC9  F0E7         	call	_clear_adc_scan	;wreg free
  9692                           
  9693                           ; BSR set to: 0
  9694                           ;daq.c: 107:   start_adc_scan();
  9695  01C5E4  ECE9  F0DE         	call	_start_adc_scan	;wreg free
  9696                           
  9697                           ;daq.c: 108:   StartTimer(TMR_ADC, 200);
  9698  01C5E8  0EC8               	movlw	200
  9699  01C5EA  6EE6               	movwf	postinc1,c
  9700  01C5EC  0E00               	movlw	0
  9701  01C5EE  6EE6               	movwf	postinc1,c
  9702  01C5F0  0E01               	movlw	1
  9703  01C5F2  6EE6               	movwf	postinc1,c
  9704  01C5F4  EC50  F0E2         	call	_StartTimer	;wreg free
  9705  01C5F8                     l11094:
  9706  01C5F8  0E01               	movlw	1
  9707  01C5FA  6EE6               	movwf	postinc1,c
  9708  01C5FC  ECBF  F0E4         	call	_TimerDone	;wreg free
  9709  01C600  5001               	movf	btemp^0,w,c
  9710  01C602  A4D8               	btfss	status,2,c
  9711  01C604  0012               	return	
  9712  01C606  ECB5  F0E7         	call	_check_adc_scan	;wreg free
  9713  01C60A  5001               	movf	btemp^0,w,c
  9714  01C60C  A4D8               	btfss	status,2,c
  9715  01C60E  0012               	return	
  9716  01C610  D7F3               	goto	l11094
  9717  01C612                     __end_of_update_adc_result:
  9718                           	opt callstack 0
  9719                           
  9720 ;; *************** function _check_adc_scan *****************
  9721 ;; Defined at:
  9722 ;;		line 87 in file "daq.c"
  9723 ;; Parameters:    Size  Location     Type
  9724 ;;		None
  9725 ;; Auto vars:     Size  Location     Type
  9726 ;;		None
  9727 ;; Return value:  Size  Location     Type
  9728 ;;                  1  [STACK] _Bool 
  9729 ;; Registers used:
  9730 ;;		btemp
  9731 ;; Tracked objects:
  9732 ;;		On entry : 0/1
  9733 ;;		On exit  : 0/0
  9734 ;;		Unchanged: 0/0
  9735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9740 ;;Total ram usage:        0 bytes
  9741 ;; Hardware stack levels used:    1
  9742 ;; Hardware stack levels required when called:   15
  9743 ;; This function calls:
  9744 ;;		Nothing
  9745 ;; This function is called by:
  9746 ;;		_main
  9747 ;;		_update_adc_result
  9748 ;; This function uses a reentrant model
  9749 ;;
  9750                           
  9751                           	psect	text25
  9752  01CF6A                     __ptext25:
  9753                           	opt callstack 0
  9754  01CF6A                     _check_adc_scan:
  9755                           	opt callstack 13
  9756                           
  9757                           ;daq.c: 89:  return R.done;
  9758                           
  9759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9760                           ;incstack = 0
  9761  01CF6A  0060  F380  F001   	movff	_R+53,btemp	;volatile
  9762                           
  9763                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  9764  01CF70  0012               	return		;funcret
  9765  01CF72                     __end_of_check_adc_scan:
  9766                           	opt callstack 0
  9767                           
  9768 ;; *************** function _set_load_relay_two *****************
  9769 ;; Defined at:
  9770 ;;		line 130 in file "mbmc.c"
  9771 ;; Parameters:    Size  Location     Type
  9772 ;;  mode            1  [STACK] const _Bool 
  9773 ;; Auto vars:     Size  Location     Type
  9774 ;;		None
  9775 ;; Return value:  Size  Location     Type
  9776 ;;                  1  [STACK] void 
  9777 ;; Registers used:
  9778 ;;		wreg, fsr1l, fsr1h
  9779 ;; Tracked objects:
  9780 ;;		On entry : 0/0
  9781 ;;		On exit  : 0/0
  9782 ;;		Unchanged: 0/0
  9783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9788 ;;Total ram usage:        0 bytes
  9789 ;; Hardware stack levels used:    1
  9790 ;; Hardware stack levels required when called:   15
  9791 ;; This function calls:
  9792 ;;		Nothing
  9793 ;; This function is called by:
  9794 ;;		_main
  9795 ;;		_esr_check
  9796 ;; This function uses a reentrant model
  9797 ;;
  9798                           
  9799                           	psect	text26
  9800  01CEA8                     __ptext26:
  9801                           	opt callstack 0
  9802  01CEA8                     _set_load_relay_two:
  9803                           	opt callstack 15
  9804                           
  9805                           ;mbmc.c: 130: void set_load_relay_two(const _Bool mode);mbmc.c: 131: {;mbmc.c: 132:  LAT
      +                          Dbits.LATD5 = mode;
  9806                           ;stkvar	_mode @ sp[(0)+-1]
  9807                           
  9808                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9809                           ;incstack = 0
  9810  01CEA8  0EFF               	movlw	-1
  9811  01CEAA  B0E3               	btfsc	plusw1,0,c
  9812  01CEAC  D002               	bra	u9905
  9813  01CEAE  9ABD               	bcf	189,5,c	;volatile
  9814  01CEB0  D001               	bra	u9906
  9815  01CEB2                     u9905:
  9816  01CEB2  8ABD               	bsf	189,5,c	;volatile
  9817  01CEB4                     u9906:
  9818                           
  9819                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9820  01CEB4  52E5               	movf	postdec1,f,c
  9821  01CEB6  0012               	return		;funcret
  9822  01CEB8                     __end_of_set_load_relay_two:
  9823                           	opt callstack 0
  9824                           
  9825 ;; *************** function _set_load_relay_one *****************
  9826 ;; Defined at:
  9827 ;;		line 125 in file "mbmc.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;  mode            1  [STACK] const _Bool 
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;		None
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  1  [STACK] void 
  9834 ;; Registers used:
  9835 ;;		wreg, fsr1l, fsr1h
  9836 ;; Tracked objects:
  9837 ;;		On entry : 0/0
  9838 ;;		On exit  : 0/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9845 ;;Total ram usage:        0 bytes
  9846 ;; Hardware stack levels used:    1
  9847 ;; Hardware stack levels required when called:   15
  9848 ;; This function calls:
  9849 ;;		Nothing
  9850 ;; This function is called by:
  9851 ;;		_main
  9852 ;;		_esr_check
  9853 ;; This function uses a reentrant model
  9854 ;;
  9855                           
  9856                           	psect	text27
  9857  01CEB8                     __ptext27:
  9858                           	opt callstack 0
  9859  01CEB8                     _set_load_relay_one:
  9860                           	opt callstack 15
  9861                           
  9862                           ;mbmc.c: 125: void set_load_relay_one(const _Bool mode);mbmc.c: 126: {;mbmc.c: 127:  LAT
      +                          Dbits.LATD4 = mode;
  9863                           ;stkvar	_mode @ sp[(0)+-1]
  9864                           
  9865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9866                           ;incstack = 0
  9867  01CEB8  0EFF               	movlw	-1
  9868  01CEBA  B0E3               	btfsc	plusw1,0,c
  9869  01CEBC  D002               	bra	u9895
  9870  01CEBE  98BD               	bcf	189,4,c	;volatile
  9871  01CEC0  D001               	bra	u9896
  9872  01CEC2                     u9895:
  9873  01CEC2  88BD               	bsf	189,4,c	;volatile
  9874  01CEC4                     u9896:
  9875                           
  9876                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9877  01CEC4  52E5               	movf	postdec1,f,c
  9878  01CEC6  0012               	return		;funcret
  9879  01CEC8                     __end_of_set_load_relay_one:
  9880                           	opt callstack 0
  9881                           
  9882 ;; *************** function _eaDogM_WriteCommand *****************
  9883 ;; Defined at:
  9884 ;;		line 385 in file "eadog.c"
  9885 ;; Parameters:    Size  Location     Type
  9886 ;;  cmd             1  [STACK] const unsigned char 
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;		None
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  1  [STACK] void 
  9891 ;; Registers used:
  9892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9893 ;; Tracked objects:
  9894 ;;		On entry : 3F/3D
  9895 ;;		On exit  : 3F/0
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9902 ;;Total ram usage:        0 bytes
  9903 ;; Hardware stack levels used:    1
  9904 ;; Hardware stack levels required when called:   26
  9905 ;; This function calls:
  9906 ;;		_send_lcd_cmd_dma
  9907 ;; This function is called by:
  9908 ;;		_main
  9909 ;; This function uses a reentrant model
  9910 ;;
  9911                           
  9912                           	psect	text28
  9913  01CEE8                     __ptext28:
  9914                           	opt callstack 0
  9915  01CEE8                     _eaDogM_WriteCommand:
  9916                           	opt callstack 4
  9917                           
  9918                           ;eadog.c: 385: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 386: {;eadog.c: 387:
      +                            send_lcd_cmd_dma(cmd);
  9919                           ;stkvar	_cmd @ sp[(0)+-1]
  9920                           
  9921                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9922                           ;incstack = 0
  9923  01CEE8  0EFF               	movlw	-1
  9924  01CEEA  50E3               	movf	plusw1,w,c
  9925  01CEEC  6EE6               	movwf	postinc1,c
  9926  01CEEE  ECA6  F0E6         	call	_send_lcd_cmd_dma	;wreg free
  9927                           
  9928                           ; BSR set to: 0
  9929                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9930  01CEF2  52E5               	movf	postdec1,f,c
  9931  01CEF4  0012               	return		;funcret
  9932  01CEF6                     __end_of_eaDogM_WriteCommand:
  9933                           	opt callstack 0
  9934                           
  9935 ;; *************** function _current_sensor_cal *****************
  9936 ;; Defined at:
  9937 ;;		line 483 in file "main.c"
  9938 ;; Parameters:    Size  Location     Type
  9939 ;;		None
  9940 ;; Auto vars:     Size  Location     Type
  9941 ;;  cp              4  [STACK] unsigned long 
  9942 ;;  cb              4  [STACK] unsigned long 
  9943 ;;  x               1  [STACK] unsigned char 
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  1  [STACK] _Bool 
  9946 ;; Registers used:
  9947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/1
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9957 ;;Total ram usage:        0 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; Hardware stack levels required when called:   28
  9960 ;; This function calls:
  9961 ;;		_WaitMs
  9962 ;;		_cal_current_zero
  9963 ;;		_clear_adc_scan
  9964 ;;		_get_raw_result
  9965 ;;		_get_switch
  9966 ;;		_get_vterm_ptr
  9967 ;;		_spinners
  9968 ;;		_sprintf
  9969 ;;		_start_adc_scan
  9970 ;;		_update_lcd
  9971 ;;		_write_cal_data
  9972 ;; This function is called by:
  9973 ;;		_main
  9974 ;; This function uses a reentrant model
  9975 ;;
  9976                           
  9977                           	psect	text29
  9978  0158F8                     __ptext29:
  9979                           	opt callstack 0
  9980  0158F8                     _current_sensor_cal:
  9981                           	opt callstack 0
  9982                           
  9983                           ; BSR set to: 0
  9984                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9985  0158F8  0E09               	movlw	9
  9986  0158FA  26E1               	addwf	fsr1l,f,c
  9987  0158FC  0E00               	movlw	0
  9988  0158FE  22E2               	addwfc	fsr1h,f,c
  9989                           
  9990                           ;main.c: 485:  uint8_t x = 0;
  9991                           ;stkvar	_x @ sp[(-9)+8]
  9992                           
  9993                           ;incstack = 0
  9994  015900  0EFF               	movlw	-1
  9995  015902  6AE3               	clrf	plusw1,c
  9996                           
  9997                           ;main.c: 486:  uint32_t cb = 0, cp = 0;
  9998                           ;stkvar	_cb @ sp[(-9)+4]
  9999  015904  0EFB               	movlw	-5
 10000  015906  6AE3               	clrf	plusw1,c
 10001  015908  0EFC               	movlw	-4
 10002  01590A  6AE3               	clrf	plusw1,c
 10003  01590C  0EFD               	movlw	-3
 10004  01590E  6AE3               	clrf	plusw1,c
 10005  015910  0EFE               	movlw	-2
 10006  015912  6AE3               	clrf	plusw1,c
 10007                           
 10008                           ;stkvar	_cp @ sp[(-9)+0]
 10009  015914  0EF7               	movlw	-9
 10010  015916  6AE3               	clrf	plusw1,c
 10011  015918  0EF8               	movlw	-8
 10012  01591A  6AE3               	clrf	plusw1,c
 10013  01591C  0EF9               	movlw	-7
 10014  01591E  6AE3               	clrf	plusw1,c
 10015  015920  0EFA               	movlw	-6
 10016  015922  6AE3               	clrf	plusw1,c
 10017                           
 10018                           ;main.c: 488:  sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
 10019  015924  0EB6               	movlw	low STR_46
 10020  015926  6EE6               	movwf	postinc1,c
 10021  015928  0EFE               	movlw	high STR_46
 10022  01592A  6EE6               	movwf	postinc1,c
 10023  01592C  0E00               	movlw	0
 10024  01592E  6EE6               	movwf	postinc1,c
 10025  015930  0E00               	movlw	0
 10026  015932  6EE6               	movwf	postinc1,c
 10027  015934  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 10028  015938  0060  F007  FFE6   	movff	btemp,postinc1
 10029  01593E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10030  015944  0E04               	movlw	4
 10031  015946  6EE6               	movwf	postinc1,c
 10032  015948  EC1C  F0D3         	call	_sprintf	;wreg free
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;main.c: 489:  sprintf(get_vterm_ptr(1, 0), "Sensor              ");
 10036  01594C  0ECF               	movlw	low STR_47
 10037  01594E  6EE6               	movwf	postinc1,c
 10038  015950  0EFD               	movlw	high STR_47
 10039  015952  6EE6               	movwf	postinc1,c
 10040  015954  0E00               	movlw	0
 10041  015956  6EE6               	movwf	postinc1,c
 10042  015958  0E01               	movlw	1
 10043  01595A  6EE6               	movwf	postinc1,c
 10044  01595C  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 10045  015960  0060  F007  FFE6   	movff	btemp,postinc1
 10046  015966  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10047  01596C  0E04               	movlw	4
 10048  01596E  6EE6               	movwf	postinc1,c
 10049  015970  EC1C  F0D3         	call	_sprintf	;wreg free
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;main.c: 490:  sprintf(get_vterm_ptr(2, 0), "Calibration         ");
 10053  015974  0E4D               	movlw	low STR_48
 10054  015976  6EE6               	movwf	postinc1,c
 10055  015978  0EFE               	movlw	high STR_48
 10056  01597A  6EE6               	movwf	postinc1,c
 10057  01597C  0E00               	movlw	0
 10058  01597E  6EE6               	movwf	postinc1,c
 10059  015980  0E02               	movlw	2
 10060  015982  6EE6               	movwf	postinc1,c
 10061  015984  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 10062  015988  0060  F007  FFE6   	movff	btemp,postinc1
 10063  01598E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10064  015994  0E04               	movlw	4
 10065  015996  6EE6               	movwf	postinc1,c
 10066  015998  EC1C  F0D3         	call	_sprintf	;wreg free
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;main.c: 491:  update_lcd(0);
 10070  01599C  0E00               	movlw	0
 10071  01599E  6EE6               	movwf	postinc1,c
 10072  0159A0  EC94  F0D2         	call	_update_lcd	;wreg free
 10073                           
 10074                           ;main.c: 492:  WaitMs(2000);
 10075  0159A4  0ED0               	movlw	208
 10076  0159A6  6EE6               	movwf	postinc1,c
 10077  0159A8  0E07               	movlw	7
 10078  0159AA  6EE6               	movwf	postinc1,c
 10079  0159AC  EC41  F0E3         	call	_WaitMs	;wreg free
 10080                           
 10081                           ;main.c: 493:  sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 10082  0159B0  0E00               	movlw	0
 10083  0159B2  6EE6               	movwf	postinc1,c
 10084  0159B4  0E04               	movlw	4
 10085  0159B6  6EE6               	movwf	postinc1,c
 10086  0159B8  ECA1  F0D3         	call	_spinners	;wreg free
 10087  0159BC  5001               	movf	btemp^0,w,c
 10088  0159BE  6EE6               	movwf	postinc1,c
 10089  0159C0  0E00               	movlw	0
 10090  0159C2  6EE6               	movwf	postinc1,c
 10091  0159C4  0E49               	movlw	low STR_49
 10092  0159C6  6EE6               	movwf	postinc1,c
 10093  0159C8  0EFF               	movlw	high STR_49
 10094  0159CA  6EE6               	movwf	postinc1,c
 10095  0159CC  0E00               	movlw	0
 10096  0159CE  6EE6               	movwf	postinc1,c
 10097  0159D0  0E02               	movlw	2
 10098  0159D2  6EE6               	movwf	postinc1,c
 10099  0159D4  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 10100  0159D8  0060  F007  FFE6   	movff	btemp,postinc1
 10101  0159DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10102  0159E4  0E06               	movlw	6
 10103  0159E6  6EE6               	movwf	postinc1,c
 10104  0159E8  EC1C  F0D3         	call	_sprintf	;wreg free
 10105                           
 10106                           ; BSR set to: 0
 10107                           ;main.c: 494:  update_lcd(0);
 10108  0159EC  0E00               	movlw	0
 10109  0159EE  6EE6               	movwf	postinc1,c
 10110  0159F0  EC94  F0D2         	call	_update_lcd	;wreg free
 10111  0159F4                     l13814:
 10112                           
 10113                           ;main.c: 496:   if (++x > 64)
 10114                           ;stkvar	_x @ sp[(-9)+8]
 10115  0159F4  0EFF               	movlw	-1
 10116  0159F6  2AE3               	incf	plusw1,f,c
 10117  0159F8  0EFF               	movlw	-1
 10118  0159FA  006F FF8C  F001    	movff	plusw1,btemp
 10119  015A00  0E40               	movlw	64
 10120  015A02  6401               	cpfsgt	btemp^0,c
 10121  015A04  D001               	goto	l13818
 10122  015A06  D1CF               	goto	l1406
 10123  015A08                     l13818:
 10124                           
 10125                           ;main.c: 498:   sprintf(get_vterm_ptr(2, 0), "Release button %c  ", spinners(4, 0));
 10126  015A08  0E00               	movlw	0
 10127  015A0A  6EE6               	movwf	postinc1,c
 10128  015A0C  0E04               	movlw	4
 10129  015A0E  6EE6               	movwf	postinc1,c
 10130  015A10  ECA1  F0D3         	call	_spinners	;wreg free
 10131  015A14  5001               	movf	btemp^0,w,c
 10132  015A16  6EE6               	movwf	postinc1,c
 10133  015A18  0E00               	movlw	0
 10134  015A1A  6EE6               	movwf	postinc1,c
 10135  015A1C  0E49               	movlw	low STR_49
 10136  015A1E  6EE6               	movwf	postinc1,c
 10137  015A20  0EFF               	movlw	high STR_49
 10138  015A22  6EE6               	movwf	postinc1,c
 10139  015A24  0E00               	movlw	0
 10140  015A26  6EE6               	movwf	postinc1,c
 10141  015A28  0E02               	movlw	2
 10142  015A2A  6EE6               	movwf	postinc1,c
 10143  015A2C  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 10144  015A30  0060  F007  FFE6   	movff	btemp,postinc1
 10145  015A36  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10146  015A3C  0E06               	movlw	6
 10147  015A3E  6EE6               	movwf	postinc1,c
 10148  015A40  EC1C  F0D3         	call	_sprintf	;wreg free
 10149                           
 10150                           ;main.c: 499:   update_lcd(0);
 10151  015A44  0E00               	movlw	0
 10152  015A46  6EE6               	movwf	postinc1,c
 10153  015A48  EC94  F0D2         	call	_update_lcd	;wreg free
 10154                           
 10155                           ;main.c: 500:   WaitMs(100);
 10156  015A4C  0E64               	movlw	100
 10157  015A4E  6EE6               	movwf	postinc1,c
 10158  015A50  0E00               	movlw	0
 10159  015A52  6EE6               	movwf	postinc1,c
 10160  015A54  EC41  F0E3         	call	_WaitMs	;wreg free
 10161                           
 10162                           ;main.c: 501:  } while (get_switch(SCALIB));
 10163  015A58  0E04               	movlw	4
 10164  015A5A  6EE6               	movwf	postinc1,c
 10165  015A5C  EC54  F0E4         	call	_get_switch	;wreg free
 10166  015A60  5001               	movf	btemp^0,w,c
 10167  015A62  A4D8               	btfss	status,2,c
 10168  015A64  D7C7               	goto	l13814
 10169                           
 10170                           ;main.c: 503:  x = 0;
 10171                           ;stkvar	_x @ sp[(-9)+8]
 10172  015A66  0EFF               	movlw	-1
 10173  015A68  6AE3               	clrf	plusw1,c
 10174  015A6A                     l13826:
 10175                           
 10176                           ;main.c: 505:   cb += get_raw_result(C_BATT);
 10177  015A6A  0E00               	movlw	0
 10178  015A6C  6EE6               	movwf	postinc1,c
 10179  015A6E  ECD3  F0E6         	call	_get_raw_result	;wreg free
 10180                           
 10181                           ;stkvar	_cb @ sp[(-9)+4]
 10182  015A72  50E1               	movf	fsr1l,w,c
 10183  015A74  0FFB               	addlw	-5
 10184  015A76  6ED9               	movwf	fsr2l,c
 10185  015A78  50E2               	movf	fsr1h,w,c
 10186  015A7A  6EDA               	movwf	fsr2h,c
 10187  015A7C  0EFF               	movlw	255
 10188  015A7E  22DA               	addwfc	fsr2h,f,c
 10189  015A80  5001               	movf	btemp^0,w,c
 10190  015A82  26DE               	addwf	postinc2,f,c
 10191  015A84  5002               	movf	(btemp+1)^0,w,c
 10192  015A86  22DE               	addwfc	postinc2,f,c
 10193  015A88  0E00               	movlw	0
 10194  015A8A  22DE               	addwfc	postinc2,f,c
 10195  015A8C  22DE               	addwfc	postinc2,f,c
 10196                           
 10197                           ;main.c: 506:   cp += get_raw_result(C_PV);
 10198  015A8E  0E01               	movlw	1
 10199  015A90  6EE6               	movwf	postinc1,c
 10200  015A92  ECD3  F0E6         	call	_get_raw_result	;wreg free
 10201                           
 10202                           ;stkvar	_cp @ sp[(-9)+0]
 10203  015A96  50E1               	movf	fsr1l,w,c
 10204  015A98  0FF7               	addlw	-9
 10205  015A9A  6ED9               	movwf	fsr2l,c
 10206  015A9C  50E2               	movf	fsr1h,w,c
 10207  015A9E  6EDA               	movwf	fsr2h,c
 10208  015AA0  0EFF               	movlw	255
 10209  015AA2  22DA               	addwfc	fsr2h,f,c
 10210  015AA4  5001               	movf	btemp^0,w,c
 10211  015AA6  26DE               	addwf	postinc2,f,c
 10212  015AA8  5002               	movf	(btemp+1)^0,w,c
 10213  015AAA  22DE               	addwfc	postinc2,f,c
 10214  015AAC  0E00               	movlw	0
 10215  015AAE  22DE               	addwfc	postinc2,f,c
 10216  015AB0  22DE               	addwfc	postinc2,f,c
 10217                           
 10218                           ;main.c: 507:   sprintf(get_vterm_ptr(0, 0), "Sensor Readings     ");
 10219  015AB2  0EE0               	movlw	low STR_51
 10220  015AB4  6EE6               	movwf	postinc1,c
 10221  015AB6  0EFE               	movlw	high STR_51
 10222  015AB8  6EE6               	movwf	postinc1,c
 10223  015ABA  0E00               	movlw	0
 10224  015ABC  6EE6               	movwf	postinc1,c
 10225  015ABE  0E00               	movlw	0
 10226  015AC0  6EE6               	movwf	postinc1,c
 10227  015AC2  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 10228  015AC6  0060  F007  FFE6   	movff	btemp,postinc1
 10229  015ACC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10230  015AD2  0E04               	movlw	4
 10231  015AD4  6EE6               	movwf	postinc1,c
 10232  015AD6  EC1C  F0D3         	call	_sprintf	;wreg free
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;main.c: 508:   sprintf(get_vterm_ptr(1, 0), " %d %d              ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10236  015ADA  0E01               	movlw	1
 10237  015ADC  6EE6               	movwf	postinc1,c
 10238  015ADE  ECD3  F0E6         	call	_get_raw_result	;wreg free
 10239  015AE2  0060  F007  FFE6   	movff	btemp,postinc1
 10240  015AE8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10241  015AEE  0E00               	movlw	0
 10242  015AF0  6EE6               	movwf	postinc1,c
 10243  015AF2  ECD3  F0E6         	call	_get_raw_result	;wreg free
 10244  015AF6  0060  F007  FFE6   	movff	btemp,postinc1
 10245  015AFC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10246  015B02  0EBA               	movlw	low STR_52
 10247  015B04  6EE6               	movwf	postinc1,c
 10248  015B06  0EFD               	movlw	high STR_52
 10249  015B08  6EE6               	movwf	postinc1,c
 10250  015B0A  0E00               	movlw	0
 10251  015B0C  6EE6               	movwf	postinc1,c
 10252  015B0E  0E01               	movlw	1
 10253  015B10  6EE6               	movwf	postinc1,c
 10254  015B12  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 10255  015B16  0060  F007  FFE6   	movff	btemp,postinc1
 10256  015B1C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10257  015B22  0E08               	movlw	8
 10258  015B24  6EE6               	movwf	postinc1,c
 10259  015B26  EC1C  F0D3         	call	_sprintf	;wreg free
 10260                           
 10261                           ; BSR set to: 0
 10262                           ;main.c: 509:   sprintf(get_vterm_ptr(2, 0), "Stability clock %d  ", x);
 10263                           ;stkvar	_x @ sp[(-9)+8]
 10264  015B2A  0EFF               	movlw	-1
 10265  015B2C  50E3               	movf	plusw1,w,c
 10266  015B2E  6EE6               	movwf	postinc1,c
 10267  015B30  0E00               	movlw	0
 10268  015B32  6EE6               	movwf	postinc1,c
 10269  015B34  0E1F               	movlw	low STR_53
 10270  015B36  6EE6               	movwf	postinc1,c
 10271  015B38  0EFF               	movlw	high STR_53
 10272  015B3A  6EE6               	movwf	postinc1,c
 10273  015B3C  0E00               	movlw	0
 10274  015B3E  6EE6               	movwf	postinc1,c
 10275  015B40  0E02               	movlw	2
 10276  015B42  6EE6               	movwf	postinc1,c
 10277  015B44  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 10278  015B48  0060  F007  FFE6   	movff	btemp,postinc1
 10279  015B4E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10280  015B54  0E06               	movlw	6
 10281  015B56  6EE6               	movwf	postinc1,c
 10282  015B58  EC1C  F0D3         	call	_sprintf	;wreg free
 10283                           
 10284                           ; BSR set to: 0
 10285                           ;main.c: 510:   update_lcd(0);
 10286  015B5C  0E00               	movlw	0
 10287  015B5E  6EE6               	movwf	postinc1,c
 10288  015B60  EC94  F0D2         	call	_update_lcd	;wreg free
 10289                           
 10290                           ;main.c: 511:   clear_adc_scan();
 10291  015B64  ECC9  F0E7         	call	_clear_adc_scan	;wreg free
 10292                           
 10293                           ; BSR set to: 0
 10294                           ;main.c: 512:   start_adc_scan();
 10295  015B68  ECE9  F0DE         	call	_start_adc_scan	;wreg free
 10296                           
 10297                           ;main.c: 513:   WaitMs(100);
 10298  015B6C  0E64               	movlw	100
 10299  015B6E  6EE6               	movwf	postinc1,c
 10300  015B70  0E00               	movlw	0
 10301  015B72  6EE6               	movwf	postinc1,c
 10302  015B74  EC41  F0E3         	call	_WaitMs	;wreg free
 10303                           
 10304                           ;main.c: 514:  } while (++x < 64);
 10305                           ;stkvar	_x @ sp[(-9)+8]
 10306  015B78  0EFF               	movlw	-1
 10307  015B7A  2AE3               	incf	plusw1,f,c
 10308  015B7C  0EFF               	movlw	-1
 10309  015B7E  006F FF8C  F001    	movff	plusw1,btemp
 10310  015B84  0E3F               	movlw	63
 10311  015B86  6401               	cpfsgt	btemp^0,c
 10312  015B88  D770               	goto	l13826
 10313                           
 10314                           ;main.c: 515:  cb = cb >> 6;
 10315  015B8A  0E06               	movlw	6
 10316  015B8C  6E0C               	movwf	(btemp+11)^0,c
 10317                           
 10318                           ;stkvar	_cb @ sp[(-9)+4]
 10319  015B8E  50E1               	movf	fsr1l,w,c
 10320  015B90  0FFB               	addlw	-5
 10321  015B92  6ED9               	movwf	fsr2l,c
 10322  015B94  50E2               	movf	fsr1h,w,c
 10323  015B96  6EDA               	movwf	fsr2h,c
 10324  015B98  0EFF               	movlw	255
 10325  015B9A  22DA               	addwfc	fsr2h,f,c
 10326  015B9C  280C               	incf	(btemp+11)^0,w,c
 10327  015B9E  52DE               	movf	postinc2,f,c
 10328  015BA0  D007               	goto	u13260
 10329  015BA2                     u13265:
 10330  015BA2  52DE               	movf	postinc2,f,c
 10331  015BA4  52DE               	movf	postinc2,f,c
 10332  015BA6  90D8               	bcf	status,0,c
 10333  015BA8  32DD               	rrcf	postdec2,f,c
 10334  015BAA  32DD               	rrcf	postdec2,f,c
 10335  015BAC  32DD               	rrcf	postdec2,f,c
 10336  015BAE  32DE               	rrcf	postinc2,f,c
 10337  015BB0                     u13260:
 10338  015BB0  2EE8               	decfsz	wreg,f,c
 10339  015BB2  D7F7               	goto	u13265
 10340                           
 10341                           ;main.c: 516:  cp = cp >> 6;
 10342  015BB4  0E06               	movlw	6
 10343  015BB6  6E0C               	movwf	(btemp+11)^0,c
 10344                           
 10345                           ;stkvar	_cp @ sp[(-9)+0]
 10346  015BB8  50E1               	movf	fsr1l,w,c
 10347  015BBA  0FF7               	addlw	-9
 10348  015BBC  6ED9               	movwf	fsr2l,c
 10349  015BBE  50E2               	movf	fsr1h,w,c
 10350  015BC0  6EDA               	movwf	fsr2h,c
 10351  015BC2  0EFF               	movlw	255
 10352  015BC4  22DA               	addwfc	fsr2h,f,c
 10353  015BC6  280C               	incf	(btemp+11)^0,w,c
 10354  015BC8  52DE               	movf	postinc2,f,c
 10355  015BCA  D007               	goto	u13270
 10356  015BCC                     u13275:
 10357  015BCC  52DE               	movf	postinc2,f,c
 10358  015BCE  52DE               	movf	postinc2,f,c
 10359  015BD0  90D8               	bcf	status,0,c
 10360  015BD2  32DD               	rrcf	postdec2,f,c
 10361  015BD4  32DD               	rrcf	postdec2,f,c
 10362  015BD6  32DD               	rrcf	postdec2,f,c
 10363  015BD8  32DE               	rrcf	postinc2,f,c
 10364  015BDA                     u13270:
 10365  015BDA  2EE8               	decfsz	wreg,f,c
 10366  015BDC  D7F7               	goto	u13275
 10367                           
 10368                           ;main.c: 518:  if (cal_current_zero(0, cb, cp)) {
 10369                           ;stkvar	_cp @ sp[(-9)+0]
 10370  015BDE  0EF7               	movlw	-9
 10371  015BE0  006F FF8F FFE6     	movff	plusw1,postinc1
 10372  015BE6  006F FF8F FFE6     	movff	plusw1,postinc1
 10373                           
 10374                           ;stkvar	_cb @ sp[(-11)+4]
 10375  015BEC  0EF9               	movlw	-7
 10376  015BEE  006F FF8F FFE6     	movff	plusw1,postinc1
 10377  015BF4  006F FF8F FFE6     	movff	plusw1,postinc1
 10378  015BFA  0E00               	movlw	0
 10379  015BFC  6EE6               	movwf	postinc1,c
 10380  015BFE  EC70  F0DB         	call	_cal_current_zero	;wreg free
 10381  015C02  5001               	movf	btemp^0,w,c
 10382  015C04  B4D8               	btfsc	status,2,c
 10383  015C06  D075               	goto	l13864
 10384                           
 10385                           ;main.c: 519:   cal_current_zero(1, cb, cp);
 10386                           ;stkvar	_cp @ sp[(-9)+0]
 10387  015C08  0EF7               	movlw	-9
 10388  015C0A  006F FF8F FFE6     	movff	plusw1,postinc1
 10389  015C10  006F FF8F FFE6     	movff	plusw1,postinc1
 10390                           
 10391                           ;stkvar	_cb @ sp[(-11)+4]
 10392  015C16  0EF9               	movlw	-7
 10393  015C18  006F FF8F FFE6     	movff	plusw1,postinc1
 10394  015C1E  006F FF8F FFE6     	movff	plusw1,postinc1
 10395  015C24  0E01               	movlw	1
 10396  015C26  6EE6               	movwf	postinc1,c
 10397  015C28  EC70  F0DB         	call	_cal_current_zero	;wreg free
 10398                           
 10399                           ;main.c: 520:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
 10400  015C2C  0EB6               	movlw	low STR_46
 10401  015C2E  6EE6               	movwf	postinc1,c
 10402  015C30  0EFE               	movlw	high STR_46
 10403  015C32  6EE6               	movwf	postinc1,c
 10404  015C34  0E00               	movlw	0
 10405  015C36  6EE6               	movwf	postinc1,c
 10406  015C38  0E00               	movlw	0
 10407  015C3A  6EE6               	movwf	postinc1,c
 10408  015C3C  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 10409  015C40  0060  F007  FFE6   	movff	btemp,postinc1
 10410  015C46  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10411  015C4C  0E04               	movlw	4
 10412  015C4E  6EE6               	movwf	postinc1,c
 10413  015C50  EC1C  F0D3         	call	_sprintf	;wreg free
 10414                           
 10415                           ; BSR set to: 0
 10416                           ;main.c: 521:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", cb, cp);
 10417                           ;stkvar	_cp @ sp[(-9)+0]
 10418  015C54  0EF7               	movlw	-9
 10419  015C56  006F FF8F FFE6     	movff	plusw1,postinc1
 10420  015C5C  006F FF8F FFE6     	movff	plusw1,postinc1
 10421  015C62  006F FF8F FFE6     	movff	plusw1,postinc1
 10422  015C68  006F FF8F FFE6     	movff	plusw1,postinc1
 10423                           
 10424                           ;stkvar	_cb @ sp[(-13)+4]
 10425  015C6E  0EF7               	movlw	-9
 10426  015C70  006F FF8F FFE6     	movff	plusw1,postinc1
 10427  015C76  006F FF8F FFE6     	movff	plusw1,postinc1
 10428  015C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 10429  015C82  006F FF8F FFE6     	movff	plusw1,postinc1
 10430  015C88  0EE4               	movlw	low STR_55
 10431  015C8A  6EE6               	movwf	postinc1,c
 10432  015C8C  0EFD               	movlw	high STR_55
 10433  015C8E  6EE6               	movwf	postinc1,c
 10434  015C90  0E00               	movlw	0
 10435  015C92  6EE6               	movwf	postinc1,c
 10436  015C94  0E01               	movlw	1
 10437  015C96  6EE6               	movwf	postinc1,c
 10438  015C98  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 10439  015C9C  0060  F007  FFE6   	movff	btemp,postinc1
 10440  015CA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10441  015CA8  0E0C               	movlw	12
 10442  015CAA  6EE6               	movwf	postinc1,c
 10443  015CAC  EC1C  F0D3         	call	_sprintf	;wreg free
 10444                           
 10445                           ; BSR set to: 0
 10446                           ;main.c: 522:   sprintf(get_vterm_ptr(2, 0), "Zero Cal Set        ");
 10447  015CB0  0E8C               	movlw	low STR_56
 10448  015CB2  6EE6               	movwf	postinc1,c
 10449  015CB4  0EFE               	movlw	high STR_56
 10450  015CB6  6EE6               	movwf	postinc1,c
 10451  015CB8  0E00               	movlw	0
 10452  015CBA  6EE6               	movwf	postinc1,c
 10453  015CBC  0E02               	movlw	2
 10454  015CBE  6EE6               	movwf	postinc1,c
 10455  015CC0  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 10456  015CC4  0060  F007  FFE6   	movff	btemp,postinc1
 10457  015CCA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10458  015CD0  0E04               	movlw	4
 10459  015CD2  6EE6               	movwf	postinc1,c
 10460  015CD4  EC1C  F0D3         	call	_sprintf	;wreg free
 10461                           
 10462                           ; BSR set to: 0
 10463                           ;main.c: 523:   update_lcd(0);
 10464  015CD8  0E00               	movlw	0
 10465  015CDA  6EE6               	movwf	postinc1,c
 10466  015CDC  EC94  F0D2         	call	_update_lcd	;wreg free
 10467                           
 10468                           ;main.c: 524:   WaitMs(2000);
 10469  015CE0  0ED0               	movlw	208
 10470  015CE2  6EE6               	movwf	postinc1,c
 10471  015CE4  0E07               	movlw	7
 10472  015CE6  6EE6               	movwf	postinc1,c
 10473  015CE8  EC41  F0E3         	call	_WaitMs	;wreg free
 10474                           
 10475                           ;main.c: 525:   write_cal_data();
 10476  015CEC  EC25  F0D7         	call	_write_cal_data	;wreg free
 10477                           
 10478                           ;main.c: 526:  } else {
 10479  015CF0  D05A               	goto	l1406
 10480  015CF2                     l13864:
 10481                           
 10482                           ;main.c: 527:   sprintf(get_vterm_ptr(0, 0), "PV and BATTERY      ");
 10483  015CF2  0EB6               	movlw	low STR_46
 10484  015CF4  6EE6               	movwf	postinc1,c
 10485  015CF6  0EFE               	movlw	high STR_46
 10486  015CF8  6EE6               	movwf	postinc1,c
 10487  015CFA  0E00               	movlw	0
 10488  015CFC  6EE6               	movwf	postinc1,c
 10489  015CFE  0E00               	movlw	0
 10490  015D00  6EE6               	movwf	postinc1,c
 10491  015D02  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 10492  015D06  0060  F007  FFE6   	movff	btemp,postinc1
 10493  015D0C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10494  015D12  0E04               	movlw	4
 10495  015D14  6EE6               	movwf	postinc1,c
 10496  015D16  EC1C  F0D3         	call	_sprintf	;wreg free
 10497                           
 10498                           ;main.c: 528:   sprintf(get_vterm_ptr(1, 0), " %ld %ld            ", get_raw_result(C_BA
      +                          TT), get_raw_result(C_PV));
 10499  015D1A  0E01               	movlw	1
 10500  015D1C  6EE6               	movwf	postinc1,c
 10501  015D1E  ECD3  F0E6         	call	_get_raw_result	;wreg free
 10502  015D22  0060  F007  FFE6   	movff	btemp,postinc1
 10503  015D28  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10504  015D2E  0E00               	movlw	0
 10505  015D30  6EE6               	movwf	postinc1,c
 10506  015D32  ECD3  F0E6         	call	_get_raw_result	;wreg free
 10507  015D36  0060  F007  FFE6   	movff	btemp,postinc1
 10508  015D3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10509  015D42  0EE4               	movlw	low STR_55
 10510  015D44  6EE6               	movwf	postinc1,c
 10511  015D46  0EFD               	movlw	high STR_55
 10512  015D48  6EE6               	movwf	postinc1,c
 10513  015D4A  0E00               	movlw	0
 10514  015D4C  6EE6               	movwf	postinc1,c
 10515  015D4E  0E01               	movlw	1
 10516  015D50  6EE6               	movwf	postinc1,c
 10517  015D52  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 10518  015D56  0060  F007  FFE6   	movff	btemp,postinc1
 10519  015D5C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10520  015D62  0E08               	movlw	8
 10521  015D64  6EE6               	movwf	postinc1,c
 10522  015D66  EC1C  F0D3         	call	_sprintf	;wreg free
 10523                           
 10524                           ;main.c: 529:   sprintf(get_vterm_ptr(2, 0), "Out Of Range        ");
 10525  015D6A  0E77               	movlw	low STR_59
 10526  015D6C  6EE6               	movwf	postinc1,c
 10527  015D6E  0EFE               	movlw	high STR_59
 10528  015D70  6EE6               	movwf	postinc1,c
 10529  015D72  0E00               	movlw	0
 10530  015D74  6EE6               	movwf	postinc1,c
 10531  015D76  0E02               	movlw	2
 10532  015D78  6EE6               	movwf	postinc1,c
 10533  015D7A  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 10534  015D7E  0060  F007  FFE6   	movff	btemp,postinc1
 10535  015D84  0060  F00B  FFE6   	movff	btemp+1,postinc1
 10536  015D8A  0E04               	movlw	4
 10537  015D8C  6EE6               	movwf	postinc1,c
 10538  015D8E  EC1C  F0D3         	call	_sprintf	;wreg free
 10539                           
 10540                           ;main.c: 530:   update_lcd(0);
 10541  015D92  0E00               	movlw	0
 10542  015D94  6EE6               	movwf	postinc1,c
 10543  015D96  EC94  F0D2         	call	_update_lcd	;wreg free
 10544                           
 10545                           ;main.c: 531:   WaitMs(2000);
 10546  015D9A  0ED0               	movlw	208
 10547  015D9C  6EE6               	movwf	postinc1,c
 10548  015D9E  0E07               	movlw	7
 10549  015DA0  6EE6               	movwf	postinc1,c
 10550  015DA2  EC41  F0E3         	call	_WaitMs	;wreg free
 10551  015DA6                     l1406:
 10552                           
 10553                           ; _current_sensor_cal: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 10554  015DA6  0EF7               	movlw	247
 10555  015DA8  26E1               	addwf	fsr1l,f,c
 10556  015DAA  0EFF               	movlw	255
 10557  015DAC  22E2               	addwfc	fsr1h,f,c
 10558  015DAE  0012               	return		;funcret
 10559  015DB0                     __end_of_current_sensor_cal:
 10560                           	opt callstack 0
 10561                           
 10562 ;; *************** function _write_cal_data *****************
 10563 ;; Defined at:
 10564 ;;		line 372 in file "daq.c"
 10565 ;; Parameters:    Size  Location     Type
 10566 ;;		None
 10567 ;; Auto vars:     Size  Location     Type
 10568 ;;  x               2  [STACK] unsigned short 
 10569 ;;  y               2  [STACK] unsigned short 
 10570 ;;  r_cal_ptr       1  [STACK] PTR unsigned char 
 10571 ;;		 -> R(58), 
 10572 ;; Return value:  Size  Location     Type
 10573 ;;                  1  [STACK] void 
 10574 ;; Registers used:
 10575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10576 ;; Tracked objects:
 10577 ;;		On entry : 0/0
 10578 ;;		On exit  : 0/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10585 ;;Total ram usage:        0 bytes
 10586 ;; Hardware stack levels used:    1
 10587 ;; Hardware stack levels required when called:   16
 10588 ;; This function calls:
 10589 ;;		_DATAEE_WriteByte
 10590 ;; This function is called by:
 10591 ;;		_current_sensor_cal
 10592 ;; This function uses a reentrant model
 10593 ;;
 10594                           
 10595                           	psect	text30
 10596  01AE4A                     __ptext30:
 10597                           	opt callstack 0
 10598  01AE4A                     _write_cal_data:
 10599                           	opt callstack 0
 10600                           
 10601                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10602  01AE4A  0E05               	movlw	5
 10603  01AE4C  26E1               	addwf	fsr1l,f,c
 10604  01AE4E  0E00               	movlw	0
 10605  01AE50  22E2               	addwfc	fsr1h,f,c
 10606                           
 10607                           ;daq.c: 374:  uint16_t x = 0, y;
 10608                           ;stkvar	_x @ sp[(-5)+0]
 10609                           
 10610                           ;incstack = 0
 10611  01AE52  0EFB               	movlw	-5
 10612  01AE54  6AE3               	clrf	plusw1,c
 10613  01AE56  0EFC               	movlw	-4
 10614  01AE58  6AE3               	clrf	plusw1,c
 10615                           
 10616                           ;daq.c: 375:  uint8_t *r_cal_ptr;;daq.c: 377:  y = sizeof(R);
 10617  01AE5A  0E3A               	movlw	58
 10618  01AE5C  6E0B               	movwf	(btemp+10)^0,c
 10619  01AE5E  0E00               	movlw	0
 10620  01AE60  6E0C               	movwf	(btemp+11)^0,c
 10621                           
 10622                           ;stkvar	_y @ sp[(-5)+2]
 10623  01AE62  0EFD               	movlw	-3
 10624  01AE64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10625  01AE6A  0EFE               	movlw	-2
 10626  01AE6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 10627                           
 10628                           ;daq.c: 378:  r_cal_ptr = (uint8_t*) & R;
 10629                           ;stkvar	_r_cal_ptr @ sp[(-5)+4]
 10630  01AE72  0EAB               	movlw	low _R
 10631  01AE74  6E01               	movwf	btemp^0,c
 10632  01AE76  0EFF               	movlw	-1
 10633  01AE78  0060  F007  FFE3   	movff	btemp,plusw1
 10634                           
 10635                           ;daq.c: 379:  R.checkmark = 0x1957;
 10636  01AE7E  0E19               	movlw	25
 10637  01AE80  0100               	movlb	0	; () banked
 10638  01AE82  6FE2               	movwf	(_R+55)& (0+255),b	;volatile
 10639  01AE84  0E57               	movlw	87
 10640  01AE86  6FE1               	movwf	(_R+54)& (0+255),b	;volatile
 10641  01AE88                     l11016:
 10642                           
 10643                           ;daq.c: 382:   DATAEE_WriteByte(x, r_cal_ptr[x]);
 10644                           ;stkvar	_x @ sp[(-5)+0]
 10645  01AE88  0EFB               	movlw	-5
 10646  01AE8A  006F FF8C  F00C    	movff	plusw1,btemp+11
 10647                           
 10648                           ;stkvar	_r_cal_ptr @ sp[(-5)+4]
 10649  01AE90  0EFF               	movlw	-1
 10650  01AE92  50E3               	movf	plusw1,w,c
 10651  01AE94  240C               	addwf	(btemp+11)^0,w,c
 10652  01AE96  6ED9               	movwf	fsr2l,c
 10653  01AE98  6ADA               	clrf	fsr2h,c
 10654  01AE9A  50DF               	movf	indf2,w,c
 10655  01AE9C  6EE6               	movwf	postinc1,c
 10656                           
 10657                           ;stkvar	_x @ sp[(-6)+0]
 10658  01AE9E  0EFA               	movlw	-6
 10659  01AEA0  006F FF8F FFE6     	movff	plusw1,postinc1
 10660  01AEA6  006F FF8F FFE6     	movff	plusw1,postinc1
 10661  01AEAC  EC4F  F0DE         	call	_DATAEE_WriteByte	;wreg free
 10662                           
 10663                           ;daq.c: 383:  } while (++x < y);
 10664                           ;stkvar	_y @ sp[(-5)+2]
 10665  01AEB0  0EFD               	movlw	-3
 10666  01AEB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 10667  01AEB8  0EFE               	movlw	-2
 10668  01AEBA  006F FF8C  F00C    	movff	plusw1,btemp+11
 10669                           
 10670                           ;stkvar	_x @ sp[(-5)+0]
 10671  01AEC0  0EFB               	movlw	-5
 10672  01AEC2  50E3               	movf	plusw1,w,c
 10673  01AEC4  0F01               	addlw	1
 10674  01AEC6  6E01               	movwf	btemp^0,c
 10675  01AEC8  0EFB               	movlw	-5
 10676  01AECA  0060  F007  FFE3   	movff	btemp,plusw1
 10677  01AED0  6A01               	clrf	btemp^0,c
 10678  01AED2  0EFC               	movlw	-4
 10679  01AED4  50E3               	movf	plusw1,w,c
 10680  01AED6  2001               	addwfc	btemp^0,w,c
 10681  01AED8  6E01               	movwf	btemp^0,c
 10682  01AEDA  0EFC               	movlw	-4
 10683  01AEDC  0060  F007  FFE3   	movff	btemp,plusw1
 10684  01AEE2  0EFB               	movlw	-5
 10685  01AEE4  006F FF8C  F009    	movff	plusw1,btemp+8
 10686  01AEEA  0EFC               	movlw	-4
 10687  01AEEC  006F FF8C  F00A    	movff	plusw1,btemp+9
 10688  01AEF2  500B               	movf	(btemp+10)^0,w,c
 10689  01AEF4  5C09               	subwf	(btemp+8)^0,w,c
 10690  01AEF6  500C               	movf	(btemp+11)^0,w,c
 10691  01AEF8  580A               	subwfb	(btemp+9)^0,w,c
 10692  01AEFA  A0D8               	btfss	status,0,c
 10693  01AEFC  D7C5               	goto	l11016
 10694                           
 10695                           ; _write_cal_data: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10696  01AEFE  0EFB               	movlw	251
 10697  01AF00  26E1               	addwf	fsr1l,f,c
 10698  01AF02  0EFF               	movlw	255
 10699  01AF04  22E2               	addwfc	fsr1h,f,c
 10700  01AF06  0012               	return		;funcret
 10701  01AF08                     __end_of_write_cal_data:
 10702                           	opt callstack 0
 10703                           
 10704 ;; *************** function _DATAEE_WriteByte *****************
 10705 ;; Defined at:
 10706 ;;		line 172 in file "mcc_generated_files/memory.c"
 10707 ;; Parameters:    Size  Location     Type
 10708 ;;  bAdd            2  [STACK] unsigned short 
 10709 ;;  bData           1  [STACK] unsigned char 
 10710 ;; Auto vars:     Size  Location     Type
 10711 ;;  GIEBitValue     1  [STACK] unsigned char 
 10712 ;; Return value:  Size  Location     Type
 10713 ;;                  1  [STACK] void 
 10714 ;; Registers used:
 10715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 10716 ;; Tracked objects:
 10717 ;;		On entry : 0/0
 10718 ;;		On exit  : 0/0
 10719 ;;		Unchanged: 0/0
 10720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10725 ;;Total ram usage:        0 bytes
 10726 ;; Hardware stack levels used:    1
 10727 ;; Hardware stack levels required when called:   15
 10728 ;; This function calls:
 10729 ;;		Nothing
 10730 ;; This function is called by:
 10731 ;;		_write_cal_data
 10732 ;; This function uses a reentrant model
 10733 ;;
 10734                           
 10735                           	psect	text31
 10736  01BC9E                     __ptext31:
 10737                           	opt callstack 0
 10738  01BC9E                     _DATAEE_WriteByte:
 10739                           	opt callstack 0
 10740                           
 10741                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10742  01BC9E  52E6               	movf	postinc1,f,c
 10743                           
 10744                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 10745                           
 10746                           ;incstack = 0
 10747  01BCA0  AED2               	btfss	210,7,c	;volatile
 10748  01BCA2  D003               	goto	u9600
 10749  01BCA4  6A0C               	clrf	(btemp+11)^0,c
 10750  01BCA6  2A0C               	incf	(btemp+11)^0,f,c
 10751  01BCA8  D001               	goto	u9608
 10752  01BCAA                     u9600:
 10753  01BCAA  6A0C               	clrf	(btemp+11)^0,c
 10754  01BCAC                     u9608:
 10755                           
 10756                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 10757  01BCAC  0EFF               	movlw	-1
 10758  01BCAE  0060  F033  FFE3   	movff	btemp+11,plusw1
 10759                           
 10760                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 10761                           ;stkvar	_bAdd @ sp[(-1)+-2]
 10762  01BCB4  0EFE               	movlw	254
 10763  01BCB6  24E1               	addwf	fsr1l,w,c
 10764  01BCB8  6ED9               	movwf	fsr2l,c
 10765  01BCBA  0EFF               	movlw	255
 10766  01BCBC  20E2               	addwfc	fsr1h,w,c
 10767  01BCBE  6EDA               	movwf	fsr2h,c
 10768  01BCC0  50DF               	movf	indf2,w,c
 10769  01BCC2  0B03               	andlw	3
 10770  01BCC4  0139               	movlb	57	; () banked
 10771  01BCC6  6FE1               	movwf	225,b	;volatile
 10772                           
 10773                           ; BSR set to: 57
 10774                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 10775                           ;stkvar	_bAdd @ sp[(-1)+-2]
 10776  01BCC8  0EFD               	movlw	-3
 10777  01BCCA  006F FF8F F9E0     	movff	plusw1,14816	;volatile
 10778                           
 10779                           ; BSR set to: 57
 10780                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 10781                           ;stkvar	_bData @ sp[(-1)+-3]
 10782  01BCD0  0EFC               	movlw	-4
 10783  01BCD2  006F FF8F F9E3     	movff	plusw1,14819	;volatile
 10784                           
 10785                           ; BSR set to: 57
 10786                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 10787  01BCD8  0E3F               	movlw	-193
 10788  01BCDA  17E5               	andwf	229,f,b	;volsfr
 10789                           
 10790                           ; BSR set to: 57
 10791                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 10792  01BCDC  85E5               	bsf	229,2,b	;volsfr
 10793                           
 10794                           ; BSR set to: 57
 10795                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 10796  01BCDE  9ED2               	bcf	210,7,c	;volatile
 10797                           
 10798                           ; BSR set to: 57
 10799                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 10800  01BCE0  0E55               	movlw	85
 10801  01BCE2  6FE6               	movwf	230,b	;volsfr
 10802                           
 10803                           ; BSR set to: 57
 10804                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 10805  01BCE4  0EAA               	movlw	170
 10806  01BCE6  6FE6               	movwf	230,b	;volsfr
 10807                           
 10808                           ; BSR set to: 57
 10809                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 10810  01BCE8  83E5               	bsf	229,1,b	;volsfr
 10811  01BCEA                     l940:
 10812                           
 10813                           ; BSR set to: 57
 10814                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 10815  01BCEA  B3E5               	btfsc	229,1,b	;volsfr
 10816  01BCEC  D7FE               	goto	l940
 10817                           
 10818                           ; BSR set to: 57
 10819                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 10820  01BCEE  95E5               	bcf	229,2,b	;volsfr
 10821                           
 10822                           ; BSR set to: 57
 10823                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 10824                           ;stkvar	_GIEBitValue @ sp[(-1)+0]
 10825  01BCF0  0EFF               	movlw	-1
 10826  01BCF2  B0E3               	btfsc	plusw1,0,c
 10827  01BCF4  D002               	bra	u9625
 10828  01BCF6  9ED2               	bcf	210,7,c	;volatile
 10829  01BCF8  D001               	bra	u9626
 10830  01BCFA                     u9625:
 10831  01BCFA  8ED2               	bsf	210,7,c	;volatile
 10832  01BCFC                     u9626:
 10833                           
 10834                           ; _DATAEE_WriteByte: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 10835  01BCFC  52E5               	movf	postdec1,f,c
 10836  01BCFE  52E5               	movf	postdec1,f,c
 10837  01BD00  52E5               	movf	postdec1,f,c
 10838  01BD02  52E5               	movf	postdec1,f,c
 10839  01BD04  0012               	return		;funcret
 10840  01BD06                     __end_of_DATAEE_WriteByte:
 10841                           	opt callstack 0
 10842                           
 10843 ;; *************** function _start_adc_scan *****************
 10844 ;; Defined at:
 10845 ;;		line 64 in file "daq.c"
 10846 ;; Parameters:    Size  Location     Type
 10847 ;;		None
 10848 ;; Auto vars:     Size  Location     Type
 10849 ;;		None
 10850 ;; Return value:  Size  Location     Type
 10851 ;;                  1  [STACK] _Bool 
 10852 ;; Registers used:
 10853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 10854 ;; Tracked objects:
 10855 ;;		On entry : 0/0
 10856 ;;		On exit  : 1/0
 10857 ;;		Unchanged: 0/0
 10858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10863 ;;Total ram usage:        0 bytes
 10864 ;; Hardware stack levels used:    1
 10865 ;; Hardware stack levels required when called:   16
 10866 ;; This function calls:
 10867 ;;		_ADCC_DischargeSampleCapacitor
 10868 ;;		_ADCC_SetADIInterruptHandler
 10869 ;;		_ADCC_SetADTIInterruptHandler
 10870 ;;		_ADCC_StartConversion
 10871 ;; This function is called by:
 10872 ;;		_main
 10873 ;;		_current_sensor_cal
 10874 ;;		_update_adc_result
 10875 ;; This function uses a reentrant model
 10876 ;;
 10877                           
 10878                           	psect	text32
 10879  01BDD2                     __ptext32:
 10880                           	opt callstack 0
 10881  01BDD2                     _start_adc_scan:
 10882                           	opt callstack 14
 10883                           
 10884                           ;daq.c: 66:  if (R.done)
 10885                           
 10886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10887                           ;incstack = 0
 10888  01BDD2  0100               	movlb	0	; () banked
 10889  01BDD4  51E0               	movf	(_R+53)& (0+255),w,b	;volatile
 10890  01BDD6  A4D8               	btfss	status,2,c
 10891  01BDD8  0012               	return	
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;daq.c: 69:  R.scan_index = 0;
 10895  01BDDA  6BDD               	clrf	(_R+50)& (0+255),b	;volatile
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;daq.c: 70:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
 10899  01BDDC  013A               	movlb	58	; () banked
 10900  01BDDE  5140               	movf	64,w,b	;volatile
 10901  01BDE0  006E F940  F001    	movff	14928,btemp	;volatile
 10902  01BDE6  6A02               	clrf	(btemp+1)^0,c
 10903  01BDE8  0060  F004  F002   	movff	btemp,btemp+1
 10904  01BDEE  6A01               	clrf	btemp^0,c
 10905  01BDF0  2601               	addwf	btemp^0,f,c
 10906  01BDF2  0E00               	movlw	0
 10907  01BDF4  2202               	addwfc	(btemp+1)^0,f,c
 10908  01BDF6  0E77               	movlw	119
 10909  01BDF8  1401               	andwf	btemp^0,w,c
 10910  01BDFA  0100               	movlb	0	; () banked
 10911  01BDFC  6FDE               	movwf	(_R+51)& (0+255),b	;volatile
 10912  01BDFE  0E3C               	movlw	60
 10913  01BE00  1402               	andwf	(btemp+1)^0,w,c
 10914  01BE02  6FDF               	movwf	(_R+52)& (0+255),b	;volatile
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;daq.c: 71:  ADCC_SetADIInterruptHandler(adc_int_handler);
 10918  01BE04  0EBA               	movlw	low _adc_int_handler
 10919  01BE06  6EE6               	movwf	postinc1,c
 10920  01BE08  0ECF               	movlw	high _adc_int_handler
 10921  01BE0A  6EE6               	movwf	postinc1,c
 10922  01BE0C  0E01               	movlw	low (_adc_int_handler shr (0+16))
 10923  01BE0E  6EE6               	movwf	postinc1,c
 10924  01BE10  EC87  F0E5         	call	_ADCC_SetADIInterruptHandler	;wreg free
 10925                           
 10926                           ;daq.c: 72:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
 10927  01BE14  0E7E               	movlw	low _adc_int_t_handler
 10928  01BE16  6EE6               	movwf	postinc1,c
 10929  01BE18  0EB9               	movlw	high _adc_int_t_handler
 10930  01BE1A  6EE6               	movwf	postinc1,c
 10931  01BE1C  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
 10932  01BE1E  6EE6               	movwf	postinc1,c
 10933  01BE20  EC73  F0E5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 10934                           
 10935                           ;daq.c: 73:  ADCC_DischargeSampleCapacitor();
 10936  01BE24  ECB9  F0E7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 10937                           
 10938                           ; BSR set to: 62
 10939                           ;daq.c: 74:  ADCC_StartConversion(R.scan_index & 0xf);
 10940  01BE28  0100               	movlb	0	; () banked
 10941  01BE2A  51DD               	movf	(_R+50)& (0+255),w,b	;volatile
 10942  01BE2C  0B0F               	andlw	15
 10943  01BE2E  6EE6               	movwf	postinc1,c
 10944  01BE30  EC4B  F0E7         	call	_ADCC_StartConversion	;wreg free
 10945                           
 10946                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 10947  01BE34  0012               	return		;funcret
 10948  01BE36                     __end_of_start_adc_scan:
 10949                           	opt callstack 0
 10950                           
 10951 ;; *************** function _ADCC_StartConversion *****************
 10952 ;; Defined at:
 10953 ;;		line 128 in file "mcc_generated_files/adcc.c"
 10954 ;; Parameters:    Size  Location     Type
 10955 ;;  channel         1  [STACK] enum E16136
 10956 ;; Auto vars:     Size  Location     Type
 10957 ;;		None
 10958 ;; Return value:  Size  Location     Type
 10959 ;;                  1  [STACK] void 
 10960 ;; Registers used:
 10961 ;;		fsr1l, fsr1h
 10962 ;; Tracked objects:
 10963 ;;		On entry : 3F/0
 10964 ;;		On exit  : 3F/3E
 10965 ;;		Unchanged: 0/0
 10966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10971 ;;Total ram usage:        0 bytes
 10972 ;; Hardware stack levels used:    1
 10973 ;; Hardware stack levels required when called:   15
 10974 ;; This function calls:
 10975 ;;		Nothing
 10976 ;; This function is called by:
 10977 ;;		_start_adc_scan
 10978 ;;		_adc_int_t_handler
 10979 ;; This function uses a reentrant model
 10980 ;;
 10981                           
 10982                           	psect	text33
 10983  01CE96                     __ptext33:
 10984                           	opt callstack 0
 10985  01CE96                     _ADCC_StartConversion:
 10986                           	opt callstack 0
 10987                           
 10988                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
 10989                           ;stkvar	_channel @ sp[(0)+-1]
 10990                           
 10991                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10992                           ;incstack = 0
 10993 ;; hardware stack exceeded
 10994  01CE96  0EFF               	movlw	-1
 10995  01CE98  006F FF8F FEF1     	movff	plusw1,16113	;volatile
 10996                           
 10997                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
 10998  01CE9E  013E               	movlb	62	; () banked
 10999  01CEA0  8FF8               	bsf	248,7,b	;volatile
 11000                           
 11001                           ; BSR set to: 62
 11002                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
 11003  01CEA2  81F8               	bsf	248,0,b	;volatile
 11004                           
 11005                           ; BSR set to: 62
 11006                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 11007  01CEA4  52E5               	movf	postdec1,f,c
 11008  01CEA6  0012               	return		;funcret
 11009  01CEA8                     __end_of_ADCC_StartConversion:
 11010                           	opt callstack 0
 11011                           
 11012 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
 11013 ;; Defined at:
 11014 ;;		line 189 in file "mcc_generated_files/adcc.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;		None
 11017 ;; Auto vars:     Size  Location     Type
 11018 ;;		None
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  1  [STACK] void 
 11021 ;; Registers used:
 11022 ;;		wreg, status,2
 11023 ;; Tracked objects:
 11024 ;;		On entry : 0/0
 11025 ;;		On exit  : 3F/3E
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11032 ;;Total ram usage:        0 bytes
 11033 ;; Hardware stack levels used:    1
 11034 ;; Hardware stack levels required when called:   15
 11035 ;; This function calls:
 11036 ;;		Nothing
 11037 ;; This function is called by:
 11038 ;;		_start_adc_scan
 11039 ;;		_adc_int_t_handler
 11040 ;; This function uses a reentrant model
 11041 ;;
 11042                           
 11043                           	psect	text34
 11044  01CF72                     __ptext34:
 11045                           	opt callstack 0
 11046  01CF72                     _ADCC_DischargeSampleCapacitor:
 11047                           	opt callstack 0
 11048                           
 11049                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
 11050                           
 11051                           ; BSR set to: 62
 11052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11053                           ;incstack = 0
 11054 ;; hardware stack exceeded
 11055  01CF72  0E3B               	movlw	59
 11056  01CF74  013E               	movlb	62	; () banked
 11057  01CF76  6FF1               	movwf	241,b	;volatile
 11058                           
 11059                           ; BSR set to: 62
 11060                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
 11061  01CF78  0012               	return		;funcret
 11062  01CF7A                     __end_of_ADCC_DischargeSampleCapacitor:
 11063                           	opt callstack 0
 11064                           
 11065 ;; *************** function _spinners *****************
 11066 ;; Defined at:
 11067 ;;		line 146 in file "mbmc.c"
 11068 ;; Parameters:    Size  Location     Type
 11069 ;;  shape           1  [STACK] unsigned char 
 11070 ;;  reset           1  [STACK] const unsigned char 
 11071 ;; Auto vars:     Size  Location     Type
 11072 ;;  c               1  [STACK] unsigned char 
 11073 ;; Return value:  Size  Location     Type
 11074 ;;                  1  [STACK] unsigned char 
 11075 ;; Registers used:
 11076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11077 ;; Tracked objects:
 11078 ;;		On entry : 0/0
 11079 ;;		On exit  : 0/0
 11080 ;;		Unchanged: 0/0
 11081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11086 ;;Total ram usage:        0 bytes
 11087 ;; Hardware stack levels used:    1
 11088 ;; Hardware stack levels required when called:   16
 11089 ;; This function calls:
 11090 ;;		_strlen
 11091 ;; This function is called by:
 11092 ;;		_main
 11093 ;;		_current_sensor_cal
 11094 ;; This function uses a reentrant model
 11095 ;;
 11096                           
 11097                           	psect	text35
 11098  01A742                     __ptext35:
 11099                           	opt callstack 0
 11100  01A742                     _spinners:
 11101                           	opt callstack 0
 11102                           
 11103                           ; BSR set to: 62
 11104                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11105  01A742  52E6               	movf	postinc1,f,c
 11106                           
 11107                           ;mbmc.c: 146: char spinners(uint8_t shape, const uint8_t reset);mbmc.c: 147: {;mbmc.c: 1
      +                          48:  static uint8_t s[6];;mbmc.c: 149:  char c;;mbmc.c: 151:  if (shape > (6 - 1))
 11108                           ;stkvar	_shape @ sp[(-1)+-1]
 11109                           
 11110                           ;incstack = 0
 11111  01A744  0EFE               	movlw	-2
 11112  01A746  006F FF8C  F001    	movff	plusw1,btemp
 11113  01A74C  0E05               	movlw	5
 11114  01A74E  6401               	cpfsgt	btemp^0,c
 11115  01A750  D002               	goto	l2023
 11116                           
 11117                           ;mbmc.c: 152:   shape = 0;
 11118                           ;stkvar	_shape @ sp[(-1)+-1]
 11119  01A752  0EFE               	movlw	-2
 11120  01A754  6AE3               	clrf	plusw1,c
 11121  01A756                     l2023:
 11122                           
 11123                           ;mbmc.c: 153:  if (reset)
 11124                           ;stkvar	_reset @ sp[(-1)+-2]
 11125  01A756  0EFD               	movlw	-3
 11126  01A758  50E3               	movf	plusw1,w,c
 11127  01A75A  B4D8               	btfsc	status,2,c
 11128  01A75C  D00C               	goto	l10942
 11129                           
 11130                           ;mbmc.c: 154:   s[shape] = 0;
 11131                           ;stkvar	_shape @ sp[(-1)+-1]
 11132  01A75E  0EFE               	movlw	-2
 11133  01A760  50E3               	movf	plusw1,w,c
 11134  01A762  6E0B               	movwf	(btemp+10)^0,c
 11135  01A764  6A0C               	clrf	(btemp+11)^0,c
 11136  01A766  0EE4               	movlw	low spinners@s
 11137  01A768  240B               	addwf	(btemp+10)^0,w,c
 11138  01A76A  6ED9               	movwf	fsr2l,c
 11139  01A76C  0E01               	movlw	high spinners@s
 11140  01A76E  200C               	addwfc	(btemp+11)^0,w,c
 11141  01A770  6EDA               	movwf	fsr2h,c
 11142  01A772  0E00               	movlw	0
 11143  01A774  6EDF               	movwf	indf2,c
 11144  01A776                     l10942:
 11145                           
 11146                           ;mbmc.c: 155:  c = spin[shape][s[shape]];
 11147                           ;stkvar	_shape @ sp[(-1)+-1]
 11148  01A776  0EFE               	movlw	-2
 11149  01A778  50E3               	movf	plusw1,w,c
 11150  01A77A  0D14               	mullw	20
 11151  01A77C  0E43               	movlw	low _spin
 11152  01A77E  6E0B               	movwf	(btemp+10)^0,c
 11153  01A780  0EFA               	movlw	high _spin
 11154  01A782  6E0C               	movwf	(btemp+11)^0,c
 11155  01A784  50F3               	movf	243,w,c
 11156  01A786  260B               	addwf	(btemp+10)^0,f,c
 11157  01A788  50F4               	movf	244,w,c
 11158  01A78A  220C               	addwfc	(btemp+11)^0,f,c
 11159                           
 11160                           ;stkvar	_shape @ sp[(-1)+-1]
 11161  01A78C  0EFE               	movlw	-2
 11162  01A78E  50E3               	movf	plusw1,w,c
 11163  01A790  6E09               	movwf	(btemp+8)^0,c
 11164  01A792  6A0A               	clrf	(btemp+9)^0,c
 11165  01A794  0EE4               	movlw	low spinners@s
 11166  01A796  2409               	addwf	(btemp+8)^0,w,c
 11167  01A798  6ED9               	movwf	fsr2l,c
 11168  01A79A  0E01               	movlw	high spinners@s
 11169  01A79C  200A               	addwfc	(btemp+9)^0,w,c
 11170  01A79E  6EDA               	movwf	fsr2h,c
 11171  01A7A0  50DF               	movf	indf2,w,c
 11172  01A7A2  260B               	addwf	(btemp+10)^0,f,c
 11173  01A7A4  0E00               	movlw	0
 11174  01A7A6  220C               	addwfc	(btemp+11)^0,f,c
 11175  01A7A8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 11176  01A7AE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 11177  01A7B4                     	if	0	;tblptru may be non-zero
 11178  01A7B4                     	endif
 11179  01A7B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11180  01A7B4  0E00               	movlw	low (__mediumconst shr (0+16))
 11181  01A7B6  6EF8               	movwf	tblptru,c
 11182  01A7B8                     	endif
 11183                           
 11184                           ;stkvar	_c @ sp[(-1)+0]
 11185  01A7B8  0008               	tblrd		*
 11186  01A7BA  0EFF               	movlw	-1
 11187  01A7BC  006F FFD7 FFE3     	movff	tablat,plusw1
 11188                           
 11189                           ;mbmc.c: 156:  if (++s[shape] >= strlen(spin[shape]))
 11190                           ;stkvar	_shape @ sp[(-1)+-1]
 11191  01A7C2  0EFE               	movlw	-2
 11192  01A7C4  50E3               	movf	plusw1,w,c
 11193  01A7C6  0D14               	mullw	20
 11194  01A7C8  0E43               	movlw	low _spin
 11195  01A7CA  6E0B               	movwf	(btemp+10)^0,c
 11196  01A7CC  0EFA               	movlw	high _spin
 11197  01A7CE  6E0C               	movwf	(btemp+11)^0,c
 11198  01A7D0  50F3               	movf	243,w,c
 11199  01A7D2  260B               	addwf	(btemp+10)^0,f,c
 11200  01A7D4  50F4               	movf	244,w,c
 11201  01A7D6  220C               	addwfc	(btemp+11)^0,f,c
 11202  01A7D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11203  01A7DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 11204  01A7E4  EC41  F0DA         	call	_strlen	;wreg free
 11205                           
 11206                           ;stkvar	_shape @ sp[(-1)+-1]
 11207  01A7E8  0EFE               	movlw	-2
 11208  01A7EA  50E3               	movf	plusw1,w,c
 11209  01A7EC  6E0B               	movwf	(btemp+10)^0,c
 11210  01A7EE  6A0C               	clrf	(btemp+11)^0,c
 11211  01A7F0  0EE4               	movlw	low spinners@s
 11212  01A7F2  240B               	addwf	(btemp+10)^0,w,c
 11213  01A7F4  6ED9               	movwf	fsr2l,c
 11214  01A7F6  0E01               	movlw	high spinners@s
 11215  01A7F8  200C               	addwfc	(btemp+11)^0,w,c
 11216  01A7FA  6EDA               	movwf	fsr2h,c
 11217  01A7FC  2ADF               	incf	indf2,f,c
 11218  01A7FE  50DF               	movf	indf2,w,c
 11219  01A800  6E0B               	movwf	(btemp+10)^0,c
 11220  01A802  6A0C               	clrf	(btemp+11)^0,c
 11221  01A804  5001               	movf	btemp^0,w,c
 11222  01A806  5C0B               	subwf	(btemp+10)^0,w,c
 11223  01A808  5002               	movf	(btemp+1)^0,w,c
 11224  01A80A  580C               	subwfb	(btemp+11)^0,w,c
 11225  01A80C  A0D8               	btfss	status,0,c
 11226  01A80E  D00C               	goto	l10948
 11227                           
 11228                           ;mbmc.c: 157:   s[shape] = 0;
 11229                           ;stkvar	_shape @ sp[(-1)+-1]
 11230  01A810  0EFE               	movlw	-2
 11231  01A812  50E3               	movf	plusw1,w,c
 11232  01A814  6E0B               	movwf	(btemp+10)^0,c
 11233  01A816  6A0C               	clrf	(btemp+11)^0,c
 11234  01A818  0EE4               	movlw	low spinners@s
 11235  01A81A  240B               	addwf	(btemp+10)^0,w,c
 11236  01A81C  6ED9               	movwf	fsr2l,c
 11237  01A81E  0E01               	movlw	high spinners@s
 11238  01A820  200C               	addwfc	(btemp+11)^0,w,c
 11239  01A822  6EDA               	movwf	fsr2h,c
 11240  01A824  0E00               	movlw	0
 11241  01A826  6EDF               	movwf	indf2,c
 11242  01A828                     l10948:
 11243                           
 11244                           ;mbmc.c: 158:  return c;
 11245                           ;stkvar	_c @ sp[(-1)+0]
 11246  01A828  0EFF               	movlw	-1
 11247  01A82A  006F FF8C  F001    	movff	plusw1,btemp
 11248                           
 11249                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 11250  01A830  52E5               	movf	postdec1,f,c
 11251  01A832  52E5               	movf	postdec1,f,c
 11252  01A834  52E5               	movf	postdec1,f,c
 11253  01A836  0012               	return		;funcret
 11254  01A838                     __end_of_spinners:
 11255                           	opt callstack 0
 11256                           
 11257 ;; *************** function _get_switch *****************
 11258 ;; Defined at:
 11259 ;;		line 18 in file "dio.c"
 11260 ;; Parameters:    Size  Location     Type
 11261 ;;  i               1  [STACK] const unsigned char 
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;		None
 11264 ;; Return value:  Size  Location     Type
 11265 ;;                  1  [STACK] enum E17021
 11266 ;; Registers used:
 11267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 11268 ;; Tracked objects:
 11269 ;;		On entry : 0/0
 11270 ;;		On exit  : 0/0
 11271 ;;		Unchanged: 0/0
 11272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11277 ;;Total ram usage:        0 bytes
 11278 ;; Hardware stack levels used:    1
 11279 ;; Hardware stack levels required when called:   15
 11280 ;; This function calls:
 11281 ;;		Nothing
 11282 ;; This function is called by:
 11283 ;;		_main
 11284 ;;		_current_sensor_cal
 11285 ;;		_hid_input
 11286 ;; This function uses a reentrant model
 11287 ;;
 11288                           
 11289                           	psect	text36
 11290  01C8A8                     __ptext36:
 11291                           	opt callstack 0
 11292  01C8A8                     _get_switch:
 11293                           	opt callstack 13
 11294                           
 11295                           ;dio.c: 18: SW_STATES get_switch(const uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 6)
 11296                           ;stkvar	_i @ sp[(0)+-1]
 11297                           
 11298                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11299                           ;incstack = 0
 11300  01C8A8  0EFF               	movlw	-1
 11301  01C8AA  006F FF8C  F001    	movff	plusw1,btemp
 11302  01C8B0  0E05               	movlw	5
 11303  01C8B2  6401               	cpfsgt	btemp^0,c
 11304  01C8B4  D002               	goto	l10426
 11305                           
 11306                           ;dio.c: 21:   return SW_OFF;
 11307  01C8B6  0E00               	movlw	0
 11308  01C8B8  D00A               	goto	L9
 11309  01C8BA                     l10426:
 11310                           
 11311                           ;dio.c: 23:  return S.button[i].sw;
 11312                           ;stkvar	_i @ sp[(0)+-1]
 11313  01C8BA  0EFF               	movlw	-1
 11314  01C8BC  50E3               	movf	plusw1,w,c
 11315  01C8BE  0D05               	mullw	5
 11316  01C8C0  0E54               	movlw	low _S
 11317  01C8C2  24F3               	addwf	243,w,c
 11318  01C8C4  6ED9               	movwf	fsr2l,c
 11319  01C8C6  0E02               	movlw	high _S
 11320  01C8C8  20F4               	addwfc	prodh,w,c
 11321  01C8CA  6EDA               	movwf	fsr2h,c
 11322  01C8CC  50DF               	movf	indf2,w,c
 11323  01C8CE                     L9:
 11324  01C8CE  6E01               	movwf	btemp^0,c
 11325                           
 11326                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 11327  01C8D0  52E5               	movf	postdec1,f,c
 11328  01C8D2  0012               	return		;funcret
 11329  01C8D4                     __end_of_get_switch:
 11330                           	opt callstack 0
 11331                           
 11332 ;; *************** function _clear_adc_scan *****************
 11333 ;; Defined at:
 11334 ;;		line 95 in file "daq.c"
 11335 ;; Parameters:    Size  Location     Type
 11336 ;;		None
 11337 ;; Auto vars:     Size  Location     Type
 11338 ;;		None
 11339 ;; Return value:  Size  Location     Type
 11340 ;;                  1  [STACK] void 
 11341 ;; Registers used:
 11342 ;;		None
 11343 ;; Tracked objects:
 11344 ;;		On entry : 0/0
 11345 ;;		On exit  : 3F/0
 11346 ;;		Unchanged: 0/0
 11347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11352 ;;Total ram usage:        0 bytes
 11353 ;; Hardware stack levels used:    1
 11354 ;; Hardware stack levels required when called:   15
 11355 ;; This function calls:
 11356 ;;		Nothing
 11357 ;; This function is called by:
 11358 ;;		_main
 11359 ;;		_current_sensor_cal
 11360 ;;		_update_adc_result
 11361 ;; This function uses a reentrant model
 11362 ;;
 11363                           
 11364                           	psect	text37
 11365  01CF92                     __ptext37:
 11366                           	opt callstack 0
 11367  01CF92                     _clear_adc_scan:
 11368                           	opt callstack 13
 11369                           
 11370                           ;daq.c: 97:  R.done = 0;
 11371                           
 11372                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11373                           ;incstack = 0
 11374  01CF92  0100               	movlb	0	; () banked
 11375  01CF94  6BE0               	clrf	(_R+53)& (0+255),b	;volatile
 11376                           
 11377                           ; BSR set to: 0
 11378                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11379  01CF96  0012               	return		;funcret
 11380  01CF98                     __end_of_clear_adc_scan:
 11381                           	opt callstack 0
 11382                           
 11383 ;; *************** function _cal_current_zero *****************
 11384 ;; Defined at:
 11385 ;;		line 321 in file "daq.c"
 11386 ;; Parameters:    Size  Location     Type
 11387 ;;  mode            1  [STACK] _Bool 
 11388 ;;  cb              2  [STACK] short 
 11389 ;;  cp              2  [STACK] short 
 11390 ;; Auto vars:     Size  Location     Type
 11391 ;;		None
 11392 ;; Return value:  Size  Location     Type
 11393 ;;                  1  [STACK] _Bool 
 11394 ;; Registers used:
 11395 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 11396 ;; Tracked objects:
 11397 ;;		On entry : 0/0
 11398 ;;		On exit  : 0/0
 11399 ;;		Unchanged: 0/0
 11400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11405 ;;Total ram usage:        0 bytes
 11406 ;; Hardware stack levels used:    1
 11407 ;; Hardware stack levels required when called:   16
 11408 ;; This function calls:
 11409 ;;		_check_range
 11410 ;; This function is called by:
 11411 ;;		_current_sensor_cal
 11412 ;; This function uses a reentrant model
 11413 ;;
 11414                           
 11415                           	psect	text38
 11416  01B6E0                     __ptext38:
 11417                           	opt callstack 0
 11418  01B6E0                     _cal_current_zero:
 11419                           	opt callstack 13
 11420                           
 11421                           ;daq.c: 321: _Bool cal_current_zero(_Bool mode, int16_t cb, int16_t cp);daq.c: 322: {;da
      +                          q.c: 324:  if (!check_range(cb, 100, 4000))
 11422                           
 11423                           ; BSR set to: 0
 11424                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11425                           ;incstack = 0
 11426  01B6E0  0EA0               	movlw	160
 11427  01B6E2  6EE6               	movwf	postinc1,c
 11428  01B6E4  0E0F               	movlw	15
 11429  01B6E6  6EE6               	movwf	postinc1,c
 11430  01B6E8  0E64               	movlw	100
 11431  01B6EA  6EE6               	movwf	postinc1,c
 11432  01B6EC  0E00               	movlw	0
 11433  01B6EE  6EE6               	movwf	postinc1,c
 11434                           
 11435                           ;stkvar	_cb @ sp[(-4)+-3]
 11436  01B6F0  0EF9               	movlw	-7
 11437  01B6F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11438  01B6F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11439  01B6FE  EC7F  F0DC         	call	_check_range	;wreg free
 11440  01B702  5001               	movf	btemp^0,w,c
 11441  01B704  A4D8               	btfss	status,2,c
 11442  01B706  D002               	goto	l10990
 11443  01B708                     u10000:
 11444                           
 11445                           ;daq.c: 325:   return 0;
 11446  01B708  0E00               	movlw	0
 11447  01B70A  D019               	goto	L10
 11448  01B70C                     l10990:
 11449                           
 11450                           ;daq.c: 327:  if (!check_range(cp, 100, 4000))
 11451  01B70C  0EA0               	movlw	160
 11452  01B70E  6EE6               	movwf	postinc1,c
 11453  01B710  0E0F               	movlw	15
 11454  01B712  6EE6               	movwf	postinc1,c
 11455  01B714  0E64               	movlw	100
 11456  01B716  6EE6               	movwf	postinc1,c
 11457  01B718  0E00               	movlw	0
 11458  01B71A  6EE6               	movwf	postinc1,c
 11459                           
 11460                           ;stkvar	_cp @ sp[(-4)+-5]
 11461  01B71C  0EF7               	movlw	-9
 11462  01B71E  006F FF8F FFE6     	movff	plusw1,postinc1
 11463  01B724  006F FF8F FFE6     	movff	plusw1,postinc1
 11464  01B72A  EC7F  F0DC         	call	_check_range	;wreg free
 11465  01B72E  5001               	movf	btemp^0,w,c
 11466  01B730  B4D8               	btfsc	status,2,c
 11467  01B732  D7EA               	goto	u10000
 11468                           
 11469                           ;daq.c: 330:  if (!mode)
 11470                           ;stkvar	_mode @ sp[(0)+-1]
 11471  01B734  0EFF               	movlw	-1
 11472  01B736  50E3               	movf	plusw1,w,c
 11473  01B738  A4D8               	btfss	status,2,c
 11474  01B73A  D003               	goto	l11002
 11475  01B73C                     u10020:
 11476                           
 11477                           ;daq.c: 331:   return 1;
 11478  01B73C  0E01               	movlw	1
 11479  01B73E                     L10:
 11480  01B73E  6E01               	movwf	btemp^0,c
 11481  01B740  D011               	goto	l1926
 11482  01B742                     l11002:
 11483                           
 11484                           ;daq.c: 333:  R.n_offset[0] = cb;
 11485                           ;stkvar	_cb @ sp[(0)+-3]
 11486  01B742  0EFD               	movlw	-3
 11487  01B744  006F FF8C  F0D1    	movff	plusw1,_R+38	;volatile
 11488  01B74A  0EFE               	movlw	-2
 11489  01B74C  006F FF8C  F0D2    	movff	plusw1,_R+39	;volatile
 11490                           
 11491                           ;daq.c: 334:  R.n_offset[1] = cp;
 11492                           ;stkvar	_cp @ sp[(0)+-5]
 11493  01B752  0EFB               	movlw	-5
 11494  01B754  006F FF8C  F0D3    	movff	plusw1,_R+40	;volatile
 11495  01B75A  0EFC               	movlw	-4
 11496  01B75C  006F FF8C  F0D4    	movff	plusw1,_R+41	;volatile
 11497  01B762  D7EC               	goto	u10020
 11498  01B764                     l1926:
 11499                           
 11500                           ; _cal_current_zero: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           5, argsize = 5, vargsize = 0
 11501  01B764  0EFB               	movlw	251
 11502  01B766  26E1               	addwf	fsr1l,f,c
 11503  01B768  0EFF               	movlw	255
 11504  01B76A  22E2               	addwfc	fsr1h,f,c
 11505  01B76C  0012               	return		;funcret
 11506  01B76E                     __end_of_cal_current_zero:
 11507                           	opt callstack 0
 11508                           
 11509 ;; *************** function _check_range *****************
 11510 ;; Defined at:
 11511 ;;		line 309 in file "daq.c"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;  value           2  [STACK] short 
 11514 ;;  window          2  [STACK] short 
 11515 ;;  standard        2  [STACK] short 
 11516 ;; Auto vars:     Size  Location     Type
 11517 ;;		None
 11518 ;; Return value:  Size  Location     Type
 11519 ;;                  1  [STACK] _Bool 
 11520 ;; Registers used:
 11521 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 11522 ;; Tracked objects:
 11523 ;;		On entry : 0/0
 11524 ;;		On exit  : 0/0
 11525 ;;		Unchanged: 0/0
 11526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11531 ;;Total ram usage:        0 bytes
 11532 ;; Hardware stack levels used:    1
 11533 ;; Hardware stack levels required when called:   15
 11534 ;; This function calls:
 11535 ;;		Nothing
 11536 ;; This function is called by:
 11537 ;;		_cal_current_zero
 11538 ;; This function uses a reentrant model
 11539 ;;
 11540                           
 11541                           	psect	text39
 11542  01B8FE                     __ptext39:
 11543                           	opt callstack 0
 11544  01B8FE                     _check_range:
 11545                           	opt callstack 13
 11546                           
 11547                           ;daq.c: 309: static _Bool check_range(int16_t value, int16_t window, int16_t standard);d
      +                          aq.c: 310: {;daq.c: 311:  if (value > (standard + window))
 11548                           ;stkvar	_value @ sp[(0)+-2]
 11549                           ;stkvar	_window @ sp[(0)+-4]
 11550                           ;stkvar	_standard @ sp[(0)+-6]
 11551                           
 11552                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11553                           ;incstack = 0
 11554  01B8FE  0EFA               	movlw	-6
 11555  01B900  006F FF8C  F00B    	movff	plusw1,btemp+10
 11556  01B906  0EFB               	movlw	-5
 11557  01B908  006F FF8C  F00C    	movff	plusw1,btemp+11
 11558  01B90E  0EFC               	movlw	-4
 11559  01B910  50E3               	movf	plusw1,w,c
 11560  01B912  260B               	addwf	(btemp+10)^0,f,c
 11561  01B914  0EFD               	movlw	-3
 11562  01B916  50E3               	movf	plusw1,w,c
 11563  01B918  220C               	addwfc	(btemp+11)^0,f,c
 11564  01B91A  0EFE               	movlw	-2
 11565  01B91C  50E3               	movf	plusw1,w,c
 11566  01B91E  5C0B               	subwf	(btemp+10)^0,w,c
 11567  01B920  500C               	movf	(btemp+11)^0,w,c
 11568  01B922  0A80               	xorlw	128
 11569  01B924  6E01               	movwf	btemp^0,c
 11570  01B926  0EFF               	movlw	-1
 11571  01B928  50E3               	movf	plusw1,w,c
 11572  01B92A  0A80               	xorlw	128
 11573  01B92C  5801               	subwfb	btemp^0,w,c
 11574  01B92E  B0D8               	btfsc	status,0,c
 11575  01B930  D002               	goto	l10484
 11576  01B932                     u9790:
 11577                           
 11578                           ;daq.c: 312:   return 0;
 11579  01B932  0E00               	movlw	0
 11580  01B934  D01E               	goto	L11
 11581  01B936                     l10484:
 11582                           
 11583                           ;daq.c: 313:  if (value < (standard - window))
 11584                           ;stkvar	_window @ sp[(0)+-4]
 11585                           ;stkvar	_standard @ sp[(0)+-6]
 11586  01B936  0EFA               	movlw	-6
 11587  01B938  006F FF8C  F00B    	movff	plusw1,btemp+10
 11588  01B93E  0EFB               	movlw	-5
 11589  01B940  006F FF8C  F00C    	movff	plusw1,btemp+11
 11590  01B946  0EFC               	movlw	-4
 11591  01B948  50E3               	movf	plusw1,w,c
 11592  01B94A  5E0B               	subwf	(btemp+10)^0,f,c
 11593  01B94C  0EFD               	movlw	-3
 11594  01B94E  50E3               	movf	plusw1,w,c
 11595  01B950  5A0C               	subwfb	(btemp+11)^0,f,c
 11596                           
 11597                           ;stkvar	_value @ sp[(0)+-2]
 11598  01B952  0EFE               	movlw	-2
 11599  01B954  006F FF8C  F001    	movff	plusw1,btemp
 11600  01B95A  500B               	movf	(btemp+10)^0,w,c
 11601  01B95C  5C01               	subwf	btemp^0,w,c
 11602  01B95E  0EFF               	movlw	-1
 11603  01B960  50E3               	movf	plusw1,w,c
 11604  01B962  0A80               	xorlw	128
 11605  01B964  6E01               	movwf	btemp^0,c
 11606  01B966  500C               	movf	(btemp+11)^0,w,c
 11607  01B968  0A80               	xorlw	128
 11608  01B96A  5801               	subwfb	btemp^0,w,c
 11609  01B96C  A0D8               	btfss	status,0,c
 11610  01B96E  D7E1               	goto	u9790
 11611                           
 11612                           ;daq.c: 315:  return 1;
 11613  01B970  0E01               	movlw	1
 11614  01B972                     L11:
 11615  01B972  6E01               	movwf	btemp^0,c
 11616                           
 11617                           ; _check_range: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
 11618  01B974  0EFA               	movlw	250
 11619  01B976  26E1               	addwf	fsr1l,f,c
 11620  01B978  0EFF               	movlw	255
 11621  01B97A  22E2               	addwfc	fsr1h,f,c
 11622  01B97C  0012               	return		;funcret
 11623  01B97E                     __end_of_check_range:
 11624                           	opt callstack 0
 11625                           
 11626 ;; *************** function _convert_adc_data *****************
 11627 ;; Defined at:
 11628 ;;		line 51 in file "mbmc.c"
 11629 ;; Parameters:    Size  Location     Type
 11630 ;;		None
 11631 ;; Auto vars:     Size  Location     Type
 11632 ;;  i               1  [STACK] unsigned char 
 11633 ;; Return value:  Size  Location     Type
 11634 ;;                  1  [STACK] void 
 11635 ;; Registers used:
 11636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 11637 ;; Tracked objects:
 11638 ;;		On entry : 0/1
 11639 ;;		On exit  : 0/0
 11640 ;;		Unchanged: 0/0
 11641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11646 ;;Total ram usage:        0 bytes
 11647 ;; Hardware stack levels used:    1
 11648 ;; Hardware stack levels required when called:   18
 11649 ;; This function calls:
 11650 ;;		_conv_raw_result
 11651 ;;		_lp_filter
 11652 ;; This function is called by:
 11653 ;;		_main
 11654 ;; This function uses a reentrant model
 11655 ;;
 11656                           
 11657                           	psect	text40
 11658  01AFC2                     __ptext40:
 11659                           	opt callstack 0
 11660  01AFC2                     _convert_adc_data:
 11661                           	opt callstack 0
 11662                           
 11663                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11664  01AFC2  52E6               	movf	postinc1,f,c
 11665                           
 11666                           ;mbmc.c: 53:  uint8_t i = 0;
 11667                           ;stkvar	_i @ sp[(-1)+0]
 11668                           
 11669                           ;incstack = 0
 11670  01AFC4  0EFF               	movlw	-1
 11671  01AFC6  6AE3               	clrf	plusw1,c
 11672  01AFC8                     l11760:
 11673                           
 11674                           ;mbmc.c: 56:   if (V.calib) {
 11675  01AFC8  0101               	movlb	1	; () banked
 11676  01AFCA  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 11677  01AFCC  B4D8               	btfsc	status,2,c
 11678  01AFCE  D01B               	goto	l11764
 11679                           
 11680                           ; BSR set to: 1
 11681                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
 11682  01AFD0  0E01               	movlw	1
 11683  01AFD2  6EE6               	movwf	postinc1,c
 11684                           
 11685                           ;stkvar	_i @ sp[(-2)+0]
 11686  01AFD4  0EFE               	movlw	-2
 11687  01AFD6  50E3               	movf	plusw1,w,c
 11688  01AFD8  6EE6               	movwf	postinc1,c
 11689  01AFDA  0E01               	movlw	1
 11690  01AFDC  6EE6               	movwf	postinc1,c
 11691                           
 11692                           ;stkvar	_i @ sp[(-4)+0]
 11693  01AFDE  0EFC               	movlw	-4
 11694  01AFE0  50E3               	movf	plusw1,w,c
 11695  01AFE2  6EE6               	movwf	postinc1,c
 11696  01AFE4  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 11697  01AFE8  0060  F007  FFE6   	movff	btemp,postinc1
 11698  01AFEE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11699  01AFF4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11700  01AFFA  0060  F013  FFE6   	movff	btemp+3,postinc1
 11701  01B000  EC2E  F0C7         	call	_lp_filter	;wreg free
 11702  01B004  D01A               	goto	L12
 11703  01B006                     l11764:
 11704                           
 11705                           ; BSR set to: 1
 11706                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
 11707  01B006  0E00               	movlw	0
 11708  01B008  6EE6               	movwf	postinc1,c
 11709                           
 11710                           ;stkvar	_i @ sp[(-2)+0]
 11711  01B00A  0EFE               	movlw	-2
 11712  01B00C  50E3               	movf	plusw1,w,c
 11713  01B00E  6EE6               	movwf	postinc1,c
 11714  01B010  0E00               	movlw	0
 11715  01B012  6EE6               	movwf	postinc1,c
 11716                           
 11717                           ;stkvar	_i @ sp[(-4)+0]
 11718  01B014  0EFC               	movlw	-4
 11719  01B016  50E3               	movf	plusw1,w,c
 11720  01B018  6EE6               	movwf	postinc1,c
 11721  01B01A  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 11722  01B01E  0060  F007  FFE6   	movff	btemp,postinc1
 11723  01B024  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11724  01B02A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 11725  01B030  0060  F013  FFE6   	movff	btemp+3,postinc1
 11726  01B036  EC2E  F0C7         	call	_lp_filter	;wreg free
 11727  01B03A                     L12:
 11728                           
 11729                           ;stkvar	_i @ sp[(-1)+0]
 11730  01B03A  0EFF               	movlw	-1
 11731  01B03C  50E3               	movf	plusw1,w,c
 11732  01B03E  0D04               	mullw	4
 11733  01B040  0EFF               	movlw	low _C
 11734  01B042  24F3               	addwf	243,w,c
 11735  01B044  6ED9               	movwf	fsr2l,c
 11736  01B046  0E06               	movlw	high _C
 11737  01B048  20F4               	addwfc	prodh,w,c
 11738  01B04A  6EDA               	movwf	fsr2h,c
 11739  01B04C  0060  F007  FFDE   	movff	btemp,postinc2
 11740  01B052  0060  F00B  FFDE   	movff	btemp+1,postinc2
 11741  01B058  0060  F00F  FFDE   	movff	btemp+2,postinc2
 11742  01B05E  0060  F013  FFDE   	movff	btemp+3,postinc2
 11743                           
 11744                           ;mbmc.c: 61:  } while (++i < 16);
 11745                           ;stkvar	_i @ sp[(-1)+0]
 11746  01B064  0EFF               	movlw	-1
 11747  01B066  2AE3               	incf	plusw1,f,c
 11748  01B068  0EFF               	movlw	-1
 11749  01B06A  006F FF8C  F001    	movff	plusw1,btemp
 11750  01B070  0E0F               	movlw	15
 11751  01B072  6401               	cpfsgt	btemp^0,c
 11752  01B074  D7A9               	goto	l11760
 11753                           
 11754                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 11755  01B076  52E5               	movf	postdec1,f,c
 11756  01B078  0012               	return		;funcret
 11757  01B07A                     __end_of_convert_adc_data:
 11758                           	opt callstack 0
 11759                           
 11760 ;; *************** function _clear_hid_pflags *****************
 11761 ;; Defined at:
 11762 ;;		line 67 in file "hid.c"
 11763 ;; Parameters:    Size  Location     Type
 11764 ;;  h               2  [STACK] PTR struct H_data
 11765 ;;		 -> H(9), 
 11766 ;; Auto vars:     Size  Location     Type
 11767 ;;		None
 11768 ;; Return value:  Size  Location     Type
 11769 ;;                  1  [STACK] void 
 11770 ;; Registers used:
 11771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+10, btemp+11
 11772 ;; Tracked objects:
 11773 ;;		On entry : 3E/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11781 ;;Total ram usage:        0 bytes
 11782 ;; Hardware stack levels used:    1
 11783 ;; Hardware stack levels required when called:   15
 11784 ;; This function calls:
 11785 ;;		Nothing
 11786 ;; This function is called by:
 11787 ;;		_main
 11788 ;; This function uses a reentrant model
 11789 ;;
 11790                           
 11791                           	psect	text41
 11792  01BD06                     __ptext41:
 11793                           	opt callstack 0
 11794  01BD06                     _clear_hid_pflags:
 11795                           	opt callstack 15
 11796                           
 11797                           ;hid.c: 67: void clear_hid_pflags(H_data* h);hid.c: 68: {;hid.c: 69:  h->select_p = SW_O
      +                          FF;
 11798                           ;stkvar	_h @ sp[(0)+-2]
 11799                           
 11800                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11801                           ;incstack = 0
 11802  01BD06  0EFE               	movlw	-2
 11803  01BD08  006F FF8C  F00B    	movff	plusw1,btemp+10
 11804  01BD0E  0EFF               	movlw	-1
 11805  01BD10  006F FF8C  F00C    	movff	plusw1,btemp+11
 11806  01BD16  0E03               	movlw	3
 11807  01BD18  240B               	addwf	(btemp+10)^0,w,c
 11808  01BD1A  6ED9               	movwf	fsr2l,c
 11809  01BD1C  0E00               	movlw	0
 11810  01BD1E  200C               	addwfc	(btemp+11)^0,w,c
 11811  01BD20  6EDA               	movwf	fsr2h,c
 11812  01BD22  0E00               	movlw	0
 11813  01BD24  6EDF               	movwf	indf2,c
 11814                           
 11815                           ;hid.c: 70:  h->enter_p = SW_OFF;
 11816                           ;stkvar	_h @ sp[(0)+-2]
 11817  01BD26  0EFE               	movlw	-2
 11818  01BD28  006F FF8C  F00B    	movff	plusw1,btemp+10
 11819  01BD2E  0EFF               	movlw	-1
 11820  01BD30  006F FF8C  F00C    	movff	plusw1,btemp+11
 11821  01BD36  0E05               	movlw	5
 11822  01BD38  240B               	addwf	(btemp+10)^0,w,c
 11823  01BD3A  6ED9               	movwf	fsr2l,c
 11824  01BD3C  0E00               	movlw	0
 11825  01BD3E  200C               	addwfc	(btemp+11)^0,w,c
 11826  01BD40  6EDA               	movwf	fsr2h,c
 11827  01BD42  0E00               	movlw	0
 11828  01BD44  6EDF               	movwf	indf2,c
 11829                           
 11830                           ;hid.c: 71:  h->calib_p = SW_OFF;
 11831                           ;stkvar	_h @ sp[(0)+-2]
 11832  01BD46  0EFE               	movlw	-2
 11833  01BD48  006F FF8C  F00B    	movff	plusw1,btemp+10
 11834  01BD4E  0EFF               	movlw	-1
 11835  01BD50  006F FF8C  F00C    	movff	plusw1,btemp+11
 11836  01BD56  0E07               	movlw	7
 11837  01BD58  240B               	addwf	(btemp+10)^0,w,c
 11838  01BD5A  6ED9               	movwf	fsr2l,c
 11839  01BD5C  0E00               	movlw	0
 11840  01BD5E  200C               	addwfc	(btemp+11)^0,w,c
 11841  01BD60  6EDA               	movwf	fsr2h,c
 11842  01BD62  0E00               	movlw	0
 11843  01BD64  6EDF               	movwf	indf2,c
 11844                           
 11845                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           2, argsize = 2, vargsize = 0
 11846  01BD66  52E5               	movf	postdec1,f,c
 11847  01BD68  52E5               	movf	postdec1,f,c
 11848  01BD6A  0012               	return		;funcret
 11849  01BD6C                     __end_of_clear_hid_pflags:
 11850                           	opt callstack 0
 11851                           
 11852 ;; *************** function _check_help *****************
 11853 ;; Defined at:
 11854 ;;		line 40 in file "mconfig.c"
 11855 ;; Parameters:    Size  Location     Type
 11856 ;;  flipper         1  [STACK] const _Bool 
 11857 ;; Auto vars:     Size  Location     Type
 11858 ;;  estatus         1    0        _Bool 
 11859 ;; Return value:  Size  Location     Type
 11860 ;;                  1  [STACK] _Bool 
 11861 ;; Registers used:
 11862 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11863 ;; Tracked objects:
 11864 ;;		On entry : 3F/1
 11865 ;;		On exit  : 0/0
 11866 ;;		Unchanged: 0/0
 11867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11872 ;;Total ram usage:        0 bytes
 11873 ;; Hardware stack levels used:    1
 11874 ;; Hardware stack levels required when called:   28
 11875 ;; This function calls:
 11876 ;;		_StartTimer
 11877 ;;		_TimerDone
 11878 ;;		_display_help
 11879 ;;		_display_info
 11880 ;;		_get_vterm_ptr
 11881 ;;		_help_button
 11882 ;;		_mode_lamp_bright
 11883 ;;		_mode_lamp_dim
 11884 ;;		_set_display_info
 11885 ;;		_set_temp_display_help
 11886 ;;		_set_vterm
 11887 ;;		_sprintf
 11888 ;;		_update_lcd
 11889 ;;		_vterm_dump
 11890 ;; This function is called by:
 11891 ;;		_main
 11892 ;; This function uses a reentrant model
 11893 ;;
 11894                           
 11895                           	psect	text42
 11896  018A46                     __ptext42:
 11897                           	opt callstack 0
 11898  018A46                     _check_help:
 11899                           	opt callstack 2
 11900                           
 11901                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
 11902                           
 11903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11904                           ;incstack = 0
 11905  018A46  EC09  F0E3         	call	_help_button	;wreg free
 11906  018A4A  5001               	movf	btemp^0,w,c
 11907  018A4C  B4D8               	btfsc	status,2,c
 11908  018A4E  D0D0               	goto	l13956
 11909  018A50  ECBD  F0E7         	call	_display_info	;wreg free
 11910  018A54  0401               	decf	btemp^0,w,c
 11911  018A56  B4D8               	btfsc	status,2,c
 11912  018A58  D0CB               	goto	l13956
 11913                           
 11914                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
 11915  018A5A  0EDC               	movlw	220
 11916  018A5C  6EE6               	movwf	postinc1,c
 11917  018A5E  0E05               	movlw	5
 11918  018A60  6EE6               	movwf	postinc1,c
 11919  018A62  0E0B               	movlw	11
 11920  018A64  6EE6               	movwf	postinc1,c
 11921  018A66  EC50  F0E2         	call	_StartTimer	;wreg free
 11922                           
 11923                           ;mconfig.c: 48:   if (V.debug)
 11924  018A6A  0101               	movlb	1	; () banked
 11925  018A6C  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
 11926                           
 11927                           ; BSR set to: 1
 11928                           ;mconfig.c: 49:    vterm_dump();
 11929  018A6E  ECC9  F0CF         	call	_vterm_dump	;wreg free
 11930                           
 11931                           ;mconfig.c: 51:   set_vterm(1);
 11932  018A72  0E01               	movlw	1
 11933  018A74  6EE6               	movwf	postinc1,c
 11934  018A76  ECB5  F0E6         	call	_set_vterm	;wreg free
 11935                           
 11936                           ;mconfig.c: 52:   set_temp_display_help(display_info());
 11937  018A7A  ECBD  F0E7         	call	_display_info	;wreg free
 11938  018A7E  5001               	movf	btemp^0,w,c
 11939  018A80  6EE6               	movwf	postinc1,c
 11940  018A82  EC64  F0E7         	call	_set_temp_display_help	;wreg free
 11941                           
 11942                           ; BSR set to: 1
 11943                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
 11944  018A86  0E01               	movlw	1
 11945  018A88  6EE6               	movwf	postinc1,c
 11946  018A8A  ECC4  F0E6         	call	_set_display_info	;wreg free
 11947                           
 11948                           ;mconfig.c: 54:   if (flipper) {
 11949                           ;stkvar	_flipper @ sp[(0)+-1]
 11950  018A8E  0EFF               	movlw	-1
 11951  018A90  50E3               	movf	plusw1,w,c
 11952  018A92  B4D8               	btfsc	status,2,c
 11953  018A94  D019               	goto	l13942
 11954                           
 11955                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
 11956  018A96  0EB3               	movlw	low STR_62
 11957  018A98  6EE6               	movwf	postinc1,c
 11958  018A9A  0EFF               	movlw	high STR_62
 11959  018A9C  6EE6               	movwf	postinc1,c
 11960  018A9E  0E5D               	movlw	low STR_64
 11961  018AA0  6EE6               	movwf	postinc1,c
 11962  018AA2  0EFF               	movlw	high STR_64
 11963  018AA4  6EE6               	movwf	postinc1,c
 11964  018AA6  0E01               	movlw	1
 11965  018AA8  6EE6               	movwf	postinc1,c
 11966  018AAA  0E00               	movlw	0
 11967  018AAC  6EE6               	movwf	postinc1,c
 11968  018AAE  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 11969  018AB2  0060  F007  FFE6   	movff	btemp,postinc1
 11970  018AB8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11971  018ABE  0E06               	movlw	6
 11972  018AC0  6EE6               	movwf	postinc1,c
 11973  018AC2  EC1C  F0D3         	call	_sprintf	;wreg free
 11974                           
 11975                           ;mconfig.c: 56:   } else {
 11976  018AC6  D018               	goto	l1707
 11977  018AC8                     l13942:
 11978                           
 11979                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
 11980  018AC8  0EC9               	movlw	low STR_63
 11981  018ACA  6EE6               	movwf	postinc1,c
 11982  018ACC  0EFF               	movlw	high STR_63
 11983  018ACE  6EE6               	movwf	postinc1,c
 11984  018AD0  0E5D               	movlw	low STR_64
 11985  018AD2  6EE6               	movwf	postinc1,c
 11986  018AD4  0EFF               	movlw	high STR_64
 11987  018AD6  6EE6               	movwf	postinc1,c
 11988  018AD8  0E01               	movlw	1
 11989  018ADA  6EE6               	movwf	postinc1,c
 11990  018ADC  0E00               	movlw	0
 11991  018ADE  6EE6               	movwf	postinc1,c
 11992  018AE0  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 11993  018AE4  0060  F007  FFE6   	movff	btemp,postinc1
 11994  018AEA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 11995  018AF0  0E06               	movlw	6
 11996  018AF2  6EE6               	movwf	postinc1,c
 11997  018AF4  EC1C  F0D3         	call	_sprintf	;wreg free
 11998  018AF8                     l1707:
 11999                           
 12000                           ; BSR set to: 0
 12001                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
 12002  018AF8  0101               	movlb	1	; () banked
 12003  018AFA  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 12004  018AFC  32E8               	rrcf	wreg,f,c
 12005  018AFE  32E8               	rrcf	wreg,f,c
 12006  018B00  0B03               	andlw	3
 12007  018B02  0D24               	mullw	36
 12008  018B04  0E12               	movlw	18
 12009  018B06  26F3               	addwf	243,f,c
 12010  018B08  0E00               	movlw	0
 12011  018B0A  22F4               	addwfc	244,f,c
 12012  018B0C  0EB3               	movlw	low _T
 12013  018B0E  6E0B               	movwf	(btemp+10)^0,c
 12014  018B10  0EF9               	movlw	high _T
 12015  018B12  6E0C               	movwf	(btemp+11)^0,c
 12016  018B14  50F3               	movf	243,w,c
 12017  018B16  260B               	addwf	(btemp+10)^0,f,c
 12018  018B18  50F4               	movf	244,w,c
 12019  018B1A  220C               	addwfc	(btemp+11)^0,f,c
 12020  018B1C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12021  018B22  0060  F033  FFE6   	movff	btemp+11,postinc1
 12022  018B28  0EBF               	movlw	low STR_66
 12023  018B2A  6EE6               	movwf	postinc1,c
 12024  018B2C  0EFF               	movlw	high STR_66
 12025  018B2E  6EE6               	movwf	postinc1,c
 12026  018B30  0E01               	movlw	1
 12027  018B32  6EE6               	movwf	postinc1,c
 12028  018B34  0E01               	movlw	1
 12029  018B36  6EE6               	movwf	postinc1,c
 12030  018B38  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 12031  018B3C  0060  F007  FFE6   	movff	btemp,postinc1
 12032  018B42  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12033  018B48  0E06               	movlw	6
 12034  018B4A  6EE6               	movwf	postinc1,c
 12035  018B4C  EC1C  F0D3         	call	_sprintf	;wreg free
 12036                           
 12037                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
 12038  018B50  0101               	movlb	1	; () banked
 12039  018B52  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
 12040  018B54  32E8               	rrcf	wreg,f,c
 12041  018B56  32E8               	rrcf	wreg,f,c
 12042  018B58  0B03               	andlw	3
 12043  018B5A  0D24               	mullw	36
 12044  018B5C  0EB3               	movlw	low _T
 12045  018B5E  6E0B               	movwf	(btemp+10)^0,c
 12046  018B60  0EF9               	movlw	high _T
 12047  018B62  6E0C               	movwf	(btemp+11)^0,c
 12048  018B64  50F3               	movf	243,w,c
 12049  018B66  260B               	addwf	(btemp+10)^0,f,c
 12050  018B68  50F4               	movf	244,w,c
 12051  018B6A  220C               	addwfc	(btemp+11)^0,f,c
 12052  018B6C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12053  018B72  0060  F033  FFE6   	movff	btemp+11,postinc1
 12054  018B78  0EBF               	movlw	low STR_66
 12055  018B7A  6EE6               	movwf	postinc1,c
 12056  018B7C  0EFF               	movlw	high STR_66
 12057  018B7E  6EE6               	movwf	postinc1,c
 12058  018B80  0E01               	movlw	1
 12059  018B82  6EE6               	movwf	postinc1,c
 12060  018B84  0E02               	movlw	2
 12061  018B86  6EE6               	movwf	postinc1,c
 12062  018B88  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 12063  018B8C  0060  F007  FFE6   	movff	btemp,postinc1
 12064  018B92  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12065  018B98  0E06               	movlw	6
 12066  018B9A  6EE6               	movwf	postinc1,c
 12067  018B9C  EC1C  F0D3         	call	_sprintf	;wreg free
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;mconfig.c: 61:   V.help_id++;
 12071  018BA0  EE20  F1A2         	lfsr	2,_V+155	;volatile
 12072  018BA4  38DF               	swapf	223,w,c
 12073  018BA6  6E0C               	movwf	(btemp+11)^0,c
 12074  018BA8  320C               	rrcf	(btemp+11)^0,f,c
 12075  018BAA  300C               	rrcf	(btemp+11)^0,w,c
 12076  018BAC  0B03               	andlw	3
 12077  018BAE  6E0C               	movwf	(btemp+11)^0,c
 12078  018BB0  2A0C               	incf	(btemp+11)^0,f,c
 12079  018BB2  3A0C               	swapf	(btemp+11)^0,f,c
 12080  018BB4  360C               	rlcf	(btemp+11)^0,f,c
 12081  018BB6  360C               	rlcf	(btemp+11)^0,f,c
 12082  018BB8  50DF               	movf	223,w,c
 12083  018BBA  180C               	xorwf	(btemp+11)^0,w,c
 12084  018BBC  0B3F               	andlw	-193
 12085  018BBE  180C               	xorwf	(btemp+11)^0,w,c
 12086  018BC0  6EDF               	movwf	223,c
 12087                           
 12088                           ; BSR set to: 0
 12089                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
 12090  018BC2  0EB8               	movlw	184
 12091  018BC4  6EE6               	movwf	postinc1,c
 12092  018BC6  0E0B               	movlw	11
 12093  018BC8  6EE6               	movwf	postinc1,c
 12094  018BCA  0E09               	movlw	9
 12095  018BCC  6EE6               	movwf	postinc1,c
 12096  018BCE  EC50  F0E2         	call	_StartTimer	;wreg free
 12097                           
 12098                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
 12099  018BD2  0EB8               	movlw	184
 12100  018BD4  6EE6               	movwf	postinc1,c
 12101  018BD6  0E0B               	movlw	11
 12102  018BD8  6EE6               	movwf	postinc1,c
 12103  018BDA  0E07               	movlw	7
 12104  018BDC  6EE6               	movwf	postinc1,c
 12105  018BDE  EC50  F0E2         	call	_StartTimer	;wreg free
 12106                           
 12107                           ;mconfig.c: 64:   mode_lamp_bright();
 12108  018BE2  EC7B  F0E7         	call	_mode_lamp_bright	;wreg free
 12109                           
 12110                           ;mconfig.c: 65:   update_lcd(1);
 12111  018BE6  0E01               	movlw	1
 12112  018BE8  6EE6               	movwf	postinc1,c
 12113  018BEA  EC94  F0D2         	call	_update_lcd	;wreg free
 12114                           
 12115                           ;mconfig.c: 67:  } else {
 12116  018BEE  D032               	goto	l1708
 12117  018BF0                     l13956:
 12118                           
 12119                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
 12120  018BF0  0E09               	movlw	9
 12121  018BF2  6EE6               	movwf	postinc1,c
 12122  018BF4  ECBF  F0E4         	call	_TimerDone	;wreg free
 12123  018BF8  5001               	movf	btemp^0,w,c
 12124  018BFA  B4D8               	btfsc	status,2,c
 12125  018BFC  D02B               	goto	l1708
 12126                           
 12127                           ;mconfig.c: 69:    set_vterm(0);
 12128  018BFE  0E00               	movlw	0
 12129  018C00  6EE6               	movwf	postinc1,c
 12130  018C02  ECB5  F0E6         	call	_set_vterm	;wreg free
 12131                           
 12132                           ;mconfig.c: 70:    V.help = 0;
 12133  018C06  0101               	movlb	1	; () banked
 12134  018C08  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
 12135                           
 12136                           ; BSR set to: 1
 12137                           ;mconfig.c: 71:    set_display_info(display_help());
 12138  018C0A  ECC1  F0E7         	call	_display_help	;wreg free
 12139  018C0E  5001               	movf	btemp^0,w,c
 12140  018C10  6EE6               	movwf	postinc1,c
 12141  018C12  ECC4  F0E6         	call	_set_display_info	;wreg free
 12142                           
 12143                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
 12144  018C16  0060  F673  FFE6   	movff	_V+149,postinc1
 12145  018C1C  0060  F677  FFE6   	movff	_V+150,postinc1
 12146  018C22  ECFD  F0E6         	call	_mode_lamp_dim	;wreg free
 12147                           
 12148                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
 12149  018C26  0E0B               	movlw	11
 12150  018C28  6EE6               	movwf	postinc1,c
 12151  018C2A  ECBF  F0E4         	call	_TimerDone	;wreg free
 12152  018C2E  5001               	movf	btemp^0,w,c
 12153  018C30  B4D8               	btfsc	status,2,c
 12154  018C32  D010               	goto	l1708
 12155                           
 12156                           ;mconfig.c: 74:     V.flipper = !V.flipper;
 12157  018C34  0101               	movlb	1	; () banked
 12158  018C36  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
 12159  018C38  A4D8               	btfss	status,2,c
 12160  018C3A  D002               	goto	u13390
 12161  018C3C  0E01               	movlw	1
 12162  018C3E  D001               	goto	u13400
 12163  018C40                     u13390:
 12164  018C40  0E00               	movlw	0
 12165  018C42                     u13400:
 12166  018C42  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
 12167                           
 12168                           ; BSR set to: 1
 12169                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
 12170  018C44  0EDC               	movlw	220
 12171  018C46  6EE6               	movwf	postinc1,c
 12172  018C48  0E05               	movlw	5
 12173  018C4A  6EE6               	movwf	postinc1,c
 12174  018C4C  0E0B               	movlw	11
 12175  018C4E  6EE6               	movwf	postinc1,c
 12176  018C50  EC50  F0E2         	call	_StartTimer	;wreg free
 12177  018C54                     l1708:
 12178                           
 12179                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 12180  018C54  52E5               	movf	postdec1,f,c
 12181  018C56  0012               	return		;funcret
 12182  018C58                     __end_of_check_help:
 12183                           	opt callstack 0
 12184                           
 12185 ;; *************** function _vterm_dump *****************
 12186 ;; Defined at:
 12187 ;;		line 121 in file "mconfig.c"
 12188 ;; Parameters:    Size  Location     Type
 12189 ;;		None
 12190 ;; Auto vars:     Size  Location     Type
 12191 ;;		None
 12192 ;; Return value:  Size  Location     Type
 12193 ;;                  1  [STACK] void 
 12194 ;; Registers used:
 12195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12196 ;; Tracked objects:
 12197 ;;		On entry : 3F/1
 12198 ;;		On exit  : 0/0
 12199 ;;		Unchanged: 0/0
 12200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12205 ;;Total ram usage:        0 bytes
 12206 ;; Hardware stack levels used:    1
 12207 ;; Hardware stack levels required when called:   27
 12208 ;; This function calls:
 12209 ;;		_WaitMs
 12210 ;;		_eaDogM_WriteStringAtPos
 12211 ;;		_get_vterm_ptr
 12212 ;;		_sprintf
 12213 ;;		_wait_lcd_done
 12214 ;; This function is called by:
 12215 ;;		_check_help
 12216 ;; This function uses a reentrant model
 12217 ;;
 12218                           
 12219                           	psect	text43
 12220  019F92                     __ptext43:
 12221                           	opt callstack 0
 12222  019F92                     _vterm_dump:
 12223                           	opt callstack 2
 12224                           
 12225                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
 12226                           
 12227                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12228                           ;incstack = 0
 12229  019F92  0E01               	movlw	1
 12230  019F94  6EE6               	movwf	postinc1,c
 12231  019F96  0E00               	movlw	0
 12232  019F98  6EE6               	movwf	postinc1,c
 12233  019F9A  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 12234  019F9E  0060  F007  FFE6   	movff	btemp,postinc1
 12235  019FA4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12236  019FAA  0E00               	movlw	0
 12237  019FAC  6EE6               	movwf	postinc1,c
 12238  019FAE  0E00               	movlw	0
 12239  019FB0  6EE6               	movwf	postinc1,c
 12240  019FB2  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 12241  019FB6  0060  F007  FFE6   	movff	btemp,postinc1
 12242  019FBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12243  019FC2  0EA4               	movlw	low STR_68
 12244  019FC4  6EE6               	movwf	postinc1,c
 12245  019FC6  0EFF               	movlw	high STR_68
 12246  019FC8  6EE6               	movwf	postinc1,c
 12247  019FCA  0E08               	movlw	low (_V+1)
 12248  019FCC  6EE6               	movwf	postinc1,c
 12249  019FCE  0E01               	movlw	high (_V+1)
 12250  019FD0  6EE6               	movwf	postinc1,c
 12251  019FD2  0E08               	movlw	8
 12252  019FD4  6EE6               	movwf	postinc1,c
 12253  019FD6  EC1C  F0D3         	call	_sprintf	;wreg free
 12254                           
 12255                           ; BSR set to: 0
 12256                           ;mconfig.c: 124:  wait_lcd_done();
 12257  019FDA  EC44  F0E6         	call	_wait_lcd_done	;wreg free
 12258                           
 12259                           ; BSR set to: 0
 12260                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
 12261  019FDE  0E08               	movlw	low (_V+1)
 12262  019FE0  6EE6               	movwf	postinc1,c
 12263  019FE2  0E01               	movlw	high (_V+1)
 12264  019FE4  6EE6               	movwf	postinc1,c
 12265  019FE6  0E00               	movlw	0
 12266  019FE8  6EE6               	movwf	postinc1,c
 12267  019FEA  0E00               	movlw	0
 12268  019FEC  6EE6               	movwf	postinc1,c
 12269  019FEE  EC9A  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
 12270                           
 12271                           ; BSR set to: 59
 12272                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
 12273  019FF2  0E01               	movlw	1
 12274  019FF4  6EE6               	movwf	postinc1,c
 12275  019FF6  0E01               	movlw	1
 12276  019FF8  6EE6               	movwf	postinc1,c
 12277  019FFA  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 12278  019FFE  0060  F007  FFE6   	movff	btemp,postinc1
 12279  01A004  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12280  01A00A  0E00               	movlw	0
 12281  01A00C  6EE6               	movwf	postinc1,c
 12282  01A00E  0E01               	movlw	1
 12283  01A010  6EE6               	movwf	postinc1,c
 12284  01A012  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 12285  01A016  0060  F007  FFE6   	movff	btemp,postinc1
 12286  01A01C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12287  01A022  0EA4               	movlw	low STR_68
 12288  01A024  6EE6               	movwf	postinc1,c
 12289  01A026  0EFF               	movlw	high STR_68
 12290  01A028  6EE6               	movwf	postinc1,c
 12291  01A02A  0E08               	movlw	low (_V+1)
 12292  01A02C  6EE6               	movwf	postinc1,c
 12293  01A02E  0E01               	movlw	high (_V+1)
 12294  01A030  6EE6               	movwf	postinc1,c
 12295  01A032  0E08               	movlw	8
 12296  01A034  6EE6               	movwf	postinc1,c
 12297  01A036  EC1C  F0D3         	call	_sprintf	;wreg free
 12298                           
 12299                           ; BSR set to: 0
 12300                           ;mconfig.c: 127:  wait_lcd_done();
 12301  01A03A  EC44  F0E6         	call	_wait_lcd_done	;wreg free
 12302                           
 12303                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
 12304  01A03E  0E08               	movlw	low (_V+1)
 12305  01A040  6EE6               	movwf	postinc1,c
 12306  01A042  0E01               	movlw	high (_V+1)
 12307  01A044  6EE6               	movwf	postinc1,c
 12308  01A046  0E00               	movlw	0
 12309  01A048  6EE6               	movwf	postinc1,c
 12310  01A04A  0E01               	movlw	1
 12311  01A04C  6EE6               	movwf	postinc1,c
 12312  01A04E  EC9A  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
 12313                           
 12314                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
 12315  01A052  0E01               	movlw	1
 12316  01A054  6EE6               	movwf	postinc1,c
 12317  01A056  0E02               	movlw	2
 12318  01A058  6EE6               	movwf	postinc1,c
 12319  01A05A  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 12320  01A05E  0060  F007  FFE6   	movff	btemp,postinc1
 12321  01A064  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12322  01A06A  0E00               	movlw	0
 12323  01A06C  6EE6               	movwf	postinc1,c
 12324  01A06E  0E02               	movlw	2
 12325  01A070  6EE6               	movwf	postinc1,c
 12326  01A072  EC3D  F0E4         	call	_get_vterm_ptr	;wreg free
 12327  01A076  0060  F007  FFE6   	movff	btemp,postinc1
 12328  01A07C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12329  01A082  0EA4               	movlw	low STR_68
 12330  01A084  6EE6               	movwf	postinc1,c
 12331  01A086  0EFF               	movlw	high STR_68
 12332  01A088  6EE6               	movwf	postinc1,c
 12333  01A08A  0E08               	movlw	low (_V+1)
 12334  01A08C  6EE6               	movwf	postinc1,c
 12335  01A08E  0E01               	movlw	high (_V+1)
 12336  01A090  6EE6               	movwf	postinc1,c
 12337  01A092  0E08               	movlw	8
 12338  01A094  6EE6               	movwf	postinc1,c
 12339  01A096  EC1C  F0D3         	call	_sprintf	;wreg free
 12340                           
 12341                           ; BSR set to: 0
 12342                           ;mconfig.c: 130:  wait_lcd_done();
 12343  01A09A  EC44  F0E6         	call	_wait_lcd_done	;wreg free
 12344                           
 12345                           ; BSR set to: 0
 12346                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
 12347  01A09E  0E08               	movlw	low (_V+1)
 12348  01A0A0  6EE6               	movwf	postinc1,c
 12349  01A0A2  0E01               	movlw	high (_V+1)
 12350  01A0A4  6EE6               	movwf	postinc1,c
 12351  01A0A6  0E00               	movlw	0
 12352  01A0A8  6EE6               	movwf	postinc1,c
 12353  01A0AA  0E02               	movlw	2
 12354  01A0AC  6EE6               	movwf	postinc1,c
 12355  01A0AE  EC9A  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
 12356                           
 12357                           ; BSR set to: 59
 12358                           ;mconfig.c: 132:  WaitMs(3000);
 12359  01A0B2  0EB8               	movlw	184
 12360  01A0B4  6EE6               	movwf	postinc1,c
 12361  01A0B6  0E0B               	movlw	11
 12362  01A0B8  6EE6               	movwf	postinc1,c
 12363  01A0BA  EC41  F0E3         	call	_WaitMs	;wreg free
 12364                           
 12365                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 12366  01A0BE  0012               	return		;funcret
 12367  01A0C0                     __end_of_vterm_dump:
 12368                           	opt callstack 0
 12369                           
 12370 ;; *************** function _sprintf *****************
 12371 ;; Defined at:
 12372 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
 12373 ;; Parameters:    Size  Location     Type
 12374 ;;  s               2  [STACK] PTR unsigned char 
 12375 ;;		 -> D.lcd(480), D(482), port_data(512), V(192), 
 12376 ;;  fmt             2  [STACK] PTR const unsigned char 
 12377 ;;		 -> STR_81(127), STR_79(3), STR_78(3), STR_77(19), 
 12378 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 12379 ;;		 -> STR_72(19), STR_71(24), STR_70(15), STR_69(15), 
 12380 ;;		 -> STR_68(15), STR_67(10), STR_66(10), STR_65(19), 
 12381 ;;		 -> STR_64(19), STR_59(21), STR_58(21), STR_57(21), 
 12382 ;;		 -> STR_56(21), STR_55(21), STR_54(21), STR_53(21), 
 12383 ;;		 -> STR_52(21), STR_51(21), STR_50(20), STR_49(20), 
 12384 ;;		 -> STR_48(21), STR_47(21), STR_46(21), STR_45(22), 
 12385 ;;		 -> STR_44(22), STR_43(22), STR_42(23), STR_41(23), 
 12386 ;;		 -> STR_40(23), STR_39(29), STR_38(23), STR_37(23), 
 12387 ;;		 -> STR_36(22), STR_35(22), STR_34(22), STR_33(22), 
 12388 ;;		 -> STR_32(22), STR_31(22), STR_30(22), STR_29(22), 
 12389 ;;		 -> STR_28(22), STR_27(22), STR_26(22), STR_25(22), 
 12390 ;;		 -> STR_24(17), STR_23(16), STR_22(16), STR_21(26), 
 12391 ;;		 -> STR_20(26), STR_19(22), STR_18(21), STR_17(21), 
 12392 ;;		 -> STR_16(21), STR_15(21), STR_14(22), STR_13(22), 
 12393 ;;		 -> STR_12(22), STR_11(26), STR_10(21), STR_9(21), 
 12394 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
 12395 ;;		 -> STR_4(21), STR_2(21), STR_1(21), 
 12396 ;; Auto vars:     Size  Location     Type
 12397 ;;  f               6  [STACK] struct _IO_FILE
 12398 ;;  ap              2  [STACK] PTR void [1]
 12399 ;;		 -> ?_printf(2), ?_sprintf(2), 
 12400 ;;  ret             2    0        int 
 12401 ;; Return value:  Size  Location     Type
 12402 ;;                  2  [STACK] int 
 12403 ;; Registers used:
 12404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12405 ;; Tracked objects:
 12406 ;;		On entry : 0/2
 12407 ;;		On exit  : 3F/0
 12408 ;;		Unchanged: 0/0
 12409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12414 ;;Total ram usage:        0 bytes
 12415 ;; Hardware stack levels used:    1
 12416 ;; Hardware stack levels required when called:   23
 12417 ;; This function calls:
 12418 ;;		_vfprintf
 12419 ;; This function is called by:
 12420 ;;		_main
 12421 ;;		_current_sensor_cal
 12422 ;;		_check_help
 12423 ;;		_vterm_dump
 12424 ;;		_calc_bsoc
 12425 ;; This function uses a reentrant model
 12426 ;;
 12427                           
 12428                           	psect	text44
 12429  01A638                     __ptext44:
 12430                           	opt callstack 0
 12431  01A638                     _sprintf:
 12432                           	opt callstack 0
 12433                           
 12434                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12435  01A638  0E08               	movlw	8
 12436  01A63A  26E1               	addwf	fsr1l,f,c
 12437  01A63C  0E00               	movlw	0
 12438  01A63E  22E2               	addwfc	fsr1h,f,c
 12439                           
 12440                           ;incstack = 0
 12441 ;; hardware stack exceeded
 12442  01A640  0EFE               	movlw	254
 12443  01A642  6E0B               	movwf	(btemp+10)^0,c
 12444  01A644  0EFF               	movlw	255
 12445  01A646  6E0C               	movwf	(btemp+11)^0,c
 12446                           
 12447                           ;stkvar	?_sprintf @ sp[(-8)+-3]
 12448  01A648  0EF5               	movlw	245
 12449  01A64A  24E1               	addwf	fsr1l,w,c
 12450  01A64C  6E09               	movwf	(btemp+8)^0,c
 12451  01A64E  0EFF               	movlw	255
 12452  01A650  20E2               	addwfc	fsr1h,w,c
 12453  01A652  6E0A               	movwf	(btemp+9)^0,c
 12454  01A654  500B               	movf	(btemp+10)^0,w,c
 12455  01A656  2609               	addwf	(btemp+8)^0,f,c
 12456  01A658  500C               	movf	(btemp+11)^0,w,c
 12457  01A65A  220A               	addwfc	(btemp+9)^0,f,c
 12458                           
 12459                           ;stkvar	_ap @ sp[(-8)+6]
 12460  01A65C  0EFF               	movlw	-1
 12461  01A65E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12462  01A664  0EFE               	movlw	-2
 12463  01A666  0060  F027  FFE3   	movff	btemp+8,plusw1
 12464                           
 12465                           ;stkvar	_s @ sp[(-8)+-3]
 12466  01A66C  0EF5               	movlw	-11
 12467  01A66E  006F FF8C  F00B    	movff	plusw1,btemp+10
 12468  01A674  0EF6               	movlw	-10
 12469  01A676  006F FF8C  F00C    	movff	plusw1,btemp+11
 12470                           
 12471                           ;stkvar	_f @ sp[(-8)+0]
 12472  01A67C  0EF9               	movlw	-7
 12473  01A67E  0060  F033  FFE3   	movff	btemp+11,plusw1
 12474  01A684  0EF8               	movlw	-8
 12475  01A686  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12476                           
 12477                           ;stkvar	_f @ sp[(-8)+0]
 12478  01A68C  0EFA               	movlw	250
 12479  01A68E  24E1               	addwf	fsr1l,w,c
 12480  01A690  6ED9               	movwf	fsr2l,c
 12481  01A692  0EFF               	movlw	255
 12482  01A694  20E2               	addwfc	fsr1h,w,c
 12483  01A696  6EDA               	movwf	fsr2h,c
 12484  01A698  0E00               	movlw	0
 12485  01A69A  6EDE               	movwf	postinc2,c
 12486  01A69C  0E00               	movlw	0
 12487  01A69E  6EDD               	movwf	postdec2,c
 12488                           
 12489                           ;stkvar	_f @ sp[(-8)+0]
 12490  01A6A0  0EFC               	movlw	252
 12491  01A6A2  24E1               	addwf	fsr1l,w,c
 12492  01A6A4  6ED9               	movwf	fsr2l,c
 12493  01A6A6  0EFF               	movlw	255
 12494  01A6A8  20E2               	addwfc	fsr1h,w,c
 12495  01A6AA  6EDA               	movwf	fsr2h,c
 12496  01A6AC  0E00               	movlw	0
 12497  01A6AE  6EDE               	movwf	postinc2,c
 12498  01A6B0  0E00               	movlw	0
 12499  01A6B2  6EDD               	movwf	postdec2,c
 12500                           
 12501                           ;stkvar	_ap @ sp[(-8)+6]
 12502  01A6B4  0EFE               	movlw	254
 12503  01A6B6  24E1               	addwf	fsr1l,w,c
 12504  01A6B8  6E01               	movwf	btemp^0,c
 12505  01A6BA  0EFF               	movlw	255
 12506  01A6BC  20E2               	addwfc	fsr1h,w,c
 12507  01A6BE  6E02               	movwf	(btemp+1)^0,c
 12508  01A6C0  0060  F007  FFE6   	movff	btemp,postinc1
 12509  01A6C6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12510                           
 12511                           ;stkvar	_fmt @ sp[(-10)+-5]
 12512  01A6CC  0EF1               	movlw	-15
 12513  01A6CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12514  01A6D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12515                           
 12516                           ;stkvar	_f @ sp[(-12)+0]
 12517  01A6DA  0EF4               	movlw	244
 12518  01A6DC  24E1               	addwf	fsr1l,w,c
 12519  01A6DE  6E01               	movwf	btemp^0,c
 12520  01A6E0  0EFF               	movlw	255
 12521  01A6E2  20E2               	addwfc	fsr1h,w,c
 12522  01A6E4  6E02               	movwf	(btemp+1)^0,c
 12523  01A6E6  0060  F007  FFE6   	movff	btemp,postinc1
 12524  01A6EC  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12525  01A6F2  ECEF  F0D8         	call	_vfprintf	;wreg free
 12526                           
 12527                           ; BSR set to: 0
 12528                           ;stkvar	_f @ sp[(-8)+0]
 12529  01A6F6  0EFA               	movlw	250
 12530  01A6F8  24E1               	addwf	fsr1l,w,c
 12531  01A6FA  6ED9               	movwf	fsr2l,c
 12532  01A6FC  0EFF               	movlw	255
 12533  01A6FE  20E2               	addwfc	fsr1h,w,c
 12534  01A700  6EDA               	movwf	fsr2h,c
 12535  01A702  006F FF78  F00B    	movff	postinc2,btemp+10
 12536  01A708  006F FF74  F00C    	movff	postdec2,btemp+11
 12537                           
 12538                           ;stkvar	_s @ sp[(-8)+-3]
 12539  01A70E  0EF5               	movlw	-11
 12540  01A710  006F FF8C  F009    	movff	plusw1,btemp+8
 12541  01A716  0EF6               	movlw	-10
 12542  01A718  006F FF8C  F00A    	movff	plusw1,btemp+9
 12543  01A71E  500B               	movf	(btemp+10)^0,w,c
 12544  01A720  2409               	addwf	(btemp+8)^0,w,c
 12545  01A722  6ED9               	movwf	fsr2l,c
 12546  01A724  500C               	movf	(btemp+11)^0,w,c
 12547  01A726  200A               	addwfc	(btemp+9)^0,w,c
 12548  01A728  6EDA               	movwf	fsr2h,c
 12549  01A72A  0E00               	movlw	0
 12550  01A72C  6EDF               	movwf	indf2,c
 12551                           
 12552                           ; BSR set to: 0
 12553                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 94, args
      +                          ize = 4, vargsize = 0
 12554  01A72E  0EF8               	movlw	248
 12555  01A730  26E1               	addwf	fsr1l,f,c
 12556  01A732  0EFF               	movlw	255
 12557  01A734  22E2               	addwfc	fsr1h,f,c
 12558  01A736  52E5               	movf	postdec1,f,c
 12559  01A738  50E7               	movf	indf1,w,c
 12560  01A73A  5EE1               	subwf	fsr1l,f,c
 12561  01A73C  0E00               	movlw	0
 12562  01A73E  5AE2               	subwfb	fsr1h,f,c
 12563  01A740  0012               	return		;funcret
 12564  01A742                     __end_of_sprintf:
 12565                           	opt callstack 0
 12566                           
 12567 ;; *************** function _get_vterm_ptr *****************
 12568 ;; Defined at:
 12569 ;;		line 116 in file "mconfig.c"
 12570 ;; Parameters:    Size  Location     Type
 12571 ;;  line            1  [STACK] const unsigned char 
 12572 ;;  vterm           1  [STACK] const unsigned char 
 12573 ;; Auto vars:     Size  Location     Type
 12574 ;;		None
 12575 ;; Return value:  Size  Location     Type
 12576 ;;                  2  [STACK] PTR unsigned char 
 12577 ;; Registers used:
 12578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
 12579 ;; Tracked objects:
 12580 ;;		On entry : 0/2
 12581 ;;		On exit  : 0/0
 12582 ;;		Unchanged: 0/0
 12583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12588 ;;Total ram usage:        0 bytes
 12589 ;; Hardware stack levels used:    1
 12590 ;; Hardware stack levels required when called:   15
 12591 ;; This function calls:
 12592 ;;		Nothing
 12593 ;; This function is called by:
 12594 ;;		_main
 12595 ;;		_current_sensor_cal
 12596 ;;		_check_help
 12597 ;;		_vterm_dump
 12598 ;; This function uses a reentrant model
 12599 ;;
 12600                           
 12601                           	psect	text45
 12602  01C87A                     __ptext45:
 12603                           	opt callstack 0
 12604  01C87A                     _get_vterm_ptr:
 12605                           	opt callstack 15
 12606                           
 12607                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
 12608                           ;stkvar	_vterm @ sp[(0)+-2]
 12609                           
 12610                           ; BSR set to: 0
 12611                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12612                           ;incstack = 0
 12613  01C87A  0EFE               	movlw	-2
 12614  01C87C  50E3               	movf	plusw1,w,c
 12615  01C87E  0B03               	andlw	3
 12616  01C880  0D78               	mullw	120
 12617  01C882  0E2A               	movlw	low _D
 12618  01C884  6E01               	movwf	btemp^0,c
 12619  01C886  0E08               	movlw	high _D
 12620  01C888  6E02               	movwf	(btemp+1)^0,c
 12621  01C88A  50F3               	movf	243,w,c
 12622  01C88C  2601               	addwf	btemp^0,f,c
 12623  01C88E  50F4               	movf	244,w,c
 12624  01C890  2202               	addwfc	(btemp+1)^0,f,c
 12625                           
 12626                           ;stkvar	_line @ sp[(0)+-1]
 12627  01C892  0EFF               	movlw	-1
 12628  01C894  50E3               	movf	plusw1,w,c
 12629  01C896  0B03               	andlw	3
 12630  01C898  0D28               	mullw	40
 12631  01C89A  50F3               	movf	243,w,c
 12632  01C89C  2601               	addwf	btemp^0,f,c
 12633  01C89E  50F4               	movf	244,w,c
 12634  01C8A0  2202               	addwfc	(btemp+1)^0,f,c
 12635                           
 12636                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 12637  01C8A2  52E5               	movf	postdec1,f,c
 12638  01C8A4  52E5               	movf	postdec1,f,c
 12639  01C8A6  0012               	return		;funcret
 12640  01C8A8                     __end_of_get_vterm_ptr:
 12641                           	opt callstack 0
 12642                           
 12643 ;; *************** function _WaitMs *****************
 12644 ;; Defined at:
 12645 ;;		line 32 in file "timers.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;  numMilliseco    2  [STACK] const unsigned short 
 12648 ;; Auto vars:     Size  Location     Type
 12649 ;;		None
 12650 ;; Return value:  Size  Location     Type
 12651 ;;                  1  [STACK] void 
 12652 ;; Registers used:
 12653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 12654 ;; Tracked objects:
 12655 ;;		On entry : 0/1
 12656 ;;		On exit  : 0/0
 12657 ;;		Unchanged: 0/0
 12658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12663 ;;Total ram usage:        0 bytes
 12664 ;; Hardware stack levels used:    1
 12665 ;; Hardware stack levels required when called:   16
 12666 ;; This function calls:
 12667 ;;		_StartTimer
 12668 ;;		_TimerDone
 12669 ;; This function is called by:
 12670 ;;		_main
 12671 ;;		_current_sensor_cal
 12672 ;;		_vterm_dump
 12673 ;; This function uses a reentrant model
 12674 ;;
 12675                           
 12676                           	psect	text46
 12677  01C682                     __ptext46:
 12678                           	opt callstack 0
 12679  01C682                     _WaitMs:
 12680                           	opt callstack 13
 12681                           
 12682                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
 12683                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
 12684                           
 12685                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12686                           ;incstack = 0
 12687  01C682  0EFE               	movlw	-2
 12688  01C684  006F FF8F FFE6     	movff	plusw1,postinc1
 12689  01C68A  006F FF8F FFE6     	movff	plusw1,postinc1
 12690  01C690  0E00               	movlw	0
 12691  01C692  6EE6               	movwf	postinc1,c
 12692  01C694  EC50  F0E2         	call	_StartTimer	;wreg free
 12693                           
 12694                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 12695  01C698  D005               	goto	l10372
 12696  01C69A                     l1639:
 12697                           
 12698                           ;timers.c: 36:   __nop();
 12699  01C69A  F000               	nop	
 12700                           
 12701                           ;timers.c: 37:   __nop();
 12702  01C69C  F000               	nop	
 12703                           
 12704                           ;timers.c: 38:   __nop();
 12705  01C69E  F000               	nop	
 12706                           
 12707                           ;timers.c: 39:   __nop();
 12708  01C6A0  F000               	nop	
 12709  01C6A2  0004               	clrwdt		;# 
 12710  01C6A4                     l10372:
 12711                           
 12712                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
 12713  01C6A4  0E00               	movlw	0
 12714  01C6A6  6EE6               	movwf	postinc1,c
 12715  01C6A8  ECBF  F0E4         	call	_TimerDone	;wreg free
 12716  01C6AC  5001               	movf	btemp^0,w,c
 12717  01C6AE  B4D8               	btfsc	status,2,c
 12718  01C6B0  D7F4               	goto	l1639
 12719                           
 12720                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 12721  01C6B2  52E5               	movf	postdec1,f,c
 12722  01C6B4  52E5               	movf	postdec1,f,c
 12723  01C6B6  0012               	return		;funcret
 12724  01C6B8                     __end_of_WaitMs:
 12725                           	opt callstack 0
 12726                           
 12727 ;; *************** function _update_lcd *****************
 12728 ;; Defined at:
 12729 ;;		line 85 in file "mconfig.c"
 12730 ;; Parameters:    Size  Location     Type
 12731 ;;  vterm           1  [STACK] unsigned char 
 12732 ;; Auto vars:     Size  Location     Type
 12733 ;;		None
 12734 ;; Return value:  Size  Location     Type
 12735 ;;                  1  [STACK] unsigned char 
 12736 ;; Registers used:
 12737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12738 ;; Tracked objects:
 12739 ;;		On entry : 0/0
 12740 ;;		On exit  : 0/0
 12741 ;;		Unchanged: 0/0
 12742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12747 ;;Total ram usage:        0 bytes
 12748 ;; Hardware stack levels used:    1
 12749 ;; Hardware stack levels required when called:   27
 12750 ;; This function calls:
 12751 ;;		_eaDogM_WriteStringAtPos
 12752 ;;		_wait_lcd_done
 12753 ;; This function is called by:
 12754 ;;		_main
 12755 ;;		_current_sensor_cal
 12756 ;;		_check_help
 12757 ;; This function uses a reentrant model
 12758 ;;
 12759                           
 12760                           	psect	text47
 12761  01A528                     __ptext47:
 12762                           	opt callstack 0
 12763  01A528                     _update_lcd:
 12764                           	opt callstack 3
 12765                           
 12766                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
 12767                           ;stkvar	_vterm @ sp[(0)+-1]
 12768                           
 12769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12770                           ;incstack = 0
 12771  01A528  0EFF               	movlw	-1
 12772  01A52A  006F FF8C  F001    	movff	plusw1,btemp
 12773  01A530  0E03               	movlw	3
 12774  01A532  1601               	andwf	btemp^0,f,c
 12775  01A534  0EFF               	movlw	-1
 12776  01A536  0060  F007  FFE3   	movff	btemp,plusw1
 12777                           
 12778                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
 12779  01A53C  EE22  F20A         	lfsr	2,_D+480
 12780  01A540  A0DF               	btfss	indf2,0,c
 12781  01A542  D004               	goto	l13588
 12782                           
 12783                           ;stkvar	_vterm @ sp[(0)+-1]
 12784  01A544  0EFF               	movlw	-1
 12785  01A546  50E3               	movf	plusw1,w,c
 12786  01A548  B4D8               	btfsc	status,2,c
 12787  01A54A  D074               	goto	l1715
 12788  01A54C                     l13588:
 12789                           
 12790                           ;mconfig.c: 92:  D.lcd[vterm][0][20] = 0;
 12791                           ;stkvar	_vterm @ sp[(0)+-1]
 12792  01A54C  0EFF               	movlw	-1
 12793  01A54E  50E3               	movf	plusw1,w,c
 12794  01A550  0D78               	mullw	120
 12795  01A552  0E3E               	movlw	low (_D+20)
 12796  01A554  24F3               	addwf	243,w,c
 12797  01A556  6ED9               	movwf	fsr2l,c
 12798  01A558  0E08               	movlw	high (_D+20)
 12799  01A55A  20F4               	addwfc	prodh,w,c
 12800  01A55C  6EDA               	movwf	fsr2h,c
 12801  01A55E  0E00               	movlw	0
 12802  01A560  6EDF               	movwf	indf2,c
 12803                           
 12804                           ;mconfig.c: 93:  D.lcd[vterm][1][20] = 0;
 12805                           ;stkvar	_vterm @ sp[(0)+-1]
 12806  01A562  0EFF               	movlw	-1
 12807  01A564  50E3               	movf	plusw1,w,c
 12808  01A566  0D78               	mullw	120
 12809  01A568  0E66               	movlw	low (_D+60)
 12810  01A56A  24F3               	addwf	243,w,c
 12811  01A56C  6ED9               	movwf	fsr2l,c
 12812  01A56E  0E08               	movlw	high (_D+60)
 12813  01A570  20F4               	addwfc	prodh,w,c
 12814  01A572  6EDA               	movwf	fsr2h,c
 12815  01A574  0E00               	movlw	0
 12816  01A576  6EDF               	movwf	indf2,c
 12817                           
 12818                           ;mconfig.c: 94:  D.lcd[vterm][2][20] = 0;
 12819                           ;stkvar	_vterm @ sp[(0)+-1]
 12820  01A578  0EFF               	movlw	-1
 12821  01A57A  50E3               	movf	plusw1,w,c
 12822  01A57C  0D78               	mullw	120
 12823  01A57E  0E8E               	movlw	low (_D+100)
 12824  01A580  24F3               	addwf	243,w,c
 12825  01A582  6ED9               	movwf	fsr2l,c
 12826  01A584  0E08               	movlw	high (_D+100)
 12827  01A586  20F4               	addwfc	prodh,w,c
 12828  01A588  6EDA               	movwf	fsr2h,c
 12829  01A58A  0E00               	movlw	0
 12830  01A58C  6EDF               	movwf	indf2,c
 12831                           
 12832                           ;mconfig.c: 95:  wait_lcd_done();
 12833  01A58E  EC44  F0E6         	call	_wait_lcd_done	;wreg free
 12834                           
 12835                           ; BSR set to: 0
 12836                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
 12837                           ;stkvar	_vterm @ sp[(0)+-1]
 12838  01A592  0EFF               	movlw	-1
 12839  01A594  50E3               	movf	plusw1,w,c
 12840  01A596  0D78               	mullw	120
 12841  01A598  0E2A               	movlw	low _D
 12842  01A59A  6E0B               	movwf	(btemp+10)^0,c
 12843  01A59C  0E08               	movlw	high _D
 12844  01A59E  6E0C               	movwf	(btemp+11)^0,c
 12845  01A5A0  50F3               	movf	243,w,c
 12846  01A5A2  260B               	addwf	(btemp+10)^0,f,c
 12847  01A5A4  50F4               	movf	244,w,c
 12848  01A5A6  220C               	addwfc	(btemp+11)^0,f,c
 12849  01A5A8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12850  01A5AE  0060  F033  FFE6   	movff	btemp+11,postinc1
 12851  01A5B4  0E00               	movlw	0
 12852  01A5B6  6EE6               	movwf	postinc1,c
 12853  01A5B8  0E00               	movlw	0
 12854  01A5BA  6EE6               	movwf	postinc1,c
 12855  01A5BC  EC9A  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
 12856                           
 12857                           ; BSR set to: 59
 12858                           ;mconfig.c: 97:  wait_lcd_done();
 12859  01A5C0  EC44  F0E6         	call	_wait_lcd_done	;wreg free
 12860                           
 12861                           ; BSR set to: 0
 12862                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
 12863                           ;stkvar	_vterm @ sp[(0)+-1]
 12864  01A5C4  0EFF               	movlw	-1
 12865  01A5C6  50E3               	movf	plusw1,w,c
 12866  01A5C8  0D78               	mullw	120
 12867  01A5CA  0E2A               	movlw	low _D
 12868  01A5CC  6E0B               	movwf	(btemp+10)^0,c
 12869  01A5CE  0E08               	movlw	high _D
 12870  01A5D0  6E0C               	movwf	(btemp+11)^0,c
 12871  01A5D2  0E28               	movlw	40
 12872  01A5D4  260B               	addwf	(btemp+10)^0,f,c
 12873  01A5D6  0E00               	movlw	0
 12874  01A5D8  220C               	addwfc	(btemp+11)^0,f,c
 12875  01A5DA  50F3               	movf	243,w,c
 12876  01A5DC  260B               	addwf	(btemp+10)^0,f,c
 12877  01A5DE  50F4               	movf	244,w,c
 12878  01A5E0  220C               	addwfc	(btemp+11)^0,f,c
 12879  01A5E2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12880  01A5E8  0060  F033  FFE6   	movff	btemp+11,postinc1
 12881  01A5EE  0E00               	movlw	0
 12882  01A5F0  6EE6               	movwf	postinc1,c
 12883  01A5F2  0E01               	movlw	1
 12884  01A5F4  6EE6               	movwf	postinc1,c
 12885  01A5F6  EC9A  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
 12886                           
 12887                           ; BSR set to: 59
 12888                           ;mconfig.c: 99:  wait_lcd_done();
 12889  01A5FA  EC44  F0E6         	call	_wait_lcd_done	;wreg free
 12890                           
 12891                           ; BSR set to: 0
 12892                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
 12893                           ;stkvar	_vterm @ sp[(0)+-1]
 12894  01A5FE  0EFF               	movlw	-1
 12895  01A600  50E3               	movf	plusw1,w,c
 12896  01A602  0D78               	mullw	120
 12897  01A604  0E2A               	movlw	low _D
 12898  01A606  6E0B               	movwf	(btemp+10)^0,c
 12899  01A608  0E08               	movlw	high _D
 12900  01A60A  6E0C               	movwf	(btemp+11)^0,c
 12901  01A60C  0E50               	movlw	80
 12902  01A60E  260B               	addwf	(btemp+10)^0,f,c
 12903  01A610  0E00               	movlw	0
 12904  01A612  220C               	addwfc	(btemp+11)^0,f,c
 12905  01A614  50F3               	movf	243,w,c
 12906  01A616  260B               	addwf	(btemp+10)^0,f,c
 12907  01A618  50F4               	movf	244,w,c
 12908  01A61A  220C               	addwfc	(btemp+11)^0,f,c
 12909  01A61C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12910  01A622  0060  F033  FFE6   	movff	btemp+11,postinc1
 12911  01A628  0E00               	movlw	0
 12912  01A62A  6EE6               	movwf	postinc1,c
 12913  01A62C  0E02               	movlw	2
 12914  01A62E  6EE6               	movwf	postinc1,c
 12915  01A630  EC9A  F0D9         	call	_eaDogM_WriteStringAtPos	;wreg free
 12916  01A634                     l1715:
 12917                           
 12918                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
 12919  01A634  52E5               	movf	postdec1,f,c
 12920  01A636  0012               	return		;funcret
 12921  01A638                     __end_of_update_lcd:
 12922                           	opt callstack 0
 12923                           
 12924 ;; *************** function _eaDogM_WriteStringAtPos *****************
 12925 ;; Defined at:
 12926 ;;		line 195 in file "eadog.c"
 12927 ;; Parameters:    Size  Location     Type
 12928 ;;  r               1  [STACK] const unsigned char 
 12929 ;;  c               1  [STACK] const unsigned char 
 12930 ;;  strPtr          2  [STACK] PTR unsigned char 
 12931 ;;		 -> D.lcd(480), D(482), V(192), 
 12932 ;; Auto vars:     Size  Location     Type
 12933 ;;  row             1  [STACK] unsigned char 
 12934 ;; Return value:  Size  Location     Type
 12935 ;;                  1  [STACK] void 
 12936 ;; Registers used:
 12937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 12938 ;; Tracked objects:
 12939 ;;		On entry : 3F/0
 12940 ;;		On exit  : 3F/3B
 12941 ;;		Unchanged: 0/0
 12942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12947 ;;Total ram usage:        0 bytes
 12948 ;; Hardware stack levels used:    1
 12949 ;; Hardware stack levels required when called:   26
 12950 ;; This function calls:
 12951 ;;		_eaDogM_WriteString
 12952 ;;		_send_lcd_cmd_dma
 12953 ;;		_send_lcd_data_dma
 12954 ;;		_wait_lcd_done
 12955 ;;		_wdtdelay
 12956 ;; This function is called by:
 12957 ;;		_update_lcd
 12958 ;;		_vterm_dump
 12959 ;; This function uses a reentrant model
 12960 ;;
 12961                           
 12962                           	psect	text48
 12963  01B334                     __ptext48:
 12964                           	opt callstack 0
 12965  01B334                     _eaDogM_WriteStringAtPos:
 12966                           	opt callstack 0
 12967                           
 12968                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12969  01B334  52E6               	movf	postinc1,f,c
 12970                           
 12971                           ;eadog.c: 195: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 196: {;eadog.c: 197:  uint8_t row;;eadog.c: 199:  switch (r) {
 12972                           
 12973                           ;incstack = 0
 12974  01B336  D014               	goto	l13564
 12975  01B338                     l13552:
 12976                           
 12977                           ;eadog.c: 201:   row = 0x40;
 12978                           ;stkvar	_row @ sp[(-1)+0]
 12979  01B338  0EFF               	movlw	-1
 12980  01B33A  6AE3               	clrf	plusw1,c
 12981  01B33C  8CE3               	bsf	plusw1,6,c
 12982                           
 12983                           ;eadog.c: 202:   break;
 12984  01B33E  D026               	goto	l13566
 12985  01B340                     l13554:
 12986                           
 12987                           ;eadog.c: 204:   row = 0x14;
 12988                           ;stkvar	_row @ sp[(-1)+0]
 12989  01B340  0EFF               	movlw	-1
 12990  01B342  6AE3               	clrf	plusw1,c
 12991  01B344  84E3               	bsf	plusw1,2,c
 12992  01B346  88E3               	bsf	plusw1,4,c	;indir
 12993                           
 12994                           ;eadog.c: 205:   break;
 12995  01B348  D021               	goto	l13566
 12996  01B34A                     l13556:
 12997                           
 12998                           ;eadog.c: 207:   row = 0x54;
 12999  01B34A  0E54               	movlw	84
 13000  01B34C  6E0C               	movwf	(btemp+11)^0,c
 13001                           
 13002                           ;stkvar	_row @ sp[(-1)+0]
 13003  01B34E  0EFF               	movlw	-1
 13004  01B350  0060  F033  FFE3   	movff	btemp+11,plusw1
 13005                           
 13006                           ;eadog.c: 208:   break;
 13007  01B356  D01A               	goto	l13566
 13008  01B358                     l13558:
 13009                           
 13010                           ;eadog.c: 210:   row = 0x1;
 13011                           ;stkvar	_row @ sp[(-1)+0]
 13012  01B358  0EFF               	movlw	-1
 13013  01B35A  6AE3               	clrf	plusw1,c
 13014  01B35C  2AE3               	incf	plusw1,f,c
 13015                           
 13016                           ;eadog.c: 211:   break;
 13017  01B35E  D016               	goto	l13566
 13018  01B360                     l13564:
 13019                           
 13020                           ;stkvar	_r @ sp[(-1)+-1]
 13021  01B360  0EFE               	movlw	-2
 13022  01B362  50E3               	movf	plusw1,w,c
 13023  01B364  6E0B               	movwf	(btemp+10)^0,c
 13024  01B366  6A0C               	clrf	(btemp+11)^0,c
 13025                           
 13026                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13027                           ; Switch size 1, requested type "simple"
 13028                           ; Number of cases is 1, Range of values is 0 to 0
 13029                           ; switch strategies available:
 13030                           ; Name         Instructions Cycles
 13031                           ; simple_byte            4     3 (average)
 13032                           ;	Chosen strategy is simple_byte
 13033  01B368  500C               	movf	(btemp+11)^0,w,c
 13034  01B36A  0A00               	xorlw	0	; case 0
 13035  01B36C  A4D8               	btfss	status,2,c
 13036  01B36E  D7E4               	goto	l13552
 13037                           
 13038                           ; Switch size 1, requested type "simple"
 13039                           ; Number of cases is 4, Range of values is 0 to 3
 13040                           ; switch strategies available:
 13041                           ; Name         Instructions Cycles
 13042                           ; simple_byte           13     7 (average)
 13043                           ;	Chosen strategy is simple_byte
 13044  01B370  500B               	movf	(btemp+10)^0,w,c
 13045  01B372  0A00               	xorlw	0	; case 0
 13046  01B374  B4D8               	btfsc	status,2,c
 13047  01B376  D7E0               	goto	l13552
 13048  01B378  0A01               	xorlw	1	; case 1
 13049  01B37A  B4D8               	btfsc	status,2,c
 13050  01B37C  D7E1               	goto	l13554
 13051  01B37E  0A03               	xorlw	3	; case 2
 13052  01B380  B4D8               	btfsc	status,2,c
 13053  01B382  D7E3               	goto	l13556
 13054  01B384  0A01               	xorlw	1	; case 3
 13055  01B386  B4D8               	btfsc	status,2,c
 13056  01B388  D7E7               	goto	l13558
 13057  01B38A  D7D6               	goto	l13552
 13058  01B38C                     l13566:
 13059                           
 13060                           ;eadog.c: 216:  send_lcd_cmd_dma(0x45);
 13061  01B38C  0E45               	movlw	69
 13062  01B38E  6EE6               	movwf	postinc1,c
 13063  01B390  ECA6  F0E6         	call	_send_lcd_cmd_dma	;wreg free
 13064                           
 13065                           ;eadog.c: 217:  send_lcd_data_dma(row + c);
 13066                           ;stkvar	_c @ sp[(-1)+-2]
 13067  01B394  0EFD               	movlw	-3
 13068  01B396  006F FF8C  F00C    	movff	plusw1,btemp+11
 13069                           
 13070                           ;stkvar	_row @ sp[(-1)+0]
 13071  01B39C  0EFF               	movlw	-1
 13072  01B39E  50E3               	movf	plusw1,w,c
 13073  01B3A0  240C               	addwf	(btemp+11)^0,w,c
 13074  01B3A2  6EE6               	movwf	postinc1,c
 13075  01B3A4  ECAD  F0E0         	call	_send_lcd_data_dma	;wreg free
 13076                           
 13077                           ; BSR set to: 59
 13078                           ;eadog.c: 218:  wait_lcd_done();
 13079  01B3A8  EC44  F0E6         	call	_wait_lcd_done	;wreg free
 13080                           
 13081                           ; BSR set to: 0
 13082                           ;eadog.c: 219:  wdtdelay(8);
 13083  01B3AC  0E08               	movlw	8
 13084  01B3AE  6EE6               	movwf	postinc1,c
 13085  01B3B0  0E00               	movlw	0
 13086  01B3B2  6EE6               	movwf	postinc1,c
 13087  01B3B4  0E00               	movlw	0
 13088  01B3B6  6EE6               	movwf	postinc1,c
 13089  01B3B8  0E00               	movlw	0
 13090  01B3BA  6EE6               	movwf	postinc1,c
 13091  01B3BC  ECDA  F0DF         	call	_wdtdelay	;wreg free
 13092                           
 13093                           ;eadog.c: 220:  eaDogM_WriteString(strPtr);
 13094                           ;stkvar	_strPtr @ sp[(-1)+-4]
 13095  01B3C0  0EFB               	movlw	-5
 13096  01B3C2  006F FF8F FFE6     	movff	plusw1,postinc1
 13097  01B3C8  006F FF8F FFE6     	movff	plusw1,postinc1
 13098  01B3CE  ECEE  F0D9         	call	_eaDogM_WriteString	;wreg free
 13099                           
 13100                           ; BSR set to: 59
 13101                           ; _eaDogM_WriteStringAtPos: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
 13102  01B3D2  0EFB               	movlw	251
 13103  01B3D4  26E1               	addwf	fsr1l,f,c
 13104  01B3D6  0EFF               	movlw	255
 13105  01B3D8  22E2               	addwfc	fsr1h,f,c
 13106  01B3DA  0012               	return		;funcret
 13107  01B3DC                     __end_of_eaDogM_WriteStringAtPos:
 13108                           	opt callstack 0
 13109                           
 13110 ;; *************** function _send_lcd_cmd_dma *****************
 13111 ;; Defined at:
 13112 ;;		line 171 in file "eadog.c"
 13113 ;; Parameters:    Size  Location     Type
 13114 ;;  strPtr          1  [STACK] const unsigned char 
 13115 ;; Auto vars:     Size  Location     Type
 13116 ;;		None
 13117 ;; Return value:  Size  Location     Type
 13118 ;;                  1  [STACK] void 
 13119 ;; Registers used:
 13120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13121 ;; Tracked objects:
 13122 ;;		On entry : 0/3D
 13123 ;;		On exit  : 3F/0
 13124 ;;		Unchanged: 0/0
 13125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13130 ;;Total ram usage:        0 bytes
 13131 ;; Hardware stack levels used:    1
 13132 ;; Hardware stack levels required when called:   25
 13133 ;; This function calls:
 13134 ;;		_send_lcd_data_dma
 13135 ;;		_wait_lcd_done
 13136 ;; This function is called by:
 13137 ;;		_eaDogM_WriteStringAtPos
 13138 ;;		_eaDogM_WriteCommand
 13139 ;; This function uses a reentrant model
 13140 ;;
 13141                           
 13142                           	psect	text49
 13143  01CD4C                     __ptext49:
 13144                           	opt callstack 0
 13145  01CD4C                     _send_lcd_cmd_dma:
 13146                           	opt callstack 3
 13147                           
 13148                           ;eadog.c: 171: void send_lcd_cmd_dma(const uint8_t strPtr);eadog.c: 172: {;eadog.c: 173:
      +                            send_lcd_data_dma(0xFE);
 13149                           
 13150                           ; BSR set to: 59
 13151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13152                           ;incstack = 0
 13153  01CD4C  0EFE               	movlw	254
 13154  01CD4E  6EE6               	movwf	postinc1,c
 13155  01CD50  ECAD  F0E0         	call	_send_lcd_data_dma	;wreg free
 13156                           
 13157                           ; BSR set to: 59
 13158                           ;eadog.c: 174:  wait_lcd_done();
 13159  01CD54  EC44  F0E6         	call	_wait_lcd_done	;wreg free
 13160                           
 13161                           ; BSR set to: 0
 13162                           ;eadog.c: 175:  send_lcd_data_dma(strPtr);
 13163                           ;stkvar	_strPtr @ sp[(0)+-1]
 13164  01CD58  0EFF               	movlw	-1
 13165  01CD5A  50E3               	movf	plusw1,w,c
 13166  01CD5C  6EE6               	movwf	postinc1,c
 13167  01CD5E  ECAD  F0E0         	call	_send_lcd_data_dma	;wreg free
 13168                           
 13169                           ;eadog.c: 176:  wait_lcd_done();
 13170  01CD62  EC44  F0E6         	call	_wait_lcd_done	;wreg free
 13171                           
 13172                           ; BSR set to: 0
 13173                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 13174  01CD66  52E5               	movf	postdec1,f,c
 13175  01CD68  0012               	return		;funcret
 13176  01CD6A                     __end_of_send_lcd_cmd_dma:
 13177                           	opt callstack 0
 13178                           
 13179 ;; *************** function _wait_lcd_done *****************
 13180 ;; Defined at:
 13181 ;;		line 444 in file "eadog.c"
 13182 ;; Parameters:    Size  Location     Type
 13183 ;;		None
 13184 ;; Auto vars:     Size  Location     Type
 13185 ;;		None
 13186 ;; Return value:  Size  Location     Type
 13187 ;;                  1  [STACK] void 
 13188 ;; Registers used:
 13189 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 13190 ;; Tracked objects:
 13191 ;;		On entry : 0/1
 13192 ;;		On exit  : 3F/0
 13193 ;;		Unchanged: 0/0
 13194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13199 ;;Total ram usage:        0 bytes
 13200 ;; Hardware stack levels used:    1
 13201 ;; Hardware stack levels required when called:   16
 13202 ;; This function calls:
 13203 ;;		_wdtdelay
 13204 ;; This function is called by:
 13205 ;;		_main
 13206 ;;		_send_lcd_cmd_dma
 13207 ;;		_eaDogM_WriteStringAtPos
 13208 ;;		_update_lcd
 13209 ;;		_vterm_dump
 13210 ;; This function uses a reentrant model
 13211 ;;
 13212                           
 13213                           	psect	text50
 13214  01CC88                     __ptext50:
 13215                           	opt callstack 0
 13216  01CC88                     _wait_lcd_done:
 13217                           	opt callstack 14
 13218                           
 13219                           ;eadog.c: 446:  while (spi_link.LCD_DATA);
 13220                           
 13221                           ; BSR set to: 0
 13222                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13223                           ;incstack = 0
 13224  01CC88  0101               	movlb	1	; () banked
 13225  01CC8A  B7D0               	btfsc	_spi_link& (0+255),3,b	;volatile
 13226  01CC8C  D7FD               	goto	_wait_lcd_done
 13227  01CC8E                     u9000:
 13228  01CC8E  013D               	movlb	61	; () banked
 13229  01CC90  AB17               	btfss	23,5,b	;volatile
 13230  01CC92  D7FD               	goto	u9000
 13231                           
 13232                           ; BSR set to: 61
 13233                           ;eadog.c: 448:  wdtdelay(50);
 13234  01CC94  0E32               	movlw	50
 13235  01CC96  6EE6               	movwf	postinc1,c
 13236  01CC98  0E00               	movlw	0
 13237  01CC9A  6EE6               	movwf	postinc1,c
 13238  01CC9C  0E00               	movlw	0
 13239  01CC9E  6EE6               	movwf	postinc1,c
 13240  01CCA0  0E00               	movlw	0
 13241  01CCA2  6EE6               	movwf	postinc1,c
 13242  01CCA4  ECDA  F0DF         	call	_wdtdelay	;wreg free
 13243                           
 13244                           ; BSR set to: 0
 13245                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 13246  01CCA8  0012               	return		;funcret
 13247  01CCAA                     __end_of_wait_lcd_done:
 13248                           	opt callstack 0
 13249                           
 13250 ;; *************** function _wdtdelay *****************
 13251 ;; Defined at:
 13252 ;;		line 23 in file "eadog.c"
 13253 ;; Parameters:    Size  Location     Type
 13254 ;;  delay           4  [STACK] const unsigned long 
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;		None
 13257 ;; Return value:  Size  Location     Type
 13258 ;;                  1  [STACK] void 
 13259 ;; Registers used:
 13260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 13261 ;; Tracked objects:
 13262 ;;		On entry : 2/3D
 13263 ;;		On exit  : 3F/0
 13264 ;;		Unchanged: 0/0
 13265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13270 ;;Total ram usage:        0 bytes
 13271 ;; Hardware stack levels used:    1
 13272 ;; Hardware stack levels required when called:   15
 13273 ;; This function calls:
 13274 ;;		Nothing
 13275 ;; This function is called by:
 13276 ;;		_init_display
 13277 ;;		_send_lcd_data
 13278 ;;		_send_lcd_cmd
 13279 ;;		_send_lcd_cmd_long
 13280 ;;		_eaDogM_WriteStringAtPos
 13281 ;;		_wait_lcd_done
 13282 ;; This function uses a reentrant model
 13283 ;;
 13284                           
 13285                           	psect	text51
 13286  01BFB4                     __ptext51:
 13287                           	opt callstack 0
 13288  01BFB4                     _wdtdelay:
 13289                           	opt callstack 14
 13290                           
 13291                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
 13292                           
 13293                           ; BSR set to: 0
 13294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13295                           ;incstack = 0
 13296  01BFB4  0100               	movlb	0	; () banked
 13297  01BFB6  6B74               	clrf	wdtdelay@dcount& (0+255),b
 13298  01BFB8  6B75               	clrf	(wdtdelay@dcount+1)& (0+255),b
 13299  01BFBA  6B76               	clrf	(wdtdelay@dcount+2)& (0+255),b
 13300  01BFBC  6B77               	clrf	(wdtdelay@dcount+3)& (0+255),b
 13301  01BFBE                     l1492:
 13302                           
 13303                           ; BSR set to: 0
 13304                           ;eadog.c: 28:   __nop();
 13305  01BFBE  F000               	nop	
 13306  01BFC0  0004               	clrwdt		;# 
 13307                           
 13308                           ;eadog.c: 30:  };
 13309  01BFC2  0E01               	movlw	1
 13310  01BFC4  0100               	movlb	0	; () banked
 13311  01BFC6  2774               	addwf	wdtdelay@dcount& (0+255),f,b
 13312  01BFC8  0E00               	movlw	0
 13313  01BFCA  2375               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
 13314  01BFCC  2376               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
 13315  01BFCE  2377               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;stkvar	_delay @ sp[(0)+-4]
 13319  01BFD0  0EFC               	movlw	-4
 13320  01BFD2  006F FF8C  F001    	movff	plusw1,btemp
 13321  01BFD8  5174               	movf	wdtdelay@dcount& (0+255),w,b
 13322  01BFDA  5C01               	subwf	btemp^0,w,c
 13323  01BFDC  0EFD               	movlw	-3
 13324  01BFDE  006F FF8C  F001    	movff	plusw1,btemp
 13325  01BFE4  5175               	movf	(wdtdelay@dcount+1)& (0+255),w,b
 13326  01BFE6  5801               	subwfb	btemp^0,w,c
 13327  01BFE8  0EFE               	movlw	-2
 13328  01BFEA  006F FF8C  F001    	movff	plusw1,btemp
 13329  01BFF0  5176               	movf	(wdtdelay@dcount+2)& (0+255),w,b
 13330  01BFF2  5801               	subwfb	btemp^0,w,c
 13331  01BFF4  0EFF               	movlw	-1
 13332  01BFF6  006F FF8C  F001    	movff	plusw1,btemp
 13333  01BFFC  5177               	movf	(wdtdelay@dcount+3)& (0+255),w,b
 13334  01BFFE  5801               	subwfb	btemp^0,w,c
 13335  01C000  B0D8               	btfsc	status,0,c
 13336  01C002  D7DD               	goto	l1492
 13337                           
 13338                           ; BSR set to: 0
 13339                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
 13340  01C004  52E5               	movf	postdec1,f,c
 13341  01C006  52E5               	movf	postdec1,f,c
 13342  01C008  52E5               	movf	postdec1,f,c
 13343  01C00A  52E5               	movf	postdec1,f,c
 13344  01C00C  0012               	return		;funcret
 13345  01C00E                     __end_of_wdtdelay:
 13346                           	opt callstack 0
 13347                           
 13348 ;; *************** function _send_lcd_data_dma *****************
 13349 ;; Defined at:
 13350 ;;		line 182 in file "eadog.c"
 13351 ;; Parameters:    Size  Location     Type
 13352 ;;  strPtr          1  [STACK] const unsigned char 
 13353 ;; Auto vars:     Size  Location     Type
 13354 ;;		None
 13355 ;; Return value:  Size  Location     Type
 13356 ;;                  1  [STACK] void 
 13357 ;; Registers used:
 13358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13359 ;; Tracked objects:
 13360 ;;		On entry : 0/0
 13361 ;;		On exit  : 3F/3B
 13362 ;;		Unchanged: 0/0
 13363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13368 ;;Total ram usage:        0 bytes
 13369 ;; Hardware stack levels used:    1
 13370 ;; Hardware stack levels required when called:   24
 13371 ;; This function calls:
 13372 ;;		_printf
 13373 ;;		_ringBufS_flush
 13374 ;;		_start_lcd
 13375 ;;		_wait_lcd_set
 13376 ;; This function is called by:
 13377 ;;		_send_lcd_cmd_dma
 13378 ;;		_eaDogM_WriteStringAtPos
 13379 ;; This function uses a reentrant model
 13380 ;;
 13381                           
 13382                           	psect	text52
 13383  01C15A                     __ptext52:
 13384                           	opt callstack 0
 13385  01C15A                     _send_lcd_data_dma:
 13386                           	opt callstack 4
 13387                           
 13388                           ;eadog.c: 182: void send_lcd_data_dma(const uint8_t strPtr);eadog.c: 183: {;eadog.c: 184
      +                          :  wait_lcd_set();
 13389                           
 13390                           ; BSR set to: 0
 13391                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13392                           ;incstack = 0
 13393  01C15A  ECCC  F0E7         	call	_wait_lcd_set	;wreg free
 13394                           
 13395                           ; BSR set to: 1
 13396                           ;eadog.c: 186:  ringBufS_flush(spi_link.tx1a, 0);
 13397  01C15E  0E00               	movlw	0
 13398  01C160  6EE6               	movwf	postinc1,c
 13399  01C162  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 13400  01C168  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 13401  01C16E  ECDE  F0DA         	call	_ringBufS_flush	;wreg free
 13402  01C172  94BC               	bcf	188,2,c	;volatile
 13403                           
 13404                           ;eadog.c: 188:  DMA1CON0bits.EN = 0;
 13405  01C174  013B               	movlb	59	; () banked
 13406  01C176  9FFC               	bcf	252,7,b	;volatile
 13407                           
 13408                           ; BSR set to: 59
 13409                           ;eadog.c: 189:  DMA1SSZ = 1;
 13410  01C178  0E00               	movlw	0
 13411  01C17A  6FF8               	movwf	248,b	;volatile
 13412  01C17C  0E01               	movlw	1
 13413  01C17E  6FF7               	movwf	247,b	;volatile
 13414                           
 13415                           ; BSR set to: 59
 13416                           ;eadog.c: 190:  DMA1CON0bits.EN = 1;
 13417  01C180  8FFC               	bsf	252,7,b	;volatile
 13418                           
 13419                           ; BSR set to: 59
 13420                           ;eadog.c: 191:  printf("%c", strPtr);
 13421                           ;stkvar	_strPtr @ sp[(0)+-1]
 13422  01C182  0EFF               	movlw	-1
 13423  01C184  50E3               	movf	plusw1,w,c
 13424  01C186  6EE6               	movwf	postinc1,c
 13425  01C188  0E00               	movlw	0
 13426  01C18A  6EE6               	movwf	postinc1,c
 13427  01C18C  0EF9               	movlw	low STR_61
 13428  01C18E  6EE6               	movwf	postinc1,c
 13429  01C190  0EFF               	movlw	high STR_61
 13430  01C192  6EE6               	movwf	postinc1,c
 13431  01C194  0E04               	movlw	4
 13432  01C196  6EE6               	movwf	postinc1,c
 13433  01C198  EC1B  F0DF         	call	_printf	;wreg free
 13434                           
 13435                           ; BSR set to: 0
 13436                           ;eadog.c: 192:  start_lcd();
 13437  01C19C  ECCF  F0E7         	call	_start_lcd	;wreg free
 13438                           
 13439                           ; BSR set to: 59
 13440                           ; _send_lcd_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
 13441  01C1A0  52E5               	movf	postdec1,f,c
 13442  01C1A2  0012               	return		;funcret
 13443  01C1A4                     __end_of_send_lcd_data_dma:
 13444                           	opt callstack 0
 13445                           
 13446 ;; *************** function _eaDogM_WriteString *****************
 13447 ;; Defined at:
 13448 ;;		line 151 in file "eadog.c"
 13449 ;; Parameters:    Size  Location     Type
 13450 ;;  strPtr          2  [STACK] PTR unsigned char 
 13451 ;;		 -> D.lcd(480), D(482), V(192), 
 13452 ;; Auto vars:     Size  Location     Type
 13453 ;;		None
 13454 ;; Return value:  Size  Location     Type
 13455 ;;                  1  [STACK] void 
 13456 ;; Registers used:
 13457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 13458 ;; Tracked objects:
 13459 ;;		On entry : 3F/0
 13460 ;;		On exit  : 3F/3B
 13461 ;;		Unchanged: 0/0
 13462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13467 ;;Total ram usage:        0 bytes
 13468 ;; Hardware stack levels used:    1
 13469 ;; Hardware stack levels required when called:   24
 13470 ;; This function calls:
 13471 ;;		_printf
 13472 ;;		_ringBufS_flush
 13473 ;;		_start_lcd
 13474 ;;		_strlen
 13475 ;;		_wait_lcd_set
 13476 ;; This function is called by:
 13477 ;;		_eaDogM_WriteStringAtPos
 13478 ;; This function uses a reentrant model
 13479 ;;
 13480                           
 13481                           	psect	text53
 13482  01B3DC                     __ptext53:
 13483                           	opt callstack 0
 13484  01B3DC                     _eaDogM_WriteString:
 13485                           	opt callstack 4
 13486                           
 13487                           ;eadog.c: 151: void eaDogM_WriteString(char *strPtr);eadog.c: 152: {;eadog.c: 153:  wait
      +                          _lcd_set();
 13488                           
 13489                           ; BSR set to: 59
 13490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13491                           ;incstack = 0
 13492  01B3DC  ECCC  F0E7         	call	_wait_lcd_set	;wreg free
 13493                           
 13494                           ; BSR set to: 1
 13495                           ;eadog.c: 155:  ringBufS_flush(spi_link.tx1a, 0);
 13496  01B3E0  0E00               	movlw	0
 13497  01B3E2  6EE6               	movwf	postinc1,c
 13498  01B3E4  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 13499  01B3EA  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 13500  01B3F0  ECDE  F0DA         	call	_ringBufS_flush	;wreg free
 13501  01B3F4  94BC               	bcf	188,2,c	;volatile
 13502                           
 13503                           ;eadog.c: 157:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 13504                           ;stkvar	_strPtr @ sp[(0)+-2]
 13505  01B3F6  0EFE               	movlw	-2
 13506  01B3F8  006F FF8F FFE6     	movff	plusw1,postinc1
 13507  01B3FE  006F FF8F FFE6     	movff	plusw1,postinc1
 13508  01B404  EC41  F0DA         	call	_strlen	;wreg free
 13509  01B408  5002               	movf	(btemp+1)^0,w,c
 13510  01B40A  E104               	bnz	u12940
 13511  01B40C  0E41               	movlw	65
 13512  01B40E  5C01               	subwf	btemp^0,w,c
 13513  01B410  A0D8               	btfss	status,0,c
 13514  01B412  D010               	goto	l13508
 13515  01B414                     u12940:
 13516                           
 13517                           ;stkvar	_strPtr @ sp[(0)+-2]
 13518  01B414  0EFE               	movlw	-2
 13519  01B416  006F FF8C  F00B    	movff	plusw1,btemp+10
 13520  01B41C  0EFF               	movlw	-1
 13521  01B41E  006F FF8C  F00C    	movff	plusw1,btemp+11
 13522  01B424  0E40               	movlw	64
 13523  01B426  240B               	addwf	(btemp+10)^0,w,c
 13524  01B428  6ED9               	movwf	fsr2l,c
 13525  01B42A  0E00               	movlw	0
 13526  01B42C  200C               	addwfc	(btemp+11)^0,w,c
 13527  01B42E  6EDA               	movwf	fsr2h,c
 13528  01B430  0E00               	movlw	0
 13529  01B432  6EDF               	movwf	indf2,c
 13530  01B434                     l13508:
 13531                           
 13532                           ;eadog.c: 158:  DMA1CON0bits.EN = 0;
 13533  01B434  013B               	movlb	59	; () banked
 13534  01B436  9FFC               	bcf	252,7,b	;volatile
 13535                           
 13536                           ; BSR set to: 59
 13537                           ;eadog.c: 159:  DMA1SSZ = strlen(strPtr);
 13538                           ;stkvar	_strPtr @ sp[(0)+-2]
 13539  01B438  0EFE               	movlw	-2
 13540  01B43A  006F FF8F FFE6     	movff	plusw1,postinc1
 13541  01B440  006F FF8F FFE6     	movff	plusw1,postinc1
 13542  01B446  EC41  F0DA         	call	_strlen	;wreg free
 13543  01B44A  0060  F007  FBF7   	movff	btemp,15351	;volatile
 13544  01B450  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
 13545                           
 13546                           ;eadog.c: 160:  DMA1CON0bits.EN = 1;
 13547  01B456  013B               	movlb	59	; () banked
 13548  01B458  8FFC               	bsf	252,7,b	;volatile
 13549                           
 13550                           ; BSR set to: 59
 13551                           ;eadog.c: 161:  printf("%s", strPtr);
 13552                           ;stkvar	_strPtr @ sp[(0)+-2]
 13553  01B45A  0EFE               	movlw	-2
 13554  01B45C  006F FF8F FFE6     	movff	plusw1,postinc1
 13555  01B462  006F FF8F FFE6     	movff	plusw1,postinc1
 13556  01B468  0EFC               	movlw	low STR_60
 13557  01B46A  6EE6               	movwf	postinc1,c
 13558  01B46C  0EFF               	movlw	high STR_60
 13559  01B46E  6EE6               	movwf	postinc1,c
 13560  01B470  0E04               	movlw	4
 13561  01B472  6EE6               	movwf	postinc1,c
 13562  01B474  EC1B  F0DF         	call	_printf	;wreg free
 13563                           
 13564                           ; BSR set to: 0
 13565                           ;eadog.c: 162:  start_lcd();
 13566  01B478  ECCF  F0E7         	call	_start_lcd	;wreg free
 13567                           
 13568                           ; BSR set to: 59
 13569                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 13570  01B47C  52E5               	movf	postdec1,f,c
 13571  01B47E  52E5               	movf	postdec1,f,c
 13572  01B480  0012               	return		;funcret
 13573  01B482                     __end_of_eaDogM_WriteString:
 13574                           	opt callstack 0
 13575                           
 13576 ;; *************** function _wait_lcd_set *****************
 13577 ;; Defined at:
 13578 ;;		line 434 in file "eadog.c"
 13579 ;; Parameters:    Size  Location     Type
 13580 ;;		None
 13581 ;; Auto vars:     Size  Location     Type
 13582 ;;		None
 13583 ;; Return value:  Size  Location     Type
 13584 ;;                  1  [STACK] void 
 13585 ;; Registers used:
 13586 ;;		None
 13587 ;; Tracked objects:
 13588 ;;		On entry : 0/0
 13589 ;;		On exit  : 3F/1
 13590 ;;		Unchanged: 0/0
 13591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13596 ;;Total ram usage:        0 bytes
 13597 ;; Hardware stack levels used:    1
 13598 ;; Hardware stack levels required when called:   15
 13599 ;; This function calls:
 13600 ;;		Nothing
 13601 ;; This function is called by:
 13602 ;;		_eaDogM_WriteString
 13603 ;;		_send_lcd_data_dma
 13604 ;; This function uses a reentrant model
 13605 ;;
 13606                           
 13607                           	psect	text54
 13608  01CF98                     __ptext54:
 13609                           	opt callstack 0
 13610  01CF98                     _wait_lcd_set:
 13611                           	opt callstack 12
 13612                           
 13613                           ;eadog.c: 436:  spi_link.LCD_DATA = 1;
 13614                           
 13615                           ; BSR set to: 59
 13616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13617                           ;incstack = 0
 13618  01CF98  0101               	movlb	1	; () banked
 13619  01CF9A  87D0               	bsf	_spi_link& (0+255),3,b	;volatile
 13620                           
 13621                           ; BSR set to: 1
 13622                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 13623  01CF9C  0012               	return		;funcret
 13624  01CF9E                     __end_of_wait_lcd_set:
 13625                           	opt callstack 0
 13626                           
 13627 ;; *************** function _start_lcd *****************
 13628 ;; Defined at:
 13629 ;;		line 429 in file "eadog.c"
 13630 ;; Parameters:    Size  Location     Type
 13631 ;;		None
 13632 ;; Auto vars:     Size  Location     Type
 13633 ;;		None
 13634 ;; Return value:  Size  Location     Type
 13635 ;;                  1  [STACK] void 
 13636 ;; Registers used:
 13637 ;;		None
 13638 ;; Tracked objects:
 13639 ;;		On entry : 3F/0
 13640 ;;		On exit  : 3F/3B
 13641 ;;		Unchanged: 0/0
 13642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13647 ;;Total ram usage:        0 bytes
 13648 ;; Hardware stack levels used:    1
 13649 ;; Hardware stack levels required when called:   15
 13650 ;; This function calls:
 13651 ;;		Nothing
 13652 ;; This function is called by:
 13653 ;;		_eaDogM_WriteString
 13654 ;;		_send_lcd_data_dma
 13655 ;; This function uses a reentrant model
 13656 ;;
 13657                           
 13658                           	psect	text55
 13659  01CF9E                     __ptext55:
 13660                           	opt callstack 0
 13661  01CF9E                     _start_lcd:
 13662                           	opt callstack 12
 13663                           
 13664                           ;eadog.c: 431:  DMA1CON0bits.DMA1SIRQEN = 1;
 13665                           
 13666                           ; BSR set to: 1
 13667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13668                           ;incstack = 0
 13669  01CF9E  013B               	movlb	59	; () banked
 13670  01CFA0  8DFC               	bsf	252,6,b	;volatile
 13671                           
 13672                           ; BSR set to: 59
 13673                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 13674  01CFA2  0012               	return		;funcret
 13675  01CFA4                     __end_of_start_lcd:
 13676                           	opt callstack 0
 13677                           
 13678 ;; *************** function _ringBufS_flush *****************
 13679 ;; Defined at:
 13680 ;;		line 76 in file "ringbufs.c"
 13681 ;; Parameters:    Size  Location     Type
 13682 ;;  _this           2  [STACK] PTR struct ringBufS_t
 13683 ;;		 -> ring_buf1(67), 
 13684 ;;  clearBuffer     1  [STACK] const char 
 13685 ;; Auto vars:     Size  Location     Type
 13686 ;;		None
 13687 ;; Return value:  Size  Location     Type
 13688 ;;                  1  [STACK] void 
 13689 ;; Registers used:
 13690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 13691 ;; Tracked objects:
 13692 ;;		On entry : 3F/1
 13693 ;;		On exit  : 0/0
 13694 ;;		Unchanged: 0/0
 13695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13700 ;;Total ram usage:        0 bytes
 13701 ;; Hardware stack levels used:    1
 13702 ;; Hardware stack levels required when called:   16
 13703 ;; This function calls:
 13704 ;;		_memset
 13705 ;; This function is called by:
 13706 ;;		_eaDogM_WriteString
 13707 ;;		_send_lcd_data_dma
 13708 ;; This function uses a reentrant model
 13709 ;;
 13710                           
 13711                           	psect	text56
 13712  01B5BC                     __ptext56:
 13713                           	opt callstack 0
 13714  01B5BC                     _ringBufS_flush:
 13715                           	opt callstack 11
 13716                           
 13717                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 13718                           ;stkvar	__this @ sp[(0)+-2]
 13719                           
 13720                           ; BSR set to: 59
 13721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13722                           ;incstack = 0
 13723  01B5BC  0EFE               	movlw	-2
 13724  01B5BE  006F FF8C  F00B    	movff	plusw1,btemp+10
 13725  01B5C4  0EFF               	movlw	-1
 13726  01B5C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 13727  01B5CC  0E42               	movlw	66
 13728  01B5CE  240B               	addwf	(btemp+10)^0,w,c
 13729  01B5D0  6ED9               	movwf	fsr2l,c
 13730  01B5D2  0E00               	movlw	0
 13731  01B5D4  200C               	addwfc	(btemp+11)^0,w,c
 13732  01B5D6  6EDA               	movwf	fsr2h,c
 13733  01B5D8  0E00               	movlw	0
 13734  01B5DA  6EDF               	movwf	indf2,c
 13735                           
 13736                           ;ringbufs.c: 79:  _this->head = 0;
 13737                           ;stkvar	__this @ sp[(0)+-2]
 13738  01B5DC  0EFE               	movlw	-2
 13739  01B5DE  006F FF8C  F00B    	movff	plusw1,btemp+10
 13740  01B5E4  0EFF               	movlw	-1
 13741  01B5E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 13742  01B5EC  0E40               	movlw	64
 13743  01B5EE  240B               	addwf	(btemp+10)^0,w,c
 13744  01B5F0  6ED9               	movwf	fsr2l,c
 13745  01B5F2  0E00               	movlw	0
 13746  01B5F4  200C               	addwfc	(btemp+11)^0,w,c
 13747  01B5F6  6EDA               	movwf	fsr2h,c
 13748  01B5F8  0E00               	movlw	0
 13749  01B5FA  6EDF               	movwf	indf2,c
 13750                           
 13751                           ;ringbufs.c: 80:  _this->tail = 0;
 13752                           ;stkvar	__this @ sp[(0)+-2]
 13753  01B5FC  0EFE               	movlw	-2
 13754  01B5FE  006F FF8C  F00B    	movff	plusw1,btemp+10
 13755  01B604  0EFF               	movlw	-1
 13756  01B606  006F FF8C  F00C    	movff	plusw1,btemp+11
 13757  01B60C  0E41               	movlw	65
 13758  01B60E  240B               	addwf	(btemp+10)^0,w,c
 13759  01B610  6ED9               	movwf	fsr2l,c
 13760  01B612  0E00               	movlw	0
 13761  01B614  200C               	addwfc	(btemp+11)^0,w,c
 13762  01B616  6EDA               	movwf	fsr2h,c
 13763  01B618  0E00               	movlw	0
 13764  01B61A  6EDF               	movwf	indf2,c
 13765                           
 13766                           ;ringbufs.c: 81:  if (clearBuffer) {
 13767                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 13768  01B61C  0EFD               	movlw	-3
 13769  01B61E  50E3               	movf	plusw1,w,c
 13770  01B620  B4D8               	btfsc	status,2,c
 13771  01B622  D011               	goto	l1624
 13772                           
 13773                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 13774  01B624  0E40               	movlw	64
 13775  01B626  6EE6               	movwf	postinc1,c
 13776  01B628  0E00               	movlw	0
 13777  01B62A  6EE6               	movwf	postinc1,c
 13778  01B62C  0E00               	movlw	0
 13779  01B62E  6EE6               	movwf	postinc1,c
 13780  01B630  0E00               	movlw	0
 13781  01B632  6EE6               	movwf	postinc1,c
 13782                           
 13783                           ;stkvar	__this @ sp[(-4)+-2]
 13784  01B634  0EFA               	movlw	-6
 13785  01B636  006F FF8F FFE6     	movff	plusw1,postinc1
 13786  01B63C  006F FF8F FFE6     	movff	plusw1,postinc1
 13787  01B642  EC07  F0BA         	call	_memset	;wreg free
 13788  01B646                     l1624:
 13789                           
 13790                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 13791  01B646  52E5               	movf	postdec1,f,c
 13792  01B648  52E5               	movf	postdec1,f,c
 13793  01B64A  52E5               	movf	postdec1,f,c
 13794  01B64C  0012               	return		;funcret
 13795  01B64E                     __end_of_ringBufS_flush:
 13796                           	opt callstack 0
 13797                           
 13798 ;; *************** function _memset *****************
 13799 ;; Defined at:
 13800 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 13801 ;; Parameters:    Size  Location     Type
 13802 ;;  dest            2  [STACK] PTR void 
 13803 ;;		 -> ring_buf2(67), ring_buf1(67), 
 13804 ;;  c               2  [STACK] int 
 13805 ;;  n               2  [STACK] unsigned int 
 13806 ;; Auto vars:     Size  Location     Type
 13807 ;;  s               2  [STACK] PTR unsigned char 
 13808 ;;		 -> ring_buf2(67), ring_buf1(67), 
 13809 ;;  k               2  [STACK] unsigned int 
 13810 ;; Return value:  Size  Location     Type
 13811 ;;                  2  [STACK] PTR void 
 13812 ;; Registers used:
 13813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 13814 ;; Tracked objects:
 13815 ;;		On entry : 0/1
 13816 ;;		On exit  : 0/0
 13817 ;;		Unchanged: 0/0
 13818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13823 ;;Total ram usage:        0 bytes
 13824 ;; Hardware stack levels used:    1
 13825 ;; Hardware stack levels required when called:   15
 13826 ;; This function calls:
 13827 ;;		Nothing
 13828 ;; This function is called by:
 13829 ;;		_ringBufS_init
 13830 ;;		_ringBufS_flush
 13831 ;; This function uses a reentrant model
 13832 ;;
 13833                           
 13834                           	psect	text57
 13835  01740E                     __ptext57:
 13836                           	opt callstack 0
 13837  01740E                     _memset:
 13838                           	opt callstack 0
 13839                           
 13840                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13841  01740E  52E6               	movf	postinc1,f,c
 13842  017410  52E6               	movf	postinc1,f,c
 13843  017412  52E6               	movf	postinc1,f,c
 13844  017414  52E6               	movf	postinc1,f,c
 13845                           
 13846                           ;stkvar	_dest @ sp[(-4)+-2]
 13847                           
 13848                           ;incstack = 0
 13849  017416  0EFA               	movlw	-6
 13850  017418  006F FF8C  F00B    	movff	plusw1,btemp+10
 13851  01741E  0EFB               	movlw	-5
 13852  017420  006F FF8C  F00C    	movff	plusw1,btemp+11
 13853                           
 13854                           ;stkvar	_s @ sp[(-4)+0]
 13855  017426  0EFD               	movlw	-3
 13856  017428  0060  F033  FFE3   	movff	btemp+11,plusw1
 13857  01742E  0EFC               	movlw	-4
 13858  017430  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13859                           
 13860                           ;stkvar	_n @ sp[(-4)+-6]
 13861  017436  0EF6               	movlw	-10
 13862  017438  006F FF8C  F001    	movff	plusw1,btemp
 13863  01743E  0EF7               	movlw	-9
 13864  017440  50E3               	movf	plusw1,w,c
 13865  017442  1001               	iorwf	btemp^0,w,c
 13866  017444  B4D8               	btfsc	status,2,c
 13867  017446  D154               	goto	u11490
 13868                           
 13869                           ;stkvar	_c @ sp[(-4)+-4]
 13870                           ;stkvar	_s @ sp[(-4)+0]
 13871  017448  0EFC               	movlw	-4
 13872  01744A  006F FF8F FFD9     	movff	plusw1,fsr2l
 13873  017450  0EFD               	movlw	-3
 13874  017452  006F FF8F FFDA     	movff	plusw1,fsr2h
 13875  017458  0EF8               	movlw	-8
 13876  01745A  006F FF8F FFDF     	movff	plusw1,indf2
 13877                           
 13878                           ;stkvar	_c @ sp[(-4)+-4]
 13879                           ;stkvar	_n @ sp[(-4)+-6]
 13880                           ;stkvar	_s @ sp[(-4)+0]
 13881  017460  0EFC               	movlw	-4
 13882  017462  006F FF8C  F00B    	movff	plusw1,btemp+10
 13883  017468  0EFD               	movlw	-3
 13884  01746A  006F FF8C  F00C    	movff	plusw1,btemp+11
 13885  017470  0EF6               	movlw	-10
 13886  017472  50E3               	movf	plusw1,w,c
 13887  017474  260B               	addwf	(btemp+10)^0,f,c
 13888  017476  0EF7               	movlw	-9
 13889  017478  50E3               	movf	plusw1,w,c
 13890  01747A  220C               	addwfc	(btemp+11)^0,f,c
 13891  01747C  0EFF               	movlw	255
 13892  01747E  240B               	addwf	(btemp+10)^0,w,c
 13893  017480  6ED9               	movwf	fsr2l,c
 13894  017482  0EFF               	movlw	255
 13895  017484  200C               	addwfc	(btemp+11)^0,w,c
 13896  017486  6EDA               	movwf	fsr2h,c
 13897  017488  0EF8               	movlw	-8
 13898  01748A  006F FF8F FFDF     	movff	plusw1,indf2
 13899                           
 13900                           ;stkvar	_n @ sp[(-4)+-6]
 13901  017490  0EF7               	movlw	-9
 13902  017492  50E3               	movf	plusw1,w,c
 13903  017494  E108               	bnz	l12660
 13904  017496  0EF6               	movlw	-10
 13905  017498  006F FF8C  F001    	movff	plusw1,btemp
 13906  01749E  0E03               	movlw	3
 13907  0174A0  5E01               	subwf	btemp^0,f,c
 13908  0174A2  A0D8               	btfss	status,0,c
 13909  0174A4  D125               	goto	u11490
 13910  0174A6                     l12660:
 13911                           
 13912                           ;stkvar	_c @ sp[(-4)+-4]
 13913                           ;stkvar	_s @ sp[(-4)+0]
 13914  0174A6  0EFC               	movlw	-4
 13915  0174A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 13916  0174AE  0EFD               	movlw	-3
 13917  0174B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 13918  0174B6  0E01               	movlw	1
 13919  0174B8  240B               	addwf	(btemp+10)^0,w,c
 13920  0174BA  6ED9               	movwf	fsr2l,c
 13921  0174BC  0E00               	movlw	0
 13922  0174BE  200C               	addwfc	(btemp+11)^0,w,c
 13923  0174C0  6EDA               	movwf	fsr2h,c
 13924  0174C2  0EF8               	movlw	-8
 13925  0174C4  006F FF8F FFDF     	movff	plusw1,indf2
 13926                           
 13927                           ;stkvar	_c @ sp[(-4)+-4]
 13928                           ;stkvar	_s @ sp[(-4)+0]
 13929  0174CA  0EFC               	movlw	-4
 13930  0174CC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13931  0174D2  0EFD               	movlw	-3
 13932  0174D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13933  0174DA  0E02               	movlw	2
 13934  0174DC  240B               	addwf	(btemp+10)^0,w,c
 13935  0174DE  6ED9               	movwf	fsr2l,c
 13936  0174E0  0E00               	movlw	0
 13937  0174E2  200C               	addwfc	(btemp+11)^0,w,c
 13938  0174E4  6EDA               	movwf	fsr2h,c
 13939  0174E6  0EF8               	movlw	-8
 13940  0174E8  006F FF8F FFDF     	movff	plusw1,indf2
 13941                           
 13942                           ;stkvar	_c @ sp[(-4)+-4]
 13943                           ;stkvar	_n @ sp[(-4)+-6]
 13944                           ;stkvar	_s @ sp[(-4)+0]
 13945  0174EE  0EFC               	movlw	-4
 13946  0174F0  006F FF8C  F00B    	movff	plusw1,btemp+10
 13947  0174F6  0EFD               	movlw	-3
 13948  0174F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 13949  0174FE  0EF6               	movlw	-10
 13950  017500  50E3               	movf	plusw1,w,c
 13951  017502  260B               	addwf	(btemp+10)^0,f,c
 13952  017504  0EF7               	movlw	-9
 13953  017506  50E3               	movf	plusw1,w,c
 13954  017508  220C               	addwfc	(btemp+11)^0,f,c
 13955  01750A  0EFE               	movlw	254
 13956  01750C  240B               	addwf	(btemp+10)^0,w,c
 13957  01750E  6ED9               	movwf	fsr2l,c
 13958  017510  0EFF               	movlw	255
 13959  017512  200C               	addwfc	(btemp+11)^0,w,c
 13960  017514  6EDA               	movwf	fsr2h,c
 13961  017516  0EF8               	movlw	-8
 13962  017518  006F FF8F FFDF     	movff	plusw1,indf2
 13963                           
 13964                           ;stkvar	_c @ sp[(-4)+-4]
 13965                           ;stkvar	_n @ sp[(-4)+-6]
 13966                           ;stkvar	_s @ sp[(-4)+0]
 13967  01751E  0EFC               	movlw	-4
 13968  017520  006F FF8C  F00B    	movff	plusw1,btemp+10
 13969  017526  0EFD               	movlw	-3
 13970  017528  006F FF8C  F00C    	movff	plusw1,btemp+11
 13971  01752E  0EF6               	movlw	-10
 13972  017530  50E3               	movf	plusw1,w,c
 13973  017532  260B               	addwf	(btemp+10)^0,f,c
 13974  017534  0EF7               	movlw	-9
 13975  017536  50E3               	movf	plusw1,w,c
 13976  017538  220C               	addwfc	(btemp+11)^0,f,c
 13977  01753A  0EFD               	movlw	253
 13978  01753C  240B               	addwf	(btemp+10)^0,w,c
 13979  01753E  6ED9               	movwf	fsr2l,c
 13980  017540  0EFF               	movlw	255
 13981  017542  200C               	addwfc	(btemp+11)^0,w,c
 13982  017544  6EDA               	movwf	fsr2h,c
 13983  017546  0EF8               	movlw	-8
 13984  017548  006F FF8F FFDF     	movff	plusw1,indf2
 13985                           
 13986                           ;stkvar	_n @ sp[(-4)+-6]
 13987  01754E  0EF7               	movlw	-9
 13988  017550  50E3               	movf	plusw1,w,c
 13989  017552  E108               	bnz	l12666
 13990  017554  0EF6               	movlw	-10
 13991  017556  006F FF8C  F001    	movff	plusw1,btemp
 13992  01755C  0E07               	movlw	7
 13993  01755E  5E01               	subwf	btemp^0,f,c
 13994  017560  A0D8               	btfss	status,0,c
 13995  017562  D0C6               	goto	u11490
 13996  017564                     l12666:
 13997                           
 13998                           ;stkvar	_c @ sp[(-4)+-4]
 13999                           ;stkvar	_s @ sp[(-4)+0]
 14000  017564  0EFC               	movlw	-4
 14001  017566  006F FF8C  F00B    	movff	plusw1,btemp+10
 14002  01756C  0EFD               	movlw	-3
 14003  01756E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14004  017574  0E03               	movlw	3
 14005  017576  240B               	addwf	(btemp+10)^0,w,c
 14006  017578  6ED9               	movwf	fsr2l,c
 14007  01757A  0E00               	movlw	0
 14008  01757C  200C               	addwfc	(btemp+11)^0,w,c
 14009  01757E  6EDA               	movwf	fsr2h,c
 14010  017580  0EF8               	movlw	-8
 14011  017582  006F FF8F FFDF     	movff	plusw1,indf2
 14012                           
 14013                           ;stkvar	_c @ sp[(-4)+-4]
 14014                           ;stkvar	_n @ sp[(-4)+-6]
 14015                           ;stkvar	_s @ sp[(-4)+0]
 14016  017588  0EFC               	movlw	-4
 14017  01758A  006F FF8C  F00B    	movff	plusw1,btemp+10
 14018  017590  0EFD               	movlw	-3
 14019  017592  006F FF8C  F00C    	movff	plusw1,btemp+11
 14020  017598  0EF6               	movlw	-10
 14021  01759A  50E3               	movf	plusw1,w,c
 14022  01759C  260B               	addwf	(btemp+10)^0,f,c
 14023  01759E  0EF7               	movlw	-9
 14024  0175A0  50E3               	movf	plusw1,w,c
 14025  0175A2  220C               	addwfc	(btemp+11)^0,f,c
 14026  0175A4  0EFC               	movlw	252
 14027  0175A6  240B               	addwf	(btemp+10)^0,w,c
 14028  0175A8  6ED9               	movwf	fsr2l,c
 14029  0175AA  0EFF               	movlw	255
 14030  0175AC  200C               	addwfc	(btemp+11)^0,w,c
 14031  0175AE  6EDA               	movwf	fsr2h,c
 14032  0175B0  0EF8               	movlw	-8
 14033  0175B2  006F FF8F FFDF     	movff	plusw1,indf2
 14034                           
 14035                           ;stkvar	_n @ sp[(-4)+-6]
 14036  0175B8  0EF7               	movlw	-9
 14037  0175BA  50E3               	movf	plusw1,w,c
 14038  0175BC  E108               	bnz	l12672
 14039  0175BE  0EF6               	movlw	-10
 14040  0175C0  006F FF8C  F001    	movff	plusw1,btemp
 14041  0175C6  0E09               	movlw	9
 14042  0175C8  5E01               	subwf	btemp^0,f,c
 14043  0175CA  A0D8               	btfss	status,0,c
 14044  0175CC  D091               	goto	u11490
 14045  0175CE                     l12672:
 14046                           
 14047                           ;stkvar	_s @ sp[(-4)+0]
 14048  0175CE  0EFC               	movlw	-4
 14049  0175D0  006F FF8C  F00B    	movff	plusw1,btemp+10
 14050  0175D6  1E0B               	comf	(btemp+10)^0,f,c
 14051  0175D8  0EFD               	movlw	-3
 14052  0175DA  006F FF8C  F00C    	movff	plusw1,btemp+11
 14053  0175E0  1E0C               	comf	(btemp+11)^0,f,c
 14054  0175E2  2A0B               	incf	(btemp+10)^0,f,c
 14055  0175E4  B4D8               	btfsc	status,2,c
 14056  0175E6  2A0C               	incf	(btemp+11)^0,f,c
 14057  0175E8  0E03               	movlw	3
 14058  0175EA  160B               	andwf	(btemp+10)^0,f,c
 14059  0175EC  0E00               	movlw	0
 14060  0175EE  160C               	andwf	(btemp+11)^0,f,c
 14061                           
 14062                           ;stkvar	_k @ sp[(-4)+2]
 14063  0175F0  0EFE               	movlw	-2
 14064  0175F2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14065  0175F8  0EFF               	movlw	-1
 14066  0175FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 14067                           
 14068                           ;stkvar	_k @ sp[(-4)+2]
 14069                           ;stkvar	_s @ sp[(-4)+0]
 14070  017600  0EFC               	movlw	-4
 14071  017602  50E3               	movf	plusw1,w,c
 14072  017604  6E01               	movwf	btemp^0,c
 14073  017606  0EFE               	movlw	-2
 14074  017608  50E3               	movf	plusw1,w,c
 14075  01760A  2601               	addwf	btemp^0,f,c
 14076  01760C  0EFC               	movlw	-4
 14077  01760E  0060  F007  FFE3   	movff	btemp,plusw1
 14078  017614  0EFD               	movlw	-3
 14079  017616  50E3               	movf	plusw1,w,c
 14080  017618  6E01               	movwf	btemp^0,c
 14081  01761A  0EFF               	movlw	-1
 14082  01761C  50E3               	movf	plusw1,w,c
 14083  01761E  2201               	addwfc	btemp^0,f,c
 14084  017620  0EFD               	movlw	-3
 14085  017622  0060  F007  FFE3   	movff	btemp,plusw1
 14086                           
 14087                           ;stkvar	_k @ sp[(-4)+2]
 14088                           ;stkvar	_n @ sp[(-4)+-6]
 14089  017628  0EF6               	movlw	-10
 14090  01762A  50E3               	movf	plusw1,w,c
 14091  01762C  6E01               	movwf	btemp^0,c
 14092  01762E  0EFE               	movlw	-2
 14093  017630  50E3               	movf	plusw1,w,c
 14094  017632  5E01               	subwf	btemp^0,f,c
 14095  017634  0EF6               	movlw	-10
 14096  017636  0060  F007  FFE3   	movff	btemp,plusw1
 14097  01763C  0EF7               	movlw	-9
 14098  01763E  50E3               	movf	plusw1,w,c
 14099  017640  6E01               	movwf	btemp^0,c
 14100  017642  0EFF               	movlw	-1
 14101  017644  50E3               	movf	plusw1,w,c
 14102  017646  5A01               	subwfb	btemp^0,f,c
 14103  017648  0EF7               	movlw	-9
 14104  01764A  0060  F007  FFE3   	movff	btemp,plusw1
 14105  017650  0EFC               	movlw	252
 14106  017652  6E0B               	movwf	(btemp+10)^0,c
 14107  017654  0EFF               	movlw	255
 14108  017656  6E0C               	movwf	(btemp+11)^0,c
 14109                           
 14110                           ;stkvar	_n @ sp[(-4)+-6]
 14111  017658  0EF6               	movlw	-10
 14112  01765A  006F FF8C  F001    	movff	plusw1,btemp
 14113  017660  500B               	movf	(btemp+10)^0,w,c
 14114  017662  1601               	andwf	btemp^0,f,c
 14115  017664  0EF6               	movlw	-10
 14116  017666  0060  F007  FFE3   	movff	btemp,plusw1
 14117  01766C  0EF7               	movlw	-9
 14118  01766E  006F FF8C  F001    	movff	plusw1,btemp
 14119  017674  500C               	movf	(btemp+11)^0,w,c
 14120  017676  1601               	andwf	btemp^0,f,c
 14121  017678  0EF7               	movlw	-9
 14122  01767A  D02E               	goto	L13
 14123  01767C                     l12680:
 14124                           
 14125                           ;stkvar	_c @ sp[(-4)+-4]
 14126                           ;stkvar	_s @ sp[(-4)+0]
 14127  01767C  0EFC               	movlw	-4
 14128  01767E  006F FF8F FFD9     	movff	plusw1,fsr2l
 14129  017684  0EFD               	movlw	-3
 14130  017686  006F FF8F FFDA     	movff	plusw1,fsr2h
 14131  01768C  0EF8               	movlw	-8
 14132  01768E  006F FF8F FFDF     	movff	plusw1,indf2
 14133                           
 14134                           ;stkvar	_n @ sp[(-4)+-6]
 14135  017694  0EF6               	movlw	-10
 14136  017696  006F FF8C  F001    	movff	plusw1,btemp
 14137  01769C  0E01               	movlw	1
 14138  01769E  5E01               	subwf	btemp^0,f,c
 14139  0176A0  0EF6               	movlw	-10
 14140  0176A2  0060  F007  FFE3   	movff	btemp,plusw1
 14141  0176A8  0EF7               	movlw	-9
 14142  0176AA  006F FF8C  F001    	movff	plusw1,btemp
 14143  0176B0  0E00               	movlw	0
 14144  0176B2  5A01               	subwfb	btemp^0,f,c
 14145  0176B4  0EF7               	movlw	-9
 14146  0176B6  0060  F007  FFE3   	movff	btemp,plusw1
 14147                           
 14148                           ;stkvar	_s @ sp[(-4)+0]
 14149  0176BC  0EFC               	movlw	-4
 14150  0176BE  50E3               	movf	plusw1,w,c
 14151  0176C0  0F01               	addlw	1
 14152  0176C2  6E01               	movwf	btemp^0,c
 14153  0176C4  0EFC               	movlw	-4
 14154  0176C6  0060  F007  FFE3   	movff	btemp,plusw1
 14155  0176CC  6A01               	clrf	btemp^0,c
 14156  0176CE  0EFD               	movlw	-3
 14157  0176D0  50E3               	movf	plusw1,w,c
 14158  0176D2  2001               	addwfc	btemp^0,w,c
 14159  0176D4  6E01               	movwf	btemp^0,c
 14160  0176D6  0EFD               	movlw	-3
 14161  0176D8                     L13:
 14162  0176D8  0060  F007  FFE3   	movff	btemp,plusw1
 14163                           
 14164                           ;stkvar	_n @ sp[(-4)+-6]
 14165  0176DE  0EF6               	movlw	-10
 14166  0176E0  006F FF8C  F001    	movff	plusw1,btemp
 14167  0176E6  0EF7               	movlw	-9
 14168  0176E8  50E3               	movf	plusw1,w,c
 14169  0176EA  1001               	iorwf	btemp^0,w,c
 14170  0176EC  A4D8               	btfss	status,2,c
 14171  0176EE  D7C6               	goto	l12680
 14172  0176F0                     u11490:
 14173                           
 14174                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 14175  0176F0  0EF6               	movlw	246
 14176  0176F2  26E1               	addwf	fsr1l,f,c
 14177  0176F4  0EFF               	movlw	255
 14178  0176F6  22E2               	addwfc	fsr1h,f,c
 14179  0176F8  0012               	return		;funcret
 14180  0176FA                     __end_of_memset:
 14181                           	opt callstack 0
 14182                           
 14183 ;; *************** function _printf *****************
 14184 ;; Defined at:
 14185 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 14186 ;; Parameters:    Size  Location     Type
 14187 ;;  fmt             2  [STACK] PTR const unsigned char 
 14188 ;;		 -> STR_61(3), STR_60(3), 
 14189 ;; Auto vars:     Size  Location     Type
 14190 ;;  ap              2  [STACK] PTR void [1]
 14191 ;;		 -> ?_printf(2), ?_sprintf(2), 
 14192 ;;  ret             2    0        int 
 14193 ;; Return value:  Size  Location     Type
 14194 ;;                  2  [STACK] int 
 14195 ;; Registers used:
 14196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14197 ;; Tracked objects:
 14198 ;;		On entry : 3F/3B
 14199 ;;		On exit  : 3F/0
 14200 ;;		Unchanged: 0/0
 14201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14206 ;;Total ram usage:        0 bytes
 14207 ;; Hardware stack levels used:    1
 14208 ;; Hardware stack levels required when called:   23
 14209 ;; This function calls:
 14210 ;;		_vfprintf
 14211 ;; This function is called by:
 14212 ;;		_eaDogM_WriteString
 14213 ;;		_send_lcd_data_dma
 14214 ;; This function uses a reentrant model
 14215 ;;
 14216                           
 14217                           	psect	text58
 14218  01BE36                     __ptext58:
 14219                           	opt callstack 0
 14220  01BE36                     _printf:
 14221                           	opt callstack 0
 14222                           
 14223                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14224  01BE36  52E6               	movf	postinc1,f,c
 14225  01BE38  52E6               	movf	postinc1,f,c
 14226                           
 14227                           ;stkvar	?_printf @ sp[(-2)+-3]
 14228                           
 14229                           ;incstack = 0
 14230  01BE3A  0EFB               	movlw	251
 14231  01BE3C  24E1               	addwf	fsr1l,w,c
 14232  01BE3E  6E0B               	movwf	(btemp+10)^0,c
 14233  01BE40  0EFF               	movlw	255
 14234  01BE42  20E2               	addwfc	fsr1h,w,c
 14235  01BE44  6E0C               	movwf	(btemp+11)^0,c
 14236                           
 14237                           ;stkvar	_ap @ sp[(-2)+0]
 14238  01BE46  0EFF               	movlw	-1
 14239  01BE48  0060  F033  FFE3   	movff	btemp+11,plusw1
 14240  01BE4E  0EFE               	movlw	-2
 14241  01BE50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14242                           
 14243                           ;stkvar	_ap @ sp[(-2)+0]
 14244  01BE56  0EFE               	movlw	254
 14245  01BE58  24E1               	addwf	fsr1l,w,c
 14246  01BE5A  6E01               	movwf	btemp^0,c
 14247  01BE5C  0EFF               	movlw	255
 14248  01BE5E  20E2               	addwfc	fsr1h,w,c
 14249  01BE60  6E02               	movwf	(btemp+1)^0,c
 14250  01BE62  0060  F007  FFE6   	movff	btemp,postinc1
 14251  01BE68  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14252                           
 14253                           ;stkvar	_fmt @ sp[(-4)+-3]
 14254  01BE6E  0EF9               	movlw	-7
 14255  01BE70  006F FF8F FFE6     	movff	plusw1,postinc1
 14256  01BE76  006F FF8F FFE6     	movff	plusw1,postinc1
 14257  01BE7C  0E00               	movlw	0
 14258  01BE7E  6EE6               	movwf	postinc1,c
 14259  01BE80  0E00               	movlw	0
 14260  01BE82  6EE6               	movwf	postinc1,c
 14261  01BE84  ECEF  F0D8         	call	_vfprintf	;wreg free
 14262                           
 14263                           ; BSR set to: 0
 14264                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 14265  01BE88  52E5               	movf	postdec1,f,c
 14266  01BE8A  52E5               	movf	postdec1,f,c
 14267  01BE8C  52E5               	movf	postdec1,f,c
 14268  01BE8E  50E7               	movf	indf1,w,c
 14269  01BE90  5EE1               	subwf	fsr1l,f,c
 14270  01BE92  0E00               	movlw	0
 14271  01BE94  5AE2               	subwfb	fsr1h,f,c
 14272  01BE96  0012               	return		;funcret
 14273  01BE98                     __end_of_printf:
 14274                           	opt callstack 0
 14275                           
 14276 ;; *************** function _vfprintf *****************
 14277 ;; Defined at:
 14278 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14279 ;; Parameters:    Size  Location     Type
 14280 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14281 ;;		 -> f(6), NULL(0), 
 14282 ;;  fmt             2  [STACK] PTR const unsigned char 
 14283 ;;		 -> STR_81(127), STR_79(3), STR_78(3), STR_77(19), 
 14284 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 14285 ;;		 -> STR_72(19), STR_71(24), STR_70(15), STR_69(15), 
 14286 ;;		 -> STR_68(15), STR_67(10), STR_66(10), STR_65(19), 
 14287 ;;		 -> STR_64(19), STR_61(3), STR_60(3), STR_59(21), 
 14288 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 14289 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 14290 ;;		 -> STR_50(20), STR_49(20), STR_48(21), STR_47(21), 
 14291 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 14292 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 14293 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 14294 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 14295 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 14296 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 14297 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 14298 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 14299 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 14300 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 14301 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 14302 ;;		 -> STR_1(21), 
 14303 ;;  ap              2  [STACK] PTR PTR void 
 14304 ;;		 -> ap(2), ap(2), 
 14305 ;; Auto vars:     Size  Location     Type
 14306 ;;  cfmt            2  [STACK] PTR unsigned char 
 14307 ;;		 -> STR_81(127), STR_79(3), STR_78(3), STR_77(19), 
 14308 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 14309 ;;		 -> STR_72(19), STR_71(24), STR_70(15), STR_69(15), 
 14310 ;;		 -> STR_68(15), STR_67(10), STR_66(10), STR_65(19), 
 14311 ;;		 -> STR_64(19), STR_61(3), STR_60(3), STR_59(21), 
 14312 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 14313 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 14314 ;;		 -> STR_50(20), STR_49(20), STR_48(21), STR_47(21), 
 14315 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 14316 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 14317 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 14318 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 14319 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 14320 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 14321 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 14322 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 14323 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 14324 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 14325 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 14326 ;;		 -> STR_1(21), 
 14327 ;; Return value:  Size  Location     Type
 14328 ;;                  2  [STACK] int 
 14329 ;; Registers used:
 14330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14331 ;; Tracked objects:
 14332 ;;		On entry : 0/2
 14333 ;;		On exit  : 3F/0
 14334 ;;		Unchanged: 0/0
 14335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14340 ;;Total ram usage:        0 bytes
 14341 ;; Hardware stack levels used:    1
 14342 ;; Hardware stack levels required when called:   22
 14343 ;; This function calls:
 14344 ;;		_vfpfcnvrt
 14345 ;; This function is called by:
 14346 ;;		_sprintf
 14347 ;;		_printf
 14348 ;; This function uses a reentrant model
 14349 ;;
 14350                           
 14351                           	psect	text59
 14352  01B1DE                     __ptext59:
 14353                           	opt callstack 0
 14354  01B1DE                     _vfprintf:
 14355                           	opt callstack 0
 14356                           
 14357                           ; BSR set to: 0
 14358                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14359  01B1DE  52E6               	movf	postinc1,f,c
 14360  01B1E0  52E6               	movf	postinc1,f,c
 14361                           
 14362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 14363                           ;stkvar	_fmt @ sp[(-2)+-4]
 14364                           
 14365                           ;incstack = 0
 14366 ;; hardware stack exceeded
 14367  01B1E2  0EFA               	movlw	-6
 14368  01B1E4  006F FF8C  F00B    	movff	plusw1,btemp+10
 14369  01B1EA  0EFB               	movlw	-5
 14370  01B1EC  006F FF8C  F00C    	movff	plusw1,btemp+11
 14371                           
 14372                           ;stkvar	_cfmt @ sp[(-2)+0]
 14373  01B1F2  0EFF               	movlw	-1
 14374  01B1F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 14375  01B1FA  0EFE               	movlw	-2
 14376  01B1FC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14377                           
 14378                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 14379  01B202  0100               	movlb	0	; () banked
 14380  01B204  6B96               	clrf	_nout& (0+255),b
 14381  01B206  6B97               	clrf	(_nout+1)& (0+255),b
 14382                           
 14383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 14384  01B208  D021               	goto	l13530
 14385  01B20A                     l13528:
 14386                           
 14387                           ; BSR set to: 0
 14388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 14389                           ;stkvar	_ap @ sp[(-2)+-6]
 14390  01B20A  0EF8               	movlw	-8
 14391  01B20C  006F FF8F FFE6     	movff	plusw1,postinc1
 14392  01B212  006F FF8F FFE6     	movff	plusw1,postinc1
 14393                           
 14394                           ;stkvar	_cfmt @ sp[(-4)+0]
 14395  01B218  0EFC               	movlw	252
 14396  01B21A  24E1               	addwf	fsr1l,w,c
 14397  01B21C  6E01               	movwf	btemp^0,c
 14398  01B21E  0EFF               	movlw	255
 14399  01B220  20E2               	addwfc	fsr1h,w,c
 14400  01B222  6E02               	movwf	(btemp+1)^0,c
 14401  01B224  0060  F007  FFE6   	movff	btemp,postinc1
 14402  01B22A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 14403                           
 14404                           ;stkvar	_fp @ sp[(-6)+-2]
 14405  01B230  0EF8               	movlw	-8
 14406  01B232  006F FF8F FFE6     	movff	plusw1,postinc1
 14407  01B238  006F FF8F FFE6     	movff	plusw1,postinc1
 14408  01B23E  EC61  F092         	call	_vfpfcnvrt	;wreg free
 14409  01B242  5001               	movf	btemp^0,w,c
 14410  01B244  0100               	movlb	0	; () banked
 14411  01B246  2796               	addwf	_nout& (0+255),f,b
 14412  01B248  5002               	movf	(btemp+1)^0,w,c
 14413  01B24A  2397               	addwfc	(_nout+1)& (0+255),f,b
 14414  01B24C                     l13530:
 14415                           
 14416                           ; BSR set to: 0
 14417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 14418                           ;stkvar	_cfmt @ sp[(-2)+0]
 14419  01B24C  50E1               	movf	fsr1l,w,c
 14420  01B24E  0FFE               	addlw	-2
 14421  01B250  6ED9               	movwf	fsr2l,c
 14422  01B252  50E2               	movf	fsr1h,w,c
 14423  01B254  6EDA               	movwf	fsr2h,c
 14424  01B256  0EFF               	movlw	255
 14425  01B258  22DA               	addwfc	fsr2h,f,c
 14426  01B25A  006F FF7B FFF6     	movff	postinc2,tblptrl
 14427  01B260  006F FF77 FFF7     	movff	postdec2,tblptrh
 14428  01B266                     	if	0	;tblptru may be non-zero
 14429  01B266                     	endif
 14430  01B266                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14431  01B266  0E00               	movlw	low (__mediumconst shr (0+16))
 14432  01B268  6EF8               	movwf	tblptru,c
 14433  01B26A                     	endif
 14434  01B26A  0008               	tblrd		*
 14435  01B26C  50F5               	movf	tablat,w,c
 14436  01B26E  0900               	iorlw	0
 14437  01B270  A4D8               	btfss	status,2,c
 14438  01B272  D7CB               	goto	l13528
 14439                           
 14440                           ; BSR set to: 0
 14441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 14442  01B274  0060  F258  F001   	movff	_nout,btemp
 14443  01B27A  0060  F25C  F002   	movff	_nout+1,btemp+1
 14444                           
 14445                           ; BSR set to: 0
 14446                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 14447  01B280  0EF8               	movlw	248
 14448  01B282  26E1               	addwf	fsr1l,f,c
 14449  01B284  0EFF               	movlw	255
 14450  01B286  22E2               	addwfc	fsr1h,f,c
 14451  01B288  0012               	return		;funcret
 14452  01B28A                     __end_of_vfprintf:
 14453                           	opt callstack 0
 14454                           
 14455 ;; *************** function _vfpfcnvrt *****************
 14456 ;; Defined at:
 14457 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14458 ;; Parameters:    Size  Location     Type
 14459 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14460 ;;		 -> f(6), NULL(0), 
 14461 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 14462 ;;		 -> cfmt(2), 
 14463 ;;  ap              2  [STACK] PTR PTR void 
 14464 ;;		 -> ap(2), ap(2), 
 14465 ;; Auto vars:     Size  Location     Type
 14466 ;;  llu             8  [STACK] unsigned long long 
 14467 ;;  ll              8  [STACK] long long 
 14468 ;;  f               4  [STACK] long long 
 14469 ;;  ct              3  [STACK] unsigned char [3]
 14470 ;;  vp              3    0        PTR void 
 14471 ;;  cp              2  [STACK] PTR unsigned char 
 14472 ;;		 -> ?_printf(2), ?_sprintf(2), STR_63(9), STR_62(12), 
 14473 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 14474 ;;		 -> V(192), 
 14475 ;;  i               2    0        int 
 14476 ;;  done            2    0        int 
 14477 ;;  c               1  [STACK] unsigned char 
 14478 ;; Return value:  Size  Location     Type
 14479 ;;                  2  [STACK] int 
 14480 ;; Registers used:
 14481 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 14482 ;; Tracked objects:
 14483 ;;		On entry : 0/0
 14484 ;;		On exit  : 0/0
 14485 ;;		Unchanged: 0/0
 14486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14491 ;;Total ram usage:        0 bytes
 14492 ;; Hardware stack levels used:    1
 14493 ;; Hardware stack levels required when called:   21
 14494 ;; This function calls:
 14495 ;;		_atoi
 14496 ;;		_ctoa
 14497 ;;		_dtoa
 14498 ;;		_efgtoa
 14499 ;;		_fputc
 14500 ;;		_isdigit
 14501 ;;		_isupper
 14502 ;;		_stoa
 14503 ;;		_strncmp
 14504 ;;		_tolower
 14505 ;;		_utoa
 14506 ;;		_xtoa
 14507 ;; This function is called by:
 14508 ;;		_vfprintf
 14509 ;; This function uses a reentrant model
 14510 ;;
 14511                           
 14512                           	psect	text60
 14513  0124C2                     __ptext60:
 14514                           	opt callstack 0
 14515  0124C2                     _vfpfcnvrt:
 14516                           	opt callstack 0
 14517                           
 14518                           ; BSR set to: 0
 14519                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14520  0124C2  0E20               	movlw	32
 14521  0124C4  26E1               	addwf	fsr1l,f,c
 14522  0124C6  0E00               	movlw	0
 14523  0124C8  22E2               	addwfc	fsr1h,f,c
 14524                           
 14525                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 14526                           ;stkvar	_fmt @ sp[(-32)+-4]
 14527                           
 14528                           ;incstack = 0
 14529 ;; hardware stack exceeded
 14530  0124CA  0EDC               	movlw	-36
 14531  0124CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 14532  0124D2  0EDD               	movlw	-35
 14533  0124D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 14534  0124DA  006F FF7B FFF6     	movff	postinc2,tblptrl
 14535  0124E0  006F FF77 FFF7     	movff	postdec2,tblptrh
 14536  0124E6                     	if	0	;tblptru may be non-zero
 14537  0124E6                     	endif
 14538  0124E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14539  0124E6  0E00               	movlw	low (__mediumconst shr (0+16))
 14540  0124E8  6EF8               	movwf	tblptru,c
 14541  0124EA                     	endif
 14542  0124EA  0008               	tblrd		*
 14543  0124EC  50F5               	movf	tablat,w,c
 14544  0124EE  0A25               	xorlw	37
 14545  0124F0  A4D8               	btfss	status,2,c
 14546  0124F2  EF08  F09A         	goto	l13490
 14547                           
 14548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 14549                           ;stkvar	_fmt @ sp[(-32)+-4]
 14550  0124F6  0EDC               	movlw	-36
 14551  0124F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14552  0124FE  0EDD               	movlw	-35
 14553  012500  006F FF8F FFDA     	movff	plusw1,fsr2h
 14554  012506  2ADE               	incf	postinc2,f,c
 14555  012508  0E00               	movlw	0
 14556  01250A  22DD               	addwfc	postdec2,f,c
 14557                           
 14558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 14559  01250C  6A3A               	clrf	_width^0,c
 14560  01250E  6A3B               	clrf	(_width+1)^0,c
 14561  012510  6A3E               	clrf	_flags^0,c
 14562  012512  6A3F               	clrf	(_flags+1)^0,c
 14563                           
 14564                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 14565  012514  683C               	setf	_prec^0,c
 14566  012516  683D               	setf	(_prec+1)^0,c
 14567                           
 14568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 14569                           ;stkvar	_fmt @ sp[(-32)+-4]
 14570  012518  0EDC               	movlw	-36
 14571  01251A  006F FF8F FFD9     	movff	plusw1,fsr2l
 14572  012520  0EDD               	movlw	-35
 14573  012522  006F FF8F FFDA     	movff	plusw1,fsr2h
 14574  012528  006F FF7B FFF6     	movff	postinc2,tblptrl
 14575  01252E  006F FF77 FFF7     	movff	postdec2,tblptrh
 14576  012534                     	if	0	;tblptru may be non-zero
 14577  012534                     	endif
 14578  012534                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14579  012534  0E00               	movlw	low (__mediumconst shr (0+16))
 14580  012536  6EF8               	movwf	tblptru,c
 14581  012538                     	endif
 14582  012538  0008               	tblrd		*
 14583  01253A  50F5               	movf	tablat,w,c
 14584  01253C  0A2A               	xorlw	42
 14585  01253E  A4D8               	btfss	status,2,c
 14586  012540  D031               	goto	l13308
 14587                           
 14588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 14589                           ;stkvar	_fmt @ sp[(-32)+-4]
 14590  012542  0EDC               	movlw	-36
 14591  012544  006F FF8F FFD9     	movff	plusw1,fsr2l
 14592  01254A  0EDD               	movlw	-35
 14593  01254C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14594  012552  2ADE               	incf	postinc2,f,c
 14595  012554  0E00               	movlw	0
 14596  012556  22DD               	addwfc	postdec2,f,c
 14597                           
 14598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 14599                           ;stkvar	_ap @ sp[(-32)+-6]
 14600  012558  0EDA               	movlw	-38
 14601  01255A  006F FF8F FFD9     	movff	plusw1,fsr2l
 14602  012560  0EDB               	movlw	-37
 14603  012562  006F FF8F FFDA     	movff	plusw1,fsr2h
 14604  012568  0E02               	movlw	2
 14605  01256A  5EDE               	subwf	postinc2,f,c
 14606  01256C  0E00               	movlw	0
 14607  01256E  5ADD               	subwfb	postdec2,f,c
 14608  012570  006F FF78  F00B    	movff	postinc2,btemp+10
 14609  012576  006F FF74  F00C    	movff	postdec2,btemp+11
 14610  01257C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14611  012582  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14612  012588  006F FF78  F03A    	movff	postinc2,_width
 14613  01258E  006F FF74  F03B    	movff	postdec2,_width+1
 14614                           
 14615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 14616  012594  AE3B               	btfss	(_width+1)^0,7,c
 14617  012596  D066               	goto	u12680
 14618                           
 14619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 14620  012598  803E               	bsf	_flags^0,0,c
 14621                           
 14622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 14623  01259A  6C3A               	negf	_width^0,c
 14624  01259C  1E3B               	comf	(_width+1)^0,f,c
 14625  01259E  B0D8               	btfsc	status,0,c
 14626  0125A0  2A3B               	incf	(_width+1)^0,f,c
 14627  0125A2  D060               	goto	u12680
 14628  0125A4                     l13308:
 14629                           
 14630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 14631                           ;stkvar	_fmt @ sp[(-32)+-4]
 14632  0125A4  0EDC               	movlw	-36
 14633  0125A6  006F FF8F FFD9     	movff	plusw1,fsr2l
 14634  0125AC  0EDD               	movlw	-35
 14635  0125AE  006F FF8F FFDA     	movff	plusw1,fsr2h
 14636  0125B4  006F FF78  F00B    	movff	postinc2,btemp+10
 14637  0125BA  006F FF74  F00C    	movff	postdec2,btemp+11
 14638  0125C0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14639  0125C6  0060  F033  FFE6   	movff	btemp+11,postinc1
 14640  0125CC  EC88  F0BF         	call	_atoi	;wreg free
 14641  0125D0  0060  F004  F03A   	movff	btemp,_width
 14642  0125D6  0060  F008  F03B   	movff	btemp+1,_width+1
 14643                           
 14644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 14645  0125DC  D00B               	goto	l13312
 14646  0125DE                     l13310:
 14647                           
 14648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 14649                           ;stkvar	_fmt @ sp[(-32)+-4]
 14650  0125DE  0EDC               	movlw	-36
 14651  0125E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 14652  0125E6  0EDD               	movlw	-35
 14653  0125E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 14654  0125EE  2ADE               	incf	postinc2,f,c
 14655  0125F0  0E00               	movlw	0
 14656  0125F2  22DD               	addwfc	postdec2,f,c
 14657  0125F4                     l13312:
 14658  0125F4  0ED0               	movlw	208
 14659  0125F6  6E0B               	movwf	(btemp+10)^0,c
 14660  0125F8  0EFF               	movlw	255
 14661  0125FA  6E0C               	movwf	(btemp+11)^0,c
 14662                           
 14663                           ;stkvar	_fmt @ sp[(-32)+-4]
 14664  0125FC  0EDC               	movlw	-36
 14665  0125FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 14666  012604  0EDD               	movlw	-35
 14667  012606  006F FF8F FFDA     	movff	plusw1,fsr2h
 14668  01260C  006F FF7B FFF6     	movff	postinc2,tblptrl
 14669  012612  006F FF77 FFF7     	movff	postdec2,tblptrh
 14670  012618                     	if	0	;tblptru may be non-zero
 14671  012618                     	endif
 14672  012618                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14673  012618  0E00               	movlw	low (__mediumconst shr (0+16))
 14674  01261A  6EF8               	movwf	tblptru,c
 14675  01261C                     	endif
 14676  01261C  0008               	tblrd		*
 14677  01261E  50F5               	movf	tablat,w,c
 14678  012620  6E09               	movwf	(btemp+8)^0,c
 14679  012622  6A0A               	clrf	(btemp+9)^0,c
 14680  012624  500B               	movf	(btemp+10)^0,w,c
 14681  012626  2609               	addwf	(btemp+8)^0,f,c
 14682  012628  500C               	movf	(btemp+11)^0,w,c
 14683  01262A  220A               	addwfc	(btemp+9)^0,f,c
 14684  01262C  500A               	movf	(btemp+9)^0,w,c
 14685  01262E  E106               	bnz	u12660
 14686  012630  0E0A               	movlw	10
 14687  012632  5C09               	subwf	(btemp+8)^0,w,c
 14688  012634  B0D8               	btfsc	status,0,c
 14689  012636  D002               	goto	u12660
 14690  012638  0E01               	movlw	1
 14691  01263A  D001               	goto	u12670
 14692  01263C                     u12660:
 14693  01263C  0E00               	movlw	0
 14694  01263E                     u12670:
 14695  01263E  6E0B               	movwf	(btemp+10)^0,c
 14696  012640  6A0C               	clrf	(btemp+11)^0,c
 14697                           
 14698                           ;stkvar	_vfpfcnvrt$6042 @ sp[(-32)+4]
 14699  012642  0EE4               	movlw	-28
 14700  012644  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14701  01264A  0EE5               	movlw	-27
 14702  01264C  0060  F033  FFE3   	movff	btemp+11,plusw1
 14703                           
 14704                           ;stkvar	_vfpfcnvrt$6042 @ sp[(-32)+4]
 14705  012652  0EE4               	movlw	-28
 14706  012654  006F FF8C  F001    	movff	plusw1,btemp
 14707  01265A  0EE5               	movlw	-27
 14708  01265C  50E3               	movf	plusw1,w,c
 14709  01265E  1001               	iorwf	btemp^0,w,c
 14710  012660  A4D8               	btfss	status,2,c
 14711  012662  D7BD               	goto	l13310
 14712  012664                     u12680:
 14713                           
 14714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 14715                           ;stkvar	_fmt @ sp[(-32)+-4]
 14716  012664  0EDC               	movlw	-36
 14717  012666  006F FF8F FFD9     	movff	plusw1,fsr2l
 14718  01266C  0EDD               	movlw	-35
 14719  01266E  006F FF8F FFDA     	movff	plusw1,fsr2h
 14720  012674  006F FF7B FFF6     	movff	postinc2,tblptrl
 14721  01267A  006F FF77 FFF7     	movff	postdec2,tblptrh
 14722  012680                     	if	0	;tblptru may be non-zero
 14723  012680                     	endif
 14724  012680                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14725  012680  0E00               	movlw	low (__mediumconst shr (0+16))
 14726  012682  6EF8               	movwf	tblptru,c
 14727  012684                     	endif
 14728  012684  0008               	tblrd		*
 14729  012686  50F5               	movf	tablat,w,c
 14730  012688  0A2E               	xorlw	46
 14731  01268A  A4D8               	btfss	status,2,c
 14732  01268C  D0AC               	goto	u12730
 14733                           
 14734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 14735  01268E  6A3C               	clrf	_prec^0,c
 14736  012690  6A3D               	clrf	(_prec+1)^0,c
 14737                           
 14738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 14739                           ;stkvar	_fmt @ sp[(-32)+-4]
 14740  012692  0EDC               	movlw	-36
 14741  012694  006F FF8F FFD9     	movff	plusw1,fsr2l
 14742  01269A  0EDD               	movlw	-35
 14743  01269C  006F FF8F FFDA     	movff	plusw1,fsr2h
 14744  0126A2  2ADE               	incf	postinc2,f,c
 14745  0126A4  0E00               	movlw	0
 14746  0126A6  22DD               	addwfc	postdec2,f,c
 14747                           
 14748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 14749                           ;stkvar	_fmt @ sp[(-32)+-4]
 14750  0126A8  0EDC               	movlw	-36
 14751  0126AA  006F FF8F FFD9     	movff	plusw1,fsr2l
 14752  0126B0  0EDD               	movlw	-35
 14753  0126B2  006F FF8F FFDA     	movff	plusw1,fsr2h
 14754  0126B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 14755  0126BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 14756  0126C4                     	if	0	;tblptru may be non-zero
 14757  0126C4                     	endif
 14758  0126C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14759  0126C4  0E00               	movlw	low (__mediumconst shr (0+16))
 14760  0126C6  6EF8               	movwf	tblptru,c
 14761  0126C8                     	endif
 14762  0126C8  0008               	tblrd		*
 14763  0126CA  50F5               	movf	tablat,w,c
 14764  0126CC  0A2A               	xorlw	42
 14765  0126CE  A4D8               	btfss	status,2,c
 14766  0126D0  D02A               	goto	l13330
 14767                           
 14768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 14769                           ;stkvar	_fmt @ sp[(-32)+-4]
 14770  0126D2  0EDC               	movlw	-36
 14771  0126D4  006F FF8F FFD9     	movff	plusw1,fsr2l
 14772  0126DA  0EDD               	movlw	-35
 14773  0126DC  006F FF8F FFDA     	movff	plusw1,fsr2h
 14774  0126E2  2ADE               	incf	postinc2,f,c
 14775  0126E4  0E00               	movlw	0
 14776  0126E6  22DD               	addwfc	postdec2,f,c
 14777                           
 14778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 14779                           ;stkvar	_ap @ sp[(-32)+-6]
 14780  0126E8  0EDA               	movlw	-38
 14781  0126EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 14782  0126F0  0EDB               	movlw	-37
 14783  0126F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 14784  0126F8  0E02               	movlw	2
 14785  0126FA  5EDE               	subwf	postinc2,f,c
 14786  0126FC  0E00               	movlw	0
 14787  0126FE  5ADD               	subwfb	postdec2,f,c
 14788  012700  006F FF78  F00B    	movff	postinc2,btemp+10
 14789  012706  006F FF74  F00C    	movff	postdec2,btemp+11
 14790  01270C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14791  012712  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14792  012718  006F FF78  F03C    	movff	postinc2,_prec
 14793  01271E  006F FF74  F03D    	movff	postdec2,_prec+1
 14794                           
 14795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 14796  012724  D060               	goto	u12730
 14797  012726                     l13330:
 14798                           
 14799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 14800                           ;stkvar	_fmt @ sp[(-32)+-4]
 14801  012726  0EDC               	movlw	-36
 14802  012728  006F FF8F FFD9     	movff	plusw1,fsr2l
 14803  01272E  0EDD               	movlw	-35
 14804  012730  006F FF8F FFDA     	movff	plusw1,fsr2h
 14805  012736  006F FF78  F00B    	movff	postinc2,btemp+10
 14806  01273C  006F FF74  F00C    	movff	postdec2,btemp+11
 14807  012742  0060  F02F  FFE6   	movff	btemp+10,postinc1
 14808  012748  0060  F033  FFE6   	movff	btemp+11,postinc1
 14809  01274E  EC88  F0BF         	call	_atoi	;wreg free
 14810  012752  0060  F004  F03C   	movff	btemp,_prec
 14811  012758  0060  F008  F03D   	movff	btemp+1,_prec+1
 14812                           
 14813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 14814  01275E  D00B               	goto	l13334
 14815  012760                     l13332:
 14816                           
 14817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 14818                           ;stkvar	_fmt @ sp[(-32)+-4]
 14819  012760  0EDC               	movlw	-36
 14820  012762  006F FF8F FFD9     	movff	plusw1,fsr2l
 14821  012768  0EDD               	movlw	-35
 14822  01276A  006F FF8F FFDA     	movff	plusw1,fsr2h
 14823  012770  2ADE               	incf	postinc2,f,c
 14824  012772  0E00               	movlw	0
 14825  012774  22DD               	addwfc	postdec2,f,c
 14826  012776                     l13334:
 14827  012776  0ED0               	movlw	208
 14828  012778  6E0B               	movwf	(btemp+10)^0,c
 14829  01277A  0EFF               	movlw	255
 14830  01277C  6E0C               	movwf	(btemp+11)^0,c
 14831                           
 14832                           ;stkvar	_fmt @ sp[(-32)+-4]
 14833  01277E  0EDC               	movlw	-36
 14834  012780  006F FF8F FFD9     	movff	plusw1,fsr2l
 14835  012786  0EDD               	movlw	-35
 14836  012788  006F FF8F FFDA     	movff	plusw1,fsr2h
 14837  01278E  006F FF7B FFF6     	movff	postinc2,tblptrl
 14838  012794  006F FF77 FFF7     	movff	postdec2,tblptrh
 14839  01279A                     	if	0	;tblptru may be non-zero
 14840  01279A                     	endif
 14841  01279A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14842  01279A  0E00               	movlw	low (__mediumconst shr (0+16))
 14843  01279C  6EF8               	movwf	tblptru,c
 14844  01279E                     	endif
 14845  01279E  0008               	tblrd		*
 14846  0127A0  50F5               	movf	tablat,w,c
 14847  0127A2  6E09               	movwf	(btemp+8)^0,c
 14848  0127A4  6A0A               	clrf	(btemp+9)^0,c
 14849  0127A6  500B               	movf	(btemp+10)^0,w,c
 14850  0127A8  2609               	addwf	(btemp+8)^0,f,c
 14851  0127AA  500C               	movf	(btemp+11)^0,w,c
 14852  0127AC  220A               	addwfc	(btemp+9)^0,f,c
 14853  0127AE  500A               	movf	(btemp+9)^0,w,c
 14854  0127B0  E106               	bnz	u12710
 14855  0127B2  0E0A               	movlw	10
 14856  0127B4  5C09               	subwf	(btemp+8)^0,w,c
 14857  0127B6  B0D8               	btfsc	status,0,c
 14858  0127B8  D002               	goto	u12710
 14859  0127BA  0E01               	movlw	1
 14860  0127BC  D001               	goto	u12720
 14861  0127BE                     u12710:
 14862  0127BE  0E00               	movlw	0
 14863  0127C0                     u12720:
 14864  0127C0  6E0B               	movwf	(btemp+10)^0,c
 14865  0127C2  6A0C               	clrf	(btemp+11)^0,c
 14866                           
 14867                           ;stkvar	_vfpfcnvrt$6043 @ sp[(-32)+0]
 14868  0127C4  0EE0               	movlw	-32
 14869  0127C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14870  0127CC  0EE1               	movlw	-31
 14871  0127CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 14872                           
 14873                           ;stkvar	_vfpfcnvrt$6043 @ sp[(-32)+0]
 14874  0127D4  0EE0               	movlw	-32
 14875  0127D6  006F FF8C  F001    	movff	plusw1,btemp
 14876  0127DC  0EE1               	movlw	-31
 14877  0127DE  50E3               	movf	plusw1,w,c
 14878  0127E0  1001               	iorwf	btemp^0,w,c
 14879  0127E2  A4D8               	btfss	status,2,c
 14880  0127E4  D7BD               	goto	l13332
 14881  0127E6                     u12730:
 14882                           
 14883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 14884                           ;stkvar	_fmt @ sp[(-32)+-4]
 14885  0127E6  0EDC               	movlw	-36
 14886  0127E8  006F FF8F FFD9     	movff	plusw1,fsr2l
 14887  0127EE  0EDD               	movlw	-35
 14888  0127F0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14889  0127F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 14890  0127FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 14891  012802                     	if	0	;tblptru may be non-zero
 14892  012802                     	endif
 14893  012802                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14894  012802  0E00               	movlw	low (__mediumconst shr (0+16))
 14895  012804  6EF8               	movwf	tblptru,c
 14896  012806                     	endif
 14897  012806  0008               	tblrd		*
 14898  012808  50F5               	movf	tablat,w,c
 14899  01280A  6EE6               	movwf	postinc1,c
 14900  01280C  0E00               	movlw	0
 14901  01280E  6EE6               	movwf	postinc1,c
 14902  012810  EC3D  F0DC         	call	_tolower	;wreg free
 14903                           
 14904                           ;stkvar	_ct @ sp[(-32)+26]
 14905  012814  0EFA               	movlw	-6
 14906  012816  0060  F007  FFE3   	movff	btemp,plusw1
 14907                           
 14908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 14909                           ;stkvar	_ct @ sp[(-32)+26]
 14910  01281C  0EFA               	movlw	-6
 14911  01281E  50E3               	movf	plusw1,w,c
 14912  012820  B4D8               	btfsc	status,2,c
 14913  012822  D05B               	goto	l13350
 14914                           
 14915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 14916                           ;stkvar	_ct @ sp[(-32)+26]
 14917  012824  0EFB               	movlw	251
 14918  012826  24E1               	addwf	fsr1l,w,c
 14919  012828  6ED9               	movwf	fsr2l,c
 14920  01282A  0EFF               	movlw	255
 14921  01282C  20E2               	addwfc	fsr1h,w,c
 14922  01282E  6EDA               	movwf	fsr2h,c
 14923                           
 14924                           ;stkvar	_fmt @ sp[(-32)+-4]
 14925  012830  0EDC               	movlw	-36
 14926  012832  006F FF8F FFE9     	movff	plusw1,fsr0l
 14927  012838  0EDD               	movlw	-35
 14928  01283A  006F FF8F FFEA     	movff	plusw1,fsr0h
 14929  012840  006F FFB8  F00B    	movff	postinc0,btemp+10
 14930  012846  006F FFB4  F00C    	movff	postdec0,btemp+11
 14931  01284C  0E01               	movlw	1
 14932  01284E  260B               	addwf	(btemp+10)^0,f,c
 14933  012850  0E00               	movlw	0
 14934  012852  220C               	addwfc	(btemp+11)^0,f,c
 14935  012854  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14936  01285A  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14937  012860                     	if	0	;tblptru may be non-zero
 14938  012860                     	endif
 14939  012860                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14940  012860  0E00               	movlw	low (__mediumconst shr (0+16))
 14941  012862  6EF8               	movwf	tblptru,c
 14942  012864                     	endif
 14943  012864  0008               	tblrd		*
 14944  012866  50F5               	movf	tablat,w,c
 14945  012868  6EE6               	movwf	postinc1,c
 14946  01286A  0E00               	movlw	0
 14947  01286C  6EE6               	movwf	postinc1,c
 14948  01286E  EC3D  F0DC         	call	_tolower	;wreg free
 14949  012872  5001               	movf	btemp^0,w,c
 14950  012874  6EDF               	movwf	indf2,c
 14951                           
 14952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 14953                           ;stkvar	_ct @ sp[(-32)+26]
 14954  012876  0EFB               	movlw	251
 14955  012878  24E1               	addwf	fsr1l,w,c
 14956  01287A  6ED9               	movwf	fsr2l,c
 14957  01287C  0EFF               	movlw	255
 14958  01287E  20E2               	addwfc	fsr1h,w,c
 14959  012880  6EDA               	movwf	fsr2h,c
 14960  012882  50DF               	movf	indf2,w,c
 14961  012884  B4D8               	btfsc	status,2,c
 14962  012886  D029               	goto	l13350
 14963                           
 14964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 14965                           ;stkvar	_ct @ sp[(-32)+26]
 14966  012888  0EFC               	movlw	252
 14967  01288A  24E1               	addwf	fsr1l,w,c
 14968  01288C  6ED9               	movwf	fsr2l,c
 14969  01288E  0EFF               	movlw	255
 14970  012890  20E2               	addwfc	fsr1h,w,c
 14971  012892  6EDA               	movwf	fsr2h,c
 14972                           
 14973                           ;stkvar	_fmt @ sp[(-32)+-4]
 14974  012894  0EDC               	movlw	-36
 14975  012896  006F FF8F FFE9     	movff	plusw1,fsr0l
 14976  01289C  0EDD               	movlw	-35
 14977  01289E  006F FF8F FFEA     	movff	plusw1,fsr0h
 14978  0128A4  006F FFB8  F00B    	movff	postinc0,btemp+10
 14979  0128AA  006F FFB4  F00C    	movff	postdec0,btemp+11
 14980  0128B0  0E02               	movlw	2
 14981  0128B2  260B               	addwf	(btemp+10)^0,f,c
 14982  0128B4  0E00               	movlw	0
 14983  0128B6  220C               	addwfc	(btemp+11)^0,f,c
 14984  0128B8  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14985  0128BE  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14986  0128C4                     	if	0	;tblptru may be non-zero
 14987  0128C4                     	endif
 14988  0128C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14989  0128C4  0E00               	movlw	low (__mediumconst shr (0+16))
 14990  0128C6  6EF8               	movwf	tblptru,c
 14991  0128C8                     	endif
 14992  0128C8  0008               	tblrd		*
 14993  0128CA  50F5               	movf	tablat,w,c
 14994  0128CC  6EE6               	movwf	postinc1,c
 14995  0128CE  0E00               	movlw	0
 14996  0128D0  6EE6               	movwf	postinc1,c
 14997  0128D2  EC3D  F0DC         	call	_tolower	;wreg free
 14998  0128D6  5001               	movf	btemp^0,w,c
 14999  0128D8  6EDF               	movwf	indf2,c
 15000  0128DA                     l13350:
 15001                           
 15002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 15003                           ;stkvar	_fmt @ sp[(-32)+-4]
 15004  0128DA  0EDC               	movlw	-36
 15005  0128DC  006F FF8F FFD9     	movff	plusw1,fsr2l
 15006  0128E2  0EDD               	movlw	-35
 15007  0128E4  006F FF8F FFDA     	movff	plusw1,fsr2h
 15008  0128EA  006F FF7B FFF6     	movff	postinc2,tblptrl
 15009  0128F0  006F FF77 FFF7     	movff	postdec2,tblptrh
 15010  0128F6                     	if	0	;tblptru may be non-zero
 15011  0128F6                     	endif
 15012  0128F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15013  0128F6  0E00               	movlw	low (__mediumconst shr (0+16))
 15014  0128F8  6EF8               	movwf	tblptru,c
 15015  0128FA                     	endif
 15016  0128FA  0008               	tblrd		*
 15017  0128FC  50F5               	movf	tablat,w,c
 15018  0128FE  0A63               	xorlw	99
 15019  012900  A4D8               	btfss	status,2,c
 15020  012902  D037               	goto	l13360
 15021                           
 15022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 15023                           ;stkvar	_fmt @ sp[(-32)+-4]
 15024  012904  0EDC               	movlw	-36
 15025  012906  006F FF8F FFD9     	movff	plusw1,fsr2l
 15026  01290C  0EDD               	movlw	-35
 15027  01290E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15028  012914  2ADE               	incf	postinc2,f,c
 15029  012916  0E00               	movlw	0
 15030  012918  22DD               	addwfc	postdec2,f,c
 15031                           
 15032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 15033                           ;stkvar	_ap @ sp[(-32)+-6]
 15034  01291A  0EDA               	movlw	-38
 15035  01291C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15036  012922  0EDB               	movlw	-37
 15037  012924  006F FF8F FFDA     	movff	plusw1,fsr2h
 15038  01292A  0E02               	movlw	2
 15039  01292C  5EDE               	subwf	postinc2,f,c
 15040  01292E  0E00               	movlw	0
 15041  012930  5ADD               	subwfb	postdec2,f,c
 15042  012932  006F FF78  F00B    	movff	postinc2,btemp+10
 15043  012938  006F FF74  F00C    	movff	postdec2,btemp+11
 15044  01293E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15045  012944  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15046  01294A  50DF               	movf	indf2,w,c
 15047  01294C  6E0C               	movwf	(btemp+11)^0,c
 15048                           
 15049                           ;stkvar	_c @ sp[(-32)+31]
 15050  01294E  0EFF               	movlw	-1
 15051  012950  0060  F033  FFE3   	movff	btemp+11,plusw1
 15052                           
 15053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 15054                           ;stkvar	_c @ sp[(-32)+31]
 15055  012956  0EFF               	movlw	-1
 15056  012958  50E3               	movf	plusw1,w,c
 15057  01295A  6EE6               	movwf	postinc1,c
 15058                           
 15059                           ;stkvar	_fp @ sp[(-33)+-2]
 15060  01295C  0EDD               	movlw	-35
 15061  01295E  006F FF8F FFE6     	movff	plusw1,postinc1
 15062  012964  006F FF8F FFE6     	movff	plusw1,postinc1
 15063  01296A  ECB7  F0DB         	call	_ctoa	;wreg free
 15064  01296E  EF32  F09A         	goto	l2514
 15065  012972                     l13360:
 15066                           
 15067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 15068                           ;stkvar	_fmt @ sp[(-32)+-4]
 15069  012972  0EDC               	movlw	-36
 15070  012974  006F FF8F FFD9     	movff	plusw1,fsr2l
 15071  01297A  0EDD               	movlw	-35
 15072  01297C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15073  012982  006F FF7B FFF6     	movff	postinc2,tblptrl
 15074  012988  006F FF77 FFF7     	movff	postdec2,tblptrh
 15075  01298E                     	if	0	;tblptru may be non-zero
 15076  01298E                     	endif
 15077  01298E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15078  01298E  0E00               	movlw	low (__mediumconst shr (0+16))
 15079  012990  6EF8               	movwf	tblptru,c
 15080  012992                     	endif
 15081  012992  0008               	tblrd		*
 15082  012994  50F5               	movf	tablat,w,c
 15083  012996  0A64               	xorlw	100
 15084  012998  B4D8               	btfsc	status,2,c
 15085  01299A  D015               	goto	u12780
 15086                           
 15087                           ;stkvar	_fmt @ sp[(-32)+-4]
 15088  01299C  0EDC               	movlw	-36
 15089  01299E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15090  0129A4  0EDD               	movlw	-35
 15091  0129A6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15092  0129AC  006F FF7B FFF6     	movff	postinc2,tblptrl
 15093  0129B2  006F FF77 FFF7     	movff	postdec2,tblptrh
 15094  0129B8                     	if	0	;tblptru may be non-zero
 15095  0129B8                     	endif
 15096  0129B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15097  0129B8  0E00               	movlw	low (__mediumconst shr (0+16))
 15098  0129BA  6EF8               	movwf	tblptru,c
 15099  0129BC                     	endif
 15100  0129BC  0008               	tblrd		*
 15101  0129BE  50F5               	movf	tablat,w,c
 15102  0129C0  0A69               	xorlw	105
 15103  0129C2  A4D8               	btfss	status,2,c
 15104  0129C4  D076               	goto	l13372
 15105  0129C6                     u12780:
 15106                           
 15107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 15108                           ;stkvar	_fmt @ sp[(-32)+-4]
 15109  0129C6  0EDC               	movlw	-36
 15110  0129C8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15111  0129CE  0EDD               	movlw	-35
 15112  0129D0  006F FF8F FFDA     	movff	plusw1,fsr2h
 15113  0129D6  2ADE               	incf	postinc2,f,c
 15114  0129D8  0E00               	movlw	0
 15115  0129DA  22DD               	addwfc	postdec2,f,c
 15116                           
 15117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 15118                           ;stkvar	_ap @ sp[(-32)+-6]
 15119  0129DC  0EDA               	movlw	-38
 15120  0129DE  006F FF8F FFD9     	movff	plusw1,fsr2l
 15121  0129E4  0EDB               	movlw	-37
 15122  0129E6  006F FF8F FFDA     	movff	plusw1,fsr2h
 15123  0129EC  0E02               	movlw	2
 15124  0129EE  5EDE               	subwf	postinc2,f,c
 15125  0129F0  0E00               	movlw	0
 15126  0129F2  5ADD               	subwfb	postdec2,f,c
 15127  0129F4  006F FF78  F00B    	movff	postinc2,btemp+10
 15128  0129FA  006F FF74  F00C    	movff	postdec2,btemp+11
 15129  012A00  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15130  012A06  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15131  012A0C  006F FF78  F00B    	movff	postinc2,btemp+10
 15132  012A12  006F FF74  F00C    	movff	postdec2,btemp+11
 15133                           
 15134                           ;stkvar	_ll @ sp[(-32)+14]
 15135  012A18  0EEE               	movlw	-18
 15136  012A1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15137  012A20  0EEF               	movlw	-17
 15138  012A22  0060  F033  FFE3   	movff	btemp+11,plusw1
 15139  012A28  6A01               	clrf	btemp^0,c
 15140  012A2A  BEE3               	btfsc	plusw1,7,c
 15141  012A2C  6801               	setf	btemp^0,c
 15142  012A2E  0EF0               	movlw	-16
 15143  012A30  0060  F007  FFE3   	movff	btemp,plusw1
 15144  012A36  0EF1               	movlw	-15
 15145  012A38  0060  F007  FFE3   	movff	btemp,plusw1
 15146  012A3E  0EF2               	movlw	-14
 15147  012A40  0060  F007  FFE3   	movff	btemp,plusw1
 15148  012A46  0EF3               	movlw	-13
 15149  012A48  0060  F007  FFE3   	movff	btemp,plusw1
 15150  012A4E  0EF4               	movlw	-12
 15151  012A50  0060  F007  FFE3   	movff	btemp,plusw1
 15152  012A56  0EF5               	movlw	-11
 15153  012A58  0060  F007  FFE3   	movff	btemp,plusw1
 15154  012A5E                     l13368:
 15155                           
 15156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 15157                           ;stkvar	_ll @ sp[(-32)+14]
 15158  012A5E  50E1               	movf	fsr1l,w,c
 15159  012A60  0FEE               	addlw	-18
 15160  012A62  6ED9               	movwf	fsr2l,c
 15161  012A64  50E2               	movf	fsr1h,w,c
 15162  012A66  6EDA               	movwf	fsr2h,c
 15163  012A68  0EFF               	movlw	255
 15164  012A6A  22DA               	addwfc	fsr2h,f,c
 15165  012A6C  006F FF7B FFE6     	movff	postinc2,postinc1
 15166  012A72  006F FF7B FFE6     	movff	postinc2,postinc1
 15167  012A78  006F FF7B FFE6     	movff	postinc2,postinc1
 15168  012A7E  006F FF7B FFE6     	movff	postinc2,postinc1
 15169  012A84  006F FF7B FFE6     	movff	postinc2,postinc1
 15170  012A8A  006F FF7B FFE6     	movff	postinc2,postinc1
 15171  012A90  006F FF7B FFE6     	movff	postinc2,postinc1
 15172  012A96  006F FF7B FFE6     	movff	postinc2,postinc1
 15173                           
 15174                           ;stkvar	_fp @ sp[(-40)+-2]
 15175  012A9C  0ED6               	movlw	-42
 15176  012A9E  006F FF8F FFE6     	movff	plusw1,postinc1
 15177  012AA4  006F FF8F FFE6     	movff	plusw1,postinc1
 15178  012AAA  ECD8  F0AE         	call	_dtoa	;wreg free
 15179  012AAE  EF32  F09A         	goto	l2514
 15180  012AB2                     l13372:
 15181                           
 15182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 15183  012AB2  0E02               	movlw	2
 15184  012AB4  6EE6               	movwf	postinc1,c
 15185  012AB6  0E00               	movlw	0
 15186  012AB8  6EE6               	movwf	postinc1,c
 15187  012ABA  0EEA               	movlw	low STR_90
 15188  012ABC  6EE6               	movwf	postinc1,c
 15189  012ABE  0EFF               	movlw	high STR_90
 15190  012AC0  6EE6               	movwf	postinc1,c
 15191                           
 15192                           ;stkvar	_fmt @ sp[(-36)+-4]
 15193  012AC2  0ED8               	movlw	-40
 15194  012AC4  006F FF8F FFD9     	movff	plusw1,fsr2l
 15195  012ACA  0ED9               	movlw	-39
 15196  012ACC  006F FF8F FFDA     	movff	plusw1,fsr2h
 15197  012AD2  006F FF78  F00B    	movff	postinc2,btemp+10
 15198  012AD8  006F FF74  F00C    	movff	postdec2,btemp+11
 15199  012ADE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15200  012AE4  0060  F033  FFE6   	movff	btemp+11,postinc1
 15201  012AEA  EC05  F0C3         	call	_strncmp	;wreg free
 15202  012AEE  5001               	movf	btemp^0,w,c
 15203  012AF0  1002               	iorwf	(btemp+1)^0,w,c
 15204  012AF2  B4D8               	btfsc	status,2,c
 15205  012AF4  D022               	goto	u12800
 15206  012AF6  0E02               	movlw	2
 15207  012AF8  6EE6               	movwf	postinc1,c
 15208  012AFA  0E00               	movlw	0
 15209  012AFC  6EE6               	movwf	postinc1,c
 15210  012AFE  0EF0               	movlw	low STR_94
 15211  012B00  6EE6               	movwf	postinc1,c
 15212  012B02  0EFF               	movlw	high STR_94
 15213  012B04  6EE6               	movwf	postinc1,c
 15214                           
 15215                           ;stkvar	_fmt @ sp[(-36)+-4]
 15216  012B06  0ED8               	movlw	-40
 15217  012B08  006F FF8F FFD9     	movff	plusw1,fsr2l
 15218  012B0E  0ED9               	movlw	-39
 15219  012B10  006F FF8F FFDA     	movff	plusw1,fsr2h
 15220  012B16  006F FF78  F00B    	movff	postinc2,btemp+10
 15221  012B1C  006F FF74  F00C    	movff	postdec2,btemp+11
 15222  012B22  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15223  012B28  0060  F033  FFE6   	movff	btemp+11,postinc1
 15224  012B2E  EC05  F0C3         	call	_strncmp	;wreg free
 15225  012B32  5001               	movf	btemp^0,w,c
 15226  012B34  1002               	iorwf	(btemp+1)^0,w,c
 15227  012B36  A4D8               	btfss	status,2,c
 15228  012B38  D069               	goto	l13384
 15229  012B3A                     u12800:
 15230                           
 15231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 15232                           ;stkvar	_fmt @ sp[(-32)+-4]
 15233  012B3A  0EDC               	movlw	-36
 15234  012B3C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15235  012B42  0EDD               	movlw	-35
 15236  012B44  006F FF8F FFDA     	movff	plusw1,fsr2h
 15237  012B4A  0E02               	movlw	2
 15238  012B4C  26DE               	addwf	postinc2,f,c
 15239  012B4E  0E00               	movlw	0
 15240  012B50  22DD               	addwfc	postdec2,f,c
 15241                           
 15242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 15243                           ;stkvar	_ap @ sp[(-32)+-6]
 15244  012B52  0EDA               	movlw	-38
 15245  012B54  006F FF8F FFD9     	movff	plusw1,fsr2l
 15246  012B5A  0EDB               	movlw	-37
 15247  012B5C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15248  012B62  0E04               	movlw	4
 15249  012B64  5EDE               	subwf	postinc2,f,c
 15250  012B66  0E00               	movlw	0
 15251  012B68  5ADD               	subwfb	postdec2,f,c
 15252  012B6A  006F FF78  F00B    	movff	postinc2,btemp+10
 15253  012B70  006F FF74  F00C    	movff	postdec2,btemp+11
 15254  012B76  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15255  012B7C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15256  012B82  006F FF78  F009    	movff	postinc2,btemp+8
 15257  012B88  006F FF78  F00A    	movff	postinc2,btemp+9
 15258  012B8E  006F FF78  F00B    	movff	postinc2,btemp+10
 15259  012B94  006F FF78  F00C    	movff	postinc2,btemp+11
 15260  012B9A  0060  F024  F011   	movff	btemp+8,btemp+16
 15261  012BA0  0060  F028  F012   	movff	btemp+9,btemp+17
 15262  012BA6  0060  F02C  F013   	movff	btemp+10,btemp+18
 15263  012BAC  0060  F030  F014   	movff	btemp+11,btemp+19
 15264  012BB2  6A15               	clrf	(btemp+20)^0,c
 15265  012BB4  BE14               	btfsc	(btemp+19)^0,7,c
 15266  012BB6  6815               	setf	(btemp+20)^0,c
 15267  012BB8  0060  F054  F016   	movff	btemp+20,btemp+21
 15268  012BBE  0060  F054  F017   	movff	btemp+20,btemp+22
 15269  012BC4  0060  F054  F018   	movff	btemp+20,btemp+23
 15270                           
 15271                           ;stkvar	_ll @ sp[(-32)+14]
 15272  012BCA  0EEE               	movlw	-18
 15273  012BCC  0060  F047  FFE3   	movff	btemp+16,plusw1
 15274  012BD2  0EEF               	movlw	-17
 15275  012BD4  0060  F04B  FFE3   	movff	btemp+17,plusw1
 15276  012BDA  0EF0               	movlw	-16
 15277  012BDC  0060  F04F  FFE3   	movff	btemp+18,plusw1
 15278  012BE2  0EF1               	movlw	-15
 15279  012BE4  0060  F053  FFE3   	movff	btemp+19,plusw1
 15280  012BEA  0EF2               	movlw	-14
 15281  012BEC  0060  F057  FFE3   	movff	btemp+20,plusw1
 15282  012BF2  0EF3               	movlw	-13
 15283  012BF4  0060  F05B  FFE3   	movff	btemp+21,plusw1
 15284  012BFA  0EF4               	movlw	-12
 15285  012BFC  0060  F05F  FFE3   	movff	btemp+22,plusw1
 15286  012C02  0EF5               	movlw	-11
 15287  012C04  0060  F063  FFE3   	movff	btemp+23,plusw1
 15288  012C0A  D729               	goto	l13368
 15289  012C0C                     l13384:
 15290                           
 15291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 15292                           ;stkvar	_ct @ sp[(-32)+26]
 15293  012C0C  0EFA               	movlw	-6
 15294  012C0E  006F FF8C  F001    	movff	plusw1,btemp
 15295  012C14  0E66               	movlw	102
 15296  012C16  1801               	xorwf	btemp^0,w,c
 15297  012C18  A4D8               	btfss	status,2,c
 15298  012C1A  D06E               	goto	l13396
 15299                           
 15300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 15301                           ;stkvar	_fmt @ sp[(-32)+-4]
 15302  012C1C  0EDC               	movlw	-36
 15303  012C1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15304  012C24  0EDD               	movlw	-35
 15305  012C26  006F FF8F FFDA     	movff	plusw1,fsr2h
 15306  012C2C  006F FF7B FFF6     	movff	postinc2,tblptrl
 15307  012C32  006F FF77 FFF7     	movff	postdec2,tblptrh
 15308  012C38                     	if	0	;tblptru may be non-zero
 15309  012C38                     	endif
 15310  012C38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15311  012C38  0E00               	movlw	low (__mediumconst shr (0+16))
 15312  012C3A  6EF8               	movwf	tblptru,c
 15313  012C3C                     	endif
 15314                           
 15315                           ;stkvar	_c @ sp[(-32)+31]
 15316  012C3C  0008               	tblrd		*
 15317  012C3E  0EFF               	movlw	-1
 15318  012C40  006F FFD7 FFE3     	movff	tablat,plusw1
 15319                           
 15320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 15321                           ;stkvar	_fmt @ sp[(-32)+-4]
 15322  012C46  0EDC               	movlw	-36
 15323  012C48  006F FF8F FFD9     	movff	plusw1,fsr2l
 15324  012C4E  0EDD               	movlw	-35
 15325  012C50  006F FF8F FFDA     	movff	plusw1,fsr2h
 15326  012C56  2ADE               	incf	postinc2,f,c
 15327  012C58  0E00               	movlw	0
 15328  012C5A  22DD               	addwfc	postdec2,f,c
 15329                           
 15330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 15331                           ;stkvar	_ap @ sp[(-32)+-6]
 15332  012C5C  0EDA               	movlw	-38
 15333  012C5E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15334  012C64  0EDB               	movlw	-37
 15335  012C66  006F FF8F FFDA     	movff	plusw1,fsr2h
 15336  012C6C  0E04               	movlw	4
 15337  012C6E  5EDE               	subwf	postinc2,f,c
 15338  012C70  0E00               	movlw	0
 15339  012C72  5ADD               	subwfb	postdec2,f,c
 15340  012C74  006F FF78  F00B    	movff	postinc2,btemp+10
 15341  012C7A  006F FF74  F00C    	movff	postdec2,btemp+11
 15342  012C80  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15343  012C86  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15344  012C8C  006F FF78  F009    	movff	postinc2,btemp+8
 15345  012C92  006F FF78  F00A    	movff	postinc2,btemp+9
 15346  012C98  006F FF78  F00B    	movff	postinc2,btemp+10
 15347  012C9E  006F FF78  F00C    	movff	postinc2,btemp+11
 15348                           
 15349                           ;stkvar	_f @ sp[(-32)+22]
 15350  012CA4  0EF6               	movlw	-10
 15351  012CA6  0060  F027  FFE3   	movff	btemp+8,plusw1
 15352  012CAC  0EF7               	movlw	-9
 15353  012CAE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15354  012CB4  0EF8               	movlw	-8
 15355  012CB6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15356  012CBC  0EF9               	movlw	-7
 15357  012CBE  0060  F033  FFE3   	movff	btemp+11,plusw1
 15358  012CC4                     l13392:
 15359                           
 15360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 15361                           ;stkvar	_c @ sp[(-32)+31]
 15362  012CC4  0EFF               	movlw	-1
 15363  012CC6  50E3               	movf	plusw1,w,c
 15364  012CC8  6EE6               	movwf	postinc1,c
 15365                           
 15366                           ;stkvar	_f @ sp[(-33)+22]
 15367  012CCA  0EF5               	movlw	-11
 15368  012CCC  006F FF8F FFE6     	movff	plusw1,postinc1
 15369  012CD2  006F FF8F FFE6     	movff	plusw1,postinc1
 15370  012CD8  006F FF8F FFE6     	movff	plusw1,postinc1
 15371  012CDE  006F FF8F FFE6     	movff	plusw1,postinc1
 15372                           
 15373                           ;stkvar	_fp @ sp[(-37)+-2]
 15374  012CE4  0ED9               	movlw	-39
 15375  012CE6  006F FF8F FFE6     	movff	plusw1,postinc1
 15376  012CEC  006F FF8F FFE6     	movff	plusw1,postinc1
 15377  012CF2  EC3F  F089         	call	_efgtoa	;wreg free
 15378  012CF6  D3B6               	goto	l2514
 15379  012CF8                     l13396:
 15380                           
 15381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 15382  012CF8  0E02               	movlw	2
 15383  012CFA  6EE6               	movwf	postinc1,c
 15384  012CFC  0E00               	movlw	0
 15385  012CFE  6EE6               	movwf	postinc1,c
 15386  012D00  0EED               	movlw	low STR_99
 15387  012D02  6EE6               	movwf	postinc1,c
 15388  012D04  0EFF               	movlw	high STR_99
 15389  012D06  6EE6               	movwf	postinc1,c
 15390                           
 15391                           ;stkvar	_ct @ sp[(-36)+26]
 15392  012D08  0EF6               	movlw	246
 15393  012D0A  24E1               	addwf	fsr1l,w,c
 15394  012D0C  6E01               	movwf	btemp^0,c
 15395  012D0E  0EFF               	movlw	255
 15396  012D10  20E2               	addwfc	fsr1h,w,c
 15397  012D12  6E02               	movwf	(btemp+1)^0,c
 15398  012D14  0060  F007  FFE6   	movff	btemp,postinc1
 15399  012D1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 15400  012D20  EC05  F0C3         	call	_strncmp	;wreg free
 15401  012D24  5001               	movf	btemp^0,w,c
 15402  012D26  1002               	iorwf	(btemp+1)^0,w,c
 15403  012D28  A4D8               	btfss	status,2,c
 15404  012D2A  D096               	goto	l13416
 15405                           
 15406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 15407                           ;stkvar	_fmt @ sp[(-32)+-4]
 15408  012D2C  0EDC               	movlw	-36
 15409  012D2E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15410  012D34  0EDD               	movlw	-35
 15411  012D36  006F FF8F FFDA     	movff	plusw1,fsr2h
 15412  012D3C  006F FF78  F00B    	movff	postinc2,btemp+10
 15413  012D42  006F FF74  F00C    	movff	postdec2,btemp+11
 15414  012D48  0E01               	movlw	1
 15415  012D4A  260B               	addwf	(btemp+10)^0,f,c
 15416  012D4C  0E00               	movlw	0
 15417  012D4E  220C               	addwfc	(btemp+11)^0,f,c
 15418  012D50  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15419  012D56  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15420  012D5C                     	if	0	;tblptru may be non-zero
 15421  012D5C                     	endif
 15422  012D5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15423  012D5C  0E00               	movlw	low (__mediumconst shr (0+16))
 15424  012D5E  6EF8               	movwf	tblptru,c
 15425  012D60                     	endif
 15426                           
 15427                           ;stkvar	_c @ sp[(-32)+31]
 15428  012D60  0008               	tblrd		*
 15429  012D62  0EFF               	movlw	-1
 15430  012D64  006F FFD7 FFE3     	movff	tablat,plusw1
 15431  012D6A  0EBF               	movlw	191
 15432  012D6C  6E0B               	movwf	(btemp+10)^0,c
 15433  012D6E  0EFF               	movlw	255
 15434  012D70  6E0C               	movwf	(btemp+11)^0,c
 15435                           
 15436                           ;stkvar	_fmt @ sp[(-32)+-4]
 15437  012D72  0EDC               	movlw	-36
 15438  012D74  006F FF8F FFD9     	movff	plusw1,fsr2l
 15439  012D7A  0EDD               	movlw	-35
 15440  012D7C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15441  012D82  006F FF7B FFF6     	movff	postinc2,tblptrl
 15442  012D88  006F FF77 FFF7     	movff	postdec2,tblptrh
 15443  012D8E                     	if	0	;tblptru may be non-zero
 15444  012D8E                     	endif
 15445  012D8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15446  012D8E  0E00               	movlw	low (__mediumconst shr (0+16))
 15447  012D90  6EF8               	movwf	tblptru,c
 15448  012D92                     	endif
 15449  012D92  0008               	tblrd		*
 15450  012D94  50F5               	movf	tablat,w,c
 15451  012D96  6E09               	movwf	(btemp+8)^0,c
 15452  012D98  6A0A               	clrf	(btemp+9)^0,c
 15453  012D9A  500B               	movf	(btemp+10)^0,w,c
 15454  012D9C  2609               	addwf	(btemp+8)^0,f,c
 15455  012D9E  500C               	movf	(btemp+11)^0,w,c
 15456  012DA0  220A               	addwfc	(btemp+9)^0,f,c
 15457  012DA2  500A               	movf	(btemp+9)^0,w,c
 15458  012DA4  E106               	bnz	u12830
 15459  012DA6  0E1A               	movlw	26
 15460  012DA8  5C09               	subwf	(btemp+8)^0,w,c
 15461  012DAA  B0D8               	btfsc	status,0,c
 15462  012DAC  D002               	goto	u12830
 15463  012DAE  0E01               	movlw	1
 15464  012DB0  D001               	goto	u12840
 15465  012DB2                     u12830:
 15466  012DB2  0E00               	movlw	0
 15467  012DB4                     u12840:
 15468  012DB4  6E0B               	movwf	(btemp+10)^0,c
 15469  012DB6  6A0C               	clrf	(btemp+11)^0,c
 15470                           
 15471                           ;stkvar	_vfpfcnvrt$6054 @ sp[(-32)+2]
 15472  012DB8  0EE2               	movlw	-30
 15473  012DBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15474  012DC0  0EE3               	movlw	-29
 15475  012DC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 15476                           
 15477                           ;stkvar	_vfpfcnvrt$6054 @ sp[(-32)+2]
 15478  012DC8  0EE2               	movlw	-30
 15479  012DCA  006F FF8C  F001    	movff	plusw1,btemp
 15480  012DD0  0EE3               	movlw	-29
 15481  012DD2  50E3               	movf	plusw1,w,c
 15482  012DD4  1001               	iorwf	btemp^0,w,c
 15483                           
 15484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 15485                           ;stkvar	_ap @ sp[(-32)+-6]
 15486                           
 15487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 15488                           
 15489                           ;stkvar	_f @ sp[(-32)+22]
 15490                           
 15491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 15492                           ;stkvar	_ap @ sp[(-32)+-6]
 15493  012DD6  0EDA               	movlw	-38
 15494  012DD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 15495  012DDE  0EDB               	movlw	-37
 15496  012DE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 15497  012DE6  0E04               	movlw	4
 15498  012DE8  5EDE               	subwf	postinc2,f,c
 15499  012DEA  0E00               	movlw	0
 15500  012DEC  5ADD               	subwfb	postdec2,f,c
 15501  012DEE  006F FF78  F00B    	movff	postinc2,btemp+10
 15502  012DF4  006F FF74  F00C    	movff	postdec2,btemp+11
 15503  012DFA  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15504  012E00  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15505  012E06  006F FF78  F009    	movff	postinc2,btemp+8
 15506  012E0C  006F FF78  F00A    	movff	postinc2,btemp+9
 15507  012E12  006F FF78  F00B    	movff	postinc2,btemp+10
 15508  012E18  006F FF78  F00C    	movff	postinc2,btemp+11
 15509                           
 15510                           ;stkvar	_f @ sp[(-32)+22]
 15511  012E1E  0EF6               	movlw	-10
 15512  012E20  0060  F027  FFE3   	movff	btemp+8,plusw1
 15513  012E26  0EF7               	movlw	-9
 15514  012E28  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15515  012E2E  0EF8               	movlw	-8
 15516  012E30  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15517  012E36  0EF9               	movlw	-7
 15518  012E38  0060  F033  FFE3   	movff	btemp+11,plusw1
 15519                           
 15520                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 15521                           ;stkvar	_fmt @ sp[(-32)+-4]
 15522  012E3E  0EDC               	movlw	-36
 15523  012E40  006F FF8F FFD9     	movff	plusw1,fsr2l
 15524  012E46  0EDD               	movlw	-35
 15525  012E48  006F FF8F FFDA     	movff	plusw1,fsr2h
 15526  012E4E  0E02               	movlw	2
 15527  012E50  26DE               	addwf	postinc2,f,c
 15528  012E52  0E00               	movlw	0
 15529  012E54  22DD               	addwfc	postdec2,f,c
 15530  012E56  D736               	goto	l13392
 15531  012E58                     l13416:
 15532                           
 15533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 15534                           ;stkvar	_fmt @ sp[(-32)+-4]
 15535  012E58  0EDC               	movlw	-36
 15536  012E5A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15537  012E60  0EDD               	movlw	-35
 15538  012E62  006F FF8F FFDA     	movff	plusw1,fsr2h
 15539  012E68  006F FF7B FFF6     	movff	postinc2,tblptrl
 15540  012E6E  006F FF77 FFF7     	movff	postdec2,tblptrh
 15541  012E74                     	if	0	;tblptru may be non-zero
 15542  012E74                     	endif
 15543  012E74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15544  012E74  0E00               	movlw	low (__mediumconst shr (0+16))
 15545  012E76  6EF8               	movwf	tblptru,c
 15546  012E78                     	endif
 15547  012E78  0008               	tblrd		*
 15548  012E7A  50F5               	movf	tablat,w,c
 15549  012E7C  0A73               	xorlw	115
 15550  012E7E  A4D8               	btfss	status,2,c
 15551  012E80  D042               	goto	l13426
 15552                           
 15553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 15554                           ;stkvar	_fmt @ sp[(-32)+-4]
 15555  012E82  0EDC               	movlw	-36
 15556  012E84  006F FF8F FFD9     	movff	plusw1,fsr2l
 15557  012E8A  0EDD               	movlw	-35
 15558  012E8C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15559  012E92  2ADE               	incf	postinc2,f,c
 15560  012E94  0E00               	movlw	0
 15561  012E96  22DD               	addwfc	postdec2,f,c
 15562                           
 15563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 15564                           ;stkvar	_ap @ sp[(-32)+-6]
 15565  012E98  0EDA               	movlw	-38
 15566  012E9A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15567  012EA0  0EDB               	movlw	-37
 15568  012EA2  006F FF8F FFDA     	movff	plusw1,fsr2h
 15569  012EA8  0E02               	movlw	2
 15570  012EAA  5EDE               	subwf	postinc2,f,c
 15571  012EAC  0E00               	movlw	0
 15572  012EAE  5ADD               	subwfb	postdec2,f,c
 15573  012EB0  006F FF78  F00B    	movff	postinc2,btemp+10
 15574  012EB6  006F FF74  F00C    	movff	postdec2,btemp+11
 15575  012EBC  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15576  012EC2  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15577  012EC8  006F FF78  F00B    	movff	postinc2,btemp+10
 15578  012ECE  006F FF74  F00C    	movff	postdec2,btemp+11
 15579                           
 15580                           ;stkvar	_cp @ sp[(-32)+29]
 15581  012ED4  0EFE               	movlw	-2
 15582  012ED6  0060  F033  FFE3   	movff	btemp+11,plusw1
 15583  012EDC  0EFD               	movlw	-3
 15584  012EDE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15585                           
 15586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 15587                           ;stkvar	_cp @ sp[(-32)+29]
 15588  012EE4  0EFD               	movlw	-3
 15589  012EE6  006F FF8F FFE6     	movff	plusw1,postinc1
 15590  012EEC  006F FF8F FFE6     	movff	plusw1,postinc1
 15591                           
 15592                           ;stkvar	_fp @ sp[(-34)+-2]
 15593  012EF2  0EDC               	movlw	-36
 15594  012EF4  006F FF8F FFE6     	movff	plusw1,postinc1
 15595  012EFA  006F FF8F FFE6     	movff	plusw1,postinc1
 15596  012F00  ECE9  F0BC         	call	_stoa	;wreg free
 15597  012F04  D2AF               	goto	l2514
 15598  012F06                     l13426:
 15599                           
 15600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 15601                           ;stkvar	_fmt @ sp[(-32)+-4]
 15602  012F06  0EDC               	movlw	-36
 15603  012F08  006F FF8F FFD9     	movff	plusw1,fsr2l
 15604  012F0E  0EDD               	movlw	-35
 15605  012F10  006F FF8F FFDA     	movff	plusw1,fsr2h
 15606  012F16  006F FF7B FFF6     	movff	postinc2,tblptrl
 15607  012F1C  006F FF77 FFF7     	movff	postdec2,tblptrh
 15608  012F22                     	if	0	;tblptru may be non-zero
 15609  012F22                     	endif
 15610  012F22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15611  012F22  0E00               	movlw	low (__mediumconst shr (0+16))
 15612  012F24  6EF8               	movwf	tblptru,c
 15613  012F26                     	endif
 15614  012F26  0008               	tblrd		*
 15615  012F28  50F5               	movf	tablat,w,c
 15616  012F2A  0A75               	xorlw	117
 15617  012F2C  A4D8               	btfss	status,2,c
 15618  012F2E  D07C               	goto	l13436
 15619                           
 15620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 15621                           ;stkvar	_fmt @ sp[(-32)+-4]
 15622  012F30  0EDC               	movlw	-36
 15623  012F32  006F FF8F FFD9     	movff	plusw1,fsr2l
 15624  012F38  0EDD               	movlw	-35
 15625  012F3A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15626  012F40  2ADE               	incf	postinc2,f,c
 15627  012F42  0E00               	movlw	0
 15628  012F44  22DD               	addwfc	postdec2,f,c
 15629                           
 15630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 15631                           ;stkvar	_ap @ sp[(-32)+-6]
 15632  012F46  0EDA               	movlw	-38
 15633  012F48  006F FF8F FFD9     	movff	plusw1,fsr2l
 15634  012F4E  0EDB               	movlw	-37
 15635  012F50  006F FF8F FFDA     	movff	plusw1,fsr2h
 15636  012F56  0E02               	movlw	2
 15637  012F58  5EDE               	subwf	postinc2,f,c
 15638  012F5A  0E00               	movlw	0
 15639  012F5C  5ADD               	subwfb	postdec2,f,c
 15640  012F5E  006F FF78  F00B    	movff	postinc2,btemp+10
 15641  012F64  006F FF74  F00C    	movff	postdec2,btemp+11
 15642  012F6A  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15643  012F70  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15644  012F76  006F FF78  F00B    	movff	postinc2,btemp+10
 15645  012F7C  006F FF74  F00C    	movff	postdec2,btemp+11
 15646  012F82  500B               	movf	(btemp+10)^0,w,c
 15647  012F84  6E11               	movwf	(btemp+16)^0,c
 15648  012F86  500C               	movf	(btemp+11)^0,w,c
 15649  012F88  6E12               	movwf	(btemp+17)^0,c
 15650  012F8A  6A13               	clrf	(btemp+18)^0,c
 15651  012F8C  6A14               	clrf	(btemp+19)^0,c
 15652  012F8E  6A15               	clrf	(btemp+20)^0,c
 15653  012F90  6A16               	clrf	(btemp+21)^0,c
 15654  012F92  6A17               	clrf	(btemp+22)^0,c
 15655  012F94  6A18               	clrf	(btemp+23)^0,c
 15656                           
 15657                           ;stkvar	_llu @ sp[(-32)+6]
 15658  012F96  0EE6               	movlw	-26
 15659  012F98  0060  F047  FFE3   	movff	btemp+16,plusw1
 15660  012F9E  0EE7               	movlw	-25
 15661  012FA0  0060  F04B  FFE3   	movff	btemp+17,plusw1
 15662  012FA6  0EE8               	movlw	-24
 15663  012FA8  0060  F04F  FFE3   	movff	btemp+18,plusw1
 15664  012FAE  0EE9               	movlw	-23
 15665  012FB0  0060  F053  FFE3   	movff	btemp+19,plusw1
 15666  012FB6  0EEA               	movlw	-22
 15667  012FB8  0060  F057  FFE3   	movff	btemp+20,plusw1
 15668  012FBE  0EEB               	movlw	-21
 15669  012FC0  0060  F05B  FFE3   	movff	btemp+21,plusw1
 15670  012FC6  0EEC               	movlw	-20
 15671  012FC8  0060  F05F  FFE3   	movff	btemp+22,plusw1
 15672  012FCE  0EED               	movlw	-19
 15673  012FD0  0060  F063  FFE3   	movff	btemp+23,plusw1
 15674                           
 15675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 15676                           ;stkvar	_llu @ sp[(-32)+6]
 15677  012FD6  50E1               	movf	fsr1l,w,c
 15678  012FD8  0FE6               	addlw	-26
 15679  012FDA  6ED9               	movwf	fsr2l,c
 15680  012FDC  50E2               	movf	fsr1h,w,c
 15681  012FDE  6EDA               	movwf	fsr2h,c
 15682  012FE0  0EFF               	movlw	255
 15683  012FE2  22DA               	addwfc	fsr2h,f,c
 15684  012FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 15685  012FEA  006F FF7B FFE6     	movff	postinc2,postinc1
 15686  012FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 15687  012FF6  006F FF7B FFE6     	movff	postinc2,postinc1
 15688  012FFC  006F FF7B FFE6     	movff	postinc2,postinc1
 15689  013002  006F FF7B FFE6     	movff	postinc2,postinc1
 15690  013008  006F FF7B FFE6     	movff	postinc2,postinc1
 15691  01300E  006F FF7B FFE6     	movff	postinc2,postinc1
 15692                           
 15693                           ;stkvar	_fp @ sp[(-40)+-2]
 15694  013014  0ED6               	movlw	-42
 15695  013016  006F FF8F FFE6     	movff	plusw1,postinc1
 15696  01301C  006F FF8F FFE6     	movff	plusw1,postinc1
 15697  013022  ECD1  F0B6         	call	_utoa	;wreg free
 15698  013026  D21E               	goto	l2514
 15699  013028                     l13436:
 15700                           
 15701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 15702  013028  0E02               	movlw	2
 15703  01302A  6EE6               	movwf	postinc1,c
 15704  01302C  0E00               	movlw	0
 15705  01302E  6EE6               	movwf	postinc1,c
 15706  013030  0EF3               	movlw	low STR_104
 15707  013032  6EE6               	movwf	postinc1,c
 15708  013034  0EFF               	movlw	high STR_104
 15709  013036  6EE6               	movwf	postinc1,c
 15710                           
 15711                           ;stkvar	_fmt @ sp[(-36)+-4]
 15712  013038  0ED8               	movlw	-40
 15713  01303A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15714  013040  0ED9               	movlw	-39
 15715  013042  006F FF8F FFDA     	movff	plusw1,fsr2h
 15716  013048  006F FF78  F00B    	movff	postinc2,btemp+10
 15717  01304E  006F FF74  F00C    	movff	postdec2,btemp+11
 15718  013054  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15719  01305A  0060  F033  FFE6   	movff	btemp+11,postinc1
 15720  013060  EC05  F0C3         	call	_strncmp	;wreg free
 15721  013064  5001               	movf	btemp^0,w,c
 15722  013066  1002               	iorwf	(btemp+1)^0,w,c
 15723  013068  A4D8               	btfss	status,2,c
 15724  01306A  D039               	goto	l13446
 15725                           
 15726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 15727                           ;stkvar	_fmt @ sp[(-32)+-4]
 15728  01306C  0EDC               	movlw	-36
 15729  01306E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15730  013074  0EDD               	movlw	-35
 15731  013076  006F FF8F FFDA     	movff	plusw1,fsr2h
 15732  01307C  0E02               	movlw	2
 15733  01307E  26DE               	addwf	postinc2,f,c
 15734  013080  0E00               	movlw	0
 15735  013082  22DD               	addwfc	postdec2,f,c
 15736                           
 15737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 15738                           ;stkvar	_ap @ sp[(-32)+-6]
 15739  013084  0EDA               	movlw	-38
 15740  013086  006F FF8F FFD9     	movff	plusw1,fsr2l
 15741  01308C  0EDB               	movlw	-37
 15742  01308E  006F FF8F FFDA     	movff	plusw1,fsr2h
 15743  013094  0E04               	movlw	4
 15744  013096  5EDE               	subwf	postinc2,f,c
 15745  013098  0E00               	movlw	0
 15746  01309A  5ADD               	subwfb	postdec2,f,c
 15747  01309C  006F FF78  F00B    	movff	postinc2,btemp+10
 15748  0130A2  006F FF74  F00C    	movff	postdec2,btemp+11
 15749  0130A8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15750  0130AE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15751  0130B4  006F FF78  F009    	movff	postinc2,btemp+8
 15752  0130BA  006F FF78  F00A    	movff	postinc2,btemp+9
 15753  0130C0  006F FF78  F00B    	movff	postinc2,btemp+10
 15754  0130C6  006F FF78  F00C    	movff	postinc2,btemp+11
 15755  0130CC  5009               	movf	(btemp+8)^0,w,c
 15756  0130CE  6E11               	movwf	(btemp+16)^0,c
 15757  0130D0  500A               	movf	(btemp+9)^0,w,c
 15758  0130D2  6E12               	movwf	(btemp+17)^0,c
 15759  0130D4  500B               	movf	(btemp+10)^0,w,c
 15760  0130D6  6E13               	movwf	(btemp+18)^0,c
 15761  0130D8  500C               	movf	(btemp+11)^0,w,c
 15762  0130DA  6E14               	movwf	(btemp+19)^0,c
 15763  0130DC  D758               	goto	L14
 15764  0130DE                     l13446:
 15765                           
 15766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 15767                           ;stkvar	_fmt @ sp[(-32)+-4]
 15768  0130DE  0EDC               	movlw	-36
 15769  0130E0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15770  0130E6  0EDD               	movlw	-35
 15771  0130E8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15772  0130EE  006F FF7B FFF6     	movff	postinc2,tblptrl
 15773  0130F4  006F FF77 FFF7     	movff	postdec2,tblptrh
 15774  0130FA                     	if	0	;tblptru may be non-zero
 15775  0130FA                     	endif
 15776  0130FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15777  0130FA  0E00               	movlw	low (__mediumconst shr (0+16))
 15778  0130FC  6EF8               	movwf	tblptru,c
 15779  0130FE                     	endif
 15780  0130FE  0008               	tblrd		*
 15781  013100  50F5               	movf	tablat,w,c
 15782  013102  0A78               	xorlw	120
 15783  013104  B4D8               	btfsc	status,2,c
 15784  013106  D015               	goto	u12900
 15785                           
 15786                           ;stkvar	_fmt @ sp[(-32)+-4]
 15787  013108  0EDC               	movlw	-36
 15788  01310A  006F FF8F FFD9     	movff	plusw1,fsr2l
 15789  013110  0EDD               	movlw	-35
 15790  013112  006F FF8F FFDA     	movff	plusw1,fsr2h
 15791  013118  006F FF7B FFF6     	movff	postinc2,tblptrl
 15792  01311E  006F FF77 FFF7     	movff	postdec2,tblptrh
 15793  013124                     	if	0	;tblptru may be non-zero
 15794  013124                     	endif
 15795  013124                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15796  013124  0E00               	movlw	low (__mediumconst shr (0+16))
 15797  013126  6EF8               	movwf	tblptru,c
 15798  013128                     	endif
 15799  013128  0008               	tblrd		*
 15800  01312A  50F5               	movf	tablat,w,c
 15801  01312C  0A58               	xorlw	88
 15802  01312E  A4D8               	btfss	status,2,c
 15803  013130  D094               	goto	l13460
 15804  013132                     u12900:
 15805                           
 15806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 15807                           ;stkvar	_fmt @ sp[(-32)+-4]
 15808  013132  0EDC               	movlw	-36
 15809  013134  006F FF8F FFD9     	movff	plusw1,fsr2l
 15810  01313A  0EDD               	movlw	-35
 15811  01313C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15812  013142  006F FF7B FFF6     	movff	postinc2,tblptrl
 15813  013148  006F FF77 FFF7     	movff	postdec2,tblptrh
 15814  01314E                     	if	0	;tblptru may be non-zero
 15815  01314E                     	endif
 15816  01314E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15817  01314E  0E00               	movlw	low (__mediumconst shr (0+16))
 15818  013150  6EF8               	movwf	tblptru,c
 15819  013152                     	endif
 15820                           
 15821                           ;stkvar	_c @ sp[(-32)+31]
 15822  013152  0008               	tblrd		*
 15823  013154  0EFF               	movlw	-1
 15824  013156  006F FFD7 FFE3     	movff	tablat,plusw1
 15825                           
 15826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 15827                           ;stkvar	_fmt @ sp[(-32)+-4]
 15828  01315C  0EDC               	movlw	-36
 15829  01315E  006F FF8F FFD9     	movff	plusw1,fsr2l
 15830  013164  0EDD               	movlw	-35
 15831  013166  006F FF8F FFDA     	movff	plusw1,fsr2h
 15832  01316C  2ADE               	incf	postinc2,f,c
 15833  01316E  0E00               	movlw	0
 15834  013170  22DD               	addwfc	postdec2,f,c
 15835                           
 15836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 15837                           ;stkvar	_ap @ sp[(-32)+-6]
 15838  013172  0EDA               	movlw	-38
 15839  013174  006F FF8F FFD9     	movff	plusw1,fsr2l
 15840  01317A  0EDB               	movlw	-37
 15841  01317C  006F FF8F FFDA     	movff	plusw1,fsr2h
 15842  013182  0E02               	movlw	2
 15843  013184  5EDE               	subwf	postinc2,f,c
 15844  013186  0E00               	movlw	0
 15845  013188  5ADD               	subwfb	postdec2,f,c
 15846  01318A  006F FF78  F00B    	movff	postinc2,btemp+10
 15847  013190  006F FF74  F00C    	movff	postdec2,btemp+11
 15848  013196  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 15849  01319C  0060  F033  FFDA   	movff	btemp+11,fsr2h
 15850  0131A2  006F FF78  F00B    	movff	postinc2,btemp+10
 15851  0131A8  006F FF74  F00C    	movff	postdec2,btemp+11
 15852  0131AE  500B               	movf	(btemp+10)^0,w,c
 15853  0131B0  6E11               	movwf	(btemp+16)^0,c
 15854  0131B2  500C               	movf	(btemp+11)^0,w,c
 15855  0131B4  6E12               	movwf	(btemp+17)^0,c
 15856  0131B6  6A13               	clrf	(btemp+18)^0,c
 15857  0131B8  6A14               	clrf	(btemp+19)^0,c
 15858  0131BA  6A15               	clrf	(btemp+20)^0,c
 15859  0131BC  6A16               	clrf	(btemp+21)^0,c
 15860  0131BE  6A17               	clrf	(btemp+22)^0,c
 15861  0131C0  6A18               	clrf	(btemp+23)^0,c
 15862                           
 15863                           ;stkvar	_llu @ sp[(-32)+6]
 15864  0131C2  0EE6               	movlw	-26
 15865  0131C4  0060  F047  FFE3   	movff	btemp+16,plusw1
 15866  0131CA  0EE7               	movlw	-25
 15867  0131CC  0060  F04B  FFE3   	movff	btemp+17,plusw1
 15868  0131D2  0EE8               	movlw	-24
 15869  0131D4  0060  F04F  FFE3   	movff	btemp+18,plusw1
 15870  0131DA  0EE9               	movlw	-23
 15871  0131DC  0060  F053  FFE3   	movff	btemp+19,plusw1
 15872  0131E2  0EEA               	movlw	-22
 15873  0131E4  0060  F057  FFE3   	movff	btemp+20,plusw1
 15874  0131EA  0EEB               	movlw	-21
 15875  0131EC  0060  F05B  FFE3   	movff	btemp+21,plusw1
 15876  0131F2  0EEC               	movlw	-20
 15877  0131F4  0060  F05F  FFE3   	movff	btemp+22,plusw1
 15878  0131FA  0EED               	movlw	-19
 15879  0131FC  0060  F063  FFE3   	movff	btemp+23,plusw1
 15880                           
 15881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 15882                           ;stkvar	_c @ sp[(-32)+31]
 15883  013202  0EFF               	movlw	-1
 15884  013204  50E3               	movf	plusw1,w,c
 15885  013206  6EE6               	movwf	postinc1,c
 15886                           
 15887                           ;stkvar	_llu @ sp[(-33)+6]
 15888  013208  50E1               	movf	fsr1l,w,c
 15889  01320A  0FE5               	addlw	-27
 15890  01320C  6ED9               	movwf	fsr2l,c
 15891  01320E  50E2               	movf	fsr1h,w,c
 15892  013210  6EDA               	movwf	fsr2h,c
 15893  013212  0EFF               	movlw	255
 15894  013214  22DA               	addwfc	fsr2h,f,c
 15895  013216  006F FF7B FFE6     	movff	postinc2,postinc1
 15896  01321C  006F FF7B FFE6     	movff	postinc2,postinc1
 15897  013222  006F FF7B FFE6     	movff	postinc2,postinc1
 15898  013228  006F FF7B FFE6     	movff	postinc2,postinc1
 15899  01322E  006F FF7B FFE6     	movff	postinc2,postinc1
 15900  013234  006F FF7B FFE6     	movff	postinc2,postinc1
 15901  01323A  006F FF7B FFE6     	movff	postinc2,postinc1
 15902  013240  006F FF7B FFE6     	movff	postinc2,postinc1
 15903                           
 15904                           ;stkvar	_fp @ sp[(-41)+-2]
 15905  013246  0ED5               	movlw	-43
 15906  013248  006F FF8F FFE6     	movff	plusw1,postinc1
 15907  01324E  006F FF8F FFE6     	movff	plusw1,postinc1
 15908  013254  EC3E  F0B3         	call	_xtoa	;wreg free
 15909  013258  D105               	goto	l2514
 15910  01325A                     l13460:
 15911                           
 15912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 15913  01325A  0E02               	movlw	2
 15914  01325C  6EE6               	movwf	postinc1,c
 15915  01325E  0E00               	movlw	0
 15916  013260  6EE6               	movwf	postinc1,c
 15917  013262  0EF6               	movlw	low STR_109
 15918  013264  6EE6               	movwf	postinc1,c
 15919  013266  0EFF               	movlw	high STR_109
 15920  013268  6EE6               	movwf	postinc1,c
 15921                           
 15922                           ;stkvar	_fmt @ sp[(-36)+-4]
 15923  01326A  0ED8               	movlw	-40
 15924  01326C  006F FF8F FFD9     	movff	plusw1,fsr2l
 15925  013272  0ED9               	movlw	-39
 15926  013274  006F FF8F FFDA     	movff	plusw1,fsr2h
 15927  01327A  006F FF78  F00B    	movff	postinc2,btemp+10
 15928  013280  006F FF74  F00C    	movff	postdec2,btemp+11
 15929  013286  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15930  01328C  0060  F033  FFE6   	movff	btemp+11,postinc1
 15931  013292  EC05  F0C3         	call	_strncmp	;wreg free
 15932  013296  5001               	movf	btemp^0,w,c
 15933  013298  1002               	iorwf	(btemp+1)^0,w,c
 15934  01329A  B4D8               	btfsc	status,2,c
 15935  01329C  D022               	goto	u12920
 15936  01329E  0E02               	movlw	2
 15937  0132A0  6EE6               	movwf	postinc1,c
 15938  0132A2  0E00               	movlw	0
 15939  0132A4  6EE6               	movwf	postinc1,c
 15940  0132A6  0EE7               	movlw	low STR_113
 15941  0132A8  6EE6               	movwf	postinc1,c
 15942  0132AA  0EFF               	movlw	high STR_113
 15943  0132AC  6EE6               	movwf	postinc1,c
 15944                           
 15945                           ;stkvar	_fmt @ sp[(-36)+-4]
 15946  0132AE  0ED8               	movlw	-40
 15947  0132B0  006F FF8F FFD9     	movff	plusw1,fsr2l
 15948  0132B6  0ED9               	movlw	-39
 15949  0132B8  006F FF8F FFDA     	movff	plusw1,fsr2h
 15950  0132BE  006F FF78  F00B    	movff	postinc2,btemp+10
 15951  0132C4  006F FF74  F00C    	movff	postdec2,btemp+11
 15952  0132CA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 15953  0132D0  0060  F033  FFE6   	movff	btemp+11,postinc1
 15954  0132D6  EC05  F0C3         	call	_strncmp	;wreg free
 15955  0132DA  5001               	movf	btemp^0,w,c
 15956  0132DC  1002               	iorwf	(btemp+1)^0,w,c
 15957  0132DE  A4D8               	btfss	status,2,c
 15958  0132E0  D058               	goto	l13474
 15959  0132E2                     u12920:
 15960                           
 15961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 15962                           ;stkvar	_fmt @ sp[(-32)+-4]
 15963  0132E2  0EDC               	movlw	-36
 15964  0132E4  006F FF8F FFD9     	movff	plusw1,fsr2l
 15965  0132EA  0EDD               	movlw	-35
 15966  0132EC  006F FF8F FFDA     	movff	plusw1,fsr2h
 15967  0132F2  006F FF78  F00B    	movff	postinc2,btemp+10
 15968  0132F8  006F FF74  F00C    	movff	postdec2,btemp+11
 15969  0132FE  0E01               	movlw	1
 15970  013300  260B               	addwf	(btemp+10)^0,f,c
 15971  013302  0E00               	movlw	0
 15972  013304  220C               	addwfc	(btemp+11)^0,f,c
 15973  013306  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 15974  01330C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 15975  013312                     	if	0	;tblptru may be non-zero
 15976  013312                     	endif
 15977  013312                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15978  013312  0E00               	movlw	low (__mediumconst shr (0+16))
 15979  013314  6EF8               	movwf	tblptru,c
 15980  013316                     	endif
 15981                           
 15982                           ;stkvar	_c @ sp[(-32)+31]
 15983  013316  0008               	tblrd		*
 15984  013318  0EFF               	movlw	-1
 15985  01331A  006F FFD7 FFE3     	movff	tablat,plusw1
 15986                           
 15987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 15988                           ;stkvar	_fmt @ sp[(-32)+-4]
 15989  013320  0EDC               	movlw	-36
 15990  013322  006F FF8F FFD9     	movff	plusw1,fsr2l
 15991  013328  0EDD               	movlw	-35
 15992  01332A  006F FF8F FFDA     	movff	plusw1,fsr2h
 15993  013330  0E02               	movlw	2
 15994  013332  26DE               	addwf	postinc2,f,c
 15995  013334  0E00               	movlw	0
 15996  013336  22DD               	addwfc	postdec2,f,c
 15997                           
 15998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 15999                           ;stkvar	_ap @ sp[(-32)+-6]
 16000  013338  0EDA               	movlw	-38
 16001  01333A  006F FF8F FFD9     	movff	plusw1,fsr2l
 16002  013340  0EDB               	movlw	-37
 16003  013342  006F FF8F FFDA     	movff	plusw1,fsr2h
 16004  013348  0E04               	movlw	4
 16005  01334A  5EDE               	subwf	postinc2,f,c
 16006  01334C  0E00               	movlw	0
 16007  01334E  5ADD               	subwfb	postdec2,f,c
 16008  013350  006F FF78  F00B    	movff	postinc2,btemp+10
 16009  013356  006F FF74  F00C    	movff	postdec2,btemp+11
 16010  01335C  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 16011  013362  0060  F033  FFDA   	movff	btemp+11,fsr2h
 16012  013368  006F FF78  F009    	movff	postinc2,btemp+8
 16013  01336E  006F FF78  F00A    	movff	postinc2,btemp+9
 16014  013374  006F FF78  F00B    	movff	postinc2,btemp+10
 16015  01337A  006F FF78  F00C    	movff	postinc2,btemp+11
 16016  013380  5009               	movf	(btemp+8)^0,w,c
 16017  013382  6E11               	movwf	(btemp+16)^0,c
 16018  013384  500A               	movf	(btemp+9)^0,w,c
 16019  013386  6E12               	movwf	(btemp+17)^0,c
 16020  013388  500B               	movf	(btemp+10)^0,w,c
 16021  01338A  6E13               	movwf	(btemp+18)^0,c
 16022  01338C  500C               	movf	(btemp+11)^0,w,c
 16023  01338E  6E14               	movwf	(btemp+19)^0,c
 16024  013390  D714               	goto	L15
 16025  013392                     l13474:
 16026                           
 16027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 16028                           ;stkvar	_fmt @ sp[(-32)+-4]
 16029  013392  0EDC               	movlw	-36
 16030  013394  006F FF8F FFD9     	movff	plusw1,fsr2l
 16031  01339A  0EDD               	movlw	-35
 16032  01339C  006F FF8F FFDA     	movff	plusw1,fsr2h
 16033  0133A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 16034  0133A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 16035  0133AE                     	if	0	;tblptru may be non-zero
 16036  0133AE                     	endif
 16037  0133AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16038  0133AE  0E00               	movlw	low (__mediumconst shr (0+16))
 16039  0133B0  6EF8               	movwf	tblptru,c
 16040  0133B2                     	endif
 16041  0133B2  0008               	tblrd		*
 16042  0133B4  50F5               	movf	tablat,w,c
 16043  0133B6  0A25               	xorlw	37
 16044  0133B8  A4D8               	btfss	status,2,c
 16045  0133BA  D01A               	goto	l13484
 16046                           
 16047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 16048                           ;stkvar	_fmt @ sp[(-32)+-4]
 16049  0133BC  0EDC               	movlw	-36
 16050  0133BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 16051  0133C4  0EDD               	movlw	-35
 16052  0133C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 16053  0133CC  2ADE               	incf	postinc2,f,c
 16054  0133CE  0E00               	movlw	0
 16055  0133D0  22DD               	addwfc	postdec2,f,c
 16056                           
 16057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 16058                           ;stkvar	_fp @ sp[(-32)+-2]
 16059  0133D2  0EDE               	movlw	-34
 16060  0133D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16061  0133DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16062  0133E0  0E25               	movlw	37
 16063  0133E2  6EE6               	movwf	postinc1,c
 16064  0133E4  0E00               	movlw	0
 16065  0133E6  6EE6               	movwf	postinc1,c
 16066  0133E8  EC60  F0D0         	call	_fputc	;wreg free
 16067  0133EC                     l13480:
 16068                           
 16069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 16070  0133EC  0E01               	movlw	1
 16071  0133EE  D00C               	goto	L16
 16072  0133F0                     l13484:
 16073                           
 16074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 16075                           ;stkvar	_fmt @ sp[(-32)+-4]
 16076  0133F0  0EDC               	movlw	-36
 16077  0133F2  006F FF8F FFD9     	movff	plusw1,fsr2l
 16078  0133F8  0EDD               	movlw	-35
 16079  0133FA  006F FF8F FFDA     	movff	plusw1,fsr2h
 16080  013400  2ADE               	incf	postinc2,f,c
 16081  013402  0E00               	movlw	0
 16082  013404  22DD               	addwfc	postdec2,f,c
 16083                           
 16084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 16085  013406  0E00               	movlw	0
 16086  013408                     L16:
 16087  013408  6E01               	movwf	btemp^0,c
 16088  01340A  0E00               	movlw	0
 16089  01340C  6E02               	movwf	(btemp+1)^0,c
 16090  01340E  D02A               	goto	l2514
 16091  013410                     l13490:
 16092                           
 16093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 16094                           ;stkvar	_fp @ sp[(-32)+-2]
 16095  013410  0EDE               	movlw	-34
 16096  013412  006F FF8F FFE6     	movff	plusw1,postinc1
 16097  013418  006F FF8F FFE6     	movff	plusw1,postinc1
 16098                           
 16099                           ;stkvar	_fmt @ sp[(-34)+-4]
 16100  01341E  0EDA               	movlw	-38
 16101  013420  006F FF8F FFD9     	movff	plusw1,fsr2l
 16102  013426  0EDB               	movlw	-37
 16103  013428  006F FF8F FFDA     	movff	plusw1,fsr2h
 16104  01342E  006F FF7B FFF6     	movff	postinc2,tblptrl
 16105  013434  006F FF77 FFF7     	movff	postdec2,tblptrh
 16106  01343A                     	if	0	;tblptru may be non-zero
 16107  01343A                     	endif
 16108  01343A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16109  01343A  0E00               	movlw	low (__mediumconst shr (0+16))
 16110  01343C  6EF8               	movwf	tblptru,c
 16111  01343E                     	endif
 16112  01343E  0008               	tblrd		*
 16113  013440  50F5               	movf	tablat,w,c
 16114  013442  6EE6               	movwf	postinc1,c
 16115  013444  0E00               	movlw	0
 16116  013446  6EE6               	movwf	postinc1,c
 16117  013448  EC60  F0D0         	call	_fputc	;wreg free
 16118                           
 16119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 16120                           ;stkvar	_fmt @ sp[(-32)+-4]
 16121  01344C  0EDC               	movlw	-36
 16122  01344E  006F FF8F FFD9     	movff	plusw1,fsr2l
 16123  013454  0EDD               	movlw	-35
 16124  013456  006F FF8F FFDA     	movff	plusw1,fsr2h
 16125  01345C  2ADE               	incf	postinc2,f,c
 16126  01345E  0E00               	movlw	0
 16127  013460  22DD               	addwfc	postdec2,f,c
 16128  013462  D7C4               	goto	l13480
 16129  013464                     l2514:
 16130                           
 16131                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 16132  013464  0EDA               	movlw	218
 16133  013466  26E1               	addwf	fsr1l,f,c
 16134  013468  0EFF               	movlw	255
 16135  01346A  22E2               	addwfc	fsr1h,f,c
 16136  01346C  0012               	return		;funcret
 16137  01346E                     __end_of_vfpfcnvrt:
 16138                           	opt callstack 0
 16139                           
 16140 ;; *************** function _xtoa *****************
 16141 ;; Defined at:
 16142 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16143 ;; Parameters:    Size  Location     Type
 16144 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16145 ;;		 -> f(6), NULL(0), 
 16146 ;;  d               8  [STACK] unsigned long long 
 16147 ;;  x               1  [STACK] unsigned char 
 16148 ;; Auto vars:     Size  Location     Type
 16149 ;;  n               8  [STACK] unsigned long long 
 16150 ;;  c               2  [STACK] int 
 16151 ;;  i               2  [STACK] int 
 16152 ;;  w               2  [STACK] int 
 16153 ;;  p               2  [STACK] int 
 16154 ;; Return value:  Size  Location     Type
 16155 ;;                  2  [STACK] int 
 16156 ;; Registers used:
 16157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 16158 ;; Tracked objects:
 16159 ;;		On entry : 0/0
 16160 ;;		On exit  : 0/0
 16161 ;;		Unchanged: 0/0
 16162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16167 ;;Total ram usage:        0 bytes
 16168 ;; Hardware stack levels used:    1
 16169 ;; Hardware stack levels required when called:   20
 16170 ;; This function calls:
 16171 ;;		_isalpha
 16172 ;;		_isupper
 16173 ;;		_pad
 16174 ;;		_toupper
 16175 ;; This function is called by:
 16176 ;;		_vfpfcnvrt
 16177 ;; This function uses a reentrant model
 16178 ;;
 16179                           
 16180                           	psect	text61
 16181  01667C                     __ptext61:
 16182                           	opt callstack 0
 16183  01667C                     _xtoa:
 16184                           	opt callstack 0
 16185                           
 16186                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16187  01667C  0E14               	movlw	20
 16188  01667E  26E1               	addwf	fsr1l,f,c
 16189  016680  0E00               	movlw	0
 16190  016682  22E2               	addwfc	fsr1h,f,c
 16191                           
 16192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 16193                           
 16194                           ;incstack = 0
 16195 ;; hardware stack exceeded
 16196  016684  AE3D               	btfss	(_prec+1)^0,7,c
 16197                           
 16198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 16199  016686  923E               	bcf	_flags^0,1,c
 16200                           
 16201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 16202  016688  BE3D               	btfsc	(_prec+1)^0,7,c
 16203  01668A  D005               	goto	u12460
 16204  01668C  503D               	movf	(_prec+1)^0,w,c
 16205  01668E  E110               	bnz	l13210
 16206  016690  043C               	decf	_prec^0,w,c
 16207  016692  B0D8               	btfsc	status,0,c
 16208  016694  D00D               	goto	l13210
 16209  016696                     u12460:
 16210  016696  0E01               	movlw	1
 16211  016698  6E0B               	movwf	(btemp+10)^0,c
 16212  01669A  0E00               	movlw	0
 16213  01669C  6E0C               	movwf	(btemp+11)^0,c
 16214                           
 16215                           ;stkvar	_p @ sp[(-20)+18]
 16216  01669E  0EFE               	movlw	-2
 16217  0166A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16218  0166A6  0EFF               	movlw	-1
 16219  0166A8  0060  F033  FFE3   	movff	btemp+11,plusw1
 16220  0166AE  D008               	goto	l2464
 16221  0166B0                     l13210:
 16222                           
 16223                           ;stkvar	_p @ sp[(-20)+18]
 16224  0166B0  0EFE               	movlw	-2
 16225  0166B2  0060  F0F3  FFE3   	movff	_prec,plusw1
 16226  0166B8  0EFF               	movlw	-1
 16227  0166BA  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 16228  0166C0                     l2464:
 16229                           
 16230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 16231                           ;stkvar	_w @ sp[(-20)+16]
 16232  0166C0  0EFC               	movlw	-4
 16233  0166C2  0060  F0EB  FFE3   	movff	_width,plusw1
 16234  0166C8  0EFD               	movlw	-3
 16235  0166CA  0060  F0EF  FFE3   	movff	_width+1,plusw1
 16236                           
 16237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 16238  0166D0  A83E               	btfss	_flags^0,4,c
 16239  0166D2  D00B               	goto	l13216
 16240                           
 16241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 16242                           ;stkvar	_w @ sp[(-20)+16]
 16243  0166D4  50E1               	movf	fsr1l,w,c
 16244  0166D6  0FFC               	addlw	-4
 16245  0166D8  6ED9               	movwf	fsr2l,c
 16246  0166DA  50E2               	movf	fsr1h,w,c
 16247  0166DC  6EDA               	movwf	fsr2h,c
 16248  0166DE  0EFF               	movlw	255
 16249  0166E0  22DA               	addwfc	fsr2h,f,c
 16250  0166E2  0EFE               	movlw	254
 16251  0166E4  26DE               	addwf	postinc2,f,c
 16252  0166E6  0EFF               	movlw	255
 16253  0166E8  22DD               	addwfc	postdec2,f,c
 16254  0166EA                     l13216:
 16255                           
 16256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 16257                           ;stkvar	_d @ sp[(-20)+-10]
 16258  0166EA  0EE2               	movlw	226
 16259  0166EC  24E1               	addwf	fsr1l,w,c
 16260  0166EE  6ED9               	movwf	fsr2l,c
 16261  0166F0  0EFF               	movlw	255
 16262  0166F2  20E2               	addwfc	fsr1h,w,c
 16263  0166F4  6EDA               	movwf	fsr2h,c
 16264                           
 16265                           ;stkvar	_n @ sp[(-20)+4]
 16266  0166F6  0E08               	movlw	8
 16267  0166F8  6E01               	movwf	btemp^0,c
 16268  0166FA  0EF0               	movlw	-16
 16269  0166FC                     us1248999:
 16270  0166FC  006F FF7B FFE3     	movff	postinc2,plusw1
 16271  016702  28E8               	incf	wreg,w,c
 16272  016704  2E01               	decfsz	btemp^0,f,c
 16273  016706  D7FA               	bra	us1248999
 16274                           
 16275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 16276  016708  0E4F               	movlw	79
 16277  01670A  6E0B               	movwf	(btemp+10)^0,c
 16278  01670C  0E00               	movlw	0
 16279  01670E  6E0C               	movwf	(btemp+11)^0,c
 16280                           
 16281                           ;stkvar	_i @ sp[(-20)+14]
 16282  016710  0EFA               	movlw	-6
 16283  016712  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16284  016718  0EFB               	movlw	-5
 16285  01671A  0060  F033  FFE3   	movff	btemp+11,plusw1
 16286                           
 16287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 16288  016720  0102               	movlb	2	; () banked
 16289  016722  6BE6               	clrf	(_dbuf+79)& (0+255),b
 16290                           
 16291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16292  016724  D0EE               	goto	l13254
 16293  016726                     l13222:
 16294                           
 16295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 16296                           ;stkvar	_i @ sp[(-20)+14]
 16297  016726  50E1               	movf	fsr1l,w,c
 16298  016728  0FFA               	addlw	-6
 16299  01672A  6ED9               	movwf	fsr2l,c
 16300  01672C  50E2               	movf	fsr1h,w,c
 16301  01672E  6EDA               	movwf	fsr2h,c
 16302  016730  0EFF               	movlw	255
 16303  016732  22DA               	addwfc	fsr2h,f,c
 16304  016734  06DE               	decf	postinc2,f,c
 16305  016736  0E00               	movlw	0
 16306  016738  5ADD               	subwfb	postdec2,f,c
 16307                           
 16308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 16309                           ;stkvar	_n @ sp[(-20)+4]
 16310  01673A  0EF0               	movlw	-16
 16311  01673C  006F FF8C  F00B    	movff	plusw1,btemp+10
 16312  016742  0EF1               	movlw	-15
 16313  016744  006F FF8C  F00C    	movff	plusw1,btemp+11
 16314  01674A  0E0F               	movlw	15
 16315  01674C  160B               	andwf	(btemp+10)^0,f,c
 16316  01674E  0E00               	movlw	0
 16317  016750  160C               	andwf	(btemp+11)^0,f,c
 16318                           
 16319                           ;stkvar	_c @ sp[(-20)+12]
 16320  016752  0EF8               	movlw	-8
 16321  016754  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16322  01675A  0EF9               	movlw	-7
 16323  01675C  0060  F033  FFE3   	movff	btemp+11,plusw1
 16324                           
 16325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 16326                           ;stkvar	_c @ sp[(-20)+12]
 16327  016762  0EF9               	movlw	-7
 16328  016764  BEE3               	btfsc	plusw1,7,c
 16329  016766  D00F               	goto	l13230
 16330  016768  0EF9               	movlw	-7
 16331  01676A  50E3               	movf	plusw1,w,c
 16332  01676C  E108               	bnz	u12490
 16333  01676E  0EF8               	movlw	-8
 16334  016770  006F FF8C  F001    	movff	plusw1,btemp
 16335  016776  0E0A               	movlw	10
 16336  016778  5E01               	subwf	btemp^0,f,c
 16337  01677A  A0D8               	btfss	status,0,c
 16338  01677C  D004               	goto	l13230
 16339  01677E                     u12490:
 16340                           
 16341                           ;stkvar	_c @ sp[(-20)+12]
 16342  01677E  0EF8               	movlw	-8
 16343  016780  50E3               	movf	plusw1,w,c
 16344  016782  0F57               	addlw	87
 16345  016784  D003               	goto	L17
 16346  016786                     l13230:
 16347                           
 16348                           ;stkvar	_c @ sp[(-20)+12]
 16349  016786  0EF8               	movlw	-8
 16350  016788  50E3               	movf	plusw1,w,c
 16351  01678A  0F30               	addlw	48
 16352  01678C                     L17:
 16353  01678C  6E0B               	movwf	(btemp+10)^0,c
 16354  01678E  0EF9               	movlw	-7
 16355  016790  006F FF8C  F00C    	movff	plusw1,btemp+11
 16356  016796  0E00               	movlw	0
 16357  016798  220C               	addwfc	(btemp+11)^0,f,c
 16358                           
 16359                           ;stkvar	_c @ sp[(-20)+12]
 16360  01679A  0EF8               	movlw	-8
 16361  01679C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16362  0167A2  0EF9               	movlw	-7
 16363  0167A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16364  0167AA  0EBF               	movlw	191
 16365  0167AC  6E0B               	movwf	(btemp+10)^0,c
 16366  0167AE  0EFF               	movlw	255
 16367  0167B0  6E0C               	movwf	(btemp+11)^0,c
 16368                           
 16369                           ;stkvar	_x @ sp[(-20)+-11]
 16370  0167B2  0EE1               	movlw	-31
 16371  0167B4  50E3               	movf	plusw1,w,c
 16372  0167B6  6E09               	movwf	(btemp+8)^0,c
 16373  0167B8  6A0A               	clrf	(btemp+9)^0,c
 16374  0167BA  500B               	movf	(btemp+10)^0,w,c
 16375  0167BC  2609               	addwf	(btemp+8)^0,f,c
 16376  0167BE  500C               	movf	(btemp+11)^0,w,c
 16377  0167C0  220A               	addwfc	(btemp+9)^0,f,c
 16378  0167C2  500A               	movf	(btemp+9)^0,w,c
 16379  0167C4  E106               	bnz	u12500
 16380  0167C6  0E1A               	movlw	26
 16381  0167C8  5C09               	subwf	(btemp+8)^0,w,c
 16382  0167CA  B0D8               	btfsc	status,0,c
 16383  0167CC  D002               	goto	u12500
 16384  0167CE  0E01               	movlw	1
 16385  0167D0  D001               	goto	u12510
 16386  0167D2                     u12500:
 16387  0167D2  0E00               	movlw	0
 16388  0167D4                     u12510:
 16389  0167D4  6E0B               	movwf	(btemp+10)^0,c
 16390  0167D6  6A0C               	clrf	(btemp+11)^0,c
 16391                           
 16392                           ;stkvar	_xtoa$6027 @ sp[(-20)+2]
 16393  0167D8  0EEE               	movlw	-18
 16394  0167DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16395  0167E0  0EEF               	movlw	-17
 16396  0167E2  0060  F033  FFE3   	movff	btemp+11,plusw1
 16397                           
 16398                           ;stkvar	_xtoa$6027 @ sp[(-20)+2]
 16399  0167E8  0EEE               	movlw	-18
 16400  0167EA  006F FF8C  F001    	movff	plusw1,btemp
 16401  0167F0  0EEF               	movlw	-17
 16402  0167F2  50E3               	movf	plusw1,w,c
 16403  0167F4  1001               	iorwf	btemp^0,w,c
 16404  0167F6  B4D8               	btfsc	status,2,c
 16405  0167F8  D041               	goto	l13246
 16406  0167FA  0E9F               	movlw	159
 16407  0167FC  6E0B               	movwf	(btemp+10)^0,c
 16408  0167FE  0EFF               	movlw	255
 16409  016800  6E0C               	movwf	(btemp+11)^0,c
 16410                           
 16411                           ;stkvar	_c @ sp[(-20)+12]
 16412  016802  0EF8               	movlw	-8
 16413  016804  006F FF8C  F009    	movff	plusw1,btemp+8
 16414  01680A  0EF9               	movlw	-7
 16415  01680C  006F FF8C  F00A    	movff	plusw1,btemp+9
 16416  016812  0E20               	movlw	32
 16417  016814  1209               	iorwf	(btemp+8)^0,f,c
 16418  016816  0E00               	movlw	0
 16419  016818  120A               	iorwf	(btemp+9)^0,f,c
 16420  01681A  500B               	movf	(btemp+10)^0,w,c
 16421  01681C  2609               	addwf	(btemp+8)^0,f,c
 16422  01681E  500C               	movf	(btemp+11)^0,w,c
 16423  016820  220A               	addwfc	(btemp+9)^0,f,c
 16424  016822  500A               	movf	(btemp+9)^0,w,c
 16425  016824  E106               	bnz	u12530
 16426  016826  0E1A               	movlw	26
 16427  016828  5C09               	subwf	(btemp+8)^0,w,c
 16428  01682A  B0D8               	btfsc	status,0,c
 16429  01682C  D002               	goto	u12530
 16430  01682E  0E01               	movlw	1
 16431  016830  D001               	goto	u12540
 16432  016832                     u12530:
 16433  016832  0E00               	movlw	0
 16434  016834                     u12540:
 16435  016834  6E0B               	movwf	(btemp+10)^0,c
 16436  016836  6A0C               	clrf	(btemp+11)^0,c
 16437                           
 16438                           ;stkvar	_xtoa$6028 @ sp[(-20)+0]
 16439  016838  0EEC               	movlw	-20
 16440  01683A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16441  016840  0EED               	movlw	-19
 16442  016842  0060  F033  FFE3   	movff	btemp+11,plusw1
 16443                           
 16444                           ;stkvar	_xtoa$6028 @ sp[(-20)+0]
 16445  016848  0EEC               	movlw	-20
 16446  01684A  006F FF8C  F001    	movff	plusw1,btemp
 16447  016850  0EED               	movlw	-19
 16448  016852  50E3               	movf	plusw1,w,c
 16449  016854  1001               	iorwf	btemp^0,w,c
 16450  016856  B4D8               	btfsc	status,2,c
 16451  016858  D011               	goto	l13246
 16452                           
 16453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 16454                           ;stkvar	_c @ sp[(-20)+12]
 16455  01685A  0EF8               	movlw	-8
 16456  01685C  006F FF8F FFE6     	movff	plusw1,postinc1
 16457  016862  006F FF8F FFE6     	movff	plusw1,postinc1
 16458  016868  ECFB  F0DB         	call	_toupper	;wreg free
 16459                           
 16460                           ;stkvar	_c @ sp[(-20)+12]
 16461  01686C  0EF8               	movlw	-8
 16462  01686E  0060  F007  FFE3   	movff	btemp,plusw1
 16463  016874  0EF9               	movlw	-7
 16464  016876  0060  F00B  FFE3   	movff	btemp+1,plusw1
 16465  01687C                     l13246:
 16466                           
 16467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 16468                           ;stkvar	_c @ sp[(-20)+12]
 16469                           ;stkvar	_i @ sp[(-20)+14]
 16470  01687C  0EFA               	movlw	-6
 16471  01687E  006F FF8C  F00B    	movff	plusw1,btemp+10
 16472  016884  0EFB               	movlw	-5
 16473  016886  006F FF8C  F00C    	movff	plusw1,btemp+11
 16474  01688C  0E97               	movlw	low _dbuf
 16475  01688E  240B               	addwf	(btemp+10)^0,w,c
 16476  016890  6ED9               	movwf	fsr2l,c
 16477  016892  0E02               	movlw	high _dbuf
 16478  016894  200C               	addwfc	(btemp+11)^0,w,c
 16479  016896  6EDA               	movwf	fsr2h,c
 16480  016898  0EF8               	movlw	-8
 16481  01689A  006F FF8F FFDF     	movff	plusw1,indf2
 16482                           
 16483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 16484                           ;stkvar	_p @ sp[(-20)+18]
 16485  0168A0  50E1               	movf	fsr1l,w,c
 16486  0168A2  0FFE               	addlw	-2
 16487  0168A4  6ED9               	movwf	fsr2l,c
 16488  0168A6  50E2               	movf	fsr1h,w,c
 16489  0168A8  6EDA               	movwf	fsr2h,c
 16490  0168AA  0EFF               	movlw	255
 16491  0168AC  22DA               	addwfc	fsr2h,f,c
 16492  0168AE  06DE               	decf	postinc2,f,c
 16493  0168B0  0E00               	movlw	0
 16494  0168B2  5ADD               	subwfb	postdec2,f,c
 16495                           
 16496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 16497                           ;stkvar	_w @ sp[(-20)+16]
 16498  0168B4  50E1               	movf	fsr1l,w,c
 16499  0168B6  0FFC               	addlw	-4
 16500  0168B8  6ED9               	movwf	fsr2l,c
 16501  0168BA  50E2               	movf	fsr1h,w,c
 16502  0168BC  6EDA               	movwf	fsr2h,c
 16503  0168BE  0EFF               	movlw	255
 16504  0168C0  22DA               	addwfc	fsr2h,f,c
 16505  0168C2  06DE               	decf	postinc2,f,c
 16506  0168C4  0E00               	movlw	0
 16507  0168C6  5ADD               	subwfb	postdec2,f,c
 16508                           
 16509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 16510  0168C8  0E04               	movlw	4
 16511  0168CA  6E0C               	movwf	(btemp+11)^0,c
 16512                           
 16513                           ;stkvar	_n @ sp[(-20)+4]
 16514  0168CC  50E1               	movf	fsr1l,w,c
 16515  0168CE  0FF0               	addlw	-16
 16516  0168D0  6ED9               	movwf	fsr2l,c
 16517  0168D2  50E2               	movf	fsr1h,w,c
 16518  0168D4  6EDA               	movwf	fsr2h,c
 16519  0168D6  0EFF               	movlw	255
 16520  0168D8  22DA               	addwfc	fsr2h,f,c
 16521  0168DA  280C               	incf	(btemp+11)^0,w,c
 16522  0168DC  52DE               	movf	postinc2,f,c
 16523  0168DE  D00F               	goto	u12560
 16524  0168E0                     u12565:
 16525  0168E0  52DE               	movf	postinc2,f,c
 16526  0168E2  52DE               	movf	postinc2,f,c
 16527  0168E4  52DE               	movf	postinc2,f,c
 16528  0168E6  52DE               	movf	postinc2,f,c
 16529  0168E8  52DE               	movf	postinc2,f,c
 16530  0168EA  52DE               	movf	postinc2,f,c
 16531  0168EC  90D8               	bcf	status,0,c
 16532  0168EE  32DD               	rrcf	postdec2,f,c
 16533  0168F0  32DD               	rrcf	postdec2,f,c
 16534  0168F2  32DD               	rrcf	postdec2,f,c
 16535  0168F4  32DD               	rrcf	postdec2,f,c
 16536  0168F6  32DD               	rrcf	postdec2,f,c
 16537  0168F8  32DD               	rrcf	postdec2,f,c
 16538  0168FA  32DD               	rrcf	postdec2,f,c
 16539  0168FC  32DE               	rrcf	postinc2,f,c
 16540  0168FE                     u12560:
 16541  0168FE  2EE8               	decfsz	wreg,f,c
 16542  016900  D7EF               	goto	u12565
 16543  016902                     l13254:
 16544                           
 16545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16546                           ;stkvar	_i @ sp[(-20)+14]
 16547  016902  0EFB               	movlw	-5
 16548  016904  BEE3               	btfsc	plusw1,7,c
 16549  016906  D03A               	goto	u12610
 16550  016908  0EFB               	movlw	-5
 16551  01690A  50E3               	movf	plusw1,w,c
 16552  01690C  E108               	bnz	u12570
 16553  01690E  0EFA               	movlw	-6
 16554  016910  006F FF8C  F001    	movff	plusw1,btemp
 16555  016916  0E02               	movlw	2
 16556  016918  5E01               	subwf	btemp^0,f,c
 16557  01691A  A0D8               	btfss	status,0,c
 16558  01691C  D02F               	goto	u12610
 16559  01691E                     u12570:
 16560                           
 16561                           ;stkvar	_n @ sp[(-20)+4]
 16562  01691E  0EF0               	movlw	-16
 16563  016920  50E3               	movf	plusw1,w,c
 16564  016922  E115               	bnz	u12581
 16565  016924  0EF1               	movlw	-15
 16566  016926  50E3               	movf	plusw1,w,c
 16567  016928  E112               	bnz	u12581
 16568  01692A  0EF2               	movlw	-14
 16569  01692C  50E3               	movf	plusw1,w,c
 16570  01692E  E10F               	bnz	u12581
 16571  016930  0EF3               	movlw	-13
 16572  016932  50E3               	movf	plusw1,w,c
 16573  016934  E10C               	bnz	u12581
 16574  016936  0EF4               	movlw	-12
 16575  016938  50E3               	movf	plusw1,w,c
 16576  01693A  E109               	bnz	u12581
 16577  01693C  0EF5               	movlw	-11
 16578  01693E  50E3               	movf	plusw1,w,c
 16579  016940  E106               	bnz	u12581
 16580  016942  0EF6               	movlw	-10
 16581  016944  50E3               	movf	plusw1,w,c
 16582  016946  E103               	bnz	u12581
 16583  016948  0EF7               	movlw	-9
 16584  01694A  50E3               	movf	plusw1,w,c
 16585  01694C  A4D8               	btfss	status,2,c
 16586  01694E                     u12581:
 16587  01694E  D6EB               	goto	l13222
 16588                           
 16589                           ;stkvar	_p @ sp[(-20)+18]
 16590  016950  0EFF               	movlw	-1
 16591  016952  BEE3               	btfsc	plusw1,7,c
 16592  016954  D007               	goto	u12590
 16593  016956  0EFF               	movlw	-1
 16594  016958  50E3               	movf	plusw1,w,c
 16595  01695A  E103               	bnz	u12591
 16596  01695C  0EFE               	movlw	-2
 16597  01695E  04E3               	decf	plusw1,w,c
 16598  016960  B0D8               	btfsc	status,0,c
 16599  016962                     u12591:
 16600  016962  D6E1               	goto	l13222
 16601  016964                     u12590:
 16602                           
 16603                           ;stkvar	_w @ sp[(-20)+16]
 16604  016964  0EFD               	movlw	-3
 16605  016966  BEE3               	btfsc	plusw1,7,c
 16606  016968  D009               	goto	u12610
 16607  01696A  0EFD               	movlw	-3
 16608  01696C  50E3               	movf	plusw1,w,c
 16609  01696E  E104               	bnz	u12600
 16610  016970  0EFC               	movlw	-4
 16611  016972  04E3               	decf	plusw1,w,c
 16612  016974  A0D8               	btfss	status,0,c
 16613  016976  D002               	goto	u12610
 16614  016978                     u12600:
 16615  016978  B23E               	btfsc	_flags^0,1,c
 16616  01697A  D6D5               	goto	l13222
 16617  01697C                     u12610:
 16618                           
 16619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 16620  01697C  A83E               	btfss	_flags^0,4,c
 16621  01697E  D036               	goto	l13270
 16622                           
 16623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 16624                           ;stkvar	_i @ sp[(-20)+14]
 16625  016980  50E1               	movf	fsr1l,w,c
 16626  016982  0FFA               	addlw	-6
 16627  016984  6ED9               	movwf	fsr2l,c
 16628  016986  50E2               	movf	fsr1h,w,c
 16629  016988  6EDA               	movwf	fsr2h,c
 16630  01698A  0EFF               	movlw	255
 16631  01698C  22DA               	addwfc	fsr2h,f,c
 16632  01698E  06DE               	decf	postinc2,f,c
 16633  016990  0E00               	movlw	0
 16634  016992  5ADD               	subwfb	postdec2,f,c
 16635                           
 16636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 16637                           ;stkvar	_x @ sp[(-20)+-11]
 16638                           ;stkvar	_i @ sp[(-20)+14]
 16639  016994  0EFA               	movlw	-6
 16640  016996  006F FF8C  F00B    	movff	plusw1,btemp+10
 16641  01699C  0EFB               	movlw	-5
 16642  01699E  006F FF8C  F00C    	movff	plusw1,btemp+11
 16643  0169A4  0E97               	movlw	low _dbuf
 16644  0169A6  240B               	addwf	(btemp+10)^0,w,c
 16645  0169A8  6ED9               	movwf	fsr2l,c
 16646  0169AA  0E02               	movlw	high _dbuf
 16647  0169AC  200C               	addwfc	(btemp+11)^0,w,c
 16648  0169AE  6EDA               	movwf	fsr2h,c
 16649  0169B0  0EE1               	movlw	-31
 16650  0169B2  006F FF8F FFDF     	movff	plusw1,indf2
 16651                           
 16652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 16653                           ;stkvar	_i @ sp[(-20)+14]
 16654  0169B8  50E1               	movf	fsr1l,w,c
 16655  0169BA  0FFA               	addlw	-6
 16656  0169BC  6ED9               	movwf	fsr2l,c
 16657  0169BE  50E2               	movf	fsr1h,w,c
 16658  0169C0  6EDA               	movwf	fsr2h,c
 16659  0169C2  0EFF               	movlw	255
 16660  0169C4  22DA               	addwfc	fsr2h,f,c
 16661  0169C6  06DE               	decf	postinc2,f,c
 16662  0169C8  0E00               	movlw	0
 16663  0169CA  5ADD               	subwfb	postdec2,f,c
 16664                           
 16665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 16666                           ;stkvar	_i @ sp[(-20)+14]
 16667  0169CC  0EFA               	movlw	-6
 16668  0169CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 16669  0169D4  0EFB               	movlw	-5
 16670  0169D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 16671  0169DC  0E97               	movlw	low _dbuf
 16672  0169DE  240B               	addwf	(btemp+10)^0,w,c
 16673  0169E0  6ED9               	movwf	fsr2l,c
 16674  0169E2  0E02               	movlw	high _dbuf
 16675  0169E4  200C               	addwfc	(btemp+11)^0,w,c
 16676  0169E6  6EDA               	movwf	fsr2h,c
 16677  0169E8  0E30               	movlw	48
 16678  0169EA  6EDF               	movwf	indf2,c
 16679  0169EC                     l13270:
 16680                           
 16681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 16682                           ;stkvar	_w @ sp[(-20)+16]
 16683  0169EC  0EFC               	movlw	-4
 16684  0169EE  006F FF8F FFE6     	movff	plusw1,postinc1
 16685  0169F4  006F FF8F FFE6     	movff	plusw1,postinc1
 16686                           
 16687                           ;stkvar	_i @ sp[(-22)+14]
 16688  0169FA  0E97               	movlw	low _dbuf
 16689  0169FC  6E0B               	movwf	(btemp+10)^0,c
 16690  0169FE  0E02               	movlw	high _dbuf
 16691  016A00  6E0C               	movwf	(btemp+11)^0,c
 16692  016A02  0EF8               	movlw	-8
 16693  016A04  50E3               	movf	plusw1,w,c
 16694  016A06  260B               	addwf	(btemp+10)^0,f,c
 16695  016A08  0EF9               	movlw	-7
 16696  016A0A  50E3               	movf	plusw1,w,c
 16697  016A0C  220C               	addwfc	(btemp+11)^0,f,c
 16698  016A0E  0060  F02F  FFE6   	movff	btemp+10,postinc1
 16699  016A14  0060  F033  FFE6   	movff	btemp+11,postinc1
 16700                           
 16701                           ;stkvar	_fp @ sp[(-24)+-2]
 16702  016A1A  0EE6               	movlw	-26
 16703  016A1C  006F FF8F FFE6     	movff	plusw1,postinc1
 16704  016A22  006F FF8F FFE6     	movff	plusw1,postinc1
 16705  016A28  EC0A  F0D2         	call	_pad	;wreg free
 16706                           
 16707                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 16708  016A2C  0EE1               	movlw	225
 16709  016A2E  26E1               	addwf	fsr1l,f,c
 16710  016A30  0EFF               	movlw	255
 16711  016A32  22E2               	addwfc	fsr1h,f,c
 16712  016A34  0012               	return		;funcret
 16713  016A36                     __end_of_xtoa:
 16714                           	opt callstack 0
 16715                           
 16716 ;; *************** function _toupper *****************
 16717 ;; Defined at:
 16718 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 16719 ;; Parameters:    Size  Location     Type
 16720 ;;  c               2  [STACK] int 
 16721 ;; Auto vars:     Size  Location     Type
 16722 ;;		None
 16723 ;; Return value:  Size  Location     Type
 16724 ;;                  2  [STACK] int 
 16725 ;; Registers used:
 16726 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 16727 ;; Tracked objects:
 16728 ;;		On entry : 0/2
 16729 ;;		On exit  : 0/0
 16730 ;;		Unchanged: 0/0
 16731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16736 ;;Total ram usage:        0 bytes
 16737 ;; Hardware stack levels used:    1
 16738 ;; Hardware stack levels required when called:   16
 16739 ;; This function calls:
 16740 ;;		_islower
 16741 ;; This function is called by:
 16742 ;;		_xtoa
 16743 ;; This function uses a reentrant model
 16744 ;;
 16745                           
 16746                           	psect	text62
 16747  01B7F6                     __ptext62:
 16748                           	opt callstack 0
 16749  01B7F6                     _toupper:
 16750                           	opt callstack 0
 16751                           
 16752                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16753  01B7F6  52E6               	movf	postinc1,f,c
 16754  01B7F8  52E6               	movf	postinc1,f,c
 16755                           
 16756                           ;stkvar	_c @ sp[(-2)+-2]
 16757                           
 16758                           ;incstack = 0
 16759 ;; hardware stack exceeded
 16760  01B7FA  0EFC               	movlw	-4
 16761  01B7FC  50E3               	movf	plusw1,w,c
 16762  01B7FE  0F9F               	addlw	159
 16763  01B800  6E0B               	movwf	(btemp+10)^0,c
 16764  01B802  0EFD               	movlw	-3
 16765  01B804  006F FF8C  F00C    	movff	plusw1,btemp+11
 16766  01B80A  0EFF               	movlw	255
 16767  01B80C  220C               	addwfc	(btemp+11)^0,f,c
 16768  01B80E  500C               	movf	(btemp+11)^0,w,c
 16769  01B810  E106               	bnz	u6580
 16770  01B812  0E1A               	movlw	26
 16771  01B814  5C0B               	subwf	(btemp+10)^0,w,c
 16772  01B816  B0D8               	btfsc	status,0,c
 16773  01B818  D002               	goto	u6580
 16774  01B81A  0E01               	movlw	1
 16775  01B81C  D001               	goto	u6590
 16776  01B81E                     u6580:
 16777  01B81E  0E00               	movlw	0
 16778  01B820                     u6590:
 16779  01B820  6E0B               	movwf	(btemp+10)^0,c
 16780  01B822  6A0C               	clrf	(btemp+11)^0,c
 16781                           
 16782                           ;stkvar	_toupper$6834 @ sp[(-2)+0]
 16783  01B824  0EFE               	movlw	-2
 16784  01B826  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16785  01B82C  0EFF               	movlw	-1
 16786  01B82E  0060  F033  FFE3   	movff	btemp+11,plusw1
 16787                           
 16788                           ;stkvar	_toupper$6834 @ sp[(-2)+0]
 16789  01B834  0EFE               	movlw	-2
 16790  01B836  006F FF8C  F001    	movff	plusw1,btemp
 16791  01B83C  0EFF               	movlw	-1
 16792  01B83E  50E3               	movf	plusw1,w,c
 16793  01B840  1001               	iorwf	btemp^0,w,c
 16794  01B842  B4D8               	btfsc	status,2,c
 16795  01B844  D00D               	goto	l8584
 16796                           
 16797                           ;stkvar	_c @ sp[(-2)+-2]
 16798  01B846  0EFC               	movlw	-4
 16799  01B848  006F FF8C  F001    	movff	plusw1,btemp
 16800  01B84E  0EFD               	movlw	-3
 16801  01B850  006F FF8C  F002    	movff	plusw1,btemp+1
 16802  01B856  0E5F               	movlw	95
 16803  01B858  1601               	andwf	btemp^0,f,c
 16804  01B85A  0E00               	movlw	0
 16805  01B85C  1602               	andwf	(btemp+1)^0,f,c
 16806  01B85E  D008               	goto	l3631
 16807  01B860                     l8584:
 16808                           
 16809                           ;stkvar	_c @ sp[(-2)+-2]
 16810  01B860  0EFC               	movlw	-4
 16811  01B862  006F FF8C  F001    	movff	plusw1,btemp
 16812  01B868  0EFD               	movlw	-3
 16813  01B86A  006F FF8C  F002    	movff	plusw1,btemp+1
 16814  01B870                     l3631:
 16815                           
 16816                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16817  01B870  52E5               	movf	postdec1,f,c
 16818  01B872  52E5               	movf	postdec1,f,c
 16819  01B874  52E5               	movf	postdec1,f,c
 16820  01B876  52E5               	movf	postdec1,f,c
 16821  01B878  0012               	return		;funcret
 16822  01B87A                     __end_of_toupper:
 16823                           	opt callstack 0
 16824                           
 16825 ;; *************** function _islower *****************
 16826 ;; Defined at:
 16827 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 16828 ;; Parameters:    Size  Location     Type
 16829 ;;  c               2  [STACK] int 
 16830 ;; Auto vars:     Size  Location     Type
 16831 ;;		None
 16832 ;; Return value:  Size  Location     Type
 16833 ;;                  2  [STACK] int 
 16834 ;; Registers used:
 16835 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 16836 ;; Tracked objects:
 16837 ;;		On entry : 0/0
 16838 ;;		On exit  : 0/0
 16839 ;;		Unchanged: 0/0
 16840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16845 ;;Total ram usage:        0 bytes
 16846 ;; Hardware stack levels used:    1
 16847 ;; Hardware stack levels required when called:   15
 16848 ;; This function calls:
 16849 ;;		Nothing
 16850 ;; This function is called by:
 16851 ;;		_toupper
 16852 ;; This function uses a reentrant model
 16853 ;;
 16854                           
 16855                           	psect	text63
 16856  01C7EA                     __ptext63:
 16857                           	opt callstack 0
 16858  01C7EA                     _islower:
 16859                           	opt callstack 0
 16860                           
 16861                           ;stkvar	_c @ sp[(0)+-2]
 16862                           
 16863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16864                           ;incstack = 0
 16865 ;; hardware stack exceeded
 16866  01C7EA  0EFE               	movlw	-2
 16867  01C7EC  50E3               	movf	plusw1,w,c
 16868  01C7EE  0F9F               	addlw	159
 16869  01C7F0  6E0B               	movwf	(btemp+10)^0,c
 16870  01C7F2  0EFF               	movlw	-1
 16871  01C7F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 16872  01C7FA  0EFF               	movlw	255
 16873  01C7FC  220C               	addwfc	(btemp+11)^0,f,c
 16874  01C7FE  500C               	movf	(btemp+11)^0,w,c
 16875  01C800  E106               	bnz	u6220
 16876  01C802  0E1A               	movlw	26
 16877  01C804  5C0B               	subwf	(btemp+10)^0,w,c
 16878  01C806  B0D8               	btfsc	status,0,c
 16879  01C808  D002               	goto	u6220
 16880  01C80A  0E01               	movlw	1
 16881  01C80C  D001               	goto	u6230
 16882  01C80E                     u6220:
 16883  01C80E  0E00               	movlw	0
 16884  01C810                     u6230:
 16885  01C810  6E01               	movwf	btemp^0,c
 16886  01C812  6A02               	clrf	(btemp+1)^0,c
 16887                           
 16888                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16889  01C814  52E5               	movf	postdec1,f,c
 16890  01C816  52E5               	movf	postdec1,f,c
 16891  01C818  0012               	return		;funcret
 16892  01C81A                     __end_of_islower:
 16893                           	opt callstack 0
 16894                           
 16895 ;; *************** function _isalpha *****************
 16896 ;; Defined at:
 16897 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 16898 ;; Parameters:    Size  Location     Type
 16899 ;;  c               2  [STACK] int 
 16900 ;; Auto vars:     Size  Location     Type
 16901 ;;		None
 16902 ;; Return value:  Size  Location     Type
 16903 ;;                  2  [STACK] int 
 16904 ;; Registers used:
 16905 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 16906 ;; Tracked objects:
 16907 ;;		On entry : 0/0
 16908 ;;		On exit  : 0/0
 16909 ;;		Unchanged: 0/0
 16910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16915 ;;Total ram usage:        0 bytes
 16916 ;; Hardware stack levels used:    1
 16917 ;; Hardware stack levels required when called:   15
 16918 ;; This function calls:
 16919 ;;		Nothing
 16920 ;; This function is called by:
 16921 ;;		_xtoa
 16922 ;; This function uses a reentrant model
 16923 ;;
 16924                           
 16925                           	psect	text64
 16926  01C39A                     __ptext64:
 16927                           	opt callstack 0
 16928  01C39A                     _isalpha:
 16929                           	opt callstack 0
 16930                           
 16931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16932                           ;incstack = 0
 16933 ;; hardware stack exceeded
 16934  01C39A  0E9F               	movlw	159
 16935  01C39C  6E0B               	movwf	(btemp+10)^0,c
 16936  01C39E  0EFF               	movlw	255
 16937  01C3A0  6E0C               	movwf	(btemp+11)^0,c
 16938                           
 16939                           ;stkvar	_c @ sp[(0)+-2]
 16940  01C3A2  0EFE               	movlw	-2
 16941  01C3A4  006F FF8C  F009    	movff	plusw1,btemp+8
 16942  01C3AA  0EFF               	movlw	-1
 16943  01C3AC  006F FF8C  F00A    	movff	plusw1,btemp+9
 16944  01C3B2  0E20               	movlw	32
 16945  01C3B4  1209               	iorwf	(btemp+8)^0,f,c
 16946  01C3B6  0E00               	movlw	0
 16947  01C3B8  120A               	iorwf	(btemp+9)^0,f,c
 16948  01C3BA  500B               	movf	(btemp+10)^0,w,c
 16949  01C3BC  2609               	addwf	(btemp+8)^0,f,c
 16950  01C3BE  500C               	movf	(btemp+11)^0,w,c
 16951  01C3C0  220A               	addwfc	(btemp+9)^0,f,c
 16952  01C3C2  500A               	movf	(btemp+9)^0,w,c
 16953  01C3C4  E106               	bnz	u6560
 16954  01C3C6  0E1A               	movlw	26
 16955  01C3C8  5C09               	subwf	(btemp+8)^0,w,c
 16956  01C3CA  B0D8               	btfsc	status,0,c
 16957  01C3CC  D002               	goto	u6560
 16958  01C3CE  0E01               	movlw	1
 16959  01C3D0  D001               	goto	u6570
 16960  01C3D2                     u6560:
 16961  01C3D2  0E00               	movlw	0
 16962  01C3D4                     u6570:
 16963  01C3D4  6E01               	movwf	btemp^0,c
 16964  01C3D6  6A02               	clrf	(btemp+1)^0,c
 16965                           
 16966                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 16967  01C3D8  52E5               	movf	postdec1,f,c
 16968  01C3DA  52E5               	movf	postdec1,f,c
 16969  01C3DC  0012               	return		;funcret
 16970  01C3DE                     __end_of_isalpha:
 16971                           	opt callstack 0
 16972                           
 16973 ;; *************** function _utoa *****************
 16974 ;; Defined at:
 16975 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16976 ;; Parameters:    Size  Location     Type
 16977 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16978 ;;		 -> f(6), NULL(0), 
 16979 ;;  d               8  [STACK] unsigned long long 
 16980 ;; Auto vars:     Size  Location     Type
 16981 ;;  n               8  [STACK] unsigned long long 
 16982 ;;  i               2  [STACK] int 
 16983 ;;  w               2  [STACK] int 
 16984 ;;  p               2  [STACK] int 
 16985 ;; Return value:  Size  Location     Type
 16986 ;;                  2  [STACK] int 
 16987 ;; Registers used:
 16988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16989 ;; Tracked objects:
 16990 ;;		On entry : 0/0
 16991 ;;		On exit  : 0/0
 16992 ;;		Unchanged: 0/0
 16993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16998 ;;Total ram usage:        0 bytes
 16999 ;; Hardware stack levels used:    1
 17000 ;; Hardware stack levels required when called:   20
 17001 ;; This function calls:
 17002 ;;		___lodiv
 17003 ;;		___lomod
 17004 ;;		_pad
 17005 ;; This function is called by:
 17006 ;;		_vfpfcnvrt
 17007 ;; This function uses a reentrant model
 17008 ;;
 17009                           
 17010                           	psect	text65
 17011  016DA2                     __ptext65:
 17012                           	opt callstack 0
 17013  016DA2                     _utoa:
 17014                           	opt callstack 0
 17015                           
 17016                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17017  016DA2  0E0E               	movlw	14
 17018  016DA4  26E1               	addwf	fsr1l,f,c
 17019  016DA6  0E00               	movlw	0
 17020  016DA8  22E2               	addwfc	fsr1h,f,c
 17021                           
 17022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 17023                           
 17024                           ;incstack = 0
 17025 ;; hardware stack exceeded
 17026  016DAA  AE3D               	btfss	(_prec+1)^0,7,c
 17027                           
 17028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 17029  016DAC  923E               	bcf	_flags^0,1,c
 17030                           
 17031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 17032  016DAE  BE3D               	btfsc	(_prec+1)^0,7,c
 17033  016DB0  D005               	goto	u12380
 17034  016DB2  503D               	movf	(_prec+1)^0,w,c
 17035  016DB4  E110               	bnz	l13170
 17036  016DB6  043C               	decf	_prec^0,w,c
 17037  016DB8  B0D8               	btfsc	status,0,c
 17038  016DBA  D00D               	goto	l13170
 17039  016DBC                     u12380:
 17040  016DBC  0E01               	movlw	1
 17041  016DBE  6E0B               	movwf	(btemp+10)^0,c
 17042  016DC0  0E00               	movlw	0
 17043  016DC2  6E0C               	movwf	(btemp+11)^0,c
 17044                           
 17045                           ;stkvar	_p @ sp[(-14)+12]
 17046  016DC4  0EFE               	movlw	-2
 17047  016DC6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17048  016DCC  0EFF               	movlw	-1
 17049  016DCE  0060  F033  FFE3   	movff	btemp+11,plusw1
 17050  016DD4  D008               	goto	l2449
 17051  016DD6                     l13170:
 17052                           
 17053                           ;stkvar	_p @ sp[(-14)+12]
 17054  016DD6  0EFE               	movlw	-2
 17055  016DD8  0060  F0F3  FFE3   	movff	_prec,plusw1
 17056  016DDE  0EFF               	movlw	-1
 17057  016DE0  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 17058  016DE6                     l2449:
 17059                           
 17060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 17061                           ;stkvar	_w @ sp[(-14)+10]
 17062  016DE6  0EFC               	movlw	-4
 17063  016DE8  0060  F0EB  FFE3   	movff	_width,plusw1
 17064  016DEE  0EFD               	movlw	-3
 17065  016DF0  0060  F0EF  FFE3   	movff	_width+1,plusw1
 17066                           
 17067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 17068                           ;stkvar	_d @ sp[(-14)+-10]
 17069  016DF6  0EE8               	movlw	232
 17070  016DF8  24E1               	addwf	fsr1l,w,c
 17071  016DFA  6ED9               	movwf	fsr2l,c
 17072  016DFC  0EFF               	movlw	255
 17073  016DFE  20E2               	addwfc	fsr1h,w,c
 17074  016E00  6EDA               	movwf	fsr2h,c
 17075                           
 17076                           ;stkvar	_n @ sp[(-14)+0]
 17077  016E02  0E08               	movlw	8
 17078  016E04  6E01               	movwf	btemp^0,c
 17079  016E06  0EF2               	movlw	-14
 17080  016E08                     us1239999:
 17081  016E08  006F FF7B FFE3     	movff	postinc2,plusw1
 17082  016E0E  28E8               	incf	wreg,w,c
 17083  016E10  2E01               	decfsz	btemp^0,f,c
 17084  016E12  D7FA               	bra	us1239999
 17085                           
 17086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 17087  016E14  0E4F               	movlw	79
 17088  016E16  6E0B               	movwf	(btemp+10)^0,c
 17089  016E18  0E00               	movlw	0
 17090  016E1A  6E0C               	movwf	(btemp+11)^0,c
 17091                           
 17092                           ;stkvar	_i @ sp[(-14)+8]
 17093  016E1C  0EFA               	movlw	-6
 17094  016E1E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17095  016E24  0EFB               	movlw	-5
 17096  016E26  0060  F033  FFE3   	movff	btemp+11,plusw1
 17097                           
 17098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 17099  016E2C  0102               	movlb	2	; () banked
 17100  016E2E  6BE6               	clrf	(_dbuf+79)& (0+255),b
 17101                           
 17102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 17103  016E30  D0FB               	goto	l13188
 17104  016E32                     l13178:
 17105                           
 17106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 17107                           ;stkvar	_i @ sp[(-14)+8]
 17108  016E32  50E1               	movf	fsr1l,w,c
 17109  016E34  0FFA               	addlw	-6
 17110  016E36  6ED9               	movwf	fsr2l,c
 17111  016E38  50E2               	movf	fsr1h,w,c
 17112  016E3A  6EDA               	movwf	fsr2h,c
 17113  016E3C  0EFF               	movlw	255
 17114  016E3E  22DA               	addwfc	fsr2h,f,c
 17115  016E40  06DE               	decf	postinc2,f,c
 17116  016E42  0E00               	movlw	0
 17117  016E44  5ADD               	subwfb	postdec2,f,c
 17118                           
 17119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 17120  016E46  0E0A               	movlw	10
 17121  016E48  6EE6               	movwf	postinc1,c
 17122  016E4A  0E00               	movlw	0
 17123  016E4C  6EE6               	movwf	postinc1,c
 17124  016E4E  0E00               	movlw	0
 17125  016E50  6EE6               	movwf	postinc1,c
 17126  016E52  0E00               	movlw	0
 17127  016E54  6EE6               	movwf	postinc1,c
 17128  016E56  0E00               	movlw	0
 17129  016E58  6EE6               	movwf	postinc1,c
 17130  016E5A  0E00               	movlw	0
 17131  016E5C  6EE6               	movwf	postinc1,c
 17132  016E5E  0E00               	movlw	0
 17133  016E60  6EE6               	movwf	postinc1,c
 17134  016E62  0E00               	movlw	0
 17135  016E64  6EE6               	movwf	postinc1,c
 17136                           
 17137                           ;stkvar	_n @ sp[(-22)+0]
 17138  016E66  50E1               	movf	fsr1l,w,c
 17139  016E68  0FEA               	addlw	-22
 17140  016E6A  6ED9               	movwf	fsr2l,c
 17141  016E6C  50E2               	movf	fsr1h,w,c
 17142  016E6E  6EDA               	movwf	fsr2h,c
 17143  016E70  0EFF               	movlw	255
 17144  016E72  22DA               	addwfc	fsr2h,f,c
 17145  016E74  006F FF7B FFE6     	movff	postinc2,postinc1
 17146  016E7A  006F FF7B FFE6     	movff	postinc2,postinc1
 17147  016E80  006F FF7B FFE6     	movff	postinc2,postinc1
 17148  016E86  006F FF7B FFE6     	movff	postinc2,postinc1
 17149  016E8C  006F FF7B FFE6     	movff	postinc2,postinc1
 17150  016E92  006F FF7B FFE6     	movff	postinc2,postinc1
 17151  016E98  006F FF7B FFE6     	movff	postinc2,postinc1
 17152  016E9E  006F FF7B FFE6     	movff	postinc2,postinc1
 17153  016EA4  EC8D  F0CE         	call	___lomod	;wreg free
 17154  016EA8  52E5               	movf	postdec1,f,c
 17155  016EAA  006F FF9C  F018    	movff	indf1,btemp+23
 17156  016EB0  52E5               	movf	postdec1,f,c
 17157  016EB2  006F FF9C  F017    	movff	indf1,btemp+22
 17158  016EB8  52E5               	movf	postdec1,f,c
 17159  016EBA  006F FF9C  F016    	movff	indf1,btemp+21
 17160  016EC0  52E5               	movf	postdec1,f,c
 17161  016EC2  006F FF9C  F015    	movff	indf1,btemp+20
 17162  016EC8  52E5               	movf	postdec1,f,c
 17163  016ECA  006F FF9C  F014    	movff	indf1,btemp+19
 17164  016ED0  52E5               	movf	postdec1,f,c
 17165  016ED2  006F FF9C  F013    	movff	indf1,btemp+18
 17166  016ED8  52E5               	movf	postdec1,f,c
 17167  016EDA  006F FF9C  F012    	movff	indf1,btemp+17
 17168  016EE0  52E5               	movf	postdec1,f,c
 17169  016EE2  006F FF9C  F011    	movff	indf1,btemp+16
 17170  016EE8  0EF8               	movlw	248
 17171  016EEA  26E1               	addwf	fsr1l,f,c
 17172  016EEC  0EFF               	movlw	255
 17173  016EEE  22E2               	addwfc	fsr1h,f,c
 17174  016EF0  0E30               	movlw	48
 17175  016EF2  2611               	addwf	(btemp+16)^0,f,c
 17176                           
 17177                           ;stkvar	_i @ sp[(-14)+8]
 17178  016EF4  0EFA               	movlw	-6
 17179  016EF6  006F FF8C  F00B    	movff	plusw1,btemp+10
 17180  016EFC  0EFB               	movlw	-5
 17181  016EFE  006F FF8C  F00C    	movff	plusw1,btemp+11
 17182  016F04  0E97               	movlw	low _dbuf
 17183  016F06  240B               	addwf	(btemp+10)^0,w,c
 17184  016F08  6ED9               	movwf	fsr2l,c
 17185  016F0A  0E02               	movlw	high _dbuf
 17186  016F0C  200C               	addwfc	(btemp+11)^0,w,c
 17187  016F0E  6EDA               	movwf	fsr2h,c
 17188  016F10  0060  F047  FFDF   	movff	btemp+16,indf2
 17189                           
 17190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 17191                           ;stkvar	_p @ sp[(-14)+12]
 17192  016F16  50E1               	movf	fsr1l,w,c
 17193  016F18  0FFE               	addlw	-2
 17194  016F1A  6ED9               	movwf	fsr2l,c
 17195  016F1C  50E2               	movf	fsr1h,w,c
 17196  016F1E  6EDA               	movwf	fsr2h,c
 17197  016F20  0EFF               	movlw	255
 17198  016F22  22DA               	addwfc	fsr2h,f,c
 17199  016F24  06DE               	decf	postinc2,f,c
 17200  016F26  0E00               	movlw	0
 17201  016F28  5ADD               	subwfb	postdec2,f,c
 17202                           
 17203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 17204                           ;stkvar	_w @ sp[(-14)+10]
 17205  016F2A  50E1               	movf	fsr1l,w,c
 17206  016F2C  0FFC               	addlw	-4
 17207  016F2E  6ED9               	movwf	fsr2l,c
 17208  016F30  50E2               	movf	fsr1h,w,c
 17209  016F32  6EDA               	movwf	fsr2h,c
 17210  016F34  0EFF               	movlw	255
 17211  016F36  22DA               	addwfc	fsr2h,f,c
 17212  016F38  06DE               	decf	postinc2,f,c
 17213  016F3A  0E00               	movlw	0
 17214  016F3C  5ADD               	subwfb	postdec2,f,c
 17215                           
 17216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 17217  016F3E  0E0A               	movlw	10
 17218  016F40  6EE6               	movwf	postinc1,c
 17219  016F42  0E00               	movlw	0
 17220  016F44  6EE6               	movwf	postinc1,c
 17221  016F46  0E00               	movlw	0
 17222  016F48  6EE6               	movwf	postinc1,c
 17223  016F4A  0E00               	movlw	0
 17224  016F4C  6EE6               	movwf	postinc1,c
 17225  016F4E  0E00               	movlw	0
 17226  016F50  6EE6               	movwf	postinc1,c
 17227  016F52  0E00               	movlw	0
 17228  016F54  6EE6               	movwf	postinc1,c
 17229  016F56  0E00               	movlw	0
 17230  016F58  6EE6               	movwf	postinc1,c
 17231  016F5A  0E00               	movlw	0
 17232  016F5C  6EE6               	movwf	postinc1,c
 17233                           
 17234                           ;stkvar	_n @ sp[(-22)+0]
 17235  016F5E  50E1               	movf	fsr1l,w,c
 17236  016F60  0FEA               	addlw	-22
 17237  016F62  6ED9               	movwf	fsr2l,c
 17238  016F64  50E2               	movf	fsr1h,w,c
 17239  016F66  6EDA               	movwf	fsr2h,c
 17240  016F68  0EFF               	movlw	255
 17241  016F6A  22DA               	addwfc	fsr2h,f,c
 17242  016F6C  006F FF7B FFE6     	movff	postinc2,postinc1
 17243  016F72  006F FF7B FFE6     	movff	postinc2,postinc1
 17244  016F78  006F FF7B FFE6     	movff	postinc2,postinc1
 17245  016F7E  006F FF7B FFE6     	movff	postinc2,postinc1
 17246  016F84  006F FF7B FFE6     	movff	postinc2,postinc1
 17247  016F8A  006F FF7B FFE6     	movff	postinc2,postinc1
 17248  016F90  006F FF7B FFE6     	movff	postinc2,postinc1
 17249  016F96  006F FF7B FFE6     	movff	postinc2,postinc1
 17250  016F9C  EC6A  F0CA         	call	___lodiv	;wreg free
 17251  016FA0  52E5               	movf	postdec1,f,c
 17252  016FA2  006F FF9C  F018    	movff	indf1,btemp+23
 17253  016FA8  52E5               	movf	postdec1,f,c
 17254  016FAA  006F FF9C  F017    	movff	indf1,btemp+22
 17255  016FB0  52E5               	movf	postdec1,f,c
 17256  016FB2  006F FF9C  F016    	movff	indf1,btemp+21
 17257  016FB8  52E5               	movf	postdec1,f,c
 17258  016FBA  006F FF9C  F015    	movff	indf1,btemp+20
 17259  016FC0  52E5               	movf	postdec1,f,c
 17260  016FC2  006F FF9C  F014    	movff	indf1,btemp+19
 17261  016FC8  52E5               	movf	postdec1,f,c
 17262  016FCA  006F FF9C  F013    	movff	indf1,btemp+18
 17263  016FD0  52E5               	movf	postdec1,f,c
 17264  016FD2  006F FF9C  F012    	movff	indf1,btemp+17
 17265  016FD8  52E5               	movf	postdec1,f,c
 17266  016FDA  006F FF9C  F011    	movff	indf1,btemp+16
 17267  016FE0  0EF8               	movlw	248
 17268  016FE2  26E1               	addwf	fsr1l,f,c
 17269  016FE4  0EFF               	movlw	255
 17270  016FE6  22E2               	addwfc	fsr1h,f,c
 17271                           
 17272                           ;stkvar	_n @ sp[(-14)+0]
 17273  016FE8  0EF2               	movlw	-14
 17274  016FEA  0060  F047  FFE3   	movff	btemp+16,plusw1
 17275  016FF0  0EF3               	movlw	-13
 17276  016FF2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 17277  016FF8  0EF4               	movlw	-12
 17278  016FFA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 17279  017000  0EF5               	movlw	-11
 17280  017002  0060  F053  FFE3   	movff	btemp+19,plusw1
 17281  017008  0EF6               	movlw	-10
 17282  01700A  0060  F057  FFE3   	movff	btemp+20,plusw1
 17283  017010  0EF7               	movlw	-9
 17284  017012  0060  F05B  FFE3   	movff	btemp+21,plusw1
 17285  017018  0EF8               	movlw	-8
 17286  01701A  0060  F05F  FFE3   	movff	btemp+22,plusw1
 17287  017020  0EF9               	movlw	-7
 17288  017022  0060  F063  FFE3   	movff	btemp+23,plusw1
 17289  017028                     l13188:
 17290                           
 17291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 17292                           ;stkvar	_i @ sp[(-14)+8]
 17293  017028  0EFA               	movlw	-6
 17294  01702A  006F FF8C  F001    	movff	plusw1,btemp
 17295  017030  0EFB               	movlw	-5
 17296  017032  50E3               	movf	plusw1,w,c
 17297  017034  1001               	iorwf	btemp^0,w,c
 17298  017036  B4D8               	btfsc	status,2,c
 17299  017038  D02F               	goto	u12440
 17300                           
 17301                           ;stkvar	_n @ sp[(-14)+0]
 17302  01703A  0EF2               	movlw	-14
 17303  01703C  50E3               	movf	plusw1,w,c
 17304  01703E  E115               	bnz	u12411
 17305  017040  0EF3               	movlw	-13
 17306  017042  50E3               	movf	plusw1,w,c
 17307  017044  E112               	bnz	u12411
 17308  017046  0EF4               	movlw	-12
 17309  017048  50E3               	movf	plusw1,w,c
 17310  01704A  E10F               	bnz	u12411
 17311  01704C  0EF5               	movlw	-11
 17312  01704E  50E3               	movf	plusw1,w,c
 17313  017050  E10C               	bnz	u12411
 17314  017052  0EF6               	movlw	-10
 17315  017054  50E3               	movf	plusw1,w,c
 17316  017056  E109               	bnz	u12411
 17317  017058  0EF7               	movlw	-9
 17318  01705A  50E3               	movf	plusw1,w,c
 17319  01705C  E106               	bnz	u12411
 17320  01705E  0EF8               	movlw	-8
 17321  017060  50E3               	movf	plusw1,w,c
 17322  017062  E103               	bnz	u12411
 17323  017064  0EF9               	movlw	-7
 17324  017066  50E3               	movf	plusw1,w,c
 17325  017068  A4D8               	btfss	status,2,c
 17326  01706A                     u12411:
 17327  01706A  D6E3               	goto	l13178
 17328                           
 17329                           ;stkvar	_p @ sp[(-14)+12]
 17330  01706C  0EFF               	movlw	-1
 17331  01706E  BEE3               	btfsc	plusw1,7,c
 17332  017070  D007               	goto	u12420
 17333  017072  0EFF               	movlw	-1
 17334  017074  50E3               	movf	plusw1,w,c
 17335  017076  E103               	bnz	u12421
 17336  017078  0EFE               	movlw	-2
 17337  01707A  04E3               	decf	plusw1,w,c
 17338  01707C  B0D8               	btfsc	status,0,c
 17339  01707E                     u12421:
 17340  01707E  D6D9               	goto	l13178
 17341  017080                     u12420:
 17342                           
 17343                           ;stkvar	_w @ sp[(-14)+10]
 17344  017080  0EFD               	movlw	-3
 17345  017082  BEE3               	btfsc	plusw1,7,c
 17346  017084  D009               	goto	u12440
 17347  017086  0EFD               	movlw	-3
 17348  017088  50E3               	movf	plusw1,w,c
 17349  01708A  E104               	bnz	u12430
 17350  01708C  0EFC               	movlw	-4
 17351  01708E  04E3               	decf	plusw1,w,c
 17352  017090  A0D8               	btfss	status,0,c
 17353  017092  D002               	goto	u12440
 17354  017094                     u12430:
 17355  017094  B23E               	btfsc	_flags^0,1,c
 17356  017096  D6CD               	goto	l13178
 17357  017098                     u12440:
 17358                           
 17359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 17360                           ;stkvar	_w @ sp[(-14)+10]
 17361  017098  0EFC               	movlw	-4
 17362  01709A  006F FF8F FFE6     	movff	plusw1,postinc1
 17363  0170A0  006F FF8F FFE6     	movff	plusw1,postinc1
 17364                           
 17365                           ;stkvar	_i @ sp[(-16)+8]
 17366  0170A6  0E97               	movlw	low _dbuf
 17367  0170A8  6E0B               	movwf	(btemp+10)^0,c
 17368  0170AA  0E02               	movlw	high _dbuf
 17369  0170AC  6E0C               	movwf	(btemp+11)^0,c
 17370  0170AE  0EF8               	movlw	-8
 17371  0170B0  50E3               	movf	plusw1,w,c
 17372  0170B2  260B               	addwf	(btemp+10)^0,f,c
 17373  0170B4  0EF9               	movlw	-7
 17374  0170B6  50E3               	movf	plusw1,w,c
 17375  0170B8  220C               	addwfc	(btemp+11)^0,f,c
 17376  0170BA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17377  0170C0  0060  F033  FFE6   	movff	btemp+11,postinc1
 17378                           
 17379                           ;stkvar	_fp @ sp[(-18)+-2]
 17380  0170C6  0EEC               	movlw	-20
 17381  0170C8  006F FF8F FFE6     	movff	plusw1,postinc1
 17382  0170CE  006F FF8F FFE6     	movff	plusw1,postinc1
 17383  0170D4  EC0A  F0D2         	call	_pad	;wreg free
 17384                           
 17385                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17386  0170D8  0EE8               	movlw	232
 17387  0170DA  26E1               	addwf	fsr1l,f,c
 17388  0170DC  0EFF               	movlw	255
 17389  0170DE  22E2               	addwfc	fsr1h,f,c
 17390  0170E0  0012               	return		;funcret
 17391  0170E2                     __end_of_utoa:
 17392                           	opt callstack 0
 17393                           
 17394 ;; *************** function ___lomod *****************
 17395 ;; Defined at:
 17396 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 17397 ;; Parameters:    Size  Location     Type
 17398 ;;  dividend        8  [STACK] unsigned long long 
 17399 ;;  divisor         8  [STACK] unsigned long long 
 17400 ;; Auto vars:     Size  Location     Type
 17401 ;;  counter         1  [STACK] unsigned char 
 17402 ;; Return value:  Size  Location     Type
 17403 ;;                  8  [STACK] unsigned long long 
 17404 ;; Registers used:
 17405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17406 ;; Tracked objects:
 17407 ;;		On entry : 0/2
 17408 ;;		On exit  : 0/0
 17409 ;;		Unchanged: 0/0
 17410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17415 ;;Total ram usage:        0 bytes
 17416 ;; Hardware stack levels used:    1
 17417 ;; Hardware stack levels required when called:   15
 17418 ;; This function calls:
 17419 ;;		Nothing
 17420 ;; This function is called by:
 17421 ;;		_utoa
 17422 ;; This function uses a reentrant model
 17423 ;;
 17424                           
 17425                           	psect	text66
 17426  019D1A                     __ptext66:
 17427                           	opt callstack 0
 17428  019D1A                     ___lomod:
 17429                           	opt callstack 0
 17430                           
 17431                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17432  019D1A  52E6               	movf	postinc1,f,c
 17433                           
 17434                           ;stkvar	_divisor @ sp[(-1)+-16]
 17435                           
 17436                           ;incstack = 0
 17437 ;; hardware stack exceeded
 17438  019D1C  0EEF               	movlw	-17
 17439  019D1E  50E3               	movf	plusw1,w,c
 17440  019D20  E116               	bnz	u7710
 17441  019D22  0EF0               	movlw	-16
 17442  019D24  50E3               	movf	plusw1,w,c
 17443  019D26  E113               	bnz	u7710
 17444  019D28  0EF1               	movlw	-15
 17445  019D2A  50E3               	movf	plusw1,w,c
 17446  019D2C  E110               	bnz	u7710
 17447  019D2E  0EF2               	movlw	-14
 17448  019D30  50E3               	movf	plusw1,w,c
 17449  019D32  E10D               	bnz	u7710
 17450  019D34  0EF3               	movlw	-13
 17451  019D36  50E3               	movf	plusw1,w,c
 17452  019D38  E10A               	bnz	u7710
 17453  019D3A  0EF4               	movlw	-12
 17454  019D3C  50E3               	movf	plusw1,w,c
 17455  019D3E  E107               	bnz	u7710
 17456  019D40  0EF5               	movlw	-11
 17457  019D42  50E3               	movf	plusw1,w,c
 17458  019D44  E104               	bnz	u7710
 17459  019D46  0EF6               	movlw	-10
 17460  019D48  50E3               	movf	plusw1,w,c
 17461  019D4A  B4D8               	btfsc	status,2,c
 17462  019D4C  D075               	goto	u7740
 17463  019D4E                     u7710:
 17464                           
 17465                           ;stkvar	_counter @ sp[(-1)+0]
 17466  019D4E  0EFF               	movlw	-1
 17467  019D50  6AE3               	clrf	plusw1,c
 17468  019D52  D012               	goto	L18
 17469  019D54                     l9194:
 17470                           
 17471                           ;stkvar	_divisor @ sp[(-1)+-16]
 17472  019D54  90D8               	bcf	status,0,c
 17473  019D56  0EEF               	movlw	-17
 17474  019D58  36E3               	rlcf	plusw1,f,c
 17475  019D5A  0EF0               	movlw	-16
 17476  019D5C  36E3               	rlcf	plusw1,f,c
 17477  019D5E  0EF1               	movlw	-15
 17478  019D60  36E3               	rlcf	plusw1,f,c
 17479  019D62  0EF2               	movlw	-14
 17480  019D64  36E3               	rlcf	plusw1,f,c
 17481  019D66  0EF3               	movlw	-13
 17482  019D68  36E3               	rlcf	plusw1,f,c
 17483  019D6A  0EF4               	movlw	-12
 17484  019D6C  36E3               	rlcf	plusw1,f,c
 17485  019D6E  0EF5               	movlw	-11
 17486  019D70  36E3               	rlcf	plusw1,f,c
 17487  019D72  0EF6               	movlw	-10
 17488  019D74  36E3               	rlcf	plusw1,f,c
 17489                           
 17490                           ;stkvar	_counter @ sp[(-1)+0]
 17491  019D76  0EFF               	movlw	-1
 17492  019D78                     L18:
 17493  019D78  2AE3               	incf	plusw1,f,c
 17494                           
 17495                           ;stkvar	_divisor @ sp[(-1)+-16]
 17496  019D7A  0EF6               	movlw	-10
 17497  019D7C  AEE3               	btfss	plusw1,7,c
 17498  019D7E  D7EA               	goto	l9194
 17499  019D80                     u7720:
 17500                           
 17501                           ;stkvar	_divisor @ sp[(-1)+-16]
 17502                           ;stkvar	_dividend @ sp[(-1)+-8]
 17503  019D80  50E1               	movf	fsr1l,w,c
 17504  019D82  0FF7               	addlw	-9
 17505  019D84  6ED9               	movwf	fsr2l,c
 17506  019D86  50E2               	movf	fsr1h,w,c
 17507  019D88  6EDA               	movwf	fsr2h,c
 17508  019D8A  0EFF               	movlw	255
 17509  019D8C  22DA               	addwfc	fsr2h,f,c
 17510  019D8E  0EEF               	movlw	-17
 17511  019D90  50E3               	movf	plusw1,w,c
 17512  019D92  5CDE               	subwf	postinc2,w,c
 17513  019D94  0EF0               	movlw	-16
 17514  019D96  50E3               	movf	plusw1,w,c
 17515  019D98  58DE               	subwfb	postinc2,w,c
 17516  019D9A  0EF1               	movlw	-15
 17517  019D9C  50E3               	movf	plusw1,w,c
 17518  019D9E  58DE               	subwfb	postinc2,w,c
 17519  019DA0  0EF2               	movlw	-14
 17520  019DA2  50E3               	movf	plusw1,w,c
 17521  019DA4  58DE               	subwfb	postinc2,w,c
 17522  019DA6  0EF3               	movlw	-13
 17523  019DA8  50E3               	movf	plusw1,w,c
 17524  019DAA  58DE               	subwfb	postinc2,w,c
 17525  019DAC  0EF4               	movlw	-12
 17526  019DAE  50E3               	movf	plusw1,w,c
 17527  019DB0  58DE               	subwfb	postinc2,w,c
 17528  019DB2  0EF5               	movlw	-11
 17529  019DB4  50E3               	movf	plusw1,w,c
 17530  019DB6  58DE               	subwfb	postinc2,w,c
 17531  019DB8  0EF6               	movlw	-10
 17532  019DBA  50E3               	movf	plusw1,w,c
 17533  019DBC  58DE               	subwfb	postinc2,w,c
 17534  019DBE  A0D8               	btfss	status,0,c
 17535  019DC0  D01F               	goto	l9202
 17536                           
 17537                           ;stkvar	_divisor @ sp[(-1)+-16]
 17538                           ;stkvar	_dividend @ sp[(-1)+-8]
 17539  019DC2  50E1               	movf	fsr1l,w,c
 17540  019DC4  0FF7               	addlw	-9
 17541  019DC6  6ED9               	movwf	fsr2l,c
 17542  019DC8  50E2               	movf	fsr1h,w,c
 17543  019DCA  6EDA               	movwf	fsr2h,c
 17544  019DCC  0EFF               	movlw	255
 17545  019DCE  22DA               	addwfc	fsr2h,f,c
 17546  019DD0  0EEF               	movlw	-17
 17547  019DD2  50E3               	movf	plusw1,w,c
 17548  019DD4  5EDE               	subwf	postinc2,f,c
 17549  019DD6  0EF0               	movlw	-16
 17550  019DD8  50E3               	movf	plusw1,w,c
 17551  019DDA  5ADE               	subwfb	postinc2,f,c
 17552  019DDC  0EF1               	movlw	-15
 17553  019DDE  50E3               	movf	plusw1,w,c
 17554  019DE0  5ADE               	subwfb	postinc2,f,c
 17555  019DE2  0EF2               	movlw	-14
 17556  019DE4  50E3               	movf	plusw1,w,c
 17557  019DE6  5ADE               	subwfb	postinc2,f,c
 17558  019DE8  0EF3               	movlw	-13
 17559  019DEA  50E3               	movf	plusw1,w,c
 17560  019DEC  5ADE               	subwfb	postinc2,f,c
 17561  019DEE  0EF4               	movlw	-12
 17562  019DF0  50E3               	movf	plusw1,w,c
 17563  019DF2  5ADE               	subwfb	postinc2,f,c
 17564  019DF4  0EF5               	movlw	-11
 17565  019DF6  50E3               	movf	plusw1,w,c
 17566  019DF8  5ADE               	subwfb	postinc2,f,c
 17567  019DFA  0EF6               	movlw	-10
 17568  019DFC  50E3               	movf	plusw1,w,c
 17569  019DFE  5ADE               	subwfb	postinc2,f,c
 17570  019E00                     l9202:
 17571                           
 17572                           ;stkvar	_divisor @ sp[(-1)+-16]
 17573  019E00  90D8               	bcf	status,0,c
 17574  019E02  0EF6               	movlw	-10
 17575  019E04  32E3               	rrcf	plusw1,f,c
 17576  019E06  0EF5               	movlw	-11
 17577  019E08  32E3               	rrcf	plusw1,f,c
 17578  019E0A  0EF4               	movlw	-12
 17579  019E0C  32E3               	rrcf	plusw1,f,c
 17580  019E0E  0EF3               	movlw	-13
 17581  019E10  32E3               	rrcf	plusw1,f,c
 17582  019E12  0EF2               	movlw	-14
 17583  019E14  32E3               	rrcf	plusw1,f,c
 17584  019E16  0EF1               	movlw	-15
 17585  019E18  32E3               	rrcf	plusw1,f,c
 17586  019E1A  0EF0               	movlw	-16
 17587  019E1C  32E3               	rrcf	plusw1,f,c
 17588  019E1E  0EEF               	movlw	-17
 17589  019E20  32E3               	rrcf	plusw1,f,c
 17590                           
 17591                           ;stkvar	_counter @ sp[(-1)+0]
 17592  019E22  0EFF               	movlw	-1
 17593  019E24  50E3               	movf	plusw1,w,c
 17594  019E26  6E01               	movwf	btemp^0,c
 17595  019E28  0E01               	movlw	1
 17596  019E2A  5E01               	subwf	btemp^0,f,c
 17597  019E2C  0EFF               	movlw	-1
 17598  019E2E  0060  F007  FFE3   	movff	btemp,plusw1
 17599  019E34  A4D8               	btfss	status,2,c
 17600  019E36  D7A4               	goto	u7720
 17601  019E38                     u7740:
 17602                           
 17603                           ;stkvar	_dividend @ sp[(-1)+-8]
 17604  019E38  0EF7               	movlw	247
 17605  019E3A  24E1               	addwf	fsr1l,w,c
 17606  019E3C  6ED9               	movwf	fsr2l,c
 17607  019E3E  0EFF               	movlw	255
 17608  019E40  20E2               	addwfc	fsr1h,w,c
 17609  019E42  6EDA               	movwf	fsr2h,c
 17610                           
 17611                           ;stkvar	?___lomod @ sp[(-1)+-8]
 17612  019E44  0E08               	movlw	8
 17613  019E46  6E01               	movwf	btemp^0,c
 17614  019E48  0EF7               	movlw	-9
 17615  019E4A                     us775999:
 17616  019E4A  006F FF7B FFE3     	movff	postinc2,plusw1
 17617  019E50  28E8               	incf	wreg,w,c
 17618  019E52  2E01               	decfsz	btemp^0,f,c
 17619  019E54  D7FA               	bra	us775999
 17620                           
 17621                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17622  019E56  52E5               	movf	postdec1,f,c
 17623  019E58  0012               	return		;funcret
 17624  019E5A                     __end_of___lomod:
 17625                           	opt callstack 0
 17626                           
 17627 ;; *************** function ___lodiv *****************
 17628 ;; Defined at:
 17629 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 17630 ;; Parameters:    Size  Location     Type
 17631 ;;  dividend        8  [STACK] unsigned long long 
 17632 ;;  divisor         8  [STACK] unsigned long long 
 17633 ;; Auto vars:     Size  Location     Type
 17634 ;;  quotient        8  [STACK] unsigned long long 
 17635 ;;  counter         1  [STACK] unsigned char 
 17636 ;; Return value:  Size  Location     Type
 17637 ;;                  8  [STACK] unsigned long long 
 17638 ;; Registers used:
 17639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17640 ;; Tracked objects:
 17641 ;;		On entry : 0/2
 17642 ;;		On exit  : 0/0
 17643 ;;		Unchanged: 0/0
 17644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17649 ;;Total ram usage:        0 bytes
 17650 ;; Hardware stack levels used:    1
 17651 ;; Hardware stack levels required when called:   15
 17652 ;; This function calls:
 17653 ;;		Nothing
 17654 ;; This function is called by:
 17655 ;;		_utoa
 17656 ;; This function uses a reentrant model
 17657 ;;
 17658                           
 17659                           	psect	text67
 17660  0194D4                     __ptext67:
 17661                           	opt callstack 0
 17662  0194D4                     ___lodiv:
 17663                           	opt callstack 0
 17664                           
 17665                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17666  0194D4  0E09               	movlw	9
 17667  0194D6  26E1               	addwf	fsr1l,f,c
 17668  0194D8  0E00               	movlw	0
 17669  0194DA  22E2               	addwfc	fsr1h,f,c
 17670                           
 17671                           ;stkvar	_quotient @ sp[(-9)+0]
 17672                           
 17673                           ;incstack = 0
 17674 ;; hardware stack exceeded
 17675  0194DC  0E07               	movlw	7
 17676  0194DE  6E01               	movwf	btemp^0,c
 17677  0194E0  0EF7               	movlw	-9
 17678  0194E2                     u7651:
 17679  0194E2  6AE3               	clrf	plusw1,c
 17680  0194E4  2AE8               	incf	wreg,f,c
 17681  0194E6  0601               	decf	btemp^0,f,c
 17682  0194E8  E2FC               	bc	u7651
 17683                           
 17684                           ;stkvar	_divisor @ sp[(-9)+-16]
 17685  0194EA  0EE7               	movlw	-25
 17686  0194EC  50E3               	movf	plusw1,w,c
 17687  0194EE  E116               	bnz	u7660
 17688  0194F0  0EE8               	movlw	-24
 17689  0194F2  50E3               	movf	plusw1,w,c
 17690  0194F4  E113               	bnz	u7660
 17691  0194F6  0EE9               	movlw	-23
 17692  0194F8  50E3               	movf	plusw1,w,c
 17693  0194FA  E110               	bnz	u7660
 17694  0194FC  0EEA               	movlw	-22
 17695  0194FE  50E3               	movf	plusw1,w,c
 17696  019500  E10D               	bnz	u7660
 17697  019502  0EEB               	movlw	-21
 17698  019504  50E3               	movf	plusw1,w,c
 17699  019506  E10A               	bnz	u7660
 17700  019508  0EEC               	movlw	-20
 17701  01950A  50E3               	movf	plusw1,w,c
 17702  01950C  E107               	bnz	u7660
 17703  01950E  0EED               	movlw	-19
 17704  019510  50E3               	movf	plusw1,w,c
 17705  019512  E104               	bnz	u7660
 17706  019514  0EEE               	movlw	-18
 17707  019516  50E3               	movf	plusw1,w,c
 17708  019518  B4D8               	btfsc	status,2,c
 17709  01951A  D088               	goto	u7690
 17710  01951C                     u7660:
 17711                           
 17712                           ;stkvar	_counter @ sp[(-9)+8]
 17713  01951C  0EFF               	movlw	-1
 17714  01951E  6AE3               	clrf	plusw1,c
 17715  019520  D012               	goto	L19
 17716  019522                     l9170:
 17717                           
 17718                           ;stkvar	_divisor @ sp[(-9)+-16]
 17719  019522  90D8               	bcf	status,0,c
 17720  019524  0EE7               	movlw	-25
 17721  019526  36E3               	rlcf	plusw1,f,c
 17722  019528  0EE8               	movlw	-24
 17723  01952A  36E3               	rlcf	plusw1,f,c
 17724  01952C  0EE9               	movlw	-23
 17725  01952E  36E3               	rlcf	plusw1,f,c
 17726  019530  0EEA               	movlw	-22
 17727  019532  36E3               	rlcf	plusw1,f,c
 17728  019534  0EEB               	movlw	-21
 17729  019536  36E3               	rlcf	plusw1,f,c
 17730  019538  0EEC               	movlw	-20
 17731  01953A  36E3               	rlcf	plusw1,f,c
 17732  01953C  0EED               	movlw	-19
 17733  01953E  36E3               	rlcf	plusw1,f,c
 17734  019540  0EEE               	movlw	-18
 17735  019542  36E3               	rlcf	plusw1,f,c
 17736                           
 17737                           ;stkvar	_counter @ sp[(-9)+8]
 17738  019544  0EFF               	movlw	-1
 17739  019546                     L19:
 17740  019546  2AE3               	incf	plusw1,f,c
 17741                           
 17742                           ;stkvar	_divisor @ sp[(-9)+-16]
 17743  019548  0EEE               	movlw	-18
 17744  01954A  AEE3               	btfss	plusw1,7,c
 17745  01954C  D7EA               	goto	l9170
 17746  01954E                     u7670:
 17747                           
 17748                           ;stkvar	_quotient @ sp[(-9)+0]
 17749  01954E  90D8               	bcf	status,0,c
 17750  019550  0EF7               	movlw	-9
 17751  019552  36E3               	rlcf	plusw1,f,c
 17752  019554  0EF8               	movlw	-8
 17753  019556  36E3               	rlcf	plusw1,f,c
 17754  019558  0EF9               	movlw	-7
 17755  01955A  36E3               	rlcf	plusw1,f,c
 17756  01955C  0EFA               	movlw	-6
 17757  01955E  36E3               	rlcf	plusw1,f,c
 17758  019560  0EFB               	movlw	-5
 17759  019562  36E3               	rlcf	plusw1,f,c
 17760  019564  0EFC               	movlw	-4
 17761  019566  36E3               	rlcf	plusw1,f,c
 17762  019568  0EFD               	movlw	-3
 17763  01956A  36E3               	rlcf	plusw1,f,c
 17764  01956C  0EFE               	movlw	-2
 17765  01956E  36E3               	rlcf	plusw1,f,c
 17766                           
 17767                           ;stkvar	_divisor @ sp[(-9)+-16]
 17768                           ;stkvar	_dividend @ sp[(-9)+-8]
 17769  019570  50E1               	movf	fsr1l,w,c
 17770  019572  0FEF               	addlw	-17
 17771  019574  6ED9               	movwf	fsr2l,c
 17772  019576  50E2               	movf	fsr1h,w,c
 17773  019578  6EDA               	movwf	fsr2h,c
 17774  01957A  0EFF               	movlw	255
 17775  01957C  22DA               	addwfc	fsr2h,f,c
 17776  01957E  0EE7               	movlw	-25
 17777  019580  50E3               	movf	plusw1,w,c
 17778  019582  5CDE               	subwf	postinc2,w,c
 17779  019584  0EE8               	movlw	-24
 17780  019586  50E3               	movf	plusw1,w,c
 17781  019588  58DE               	subwfb	postinc2,w,c
 17782  01958A  0EE9               	movlw	-23
 17783  01958C  50E3               	movf	plusw1,w,c
 17784  01958E  58DE               	subwfb	postinc2,w,c
 17785  019590  0EEA               	movlw	-22
 17786  019592  50E3               	movf	plusw1,w,c
 17787  019594  58DE               	subwfb	postinc2,w,c
 17788  019596  0EEB               	movlw	-21
 17789  019598  50E3               	movf	plusw1,w,c
 17790  01959A  58DE               	subwfb	postinc2,w,c
 17791  01959C  0EEC               	movlw	-20
 17792  01959E  50E3               	movf	plusw1,w,c
 17793  0195A0  58DE               	subwfb	postinc2,w,c
 17794  0195A2  0EED               	movlw	-19
 17795  0195A4  50E3               	movf	plusw1,w,c
 17796  0195A6  58DE               	subwfb	postinc2,w,c
 17797  0195A8  0EEE               	movlw	-18
 17798  0195AA  50E3               	movf	plusw1,w,c
 17799  0195AC  58DE               	subwfb	postinc2,w,c
 17800  0195AE  A0D8               	btfss	status,0,c
 17801  0195B0  D021               	goto	l9182
 17802                           
 17803                           ;stkvar	_divisor @ sp[(-9)+-16]
 17804                           ;stkvar	_dividend @ sp[(-9)+-8]
 17805  0195B2  50E1               	movf	fsr1l,w,c
 17806  0195B4  0FEF               	addlw	-17
 17807  0195B6  6ED9               	movwf	fsr2l,c
 17808  0195B8  50E2               	movf	fsr1h,w,c
 17809  0195BA  6EDA               	movwf	fsr2h,c
 17810  0195BC  0EFF               	movlw	255
 17811  0195BE  22DA               	addwfc	fsr2h,f,c
 17812  0195C0  0EE7               	movlw	-25
 17813  0195C2  50E3               	movf	plusw1,w,c
 17814  0195C4  5EDE               	subwf	postinc2,f,c
 17815  0195C6  0EE8               	movlw	-24
 17816  0195C8  50E3               	movf	plusw1,w,c
 17817  0195CA  5ADE               	subwfb	postinc2,f,c
 17818  0195CC  0EE9               	movlw	-23
 17819  0195CE  50E3               	movf	plusw1,w,c
 17820  0195D0  5ADE               	subwfb	postinc2,f,c
 17821  0195D2  0EEA               	movlw	-22
 17822  0195D4  50E3               	movf	plusw1,w,c
 17823  0195D6  5ADE               	subwfb	postinc2,f,c
 17824  0195D8  0EEB               	movlw	-21
 17825  0195DA  50E3               	movf	plusw1,w,c
 17826  0195DC  5ADE               	subwfb	postinc2,f,c
 17827  0195DE  0EEC               	movlw	-20
 17828  0195E0  50E3               	movf	plusw1,w,c
 17829  0195E2  5ADE               	subwfb	postinc2,f,c
 17830  0195E4  0EED               	movlw	-19
 17831  0195E6  50E3               	movf	plusw1,w,c
 17832  0195E8  5ADE               	subwfb	postinc2,f,c
 17833  0195EA  0EEE               	movlw	-18
 17834  0195EC  50E3               	movf	plusw1,w,c
 17835  0195EE  5ADE               	subwfb	postinc2,f,c
 17836                           
 17837                           ;stkvar	_quotient @ sp[(-9)+0]
 17838  0195F0  0EF7               	movlw	-9
 17839  0195F2  80E3               	bsf	plusw1,0,c
 17840  0195F4                     l9182:
 17841                           
 17842                           ;stkvar	_divisor @ sp[(-9)+-16]
 17843  0195F4  90D8               	bcf	status,0,c
 17844  0195F6  0EEE               	movlw	-18
 17845  0195F8  32E3               	rrcf	plusw1,f,c
 17846  0195FA  0EED               	movlw	-19
 17847  0195FC  32E3               	rrcf	plusw1,f,c
 17848  0195FE  0EEC               	movlw	-20
 17849  019600  32E3               	rrcf	plusw1,f,c
 17850  019602  0EEB               	movlw	-21
 17851  019604  32E3               	rrcf	plusw1,f,c
 17852  019606  0EEA               	movlw	-22
 17853  019608  32E3               	rrcf	plusw1,f,c
 17854  01960A  0EE9               	movlw	-23
 17855  01960C  32E3               	rrcf	plusw1,f,c
 17856  01960E  0EE8               	movlw	-24
 17857  019610  32E3               	rrcf	plusw1,f,c
 17858  019612  0EE7               	movlw	-25
 17859  019614  32E3               	rrcf	plusw1,f,c
 17860                           
 17861                           ;stkvar	_counter @ sp[(-9)+8]
 17862  019616  0EFF               	movlw	-1
 17863  019618  50E3               	movf	plusw1,w,c
 17864  01961A  6E01               	movwf	btemp^0,c
 17865  01961C  0E01               	movlw	1
 17866  01961E  5E01               	subwf	btemp^0,f,c
 17867  019620  0EFF               	movlw	-1
 17868  019622  0060  F007  FFE3   	movff	btemp,plusw1
 17869  019628  A4D8               	btfss	status,2,c
 17870  01962A  D791               	goto	u7670
 17871  01962C                     u7690:
 17872                           
 17873                           ;stkvar	_quotient @ sp[(-9)+0]
 17874  01962C  0EF7               	movlw	247
 17875  01962E  24E1               	addwf	fsr1l,w,c
 17876  019630  6ED9               	movwf	fsr2l,c
 17877  019632  0EFF               	movlw	255
 17878  019634  20E2               	addwfc	fsr1h,w,c
 17879  019636  6EDA               	movwf	fsr2h,c
 17880                           
 17881                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 17882  019638  0E08               	movlw	8
 17883  01963A  6E01               	movwf	btemp^0,c
 17884  01963C  0EEF               	movlw	-17
 17885  01963E                     us770999:
 17886  01963E  006F FF7B FFE3     	movff	postinc2,plusw1
 17887  019644  28E8               	incf	wreg,w,c
 17888  019646  2E01               	decfsz	btemp^0,f,c
 17889  019648  D7FA               	bra	us770999
 17890                           
 17891                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17892  01964A  0EF7               	movlw	247
 17893  01964C  26E1               	addwf	fsr1l,f,c
 17894  01964E  0EFF               	movlw	255
 17895  019650  22E2               	addwfc	fsr1h,f,c
 17896  019652  0012               	return		;funcret
 17897  019654                     __end_of___lodiv:
 17898                           	opt callstack 0
 17899                           
 17900 ;; *************** function _strncmp *****************
 17901 ;; Defined at:
 17902 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 17903 ;; Parameters:    Size  Location     Type
 17904 ;;  _l              2  [STACK] PTR const unsigned char 
 17905 ;;		 -> ct(3), STR_81(127), STR_79(3), STR_78(3), 
 17906 ;;		 -> STR_77(19), STR_76(19), STR_75(19), STR_74(19), 
 17907 ;;		 -> STR_73(19), STR_72(19), STR_71(24), STR_70(15), 
 17908 ;;		 -> STR_69(15), STR_68(15), STR_67(10), STR_66(10), 
 17909 ;;		 -> STR_65(19), STR_64(19), STR_61(3), STR_60(3), 
 17910 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 17911 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 17912 ;;		 -> STR_51(21), STR_50(20), STR_49(20), STR_48(21), 
 17913 ;;		 -> STR_47(21), STR_46(21), STR_45(22), STR_44(22), 
 17914 ;;		 -> STR_43(22), STR_42(23), STR_41(23), STR_40(23), 
 17915 ;;		 -> STR_39(29), STR_38(23), STR_37(23), STR_36(22), 
 17916 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 17917 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 17918 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(17), 
 17919 ;;		 -> STR_23(16), STR_22(16), STR_21(26), STR_20(26), 
 17920 ;;		 -> STR_19(22), STR_18(21), STR_17(21), STR_16(21), 
 17921 ;;		 -> STR_15(21), STR_14(22), STR_13(22), STR_12(22), 
 17922 ;;		 -> STR_11(26), STR_10(21), STR_9(21), STR_8(21), 
 17923 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 17924 ;;		 -> STR_2(21), STR_1(21), 
 17925 ;;  _r              2  [STACK] PTR const unsigned char 
 17926 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_101(3), 
 17927 ;;		 -> STR_96(3), STR_92(3), 
 17928 ;;  n               2  [STACK] unsigned int 
 17929 ;; Auto vars:     Size  Location     Type
 17930 ;;  r               2  [STACK] PTR const unsigned char 
 17931 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_101(3), 
 17932 ;;		 -> STR_96(3), STR_92(3), 
 17933 ;;  l               2  [STACK] PTR const unsigned char 
 17934 ;;		 -> ct(3), STR_81(127), STR_79(3), STR_78(3), 
 17935 ;;		 -> STR_77(19), STR_76(19), STR_75(19), STR_74(19), 
 17936 ;;		 -> STR_73(19), STR_72(19), STR_71(24), STR_70(15), 
 17937 ;;		 -> STR_69(15), STR_68(15), STR_67(10), STR_66(10), 
 17938 ;;		 -> STR_65(19), STR_64(19), STR_61(3), STR_60(3), 
 17939 ;;		 -> STR_59(21), STR_58(21), STR_57(21), STR_56(21), 
 17940 ;;		 -> STR_55(21), STR_54(21), STR_53(21), STR_52(21), 
 17941 ;;		 -> STR_51(21), STR_50(20), STR_49(20), STR_48(21), 
 17942 ;;		 -> STR_47(21), STR_46(21), STR_45(22), STR_44(22), 
 17943 ;;		 -> STR_43(22), STR_42(23), STR_41(23), STR_40(23), 
 17944 ;;		 -> STR_39(29), STR_38(23), STR_37(23), STR_36(22), 
 17945 ;;		 -> STR_35(22), STR_34(22), STR_33(22), STR_32(22), 
 17946 ;;		 -> STR_31(22), STR_30(22), STR_29(22), STR_28(22), 
 17947 ;;		 -> STR_27(22), STR_26(22), STR_25(22), STR_24(17), 
 17948 ;;		 -> STR_23(16), STR_22(16), STR_21(26), STR_20(26), 
 17949 ;;		 -> STR_19(22), STR_18(21), STR_17(21), STR_16(21), 
 17950 ;;		 -> STR_15(21), STR_14(22), STR_13(22), STR_12(22), 
 17951 ;;		 -> STR_11(26), STR_10(21), STR_9(21), STR_8(21), 
 17952 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_4(21), 
 17953 ;;		 -> STR_2(21), STR_1(21), 
 17954 ;; Return value:  Size  Location     Type
 17955 ;;                  2  [STACK] int 
 17956 ;; Registers used:
 17957 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 17958 ;; Tracked objects:
 17959 ;;		On entry : 0/0
 17960 ;;		On exit  : 0/0
 17961 ;;		Unchanged: 0/0
 17962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17967 ;;Total ram usage:        0 bytes
 17968 ;; Hardware stack levels used:    1
 17969 ;; Hardware stack levels required when called:   15
 17970 ;; This function calls:
 17971 ;;		Nothing
 17972 ;; This function is called by:
 17973 ;;		_vfpfcnvrt
 17974 ;; This function uses a reentrant model
 17975 ;;
 17976                           
 17977                           	psect	text68
 17978  01860A                     __ptext68:
 17979                           	opt callstack 0
 17980  01860A                     _strncmp:
 17981                           	opt callstack 0
 17982                           
 17983                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17984  01860A  52E6               	movf	postinc1,f,c
 17985  01860C  52E6               	movf	postinc1,f,c
 17986  01860E  52E6               	movf	postinc1,f,c
 17987  018610  52E6               	movf	postinc1,f,c
 17988                           
 17989                           ;stkvar	__l @ sp[(-4)+-2]
 17990                           
 17991                           ;incstack = 0
 17992 ;; hardware stack exceeded
 17993  018612  0EFA               	movlw	-6
 17994  018614  006F FF8C  F00B    	movff	plusw1,btemp+10
 17995  01861A  0EFB               	movlw	-5
 17996  01861C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17997                           
 17998                           ;stkvar	_l @ sp[(-4)+2]
 17999  018622  0EFF               	movlw	-1
 18000  018624  0060  F033  FFE3   	movff	btemp+11,plusw1
 18001  01862A  0EFE               	movlw	-2
 18002  01862C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18003                           
 18004                           ;stkvar	__r @ sp[(-4)+-4]
 18005  018632  0EF8               	movlw	-8
 18006  018634  006F FF8C  F00B    	movff	plusw1,btemp+10
 18007  01863A  0EF9               	movlw	-7
 18008  01863C  006F FF8C  F00C    	movff	plusw1,btemp+11
 18009                           
 18010                           ;stkvar	_r @ sp[(-4)+0]
 18011  018642  0EFD               	movlw	-3
 18012  018644  0060  F033  FFE3   	movff	btemp+11,plusw1
 18013  01864A  0EFC               	movlw	-4
 18014  01864C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18015                           
 18016                           ;stkvar	_n @ sp[(-4)+-6]
 18017  018652  0EF6               	movlw	-10
 18018  018654  006F FF8C  F001    	movff	plusw1,btemp
 18019  01865A  0E01               	movlw	1
 18020  01865C  5E01               	subwf	btemp^0,f,c
 18021  01865E  0EF6               	movlw	-10
 18022  018660  0060  F007  FFE3   	movff	btemp,plusw1
 18023  018666  0EF7               	movlw	-9
 18024  018668  006F FF8C  F001    	movff	plusw1,btemp
 18025  01866E  0E00               	movlw	0
 18026  018670  5A01               	subwfb	btemp^0,f,c
 18027  018672  0EF7               	movlw	-9
 18028  018674  0060  F007  FFE3   	movff	btemp,plusw1
 18029  01867A  0EF6               	movlw	-10
 18030  01867C  28E3               	incf	plusw1,w,c
 18031  01867E  E13F               	bnz	l9852
 18032  018680  0EF7               	movlw	-9
 18033  018682  28E3               	incf	plusw1,w,c
 18034  018684  A4D8               	btfss	status,2,c
 18035  018686  D03B               	goto	l9852
 18036  018688  0E00               	movlw	0
 18037  01868A  6E01               	movwf	btemp^0,c
 18038  01868C  0E00               	movlw	0
 18039  01868E  6E02               	movwf	(btemp+1)^0,c
 18040  018690  D0C7               	goto	l3603
 18041  018692                     l9850:
 18042                           
 18043                           ;stkvar	_l @ sp[(-4)+2]
 18044  018692  0EFE               	movlw	-2
 18045  018694  50E3               	movf	plusw1,w,c
 18046  018696  0F01               	addlw	1
 18047  018698  6E01               	movwf	btemp^0,c
 18048  01869A  0EFE               	movlw	-2
 18049  01869C  0060  F007  FFE3   	movff	btemp,plusw1
 18050  0186A2  6A01               	clrf	btemp^0,c
 18051  0186A4  0EFF               	movlw	-1
 18052  0186A6  50E3               	movf	plusw1,w,c
 18053  0186A8  2001               	addwfc	btemp^0,w,c
 18054  0186AA  6E01               	movwf	btemp^0,c
 18055  0186AC  0EFF               	movlw	-1
 18056  0186AE  0060  F007  FFE3   	movff	btemp,plusw1
 18057                           
 18058                           ;stkvar	_r @ sp[(-4)+0]
 18059  0186B4  0EFC               	movlw	-4
 18060  0186B6  50E3               	movf	plusw1,w,c
 18061  0186B8  0F01               	addlw	1
 18062  0186BA  6E01               	movwf	btemp^0,c
 18063  0186BC  0EFC               	movlw	-4
 18064  0186BE  0060  F007  FFE3   	movff	btemp,plusw1
 18065  0186C4  6A01               	clrf	btemp^0,c
 18066  0186C6  0EFD               	movlw	-3
 18067  0186C8  50E3               	movf	plusw1,w,c
 18068  0186CA  2001               	addwfc	btemp^0,w,c
 18069  0186CC  6E01               	movwf	btemp^0,c
 18070  0186CE  0EFD               	movlw	-3
 18071  0186D0  0060  F007  FFE3   	movff	btemp,plusw1
 18072                           
 18073                           ;stkvar	_n @ sp[(-4)+-6]
 18074  0186D6  0EF6               	movlw	-10
 18075  0186D8  006F FF8C  F001    	movff	plusw1,btemp
 18076  0186DE  0E01               	movlw	1
 18077  0186E0  5E01               	subwf	btemp^0,f,c
 18078  0186E2  0EF6               	movlw	-10
 18079  0186E4  0060  F007  FFE3   	movff	btemp,plusw1
 18080  0186EA  0EF7               	movlw	-9
 18081  0186EC  006F FF8C  F001    	movff	plusw1,btemp
 18082  0186F2  0E00               	movlw	0
 18083  0186F4  5A01               	subwfb	btemp^0,f,c
 18084  0186F6  0EF7               	movlw	-9
 18085  0186F8  0060  F007  FFE3   	movff	btemp,plusw1
 18086  0186FE                     l9852:
 18087                           
 18088                           ;stkvar	_l @ sp[(-4)+2]
 18089  0186FE  0EFE               	movlw	-2
 18090  018700  006F FF8F FFF6     	movff	plusw1,tblptrl
 18091  018706  0EFF               	movlw	-1
 18092  018708  006F FF8F FFF7     	movff	plusw1,tblptrh
 18093  01870E  0E00               	movlw	low (__mediumconst shr (0+16))
 18094  018710  6EF8               	movwf	tblptru,c
 18095  018712  0E1F               	movlw	(high __ramtop+-1)
 18096  018714  64F7               	cpfsgt	tblptrh,c
 18097  018716  D003               	bra	u8947
 18098  018718  0008               	tblrd		*
 18099  01871A  50F5               	movf	tablat,w,c
 18100  01871C  D007               	bra	u8940
 18101  01871E                     u8947:
 18102  01871E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18103  018724  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18104  01872A  50EF               	movf	indf0,w,c
 18105  01872C                     u8940:
 18106  01872C  0900               	iorlw	0
 18107  01872E  B4D8               	btfsc	status,2,c
 18108  018730  D04A               	goto	u8980
 18109                           
 18110                           ;stkvar	_r @ sp[(-4)+0]
 18111  018732  50E1               	movf	fsr1l,w,c
 18112  018734  0FFC               	addlw	-4
 18113  018736  6ED9               	movwf	fsr2l,c
 18114  018738  50E2               	movf	fsr1h,w,c
 18115  01873A  6EDA               	movwf	fsr2h,c
 18116  01873C  0EFF               	movlw	255
 18117  01873E  22DA               	addwfc	fsr2h,f,c
 18118  018740  006F FF7B FFF6     	movff	postinc2,tblptrl
 18119  018746  006F FF77 FFF7     	movff	postdec2,tblptrh
 18120  01874C                     	if	0	;tblptru may be non-zero
 18121  01874C                     	endif
 18122  01874C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18123  01874C  0E00               	movlw	low (__mediumconst shr (0+16))
 18124  01874E  6EF8               	movwf	tblptru,c
 18125  018750                     	endif
 18126  018750  0008               	tblrd		*
 18127  018752  50F5               	movf	tablat,w,c
 18128  018754  0900               	iorlw	0
 18129  018756  B4D8               	btfsc	status,2,c
 18130  018758  D036               	goto	u8980
 18131                           
 18132                           ;stkvar	_n @ sp[(-4)+-6]
 18133  01875A  0EF6               	movlw	-10
 18134  01875C  006F FF8C  F001    	movff	plusw1,btemp
 18135  018762  0EF7               	movlw	-9
 18136  018764  50E3               	movf	plusw1,w,c
 18137  018766  1001               	iorwf	btemp^0,w,c
 18138  018768  B4D8               	btfsc	status,2,c
 18139  01876A  D02D               	goto	u8980
 18140                           
 18141                           ;stkvar	_r @ sp[(-4)+0]
 18142  01876C  50E1               	movf	fsr1l,w,c
 18143  01876E  0FFC               	addlw	-4
 18144  018770  6ED9               	movwf	fsr2l,c
 18145  018772  50E2               	movf	fsr1h,w,c
 18146  018774  6EDA               	movwf	fsr2h,c
 18147  018776  0EFF               	movlw	255
 18148  018778  22DA               	addwfc	fsr2h,f,c
 18149  01877A  006F FF7B FFF6     	movff	postinc2,tblptrl
 18150  018780  006F FF77 FFF7     	movff	postdec2,tblptrh
 18151  018786                     	if	0	;tblptru may be non-zero
 18152  018786                     	endif
 18153  018786                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18154  018786  0E00               	movlw	low (__mediumconst shr (0+16))
 18155  018788  6EF8               	movwf	tblptru,c
 18156  01878A                     	endif
 18157  01878A  0008               	tblrd		*
 18158  01878C  006F FFD4  F00C    	movff	tablat,btemp+11
 18159                           
 18160                           ;stkvar	_l @ sp[(-4)+2]
 18161  018792  0EFE               	movlw	-2
 18162  018794  006F FF8F FFF6     	movff	plusw1,tblptrl
 18163  01879A  0EFF               	movlw	-1
 18164  01879C  006F FF8F FFF7     	movff	plusw1,tblptrh
 18165  0187A2  0E00               	movlw	low (__mediumconst shr (0+16))
 18166  0187A4  6EF8               	movwf	tblptru,c
 18167  0187A6  0E1F               	movlw	(high __ramtop+-1)
 18168  0187A8  64F7               	cpfsgt	tblptrh,c
 18169  0187AA  D003               	bra	u8987
 18170  0187AC  0008               	tblrd		*
 18171  0187AE  50F5               	movf	tablat,w,c
 18172  0187B0  D007               	bra	u8985
 18173  0187B2                     u8987:
 18174  0187B2  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18175  0187B8  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18176  0187BE  50EF               	movf	indf0,w,c
 18177  0187C0                     u8985:
 18178  0187C0  180C               	xorwf	(btemp+11)^0,w,c
 18179  0187C2  B4D8               	btfsc	status,2,c
 18180  0187C4  D766               	goto	l9850
 18181  0187C6                     u8980:
 18182                           
 18183                           ;stkvar	_l @ sp[(-4)+2]
 18184  0187C6  0EFE               	movlw	-2
 18185  0187C8  006F FF8F FFF6     	movff	plusw1,tblptrl
 18186  0187CE  0EFF               	movlw	-1
 18187  0187D0  006F FF8F FFF7     	movff	plusw1,tblptrh
 18188  0187D6  0E00               	movlw	low (__mediumconst shr (0+16))
 18189  0187D8  6EF8               	movwf	tblptru,c
 18190  0187DA  0E1F               	movlw	(high __ramtop+-1)
 18191  0187DC  64F7               	cpfsgt	tblptrh,c
 18192  0187DE  D003               	bra	u8997
 18193  0187E0  0008               	tblrd		*
 18194  0187E2  50F5               	movf	tablat,w,c
 18195  0187E4  D007               	bra	u8990
 18196  0187E6                     u8997:
 18197  0187E6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18198  0187EC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18199  0187F2  50EF               	movf	indf0,w,c
 18200  0187F4                     u8990:
 18201  0187F4  6E01               	movwf	btemp^0,c
 18202  0187F6  6A02               	clrf	(btemp+1)^0,c
 18203                           
 18204                           ;stkvar	_r @ sp[(-4)+0]
 18205  0187F8  50E1               	movf	fsr1l,w,c
 18206  0187FA  0FFC               	addlw	-4
 18207  0187FC  6ED9               	movwf	fsr2l,c
 18208  0187FE  50E2               	movf	fsr1h,w,c
 18209  018800  6EDA               	movwf	fsr2h,c
 18210  018802  0EFF               	movlw	255
 18211  018804  22DA               	addwfc	fsr2h,f,c
 18212  018806  006F FF7B FFF6     	movff	postinc2,tblptrl
 18213  01880C  006F FF77 FFF7     	movff	postdec2,tblptrh
 18214  018812                     	if	0	;tblptru may be non-zero
 18215  018812                     	endif
 18216  018812                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18217  018812  0E00               	movlw	low (__mediumconst shr (0+16))
 18218  018814  6EF8               	movwf	tblptru,c
 18219  018816                     	endif
 18220  018816  0008               	tblrd		*
 18221  018818  50F5               	movf	tablat,w,c
 18222  01881A  5E01               	subwf	btemp^0,f,c
 18223  01881C  0E00               	movlw	0
 18224  01881E  5A02               	subwfb	(btemp+1)^0,f,c
 18225  018820                     l3603:
 18226                           
 18227                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 18228  018820  0EF6               	movlw	246
 18229  018822  26E1               	addwf	fsr1l,f,c
 18230  018824  0EFF               	movlw	255
 18231  018826  22E2               	addwfc	fsr1h,f,c
 18232  018828  0012               	return		;funcret
 18233  01882A                     __end_of_strncmp:
 18234                           	opt callstack 0
 18235                           
 18236 ;; *************** function _stoa *****************
 18237 ;; Defined at:
 18238 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18239 ;; Parameters:    Size  Location     Type
 18240 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18241 ;;		 -> f(6), NULL(0), 
 18242 ;;  s               2  [STACK] PTR unsigned char 
 18243 ;;		 -> ?_printf(2), ?_sprintf(2), STR_63(9), STR_62(12), 
 18244 ;;		 -> D.lcd(480), D(482), T(144), STR_3(5), 
 18245 ;;		 -> V(192), 
 18246 ;; Auto vars:     Size  Location     Type
 18247 ;;  nuls            7  [STACK] unsigned char [7]
 18248 ;;  l               2  [STACK] int 
 18249 ;;  p               2  [STACK] int 
 18250 ;;  cp              2  [STACK] PTR unsigned char 
 18251 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_63(9), 
 18252 ;;		 -> STR_62(12), D.lcd(480), D(482), T(144), 
 18253 ;;		 -> STR_3(5), V(192), 
 18254 ;;  w               2  [STACK] int 
 18255 ;;  i               2  [STACK] int 
 18256 ;; Return value:  Size  Location     Type
 18257 ;;                  2  [STACK] int 
 18258 ;; Registers used:
 18259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18260 ;; Tracked objects:
 18261 ;;		On entry : 0/0
 18262 ;;		On exit  : 0/0
 18263 ;;		Unchanged: 0/0
 18264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18269 ;;Total ram usage:        0 bytes
 18270 ;; Hardware stack levels used:    1
 18271 ;; Hardware stack levels required when called:   18
 18272 ;; This function calls:
 18273 ;;		_fputc
 18274 ;;		_strlen
 18275 ;; This function is called by:
 18276 ;;		_vfpfcnvrt
 18277 ;; This function uses a reentrant model
 18278 ;;
 18279                           
 18280                           	psect	text69
 18281  0179D2                     __ptext69:
 18282                           	opt callstack 0
 18283  0179D2                     _stoa:
 18284                           	opt callstack 0
 18285                           
 18286                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 18287  0179D2  0E11               	movlw	17
 18288  0179D4  26E1               	addwf	fsr1l,f,c
 18289  0179D6  0E00               	movlw	0
 18290  0179D8  22E2               	addwfc	fsr1h,f,c
 18291                           
 18292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 18293                           
 18294                           ;incstack = 0
 18295 ;; hardware stack exceeded
 18296  0179DA  EE20  F100         	lfsr	2,stoa@F1166
 18297                           
 18298                           ;stkvar	_nuls @ sp[(-17)+0]
 18299  0179DE  0E07               	movlw	7
 18300  0179E0  6E01               	movwf	btemp^0,c
 18301  0179E2  0EEF               	movlw	-17
 18302  0179E4                     us1227999:
 18303  0179E4  006F FF7B FFE3     	movff	postinc2,plusw1
 18304  0179EA  28E8               	incf	wreg,w,c
 18305  0179EC  2E01               	decfsz	btemp^0,f,c
 18306  0179EE  D7FA               	bra	us1227999
 18307                           
 18308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 18309                           ;stkvar	_s @ sp[(-17)+-4]
 18310  0179F0  0EEB               	movlw	-21
 18311  0179F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 18312  0179F8  0EEC               	movlw	-20
 18313  0179FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 18314                           
 18315                           ;stkvar	_cp @ sp[(-17)+11]
 18316  017A00  0EFB               	movlw	-5
 18317  017A02  0060  F033  FFE3   	movff	btemp+11,plusw1
 18318  017A08  0EFA               	movlw	-6
 18319  017A0A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18320                           
 18321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 18322                           ;stkvar	_cp @ sp[(-17)+11]
 18323  017A10  0EFA               	movlw	-6
 18324  017A12  006F FF8C  F001    	movff	plusw1,btemp
 18325  017A18  0EFB               	movlw	-5
 18326  017A1A  50E3               	movf	plusw1,w,c
 18327  017A1C  1001               	iorwf	btemp^0,w,c
 18328  017A1E  A4D8               	btfss	status,2,c
 18329  017A20  D00E               	goto	l13118
 18330                           
 18331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 18332                           ;stkvar	_nuls @ sp[(-17)+0]
 18333  017A22  0EEF               	movlw	239
 18334  017A24  24E1               	addwf	fsr1l,w,c
 18335  017A26  6E0B               	movwf	(btemp+10)^0,c
 18336  017A28  0EFF               	movlw	255
 18337  017A2A  20E2               	addwfc	fsr1h,w,c
 18338  017A2C  6E0C               	movwf	(btemp+11)^0,c
 18339                           
 18340                           ;stkvar	_cp @ sp[(-17)+11]
 18341  017A2E  0EFB               	movlw	-5
 18342  017A30  0060  F033  FFE3   	movff	btemp+11,plusw1
 18343  017A36  0EFA               	movlw	-6
 18344  017A38  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18345  017A3E                     l13118:
 18346                           
 18347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 18348                           ;stkvar	_cp @ sp[(-17)+11]
 18349  017A3E  0EFA               	movlw	-6
 18350  017A40  006F FF8F FFE6     	movff	plusw1,postinc1
 18351  017A46  006F FF8F FFE6     	movff	plusw1,postinc1
 18352  017A4C  EC41  F0DA         	call	_strlen	;wreg free
 18353                           
 18354                           ;stkvar	_l @ sp[(-17)+7]
 18355  017A50  0EF6               	movlw	-10
 18356  017A52  0060  F007  FFE3   	movff	btemp,plusw1
 18357  017A58  0EF7               	movlw	-9
 18358  017A5A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18359                           
 18360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 18361                           ;stkvar	_p @ sp[(-17)+9]
 18362  017A60  0EF8               	movlw	-8
 18363  017A62  0060  F0F3  FFE3   	movff	_prec,plusw1
 18364  017A68  0EF9               	movlw	-7
 18365  017A6A  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 18366                           
 18367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 18368                           ;stkvar	_p @ sp[(-17)+9]
 18369  017A70  0EF9               	movlw	-7
 18370  017A72  BEE3               	btfsc	plusw1,7,c
 18371  017A74  D023               	goto	l2428
 18372                           
 18373                           ;stkvar	_l @ sp[(-17)+7]
 18374                           ;stkvar	_p @ sp[(-17)+9]
 18375  017A76  50E1               	movf	fsr1l,w,c
 18376  017A78  0FF8               	addlw	-8
 18377  017A7A  6ED9               	movwf	fsr2l,c
 18378  017A7C  50E2               	movf	fsr1h,w,c
 18379  017A7E  6EDA               	movwf	fsr2h,c
 18380  017A80  0EFF               	movlw	255
 18381  017A82  22DA               	addwfc	fsr2h,f,c
 18382  017A84  0EF6               	movlw	-10
 18383  017A86  50E3               	movf	plusw1,w,c
 18384  017A88  5CDE               	subwf	postinc2,w,c
 18385  017A8A  50DE               	movf	postinc2,w,c
 18386  017A8C  0A80               	xorlw	128
 18387  017A8E  6E01               	movwf	btemp^0,c
 18388  017A90  0EF7               	movlw	-9
 18389  017A92  50E3               	movf	plusw1,w,c
 18390  017A94  0A80               	xorlw	128
 18391  017A96  5801               	subwfb	btemp^0,w,c
 18392  017A98  B0D8               	btfsc	status,0,c
 18393  017A9A  D010               	goto	l2428
 18394                           
 18395                           ;stkvar	_p @ sp[(-17)+9]
 18396                           ;stkvar	_l @ sp[(-17)+7]
 18397  017A9C  0EF8               	movlw	-8
 18398  017A9E  006F FF8C  F001    	movff	plusw1,btemp
 18399  017AA4  0EF6               	movlw	-10
 18400  017AA6  0060  F007  FFE3   	movff	btemp,plusw1
 18401  017AAC  0EF9               	movlw	-7
 18402  017AAE  006F FF8C  F001    	movff	plusw1,btemp
 18403  017AB4  0EF7               	movlw	-9
 18404  017AB6  0060  F007  FFE3   	movff	btemp,plusw1
 18405  017ABC                     l2428:
 18406                           
 18407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 18408                           ;stkvar	_l @ sp[(-17)+7]
 18409                           ;stkvar	_p @ sp[(-17)+9]
 18410  017ABC  0EF6               	movlw	-10
 18411  017ABE  006F FF8C  F001    	movff	plusw1,btemp
 18412  017AC4  0EF8               	movlw	-8
 18413  017AC6  0060  F007  FFE3   	movff	btemp,plusw1
 18414  017ACC  0EF7               	movlw	-9
 18415  017ACE  006F FF8C  F001    	movff	plusw1,btemp
 18416  017AD4  0EF9               	movlw	-7
 18417  017AD6  0060  F007  FFE3   	movff	btemp,plusw1
 18418                           
 18419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 18420                           ;stkvar	_w @ sp[(-17)+13]
 18421  017ADC  0EFC               	movlw	-4
 18422  017ADE  0060  F0EB  FFE3   	movff	_width,plusw1
 18423  017AE4  0EFD               	movlw	-3
 18424  017AE6  0060  F0EF  FFE3   	movff	_width+1,plusw1
 18425                           
 18426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 18427  017AEC  A03E               	btfss	_flags^0,0,c
 18428  017AEE  D01F               	goto	l13138
 18429  017AF0  D031               	goto	u12320
 18430  017AF2                     l13134:
 18431                           
 18432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 18433                           ;stkvar	_fp @ sp[(-17)+-2]
 18434  017AF2  0EED               	movlw	-19
 18435  017AF4  006F FF8F FFE6     	movff	plusw1,postinc1
 18436  017AFA  006F FF8F FFE6     	movff	plusw1,postinc1
 18437  017B00  0E20               	movlw	32
 18438  017B02  6EE6               	movwf	postinc1,c
 18439  017B04  0E00               	movlw	0
 18440  017B06  6EE6               	movwf	postinc1,c
 18441  017B08  EC60  F0D0         	call	_fputc	;wreg free
 18442                           
 18443                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 18444                           ;stkvar	_l @ sp[(-17)+7]
 18445  017B0C  0EF6               	movlw	-10
 18446  017B0E  50E3               	movf	plusw1,w,c
 18447  017B10  0F01               	addlw	1
 18448  017B12  6E01               	movwf	btemp^0,c
 18449  017B14  0EF6               	movlw	-10
 18450  017B16  0060  F007  FFE3   	movff	btemp,plusw1
 18451  017B1C  6A01               	clrf	btemp^0,c
 18452  017B1E  0EF7               	movlw	-9
 18453  017B20  50E3               	movf	plusw1,w,c
 18454  017B22  2001               	addwfc	btemp^0,w,c
 18455  017B24  6E01               	movwf	btemp^0,c
 18456  017B26  0EF7               	movlw	-9
 18457  017B28  0060  F007  FFE3   	movff	btemp,plusw1
 18458  017B2E                     l13138:
 18459                           
 18460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 18461                           ;stkvar	_w @ sp[(-17)+13]
 18462                           ;stkvar	_l @ sp[(-17)+7]
 18463  017B2E  50E1               	movf	fsr1l,w,c
 18464  017B30  0FF6               	addlw	-10
 18465  017B32  6ED9               	movwf	fsr2l,c
 18466  017B34  50E2               	movf	fsr1h,w,c
 18467  017B36  6EDA               	movwf	fsr2h,c
 18468  017B38  0EFF               	movlw	255
 18469  017B3A  22DA               	addwfc	fsr2h,f,c
 18470  017B3C  0EFC               	movlw	-4
 18471  017B3E  50E3               	movf	plusw1,w,c
 18472  017B40  5CDE               	subwf	postinc2,w,c
 18473  017B42  50DE               	movf	postinc2,w,c
 18474  017B44  0A80               	xorlw	128
 18475  017B46  6E01               	movwf	btemp^0,c
 18476  017B48  0EFD               	movlw	-3
 18477  017B4A  50E3               	movf	plusw1,w,c
 18478  017B4C  0A80               	xorlw	128
 18479  017B4E  5801               	subwfb	btemp^0,w,c
 18480  017B50  A0D8               	btfss	status,0,c
 18481  017B52  D7CF               	goto	l13134
 18482  017B54                     u12320:
 18483                           
 18484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 18485                           ;stkvar	_i @ sp[(-17)+15]
 18486  017B54  0EFE               	movlw	-2
 18487  017B56  6AE3               	clrf	plusw1,c
 18488  017B58  0EFF               	movlw	-1
 18489  017B5A  6AE3               	clrf	plusw1,c
 18490                           
 18491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 18492  017B5C  D045               	goto	l13148
 18493  017B5E                     l13142:
 18494                           
 18495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 18496                           ;stkvar	_fp @ sp[(-17)+-2]
 18497  017B5E  0EED               	movlw	-19
 18498  017B60  006F FF8F FFE6     	movff	plusw1,postinc1
 18499  017B66  006F FF8F FFE6     	movff	plusw1,postinc1
 18500                           
 18501                           ;stkvar	_cp @ sp[(-19)+11]
 18502  017B6C  0EF8               	movlw	-8
 18503  017B6E  006F FF8F FFF6     	movff	plusw1,tblptrl
 18504  017B74  0EF9               	movlw	-7
 18505  017B76  006F FF8F FFF7     	movff	plusw1,tblptrh
 18506  017B7C  0E00               	movlw	low (__mediumconst shr (0+16))
 18507  017B7E  6EF8               	movwf	tblptru,c
 18508  017B80  0E1F               	movlw	(high __ramtop+-1)
 18509  017B82  64F7               	cpfsgt	tblptrh,c
 18510  017B84  D003               	bra	u12337
 18511  017B86  0008               	tblrd		*
 18512  017B88  50F5               	movf	tablat,w,c
 18513  017B8A  D007               	bra	u12330
 18514  017B8C                     u12337:
 18515  017B8C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18516  017B92  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18517  017B98  50EF               	movf	indf0,w,c
 18518  017B9A                     u12330:
 18519  017B9A  6EE6               	movwf	postinc1,c
 18520  017B9C  0E00               	movlw	0
 18521  017B9E  6EE6               	movwf	postinc1,c
 18522  017BA0  EC60  F0D0         	call	_fputc	;wreg free
 18523                           
 18524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 18525                           ;stkvar	_cp @ sp[(-17)+11]
 18526  017BA4  0EFA               	movlw	-6
 18527  017BA6  50E3               	movf	plusw1,w,c
 18528  017BA8  0F01               	addlw	1
 18529  017BAA  6E01               	movwf	btemp^0,c
 18530  017BAC  0EFA               	movlw	-6
 18531  017BAE  0060  F007  FFE3   	movff	btemp,plusw1
 18532  017BB4  6A01               	clrf	btemp^0,c
 18533  017BB6  0EFB               	movlw	-5
 18534  017BB8  50E3               	movf	plusw1,w,c
 18535  017BBA  2001               	addwfc	btemp^0,w,c
 18536  017BBC  6E01               	movwf	btemp^0,c
 18537  017BBE  0EFB               	movlw	-5
 18538  017BC0  0060  F007  FFE3   	movff	btemp,plusw1
 18539                           
 18540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 18541                           ;stkvar	_i @ sp[(-17)+15]
 18542  017BC6  0EFE               	movlw	-2
 18543  017BC8  50E3               	movf	plusw1,w,c
 18544  017BCA  0F01               	addlw	1
 18545  017BCC  6E01               	movwf	btemp^0,c
 18546  017BCE  0EFE               	movlw	-2
 18547  017BD0  0060  F007  FFE3   	movff	btemp,plusw1
 18548  017BD6  6A01               	clrf	btemp^0,c
 18549  017BD8  0EFF               	movlw	-1
 18550  017BDA  50E3               	movf	plusw1,w,c
 18551  017BDC  2001               	addwfc	btemp^0,w,c
 18552  017BDE  6E01               	movwf	btemp^0,c
 18553  017BE0  0EFF               	movlw	-1
 18554  017BE2  0060  F007  FFE3   	movff	btemp,plusw1
 18555  017BE8                     l13148:
 18556                           
 18557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 18558                           ;stkvar	_p @ sp[(-17)+9]
 18559                           ;stkvar	_i @ sp[(-17)+15]
 18560  017BE8  50E1               	movf	fsr1l,w,c
 18561  017BEA  0FFE               	addlw	-2
 18562  017BEC  6ED9               	movwf	fsr2l,c
 18563  017BEE  50E2               	movf	fsr1h,w,c
 18564  017BF0  6EDA               	movwf	fsr2h,c
 18565  017BF2  0EFF               	movlw	255
 18566  017BF4  22DA               	addwfc	fsr2h,f,c
 18567  017BF6  0EF8               	movlw	-8
 18568  017BF8  50E3               	movf	plusw1,w,c
 18569  017BFA  5CDE               	subwf	postinc2,w,c
 18570  017BFC  50DE               	movf	postinc2,w,c
 18571  017BFE  0A80               	xorlw	128
 18572  017C00  6E01               	movwf	btemp^0,c
 18573  017C02  0EF9               	movlw	-7
 18574  017C04  50E3               	movf	plusw1,w,c
 18575  017C06  0A80               	xorlw	128
 18576  017C08  5801               	subwfb	btemp^0,w,c
 18577  017C0A  A0D8               	btfss	status,0,c
 18578  017C0C  D7A8               	goto	l13142
 18579                           
 18580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 18581  017C0E  B03E               	btfsc	_flags^0,0,c
 18582  017C10  D01F               	goto	l13156
 18583  017C12  D031               	goto	u12360
 18584  017C14                     l13152:
 18585                           
 18586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 18587                           ;stkvar	_fp @ sp[(-17)+-2]
 18588  017C14  0EED               	movlw	-19
 18589  017C16  006F FF8F FFE6     	movff	plusw1,postinc1
 18590  017C1C  006F FF8F FFE6     	movff	plusw1,postinc1
 18591  017C22  0E20               	movlw	32
 18592  017C24  6EE6               	movwf	postinc1,c
 18593  017C26  0E00               	movlw	0
 18594  017C28  6EE6               	movwf	postinc1,c
 18595  017C2A  EC60  F0D0         	call	_fputc	;wreg free
 18596                           
 18597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 18598                           ;stkvar	_l @ sp[(-17)+7]
 18599  017C2E  0EF6               	movlw	-10
 18600  017C30  50E3               	movf	plusw1,w,c
 18601  017C32  0F01               	addlw	1
 18602  017C34  6E01               	movwf	btemp^0,c
 18603  017C36  0EF6               	movlw	-10
 18604  017C38  0060  F007  FFE3   	movff	btemp,plusw1
 18605  017C3E  6A01               	clrf	btemp^0,c
 18606  017C40  0EF7               	movlw	-9
 18607  017C42  50E3               	movf	plusw1,w,c
 18608  017C44  2001               	addwfc	btemp^0,w,c
 18609  017C46  6E01               	movwf	btemp^0,c
 18610  017C48  0EF7               	movlw	-9
 18611  017C4A  0060  F007  FFE3   	movff	btemp,plusw1
 18612  017C50                     l13156:
 18613                           
 18614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 18615                           ;stkvar	_w @ sp[(-17)+13]
 18616                           ;stkvar	_l @ sp[(-17)+7]
 18617  017C50  50E1               	movf	fsr1l,w,c
 18618  017C52  0FF6               	addlw	-10
 18619  017C54  6ED9               	movwf	fsr2l,c
 18620  017C56  50E2               	movf	fsr1h,w,c
 18621  017C58  6EDA               	movwf	fsr2h,c
 18622  017C5A  0EFF               	movlw	255
 18623  017C5C  22DA               	addwfc	fsr2h,f,c
 18624  017C5E  0EFC               	movlw	-4
 18625  017C60  50E3               	movf	plusw1,w,c
 18626  017C62  5CDE               	subwf	postinc2,w,c
 18627  017C64  50DE               	movf	postinc2,w,c
 18628  017C66  0A80               	xorlw	128
 18629  017C68  6E01               	movwf	btemp^0,c
 18630  017C6A  0EFD               	movlw	-3
 18631  017C6C  50E3               	movf	plusw1,w,c
 18632  017C6E  0A80               	xorlw	128
 18633  017C70  5801               	subwfb	btemp^0,w,c
 18634  017C72  A0D8               	btfss	status,0,c
 18635  017C74  D7CF               	goto	l13152
 18636  017C76                     u12360:
 18637                           
 18638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 18639                           ;stkvar	_l @ sp[(-17)+7]
 18640  017C76  0EF6               	movlw	-10
 18641  017C78  006F FF8C  F001    	movff	plusw1,btemp
 18642  017C7E  0EF7               	movlw	-9
 18643  017C80  006F FF8C  F002    	movff	plusw1,btemp+1
 18644                           
 18645                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18646  017C86  0EEB               	movlw	235
 18647  017C88  26E1               	addwf	fsr1l,f,c
 18648  017C8A  0EFF               	movlw	255
 18649  017C8C  22E2               	addwfc	fsr1h,f,c
 18650  017C8E  0012               	return		;funcret
 18651  017C90                     __end_of_stoa:
 18652                           	opt callstack 0
 18653                           
 18654 ;; *************** function _efgtoa *****************
 18655 ;; Defined at:
 18656 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18657 ;; Parameters:    Size  Location     Type
 18658 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18659 ;;		 -> f(6), NULL(0), 
 18660 ;;  f               4  [STACK] PTR struct _IO_FILE
 18661 ;;  c               1  [STACK] unsigned char 
 18662 ;; Auto vars:     Size  Location     Type
 18663 ;;  u               4  [STACK] unsigned char 
 18664 ;;  g               4  [STACK] unsigned char 
 18665 ;;  l               4  [STACK] unsigned char 
 18666 ;;  h               4  [STACK] unsigned char 
 18667 ;;  ou              4  [STACK] unsigned char 
 18668 ;;  n               2  [STACK] int 
 18669 ;;  e               2  [STACK] int 
 18670 ;;  i               2  [STACK] int 
 18671 ;;  w               2  [STACK] int 
 18672 ;;  p               2  [STACK] int 
 18673 ;;  sign            2  [STACK] int 
 18674 ;;  d               2  [STACK] int 
 18675 ;;  ne              2  [STACK] int 
 18676 ;;  m               2  [STACK] int 
 18677 ;;  pp              2  [STACK] int 
 18678 ;;  t               2  [STACK] int 
 18679 ;;  mode            1  [STACK] unsigned char 
 18680 ;;  nmode           1  [STACK] unsigned char 
 18681 ;; Return value:  Size  Location     Type
 18682 ;;                  2  [STACK] int 
 18683 ;; Registers used:
 18684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 18685 ;; Tracked objects:
 18686 ;;		On entry : 0/0
 18687 ;;		On exit  : 0/0
 18688 ;;		Unchanged: 0/0
 18689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18694 ;;Total ram usage:        0 bytes
 18695 ;; Hardware stack levels used:    1
 18696 ;; Hardware stack levels required when called:   20
 18697 ;; This function calls:
 18698 ;;		___awdiv
 18699 ;;		___awmod
 18700 ;;		___fladd
 18701 ;;		___fldiv
 18702 ;;		___fleq
 18703 ;;		___flge
 18704 ;;		___flmul
 18705 ;;		___flneg
 18706 ;;		___flsub
 18707 ;;		___fltol
 18708 ;;		___fpclassifyf
 18709 ;;		_floorf
 18710 ;;		_isupper
 18711 ;;		_pad
 18712 ;;		_strcpy
 18713 ;;		_tolower
 18714 ;; This function is called by:
 18715 ;;		_vfpfcnvrt
 18716 ;; This function uses a reentrant model
 18717 ;;
 18718                           
 18719                           	psect	text70
 18720  01127E                     __ptext70:
 18721                           	opt callstack 0
 18722  01127E                     _efgtoa:
 18723                           	opt callstack 0
 18724                           
 18725                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 18726  01127E  0E38               	movlw	56
 18727  011280  26E1               	addwf	fsr1l,f,c
 18728  011282  0E00               	movlw	0
 18729  011284  22E2               	addwfc	fsr1h,f,c
 18730                           
 18731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 18732                           ;stkvar	_sign @ sp[(-56)+42]
 18733                           
 18734                           ;incstack = 0
 18735 ;; hardware stack exceeded
 18736  011286  0EF2               	movlw	-14
 18737  011288  6AE3               	clrf	plusw1,c
 18738  01128A  0EF3               	movlw	-13
 18739  01128C  6AE3               	clrf	plusw1,c
 18740                           
 18741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 18742                           ;stkvar	_f @ sp[(-56)+-6]
 18743  01128E  0EC2               	movlw	-62
 18744  011290  006F FF8C  F009    	movff	plusw1,btemp+8
 18745  011296  0EC3               	movlw	-61
 18746  011298  006F FF8C  F00A    	movff	plusw1,btemp+9
 18747  01129E  0EC4               	movlw	-60
 18748  0112A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 18749  0112A6  0EC5               	movlw	-59
 18750  0112A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 18751                           
 18752                           ;stkvar	_g @ sp[(-56)+16]
 18753  0112AE  0ED8               	movlw	-40
 18754  0112B0  0060  F027  FFE3   	movff	btemp+8,plusw1
 18755  0112B6  0ED9               	movlw	-39
 18756  0112B8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18757  0112BE  0EDA               	movlw	-38
 18758  0112C0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18759  0112C6  0EDB               	movlw	-37
 18760  0112C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 18761                           
 18762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 18763                           ;stkvar	_g @ sp[(-56)+16]
 18764  0112CE  0EDB               	movlw	-37
 18765  0112D0  AEE3               	btfss	plusw1,7,c
 18766  0112D2  D02B               	goto	l12816
 18767                           
 18768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 18769  0112D4  0E01               	movlw	1
 18770  0112D6  6E0B               	movwf	(btemp+10)^0,c
 18771  0112D8  0E00               	movlw	0
 18772  0112DA  6E0C               	movwf	(btemp+11)^0,c
 18773                           
 18774                           ;stkvar	_sign @ sp[(-56)+42]
 18775  0112DC  0EF2               	movlw	-14
 18776  0112DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18777  0112E4  0EF3               	movlw	-13
 18778  0112E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 18779                           
 18780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 18781                           ;stkvar	_g @ sp[(-56)+16]
 18782  0112EC  0ED8               	movlw	-40
 18783  0112EE  006F FF8F FFE6     	movff	plusw1,postinc1
 18784  0112F4  006F FF8F FFE6     	movff	plusw1,postinc1
 18785  0112FA  006F FF8F FFE6     	movff	plusw1,postinc1
 18786  011300  006F FF8F FFE6     	movff	plusw1,postinc1
 18787  011306  ECF7  F0E0         	call	___flneg	;wreg free
 18788                           
 18789                           ;stkvar	_g @ sp[(-56)+16]
 18790  01130A  0ED8               	movlw	-40
 18791  01130C  0060  F007  FFE3   	movff	btemp,plusw1
 18792  011312  0ED9               	movlw	-39
 18793  011314  0060  F00B  FFE3   	movff	btemp+1,plusw1
 18794  01131A  0EDA               	movlw	-38
 18795  01131C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 18796  011322  0EDB               	movlw	-37
 18797  011324  0060  F013  FFE3   	movff	btemp+3,plusw1
 18798  01132A                     l12816:
 18799                           
 18800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 18801                           ;stkvar	_n @ sp[(-56)+32]
 18802  01132A  0EE8               	movlw	-24
 18803  01132C  6AE3               	clrf	plusw1,c
 18804  01132E  0EE9               	movlw	-23
 18805  011330  6AE3               	clrf	plusw1,c
 18806                           
 18807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 18808                           ;stkvar	_w @ sp[(-56)+38]
 18809  011332  0EEE               	movlw	-18
 18810  011334  0060  F0EB  FFE3   	movff	_width,plusw1
 18811  01133A  0EEF               	movlw	-17
 18812  01133C  0060  F0EF  FFE3   	movff	_width+1,plusw1
 18813                           
 18814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 18815                           ;stkvar	_sign @ sp[(-56)+42]
 18816  011342  0EF2               	movlw	-14
 18817  011344  006F FF8C  F001    	movff	plusw1,btemp
 18818  01134A  0EF3               	movlw	-13
 18819  01134C  50E3               	movf	plusw1,w,c
 18820  01134E  1001               	iorwf	btemp^0,w,c
 18821  011350  A4D8               	btfss	status,2,c
 18822  011352  D002               	goto	u11770
 18823  011354  A43E               	btfss	_flags^0,2,c
 18824  011356  D036               	goto	l12836
 18825  011358                     u11770:
 18826                           
 18827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 18828                           ;stkvar	_sign @ sp[(-56)+42]
 18829  011358  0EF2               	movlw	-14
 18830  01135A  006F FF8C  F001    	movff	plusw1,btemp
 18831  011360  0EF3               	movlw	-13
 18832  011362  50E3               	movf	plusw1,w,c
 18833  011364  1001               	iorwf	btemp^0,w,c
 18834  011366  A4D8               	btfss	status,2,c
 18835  011368  D002               	goto	l12828
 18836  01136A  0E2B               	movlw	43
 18837  01136C  D001               	goto	L20
 18838  01136E                     l12828:
 18839  01136E  0E2D               	movlw	45
 18840  011370                     L20:
 18841  011370  6E0B               	movwf	(btemp+10)^0,c
 18842  011372  0E00               	movlw	0
 18843  011374  6E0C               	movwf	(btemp+11)^0,c
 18844                           
 18845                           ;stkvar	_efgtoa$5989 @ sp[(-56)+10]
 18846  011376  0ED2               	movlw	-46
 18847  011378  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18848  01137E  0ED3               	movlw	-45
 18849  011380  0060  F033  FFE3   	movff	btemp+11,plusw1
 18850                           
 18851                           ;stkvar	_efgtoa$5989 @ sp[(-56)+10]
 18852  011386  0ED2               	movlw	-46
 18853  011388  006F FF8C  F297    	movff	plusw1,_dbuf
 18854                           
 18855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 18856                           ;stkvar	_n @ sp[(-56)+32]
 18857  01138E  0EE8               	movlw	-24
 18858  011390  50E3               	movf	plusw1,w,c
 18859  011392  0F01               	addlw	1
 18860  011394  6E01               	movwf	btemp^0,c
 18861  011396  0EE8               	movlw	-24
 18862  011398  0060  F007  FFE3   	movff	btemp,plusw1
 18863  01139E  6A01               	clrf	btemp^0,c
 18864  0113A0  0EE9               	movlw	-23
 18865  0113A2  50E3               	movf	plusw1,w,c
 18866  0113A4  2001               	addwfc	btemp^0,w,c
 18867  0113A6  6E01               	movwf	btemp^0,c
 18868  0113A8  0EE9               	movlw	-23
 18869  0113AA  0060  F007  FFE3   	movff	btemp,plusw1
 18870                           
 18871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 18872                           ;stkvar	_w @ sp[(-56)+38]
 18873  0113B0  50E1               	movf	fsr1l,w,c
 18874  0113B2  0FEE               	addlw	-18
 18875  0113B4  6ED9               	movwf	fsr2l,c
 18876  0113B6  50E2               	movf	fsr1h,w,c
 18877  0113B8  6EDA               	movwf	fsr2h,c
 18878  0113BA  0EFF               	movlw	255
 18879  0113BC  22DA               	addwfc	fsr2h,f,c
 18880  0113BE  06DE               	decf	postinc2,f,c
 18881  0113C0  0E00               	movlw	0
 18882  0113C2  5ADD               	subwfb	postdec2,f,c
 18883  0113C4                     l12836:
 18884                           
 18885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 18886                           ;stkvar	_g @ sp[(-56)+16]
 18887  0113C4  0ED8               	movlw	-40
 18888  0113C6  006F FF8F FFE6     	movff	plusw1,postinc1
 18889  0113CC  006F FF8F FFE6     	movff	plusw1,postinc1
 18890  0113D2  006F FF8F FFE6     	movff	plusw1,postinc1
 18891  0113D8  006F FF8F FFE6     	movff	plusw1,postinc1
 18892  0113DE  ECDC  F0C8         	call	___fpclassifyf	;wreg free
 18893  0113E2  0401               	decf	btemp^0,w,c
 18894  0113E4  1002               	iorwf	(btemp+1)^0,w,c
 18895  0113E6  A4D8               	btfss	status,2,c
 18896  0113E8  D076               	goto	l12854
 18897  0113EA  0EBF               	movlw	191
 18898  0113EC  6E0B               	movwf	(btemp+10)^0,c
 18899  0113EE  0EFF               	movlw	255
 18900  0113F0  6E0C               	movwf	(btemp+11)^0,c
 18901                           
 18902                           ;stkvar	_c @ sp[(-56)+-7]
 18903  0113F2  0EC1               	movlw	-63
 18904  0113F4  50E3               	movf	plusw1,w,c
 18905  0113F6  6E09               	movwf	(btemp+8)^0,c
 18906  0113F8  6A0A               	clrf	(btemp+9)^0,c
 18907  0113FA  500B               	movf	(btemp+10)^0,w,c
 18908  0113FC  2609               	addwf	(btemp+8)^0,f,c
 18909  0113FE  500C               	movf	(btemp+11)^0,w,c
 18910  011400  220A               	addwfc	(btemp+9)^0,f,c
 18911  011402  500A               	movf	(btemp+9)^0,w,c
 18912  011404  E106               	bnz	u11800
 18913  011406  0E1A               	movlw	26
 18914  011408  5C09               	subwf	(btemp+8)^0,w,c
 18915  01140A  B0D8               	btfsc	status,0,c
 18916  01140C  D002               	goto	u11800
 18917  01140E  0E01               	movlw	1
 18918  011410  D001               	goto	u11810
 18919  011412                     u11800:
 18920  011412  0E00               	movlw	0
 18921  011414                     u11810:
 18922  011414  6E0B               	movwf	(btemp+10)^0,c
 18923  011416  6A0C               	clrf	(btemp+11)^0,c
 18924                           
 18925                           ;stkvar	_efgtoa$5990 @ sp[(-56)+8]
 18926  011418  0ED0               	movlw	-48
 18927  01141A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18928  011420  0ED1               	movlw	-47
 18929  011422  0060  F033  FFE3   	movff	btemp+11,plusw1
 18930                           
 18931                           ;stkvar	_efgtoa$5990 @ sp[(-56)+8]
 18932  011428  0ED0               	movlw	-48
 18933  01142A  006F FF8C  F001    	movff	plusw1,btemp
 18934  011430  0ED1               	movlw	-47
 18935  011432  50E3               	movf	plusw1,w,c
 18936  011434  1001               	iorwf	btemp^0,w,c
 18937  011436  B4D8               	btfsc	status,2,c
 18938  011438  D017               	goto	l12846
 18939                           
 18940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 18941  01143A  0ED7               	movlw	low STR_82
 18942  01143C  6EE6               	movwf	postinc1,c
 18943  01143E  0EFF               	movlw	high STR_82
 18944  011440  6EE6               	movwf	postinc1,c
 18945                           
 18946                           ;stkvar	_n @ sp[(-58)+32]
 18947  011442  0E97               	movlw	low _dbuf
 18948  011444  6E0B               	movwf	(btemp+10)^0,c
 18949  011446  0E02               	movlw	high _dbuf
 18950  011448  6E0C               	movwf	(btemp+11)^0,c
 18951  01144A  0EE6               	movlw	-26
 18952  01144C  50E3               	movf	plusw1,w,c
 18953  01144E  260B               	addwf	(btemp+10)^0,f,c
 18954  011450  0EE7               	movlw	-25
 18955  011452  50E3               	movf	plusw1,w,c
 18956  011454  220C               	addwfc	(btemp+11)^0,f,c
 18957  011456  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18958  01145C  0060  F033  FFE6   	movff	btemp+11,postinc1
 18959  011462  ECF1  F0D5         	call	_strcpy	;wreg free
 18960                           
 18961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 18962  011466  D016               	goto	l12848
 18963  011468                     l12846:
 18964                           
 18965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 18966  011468  0EDF               	movlw	low STR_83
 18967  01146A  6EE6               	movwf	postinc1,c
 18968  01146C  0EFF               	movlw	high STR_83
 18969  01146E  6EE6               	movwf	postinc1,c
 18970                           
 18971                           ;stkvar	_n @ sp[(-58)+32]
 18972  011470  0E97               	movlw	low _dbuf
 18973  011472  6E0B               	movwf	(btemp+10)^0,c
 18974  011474  0E02               	movlw	high _dbuf
 18975  011476  6E0C               	movwf	(btemp+11)^0,c
 18976  011478  0EE6               	movlw	-26
 18977  01147A  50E3               	movf	plusw1,w,c
 18978  01147C  260B               	addwf	(btemp+10)^0,f,c
 18979  01147E  0EE7               	movlw	-25
 18980  011480  50E3               	movf	plusw1,w,c
 18981  011482  220C               	addwfc	(btemp+11)^0,f,c
 18982  011484  0060  F02F  FFE6   	movff	btemp+10,postinc1
 18983  01148A  0060  F033  FFE6   	movff	btemp+11,postinc1
 18984  011490  ECF1  F0D5         	call	_strcpy	;wreg free
 18985  011494                     l12848:
 18986                           
 18987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 18988                           ;stkvar	_w @ sp[(-56)+38]
 18989  011494  50E1               	movf	fsr1l,w,c
 18990  011496  0FEE               	addlw	-18
 18991  011498  6ED9               	movwf	fsr2l,c
 18992  01149A  50E2               	movf	fsr1h,w,c
 18993  01149C  6EDA               	movwf	fsr2h,c
 18994  01149E  0EFF               	movlw	255
 18995  0114A0  22DA               	addwfc	fsr2h,f,c
 18996  0114A2  0EFD               	movlw	253
 18997  0114A4  26DE               	addwf	postinc2,f,c
 18998  0114A6  0EFF               	movlw	255
 18999  0114A8  22DD               	addwfc	postdec2,f,c
 19000  0114AA                     l12850:
 19001                           
 19002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 19003                           ;stkvar	_w @ sp[(-56)+38]
 19004  0114AA  0EEE               	movlw	-18
 19005  0114AC  006F FF8F FFE6     	movff	plusw1,postinc1
 19006  0114B2  006F FF8F FFE6     	movff	plusw1,postinc1
 19007  0114B8  0E97               	movlw	low _dbuf
 19008  0114BA  6EE6               	movwf	postinc1,c
 19009  0114BC  0E02               	movlw	high _dbuf
 19010  0114BE  6EE6               	movwf	postinc1,c
 19011                           
 19012                           ;stkvar	_fp @ sp[(-60)+-2]
 19013  0114C0  0EC2               	movlw	-62
 19014  0114C2  006F FF8F FFE6     	movff	plusw1,postinc1
 19015  0114C8  006F FF8F FFE6     	movff	plusw1,postinc1
 19016  0114CE  EC0A  F0D2         	call	_pad	;wreg free
 19017  0114D2  EF5C  F092         	goto	l2346
 19018  0114D6                     l12854:
 19019                           
 19020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 19021                           ;stkvar	_g @ sp[(-56)+16]
 19022  0114D6  0ED8               	movlw	-40
 19023  0114D8  006F FF8F FFE6     	movff	plusw1,postinc1
 19024  0114DE  006F FF8F FFE6     	movff	plusw1,postinc1
 19025  0114E4  006F FF8F FFE6     	movff	plusw1,postinc1
 19026  0114EA  006F FF8F FFE6     	movff	plusw1,postinc1
 19027  0114F0  ECDC  F0C8         	call	___fpclassifyf	;wreg free
 19028  0114F4  5001               	movf	btemp^0,w,c
 19029  0114F6  1002               	iorwf	(btemp+1)^0,w,c
 19030  0114F8  A4D8               	btfss	status,2,c
 19031  0114FA  D056               	goto	l12872
 19032  0114FC  0EBF               	movlw	191
 19033  0114FE  6E0B               	movwf	(btemp+10)^0,c
 19034  011500  0EFF               	movlw	255
 19035  011502  6E0C               	movwf	(btemp+11)^0,c
 19036                           
 19037                           ;stkvar	_c @ sp[(-56)+-7]
 19038  011504  0EC1               	movlw	-63
 19039  011506  50E3               	movf	plusw1,w,c
 19040  011508  6E09               	movwf	(btemp+8)^0,c
 19041  01150A  6A0A               	clrf	(btemp+9)^0,c
 19042  01150C  500B               	movf	(btemp+10)^0,w,c
 19043  01150E  2609               	addwf	(btemp+8)^0,f,c
 19044  011510  500C               	movf	(btemp+11)^0,w,c
 19045  011512  220A               	addwfc	(btemp+9)^0,f,c
 19046  011514  500A               	movf	(btemp+9)^0,w,c
 19047  011516  E106               	bnz	u11840
 19048  011518  0E1A               	movlw	26
 19049  01151A  5C09               	subwf	(btemp+8)^0,w,c
 19050  01151C  B0D8               	btfsc	status,0,c
 19051  01151E  D002               	goto	u11840
 19052  011520  0E01               	movlw	1
 19053  011522  D001               	goto	u11850
 19054  011524                     u11840:
 19055  011524  0E00               	movlw	0
 19056  011526                     u11850:
 19057  011526  6E0B               	movwf	(btemp+10)^0,c
 19058  011528  6A0C               	clrf	(btemp+11)^0,c
 19059                           
 19060                           ;stkvar	_efgtoa$5994 @ sp[(-56)+6]
 19061  01152A  0ECE               	movlw	-50
 19062  01152C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19063  011532  0ECF               	movlw	-49
 19064  011534  0060  F033  FFE3   	movff	btemp+11,plusw1
 19065                           
 19066                           ;stkvar	_efgtoa$5994 @ sp[(-56)+6]
 19067  01153A  0ECE               	movlw	-50
 19068  01153C  006F FF8C  F001    	movff	plusw1,btemp
 19069  011542  0ECF               	movlw	-49
 19070  011544  50E3               	movf	plusw1,w,c
 19071  011546  1001               	iorwf	btemp^0,w,c
 19072  011548  B4D8               	btfsc	status,2,c
 19073  01154A  D017               	goto	l12864
 19074                           
 19075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 19076  01154C  0EDB               	movlw	low STR_86
 19077  01154E  6EE6               	movwf	postinc1,c
 19078  011550  0EFF               	movlw	high STR_86
 19079  011552  6EE6               	movwf	postinc1,c
 19080                           
 19081                           ;stkvar	_n @ sp[(-58)+32]
 19082  011554  0E97               	movlw	low _dbuf
 19083  011556  6E0B               	movwf	(btemp+10)^0,c
 19084  011558  0E02               	movlw	high _dbuf
 19085  01155A  6E0C               	movwf	(btemp+11)^0,c
 19086  01155C  0EE6               	movlw	-26
 19087  01155E  50E3               	movf	plusw1,w,c
 19088  011560  260B               	addwf	(btemp+10)^0,f,c
 19089  011562  0EE7               	movlw	-25
 19090  011564  50E3               	movf	plusw1,w,c
 19091  011566  220C               	addwfc	(btemp+11)^0,f,c
 19092  011568  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19093  01156E  0060  F033  FFE6   	movff	btemp+11,postinc1
 19094  011574  ECF1  F0D5         	call	_strcpy	;wreg free
 19095                           
 19096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 19097  011578  D78D               	goto	l12848
 19098  01157A                     l12864:
 19099                           
 19100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 19101  01157A  0EE3               	movlw	low STR_87
 19102  01157C  6EE6               	movwf	postinc1,c
 19103  01157E  0EFF               	movlw	high STR_87
 19104  011580  6EE6               	movwf	postinc1,c
 19105                           
 19106                           ;stkvar	_n @ sp[(-58)+32]
 19107  011582  0E97               	movlw	low _dbuf
 19108  011584  6E0B               	movwf	(btemp+10)^0,c
 19109  011586  0E02               	movlw	high _dbuf
 19110  011588  6E0C               	movwf	(btemp+11)^0,c
 19111  01158A  0EE6               	movlw	-26
 19112  01158C  50E3               	movf	plusw1,w,c
 19113  01158E  260B               	addwf	(btemp+10)^0,f,c
 19114  011590  0EE7               	movlw	-25
 19115  011592  50E3               	movf	plusw1,w,c
 19116  011594  220C               	addwfc	(btemp+11)^0,f,c
 19117  011596  0060  F02F  FFE6   	movff	btemp+10,postinc1
 19118  01159C  0060  F033  FFE6   	movff	btemp+11,postinc1
 19119  0115A2  ECF1  F0D5         	call	_strcpy	;wreg free
 19120  0115A6  D776               	goto	l12848
 19121  0115A8                     l12872:
 19122                           
 19123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 19124  0115A8  0E00               	movlw	0
 19125  0115AA  6E09               	movwf	(btemp+8)^0,c
 19126  0115AC  0E00               	movlw	0
 19127  0115AE  6E0A               	movwf	(btemp+9)^0,c
 19128  0115B0  0E80               	movlw	128
 19129  0115B2  6E0B               	movwf	(btemp+10)^0,c
 19130  0115B4  0E3F               	movlw	63
 19131  0115B6  6E0C               	movwf	(btemp+11)^0,c
 19132                           
 19133                           ;stkvar	_u @ sp[(-56)+12]
 19134  0115B8  0ED4               	movlw	-44
 19135  0115BA  0060  F027  FFE3   	movff	btemp+8,plusw1
 19136  0115C0  0ED5               	movlw	-43
 19137  0115C2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19138  0115C8  0ED6               	movlw	-42
 19139  0115CA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19140  0115D0  0ED7               	movlw	-41
 19141  0115D2  0060  F033  FFE3   	movff	btemp+11,plusw1
 19142                           
 19143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 19144                           ;stkvar	_e @ sp[(-56)+34]
 19145  0115D8  0EEA               	movlw	-22
 19146  0115DA  6AE3               	clrf	plusw1,c
 19147  0115DC  0EEB               	movlw	-21
 19148  0115DE  6AE3               	clrf	plusw1,c
 19149                           
 19150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 19151  0115E0  0E00               	movlw	0
 19152  0115E2  6EE6               	movwf	postinc1,c
 19153  0115E4  0E00               	movlw	0
 19154  0115E6  6EE6               	movwf	postinc1,c
 19155  0115E8  0E00               	movlw	0
 19156  0115EA  6EE6               	movwf	postinc1,c
 19157  0115EC  0E00               	movlw	0
 19158  0115EE  6EE6               	movwf	postinc1,c
 19159                           
 19160                           ;stkvar	_g @ sp[(-60)+16]
 19161  0115F0  0ED4               	movlw	-44
 19162  0115F2  006F FF8F FFE6     	movff	plusw1,postinc1
 19163  0115F8  006F FF8F FFE6     	movff	plusw1,postinc1
 19164  0115FE  006F FF8F FFE6     	movff	plusw1,postinc1
 19165  011604  006F FF8F FFE6     	movff	plusw1,postinc1
 19166  01160A  ECC3  F0D6         	call	___fleq	;wreg free
 19167  01160E  A001               	btfss	btemp& (0+255),0,c
 19168  011610  D039               	goto	l12884
 19169  011612  D0BC               	goto	u11890
 19170  011614                     l12880:
 19171                           
 19172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 19173  011614  0E00               	movlw	0
 19174  011616  6EE6               	movwf	postinc1,c
 19175  011618  0E00               	movlw	0
 19176  01161A  6EE6               	movwf	postinc1,c
 19177  01161C  0E20               	movlw	32
 19178  01161E  6EE6               	movwf	postinc1,c
 19179  011620  0E41               	movlw	65
 19180  011622  6EE6               	movwf	postinc1,c
 19181                           
 19182                           ;stkvar	_u @ sp[(-60)+12]
 19183  011624  0ED0               	movlw	-48
 19184  011626  006F FF8F FFE6     	movff	plusw1,postinc1
 19185  01162C  006F FF8F FFE6     	movff	plusw1,postinc1
 19186  011632  006F FF8F FFE6     	movff	plusw1,postinc1
 19187  011638  006F FF8F FFE6     	movff	plusw1,postinc1
 19188  01163E  EC6E  F09F         	call	___flmul	;wreg free
 19189                           
 19190                           ;stkvar	_u @ sp[(-56)+12]
 19191  011642  0ED4               	movlw	-44
 19192  011644  0060  F007  FFE3   	movff	btemp,plusw1
 19193  01164A  0ED5               	movlw	-43
 19194  01164C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19195  011652  0ED6               	movlw	-42
 19196  011654  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19197  01165A  0ED7               	movlw	-41
 19198  01165C  0060  F013  FFE3   	movff	btemp+3,plusw1
 19199                           
 19200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 19201                           ;stkvar	_e @ sp[(-56)+34]
 19202  011662  0EEA               	movlw	-22
 19203  011664  50E3               	movf	plusw1,w,c
 19204  011666  0F01               	addlw	1
 19205  011668  6E01               	movwf	btemp^0,c
 19206  01166A  0EEA               	movlw	-22
 19207  01166C  0060  F007  FFE3   	movff	btemp,plusw1
 19208  011672  6A01               	clrf	btemp^0,c
 19209  011674  0EEB               	movlw	-21
 19210  011676  50E3               	movf	plusw1,w,c
 19211  011678  2001               	addwfc	btemp^0,w,c
 19212  01167A  6E01               	movwf	btemp^0,c
 19213  01167C  0EEB               	movlw	-21
 19214  01167E  0060  F007  FFE3   	movff	btemp,plusw1
 19215  011684                     l12884:
 19216                           
 19217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 19218  011684  0E00               	movlw	0
 19219  011686  6EE6               	movwf	postinc1,c
 19220  011688  0E00               	movlw	0
 19221  01168A  6EE6               	movwf	postinc1,c
 19222  01168C  0E20               	movlw	32
 19223  01168E  6EE6               	movwf	postinc1,c
 19224  011690  0E41               	movlw	65
 19225  011692  6EE6               	movwf	postinc1,c
 19226                           
 19227                           ;stkvar	_u @ sp[(-60)+12]
 19228  011694  0ED0               	movlw	-48
 19229  011696  006F FF8F FFE6     	movff	plusw1,postinc1
 19230  01169C  006F FF8F FFE6     	movff	plusw1,postinc1
 19231  0116A2  006F FF8F FFE6     	movff	plusw1,postinc1
 19232  0116A8  006F FF8F FFE6     	movff	plusw1,postinc1
 19233  0116AE  EC6E  F09F         	call	___flmul	;wreg free
 19234  0116B2  0060  F007  FFE6   	movff	btemp,postinc1
 19235  0116B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19236  0116BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 19237  0116C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 19238                           
 19239                           ;stkvar	_g @ sp[(-60)+16]
 19240  0116CA  0ED4               	movlw	-44
 19241  0116CC  006F FF8F FFE6     	movff	plusw1,postinc1
 19242  0116D2  006F FF8F FFE6     	movff	plusw1,postinc1
 19243  0116D8  006F FF8F FFE6     	movff	plusw1,postinc1
 19244  0116DE  006F FF8F FFE6     	movff	plusw1,postinc1
 19245  0116E4  ECE3  F0CB         	call	___flge	;wreg free
 19246  0116E8  A001               	btfss	btemp& (0+255),0,c
 19247  0116EA  D032               	goto	l12890
 19248  0116EC  D793               	goto	l12880
 19249  0116EE                     l12886:
 19250                           
 19251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 19252  0116EE  0E00               	movlw	0
 19253  0116F0  6EE6               	movwf	postinc1,c
 19254  0116F2  0E00               	movlw	0
 19255  0116F4  6EE6               	movwf	postinc1,c
 19256  0116F6  0E20               	movlw	32
 19257  0116F8  6EE6               	movwf	postinc1,c
 19258  0116FA  0E41               	movlw	65
 19259  0116FC  6EE6               	movwf	postinc1,c
 19260                           
 19261                           ;stkvar	_u @ sp[(-60)+12]
 19262  0116FE  0ED0               	movlw	-48
 19263  011700  006F FF8F FFE6     	movff	plusw1,postinc1
 19264  011706  006F FF8F FFE6     	movff	plusw1,postinc1
 19265  01170C  006F FF8F FFE6     	movff	plusw1,postinc1
 19266  011712  006F FF8F FFE6     	movff	plusw1,postinc1
 19267  011718  EC61  F0A7         	call	___fldiv	;wreg free
 19268                           
 19269                           ;stkvar	_u @ sp[(-56)+12]
 19270  01171C  0ED4               	movlw	-44
 19271  01171E  0060  F007  FFE3   	movff	btemp,plusw1
 19272  011724  0ED5               	movlw	-43
 19273  011726  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19274  01172C  0ED6               	movlw	-42
 19275  01172E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19276  011734  0ED7               	movlw	-41
 19277  011736  0060  F013  FFE3   	movff	btemp+3,plusw1
 19278                           
 19279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 19280                           ;stkvar	_e @ sp[(-56)+34]
 19281  01173C  50E1               	movf	fsr1l,w,c
 19282  01173E  0FEA               	addlw	-22
 19283  011740  6ED9               	movwf	fsr2l,c
 19284  011742  50E2               	movf	fsr1h,w,c
 19285  011744  6EDA               	movwf	fsr2h,c
 19286  011746  0EFF               	movlw	255
 19287  011748  22DA               	addwfc	fsr2h,f,c
 19288  01174A  06DE               	decf	postinc2,f,c
 19289  01174C  0E00               	movlw	0
 19290  01174E  5ADD               	subwfb	postdec2,f,c
 19291  011750                     l12890:
 19292                           
 19293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 19294                           ;stkvar	_u @ sp[(-56)+12]
 19295  011750  0ED4               	movlw	-44
 19296  011752  006F FF8F FFE6     	movff	plusw1,postinc1
 19297  011758  006F FF8F FFE6     	movff	plusw1,postinc1
 19298  01175E  006F FF8F FFE6     	movff	plusw1,postinc1
 19299  011764  006F FF8F FFE6     	movff	plusw1,postinc1
 19300                           
 19301                           ;stkvar	_g @ sp[(-60)+16]
 19302  01176A  0ED4               	movlw	-44
 19303  01176C  006F FF8F FFE6     	movff	plusw1,postinc1
 19304  011772  006F FF8F FFE6     	movff	plusw1,postinc1
 19305  011778  006F FF8F FFE6     	movff	plusw1,postinc1
 19306  01177E  006F FF8F FFE6     	movff	plusw1,postinc1
 19307  011784  ECE3  F0CB         	call	___flge	;wreg free
 19308  011788  A001               	btfss	btemp& (0+255),0,c
 19309  01178A  D7B1               	goto	l12886
 19310  01178C                     u11890:
 19311                           
 19312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 19313                           ;stkvar	_c @ sp[(-56)+-7]
 19314  01178C  0EC1               	movlw	-63
 19315  01178E  50E3               	movf	plusw1,w,c
 19316  011790  6EE6               	movwf	postinc1,c
 19317  011792  0E00               	movlw	0
 19318  011794  6EE6               	movwf	postinc1,c
 19319  011796  EC3D  F0DC         	call	_tolower	;wreg free
 19320                           
 19321                           ;stkvar	_mode @ sp[(-56)+54]
 19322  01179A  0EFE               	movlw	-2
 19323  01179C  0060  F007  FFE3   	movff	btemp,plusw1
 19324                           
 19325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 19326                           ;stkvar	_mode @ sp[(-56)+54]
 19327                           ;stkvar	_nmode @ sp[(-56)+55]
 19328  0117A2  0EFE               	movlw	-2
 19329  0117A4  006F FF8C  F001    	movff	plusw1,btemp
 19330  0117AA  0EFF               	movlw	-1
 19331  0117AC  0060  F007  FFE3   	movff	btemp,plusw1
 19332                           
 19333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 19334                           ;stkvar	_mode @ sp[(-56)+54]
 19335  0117B2  0EFE               	movlw	-2
 19336  0117B4  006F FF8C  F001    	movff	plusw1,btemp
 19337  0117BA  0E67               	movlw	103
 19338  0117BC  1801               	xorwf	btemp^0,w,c
 19339  0117BE  A4D8               	btfss	status,2,c
 19340  0117C0  D025               	goto	l12908
 19341                           
 19342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 19343  0117C2  503C               	movf	_prec^0,w,c
 19344  0117C4  103D               	iorwf	(_prec+1)^0,w,c
 19345  0117C6  A4D8               	btfss	status,2,c
 19346  0117C8  D004               	goto	l12902
 19347                           
 19348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 19349  0117CA  0E00               	movlw	0
 19350  0117CC  6E3D               	movwf	(_prec+1)^0,c
 19351  0117CE  0E01               	movlw	1
 19352  0117D0  6E3C               	movwf	_prec^0,c
 19353  0117D2                     l12902:
 19354                           
 19355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 19356  0117D2  BE3D               	btfsc	(_prec+1)^0,7,c
 19357  0117D4  D005               	goto	u11920
 19358  0117D6  503D               	movf	(_prec+1)^0,w,c
 19359  0117D8  E110               	bnz	l12906
 19360  0117DA  043C               	decf	_prec^0,w,c
 19361  0117DC  B0D8               	btfsc	status,0,c
 19362  0117DE  D00D               	goto	l12906
 19363  0117E0                     u11920:
 19364  0117E0  0E06               	movlw	6
 19365  0117E2  6E0B               	movwf	(btemp+10)^0,c
 19366  0117E4  0E00               	movlw	0
 19367  0117E6  6E0C               	movwf	(btemp+11)^0,c
 19368                           
 19369                           ;stkvar	_p @ sp[(-56)+40]
 19370  0117E8  0EF0               	movlw	-16
 19371  0117EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19372  0117F0  0EF1               	movlw	-15
 19373  0117F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 19374  0117F8  D00C               	goto	l12914
 19375  0117FA                     l12906:
 19376                           
 19377                           ;stkvar	_p @ sp[(-56)+40]
 19378  0117FA  0EF0               	movlw	-16
 19379  0117FC  0060  F0F3  FFE3   	movff	_prec,plusw1
 19380  011802  0EF1               	movlw	-15
 19381  011804  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 19382  01180A  D003               	goto	l12914
 19383  01180C                     l12908:
 19384                           
 19385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 19386  01180C  AE3D               	btfss	(_prec+1)^0,7,c
 19387  01180E  D7F5               	goto	l12906
 19388  011810  D7E7               	goto	u11920
 19389  011812                     l12914:
 19390                           
 19391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 19392                           ;stkvar	_mode @ sp[(-56)+54]
 19393  011812  0EFE               	movlw	-2
 19394  011814  006F FF8C  F001    	movff	plusw1,btemp
 19395  01181A  0E67               	movlw	103
 19396  01181C  1801               	xorwf	btemp^0,w,c
 19397  01181E  A4D8               	btfss	status,2,c
 19398  011820  D02F               	goto	l12924
 19399                           
 19400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 19401                           ;stkvar	_e @ sp[(-56)+34]
 19402  011822  0EEB               	movlw	-21
 19403  011824  AEE3               	btfss	plusw1,7,c
 19404  011826  D00E               	goto	u11950
 19405  011828  0EEA               	movlw	-22
 19406  01182A  006F FF8C  F001    	movff	plusw1,btemp
 19407  011830  0EFC               	movlw	252
 19408  011832  5E01               	subwf	btemp^0,f,c
 19409  011834  0EEB               	movlw	-21
 19410  011836  006F FF8C  F001    	movff	plusw1,btemp
 19411  01183C  0EFF               	movlw	255
 19412  01183E  5A01               	subwfb	btemp^0,f,c
 19413  011840  A0D8               	btfss	status,0,c
 19414  011842  D018               	goto	l12922
 19415  011844                     u11950:
 19416                           
 19417                           ;stkvar	_e @ sp[(-56)+34]
 19418                           ;stkvar	_p @ sp[(-56)+40]
 19419  011844  0EF0               	movlw	-16
 19420  011846  50E3               	movf	plusw1,w,c
 19421  011848  0FFF               	addlw	255
 19422  01184A  6E0B               	movwf	(btemp+10)^0,c
 19423  01184C  0EF1               	movlw	-15
 19424  01184E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19425  011854  0EFF               	movlw	255
 19426  011856  220C               	addwfc	(btemp+11)^0,f,c
 19427  011858  0EEA               	movlw	-22
 19428  01185A  50E3               	movf	plusw1,w,c
 19429  01185C  5C0B               	subwf	(btemp+10)^0,w,c
 19430  01185E  500C               	movf	(btemp+11)^0,w,c
 19431  011860  0A80               	xorlw	128
 19432  011862  6E01               	movwf	btemp^0,c
 19433  011864  0EEB               	movlw	-21
 19434  011866  50E3               	movf	plusw1,w,c
 19435  011868  0A80               	xorlw	128
 19436  01186A  5801               	subwfb	btemp^0,w,c
 19437  01186C  A0D8               	btfss	status,0,c
 19438  01186E  D002               	goto	l12922
 19439                           
 19440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 19441  011870  0E66               	movlw	102
 19442  011872  D001               	goto	L21
 19443  011874                     l12922:
 19444                           
 19445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 19446  011874  0E65               	movlw	101
 19447  011876                     L21:
 19448  011876  6E0C               	movwf	(btemp+11)^0,c
 19449                           
 19450                           ;stkvar	_nmode @ sp[(-56)+55]
 19451  011878  0EFF               	movlw	-1
 19452  01187A  0060  F033  FFE3   	movff	btemp+11,plusw1
 19453  011880                     l12924:
 19454                           
 19455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 19456                           ;stkvar	_p @ sp[(-56)+40]
 19457                           ;stkvar	_m @ sp[(-56)+48]
 19458  011880  0EF0               	movlw	-16
 19459  011882  006F FF8C  F001    	movff	plusw1,btemp
 19460  011888  0EF8               	movlw	-8
 19461  01188A  0060  F007  FFE3   	movff	btemp,plusw1
 19462  011890  0EF1               	movlw	-15
 19463  011892  006F FF8C  F001    	movff	plusw1,btemp
 19464  011898  0EF9               	movlw	-7
 19465  01189A  0060  F007  FFE3   	movff	btemp,plusw1
 19466                           
 19467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 19468                           ;stkvar	_mode @ sp[(-56)+54]
 19469  0118A0  0EFE               	movlw	-2
 19470  0118A2  006F FF8C  F001    	movff	plusw1,btemp
 19471  0118A8  0E67               	movlw	103
 19472  0118AA  1801               	xorwf	btemp^0,w,c
 19473  0118AC  A4D8               	btfss	status,2,c
 19474  0118AE  D00B               	goto	u11990
 19475                           
 19476                           ;stkvar	_nmode @ sp[(-56)+55]
 19477  0118B0  0EFF               	movlw	-1
 19478  0118B2  006F FF8C  F001    	movff	plusw1,btemp
 19479  0118B8  0E66               	movlw	102
 19480  0118BA  1801               	xorwf	btemp^0,w,c
 19481  0118BC  A4D8               	btfss	status,2,c
 19482  0118BE  D014               	goto	l2375
 19483                           
 19484                           ;stkvar	_e @ sp[(-56)+34]
 19485  0118C0  0EEB               	movlw	-21
 19486  0118C2  AEE3               	btfss	plusw1,7,c
 19487  0118C4  D011               	goto	l2375
 19488  0118C6                     u11990:
 19489                           
 19490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 19491                           ;stkvar	_m @ sp[(-56)+48]
 19492  0118C6  0EF8               	movlw	-8
 19493  0118C8  50E3               	movf	plusw1,w,c
 19494  0118CA  0F01               	addlw	1
 19495  0118CC  6E01               	movwf	btemp^0,c
 19496  0118CE  0EF8               	movlw	-8
 19497  0118D0  0060  F007  FFE3   	movff	btemp,plusw1
 19498  0118D6  6A01               	clrf	btemp^0,c
 19499  0118D8  0EF9               	movlw	-7
 19500  0118DA  50E3               	movf	plusw1,w,c
 19501  0118DC  2001               	addwfc	btemp^0,w,c
 19502  0118DE  6E01               	movwf	btemp^0,c
 19503  0118E0  0EF9               	movlw	-7
 19504  0118E2  0060  F007  FFE3   	movff	btemp,plusw1
 19505  0118E8                     l2375:
 19506                           
 19507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 19508                           ;stkvar	_nmode @ sp[(-56)+55]
 19509  0118E8  0EFF               	movlw	-1
 19510  0118EA  006F FF8C  F001    	movff	plusw1,btemp
 19511  0118F0  0E66               	movlw	102
 19512  0118F2  1801               	xorwf	btemp^0,w,c
 19513  0118F4  A4D8               	btfss	status,2,c
 19514  0118F6  D03B               	goto	l12944
 19515                           
 19516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 19517                           ;stkvar	_e @ sp[(-56)+34]
 19518  0118F8  0EEB               	movlw	-21
 19519  0118FA  AEE3               	btfss	plusw1,7,c
 19520  0118FC  D01C               	goto	l12940
 19521                           
 19522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 19523  0118FE  0E00               	movlw	0
 19524  011900  6E09               	movwf	(btemp+8)^0,c
 19525  011902  0E00               	movlw	0
 19526  011904  6E0A               	movwf	(btemp+9)^0,c
 19527  011906  0E80               	movlw	128
 19528  011908  6E0B               	movwf	(btemp+10)^0,c
 19529  01190A  0E3F               	movlw	63
 19530  01190C  6E0C               	movwf	(btemp+11)^0,c
 19531                           
 19532                           ;stkvar	_u @ sp[(-56)+12]
 19533  01190E  0ED4               	movlw	-44
 19534  011910  0060  F027  FFE3   	movff	btemp+8,plusw1
 19535  011916  0ED5               	movlw	-43
 19536  011918  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19537  01191E  0ED6               	movlw	-42
 19538  011920  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19539  011926  0ED7               	movlw	-41
 19540  011928  0060  F033  FFE3   	movff	btemp+11,plusw1
 19541                           
 19542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 19543                           ;stkvar	_e @ sp[(-56)+34]
 19544  01192E  0EEA               	movlw	-22
 19545  011930  6AE3               	clrf	plusw1,c
 19546  011932  0EEB               	movlw	-21
 19547  011934  6AE3               	clrf	plusw1,c
 19548  011936                     l12940:
 19549                           
 19550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 19551                           ;stkvar	_mode @ sp[(-56)+54]
 19552  011936  0EFE               	movlw	-2
 19553  011938  006F FF8C  F001    	movff	plusw1,btemp
 19554  01193E  0E67               	movlw	103
 19555  011940  1801               	xorwf	btemp^0,w,c
 19556  011942  B4D8               	btfsc	status,2,c
 19557  011944  D014               	goto	l12944
 19558                           
 19559                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 19560                           ;stkvar	_e @ sp[(-56)+34]
 19561                           ;stkvar	_m @ sp[(-56)+48]
 19562  011946  0EF8               	movlw	-8
 19563  011948  50E3               	movf	plusw1,w,c
 19564  01194A  6E01               	movwf	btemp^0,c
 19565  01194C  0EEA               	movlw	-22
 19566  01194E  50E3               	movf	plusw1,w,c
 19567  011950  2601               	addwf	btemp^0,f,c
 19568  011952  0EF8               	movlw	-8
 19569  011954  0060  F007  FFE3   	movff	btemp,plusw1
 19570  01195A  0EF9               	movlw	-7
 19571  01195C  50E3               	movf	plusw1,w,c
 19572  01195E  6E01               	movwf	btemp^0,c
 19573  011960  0EEB               	movlw	-21
 19574  011962  50E3               	movf	plusw1,w,c
 19575  011964  2201               	addwfc	btemp^0,f,c
 19576  011966  0EF9               	movlw	-7
 19577  011968  0060  F007  FFE3   	movff	btemp,plusw1
 19578  01196E                     l12944:
 19579                           
 19580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 19581                           ;stkvar	_i @ sp[(-56)+36]
 19582  01196E  0EEC               	movlw	-20
 19583  011970  6AE3               	clrf	plusw1,c
 19584  011972  0EED               	movlw	-19
 19585  011974  6AE3               	clrf	plusw1,c
 19586                           
 19587                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 19588                           ;stkvar	_g @ sp[(-56)+16]
 19589  011976  0ED8               	movlw	-40
 19590  011978  006F FF8C  F009    	movff	plusw1,btemp+8
 19591  01197E  0ED9               	movlw	-39
 19592  011980  006F FF8C  F00A    	movff	plusw1,btemp+9
 19593  011986  0EDA               	movlw	-38
 19594  011988  006F FF8C  F00B    	movff	plusw1,btemp+10
 19595  01198E  0EDB               	movlw	-37
 19596  011990  006F FF8C  F00C    	movff	plusw1,btemp+11
 19597                           
 19598                           ;stkvar	_h @ sp[(-56)+24]
 19599  011996  0EE0               	movlw	-32
 19600  011998  0060  F027  FFE3   	movff	btemp+8,plusw1
 19601  01199E  0EE1               	movlw	-31
 19602  0119A0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19603  0119A6  0EE2               	movlw	-30
 19604  0119A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19605  0119AE  0EE3               	movlw	-29
 19606  0119B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 19607                           
 19608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 19609                           ;stkvar	_u @ sp[(-56)+12]
 19610  0119B6  0ED4               	movlw	-44
 19611  0119B8  006F FF8C  F009    	movff	plusw1,btemp+8
 19612  0119BE  0ED5               	movlw	-43
 19613  0119C0  006F FF8C  F00A    	movff	plusw1,btemp+9
 19614  0119C6  0ED6               	movlw	-42
 19615  0119C8  006F FF8C  F00B    	movff	plusw1,btemp+10
 19616  0119CE  0ED7               	movlw	-41
 19617  0119D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 19618                           
 19619                           ;stkvar	_ou @ sp[(-56)+28]
 19620  0119D6  0EE4               	movlw	-28
 19621  0119D8  0060  F027  FFE3   	movff	btemp+8,plusw1
 19622  0119DE  0EE5               	movlw	-27
 19623  0119E0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19624  0119E6  0EE6               	movlw	-26
 19625  0119E8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19626  0119EE  0EE7               	movlw	-25
 19627  0119F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 19628                           
 19629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 19630  0119F6  D0D6               	goto	l12960
 19631  0119F8                     l12950:
 19632                           
 19633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 19634                           ;stkvar	_u @ sp[(-56)+12]
 19635  0119F8  0ED4               	movlw	-44
 19636  0119FA  006F FF8F FFE6     	movff	plusw1,postinc1
 19637  011A00  006F FF8F FFE6     	movff	plusw1,postinc1
 19638  011A06  006F FF8F FFE6     	movff	plusw1,postinc1
 19639  011A0C  006F FF8F FFE6     	movff	plusw1,postinc1
 19640                           
 19641                           ;stkvar	_h @ sp[(-60)+24]
 19642  011A12  0EDC               	movlw	-36
 19643  011A14  006F FF8F FFE6     	movff	plusw1,postinc1
 19644  011A1A  006F FF8F FFE6     	movff	plusw1,postinc1
 19645  011A20  006F FF8F FFE6     	movff	plusw1,postinc1
 19646  011A26  006F FF8F FFE6     	movff	plusw1,postinc1
 19647  011A2C  EC61  F0A7         	call	___fldiv	;wreg free
 19648  011A30  0060  F007  FFE6   	movff	btemp,postinc1
 19649  011A36  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19650  011A3C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 19651  011A42  0060  F013  FFE6   	movff	btemp+3,postinc1
 19652  011A48  EC1B  F0B5         	call	_floorf	;wreg free
 19653                           
 19654                           ;stkvar	_l @ sp[(-56)+20]
 19655  011A4C  0EDC               	movlw	-36
 19656  011A4E  0060  F007  FFE3   	movff	btemp,plusw1
 19657  011A54  0EDD               	movlw	-35
 19658  011A56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19659  011A5C  0EDE               	movlw	-34
 19660  011A5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19661  011A64  0EDF               	movlw	-33
 19662  011A66  0060  F013  FFE3   	movff	btemp+3,plusw1
 19663                           
 19664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 19665                           ;stkvar	_l @ sp[(-56)+20]
 19666  011A6C  0EDC               	movlw	-36
 19667  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
 19668  011A74  006F FF8F FFE6     	movff	plusw1,postinc1
 19669  011A7A  006F FF8F FFE6     	movff	plusw1,postinc1
 19670  011A80  006F FF8F FFE6     	movff	plusw1,postinc1
 19671  011A86  EC2A  F0CB         	call	___fltol	;wreg free
 19672  011A8A  0060  F004  F00B   	movff	btemp,btemp+10
 19673  011A90  0060  F008  F00C   	movff	btemp+1,btemp+11
 19674                           
 19675                           ;stkvar	_d @ sp[(-56)+44]
 19676  011A96  0EF4               	movlw	-12
 19677  011A98  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19678  011A9E  0EF5               	movlw	-11
 19679  011AA0  0060  F033  FFE3   	movff	btemp+11,plusw1
 19680                           
 19681                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 19682                           ;stkvar	_u @ sp[(-56)+12]
 19683  011AA6  0ED4               	movlw	-44
 19684  011AA8  006F FF8F FFE6     	movff	plusw1,postinc1
 19685  011AAE  006F FF8F FFE6     	movff	plusw1,postinc1
 19686  011AB4  006F FF8F FFE6     	movff	plusw1,postinc1
 19687  011ABA  006F FF8F FFE6     	movff	plusw1,postinc1
 19688                           
 19689                           ;stkvar	_l @ sp[(-60)+20]
 19690  011AC0  0ED8               	movlw	-40
 19691  011AC2  006F FF8F FFE6     	movff	plusw1,postinc1
 19692  011AC8  006F FF8F FFE6     	movff	plusw1,postinc1
 19693  011ACE  006F FF8F FFE6     	movff	plusw1,postinc1
 19694  011AD4  006F FF8F FFE6     	movff	plusw1,postinc1
 19695  011ADA  EC6E  F09F         	call	___flmul	;wreg free
 19696  011ADE  0060  F007  FFE6   	movff	btemp,postinc1
 19697  011AE4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 19698  011AEA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 19699  011AF0  0060  F013  FFE6   	movff	btemp+3,postinc1
 19700                           
 19701                           ;stkvar	_h @ sp[(-60)+24]
 19702  011AF6  0EDC               	movlw	-36
 19703  011AF8  006F FF8F FFE6     	movff	plusw1,postinc1
 19704  011AFE  006F FF8F FFE6     	movff	plusw1,postinc1
 19705  011B04  006F FF8F FFE6     	movff	plusw1,postinc1
 19706  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
 19707  011B10  ECAA  F0E1         	call	___flsub	;wreg free
 19708                           
 19709                           ;stkvar	_h @ sp[(-56)+24]
 19710  011B14  0EE0               	movlw	-32
 19711  011B16  0060  F007  FFE3   	movff	btemp,plusw1
 19712  011B1C  0EE1               	movlw	-31
 19713  011B1E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19714  011B24  0EE2               	movlw	-30
 19715  011B26  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19716  011B2C  0EE3               	movlw	-29
 19717  011B2E  0060  F013  FFE3   	movff	btemp+3,plusw1
 19718                           
 19719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 19720  011B34  0E00               	movlw	0
 19721  011B36  6EE6               	movwf	postinc1,c
 19722  011B38  0E00               	movlw	0
 19723  011B3A  6EE6               	movwf	postinc1,c
 19724  011B3C  0E20               	movlw	32
 19725  011B3E  6EE6               	movwf	postinc1,c
 19726  011B40  0E41               	movlw	65
 19727  011B42  6EE6               	movwf	postinc1,c
 19728                           
 19729                           ;stkvar	_u @ sp[(-60)+12]
 19730  011B44  0ED0               	movlw	-48
 19731  011B46  006F FF8F FFE6     	movff	plusw1,postinc1
 19732  011B4C  006F FF8F FFE6     	movff	plusw1,postinc1
 19733  011B52  006F FF8F FFE6     	movff	plusw1,postinc1
 19734  011B58  006F FF8F FFE6     	movff	plusw1,postinc1
 19735  011B5E  EC61  F0A7         	call	___fldiv	;wreg free
 19736                           
 19737                           ;stkvar	_u @ sp[(-56)+12]
 19738  011B62  0ED4               	movlw	-44
 19739  011B64  0060  F007  FFE3   	movff	btemp,plusw1
 19740  011B6A  0ED5               	movlw	-43
 19741  011B6C  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19742  011B72  0ED6               	movlw	-42
 19743  011B74  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19744  011B7A  0ED7               	movlw	-41
 19745  011B7C  0060  F013  FFE3   	movff	btemp+3,plusw1
 19746                           
 19747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 19748                           ;stkvar	_i @ sp[(-56)+36]
 19749  011B82  0EEC               	movlw	-20
 19750  011B84  50E3               	movf	plusw1,w,c
 19751  011B86  0F01               	addlw	1
 19752  011B88  6E01               	movwf	btemp^0,c
 19753  011B8A  0EEC               	movlw	-20
 19754  011B8C  0060  F007  FFE3   	movff	btemp,plusw1
 19755  011B92  6A01               	clrf	btemp^0,c
 19756  011B94  0EED               	movlw	-19
 19757  011B96  50E3               	movf	plusw1,w,c
 19758  011B98  2001               	addwfc	btemp^0,w,c
 19759  011B9A  6E01               	movwf	btemp^0,c
 19760  011B9C  0EED               	movlw	-19
 19761  011B9E  0060  F007  FFE3   	movff	btemp,plusw1
 19762  011BA4                     l12960:
 19763                           
 19764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 19765                           ;stkvar	_m @ sp[(-56)+48]
 19766                           ;stkvar	_i @ sp[(-56)+36]
 19767  011BA4  50E1               	movf	fsr1l,w,c
 19768  011BA6  0FEC               	addlw	-20
 19769  011BA8  6ED9               	movwf	fsr2l,c
 19770  011BAA  50E2               	movf	fsr1h,w,c
 19771  011BAC  6EDA               	movwf	fsr2h,c
 19772  011BAE  0EFF               	movlw	255
 19773  011BB0  22DA               	addwfc	fsr2h,f,c
 19774  011BB2  0EF8               	movlw	-8
 19775  011BB4  50E3               	movf	plusw1,w,c
 19776  011BB6  5CDE               	subwf	postinc2,w,c
 19777  011BB8  50DE               	movf	postinc2,w,c
 19778  011BBA  0A80               	xorlw	128
 19779  011BBC  6E01               	movwf	btemp^0,c
 19780  011BBE  0EF9               	movlw	-7
 19781  011BC0  50E3               	movf	plusw1,w,c
 19782  011BC2  0A80               	xorlw	128
 19783  011BC4  5801               	subwfb	btemp^0,w,c
 19784  011BC6  A0D8               	btfss	status,0,c
 19785  011BC8  D717               	goto	l12950
 19786                           
 19787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 19788  011BCA  0E00               	movlw	0
 19789  011BCC  6EE6               	movwf	postinc1,c
 19790  011BCE  0E00               	movlw	0
 19791  011BD0  6EE6               	movwf	postinc1,c
 19792  011BD2  0EA0               	movlw	160
 19793  011BD4  6EE6               	movwf	postinc1,c
 19794  011BD6  0E40               	movlw	64
 19795  011BD8  6EE6               	movwf	postinc1,c
 19796                           
 19797                           ;stkvar	_u @ sp[(-60)+12]
 19798  011BDA  0ED0               	movlw	-48
 19799  011BDC  006F FF8F FFE6     	movff	plusw1,postinc1
 19800  011BE2  006F FF8F FFE6     	movff	plusw1,postinc1
 19801  011BE8  006F FF8F FFE6     	movff	plusw1,postinc1
 19802  011BEE  006F FF8F FFE6     	movff	plusw1,postinc1
 19803  011BF4  EC6E  F09F         	call	___flmul	;wreg free
 19804                           
 19805                           ;stkvar	_l @ sp[(-56)+20]
 19806  011BF8  0EDC               	movlw	-36
 19807  011BFA  0060  F007  FFE3   	movff	btemp,plusw1
 19808  011C00  0EDD               	movlw	-35
 19809  011C02  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19810  011C08  0EDE               	movlw	-34
 19811  011C0A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19812  011C10  0EDF               	movlw	-33
 19813  011C12  0060  F013  FFE3   	movff	btemp+3,plusw1
 19814                           
 19815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 19816                           ;stkvar	_l @ sp[(-56)+20]
 19817  011C18  0EDC               	movlw	-36
 19818  011C1A  006F FF8F FFE6     	movff	plusw1,postinc1
 19819  011C20  006F FF8F FFE6     	movff	plusw1,postinc1
 19820  011C26  006F FF8F FFE6     	movff	plusw1,postinc1
 19821  011C2C  006F FF8F FFE6     	movff	plusw1,postinc1
 19822                           
 19823                           ;stkvar	_h @ sp[(-60)+24]
 19824  011C32  0EDC               	movlw	-36
 19825  011C34  006F FF8F FFE6     	movff	plusw1,postinc1
 19826  011C3A  006F FF8F FFE6     	movff	plusw1,postinc1
 19827  011C40  006F FF8F FFE6     	movff	plusw1,postinc1
 19828  011C46  006F FF8F FFE6     	movff	plusw1,postinc1
 19829  011C4C  ECE3  F0CB         	call	___flge	;wreg free
 19830  011C50  A001               	btfss	btemp& (0+255),0,c
 19831  011C52  D021               	goto	u12060
 19832                           
 19833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 19834                           ;stkvar	_l @ sp[(-56)+20]
 19835                           
 19836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 19837                           
 19838                           ;stkvar	_l @ sp[(-56)+20]
 19839                           
 19840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 19841  011C54  0EDC               	movlw	-36
 19842  011C56  006F FF8F FFE6     	movff	plusw1,postinc1
 19843  011C5C  006F FF8F FFE6     	movff	plusw1,postinc1
 19844  011C62  006F FF8F FFE6     	movff	plusw1,postinc1
 19845  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
 19846                           
 19847                           ;stkvar	_h @ sp[(-60)+24]
 19848  011C6E  0EDC               	movlw	-36
 19849  011C70  006F FF8F FFE6     	movff	plusw1,postinc1
 19850  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
 19851  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
 19852  011C82  006F FF8F FFE6     	movff	plusw1,postinc1
 19853  011C88  ECC3  F0D6         	call	___fleq	;wreg free
 19854  011C8C  A001               	btfss	btemp& (0+255),0,c
 19855  011C8E  D01B               	goto	l12974
 19856                           
 19857                           ;stkvar	_d @ sp[(-56)+44]
 19858  011C90  0EF4               	movlw	-12
 19859  011C92  B0E3               	btfsc	plusw1,0,c
 19860  011C94  D018               	goto	l12974
 19861  011C96                     u12060:
 19862                           
 19863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 19864  011C96  0E00               	movlw	0
 19865  011C98  6E09               	movwf	(btemp+8)^0,c
 19866  011C9A  0E00               	movlw	0
 19867  011C9C  6E0A               	movwf	(btemp+9)^0,c
 19868  011C9E  0E00               	movlw	0
 19869  011CA0  6E0B               	movwf	(btemp+10)^0,c
 19870  011CA2  0E00               	movlw	0
 19871  011CA4  6E0C               	movwf	(btemp+11)^0,c
 19872                           
 19873                           ;stkvar	_l @ sp[(-56)+20]
 19874  011CA6  0EDC               	movlw	-36
 19875  011CA8  0060  F027  FFE3   	movff	btemp+8,plusw1
 19876  011CAE  0EDD               	movlw	-35
 19877  011CB0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19878  011CB6  0EDE               	movlw	-34
 19879  011CB8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19880  011CBE  0EDF               	movlw	-33
 19881  011CC0  0060  F033  FFE3   	movff	btemp+11,plusw1
 19882  011CC6                     l12974:
 19883                           
 19884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 19885                           ;stkvar	_l @ sp[(-56)+20]
 19886  011CC6  0EDC               	movlw	-36
 19887  011CC8  006F FF8F FFE6     	movff	plusw1,postinc1
 19888  011CCE  006F FF8F FFE6     	movff	plusw1,postinc1
 19889  011CD4  006F FF8F FFE6     	movff	plusw1,postinc1
 19890  011CDA  006F FF8F FFE6     	movff	plusw1,postinc1
 19891                           
 19892                           ;stkvar	_g @ sp[(-60)+16]
 19893  011CE0  0ED4               	movlw	-44
 19894  011CE2  006F FF8F FFE6     	movff	plusw1,postinc1
 19895  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 19896  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 19897  011CF4  006F FF8F FFE6     	movff	plusw1,postinc1
 19898  011CFA  EC83  F0A3         	call	___fladd	;wreg free
 19899                           
 19900                           ;stkvar	_h @ sp[(-56)+24]
 19901  011CFE  0EE0               	movlw	-32
 19902  011D00  0060  F007  FFE3   	movff	btemp,plusw1
 19903  011D06  0EE1               	movlw	-31
 19904  011D08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 19905  011D0E  0EE2               	movlw	-30
 19906  011D10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 19907  011D16  0EE3               	movlw	-29
 19908  011D18  0060  F013  FFE3   	movff	btemp+3,plusw1
 19909                           
 19910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 19911                           ;stkvar	_ou @ sp[(-56)+28]
 19912  011D1E  0EE4               	movlw	-28
 19913  011D20  006F FF8C  F009    	movff	plusw1,btemp+8
 19914  011D26  0EE5               	movlw	-27
 19915  011D28  006F FF8C  F00A    	movff	plusw1,btemp+9
 19916  011D2E  0EE6               	movlw	-26
 19917  011D30  006F FF8C  F00B    	movff	plusw1,btemp+10
 19918  011D36  0EE7               	movlw	-25
 19919  011D38  006F FF8C  F00C    	movff	plusw1,btemp+11
 19920                           
 19921                           ;stkvar	_u @ sp[(-56)+12]
 19922  011D3E  0ED4               	movlw	-44
 19923  011D40  0060  F027  FFE3   	movff	btemp+8,plusw1
 19924  011D46  0ED5               	movlw	-43
 19925  011D48  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19926  011D4E  0ED6               	movlw	-42
 19927  011D50  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19928  011D56  0ED7               	movlw	-41
 19929  011D58  0060  F033  FFE3   	movff	btemp+11,plusw1
 19930                           
 19931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 19932                           ;stkvar	_nmode @ sp[(-56)+55]
 19933  011D5E  0EFF               	movlw	-1
 19934  011D60  006F FF8C  F001    	movff	plusw1,btemp
 19935  011D66  0E65               	movlw	101
 19936  011D68  1801               	xorwf	btemp^0,w,c
 19937  011D6A  B4D8               	btfsc	status,2,c
 19938  011D6C  D011               	goto	l12982
 19939                           
 19940                           ;stkvar	_e @ sp[(-56)+34]
 19941                           ;stkvar	_ne @ sp[(-56)+46]
 19942  011D6E  0EEA               	movlw	-22
 19943  011D70  006F FF8C  F001    	movff	plusw1,btemp
 19944  011D76  0EF6               	movlw	-10
 19945  011D78  0060  F007  FFE3   	movff	btemp,plusw1
 19946  011D7E  0EEB               	movlw	-21
 19947  011D80  006F FF8C  F001    	movff	plusw1,btemp
 19948  011D86  0EF7               	movlw	-9
 19949  011D88  0060  F007  FFE3   	movff	btemp,plusw1
 19950  011D8E  D004               	goto	l2390
 19951  011D90                     l12982:
 19952                           
 19953                           ;stkvar	_ne @ sp[(-56)+46]
 19954  011D90  0EF6               	movlw	-10
 19955  011D92  6AE3               	clrf	plusw1,c
 19956  011D94  0EF7               	movlw	-9
 19957  011D96  6AE3               	clrf	plusw1,c
 19958  011D98                     l2390:
 19959                           
 19960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 19961                           ;stkvar	_pp @ sp[(-56)+50]
 19962  011D98  0EFA               	movlw	-6
 19963  011D9A  6AE3               	clrf	plusw1,c
 19964  011D9C  0EFB               	movlw	-5
 19965  011D9E  6AE3               	clrf	plusw1,c
 19966                           
 19967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 19968                           ;stkvar	_t @ sp[(-56)+52]
 19969  011DA0  0EFC               	movlw	-4
 19970  011DA2  6AE3               	clrf	plusw1,c
 19971  011DA4  0EFD               	movlw	-3
 19972  011DA6  6AE3               	clrf	plusw1,c
 19973                           
 19974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 19975                           ;stkvar	_i @ sp[(-56)+36]
 19976  011DA8  0EEC               	movlw	-20
 19977  011DAA  6AE3               	clrf	plusw1,c
 19978  011DAC  0EED               	movlw	-19
 19979  011DAE  6AE3               	clrf	plusw1,c
 19980                           
 19981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 19982  011DB0  D1B7               	goto	l13034
 19983  011DB2                     l12984:
 19984                           
 19985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 19986                           ;stkvar	_u @ sp[(-56)+12]
 19987  011DB2  0ED4               	movlw	-44
 19988  011DB4  006F FF8F FFE6     	movff	plusw1,postinc1
 19989  011DBA  006F FF8F FFE6     	movff	plusw1,postinc1
 19990  011DC0  006F FF8F FFE6     	movff	plusw1,postinc1
 19991  011DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 19992                           
 19993                           ;stkvar	_h @ sp[(-60)+24]
 19994  011DCC  0EDC               	movlw	-36
 19995  011DCE  006F FF8F FFE6     	movff	plusw1,postinc1
 19996  011DD4  006F FF8F FFE6     	movff	plusw1,postinc1
 19997  011DDA  006F FF8F FFE6     	movff	plusw1,postinc1
 19998  011DE0  006F FF8F FFE6     	movff	plusw1,postinc1
 19999  011DE6  EC61  F0A7         	call	___fldiv	;wreg free
 20000  011DEA  0060  F007  FFE6   	movff	btemp,postinc1
 20001  011DF0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20002  011DF6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20003  011DFC  0060  F013  FFE6   	movff	btemp+3,postinc1
 20004  011E02  EC1B  F0B5         	call	_floorf	;wreg free
 20005                           
 20006                           ;stkvar	_l @ sp[(-56)+20]
 20007  011E06  0EDC               	movlw	-36
 20008  011E08  0060  F007  FFE3   	movff	btemp,plusw1
 20009  011E0E  0EDD               	movlw	-35
 20010  011E10  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20011  011E16  0EDE               	movlw	-34
 20012  011E18  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20013  011E1E  0EDF               	movlw	-33
 20014  011E20  0060  F013  FFE3   	movff	btemp+3,plusw1
 20015                           
 20016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 20017                           ;stkvar	_l @ sp[(-56)+20]
 20018  011E26  0EDC               	movlw	-36
 20019  011E28  006F FF8F FFE6     	movff	plusw1,postinc1
 20020  011E2E  006F FF8F FFE6     	movff	plusw1,postinc1
 20021  011E34  006F FF8F FFE6     	movff	plusw1,postinc1
 20022  011E3A  006F FF8F FFE6     	movff	plusw1,postinc1
 20023  011E40  EC2A  F0CB         	call	___fltol	;wreg free
 20024  011E44  0060  F004  F00B   	movff	btemp,btemp+10
 20025  011E4A  0060  F008  F00C   	movff	btemp+1,btemp+11
 20026                           
 20027                           ;stkvar	_d @ sp[(-56)+44]
 20028  011E50  0EF4               	movlw	-12
 20029  011E52  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20030  011E58  0EF5               	movlw	-11
 20031  011E5A  0060  F033  FFE3   	movff	btemp+11,plusw1
 20032                           
 20033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 20034  011E60  B83E               	btfsc	_flags^0,4,c
 20035  011E62  D026               	goto	l12998
 20036                           
 20037                           ;stkvar	_d @ sp[(-56)+44]
 20038  011E64  0EF4               	movlw	-12
 20039  011E66  006F FF8C  F001    	movff	plusw1,btemp
 20040  011E6C  0EF5               	movlw	-11
 20041  011E6E  50E3               	movf	plusw1,w,c
 20042  011E70  1001               	iorwf	btemp^0,w,c
 20043  011E72  A4D8               	btfss	status,2,c
 20044  011E74  D01D               	goto	l12998
 20045                           
 20046                           ;stkvar	_mode @ sp[(-56)+54]
 20047  011E76  0EFE               	movlw	-2
 20048  011E78  006F FF8C  F001    	movff	plusw1,btemp
 20049  011E7E  0E67               	movlw	103
 20050  011E80  1801               	xorwf	btemp^0,w,c
 20051  011E82  A4D8               	btfss	status,2,c
 20052  011E84  D015               	goto	l12998
 20053                           
 20054                           ;stkvar	_ne @ sp[(-56)+46]
 20055  011E86  0EF7               	movlw	-9
 20056  011E88  AEE3               	btfss	plusw1,7,c
 20057  011E8A  D012               	goto	l12998
 20058                           
 20059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 20060                           ;stkvar	_t @ sp[(-56)+52]
 20061  011E8C  0EFC               	movlw	-4
 20062  011E8E  50E3               	movf	plusw1,w,c
 20063  011E90  0F01               	addlw	1
 20064  011E92  6E01               	movwf	btemp^0,c
 20065  011E94  0EFC               	movlw	-4
 20066  011E96  0060  F007  FFE3   	movff	btemp,plusw1
 20067  011E9C  6A01               	clrf	btemp^0,c
 20068  011E9E  0EFD               	movlw	-3
 20069  011EA0  50E3               	movf	plusw1,w,c
 20070  011EA2  2001               	addwfc	btemp^0,w,c
 20071  011EA4  6E01               	movwf	btemp^0,c
 20072  011EA6  0EFD               	movlw	-3
 20073  011EA8  0060  F007  FFE3   	movff	btemp,plusw1
 20074                           
 20075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 20076  011EAE  D0AF               	goto	l13026
 20077  011EB0                     l12998:
 20078                           
 20079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 20080                           ;stkvar	_pp @ sp[(-56)+50]
 20081  011EB0  0EFA               	movlw	-6
 20082  011EB2  006F FF8C  F001    	movff	plusw1,btemp
 20083  011EB8  0EFB               	movlw	-5
 20084  011EBA  50E3               	movf	plusw1,w,c
 20085  011EBC  1001               	iorwf	btemp^0,w,c
 20086  011EBE  A4D8               	btfss	status,2,c
 20087  011EC0  D070               	goto	l13018
 20088                           
 20089                           ;stkvar	_ne @ sp[(-56)+46]
 20090  011EC2  0EF7               	movlw	-9
 20091  011EC4  AEE3               	btfss	plusw1,7,c
 20092  011EC6  D06D               	goto	l13018
 20093                           
 20094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 20095                           ;stkvar	_n @ sp[(-56)+32]
 20096  011EC8  0EE8               	movlw	-24
 20097  011ECA  006F FF8C  F00B    	movff	plusw1,btemp+10
 20098  011ED0  0EE9               	movlw	-23
 20099  011ED2  006F FF8C  F00C    	movff	plusw1,btemp+11
 20100  011ED8  0E97               	movlw	low _dbuf
 20101  011EDA  240B               	addwf	(btemp+10)^0,w,c
 20102  011EDC  6ED9               	movwf	fsr2l,c
 20103  011EDE  0E02               	movlw	high _dbuf
 20104  011EE0  200C               	addwfc	(btemp+11)^0,w,c
 20105  011EE2  6EDA               	movwf	fsr2h,c
 20106  011EE4  0E2E               	movlw	46
 20107  011EE6  6EDF               	movwf	indf2,c
 20108                           
 20109                           ;stkvar	_n @ sp[(-56)+32]
 20110  011EE8  0EE8               	movlw	-24
 20111  011EEA  50E3               	movf	plusw1,w,c
 20112  011EEC  0F01               	addlw	1
 20113  011EEE  6E01               	movwf	btemp^0,c
 20114  011EF0  0EE8               	movlw	-24
 20115  011EF2  0060  F007  FFE3   	movff	btemp,plusw1
 20116  011EF8  6A01               	clrf	btemp^0,c
 20117  011EFA  0EE9               	movlw	-23
 20118  011EFC  50E3               	movf	plusw1,w,c
 20119  011EFE  2001               	addwfc	btemp^0,w,c
 20120  011F00  6E01               	movwf	btemp^0,c
 20121  011F02  0EE9               	movlw	-23
 20122  011F04  0060  F007  FFE3   	movff	btemp,plusw1
 20123                           
 20124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 20125                           ;stkvar	_w @ sp[(-56)+38]
 20126  011F0A  50E1               	movf	fsr1l,w,c
 20127  011F0C  0FEE               	addlw	-18
 20128  011F0E  6ED9               	movwf	fsr2l,c
 20129  011F10  50E2               	movf	fsr1h,w,c
 20130  011F12  6EDA               	movwf	fsr2h,c
 20131  011F14  0EFF               	movlw	255
 20132  011F16  22DA               	addwfc	fsr2h,f,c
 20133  011F18  06DE               	decf	postinc2,f,c
 20134  011F1A  0E00               	movlw	0
 20135  011F1C  5ADD               	subwfb	postdec2,f,c
 20136                           
 20137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 20138  011F1E  0E01               	movlw	1
 20139  011F20  6E0B               	movwf	(btemp+10)^0,c
 20140  011F22  0E00               	movlw	0
 20141  011F24  6E0C               	movwf	(btemp+11)^0,c
 20142                           
 20143                           ;stkvar	_pp @ sp[(-56)+50]
 20144  011F26  0EFA               	movlw	-6
 20145  011F28  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20146  011F2E  0EFB               	movlw	-5
 20147  011F30  0060  F033  FFE3   	movff	btemp+11,plusw1
 20148  011F36  D035               	goto	l13018
 20149  011F38                     l13010:
 20150                           
 20151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 20152                           ;stkvar	_n @ sp[(-56)+32]
 20153  011F38  0EE8               	movlw	-24
 20154  011F3A  006F FF8C  F00B    	movff	plusw1,btemp+10
 20155  011F40  0EE9               	movlw	-23
 20156  011F42  006F FF8C  F00C    	movff	plusw1,btemp+11
 20157  011F48  0E97               	movlw	low _dbuf
 20158  011F4A  240B               	addwf	(btemp+10)^0,w,c
 20159  011F4C  6ED9               	movwf	fsr2l,c
 20160  011F4E  0E02               	movlw	high _dbuf
 20161  011F50  200C               	addwfc	(btemp+11)^0,w,c
 20162  011F52  6EDA               	movwf	fsr2h,c
 20163  011F54  0E30               	movlw	48
 20164  011F56  6EDF               	movwf	indf2,c
 20165                           
 20166                           ;stkvar	_n @ sp[(-56)+32]
 20167  011F58  0EE8               	movlw	-24
 20168  011F5A  50E3               	movf	plusw1,w,c
 20169  011F5C  0F01               	addlw	1
 20170  011F5E  6E01               	movwf	btemp^0,c
 20171  011F60  0EE8               	movlw	-24
 20172  011F62  0060  F007  FFE3   	movff	btemp,plusw1
 20173  011F68  6A01               	clrf	btemp^0,c
 20174  011F6A  0EE9               	movlw	-23
 20175  011F6C  50E3               	movf	plusw1,w,c
 20176  011F6E  2001               	addwfc	btemp^0,w,c
 20177  011F70  6E01               	movwf	btemp^0,c
 20178  011F72  0EE9               	movlw	-23
 20179  011F74  0060  F007  FFE3   	movff	btemp,plusw1
 20180                           
 20181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 20182                           ;stkvar	_w @ sp[(-56)+38]
 20183  011F7A  50E1               	movf	fsr1l,w,c
 20184  011F7C  0FEE               	addlw	-18
 20185  011F7E  6ED9               	movwf	fsr2l,c
 20186  011F80  50E2               	movf	fsr1h,w,c
 20187  011F82  6EDA               	movwf	fsr2h,c
 20188  011F84  0EFF               	movlw	255
 20189  011F86  22DA               	addwfc	fsr2h,f,c
 20190  011F88  06DE               	decf	postinc2,f,c
 20191  011F8A  0E00               	movlw	0
 20192  011F8C  5ADD               	subwfb	postdec2,f,c
 20193                           
 20194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 20195                           ;stkvar	_t @ sp[(-56)+52]
 20196  011F8E  50E1               	movf	fsr1l,w,c
 20197  011F90  0FFC               	addlw	-4
 20198  011F92  6ED9               	movwf	fsr2l,c
 20199  011F94  50E2               	movf	fsr1h,w,c
 20200  011F96  6EDA               	movwf	fsr2h,c
 20201  011F98  0EFF               	movlw	255
 20202  011F9A  22DA               	addwfc	fsr2h,f,c
 20203  011F9C  06DE               	decf	postinc2,f,c
 20204  011F9E  0E00               	movlw	0
 20205  011FA0  5ADD               	subwfb	postdec2,f,c
 20206  011FA2                     l13018:
 20207                           
 20208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 20209                           ;stkvar	_t @ sp[(-56)+52]
 20210  011FA2  0EFC               	movlw	-4
 20211  011FA4  006F FF8C  F001    	movff	plusw1,btemp
 20212  011FAA  0EFD               	movlw	-3
 20213  011FAC  50E3               	movf	plusw1,w,c
 20214  011FAE  1001               	iorwf	btemp^0,w,c
 20215  011FB0  A4D8               	btfss	status,2,c
 20216  011FB2  D7C2               	goto	l13010
 20217                           
 20218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 20219                           ;stkvar	_n @ sp[(-56)+32]
 20220  011FB4  0EE8               	movlw	-24
 20221  011FB6  006F FF8C  F00B    	movff	plusw1,btemp+10
 20222  011FBC  0EE9               	movlw	-23
 20223  011FBE  006F FF8C  F00C    	movff	plusw1,btemp+11
 20224  011FC4  0E97               	movlw	low _dbuf
 20225  011FC6  240B               	addwf	(btemp+10)^0,w,c
 20226  011FC8  6ED9               	movwf	fsr2l,c
 20227  011FCA  0E02               	movlw	high _dbuf
 20228  011FCC  200C               	addwfc	(btemp+11)^0,w,c
 20229  011FCE  6EDA               	movwf	fsr2h,c
 20230                           
 20231                           ;stkvar	_d @ sp[(-56)+44]
 20232  011FD0  0EF4               	movlw	-12
 20233  011FD2  50E3               	movf	plusw1,w,c
 20234  011FD4  0F30               	addlw	48
 20235  011FD6  6EDF               	movwf	indf2,c
 20236                           
 20237                           ;stkvar	_n @ sp[(-56)+32]
 20238  011FD8  0EE8               	movlw	-24
 20239  011FDA  50E3               	movf	plusw1,w,c
 20240  011FDC  0F01               	addlw	1
 20241  011FDE  6E01               	movwf	btemp^0,c
 20242  011FE0  0EE8               	movlw	-24
 20243  011FE2  0060  F007  FFE3   	movff	btemp,plusw1
 20244  011FE8  6A01               	clrf	btemp^0,c
 20245  011FEA  0EE9               	movlw	-23
 20246  011FEC  50E3               	movf	plusw1,w,c
 20247  011FEE  2001               	addwfc	btemp^0,w,c
 20248  011FF0  6E01               	movwf	btemp^0,c
 20249  011FF2  0EE9               	movlw	-23
 20250  011FF4  0060  F007  FFE3   	movff	btemp,plusw1
 20251                           
 20252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 20253                           ;stkvar	_w @ sp[(-56)+38]
 20254  011FFA  50E1               	movf	fsr1l,w,c
 20255  011FFC  0FEE               	addlw	-18
 20256  011FFE  6ED9               	movwf	fsr2l,c
 20257  012000  50E2               	movf	fsr1h,w,c
 20258  012002  6EDA               	movwf	fsr2h,c
 20259  012004  0EFF               	movlw	255
 20260  012006  22DA               	addwfc	fsr2h,f,c
 20261  012008  06DE               	decf	postinc2,f,c
 20262  01200A  0E00               	movlw	0
 20263  01200C  5ADD               	subwfb	postdec2,f,c
 20264  01200E                     l13026:
 20265                           
 20266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 20267                           ;stkvar	_u @ sp[(-56)+12]
 20268  01200E  0ED4               	movlw	-44
 20269  012010  006F FF8F FFE6     	movff	plusw1,postinc1
 20270  012016  006F FF8F FFE6     	movff	plusw1,postinc1
 20271  01201C  006F FF8F FFE6     	movff	plusw1,postinc1
 20272  012022  006F FF8F FFE6     	movff	plusw1,postinc1
 20273                           
 20274                           ;stkvar	_l @ sp[(-60)+20]
 20275  012028  0ED8               	movlw	-40
 20276  01202A  006F FF8F FFE6     	movff	plusw1,postinc1
 20277  012030  006F FF8F FFE6     	movff	plusw1,postinc1
 20278  012036  006F FF8F FFE6     	movff	plusw1,postinc1
 20279  01203C  006F FF8F FFE6     	movff	plusw1,postinc1
 20280  012042  EC6E  F09F         	call	___flmul	;wreg free
 20281  012046  0060  F007  FFE6   	movff	btemp,postinc1
 20282  01204C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20283  012052  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20284  012058  0060  F013  FFE6   	movff	btemp+3,postinc1
 20285                           
 20286                           ;stkvar	_h @ sp[(-60)+24]
 20287  01205E  0EDC               	movlw	-36
 20288  012060  006F FF8F FFE6     	movff	plusw1,postinc1
 20289  012066  006F FF8F FFE6     	movff	plusw1,postinc1
 20290  01206C  006F FF8F FFE6     	movff	plusw1,postinc1
 20291  012072  006F FF8F FFE6     	movff	plusw1,postinc1
 20292  012078  ECAA  F0E1         	call	___flsub	;wreg free
 20293                           
 20294                           ;stkvar	_h @ sp[(-56)+24]
 20295  01207C  0EE0               	movlw	-32
 20296  01207E  0060  F007  FFE3   	movff	btemp,plusw1
 20297  012084  0EE1               	movlw	-31
 20298  012086  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20299  01208C  0EE2               	movlw	-30
 20300  01208E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20301  012094  0EE3               	movlw	-29
 20302  012096  0060  F013  FFE3   	movff	btemp+3,plusw1
 20303                           
 20304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 20305  01209C  0E00               	movlw	0
 20306  01209E  6EE6               	movwf	postinc1,c
 20307  0120A0  0E00               	movlw	0
 20308  0120A2  6EE6               	movwf	postinc1,c
 20309  0120A4  0E20               	movlw	32
 20310  0120A6  6EE6               	movwf	postinc1,c
 20311  0120A8  0E41               	movlw	65
 20312  0120AA  6EE6               	movwf	postinc1,c
 20313                           
 20314                           ;stkvar	_u @ sp[(-60)+12]
 20315  0120AC  0ED0               	movlw	-48
 20316  0120AE  006F FF8F FFE6     	movff	plusw1,postinc1
 20317  0120B4  006F FF8F FFE6     	movff	plusw1,postinc1
 20318  0120BA  006F FF8F FFE6     	movff	plusw1,postinc1
 20319  0120C0  006F FF8F FFE6     	movff	plusw1,postinc1
 20320  0120C6  EC61  F0A7         	call	___fldiv	;wreg free
 20321                           
 20322                           ;stkvar	_u @ sp[(-56)+12]
 20323  0120CA  0ED4               	movlw	-44
 20324  0120CC  0060  F007  FFE3   	movff	btemp,plusw1
 20325  0120D2  0ED5               	movlw	-43
 20326  0120D4  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20327  0120DA  0ED6               	movlw	-42
 20328  0120DC  0060  F00F  FFE3   	movff	btemp+2,plusw1
 20329  0120E2  0ED7               	movlw	-41
 20330  0120E4  0060  F013  FFE3   	movff	btemp+3,plusw1
 20331                           
 20332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 20333                           ;stkvar	_ne @ sp[(-56)+46]
 20334  0120EA  50E1               	movf	fsr1l,w,c
 20335  0120EC  0FF6               	addlw	-10
 20336  0120EE  6ED9               	movwf	fsr2l,c
 20337  0120F0  50E2               	movf	fsr1h,w,c
 20338  0120F2  6EDA               	movwf	fsr2h,c
 20339  0120F4  0EFF               	movlw	255
 20340  0120F6  22DA               	addwfc	fsr2h,f,c
 20341  0120F8  06DE               	decf	postinc2,f,c
 20342  0120FA  0E00               	movlw	0
 20343  0120FC  5ADD               	subwfb	postdec2,f,c
 20344                           
 20345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 20346                           ;stkvar	_i @ sp[(-56)+36]
 20347  0120FE  0EEC               	movlw	-20
 20348  012100  50E3               	movf	plusw1,w,c
 20349  012102  0F01               	addlw	1
 20350  012104  6E01               	movwf	btemp^0,c
 20351  012106  0EEC               	movlw	-20
 20352  012108  0060  F007  FFE3   	movff	btemp,plusw1
 20353  01210E  6A01               	clrf	btemp^0,c
 20354  012110  0EED               	movlw	-19
 20355  012112  50E3               	movf	plusw1,w,c
 20356  012114  2001               	addwfc	btemp^0,w,c
 20357  012116  6E01               	movwf	btemp^0,c
 20358  012118  0EED               	movlw	-19
 20359  01211A  0060  F007  FFE3   	movff	btemp,plusw1
 20360  012120                     l13034:
 20361                           
 20362                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 20363                           ;stkvar	_m @ sp[(-56)+48]
 20364                           ;stkvar	_i @ sp[(-56)+36]
 20365  012120  50E1               	movf	fsr1l,w,c
 20366  012122  0FEC               	addlw	-20
 20367  012124  6ED9               	movwf	fsr2l,c
 20368  012126  50E2               	movf	fsr1h,w,c
 20369  012128  6EDA               	movwf	fsr2h,c
 20370  01212A  0EFF               	movlw	255
 20371  01212C  22DA               	addwfc	fsr2h,f,c
 20372  01212E  0EF8               	movlw	-8
 20373  012130  50E3               	movf	plusw1,w,c
 20374  012132  5CDE               	subwf	postinc2,w,c
 20375  012134  50DE               	movf	postinc2,w,c
 20376  012136  0A80               	xorlw	128
 20377  012138  6E01               	movwf	btemp^0,c
 20378  01213A  0EF9               	movlw	-7
 20379  01213C  50E3               	movf	plusw1,w,c
 20380  01213E  0A80               	xorlw	128
 20381  012140  5801               	subwfb	btemp^0,w,c
 20382  012142  B0D8               	btfsc	status,0,c
 20383  012144  D00E               	goto	u12160
 20384                           
 20385                           ;stkvar	_n @ sp[(-56)+32]
 20386  012146  0EE9               	movlw	-23
 20387  012148  BEE3               	btfsc	plusw1,7,c
 20388  01214A  D633               	goto	l12984
 20389  01214C  0EE9               	movlw	-23
 20390  01214E  50E3               	movf	plusw1,w,c
 20391  012150  E108               	bnz	u12160
 20392  012152  0EE8               	movlw	-24
 20393  012154  006F FF8C  F001    	movff	plusw1,btemp
 20394  01215A  0E4B               	movlw	75
 20395  01215C  5E01               	subwf	btemp^0,f,c
 20396  01215E  A0D8               	btfss	status,0,c
 20397  012160  D628               	goto	l12984
 20398  012162                     u12160:
 20399                           
 20400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 20401                           ;stkvar	_pp @ sp[(-56)+50]
 20402  012162  0EFA               	movlw	-6
 20403  012164  006F FF8C  F001    	movff	plusw1,btemp
 20404  01216A  0EFB               	movlw	-5
 20405  01216C  50E3               	movf	plusw1,w,c
 20406  01216E  1001               	iorwf	btemp^0,w,c
 20407  012170  B4D8               	btfsc	status,2,c
 20408  012172  A83E               	btfss	_flags^0,4,c
 20409  012174  D021               	goto	l13046
 20410                           
 20411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 20412                           ;stkvar	_n @ sp[(-56)+32]
 20413  012176  0EE8               	movlw	-24
 20414  012178  006F FF8C  F00B    	movff	plusw1,btemp+10
 20415  01217E  0EE9               	movlw	-23
 20416  012180  006F FF8C  F00C    	movff	plusw1,btemp+11
 20417  012186  0E97               	movlw	low _dbuf
 20418  012188  240B               	addwf	(btemp+10)^0,w,c
 20419  01218A  6ED9               	movwf	fsr2l,c
 20420  01218C  0E02               	movlw	high _dbuf
 20421  01218E  200C               	addwfc	(btemp+11)^0,w,c
 20422  012190  6EDA               	movwf	fsr2h,c
 20423  012192  0E2E               	movlw	46
 20424  012194  6EDF               	movwf	indf2,c
 20425                           
 20426                           ;stkvar	_n @ sp[(-56)+32]
 20427  012196  0EE8               	movlw	-24
 20428  012198  50E3               	movf	plusw1,w,c
 20429  01219A  0F01               	addlw	1
 20430  01219C  6E01               	movwf	btemp^0,c
 20431  01219E  0EE8               	movlw	-24
 20432  0121A0  0060  F007  FFE3   	movff	btemp,plusw1
 20433  0121A6  6A01               	clrf	btemp^0,c
 20434  0121A8  0EE9               	movlw	-23
 20435  0121AA  50E3               	movf	plusw1,w,c
 20436  0121AC  2001               	addwfc	btemp^0,w,c
 20437  0121AE  6E01               	movwf	btemp^0,c
 20438  0121B0  0EE9               	movlw	-23
 20439  0121B2  0060  F007  FFE3   	movff	btemp,plusw1
 20440  0121B8                     l13046:
 20441                           
 20442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 20443                           ;stkvar	_n @ sp[(-56)+32]
 20444  0121B8  0EE8               	movlw	-24
 20445  0121BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 20446  0121C0  0EE9               	movlw	-23
 20447  0121C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 20448  0121C8  0E97               	movlw	low _dbuf
 20449  0121CA  240B               	addwf	(btemp+10)^0,w,c
 20450  0121CC  6ED9               	movwf	fsr2l,c
 20451  0121CE  0E02               	movlw	high _dbuf
 20452  0121D0  200C               	addwfc	(btemp+11)^0,w,c
 20453  0121D2  6EDA               	movwf	fsr2h,c
 20454  0121D4  0E00               	movlw	0
 20455  0121D6  6EDF               	movwf	indf2,c
 20456                           
 20457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 20458                           ;stkvar	_nmode @ sp[(-56)+55]
 20459  0121D8  0EFF               	movlw	-1
 20460  0121DA  006F FF8C  F001    	movff	plusw1,btemp
 20461  0121E0  0E65               	movlw	101
 20462  0121E2  1801               	xorwf	btemp^0,w,c
 20463  0121E4  A4D8               	btfss	status,2,c
 20464  0121E6  EF55  F08A         	goto	l12850
 20465                           
 20466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 20467  0121EA  0E4F               	movlw	79
 20468  0121EC  6E0B               	movwf	(btemp+10)^0,c
 20469  0121EE  0E00               	movlw	0
 20470  0121F0  6E0C               	movwf	(btemp+11)^0,c
 20471                           
 20472                           ;stkvar	_i @ sp[(-56)+36]
 20473  0121F2  0EEC               	movlw	-20
 20474  0121F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20475  0121FA  0EED               	movlw	-19
 20476  0121FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 20477                           
 20478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 20479                           ;stkvar	_i @ sp[(-56)+36]
 20480  012202  0EEC               	movlw	-20
 20481  012204  006F FF8C  F00B    	movff	plusw1,btemp+10
 20482  01220A  0EED               	movlw	-19
 20483  01220C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20484  012212  0E97               	movlw	low _dbuf
 20485  012214  240B               	addwf	(btemp+10)^0,w,c
 20486  012216  6ED9               	movwf	fsr2l,c
 20487  012218  0E02               	movlw	high _dbuf
 20488  01221A  200C               	addwfc	(btemp+11)^0,w,c
 20489  01221C  6EDA               	movwf	fsr2h,c
 20490  01221E  0E00               	movlw	0
 20491  012220  6EDF               	movwf	indf2,c
 20492                           
 20493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 20494                           ;stkvar	_sign @ sp[(-56)+42]
 20495  012222  0EF2               	movlw	-14
 20496  012224  6AE3               	clrf	plusw1,c
 20497  012226  0EF3               	movlw	-13
 20498  012228  6AE3               	clrf	plusw1,c
 20499                           
 20500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 20501                           ;stkvar	_e @ sp[(-56)+34]
 20502  01222A  0EEB               	movlw	-21
 20503  01222C  AEE3               	btfss	plusw1,7,c
 20504  01222E  D012               	goto	l13060
 20505                           
 20506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 20507  012230  0E01               	movlw	1
 20508  012232  6E0B               	movwf	(btemp+10)^0,c
 20509  012234  0E00               	movlw	0
 20510  012236  6E0C               	movwf	(btemp+11)^0,c
 20511                           
 20512                           ;stkvar	_sign @ sp[(-56)+42]
 20513  012238  0EF2               	movlw	-14
 20514  01223A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20515  012240  0EF3               	movlw	-13
 20516  012242  0060  F033  FFE3   	movff	btemp+11,plusw1
 20517                           
 20518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 20519                           ;stkvar	_e @ sp[(-56)+34]
 20520                           ;stkvar	_e @ sp[(-56)+34]
 20521  012248  0EEA               	movlw	-22
 20522  01224A  6CE3               	negf	plusw1,c
 20523  01224C  0EEB               	movlw	-21
 20524  01224E  1EE3               	comf	plusw1,f,c
 20525  012250  B0D8               	btfsc	status,0,c
 20526  012252  2AE3               	incf	plusw1,f,c
 20527  012254                     l13060:
 20528                           
 20529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 20530  012254  0E02               	movlw	2
 20531  012256  6E0B               	movwf	(btemp+10)^0,c
 20532  012258  0E00               	movlw	0
 20533  01225A  6E0C               	movwf	(btemp+11)^0,c
 20534                           
 20535                           ;stkvar	_p @ sp[(-56)+40]
 20536  01225C  0EF0               	movlw	-16
 20537  01225E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20538  012264  0EF1               	movlw	-15
 20539  012266  0060  F033  FFE3   	movff	btemp+11,plusw1
 20540                           
 20541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 20542  01226C  D051               	goto	l13072
 20543  01226E                     l13062:
 20544                           
 20545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 20546                           ;stkvar	_i @ sp[(-56)+36]
 20547  01226E  50E1               	movf	fsr1l,w,c
 20548  012270  0FEC               	addlw	-20
 20549  012272  6ED9               	movwf	fsr2l,c
 20550  012274  50E2               	movf	fsr1h,w,c
 20551  012276  6EDA               	movwf	fsr2h,c
 20552  012278  0EFF               	movlw	255
 20553  01227A  22DA               	addwfc	fsr2h,f,c
 20554  01227C  06DE               	decf	postinc2,f,c
 20555  01227E  0E00               	movlw	0
 20556  012280  5ADD               	subwfb	postdec2,f,c
 20557                           
 20558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 20559                           ;stkvar	_i @ sp[(-56)+36]
 20560  012282  0EEC               	movlw	-20
 20561  012284  006F FF8C  F00B    	movff	plusw1,btemp+10
 20562  01228A  0EED               	movlw	-19
 20563  01228C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20564  012292  0E97               	movlw	low _dbuf
 20565  012294  240B               	addwf	(btemp+10)^0,w,c
 20566  012296  6ED9               	movwf	fsr2l,c
 20567  012298  0E02               	movlw	high _dbuf
 20568  01229A  200C               	addwfc	(btemp+11)^0,w,c
 20569  01229C  6EDA               	movwf	fsr2h,c
 20570  01229E  0E0A               	movlw	10
 20571  0122A0  6EE6               	movwf	postinc1,c
 20572  0122A2  0E00               	movlw	0
 20573  0122A4  6EE6               	movwf	postinc1,c
 20574                           
 20575                           ;stkvar	_e @ sp[(-58)+34]
 20576  0122A6  0EE8               	movlw	-24
 20577  0122A8  006F FF8F FFE6     	movff	plusw1,postinc1
 20578  0122AE  006F FF8F FFE6     	movff	plusw1,postinc1
 20579  0122B4  EC7E  F0D1         	call	___awmod	;wreg free
 20580  0122B8  5001               	movf	btemp^0,w,c
 20581  0122BA  0F30               	addlw	48
 20582  0122BC  6EDF               	movwf	indf2,c
 20583                           
 20584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 20585  0122BE  0E0A               	movlw	10
 20586  0122C0  6EE6               	movwf	postinc1,c
 20587  0122C2  0E00               	movlw	0
 20588  0122C4  6EE6               	movwf	postinc1,c
 20589                           
 20590                           ;stkvar	_e @ sp[(-58)+34]
 20591  0122C6  0EE8               	movlw	-24
 20592  0122C8  006F FF8F FFE6     	movff	plusw1,postinc1
 20593  0122CE  006F FF8F FFE6     	movff	plusw1,postinc1
 20594  0122D4  EC45  F0CD         	call	___awdiv	;wreg free
 20595                           
 20596                           ;stkvar	_e @ sp[(-56)+34]
 20597  0122D8  0EEA               	movlw	-22
 20598  0122DA  0060  F007  FFE3   	movff	btemp,plusw1
 20599  0122E0  0EEB               	movlw	-21
 20600  0122E2  0060  F00B  FFE3   	movff	btemp+1,plusw1
 20601                           
 20602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 20603                           ;stkvar	_p @ sp[(-56)+40]
 20604  0122E8  50E1               	movf	fsr1l,w,c
 20605  0122EA  0FF0               	addlw	-16
 20606  0122EC  6ED9               	movwf	fsr2l,c
 20607  0122EE  50E2               	movf	fsr1h,w,c
 20608  0122F0  6EDA               	movwf	fsr2h,c
 20609  0122F2  0EFF               	movlw	255
 20610  0122F4  22DA               	addwfc	fsr2h,f,c
 20611  0122F6  06DE               	decf	postinc2,f,c
 20612  0122F8  0E00               	movlw	0
 20613  0122FA  5ADD               	subwfb	postdec2,f,c
 20614                           
 20615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 20616                           ;stkvar	_w @ sp[(-56)+38]
 20617  0122FC  50E1               	movf	fsr1l,w,c
 20618  0122FE  0FEE               	addlw	-18
 20619  012300  6ED9               	movwf	fsr2l,c
 20620  012302  50E2               	movf	fsr1h,w,c
 20621  012304  6EDA               	movwf	fsr2h,c
 20622  012306  0EFF               	movlw	255
 20623  012308  22DA               	addwfc	fsr2h,f,c
 20624  01230A  06DE               	decf	postinc2,f,c
 20625  01230C  0E00               	movlw	0
 20626  01230E  5ADD               	subwfb	postdec2,f,c
 20627  012310                     l13072:
 20628                           
 20629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 20630                           ;stkvar	_e @ sp[(-56)+34]
 20631  012310  0EEA               	movlw	-22
 20632  012312  006F FF8C  F001    	movff	plusw1,btemp
 20633  012318  0EEB               	movlw	-21
 20634  01231A  50E3               	movf	plusw1,w,c
 20635  01231C  1001               	iorwf	btemp^0,w,c
 20636  01231E  A4D8               	btfss	status,2,c
 20637  012320  D7A6               	goto	l13062
 20638                           
 20639                           ;stkvar	_p @ sp[(-56)+40]
 20640  012322  0EF1               	movlw	-15
 20641  012324  BEE3               	btfsc	plusw1,7,c
 20642  012326  D007               	goto	u12220
 20643  012328  0EF1               	movlw	-15
 20644  01232A  50E3               	movf	plusw1,w,c
 20645  01232C  E1A0               	bnz	l13062
 20646  01232E  0EF0               	movlw	-16
 20647  012330  04E3               	decf	plusw1,w,c
 20648  012332  B0D8               	btfsc	status,0,c
 20649  012334  D79C               	goto	l13062
 20650  012336                     u12220:
 20651                           
 20652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 20653                           ;stkvar	_i @ sp[(-56)+36]
 20654  012336  50E1               	movf	fsr1l,w,c
 20655  012338  0FEC               	addlw	-20
 20656  01233A  6ED9               	movwf	fsr2l,c
 20657  01233C  50E2               	movf	fsr1h,w,c
 20658  01233E  6EDA               	movwf	fsr2h,c
 20659  012340  0EFF               	movlw	255
 20660  012342  22DA               	addwfc	fsr2h,f,c
 20661  012344  06DE               	decf	postinc2,f,c
 20662  012346  0E00               	movlw	0
 20663  012348  5ADD               	subwfb	postdec2,f,c
 20664                           
 20665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 20666                           ;stkvar	_sign @ sp[(-56)+42]
 20667  01234A  0EF2               	movlw	-14
 20668  01234C  006F FF8C  F001    	movff	plusw1,btemp
 20669  012352  0EF3               	movlw	-13
 20670  012354  50E3               	movf	plusw1,w,c
 20671  012356  1001               	iorwf	btemp^0,w,c
 20672  012358  A4D8               	btfss	status,2,c
 20673  01235A  D002               	goto	l13082
 20674  01235C  0E2B               	movlw	43
 20675  01235E  D001               	goto	L22
 20676  012360                     l13082:
 20677  012360  0E2D               	movlw	45
 20678  012362                     L22:
 20679  012362  6E0B               	movwf	(btemp+10)^0,c
 20680  012364  0E00               	movlw	0
 20681  012366  6E0C               	movwf	(btemp+11)^0,c
 20682                           
 20683                           ;stkvar	_efgtoa$5998 @ sp[(-56)+4]
 20684  012368  0ECC               	movlw	-52
 20685  01236A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20686  012370  0ECD               	movlw	-51
 20687  012372  0060  F033  FFE3   	movff	btemp+11,plusw1
 20688                           
 20689                           ;stkvar	_efgtoa$5998 @ sp[(-56)+4]
 20690                           ;stkvar	_i @ sp[(-56)+36]
 20691  012378  0EEC               	movlw	-20
 20692  01237A  006F FF8C  F00B    	movff	plusw1,btemp+10
 20693  012380  0EED               	movlw	-19
 20694  012382  006F FF8C  F00C    	movff	plusw1,btemp+11
 20695  012388  0E97               	movlw	low _dbuf
 20696  01238A  240B               	addwf	(btemp+10)^0,w,c
 20697  01238C  6ED9               	movwf	fsr2l,c
 20698  01238E  0E02               	movlw	high _dbuf
 20699  012390  200C               	addwfc	(btemp+11)^0,w,c
 20700  012392  6EDA               	movwf	fsr2h,c
 20701  012394  0ECC               	movlw	-52
 20702  012396  006F FF8F FFDF     	movff	plusw1,indf2
 20703                           
 20704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 20705                           ;stkvar	_w @ sp[(-56)+38]
 20706  01239C  50E1               	movf	fsr1l,w,c
 20707  01239E  0FEE               	addlw	-18
 20708  0123A0  6ED9               	movwf	fsr2l,c
 20709  0123A2  50E2               	movf	fsr1h,w,c
 20710  0123A4  6EDA               	movwf	fsr2h,c
 20711  0123A6  0EFF               	movlw	255
 20712  0123A8  22DA               	addwfc	fsr2h,f,c
 20713  0123AA  06DE               	decf	postinc2,f,c
 20714  0123AC  0E00               	movlw	0
 20715  0123AE  5ADD               	subwfb	postdec2,f,c
 20716                           
 20717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 20718                           ;stkvar	_i @ sp[(-56)+36]
 20719  0123B0  50E1               	movf	fsr1l,w,c
 20720  0123B2  0FEC               	addlw	-20
 20721  0123B4  6ED9               	movwf	fsr2l,c
 20722  0123B6  50E2               	movf	fsr1h,w,c
 20723  0123B8  6EDA               	movwf	fsr2h,c
 20724  0123BA  0EFF               	movlw	255
 20725  0123BC  22DA               	addwfc	fsr2h,f,c
 20726  0123BE  06DE               	decf	postinc2,f,c
 20727  0123C0  0E00               	movlw	0
 20728  0123C2  5ADD               	subwfb	postdec2,f,c
 20729  0123C4  0EBF               	movlw	191
 20730  0123C6  6E0B               	movwf	(btemp+10)^0,c
 20731  0123C8  0EFF               	movlw	255
 20732  0123CA  6E0C               	movwf	(btemp+11)^0,c
 20733                           
 20734                           ;stkvar	_c @ sp[(-56)+-7]
 20735  0123CC  0EC1               	movlw	-63
 20736  0123CE  50E3               	movf	plusw1,w,c
 20737  0123D0  6E09               	movwf	(btemp+8)^0,c
 20738  0123D2  6A0A               	clrf	(btemp+9)^0,c
 20739  0123D4  500B               	movf	(btemp+10)^0,w,c
 20740  0123D6  2609               	addwf	(btemp+8)^0,f,c
 20741  0123D8  500C               	movf	(btemp+11)^0,w,c
 20742  0123DA  220A               	addwfc	(btemp+9)^0,f,c
 20743  0123DC  500A               	movf	(btemp+9)^0,w,c
 20744  0123DE  E106               	bnz	u12240
 20745  0123E0  0E1A               	movlw	26
 20746  0123E2  5C09               	subwf	(btemp+8)^0,w,c
 20747  0123E4  B0D8               	btfsc	status,0,c
 20748  0123E6  D002               	goto	u12240
 20749  0123E8  0E01               	movlw	1
 20750  0123EA  D001               	goto	u12250
 20751  0123EC                     u12240:
 20752  0123EC  0E00               	movlw	0
 20753  0123EE                     u12250:
 20754  0123EE  6E0B               	movwf	(btemp+10)^0,c
 20755  0123F0  6A0C               	clrf	(btemp+11)^0,c
 20756                           
 20757                           ;stkvar	_efgtoa$6000 @ sp[(-56)+0]
 20758  0123F2  0EC8               	movlw	-56
 20759  0123F4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20760  0123FA  0EC9               	movlw	-55
 20761  0123FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 20762                           
 20763                           ;stkvar	_efgtoa$6000 @ sp[(-56)+0]
 20764  012402  0EC8               	movlw	-56
 20765  012404  006F FF8C  F001    	movff	plusw1,btemp
 20766  01240A  0EC9               	movlw	-55
 20767  01240C  50E3               	movf	plusw1,w,c
 20768  01240E  1001               	iorwf	btemp^0,w,c
 20769  012410  A4D8               	btfss	status,2,c
 20770  012412  D002               	goto	l13098
 20771  012414  0E65               	movlw	101
 20772  012416  D001               	goto	L23
 20773  012418                     l13098:
 20774  012418  0E45               	movlw	69
 20775  01241A                     L23:
 20776  01241A  6E0B               	movwf	(btemp+10)^0,c
 20777  01241C  0E00               	movlw	0
 20778  01241E  6E0C               	movwf	(btemp+11)^0,c
 20779                           
 20780                           ;stkvar	_efgtoa$5999 @ sp[(-56)+2]
 20781  012420  0ECA               	movlw	-54
 20782  012422  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20783  012428  0ECB               	movlw	-53
 20784  01242A  0060  F033  FFE3   	movff	btemp+11,plusw1
 20785                           
 20786                           ;stkvar	_efgtoa$5999 @ sp[(-56)+2]
 20787                           ;stkvar	_i @ sp[(-56)+36]
 20788  012430  0EEC               	movlw	-20
 20789  012432  006F FF8C  F00B    	movff	plusw1,btemp+10
 20790  012438  0EED               	movlw	-19
 20791  01243A  006F FF8C  F00C    	movff	plusw1,btemp+11
 20792  012440  0E97               	movlw	low _dbuf
 20793  012442  240B               	addwf	(btemp+10)^0,w,c
 20794  012444  6ED9               	movwf	fsr2l,c
 20795  012446  0E02               	movlw	high _dbuf
 20796  012448  200C               	addwfc	(btemp+11)^0,w,c
 20797  01244A  6EDA               	movwf	fsr2h,c
 20798  01244C  0ECA               	movlw	-54
 20799  01244E  006F FF8F FFDF     	movff	plusw1,indf2
 20800                           
 20801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 20802                           ;stkvar	_w @ sp[(-56)+38]
 20803  012454  50E1               	movf	fsr1l,w,c
 20804  012456  0FEE               	addlw	-18
 20805  012458  6ED9               	movwf	fsr2l,c
 20806  01245A  50E2               	movf	fsr1h,w,c
 20807  01245C  6EDA               	movwf	fsr2h,c
 20808  01245E  0EFF               	movlw	255
 20809  012460  22DA               	addwfc	fsr2h,f,c
 20810  012462  06DE               	decf	postinc2,f,c
 20811  012464  0E00               	movlw	0
 20812  012466  5ADD               	subwfb	postdec2,f,c
 20813                           
 20814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 20815                           ;stkvar	_i @ sp[(-56)+36]
 20816  012468  0EEC               	movlw	-20
 20817  01246A  006F FF8C  F00B    	movff	plusw1,btemp+10
 20818  012470  0EED               	movlw	-19
 20819  012472  006F FF8C  F00C    	movff	plusw1,btemp+11
 20820  012478  0E97               	movlw	low _dbuf
 20821  01247A  240B               	addwf	(btemp+10)^0,w,c
 20822  01247C  6E09               	movwf	(btemp+8)^0,c
 20823  01247E  0E02               	movlw	high _dbuf
 20824  012480  200C               	addwfc	(btemp+11)^0,w,c
 20825  012482  6E0A               	movwf	(btemp+9)^0,c
 20826  012484  0060  F027  FFE6   	movff	btemp+8,postinc1
 20827  01248A  0060  F02B  FFE6   	movff	btemp+9,postinc1
 20828                           
 20829                           ;stkvar	_n @ sp[(-58)+32]
 20830  012490  0E97               	movlw	low _dbuf
 20831  012492  6E0B               	movwf	(btemp+10)^0,c
 20832  012494  0E02               	movlw	high _dbuf
 20833  012496  6E0C               	movwf	(btemp+11)^0,c
 20834  012498  0EE6               	movlw	-26
 20835  01249A  50E3               	movf	plusw1,w,c
 20836  01249C  260B               	addwf	(btemp+10)^0,f,c
 20837  01249E  0EE7               	movlw	-25
 20838  0124A0  50E3               	movf	plusw1,w,c
 20839  0124A2  220C               	addwfc	(btemp+11)^0,f,c
 20840  0124A4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 20841  0124AA  0060  F033  FFE6   	movff	btemp+11,postinc1
 20842  0124B0  ECF1  F0D5         	call	_strcpy	;wreg free
 20843  0124B4  EF55  F08A         	goto	l12850
 20844  0124B8                     l2346:
 20845                           
 20846                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 20847  0124B8  0EC1               	movlw	193
 20848  0124BA  26E1               	addwf	fsr1l,f,c
 20849  0124BC  0EFF               	movlw	255
 20850  0124BE  22E2               	addwfc	fsr1h,f,c
 20851  0124C0  0012               	return		;funcret
 20852  0124C2                     __end_of_efgtoa:
 20853                           	opt callstack 0
 20854                           
 20855 ;; *************** function _tolower *****************
 20856 ;; Defined at:
 20857 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 20858 ;; Parameters:    Size  Location     Type
 20859 ;;  c               2  [STACK] int 
 20860 ;; Auto vars:     Size  Location     Type
 20861 ;;		None
 20862 ;; Return value:  Size  Location     Type
 20863 ;;                  2  [STACK] int 
 20864 ;; Registers used:
 20865 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 20866 ;; Tracked objects:
 20867 ;;		On entry : 0/0
 20868 ;;		On exit  : 0/0
 20869 ;;		Unchanged: 0/0
 20870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20875 ;;Total ram usage:        0 bytes
 20876 ;; Hardware stack levels used:    1
 20877 ;; Hardware stack levels required when called:   16
 20878 ;; This function calls:
 20879 ;;		_isupper
 20880 ;; This function is called by:
 20881 ;;		_efgtoa
 20882 ;;		_vfpfcnvrt
 20883 ;; This function uses a reentrant model
 20884 ;;
 20885                           
 20886                           	psect	text71
 20887  01B87A                     __ptext71:
 20888                           	opt callstack 0
 20889  01B87A                     _tolower:
 20890                           	opt callstack 0
 20891                           
 20892                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20893  01B87A  52E6               	movf	postinc1,f,c
 20894  01B87C  52E6               	movf	postinc1,f,c
 20895                           
 20896                           ;stkvar	_c @ sp[(-2)+-2]
 20897                           
 20898                           ;incstack = 0
 20899 ;; hardware stack exceeded
 20900  01B87E  0EFC               	movlw	-4
 20901  01B880  50E3               	movf	plusw1,w,c
 20902  01B882  0FBF               	addlw	191
 20903  01B884  6E0B               	movwf	(btemp+10)^0,c
 20904  01B886  0EFD               	movlw	-3
 20905  01B888  006F FF8C  F00C    	movff	plusw1,btemp+11
 20906  01B88E  0EFF               	movlw	255
 20907  01B890  220C               	addwfc	(btemp+11)^0,f,c
 20908  01B892  500C               	movf	(btemp+11)^0,w,c
 20909  01B894  E106               	bnz	u6430
 20910  01B896  0E1A               	movlw	26
 20911  01B898  5C0B               	subwf	(btemp+10)^0,w,c
 20912  01B89A  B0D8               	btfsc	status,0,c
 20913  01B89C  D002               	goto	u6430
 20914  01B89E  0E01               	movlw	1
 20915  01B8A0  D001               	goto	u6440
 20916  01B8A2                     u6430:
 20917  01B8A2  0E00               	movlw	0
 20918  01B8A4                     u6440:
 20919  01B8A4  6E0B               	movwf	(btemp+10)^0,c
 20920  01B8A6  6A0C               	clrf	(btemp+11)^0,c
 20921                           
 20922                           ;stkvar	_tolower$6819 @ sp[(-2)+0]
 20923  01B8A8  0EFE               	movlw	-2
 20924  01B8AA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20925  01B8B0  0EFF               	movlw	-1
 20926  01B8B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 20927                           
 20928                           ;stkvar	_tolower$6819 @ sp[(-2)+0]
 20929  01B8B8  0EFE               	movlw	-2
 20930  01B8BA  006F FF8C  F001    	movff	plusw1,btemp
 20931  01B8C0  0EFF               	movlw	-1
 20932  01B8C2  50E3               	movf	plusw1,w,c
 20933  01B8C4  1001               	iorwf	btemp^0,w,c
 20934  01B8C6  B4D8               	btfsc	status,2,c
 20935  01B8C8  D00D               	goto	l8528
 20936                           
 20937                           ;stkvar	_c @ sp[(-2)+-2]
 20938  01B8CA  0EFC               	movlw	-4
 20939  01B8CC  006F FF8C  F001    	movff	plusw1,btemp
 20940  01B8D2  0EFD               	movlw	-3
 20941  01B8D4  006F FF8C  F002    	movff	plusw1,btemp+1
 20942  01B8DA  0E20               	movlw	32
 20943  01B8DC  1201               	iorwf	btemp^0,f,c
 20944  01B8DE  0E00               	movlw	0
 20945  01B8E0  1202               	iorwf	(btemp+1)^0,f,c
 20946  01B8E2  D008               	goto	l3618
 20947  01B8E4                     l8528:
 20948                           
 20949                           ;stkvar	_c @ sp[(-2)+-2]
 20950  01B8E4  0EFC               	movlw	-4
 20951  01B8E6  006F FF8C  F001    	movff	plusw1,btemp
 20952  01B8EC  0EFD               	movlw	-3
 20953  01B8EE  006F FF8C  F002    	movff	plusw1,btemp+1
 20954  01B8F4                     l3618:
 20955                           
 20956                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20957  01B8F4  52E5               	movf	postdec1,f,c
 20958  01B8F6  52E5               	movf	postdec1,f,c
 20959  01B8F8  52E5               	movf	postdec1,f,c
 20960  01B8FA  52E5               	movf	postdec1,f,c
 20961  01B8FC  0012               	return		;funcret
 20962  01B8FE                     __end_of_tolower:
 20963                           	opt callstack 0
 20964                           
 20965 ;; *************** function _isupper *****************
 20966 ;; Defined at:
 20967 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 20968 ;; Parameters:    Size  Location     Type
 20969 ;;  c               2  [STACK] int 
 20970 ;; Auto vars:     Size  Location     Type
 20971 ;;		None
 20972 ;; Return value:  Size  Location     Type
 20973 ;;                  2  [STACK] int 
 20974 ;; Registers used:
 20975 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20976 ;; Tracked objects:
 20977 ;;		On entry : 0/0
 20978 ;;		On exit  : 0/0
 20979 ;;		Unchanged: 0/0
 20980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20985 ;;Total ram usage:        0 bytes
 20986 ;; Hardware stack levels used:    1
 20987 ;; Hardware stack levels required when called:   15
 20988 ;; This function calls:
 20989 ;;		Nothing
 20990 ;; This function is called by:
 20991 ;;		_efgtoa
 20992 ;;		_xtoa
 20993 ;;		_vfpfcnvrt
 20994 ;;		_tolower
 20995 ;; This function uses a reentrant model
 20996 ;;
 20997                           
 20998                           	psect	text72
 20999  01C81A                     __ptext72:
 21000                           	opt callstack 0
 21001  01C81A                     _isupper:
 21002                           	opt callstack 0
 21003                           
 21004                           ;stkvar	_c @ sp[(0)+-2]
 21005                           
 21006                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21007                           ;incstack = 0
 21008 ;; hardware stack exceeded
 21009  01C81A  0EFE               	movlw	-2
 21010  01C81C  50E3               	movf	plusw1,w,c
 21011  01C81E  0FBF               	addlw	191
 21012  01C820  6E0B               	movwf	(btemp+10)^0,c
 21013  01C822  0EFF               	movlw	-1
 21014  01C824  006F FF8C  F00C    	movff	plusw1,btemp+11
 21015  01C82A  0EFF               	movlw	255
 21016  01C82C  220C               	addwfc	(btemp+11)^0,f,c
 21017  01C82E  500C               	movf	(btemp+11)^0,w,c
 21018  01C830  E106               	bnz	u5780
 21019  01C832  0E1A               	movlw	26
 21020  01C834  5C0B               	subwf	(btemp+10)^0,w,c
 21021  01C836  B0D8               	btfsc	status,0,c
 21022  01C838  D002               	goto	u5780
 21023  01C83A  0E01               	movlw	1
 21024  01C83C  D001               	goto	u5790
 21025  01C83E                     u5780:
 21026  01C83E  0E00               	movlw	0
 21027  01C840                     u5790:
 21028  01C840  6E01               	movwf	btemp^0,c
 21029  01C842  6A02               	clrf	(btemp+1)^0,c
 21030                           
 21031                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21032  01C844  52E5               	movf	postdec1,f,c
 21033  01C846  52E5               	movf	postdec1,f,c
 21034  01C848  0012               	return		;funcret
 21035  01C84A                     __end_of_isupper:
 21036                           	opt callstack 0
 21037                           
 21038 ;; *************** function _strcpy *****************
 21039 ;; Defined at:
 21040 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 21041 ;; Parameters:    Size  Location     Type
 21042 ;;  dest            2  [STACK] PTR unsigned char 
 21043 ;;		 -> dbuf(80), 
 21044 ;;  src             2  [STACK] PTR const unsigned char 
 21045 ;;		 -> STR_87(4), STR_86(4), STR_83(4), STR_82(4), 
 21046 ;;		 -> dbuf(80), 
 21047 ;; Auto vars:     Size  Location     Type
 21048 ;;  d               2  [STACK] PTR unsigned char 
 21049 ;;		 -> dbuf(80), 
 21050 ;;  s               2  [STACK] PTR const unsigned char 
 21051 ;;		 -> STR_87(4), STR_86(4), STR_83(4), STR_82(4), 
 21052 ;;		 -> dbuf(80), 
 21053 ;; Return value:  Size  Location     Type
 21054 ;;                  2  [STACK] PTR unsigned char 
 21055 ;; Registers used:
 21056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 21057 ;; Tracked objects:
 21058 ;;		On entry : 0/0
 21059 ;;		On exit  : 0/0
 21060 ;;		Unchanged: 0/0
 21061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21066 ;;Total ram usage:        0 bytes
 21067 ;; Hardware stack levels used:    1
 21068 ;; Hardware stack levels required when called:   15
 21069 ;; This function calls:
 21070 ;;		Nothing
 21071 ;; This function is called by:
 21072 ;;		_efgtoa
 21073 ;; This function uses a reentrant model
 21074 ;;
 21075                           
 21076                           	psect	text73
 21077  01ABE2                     __ptext73:
 21078                           	opt callstack 0
 21079  01ABE2                     _strcpy:
 21080                           	opt callstack 0
 21081                           
 21082                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21083  01ABE2  52E6               	movf	postinc1,f,c
 21084  01ABE4  52E6               	movf	postinc1,f,c
 21085  01ABE6  52E6               	movf	postinc1,f,c
 21086  01ABE8  52E6               	movf	postinc1,f,c
 21087                           
 21088                           ;stkvar	_src @ sp[(-4)+-4]
 21089                           
 21090                           ;incstack = 0
 21091 ;; hardware stack exceeded
 21092  01ABEA  0EF8               	movlw	-8
 21093  01ABEC  006F FF8C  F00B    	movff	plusw1,btemp+10
 21094  01ABF2  0EF9               	movlw	-7
 21095  01ABF4  006F FF8C  F00C    	movff	plusw1,btemp+11
 21096                           
 21097                           ;stkvar	_s @ sp[(-4)+2]
 21098  01ABFA  0EFF               	movlw	-1
 21099  01ABFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 21100  01AC02  0EFE               	movlw	-2
 21101  01AC04  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21102                           
 21103                           ;stkvar	_dest @ sp[(-4)+-2]
 21104  01AC0A  0EFA               	movlw	-6
 21105  01AC0C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21106  01AC12  0EFB               	movlw	-5
 21107  01AC14  006F FF8C  F00C    	movff	plusw1,btemp+11
 21108                           
 21109                           ;stkvar	_d @ sp[(-4)+0]
 21110  01AC1A  0EFD               	movlw	-3
 21111  01AC1C  0060  F033  FFE3   	movff	btemp+11,plusw1
 21112  01AC22  0EFC               	movlw	-4
 21113  01AC24  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21114  01AC2A                     l12712:
 21115                           
 21116                           ;stkvar	_s @ sp[(-4)+2]
 21117  01AC2A  50E1               	movf	fsr1l,w,c
 21118  01AC2C  0FFE               	addlw	-2
 21119  01AC2E  6ED9               	movwf	fsr2l,c
 21120  01AC30  50E2               	movf	fsr1h,w,c
 21121  01AC32  6EDA               	movwf	fsr2h,c
 21122  01AC34  0EFF               	movlw	255
 21123  01AC36  22DA               	addwfc	fsr2h,f,c
 21124  01AC38  006F FF7C  F00B    	movff	indf2,btemp+10
 21125  01AC3E  0E01               	movlw	1
 21126  01AC40  26DE               	addwf	postinc2,f,c
 21127  01AC42  006F FF7C  F00C    	movff	indf2,btemp+11
 21128  01AC48  0E00               	movlw	0
 21129  01AC4A  22DD               	addwfc	postdec2,f,c
 21130  01AC4C  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 21131  01AC52  0060  F033  FFF7   	movff	btemp+11,tblptrh
 21132  01AC58  0E00               	movlw	low (__mediumconst shr (0+16))
 21133  01AC5A  6EF8               	movwf	tblptru,c
 21134                           
 21135                           ;stkvar	_d @ sp[(-4)+0]
 21136  01AC5C  50E1               	movf	fsr1l,w,c
 21137  01AC5E  0FFC               	addlw	-4
 21138  01AC60  6ED9               	movwf	fsr2l,c
 21139  01AC62  50E2               	movf	fsr1h,w,c
 21140  01AC64  6EDA               	movwf	fsr2h,c
 21141  01AC66  0EFF               	movlw	255
 21142  01AC68  22DA               	addwfc	fsr2h,f,c
 21143  01AC6A  006F FF7C  F00B    	movff	indf2,btemp+10
 21144  01AC70  0E01               	movlw	1
 21145  01AC72  26DE               	addwf	postinc2,f,c
 21146  01AC74  006F FF7C  F00C    	movff	indf2,btemp+11
 21147  01AC7A  0E00               	movlw	0
 21148  01AC7C  22DD               	addwfc	postdec2,f,c
 21149  01AC7E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 21150  01AC84  0060  F033  FFDA   	movff	btemp+11,fsr2h
 21151  01AC8A  0E1F               	movlw	(high __ramtop+-1)
 21152  01AC8C  64F7               	cpfsgt	tblptrh,c
 21153  01AC8E  D003               	bra	u11547
 21154  01AC90  0008               	tblrd		*
 21155  01AC92  50F5               	movf	tablat,w,c
 21156  01AC94  D007               	bra	u11540
 21157  01AC96                     u11547:
 21158  01AC96  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21159  01AC9C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21160  01ACA2  50EF               	movf	indf0,w,c
 21161  01ACA4                     u11540:
 21162  01ACA4  6EDF               	movwf	indf2,c
 21163  01ACA6  50DF               	movf	indf2,w,c
 21164  01ACA8  A4D8               	btfss	status,2,c
 21165  01ACAA  D7BF               	goto	l12712
 21166                           
 21167                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 21168  01ACAC  0EF8               	movlw	248
 21169  01ACAE  26E1               	addwf	fsr1l,f,c
 21170  01ACB0  0EFF               	movlw	255
 21171  01ACB2  22E2               	addwfc	fsr1h,f,c
 21172  01ACB4  0012               	return		;funcret
 21173  01ACB6                     __end_of_strcpy:
 21174                           	opt callstack 0
 21175                           
 21176 ;; *************** function _floorf *****************
 21177 ;; Defined at:
 21178 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 21179 ;; Parameters:    Size  Location     Type
 21180 ;;  x               4  [STACK] float 
 21181 ;; Auto vars:     Size  Location     Type
 21182 ;;  u               4  [STACK] struct .
 21183 ;;  m               4  [STACK] unsigned long 
 21184 ;;  e               2  [STACK] int 
 21185 ;; Return value:  Size  Location     Type
 21186 ;;                  4  [STACK] float 
 21187 ;; Registers used:
 21188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 21189 ;; Tracked objects:
 21190 ;;		On entry : 0/0
 21191 ;;		On exit  : 0/0
 21192 ;;		Unchanged: 0/0
 21193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21198 ;;Total ram usage:        0 bytes
 21199 ;; Hardware stack levels used:    1
 21200 ;; Hardware stack levels required when called:   15
 21201 ;; This function calls:
 21202 ;;		Nothing
 21203 ;; This function is called by:
 21204 ;;		_efgtoa
 21205 ;; This function uses a reentrant model
 21206 ;;
 21207                           
 21208                           	psect	text74
 21209  016A36                     __ptext74:
 21210                           	opt callstack 0
 21211  016A36                     _floorf:
 21212                           	opt callstack 0
 21213                           
 21214                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 21215  016A36  0E0A               	movlw	10
 21216  016A38  26E1               	addwf	fsr1l,f,c
 21217  016A3A  0E00               	movlw	0
 21218  016A3C  22E2               	addwfc	fsr1h,f,c
 21219                           
 21220                           ;incstack = 0
 21221 ;; hardware stack exceeded
 21222  016A3E  0060  F7A8  F009   	movff	floorf@F524,btemp+8
 21223  016A44  0060  F7AC  F00A   	movff	floorf@F524+1,btemp+9
 21224  016A4A  0060  F7B0  F00B   	movff	floorf@F524+2,btemp+10
 21225  016A50  0060  F7B4  F00C   	movff	floorf@F524+3,btemp+11
 21226                           
 21227                           ;stkvar	_u @ sp[(-10)+0]
 21228  016A56  0EF6               	movlw	-10
 21229  016A58  0060  F027  FFE3   	movff	btemp+8,plusw1
 21230  016A5E  0EF7               	movlw	-9
 21231  016A60  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21232  016A66  0EF8               	movlw	-8
 21233  016A68  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21234  016A6E  0EF9               	movlw	-7
 21235  016A70  0060  F033  FFE3   	movff	btemp+11,plusw1
 21236                           
 21237                           ;stkvar	_x @ sp[(-10)+-4]
 21238  016A76  0EF2               	movlw	-14
 21239  016A78  006F FF8C  F009    	movff	plusw1,btemp+8
 21240  016A7E  0EF3               	movlw	-13
 21241  016A80  006F FF8C  F00A    	movff	plusw1,btemp+9
 21242  016A86  0EF4               	movlw	-12
 21243  016A88  006F FF8C  F00B    	movff	plusw1,btemp+10
 21244  016A8E  0EF5               	movlw	-11
 21245  016A90  006F FF8C  F00C    	movff	plusw1,btemp+11
 21246                           
 21247                           ;stkvar	_u @ sp[(-10)+0]
 21248  016A96  0EF6               	movlw	-10
 21249  016A98  0060  F027  FFE3   	movff	btemp+8,plusw1
 21250  016A9E  0EF7               	movlw	-9
 21251  016AA0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21252  016AA6  0EF8               	movlw	-8
 21253  016AA8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21254  016AAE  0EF9               	movlw	-7
 21255  016AB0  0060  F033  FFE3   	movff	btemp+11,plusw1
 21256  016AB6  0E81               	movlw	129
 21257  016AB8  6E0B               	movwf	(btemp+10)^0,c
 21258  016ABA  0EFF               	movlw	255
 21259  016ABC  6E0C               	movwf	(btemp+11)^0,c
 21260                           
 21261                           ;stkvar	_u @ sp[(-10)+0]
 21262  016ABE  0EF6               	movlw	-10
 21263  016AC0  006F FF8C  F005    	movff	plusw1,btemp+4
 21264  016AC6  0EF7               	movlw	-9
 21265  016AC8  006F FF8C  F006    	movff	plusw1,btemp+5
 21266  016ACE  0EF8               	movlw	-8
 21267  016AD0  006F FF8C  F007    	movff	plusw1,btemp+6
 21268  016AD6  0EF9               	movlw	-7
 21269  016AD8  006F FF8C  F008    	movff	plusw1,btemp+7
 21270  016ADE  0E18               	movlw	24
 21271  016AE0  D005               	goto	u6460
 21272  016AE2                     u6465:
 21273  016AE2  90D8               	bcf	status,0,c
 21274  016AE4  3208               	rrcf	(btemp+7)^0,f,c
 21275  016AE6  3207               	rrcf	(btemp+6)^0,f,c
 21276  016AE8  3206               	rrcf	(btemp+5)^0,f,c
 21277  016AEA  3205               	rrcf	(btemp+4)^0,f,c
 21278  016AEC                     u6460:
 21279  016AEC  2EE8               	decfsz	wreg,f,c
 21280  016AEE  D7F9               	goto	u6465
 21281  016AF0  0060  F014  F009   	movff	btemp+4,btemp+8
 21282  016AF6  0060  F018  F00A   	movff	btemp+5,btemp+9
 21283  016AFC  0EFF               	movlw	255
 21284  016AFE  1609               	andwf	(btemp+8)^0,f,c
 21285  016B00  0E00               	movlw	0
 21286  016B02  160A               	andwf	(btemp+9)^0,f,c
 21287  016B04  500B               	movf	(btemp+10)^0,w,c
 21288  016B06  2609               	addwf	(btemp+8)^0,f,c
 21289  016B08  500C               	movf	(btemp+11)^0,w,c
 21290  016B0A  220A               	addwfc	(btemp+9)^0,f,c
 21291                           
 21292                           ;stkvar	_e @ sp[(-10)+8]
 21293  016B0C  0EFE               	movlw	-2
 21294  016B0E  0060  F027  FFE3   	movff	btemp+8,plusw1
 21295  016B14  0EFF               	movlw	-1
 21296  016B16  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21297                           
 21298                           ;stkvar	_e @ sp[(-10)+8]
 21299  016B1C  0EFF               	movlw	-1
 21300  016B1E  BEE3               	btfsc	plusw1,7,c
 21301  016B20  D019               	goto	l8542
 21302  016B22  0EFF               	movlw	-1
 21303  016B24  50E3               	movf	plusw1,w,c
 21304  016B26  E108               	bnz	u6470
 21305  016B28  0EFE               	movlw	-2
 21306  016B2A  006F FF8C  F001    	movff	plusw1,btemp
 21307  016B30  0E17               	movlw	23
 21308  016B32  5E01               	subwf	btemp^0,f,c
 21309  016B34  A0D8               	btfss	status,0,c
 21310  016B36  D00E               	goto	l8542
 21311  016B38                     u6470:
 21312                           
 21313                           ;stkvar	_x @ sp[(-10)+-4]
 21314  016B38  0EF2               	movlw	-14
 21315  016B3A  006F FF8C  F001    	movff	plusw1,btemp
 21316  016B40  0EF3               	movlw	-13
 21317  016B42  006F FF8C  F002    	movff	plusw1,btemp+1
 21318  016B48  0EF4               	movlw	-12
 21319  016B4A  006F FF8C  F003    	movff	plusw1,btemp+2
 21320  016B50  0EF5               	movlw	-11
 21321  016B52  D11F               	goto	L24
 21322  016B54                     l8542:
 21323                           
 21324                           ;stkvar	_e @ sp[(-10)+8]
 21325  016B54  0EFF               	movlw	-1
 21326  016B56  BEE3               	btfsc	plusw1,7,c
 21327  016B58  D0B4               	goto	l8558
 21328                           
 21329                           ;stkvar	_e @ sp[(-10)+8]
 21330  016B5A  0EFE               	movlw	-2
 21331  016B5C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21332  016B62  0EFF               	movlw	255
 21333  016B64  6E05               	movwf	(btemp+4)^0,c
 21334  016B66  0EFF               	movlw	255
 21335  016B68  6E06               	movwf	(btemp+5)^0,c
 21336  016B6A  0E7F               	movlw	127
 21337  016B6C  6E07               	movwf	(btemp+6)^0,c
 21338  016B6E  0E00               	movlw	0
 21339  016B70  6E08               	movwf	(btemp+7)^0,c
 21340  016B72                     u6495:
 21341  016B72  660C               	tstfsz	(btemp+11)^0,c
 21342  016B74  D001               	goto	u6496
 21343  016B76  D007               	goto	u6497
 21344  016B78                     u6496:
 21345  016B78  3408               	rlcf	(btemp+7)^0,w,c
 21346  016B7A  3208               	rrcf	(btemp+7)^0,f,c
 21347  016B7C  3207               	rrcf	(btemp+6)^0,f,c
 21348  016B7E  3206               	rrcf	(btemp+5)^0,f,c
 21349  016B80  3205               	rrcf	(btemp+4)^0,f,c
 21350  016B82  2E0C               	decfsz	(btemp+11)^0,f,c
 21351  016B84  D7F6               	goto	u6495
 21352  016B86                     u6497:
 21353                           
 21354                           ;stkvar	_m @ sp[(-10)+4]
 21355  016B86  0EFA               	movlw	-6
 21356  016B88  0060  F017  FFE3   	movff	btemp+4,plusw1
 21357  016B8E  0EFB               	movlw	-5
 21358  016B90  0060  F01B  FFE3   	movff	btemp+5,plusw1
 21359  016B96  0EFC               	movlw	-4
 21360  016B98  0060  F01F  FFE3   	movff	btemp+6,plusw1
 21361  016B9E  0EFD               	movlw	-3
 21362  016BA0  0060  F023  FFE3   	movff	btemp+7,plusw1
 21363                           
 21364                           ;stkvar	_m @ sp[(-10)+4]
 21365                           ;stkvar	_u @ sp[(-10)+0]
 21366  016BA6  0EF6               	movlw	-10
 21367  016BA8  006F FF8C  F009    	movff	plusw1,btemp+8
 21368  016BAE  0EF7               	movlw	-9
 21369  016BB0  006F FF8C  F00A    	movff	plusw1,btemp+9
 21370  016BB6  0EF8               	movlw	-8
 21371  016BB8  006F FF8C  F00B    	movff	plusw1,btemp+10
 21372  016BBE  0EF9               	movlw	-7
 21373  016BC0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21374  016BC6  0EFA               	movlw	-6
 21375  016BC8  50E3               	movf	plusw1,w,c
 21376  016BCA  1609               	andwf	(btemp+8)^0,f,c
 21377  016BCC  0EFB               	movlw	-5
 21378  016BCE  50E3               	movf	plusw1,w,c
 21379  016BD0  160A               	andwf	(btemp+9)^0,f,c
 21380  016BD2  0EFC               	movlw	-4
 21381  016BD4  50E3               	movf	plusw1,w,c
 21382  016BD6  160B               	andwf	(btemp+10)^0,f,c
 21383  016BD8  0EFD               	movlw	-3
 21384  016BDA  50E3               	movf	plusw1,w,c
 21385  016BDC  160C               	andwf	(btemp+11)^0,f,c
 21386  016BDE  5009               	movf	(btemp+8)^0,w,c
 21387  016BE0  100A               	iorwf	(btemp+9)^0,w,c
 21388  016BE2  100B               	iorwf	(btemp+10)^0,w,c
 21389  016BE4  100C               	iorwf	(btemp+11)^0,w,c
 21390  016BE6  B4D8               	btfsc	status,2,c
 21391  016BE8  D7A7               	goto	u6470
 21392                           
 21393                           ;stkvar	_u @ sp[(-10)+0]
 21394  016BEA  0EF6               	movlw	-10
 21395  016BEC  006F FF8C  F009    	movff	plusw1,btemp+8
 21396  016BF2  0EF7               	movlw	-9
 21397  016BF4  006F FF8C  F00A    	movff	plusw1,btemp+9
 21398  016BFA  0EF8               	movlw	-8
 21399  016BFC  006F FF8C  F00B    	movff	plusw1,btemp+10
 21400  016C02  0EF9               	movlw	-7
 21401  016C04  006F FF8C  F00C    	movff	plusw1,btemp+11
 21402  016C0A  0E20               	movlw	32
 21403  016C0C  D005               	goto	u6510
 21404  016C0E                     u6515:
 21405  016C0E  90D8               	bcf	status,0,c
 21406  016C10  320C               	rrcf	(btemp+11)^0,f,c
 21407  016C12  320B               	rrcf	(btemp+10)^0,f,c
 21408  016C14  320A               	rrcf	(btemp+9)^0,f,c
 21409  016C16  3209               	rrcf	(btemp+8)^0,f,c
 21410  016C18                     u6510:
 21411  016C18  2EE8               	decfsz	wreg,f,c
 21412  016C1A  D7F9               	goto	u6515
 21413  016C1C  5009               	movf	(btemp+8)^0,w,c
 21414  016C1E  B4D8               	btfsc	status,2,c
 21415  016C20  D028               	goto	l8556
 21416                           
 21417                           ;stkvar	_m @ sp[(-10)+4]
 21418                           ;stkvar	_u @ sp[(-10)+0]
 21419  016C22  0EF6               	movlw	-10
 21420  016C24  50E3               	movf	plusw1,w,c
 21421  016C26  6E01               	movwf	btemp^0,c
 21422  016C28  0EFA               	movlw	-6
 21423  016C2A  50E3               	movf	plusw1,w,c
 21424  016C2C  2601               	addwf	btemp^0,f,c
 21425  016C2E  0EF6               	movlw	-10
 21426  016C30  0060  F007  FFE3   	movff	btemp,plusw1
 21427  016C36  0EF7               	movlw	-9
 21428  016C38  50E3               	movf	plusw1,w,c
 21429  016C3A  6E01               	movwf	btemp^0,c
 21430  016C3C  0EFB               	movlw	-5
 21431  016C3E  50E3               	movf	plusw1,w,c
 21432  016C40  2201               	addwfc	btemp^0,f,c
 21433  016C42  0EF7               	movlw	-9
 21434  016C44  0060  F007  FFE3   	movff	btemp,plusw1
 21435  016C4A  0EF8               	movlw	-8
 21436  016C4C  50E3               	movf	plusw1,w,c
 21437  016C4E  6E01               	movwf	btemp^0,c
 21438  016C50  0EFC               	movlw	-4
 21439  016C52  50E3               	movf	plusw1,w,c
 21440  016C54  2201               	addwfc	btemp^0,f,c
 21441  016C56  0EF8               	movlw	-8
 21442  016C58  0060  F007  FFE3   	movff	btemp,plusw1
 21443  016C5E  0EF9               	movlw	-7
 21444  016C60  50E3               	movf	plusw1,w,c
 21445  016C62  6E01               	movwf	btemp^0,c
 21446  016C64  0EFD               	movlw	-3
 21447  016C66  50E3               	movf	plusw1,w,c
 21448  016C68  2201               	addwfc	btemp^0,f,c
 21449  016C6A  0EF9               	movlw	-7
 21450  016C6C  0060  F007  FFE3   	movff	btemp,plusw1
 21451  016C72                     l8556:
 21452                           
 21453                           ;stkvar	_m @ sp[(-10)+4]
 21454  016C72  0EFA               	movlw	-6
 21455  016C74  006F FF8C  F009    	movff	plusw1,btemp+8
 21456  016C7A  0EFB               	movlw	-5
 21457  016C7C  006F FF8C  F00A    	movff	plusw1,btemp+9
 21458  016C82  0EFC               	movlw	-4
 21459  016C84  006F FF8C  F00B    	movff	plusw1,btemp+10
 21460  016C8A  0EFD               	movlw	-3
 21461  016C8C  006F FF8C  F00C    	movff	plusw1,btemp+11
 21462  016C92  1C09               	comf	(btemp+8)^0,w,c
 21463  016C94  6E05               	movwf	(btemp+4)^0,c
 21464  016C96  1C0A               	comf	(btemp+9)^0,w,c
 21465  016C98  6E06               	movwf	(btemp+5)^0,c
 21466  016C9A  1C0B               	comf	(btemp+10)^0,w,c
 21467  016C9C  6E07               	movwf	(btemp+6)^0,c
 21468  016C9E  1C0C               	comf	(btemp+11)^0,w,c
 21469  016CA0  6E08               	movwf	(btemp+7)^0,c
 21470                           
 21471                           ;stkvar	_u @ sp[(-10)+0]
 21472  016CA2  50E1               	movf	fsr1l,w,c
 21473  016CA4  0FF6               	addlw	-10
 21474  016CA6  6ED9               	movwf	fsr2l,c
 21475  016CA8  50E2               	movf	fsr1h,w,c
 21476  016CAA  6EDA               	movwf	fsr2h,c
 21477  016CAC  0EFF               	movlw	255
 21478  016CAE  22DA               	addwfc	fsr2h,f,c
 21479  016CB0  5005               	movf	(btemp+4)^0,w,c
 21480  016CB2  16DE               	andwf	postinc2,f,c
 21481  016CB4  5006               	movf	(btemp+5)^0,w,c
 21482  016CB6  16DE               	andwf	postinc2,f,c
 21483  016CB8  5007               	movf	(btemp+6)^0,w,c
 21484  016CBA  16DE               	andwf	postinc2,f,c
 21485  016CBC  5008               	movf	(btemp+7)^0,w,c
 21486  016CBE  16DE               	andwf	postinc2,f,c
 21487  016CC0  D05B               	goto	l8566
 21488  016CC2                     l8558:
 21489                           
 21490                           ;stkvar	_u @ sp[(-10)+0]
 21491  016CC2  0EF6               	movlw	-10
 21492  016CC4  006F FF8C  F009    	movff	plusw1,btemp+8
 21493  016CCA  0EF7               	movlw	-9
 21494  016CCC  006F FF8C  F00A    	movff	plusw1,btemp+9
 21495  016CD2  0EF8               	movlw	-8
 21496  016CD4  006F FF8C  F00B    	movff	plusw1,btemp+10
 21497  016CDA  0EF9               	movlw	-7
 21498  016CDC  006F FF8C  F00C    	movff	plusw1,btemp+11
 21499  016CE2  0E20               	movlw	32
 21500  016CE4  D005               	goto	u6530
 21501  016CE6                     u6535:
 21502  016CE6  90D8               	bcf	status,0,c
 21503  016CE8  320C               	rrcf	(btemp+11)^0,f,c
 21504  016CEA  320B               	rrcf	(btemp+10)^0,f,c
 21505  016CEC  320A               	rrcf	(btemp+9)^0,f,c
 21506  016CEE  3209               	rrcf	(btemp+8)^0,f,c
 21507  016CF0                     u6530:
 21508  016CF0  2EE8               	decfsz	wreg,f,c
 21509  016CF2  D7F9               	goto	u6535
 21510  016CF4  6609               	tstfsz	(btemp+8)^0,c
 21511  016CF6  D009               	goto	l8562
 21512                           
 21513                           ;stkvar	_u @ sp[(-10)+0]
 21514  016CF8  0EF6               	movlw	-10
 21515  016CFA  6AE3               	clrf	plusw1,c
 21516  016CFC  0EF7               	movlw	-9
 21517  016CFE  6AE3               	clrf	plusw1,c
 21518  016D00  0EF8               	movlw	-8
 21519  016D02  6AE3               	clrf	plusw1,c
 21520  016D04  0EF9               	movlw	-7
 21521  016D06  6AE3               	clrf	plusw1,c
 21522  016D08  D037               	goto	l8566
 21523  016D0A                     l8562:
 21524                           
 21525                           ;stkvar	_u @ sp[(-10)+0]
 21526  016D0A  0EF6               	movlw	-10
 21527  016D0C  006F FF8C  F009    	movff	plusw1,btemp+8
 21528  016D12  0EF7               	movlw	-9
 21529  016D14  006F FF8C  F00A    	movff	plusw1,btemp+9
 21530  016D1A  0EF8               	movlw	-8
 21531  016D1C  006F FF8C  F00B    	movff	plusw1,btemp+10
 21532  016D22  0EF9               	movlw	-7
 21533  016D24  006F FF8C  F00C    	movff	plusw1,btemp+11
 21534  016D2A  90D8               	bcf	status,0,c
 21535  016D2C  3409               	rlcf	(btemp+8)^0,w,c
 21536  016D2E  6E05               	movwf	(btemp+4)^0,c
 21537  016D30  340A               	rlcf	(btemp+9)^0,w,c
 21538  016D32  6E06               	movwf	(btemp+5)^0,c
 21539  016D34  340B               	rlcf	(btemp+10)^0,w,c
 21540  016D36  6E07               	movwf	(btemp+6)^0,c
 21541  016D38  340C               	rlcf	(btemp+11)^0,w,c
 21542  016D3A  6E08               	movwf	(btemp+7)^0,c
 21543  016D3C  5005               	movf	(btemp+4)^0,w,c
 21544  016D3E  1006               	iorwf	(btemp+5)^0,w,c
 21545  016D40  1007               	iorwf	(btemp+6)^0,w,c
 21546  016D42  1008               	iorwf	(btemp+7)^0,w,c
 21547  016D44  B4D8               	btfsc	status,2,c
 21548  016D46  D018               	goto	l8566
 21549  016D48  0E00               	movlw	0
 21550  016D4A  6E09               	movwf	(btemp+8)^0,c
 21551  016D4C  0E00               	movlw	0
 21552  016D4E  6E0A               	movwf	(btemp+9)^0,c
 21553  016D50  0E80               	movlw	128
 21554  016D52  6E0B               	movwf	(btemp+10)^0,c
 21555  016D54  0EBF               	movlw	191
 21556  016D56  6E0C               	movwf	(btemp+11)^0,c
 21557                           
 21558                           ;stkvar	_u @ sp[(-10)+0]
 21559  016D58  0EF6               	movlw	-10
 21560  016D5A  0060  F027  FFE3   	movff	btemp+8,plusw1
 21561  016D60  0EF7               	movlw	-9
 21562  016D62  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21563  016D68  0EF8               	movlw	-8
 21564  016D6A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21565  016D70  0EF9               	movlw	-7
 21566  016D72  0060  F033  FFE3   	movff	btemp+11,plusw1
 21567  016D78                     l8566:
 21568                           
 21569                           ;stkvar	_u @ sp[(-10)+0]
 21570  016D78  0EF6               	movlw	-10
 21571  016D7A  006F FF8C  F001    	movff	plusw1,btemp
 21572  016D80  0EF7               	movlw	-9
 21573  016D82  006F FF8C  F002    	movff	plusw1,btemp+1
 21574  016D88  0EF8               	movlw	-8
 21575  016D8A  006F FF8C  F003    	movff	plusw1,btemp+2
 21576  016D90  0EF9               	movlw	-7
 21577  016D92                     L24:
 21578  016D92  006F FF8C  F004    	movff	plusw1,btemp+3
 21579                           
 21580                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 21581  016D98  0EF2               	movlw	242
 21582  016D9A  26E1               	addwf	fsr1l,f,c
 21583  016D9C  0EFF               	movlw	255
 21584  016D9E  22E2               	addwfc	fsr1h,f,c
 21585  016DA0  0012               	return		;funcret
 21586  016DA2                     __end_of_floorf:
 21587                           	opt callstack 0
 21588                           
 21589 ;; *************** function ___fpclassifyf *****************
 21590 ;; Defined at:
 21591 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 21592 ;; Parameters:    Size  Location     Type
 21593 ;;  x               4  [STACK] float 
 21594 ;; Auto vars:     Size  Location     Type
 21595 ;;  u               4  [STACK] struct .
 21596 ;;  e               2  [STACK] int 
 21597 ;; Return value:  Size  Location     Type
 21598 ;;                  2  [STACK] int 
 21599 ;; Registers used:
 21600 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 21601 ;; Tracked objects:
 21602 ;;		On entry : 0/0
 21603 ;;		On exit  : 0/0
 21604 ;;		Unchanged: 0/0
 21605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21610 ;;Total ram usage:        0 bytes
 21611 ;; Hardware stack levels used:    1
 21612 ;; Hardware stack levels required when called:   15
 21613 ;; This function calls:
 21614 ;;		Nothing
 21615 ;; This function is called by:
 21616 ;;		_efgtoa
 21617 ;; This function uses a reentrant model
 21618 ;;
 21619                           
 21620                           	psect	text75
 21621  0191B8                     __ptext75:
 21622                           	opt callstack 0
 21623  0191B8                     ___fpclassifyf:
 21624                           	opt callstack 0
 21625                           
 21626                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21627  0191B8  0E06               	movlw	6
 21628  0191BA  26E1               	addwf	fsr1l,f,c
 21629  0191BC  0E00               	movlw	0
 21630  0191BE  22E2               	addwfc	fsr1h,f,c
 21631                           
 21632                           ;incstack = 0
 21633 ;; hardware stack exceeded
 21634  0191C0  0060  F180  F009   	movff	___fpclassifyf@F463,btemp+8
 21635  0191C6  0060  F184  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 21636  0191CC  0060  F188  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 21637  0191D2  0060  F18C  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 21638                           
 21639                           ;stkvar	_u @ sp[(-6)+0]
 21640  0191D8  0EFA               	movlw	-6
 21641  0191DA  0060  F027  FFE3   	movff	btemp+8,plusw1
 21642  0191E0  0EFB               	movlw	-5
 21643  0191E2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21644  0191E8  0EFC               	movlw	-4
 21645  0191EA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21646  0191F0  0EFD               	movlw	-3
 21647  0191F2  0060  F033  FFE3   	movff	btemp+11,plusw1
 21648                           
 21649                           ;stkvar	_x @ sp[(-6)+-4]
 21650  0191F8  0EF6               	movlw	-10
 21651  0191FA  006F FF8C  F009    	movff	plusw1,btemp+8
 21652  019200  0EF7               	movlw	-9
 21653  019202  006F FF8C  F00A    	movff	plusw1,btemp+9
 21654  019208  0EF8               	movlw	-8
 21655  01920A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21656  019210  0EF9               	movlw	-7
 21657  019212  006F FF8C  F00C    	movff	plusw1,btemp+11
 21658                           
 21659                           ;stkvar	_u @ sp[(-6)+0]
 21660  019218  0EFA               	movlw	-6
 21661  01921A  0060  F027  FFE3   	movff	btemp+8,plusw1
 21662  019220  0EFB               	movlw	-5
 21663  019222  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21664  019228  0EFC               	movlw	-4
 21665  01922A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21666  019230  0EFD               	movlw	-3
 21667  019232  0060  F033  FFE3   	movff	btemp+11,plusw1
 21668                           
 21669                           ;stkvar	_u @ sp[(-6)+0]
 21670  019238  0EFA               	movlw	-6
 21671  01923A  006F FF8C  F009    	movff	plusw1,btemp+8
 21672  019240  0EFB               	movlw	-5
 21673  019242  006F FF8C  F00A    	movff	plusw1,btemp+9
 21674  019248  0EFC               	movlw	-4
 21675  01924A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21676  019250  0EFD               	movlw	-3
 21677  019252  006F FF8C  F00C    	movff	plusw1,btemp+11
 21678  019258  0E18               	movlw	24
 21679  01925A  D005               	goto	u6340
 21680  01925C                     u6345:
 21681  01925C  90D8               	bcf	status,0,c
 21682  01925E  320C               	rrcf	(btemp+11)^0,f,c
 21683  019260  320B               	rrcf	(btemp+10)^0,f,c
 21684  019262  320A               	rrcf	(btemp+9)^0,f,c
 21685  019264  3209               	rrcf	(btemp+8)^0,f,c
 21686  019266                     u6340:
 21687  019266  2EE8               	decfsz	wreg,f,c
 21688  019268  D7F9               	goto	u6345
 21689  01926A  0060  F024  F007   	movff	btemp+8,btemp+6
 21690  019270  0060  F028  F008   	movff	btemp+9,btemp+7
 21691  019276  0EFF               	movlw	255
 21692  019278  1607               	andwf	(btemp+6)^0,f,c
 21693  01927A  0E00               	movlw	0
 21694  01927C  1608               	andwf	(btemp+7)^0,f,c
 21695                           
 21696                           ;stkvar	_e @ sp[(-6)+4]
 21697  01927E  0EFE               	movlw	-2
 21698  019280  0060  F01F  FFE3   	movff	btemp+6,plusw1
 21699  019286  0EFF               	movlw	-1
 21700  019288  0060  F023  FFE3   	movff	btemp+7,plusw1
 21701                           
 21702                           ;stkvar	_e @ sp[(-6)+4]
 21703  01928E  0EFE               	movlw	-2
 21704  019290  006F FF8C  F001    	movff	plusw1,btemp
 21705  019296  0EFF               	movlw	-1
 21706  019298  50E3               	movf	plusw1,w,c
 21707  01929A  1001               	iorwf	btemp^0,w,c
 21708  01929C  A4D8               	btfss	status,2,c
 21709  01929E  D023               	goto	l8504
 21710                           
 21711                           ;stkvar	_u @ sp[(-6)+0]
 21712  0192A0  0EFA               	movlw	-6
 21713  0192A2  006F FF8C  F009    	movff	plusw1,btemp+8
 21714  0192A8  0EFB               	movlw	-5
 21715  0192AA  006F FF8C  F00A    	movff	plusw1,btemp+9
 21716  0192B0  0EFC               	movlw	-4
 21717  0192B2  006F FF8C  F00B    	movff	plusw1,btemp+10
 21718  0192B8  0EFD               	movlw	-3
 21719  0192BA  006F FF8C  F00C    	movff	plusw1,btemp+11
 21720  0192C0  90D8               	bcf	status,0,c
 21721  0192C2  3409               	rlcf	(btemp+8)^0,w,c
 21722  0192C4  6E05               	movwf	(btemp+4)^0,c
 21723  0192C6  340A               	rlcf	(btemp+9)^0,w,c
 21724  0192C8  6E06               	movwf	(btemp+5)^0,c
 21725  0192CA  340B               	rlcf	(btemp+10)^0,w,c
 21726  0192CC  6E07               	movwf	(btemp+6)^0,c
 21727  0192CE  340C               	rlcf	(btemp+11)^0,w,c
 21728  0192D0  6E08               	movwf	(btemp+7)^0,c
 21729  0192D2  5005               	movf	(btemp+4)^0,w,c
 21730  0192D4  1006               	iorwf	(btemp+5)^0,w,c
 21731  0192D6  1007               	iorwf	(btemp+6)^0,w,c
 21732  0192D8  1008               	iorwf	(btemp+7)^0,w,c
 21733  0192DA  A4D8               	btfss	status,2,c
 21734  0192DC  D002               	goto	l8500
 21735  0192DE  0E02               	movlw	2
 21736  0192E0  D02E               	goto	L25
 21737  0192E2                     l8500:
 21738  0192E2  0E03               	movlw	3
 21739  0192E4  D02C               	goto	L25
 21740  0192E6                     l8504:
 21741                           
 21742                           ;stkvar	_e @ sp[(-6)+4]
 21743  0192E6  0EFE               	movlw	-2
 21744  0192E8  28E3               	incf	plusw1,w,c
 21745  0192EA  E128               	bnz	l8510
 21746  0192EC  0EFF               	movlw	-1
 21747  0192EE  50E3               	movf	plusw1,w,c
 21748  0192F0  A4D8               	btfss	status,2,c
 21749  0192F2  D024               	goto	l8510
 21750                           
 21751                           ;stkvar	_u @ sp[(-6)+0]
 21752  0192F4  0EFA               	movlw	-6
 21753  0192F6  006F FF8C  F009    	movff	plusw1,btemp+8
 21754  0192FC  0EFB               	movlw	-5
 21755  0192FE  006F FF8C  F00A    	movff	plusw1,btemp+9
 21756  019304  0EFC               	movlw	-4
 21757  019306  006F FF8C  F00B    	movff	plusw1,btemp+10
 21758  01930C  0EFD               	movlw	-3
 21759  01930E  006F FF8C  F00C    	movff	plusw1,btemp+11
 21760  019314  0E09               	movlw	9
 21761  019316                     u6385:
 21762  019316  90D8               	bcf	status,0,c
 21763  019318  3609               	rlcf	(btemp+8)^0,f,c
 21764  01931A  360A               	rlcf	(btemp+9)^0,f,c
 21765  01931C  360B               	rlcf	(btemp+10)^0,f,c
 21766  01931E  360C               	rlcf	(btemp+11)^0,f,c
 21767  019320  2EE8               	decfsz	wreg,f,c
 21768  019322  D7F9               	goto	u6385
 21769  019324  5009               	movf	(btemp+8)^0,w,c
 21770  019326  100A               	iorwf	(btemp+9)^0,w,c
 21771  019328  100B               	iorwf	(btemp+10)^0,w,c
 21772  01932A  100C               	iorwf	(btemp+11)^0,w,c
 21773  01932C  A4D8               	btfss	status,2,c
 21774  01932E  D002               	goto	u6390
 21775  019330  0E01               	movlw	1
 21776  019332  D001               	goto	u6400
 21777  019334                     u6390:
 21778  019334  0E00               	movlw	0
 21779  019336                     u6400:
 21780  019336  6E01               	movwf	btemp^0,c
 21781  019338  6A02               	clrf	(btemp+1)^0,c
 21782  01933A  D004               	goto	l3228
 21783  01933C                     l8510:
 21784  01933C  0E04               	movlw	4
 21785  01933E                     L25:
 21786  01933E  6E01               	movwf	btemp^0,c
 21787  019340  0E00               	movlw	0
 21788  019342  6E02               	movwf	(btemp+1)^0,c
 21789  019344                     l3228:
 21790                           
 21791                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 21792  019344  0EF6               	movlw	246
 21793  019346  26E1               	addwf	fsr1l,f,c
 21794  019348  0EFF               	movlw	255
 21795  01934A  22E2               	addwfc	fsr1h,f,c
 21796  01934C  0012               	return		;funcret
 21797  01934E                     __end_of___fpclassifyf:
 21798                           	opt callstack 0
 21799                           
 21800 ;; *************** function ___fltol *****************
 21801 ;; Defined at:
 21802 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 21803 ;; Parameters:    Size  Location     Type
 21804 ;;  f1              4  [STACK] int 
 21805 ;; Auto vars:     Size  Location     Type
 21806 ;;  exp1            1  [STACK] unsigned char 
 21807 ;;  sign1           1  [STACK] unsigned char 
 21808 ;; Return value:  Size  Location     Type
 21809 ;;                  4  [STACK] long 
 21810 ;; Registers used:
 21811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 21812 ;; Tracked objects:
 21813 ;;		On entry : 0/0
 21814 ;;		On exit  : 0/0
 21815 ;;		Unchanged: 0/0
 21816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21821 ;;Total ram usage:        0 bytes
 21822 ;; Hardware stack levels used:    1
 21823 ;; Hardware stack levels required when called:   15
 21824 ;; This function calls:
 21825 ;;		Nothing
 21826 ;; This function is called by:
 21827 ;;		_main
 21828 ;;		_convert_dac_raw
 21829 ;;		_calc_bsoc
 21830 ;;		_init_bsoc
 21831 ;;		_efgtoa
 21832 ;; This function uses a reentrant model
 21833 ;;
 21834                           
 21835                           	psect	text76
 21836  019654                     __ptext76:
 21837                           	opt callstack 0
 21838  019654                     ___fltol:
 21839                           	opt callstack 0
 21840                           
 21841                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21842  019654  52E6               	movf	postinc1,f,c
 21843  019656  52E6               	movf	postinc1,f,c
 21844                           
 21845                           ;stkvar	_f1 @ sp[(-2)+-4]
 21846                           
 21847                           ;incstack = 0
 21848 ;; hardware stack exceeded
 21849  019658  0EFA               	movlw	-6
 21850  01965A  006F FF8C  F009    	movff	plusw1,btemp+8
 21851  019660  0EFB               	movlw	-5
 21852  019662  006F FF8C  F00A    	movff	plusw1,btemp+9
 21853  019668  0EFC               	movlw	-4
 21854  01966A  006F FF8C  F00B    	movff	plusw1,btemp+10
 21855  019670  0EFD               	movlw	-3
 21856  019672  006F FF8C  F00C    	movff	plusw1,btemp+11
 21857  019678  0E18               	movlw	24
 21858  01967A  D005               	goto	u7550
 21859  01967C                     u7555:
 21860  01967C  90D8               	bcf	status,0,c
 21861  01967E  320C               	rrcf	(btemp+11)^0,f,c
 21862  019680  320B               	rrcf	(btemp+10)^0,f,c
 21863  019682  320A               	rrcf	(btemp+9)^0,f,c
 21864  019684  3209               	rrcf	(btemp+8)^0,f,c
 21865  019686                     u7550:
 21866  019686  2EE8               	decfsz	wreg,f,c
 21867  019688  D7F9               	goto	u7555
 21868                           
 21869                           ;stkvar	_exp1 @ sp[(-2)+0]
 21870  01968A  0EFE               	movlw	-2
 21871  01968C  0060  F027  FFE3   	movff	btemp+8,plusw1
 21872  019692  0EFE               	movlw	-2
 21873  019694  50E3               	movf	plusw1,w,c
 21874  019696  A4D8               	btfss	status,2,c
 21875  019698  D006               	goto	l9130
 21876  01969A                     u7560:
 21877  01969A  0E00               	movlw	0
 21878  01969C  6E01               	movwf	btemp^0,c
 21879  01969E  6A02               	clrf	(btemp+1)^0,c
 21880  0196A0  6A03               	clrf	(btemp+2)^0,c
 21881  0196A2  6A04               	clrf	(btemp+3)^0,c
 21882  0196A4  D08B               	goto	l2844
 21883  0196A6                     l9130:
 21884                           
 21885                           ;stkvar	_f1 @ sp[(-2)+-4]
 21886  0196A6  0EFA               	movlw	-6
 21887  0196A8  006F FF8C  F009    	movff	plusw1,btemp+8
 21888  0196AE  0EFB               	movlw	-5
 21889  0196B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 21890  0196B6  0EFC               	movlw	-4
 21891  0196B8  006F FF8C  F00B    	movff	plusw1,btemp+10
 21892  0196BE  0EFD               	movlw	-3
 21893  0196C0  006F FF8C  F00C    	movff	plusw1,btemp+11
 21894  0196C6  0E20               	movlw	32
 21895  0196C8  D005               	goto	u7570
 21896  0196CA                     u7575:
 21897  0196CA  90D8               	bcf	status,0,c
 21898  0196CC  320C               	rrcf	(btemp+11)^0,f,c
 21899  0196CE  320B               	rrcf	(btemp+10)^0,f,c
 21900  0196D0  320A               	rrcf	(btemp+9)^0,f,c
 21901  0196D2  3209               	rrcf	(btemp+8)^0,f,c
 21902  0196D4                     u7570:
 21903  0196D4  2EE8               	decfsz	wreg,f,c
 21904  0196D6  D7F9               	goto	u7575
 21905                           
 21906                           ;stkvar	_sign1 @ sp[(-2)+1]
 21907  0196D8  0EFF               	movlw	-1
 21908  0196DA  0060  F027  FFE3   	movff	btemp+8,plusw1
 21909                           
 21910                           ;stkvar	_f1 @ sp[(-2)+-4]
 21911  0196E0  0EFC               	movlw	-4
 21912  0196E2  8EE3               	bsf	plusw1,7,c
 21913                           
 21914                           ;stkvar	_f1 @ sp[(-2)+-4]
 21915  0196E4  50E1               	movf	fsr1l,w,c
 21916  0196E6  0FFA               	addlw	-6
 21917  0196E8  6ED9               	movwf	fsr2l,c
 21918  0196EA  50E2               	movf	fsr1h,w,c
 21919  0196EC  6EDA               	movwf	fsr2h,c
 21920  0196EE  0EFF               	movlw	255
 21921  0196F0  22DA               	addwfc	fsr2h,f,c
 21922  0196F2  0EFF               	movlw	255
 21923  0196F4  16DE               	andwf	postinc2,f,c
 21924  0196F6  0EFF               	movlw	255
 21925  0196F8  16DE               	andwf	postinc2,f,c
 21926  0196FA  0EFF               	movlw	255
 21927  0196FC  16DE               	andwf	postinc2,f,c
 21928  0196FE  0E00               	movlw	0
 21929  019700  16DE               	andwf	postinc2,f,c
 21930                           
 21931                           ;stkvar	_exp1 @ sp[(-2)+0]
 21932  019702  0EFE               	movlw	-2
 21933  019704  006F FF8C  F001    	movff	plusw1,btemp
 21934  01970A  0E96               	movlw	150
 21935  01970C  5E01               	subwf	btemp^0,f,c
 21936  01970E  0EFE               	movlw	-2
 21937  019710  0060  F007  FFE3   	movff	btemp,plusw1
 21938                           
 21939                           ;stkvar	_exp1 @ sp[(-2)+0]
 21940  019716  0EFE               	movlw	-2
 21941  019718  AEE3               	btfss	plusw1,7,c
 21942  01971A  D014               	goto	l9148
 21943                           
 21944                           ;stkvar	_exp1 @ sp[(-2)+0]
 21945  01971C  0EFE               	movlw	-2
 21946  01971E  50E3               	movf	plusw1,w,c
 21947  019720  0A80               	xorlw	128
 21948  019722  0F97               	addlw	151
 21949  019724  A0D8               	btfss	status,0,c
 21950  019726  D7B9               	goto	u7560
 21951  019728                     l9146:
 21952                           
 21953                           ;stkvar	_f1 @ sp[(-2)+-4]
 21954  019728  90D8               	bcf	status,0,c
 21955  01972A  0EFD               	movlw	-3
 21956  01972C  32E3               	rrcf	plusw1,f,c
 21957  01972E  0EFC               	movlw	-4
 21958  019730  32E3               	rrcf	plusw1,f,c
 21959  019732  0EFB               	movlw	-5
 21960  019734  32E3               	rrcf	plusw1,f,c
 21961  019736  0EFA               	movlw	-6
 21962  019738  32E3               	rrcf	plusw1,f,c
 21963                           
 21964                           ;stkvar	_exp1 @ sp[(-2)+0]
 21965  01973A  0EFE               	movlw	-2
 21966  01973C  2AE3               	incf	plusw1,f,c
 21967  01973E  B4D8               	btfsc	status,2,c
 21968  019740  D018               	goto	u7620
 21969  019742  D7F2               	goto	l9146
 21970  019744                     l9148:
 21971                           
 21972                           ;stkvar	_exp1 @ sp[(-2)+0]
 21973  019744  0EFE               	movlw	-2
 21974  019746  006F FF8C  F001    	movff	plusw1,btemp
 21975  01974C  0E1F               	movlw	31
 21976  01974E  6401               	cpfsgt	btemp^0,c
 21977  019750  D00C               	goto	l9156
 21978  019752  D7A3               	goto	u7560
 21979  019754                     l9154:
 21980                           
 21981                           ;stkvar	_f1 @ sp[(-2)+-4]
 21982  019754  90D8               	bcf	status,0,c
 21983  019756  0EFA               	movlw	-6
 21984  019758  36E3               	rlcf	plusw1,f,c
 21985  01975A  0EFB               	movlw	-5
 21986  01975C  36E3               	rlcf	plusw1,f,c
 21987  01975E  0EFC               	movlw	-4
 21988  019760  36E3               	rlcf	plusw1,f,c
 21989  019762  0EFD               	movlw	-3
 21990  019764  36E3               	rlcf	plusw1,f,c
 21991                           
 21992                           ;stkvar	_exp1 @ sp[(-2)+0]
 21993  019766  0EFE               	movlw	-2
 21994  019768  06E3               	decf	plusw1,f,c
 21995  01976A                     l9156:
 21996                           
 21997                           ;stkvar	_exp1 @ sp[(-2)+0]
 21998  01976A  0EFE               	movlw	-2
 21999  01976C  50E3               	movf	plusw1,w,c
 22000  01976E  A4D8               	btfss	status,2,c
 22001  019770  D7F1               	goto	l9154
 22002  019772                     u7620:
 22003                           
 22004                           ;stkvar	_sign1 @ sp[(-2)+1]
 22005  019772  0EFF               	movlw	-1
 22006  019774  50E3               	movf	plusw1,w,c
 22007  019776  B4D8               	btfsc	status,2,c
 22008  019778  D011               	goto	u7640
 22009                           
 22010                           ;stkvar	_f1 @ sp[(-2)+-4]
 22011                           ;stkvar	_f1 @ sp[(-2)+-4]
 22012  01977A  0EFA               	movlw	-6
 22013  01977C  6CE3               	negf	plusw1,c
 22014  01977E  0EFB               	movlw	-5
 22015  019780  1EE3               	comf	plusw1,f,c
 22016  019782  0EFC               	movlw	-4
 22017  019784  1EE3               	comf	plusw1,f,c
 22018  019786  0EFD               	movlw	-3
 22019  019788  1EE3               	comf	plusw1,f,c
 22020  01978A  E308               	bnc	u7640
 22021  01978C  0EFB               	movlw	-5
 22022  01978E  2AE3               	incf	plusw1,f,c
 22023  019790  E305               	bnc	u7640
 22024  019792  0EFC               	movlw	-4
 22025  019794  2AE3               	incf	plusw1,f,c
 22026  019796  E302               	bnc	u7640
 22027  019798  0EFD               	movlw	-3
 22028  01979A  2AE3               	incf	plusw1,f,c
 22029  01979C                     u7640:
 22030                           
 22031                           ;stkvar	_f1 @ sp[(-2)+-4]
 22032  01979C  0EFA               	movlw	-6
 22033  01979E  006F FF8C  F001    	movff	plusw1,btemp
 22034  0197A4  0EFB               	movlw	-5
 22035  0197A6  006F FF8C  F002    	movff	plusw1,btemp+1
 22036  0197AC  0EFC               	movlw	-4
 22037  0197AE  006F FF8C  F003    	movff	plusw1,btemp+2
 22038  0197B4  0EFD               	movlw	-3
 22039  0197B6  006F FF8C  F004    	movff	plusw1,btemp+3
 22040  0197BC                     l2844:
 22041                           
 22042                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22043  0197BC  0EFA               	movlw	250
 22044  0197BE  26E1               	addwf	fsr1l,f,c
 22045  0197C0  0EFF               	movlw	255
 22046  0197C2  22E2               	addwfc	fsr1h,f,c
 22047  0197C4  0012               	return		;funcret
 22048  0197C6                     __end_of___fltol:
 22049                           	opt callstack 0
 22050                           
 22051 ;; *************** function ___flneg *****************
 22052 ;; Defined at:
 22053 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 22054 ;; Parameters:    Size  Location     Type
 22055 ;;  f1              4  [STACK] long 
 22056 ;; Auto vars:     Size  Location     Type
 22057 ;;		None
 22058 ;; Return value:  Size  Location     Type
 22059 ;;                  4  [STACK] long 
 22060 ;; Registers used:
 22061 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 22062 ;; Tracked objects:
 22063 ;;		On entry : 0/0
 22064 ;;		On exit  : 0/0
 22065 ;;		Unchanged: 0/0
 22066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22071 ;;Total ram usage:        0 bytes
 22072 ;; Hardware stack levels used:    1
 22073 ;; Hardware stack levels required when called:   15
 22074 ;; This function calls:
 22075 ;;		Nothing
 22076 ;; This function is called by:
 22077 ;;		_calc_bsoc
 22078 ;;		_efgtoa
 22079 ;; This function uses a reentrant model
 22080 ;;
 22081                           
 22082                           	psect	text77
 22083  01C1EE                     __ptext77:
 22084                           	opt callstack 0
 22085  01C1EE                     ___flneg:
 22086                           	opt callstack 0
 22087                           
 22088                           ;stkvar	_f1 @ sp[(0)+-4]
 22089                           
 22090                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22091                           ;incstack = 0
 22092 ;; hardware stack exceeded
 22093  01C1EE  0EFC               	movlw	-4
 22094  01C1F0  50E3               	movf	plusw1,w,c
 22095  01C1F2  E10A               	bnz	u7540
 22096  01C1F4  0EFD               	movlw	-3
 22097  01C1F6  50E3               	movf	plusw1,w,c
 22098  01C1F8  E107               	bnz	u7540
 22099  01C1FA  0EFE               	movlw	-2
 22100  01C1FC  50E3               	movf	plusw1,w,c
 22101  01C1FE  E104               	bnz	u7540
 22102  01C200  0EFF               	movlw	-1
 22103  01C202  50E3               	movf	plusw1,w,c
 22104  01C204  B4D8               	btfsc	status,2,c
 22105  01C206  D002               	goto	l9120
 22106  01C208                     u7540:
 22107                           
 22108                           ;stkvar	_f1 @ sp[(0)+-4]
 22109  01C208  0EFF               	movlw	-1
 22110  01C20A  7EE3               	btg	plusw1,7,c
 22111  01C20C                     l9120:
 22112                           
 22113                           ;stkvar	_f1 @ sp[(0)+-4]
 22114  01C20C  0EFC               	movlw	-4
 22115  01C20E  006F FF8C  F001    	movff	plusw1,btemp
 22116  01C214  0EFD               	movlw	-3
 22117  01C216  006F FF8C  F002    	movff	plusw1,btemp+1
 22118  01C21C  0EFE               	movlw	-2
 22119  01C21E  006F FF8C  F003    	movff	plusw1,btemp+2
 22120  01C224  0EFF               	movlw	-1
 22121  01C226  006F FF8C  F004    	movff	plusw1,btemp+3
 22122                           
 22123                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22124  01C22C  52E5               	movf	postdec1,f,c
 22125  01C22E  52E5               	movf	postdec1,f,c
 22126  01C230  52E5               	movf	postdec1,f,c
 22127  01C232  52E5               	movf	postdec1,f,c
 22128  01C234  0012               	return		;funcret
 22129  01C236                     __end_of___flneg:
 22130                           	opt callstack 0
 22131                           
 22132 ;; *************** function ___fleq *****************
 22133 ;; Defined at:
 22134 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 22135 ;; Parameters:    Size  Location     Type
 22136 ;;  ff1             4  [STACK] long 
 22137 ;;  ff2             4  [STACK] long 
 22138 ;; Auto vars:     Size  Location     Type
 22139 ;;		None
 22140 ;; Return value:  Size  Location     Type
 22141 ;;		None               void
 22142 ;; Registers used:
 22143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 22144 ;; Tracked objects:
 22145 ;;		On entry : 0/0
 22146 ;;		On exit  : 0/0
 22147 ;;		Unchanged: 0/0
 22148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22153 ;;Total ram usage:        0 bytes
 22154 ;; Hardware stack levels used:    1
 22155 ;; Hardware stack levels required when called:   15
 22156 ;; This function calls:
 22157 ;;		Nothing
 22158 ;; This function is called by:
 22159 ;;		_efgtoa
 22160 ;; This function uses a reentrant model
 22161 ;;
 22162                           
 22163                           	psect	text78
 22164  01AD86                     __ptext78:
 22165                           	opt callstack 0
 22166  01AD86                     ___fleq:
 22167                           	opt callstack 0
 22168                           
 22169                           ;stkvar	_ff1 @ sp[(0)+-4]
 22170                           
 22171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22172                           ;incstack = 0
 22173 ;; hardware stack exceeded
 22174  01AD86  50E1               	movf	fsr1l,w,c
 22175  01AD88  0FFC               	addlw	-4
 22176  01AD8A  6ED9               	movwf	fsr2l,c
 22177  01AD8C  50E2               	movf	fsr1h,w,c
 22178  01AD8E  6EDA               	movwf	fsr2h,c
 22179  01AD90  0EFF               	movlw	255
 22180  01AD92  22DA               	addwfc	fsr2h,f,c
 22181  01AD94  0E00               	movlw	0
 22182  01AD96  14DE               	andwf	postinc2,w,c
 22183  01AD98  6E09               	movwf	(btemp+8)^0,c
 22184  01AD9A  0E00               	movlw	0
 22185  01AD9C  14DE               	andwf	postinc2,w,c
 22186  01AD9E  6E0A               	movwf	(btemp+9)^0,c
 22187  01ADA0  0E80               	movlw	128
 22188  01ADA2  14DE               	andwf	postinc2,w,c
 22189  01ADA4  6E0B               	movwf	(btemp+10)^0,c
 22190  01ADA6  0E7F               	movlw	127
 22191  01ADA8  14DE               	andwf	postinc2,w,c
 22192  01ADAA  6E0C               	movwf	(btemp+11)^0,c
 22193  01ADAC  5009               	movf	(btemp+8)^0,w,c
 22194  01ADAE  100A               	iorwf	(btemp+9)^0,w,c
 22195  01ADB0  100B               	iorwf	(btemp+10)^0,w,c
 22196  01ADB2  100C               	iorwf	(btemp+11)^0,w,c
 22197  01ADB4  A4D8               	btfss	status,2,c
 22198  01ADB6  D008               	goto	l9078
 22199                           
 22200                           ;stkvar	_ff1 @ sp[(0)+-4]
 22201  01ADB8  0EFC               	movlw	-4
 22202  01ADBA  6AE3               	clrf	plusw1,c
 22203  01ADBC  0EFD               	movlw	-3
 22204  01ADBE  6AE3               	clrf	plusw1,c
 22205  01ADC0  0EFE               	movlw	-2
 22206  01ADC2  6AE3               	clrf	plusw1,c
 22207  01ADC4  0EFF               	movlw	-1
 22208  01ADC6  6AE3               	clrf	plusw1,c
 22209  01ADC8                     l9078:
 22210                           
 22211                           ;stkvar	_ff2 @ sp[(0)+-8]
 22212  01ADC8  50E1               	movf	fsr1l,w,c
 22213  01ADCA  0FF8               	addlw	-8
 22214  01ADCC  6ED9               	movwf	fsr2l,c
 22215  01ADCE  50E2               	movf	fsr1h,w,c
 22216  01ADD0  6EDA               	movwf	fsr2h,c
 22217  01ADD2  0EFF               	movlw	255
 22218  01ADD4  22DA               	addwfc	fsr2h,f,c
 22219  01ADD6  0E00               	movlw	0
 22220  01ADD8  14DE               	andwf	postinc2,w,c
 22221  01ADDA  6E09               	movwf	(btemp+8)^0,c
 22222  01ADDC  0E00               	movlw	0
 22223  01ADDE  14DE               	andwf	postinc2,w,c
 22224  01ADE0  6E0A               	movwf	(btemp+9)^0,c
 22225  01ADE2  0E80               	movlw	128
 22226  01ADE4  14DE               	andwf	postinc2,w,c
 22227  01ADE6  6E0B               	movwf	(btemp+10)^0,c
 22228  01ADE8  0E7F               	movlw	127
 22229  01ADEA  14DE               	andwf	postinc2,w,c
 22230  01ADEC  6E0C               	movwf	(btemp+11)^0,c
 22231  01ADEE  5009               	movf	(btemp+8)^0,w,c
 22232  01ADF0  100A               	iorwf	(btemp+9)^0,w,c
 22233  01ADF2  100B               	iorwf	(btemp+10)^0,w,c
 22234  01ADF4  100C               	iorwf	(btemp+11)^0,w,c
 22235  01ADF6  A4D8               	btfss	status,2,c
 22236  01ADF8  D008               	goto	l9082
 22237                           
 22238                           ;stkvar	_ff2 @ sp[(0)+-8]
 22239  01ADFA  0EF8               	movlw	-8
 22240  01ADFC  6AE3               	clrf	plusw1,c
 22241  01ADFE  0EF9               	movlw	-7
 22242  01AE00  6AE3               	clrf	plusw1,c
 22243  01AE02  0EFA               	movlw	-6
 22244  01AE04  6AE3               	clrf	plusw1,c
 22245  01AE06  0EFB               	movlw	-5
 22246  01AE08  6AE3               	clrf	plusw1,c
 22247  01AE0A                     l9082:
 22248                           
 22249                           ;stkvar	_ff2 @ sp[(0)+-8]
 22250                           ;stkvar	_ff1 @ sp[(0)+-4]
 22251  01AE0A  50E1               	movf	fsr1l,w,c
 22252  01AE0C  0FFC               	addlw	-4
 22253  01AE0E  6ED9               	movwf	fsr2l,c
 22254  01AE10  50E2               	movf	fsr1h,w,c
 22255  01AE12  6EDA               	movwf	fsr2h,c
 22256  01AE14  0EFF               	movlw	255
 22257  01AE16  22DA               	addwfc	fsr2h,f,c
 22258  01AE18  0EF8               	movlw	-8
 22259  01AE1A  50E3               	movf	plusw1,w,c
 22260  01AE1C  18DE               	xorwf	postinc2,w,c
 22261  01AE1E  E10D               	bnz	u7480
 22262  01AE20  0EF9               	movlw	-7
 22263  01AE22  50E3               	movf	plusw1,w,c
 22264  01AE24  18DE               	xorwf	postinc2,w,c
 22265  01AE26  E109               	bnz	u7480
 22266  01AE28  0EFA               	movlw	-6
 22267  01AE2A  50E3               	movf	plusw1,w,c
 22268  01AE2C  18DE               	xorwf	postinc2,w,c
 22269  01AE2E  E105               	bnz	u7480
 22270  01AE30  0EFB               	movlw	-5
 22271  01AE32  50E3               	movf	plusw1,w,c
 22272  01AE34  18DE               	xorwf	postinc2,w,c
 22273  01AE36  B4D8               	btfsc	status,2,c
 22274  01AE38  D002               	goto	l9086
 22275  01AE3A                     u7480:
 22276  01AE3A  9001               	bcf	btemp& (0+255),0,c
 22277  01AE3C  D001               	goto	l2806
 22278  01AE3E                     l9086:
 22279  01AE3E  8001               	bsf	btemp& (0+255),0,c
 22280  01AE40                     l2806:
 22281                           
 22282                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 22283  01AE40  0EF8               	movlw	248
 22284  01AE42  26E1               	addwf	fsr1l,f,c
 22285  01AE44  0EFF               	movlw	255
 22286  01AE46  22E2               	addwfc	fsr1h,f,c
 22287  01AE48  0012               	return		;funcret
 22288  01AE4A                     __end_of___fleq:
 22289                           	opt callstack 0
 22290                           
 22291 ;; *************** function ___awmod *****************
 22292 ;; Defined at:
 22293 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 22294 ;; Parameters:    Size  Location     Type
 22295 ;;  dividend        2  [STACK] int 
 22296 ;;  divisor         2  [STACK] int 
 22297 ;; Auto vars:     Size  Location     Type
 22298 ;;  sign            1  [STACK] unsigned char 
 22299 ;;  counter         1  [STACK] unsigned char 
 22300 ;; Return value:  Size  Location     Type
 22301 ;;                  2  [STACK] int 
 22302 ;; Registers used:
 22303 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 22304 ;; Tracked objects:
 22305 ;;		On entry : 0/0
 22306 ;;		On exit  : 0/0
 22307 ;;		Unchanged: 0/0
 22308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22313 ;;Total ram usage:        0 bytes
 22314 ;; Hardware stack levels used:    1
 22315 ;; Hardware stack levels required when called:   15
 22316 ;; This function calls:
 22317 ;;		Nothing
 22318 ;; This function is called by:
 22319 ;;		_efgtoa
 22320 ;; This function uses a reentrant model
 22321 ;;
 22322                           
 22323                           	psect	text79
 22324  01A2FC                     __ptext79:
 22325                           	opt callstack 0
 22326  01A2FC                     ___awmod:
 22327                           	opt callstack 0
 22328                           
 22329                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22330  01A2FC  52E6               	movf	postinc1,f,c
 22331  01A2FE  52E6               	movf	postinc1,f,c
 22332                           
 22333                           ;stkvar	_sign @ sp[(-2)+0]
 22334                           
 22335                           ;incstack = 0
 22336 ;; hardware stack exceeded
 22337  01A300  0EFE               	movlw	-2
 22338  01A302  6AE3               	clrf	plusw1,c
 22339                           
 22340                           ;stkvar	_dividend @ sp[(-2)+-2]
 22341  01A304  0EFD               	movlw	-3
 22342  01A306  AEE3               	btfss	plusw1,7,c
 22343  01A308  D009               	goto	l9044
 22344                           
 22345                           ;stkvar	_dividend @ sp[(-2)+-2]
 22346                           ;stkvar	_dividend @ sp[(-2)+-2]
 22347  01A30A  0EFC               	movlw	-4
 22348  01A30C  6CE3               	negf	plusw1,c
 22349  01A30E  0EFD               	movlw	-3
 22350  01A310  1EE3               	comf	plusw1,f,c
 22351  01A312  B0D8               	btfsc	status,0,c
 22352  01A314  2AE3               	incf	plusw1,f,c
 22353                           
 22354                           ;stkvar	_sign @ sp[(-2)+0]
 22355  01A316  0EFE               	movlw	-2
 22356  01A318  6AE3               	clrf	plusw1,c
 22357  01A31A  2AE3               	incf	plusw1,f,c
 22358  01A31C                     l9044:
 22359                           
 22360                           ;stkvar	_divisor @ sp[(-2)+-4]
 22361  01A31C  0EFB               	movlw	-5
 22362  01A31E  AEE3               	btfss	plusw1,7,c
 22363  01A320  D006               	goto	l9048
 22364                           
 22365                           ;stkvar	_divisor @ sp[(-2)+-4]
 22366                           ;stkvar	_divisor @ sp[(-2)+-4]
 22367  01A322  0EFA               	movlw	-6
 22368  01A324  6CE3               	negf	plusw1,c
 22369  01A326  0EFB               	movlw	-5
 22370  01A328  1EE3               	comf	plusw1,f,c
 22371  01A32A  B0D8               	btfsc	status,0,c
 22372  01A32C  2AE3               	incf	plusw1,f,c
 22373  01A32E                     l9048:
 22374                           
 22375                           ;stkvar	_divisor @ sp[(-2)+-4]
 22376  01A32E  0EFA               	movlw	-6
 22377  01A330  006F FF8C  F001    	movff	plusw1,btemp
 22378  01A336  0EFB               	movlw	-5
 22379  01A338  50E3               	movf	plusw1,w,c
 22380  01A33A  1001               	iorwf	btemp^0,w,c
 22381  01A33C  B4D8               	btfsc	status,2,c
 22382  01A33E  D053               	goto	u7440
 22383                           
 22384                           ;stkvar	_counter @ sp[(-2)+1]
 22385  01A340  0EFF               	movlw	-1
 22386  01A342  6AE3               	clrf	plusw1,c
 22387  01A344  D012               	goto	L26
 22388  01A346                     l9052:
 22389                           
 22390                           ;stkvar	_divisor @ sp[(-2)+-4]
 22391  01A346  0EFA               	movlw	-6
 22392  01A348  50E3               	movf	plusw1,w,c
 22393  01A34A  90D8               	bcf	status,0,c
 22394  01A34C  34E8               	rlcf	wreg,w,c
 22395  01A34E  6E01               	movwf	btemp^0,c
 22396  01A350  0EFA               	movlw	-6
 22397  01A352  0060  F007  FFE3   	movff	btemp,plusw1
 22398  01A358  0EFB               	movlw	-5
 22399  01A35A  50E3               	movf	plusw1,w,c
 22400  01A35C  34E8               	rlcf	wreg,w,c
 22401  01A35E  6E01               	movwf	btemp^0,c
 22402  01A360  0EFB               	movlw	-5
 22403  01A362  0060  F007  FFE3   	movff	btemp,plusw1
 22404                           
 22405                           ;stkvar	_counter @ sp[(-2)+1]
 22406  01A368  0EFF               	movlw	-1
 22407  01A36A                     L26:
 22408  01A36A  2AE3               	incf	plusw1,f,c
 22409                           
 22410                           ;stkvar	_divisor @ sp[(-2)+-4]
 22411  01A36C  0EFB               	movlw	-5
 22412  01A36E  AEE3               	btfss	plusw1,7,c
 22413  01A370  D7EA               	goto	l9052
 22414  01A372                     u7420:
 22415                           
 22416                           ;stkvar	_divisor @ sp[(-2)+-4]
 22417  01A372  0EFA               	movlw	-6
 22418  01A374  006F FF8C  F00B    	movff	plusw1,btemp+10
 22419  01A37A  0EFB               	movlw	-5
 22420  01A37C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22421                           
 22422                           ;stkvar	_dividend @ sp[(-2)+-2]
 22423  01A382  0EFC               	movlw	-4
 22424  01A384  006F FF8C  F009    	movff	plusw1,btemp+8
 22425  01A38A  0EFD               	movlw	-3
 22426  01A38C  006F FF8C  F00A    	movff	plusw1,btemp+9
 22427  01A392  500B               	movf	(btemp+10)^0,w,c
 22428  01A394  5C09               	subwf	(btemp+8)^0,w,c
 22429  01A396  500C               	movf	(btemp+11)^0,w,c
 22430  01A398  580A               	subwfb	(btemp+9)^0,w,c
 22431  01A39A  A0D8               	btfss	status,0,c
 22432  01A39C  D014               	goto	l9062
 22433                           
 22434                           ;stkvar	_divisor @ sp[(-2)+-4]
 22435                           ;stkvar	_dividend @ sp[(-2)+-2]
 22436  01A39E  0EFC               	movlw	-4
 22437  01A3A0  50E3               	movf	plusw1,w,c
 22438  01A3A2  6E01               	movwf	btemp^0,c
 22439  01A3A4  0EFA               	movlw	-6
 22440  01A3A6  50E3               	movf	plusw1,w,c
 22441  01A3A8  5E01               	subwf	btemp^0,f,c
 22442  01A3AA  0EFC               	movlw	-4
 22443  01A3AC  0060  F007  FFE3   	movff	btemp,plusw1
 22444  01A3B2  0EFD               	movlw	-3
 22445  01A3B4  50E3               	movf	plusw1,w,c
 22446  01A3B6  6E01               	movwf	btemp^0,c
 22447  01A3B8  0EFB               	movlw	-5
 22448  01A3BA  50E3               	movf	plusw1,w,c
 22449  01A3BC  5A01               	subwfb	btemp^0,f,c
 22450  01A3BE  0EFD               	movlw	-3
 22451  01A3C0  0060  F007  FFE3   	movff	btemp,plusw1
 22452  01A3C6                     l9062:
 22453                           
 22454                           ;stkvar	_divisor @ sp[(-2)+-4]
 22455  01A3C6  90D8               	bcf	status,0,c
 22456  01A3C8  0EFB               	movlw	-5
 22457  01A3CA  32E3               	rrcf	plusw1,f,c
 22458  01A3CC  0EFA               	movlw	-6
 22459  01A3CE  32E3               	rrcf	plusw1,f,c
 22460                           
 22461                           ;stkvar	_counter @ sp[(-2)+1]
 22462  01A3D0  0EFF               	movlw	-1
 22463  01A3D2  50E3               	movf	plusw1,w,c
 22464  01A3D4  6E01               	movwf	btemp^0,c
 22465  01A3D6  0E01               	movlw	1
 22466  01A3D8  5E01               	subwf	btemp^0,f,c
 22467  01A3DA  0EFF               	movlw	-1
 22468  01A3DC  0060  F007  FFE3   	movff	btemp,plusw1
 22469  01A3E2  A4D8               	btfss	status,2,c
 22470  01A3E4  D7C6               	goto	u7420
 22471  01A3E6                     u7440:
 22472                           
 22473                           ;stkvar	_sign @ sp[(-2)+0]
 22474  01A3E6  0EFE               	movlw	-2
 22475  01A3E8  50E3               	movf	plusw1,w,c
 22476  01A3EA  B4D8               	btfsc	status,2,c
 22477  01A3EC  D006               	goto	l9070
 22478                           
 22479                           ;stkvar	_dividend @ sp[(-2)+-2]
 22480                           ;stkvar	_dividend @ sp[(-2)+-2]
 22481  01A3EE  0EFC               	movlw	-4
 22482  01A3F0  6CE3               	negf	plusw1,c
 22483  01A3F2  0EFD               	movlw	-3
 22484  01A3F4  1EE3               	comf	plusw1,f,c
 22485  01A3F6  B0D8               	btfsc	status,0,c
 22486  01A3F8  2AE3               	incf	plusw1,f,c
 22487  01A3FA                     l9070:
 22488                           
 22489                           ;stkvar	_dividend @ sp[(-2)+-2]
 22490  01A3FA  0EFC               	movlw	-4
 22491  01A3FC  006F FF8C  F001    	movff	plusw1,btemp
 22492  01A402  0EFD               	movlw	-3
 22493  01A404  006F FF8C  F002    	movff	plusw1,btemp+1
 22494                           
 22495                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22496  01A40A  0EFA               	movlw	250
 22497  01A40C  26E1               	addwf	fsr1l,f,c
 22498  01A40E  0EFF               	movlw	255
 22499  01A410  22E2               	addwfc	fsr1h,f,c
 22500  01A412  0012               	return		;funcret
 22501  01A414                     __end_of___awmod:
 22502                           	opt callstack 0
 22503                           
 22504 ;; *************** function ___awdiv *****************
 22505 ;; Defined at:
 22506 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 22507 ;; Parameters:    Size  Location     Type
 22508 ;;  dividend        2  [STACK] int 
 22509 ;;  divisor         2  [STACK] int 
 22510 ;; Auto vars:     Size  Location     Type
 22511 ;;  quotient        2  [STACK] int 
 22512 ;;  sign            1  [STACK] unsigned char 
 22513 ;;  counter         1  [STACK] unsigned char 
 22514 ;; Return value:  Size  Location     Type
 22515 ;;                  2  [STACK] int 
 22516 ;; Registers used:
 22517 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 22518 ;; Tracked objects:
 22519 ;;		On entry : 0/0
 22520 ;;		On exit  : 0/0
 22521 ;;		Unchanged: 0/0
 22522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22527 ;;Total ram usage:        0 bytes
 22528 ;; Hardware stack levels used:    1
 22529 ;; Hardware stack levels required when called:   15
 22530 ;; This function calls:
 22531 ;;		Nothing
 22532 ;; This function is called by:
 22533 ;;		_efgtoa
 22534 ;; This function uses a reentrant model
 22535 ;;
 22536                           
 22537                           	psect	text80
 22538  019A8A                     __ptext80:
 22539                           	opt callstack 0
 22540  019A8A                     ___awdiv:
 22541                           	opt callstack 0
 22542                           
 22543                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22544  019A8A  52E6               	movf	postinc1,f,c
 22545  019A8C  52E6               	movf	postinc1,f,c
 22546  019A8E  52E6               	movf	postinc1,f,c
 22547  019A90  52E6               	movf	postinc1,f,c
 22548                           
 22549                           ;stkvar	_sign @ sp[(-4)+2]
 22550                           
 22551                           ;incstack = 0
 22552 ;; hardware stack exceeded
 22553  019A92  0EFE               	movlw	-2
 22554  019A94  6AE3               	clrf	plusw1,c
 22555                           
 22556                           ;stkvar	_divisor @ sp[(-4)+-4]
 22557  019A96  0EF9               	movlw	-7
 22558  019A98  AEE3               	btfss	plusw1,7,c
 22559  019A9A  D009               	goto	l8998
 22560                           
 22561                           ;stkvar	_divisor @ sp[(-4)+-4]
 22562                           ;stkvar	_divisor @ sp[(-4)+-4]
 22563  019A9C  0EF8               	movlw	-8
 22564  019A9E  6CE3               	negf	plusw1,c
 22565  019AA0  0EF9               	movlw	-7
 22566  019AA2  1EE3               	comf	plusw1,f,c
 22567  019AA4  B0D8               	btfsc	status,0,c
 22568  019AA6  2AE3               	incf	plusw1,f,c
 22569                           
 22570                           ;stkvar	_sign @ sp[(-4)+2]
 22571  019AA8  0EFE               	movlw	-2
 22572  019AAA  6AE3               	clrf	plusw1,c
 22573  019AAC  2AE3               	incf	plusw1,f,c
 22574  019AAE                     l8998:
 22575                           
 22576                           ;stkvar	_dividend @ sp[(-4)+-2]
 22577  019AAE  0EFB               	movlw	-5
 22578  019AB0  AEE3               	btfss	plusw1,7,c
 22579  019AB2  D008               	goto	l9004
 22580                           
 22581                           ;stkvar	_dividend @ sp[(-4)+-2]
 22582                           ;stkvar	_dividend @ sp[(-4)+-2]
 22583  019AB4  0EFA               	movlw	-6
 22584  019AB6  6CE3               	negf	plusw1,c
 22585  019AB8  0EFB               	movlw	-5
 22586  019ABA  1EE3               	comf	plusw1,f,c
 22587  019ABC  B0D8               	btfsc	status,0,c
 22588  019ABE  2AE3               	incf	plusw1,f,c
 22589                           
 22590                           ;stkvar	_sign @ sp[(-4)+2]
 22591  019AC0  0EFE               	movlw	-2
 22592  019AC2  70E3               	btg	plusw1,0,c
 22593  019AC4                     l9004:
 22594                           
 22595                           ;stkvar	_quotient @ sp[(-4)+0]
 22596  019AC4  0EFC               	movlw	-4
 22597  019AC6  6AE3               	clrf	plusw1,c
 22598  019AC8  0EFD               	movlw	-3
 22599  019ACA  6AE3               	clrf	plusw1,c
 22600                           
 22601                           ;stkvar	_divisor @ sp[(-4)+-4]
 22602  019ACC  0EF8               	movlw	-8
 22603  019ACE  006F FF8C  F001    	movff	plusw1,btemp
 22604  019AD4  0EF9               	movlw	-7
 22605  019AD6  50E3               	movf	plusw1,w,c
 22606  019AD8  1001               	iorwf	btemp^0,w,c
 22607  019ADA  B4D8               	btfsc	status,2,c
 22608  019ADC  D066               	goto	u7370
 22609                           
 22610                           ;stkvar	_counter @ sp[(-4)+3]
 22611  019ADE  0EFF               	movlw	-1
 22612  019AE0  6AE3               	clrf	plusw1,c
 22613  019AE2  D012               	goto	L27
 22614  019AE4                     l9010:
 22615                           
 22616                           ;stkvar	_divisor @ sp[(-4)+-4]
 22617  019AE4  0EF8               	movlw	-8
 22618  019AE6  50E3               	movf	plusw1,w,c
 22619  019AE8  90D8               	bcf	status,0,c
 22620  019AEA  34E8               	rlcf	wreg,w,c
 22621  019AEC  6E01               	movwf	btemp^0,c
 22622  019AEE  0EF8               	movlw	-8
 22623  019AF0  0060  F007  FFE3   	movff	btemp,plusw1
 22624  019AF6  0EF9               	movlw	-7
 22625  019AF8  50E3               	movf	plusw1,w,c
 22626  019AFA  34E8               	rlcf	wreg,w,c
 22627  019AFC  6E01               	movwf	btemp^0,c
 22628  019AFE  0EF9               	movlw	-7
 22629  019B00  0060  F007  FFE3   	movff	btemp,plusw1
 22630                           
 22631                           ;stkvar	_counter @ sp[(-4)+3]
 22632  019B06  0EFF               	movlw	-1
 22633  019B08                     L27:
 22634  019B08  2AE3               	incf	plusw1,f,c
 22635                           
 22636                           ;stkvar	_divisor @ sp[(-4)+-4]
 22637  019B0A  0EF9               	movlw	-7
 22638  019B0C  AEE3               	btfss	plusw1,7,c
 22639  019B0E  D7EA               	goto	l9010
 22640  019B10                     u7350:
 22641                           
 22642                           ;stkvar	_quotient @ sp[(-4)+0]
 22643  019B10  0EFC               	movlw	-4
 22644  019B12  50E3               	movf	plusw1,w,c
 22645  019B14  90D8               	bcf	status,0,c
 22646  019B16  34E8               	rlcf	wreg,w,c
 22647  019B18  6E01               	movwf	btemp^0,c
 22648  019B1A  0EFC               	movlw	-4
 22649  019B1C  0060  F007  FFE3   	movff	btemp,plusw1
 22650  019B22  0EFD               	movlw	-3
 22651  019B24  50E3               	movf	plusw1,w,c
 22652  019B26  34E8               	rlcf	wreg,w,c
 22653  019B28  6E01               	movwf	btemp^0,c
 22654  019B2A  0EFD               	movlw	-3
 22655  019B2C  0060  F007  FFE3   	movff	btemp,plusw1
 22656                           
 22657                           ;stkvar	_divisor @ sp[(-4)+-4]
 22658  019B32  0EF8               	movlw	-8
 22659  019B34  006F FF8C  F00B    	movff	plusw1,btemp+10
 22660  019B3A  0EF9               	movlw	-7
 22661  019B3C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22662                           
 22663                           ;stkvar	_dividend @ sp[(-4)+-2]
 22664  019B42  0EFA               	movlw	-6
 22665  019B44  006F FF8C  F009    	movff	plusw1,btemp+8
 22666  019B4A  0EFB               	movlw	-5
 22667  019B4C  006F FF8C  F00A    	movff	plusw1,btemp+9
 22668  019B52  500B               	movf	(btemp+10)^0,w,c
 22669  019B54  5C09               	subwf	(btemp+8)^0,w,c
 22670  019B56  500C               	movf	(btemp+11)^0,w,c
 22671  019B58  580A               	subwfb	(btemp+9)^0,w,c
 22672  019B5A  A0D8               	btfss	status,0,c
 22673  019B5C  D016               	goto	l9024
 22674                           
 22675                           ;stkvar	_divisor @ sp[(-4)+-4]
 22676                           ;stkvar	_dividend @ sp[(-4)+-2]
 22677  019B5E  0EFA               	movlw	-6
 22678  019B60  50E3               	movf	plusw1,w,c
 22679  019B62  6E01               	movwf	btemp^0,c
 22680  019B64  0EF8               	movlw	-8
 22681  019B66  50E3               	movf	plusw1,w,c
 22682  019B68  5E01               	subwf	btemp^0,f,c
 22683  019B6A  0EFA               	movlw	-6
 22684  019B6C  0060  F007  FFE3   	movff	btemp,plusw1
 22685  019B72  0EFB               	movlw	-5
 22686  019B74  50E3               	movf	plusw1,w,c
 22687  019B76  6E01               	movwf	btemp^0,c
 22688  019B78  0EF9               	movlw	-7
 22689  019B7A  50E3               	movf	plusw1,w,c
 22690  019B7C  5A01               	subwfb	btemp^0,f,c
 22691  019B7E  0EFB               	movlw	-5
 22692  019B80  0060  F007  FFE3   	movff	btemp,plusw1
 22693                           
 22694                           ;stkvar	_quotient @ sp[(-4)+0]
 22695  019B86  0EFC               	movlw	-4
 22696  019B88  80E3               	bsf	plusw1,0,c
 22697  019B8A                     l9024:
 22698                           
 22699                           ;stkvar	_divisor @ sp[(-4)+-4]
 22700  019B8A  90D8               	bcf	status,0,c
 22701  019B8C  0EF9               	movlw	-7
 22702  019B8E  32E3               	rrcf	plusw1,f,c
 22703  019B90  0EF8               	movlw	-8
 22704  019B92  32E3               	rrcf	plusw1,f,c
 22705                           
 22706                           ;stkvar	_counter @ sp[(-4)+3]
 22707  019B94  0EFF               	movlw	-1
 22708  019B96  50E3               	movf	plusw1,w,c
 22709  019B98  6E01               	movwf	btemp^0,c
 22710  019B9A  0E01               	movlw	1
 22711  019B9C  5E01               	subwf	btemp^0,f,c
 22712  019B9E  0EFF               	movlw	-1
 22713  019BA0  0060  F007  FFE3   	movff	btemp,plusw1
 22714  019BA6  A4D8               	btfss	status,2,c
 22715  019BA8  D7B3               	goto	u7350
 22716  019BAA                     u7370:
 22717                           
 22718                           ;stkvar	_sign @ sp[(-4)+2]
 22719  019BAA  0EFE               	movlw	-2
 22720  019BAC  50E3               	movf	plusw1,w,c
 22721  019BAE  B4D8               	btfsc	status,2,c
 22722  019BB0  D006               	goto	l9032
 22723                           
 22724                           ;stkvar	_quotient @ sp[(-4)+0]
 22725                           ;stkvar	_quotient @ sp[(-4)+0]
 22726  019BB2  0EFC               	movlw	-4
 22727  019BB4  6CE3               	negf	plusw1,c
 22728  019BB6  0EFD               	movlw	-3
 22729  019BB8  1EE3               	comf	plusw1,f,c
 22730  019BBA  B0D8               	btfsc	status,0,c
 22731  019BBC  2AE3               	incf	plusw1,f,c
 22732  019BBE                     l9032:
 22733                           
 22734                           ;stkvar	_quotient @ sp[(-4)+0]
 22735  019BBE  0EFC               	movlw	-4
 22736  019BC0  006F FF8C  F001    	movff	plusw1,btemp
 22737  019BC6  0EFD               	movlw	-3
 22738  019BC8  006F FF8C  F002    	movff	plusw1,btemp+1
 22739                           
 22740                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 22741  019BCE  0EF8               	movlw	248
 22742  019BD0  26E1               	addwf	fsr1l,f,c
 22743  019BD2  0EFF               	movlw	255
 22744  019BD4  22E2               	addwfc	fsr1h,f,c
 22745  019BD6  0012               	return		;funcret
 22746  019BD8                     __end_of___awdiv:
 22747                           	opt callstack 0
 22748                           
 22749 ;; *************** function _dtoa *****************
 22750 ;; Defined at:
 22751 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 22752 ;; Parameters:    Size  Location     Type
 22753 ;;  fp              2  [STACK] PTR struct _IO_FILE
 22754 ;;		 -> f(6), NULL(0), 
 22755 ;;  d               8  [STACK] long long 
 22756 ;; Auto vars:     Size  Location     Type
 22757 ;;  n               8  [STACK] long long 
 22758 ;;  i               2  [STACK] int 
 22759 ;;  s               2  [STACK] int 
 22760 ;;  w               2  [STACK] int 
 22761 ;;  p               2  [STACK] int 
 22762 ;; Return value:  Size  Location     Type
 22763 ;;                  2  [STACK] int 
 22764 ;; Registers used:
 22765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 22766 ;; Tracked objects:
 22767 ;;		On entry : 0/0
 22768 ;;		On exit  : 0/0
 22769 ;;		Unchanged: 0/0
 22770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22775 ;;Total ram usage:        0 bytes
 22776 ;; Hardware stack levels used:    1
 22777 ;; Hardware stack levels required when called:   20
 22778 ;; This function calls:
 22779 ;;		___aodiv
 22780 ;;		___aomod
 22781 ;;		_abs
 22782 ;;		_pad
 22783 ;; This function is called by:
 22784 ;;		_vfpfcnvrt
 22785 ;; This function uses a reentrant model
 22786 ;;
 22787                           
 22788                           	psect	text81
 22789  015DB0                     __ptext81:
 22790                           	opt callstack 0
 22791  015DB0                     _dtoa:
 22792                           	opt callstack 0
 22793                           
 22794                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 22795  015DB0  0E12               	movlw	18
 22796  015DB2  26E1               	addwf	fsr1l,f,c
 22797  015DB4  0E00               	movlw	0
 22798  015DB6  22E2               	addwfc	fsr1h,f,c
 22799                           
 22800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 22801                           ;stkvar	_d @ sp[(-18)+-10]
 22802                           
 22803                           ;incstack = 0
 22804 ;; hardware stack exceeded
 22805  015DB8  0EE4               	movlw	228
 22806  015DBA  24E1               	addwf	fsr1l,w,c
 22807  015DBC  6ED9               	movwf	fsr2l,c
 22808  015DBE  0EFF               	movlw	255
 22809  015DC0  20E2               	addwfc	fsr1h,w,c
 22810  015DC2  6EDA               	movwf	fsr2h,c
 22811                           
 22812                           ;stkvar	_n @ sp[(-18)+2]
 22813  015DC4  0E08               	movlw	8
 22814  015DC6  6E01               	movwf	btemp^0,c
 22815  015DC8  0EF0               	movlw	-16
 22816  015DCA                     us1158999:
 22817  015DCA  006F FF7B FFE3     	movff	postinc2,plusw1
 22818  015DD0  28E8               	incf	wreg,w,c
 22819  015DD2  2E01               	decfsz	btemp^0,f,c
 22820  015DD4  D7FA               	bra	us1158999
 22821                           
 22822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 22823                           ;stkvar	_n @ sp[(-18)+2]
 22824  015DD6  0EF7               	movlw	-9
 22825  015DD8  AEE3               	btfss	plusw1,7,c
 22826  015DDA  D002               	goto	u11590
 22827  015DDC  0E01               	movlw	1
 22828  015DDE  D001               	goto	u11600
 22829  015DE0                     u11590:
 22830  015DE0  0E00               	movlw	0
 22831  015DE2                     u11600:
 22832  015DE2  6E0B               	movwf	(btemp+10)^0,c
 22833  015DE4  6A0C               	clrf	(btemp+11)^0,c
 22834                           
 22835                           ;stkvar	_s @ sp[(-18)+12]
 22836  015DE6  0EFA               	movlw	-6
 22837  015DE8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22838  015DEE  0EFB               	movlw	-5
 22839  015DF0  0060  F033  FFE3   	movff	btemp+11,plusw1
 22840                           
 22841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 22842                           ;stkvar	_s @ sp[(-18)+12]
 22843  015DF6  0EFA               	movlw	-6
 22844  015DF8  006F FF8C  F001    	movff	plusw1,btemp
 22845  015DFE  0EFB               	movlw	-5
 22846  015E00  50E3               	movf	plusw1,w,c
 22847  015E02  1001               	iorwf	btemp^0,w,c
 22848  015E04  B4D8               	btfsc	status,2,c
 22849  015E06  D025               	goto	u11620
 22850                           
 22851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 22852                           ;stkvar	_n @ sp[(-18)+2]
 22853                           ;stkvar	_n @ sp[(-18)+2]
 22854  015E08  0EF0               	movlw	-16
 22855  015E0A  6CE3               	negf	plusw1,c
 22856  015E0C  0EF1               	movlw	-15
 22857  015E0E  1EE3               	comf	plusw1,f,c
 22858  015E10  0EF2               	movlw	-14
 22859  015E12  1EE3               	comf	plusw1,f,c
 22860  015E14  0EF3               	movlw	-13
 22861  015E16  1EE3               	comf	plusw1,f,c
 22862  015E18  0EF4               	movlw	-12
 22863  015E1A  1EE3               	comf	plusw1,f,c
 22864  015E1C  0EF5               	movlw	-11
 22865  015E1E  1EE3               	comf	plusw1,f,c
 22866  015E20  0EF6               	movlw	-10
 22867  015E22  1EE3               	comf	plusw1,f,c
 22868  015E24  0EF7               	movlw	-9
 22869  015E26  1EE3               	comf	plusw1,f,c
 22870  015E28  E314               	bnc	u11620
 22871  015E2A  0EF1               	movlw	-15
 22872  015E2C  2AE3               	incf	plusw1,f,c
 22873  015E2E  E311               	bnc	u11620
 22874  015E30  0EF2               	movlw	-14
 22875  015E32  2AE3               	incf	plusw1,f,c
 22876  015E34  E30E               	bnc	u11620
 22877  015E36  0EF3               	movlw	-13
 22878  015E38  2AE3               	incf	plusw1,f,c
 22879  015E3A  E30B               	bnc	u11620
 22880  015E3C  0EF4               	movlw	-12
 22881  015E3E  2AE3               	incf	plusw1,f,c
 22882  015E40  E308               	bnc	u11620
 22883  015E42  0EF5               	movlw	-11
 22884  015E44  2AE3               	incf	plusw1,f,c
 22885  015E46  E305               	bnc	u11620
 22886  015E48  0EF6               	movlw	-10
 22887  015E4A  2AE3               	incf	plusw1,f,c
 22888  015E4C  E302               	bnc	u11620
 22889  015E4E  0EF7               	movlw	-9
 22890  015E50  2AE3               	incf	plusw1,f,c
 22891  015E52                     u11620:
 22892                           
 22893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 22894  015E52  AE3D               	btfss	(_prec+1)^0,7,c
 22895                           
 22896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 22897  015E54  923E               	bcf	_flags^0,1,c
 22898                           
 22899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 22900  015E56  BE3D               	btfsc	(_prec+1)^0,7,c
 22901  015E58  D005               	goto	u11640
 22902  015E5A  503D               	movf	(_prec+1)^0,w,c
 22903  015E5C  E110               	bnz	l12756
 22904  015E5E  043C               	decf	_prec^0,w,c
 22905  015E60  B0D8               	btfsc	status,0,c
 22906  015E62  D00D               	goto	l12756
 22907  015E64                     u11640:
 22908  015E64  0E01               	movlw	1
 22909  015E66  6E0B               	movwf	(btemp+10)^0,c
 22910  015E68  0E00               	movlw	0
 22911  015E6A  6E0C               	movwf	(btemp+11)^0,c
 22912                           
 22913                           ;stkvar	_p @ sp[(-18)+16]
 22914  015E6C  0EFE               	movlw	-2
 22915  015E6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22916  015E74  0EFF               	movlw	-1
 22917  015E76  0060  F033  FFE3   	movff	btemp+11,plusw1
 22918  015E7C  D008               	goto	l2310
 22919  015E7E                     l12756:
 22920                           
 22921                           ;stkvar	_p @ sp[(-18)+16]
 22922  015E7E  0EFE               	movlw	-2
 22923  015E80  0060  F0F3  FFE3   	movff	_prec,plusw1
 22924  015E86  0EFF               	movlw	-1
 22925  015E88  0060  F0F7  FFE3   	movff	_prec+1,plusw1
 22926  015E8E                     l2310:
 22927                           
 22928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 22929                           ;stkvar	_w @ sp[(-18)+14]
 22930  015E8E  0EFC               	movlw	-4
 22931  015E90  0060  F0EB  FFE3   	movff	_width,plusw1
 22932  015E96  0EFD               	movlw	-3
 22933  015E98  0060  F0EF  FFE3   	movff	_width+1,plusw1
 22934                           
 22935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 22936                           ;stkvar	_s @ sp[(-18)+12]
 22937  015E9E  0EFA               	movlw	-6
 22938  015EA0  006F FF8C  F001    	movff	plusw1,btemp
 22939  015EA6  0EFB               	movlw	-5
 22940  015EA8  50E3               	movf	plusw1,w,c
 22941  015EAA  1001               	iorwf	btemp^0,w,c
 22942  015EAC  A4D8               	btfss	status,2,c
 22943  015EAE  D002               	goto	u11660
 22944  015EB0  A43E               	btfss	_flags^0,2,c
 22945  015EB2  D00A               	goto	l12764
 22946  015EB4                     u11660:
 22947                           
 22948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 22949                           ;stkvar	_w @ sp[(-18)+14]
 22950  015EB4  50E1               	movf	fsr1l,w,c
 22951  015EB6  0FFC               	addlw	-4
 22952  015EB8  6ED9               	movwf	fsr2l,c
 22953  015EBA  50E2               	movf	fsr1h,w,c
 22954  015EBC  6EDA               	movwf	fsr2h,c
 22955  015EBE  0EFF               	movlw	255
 22956  015EC0  22DA               	addwfc	fsr2h,f,c
 22957  015EC2  06DE               	decf	postinc2,f,c
 22958  015EC4  0E00               	movlw	0
 22959  015EC6  5ADD               	subwfb	postdec2,f,c
 22960  015EC8                     l12764:
 22961                           
 22962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 22963  015EC8  0E4F               	movlw	79
 22964  015ECA  6E0B               	movwf	(btemp+10)^0,c
 22965  015ECC  0E00               	movlw	0
 22966  015ECE  6E0C               	movwf	(btemp+11)^0,c
 22967                           
 22968                           ;stkvar	_i @ sp[(-18)+10]
 22969  015ED0  0EF8               	movlw	-8
 22970  015ED2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22971  015ED8  0EF9               	movlw	-7
 22972  015EDA  0060  F033  FFE3   	movff	btemp+11,plusw1
 22973                           
 22974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 22975  015EE0  0102               	movlb	2	; () banked
 22976  015EE2  6BE6               	clrf	(_dbuf+79)& (0+255),b
 22977                           
 22978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 22979  015EE4  D109               	goto	l12778
 22980  015EE6                     l12768:
 22981                           
 22982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 22983                           ;stkvar	_i @ sp[(-18)+10]
 22984  015EE6  50E1               	movf	fsr1l,w,c
 22985  015EE8  0FF8               	addlw	-8
 22986  015EEA  6ED9               	movwf	fsr2l,c
 22987  015EEC  50E2               	movf	fsr1h,w,c
 22988  015EEE  6EDA               	movwf	fsr2h,c
 22989  015EF0  0EFF               	movlw	255
 22990  015EF2  22DA               	addwfc	fsr2h,f,c
 22991  015EF4  06DE               	decf	postinc2,f,c
 22992  015EF6  0E00               	movlw	0
 22993  015EF8  5ADD               	subwfb	postdec2,f,c
 22994                           
 22995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 22996  015EFA  0E0A               	movlw	10
 22997  015EFC  6EE6               	movwf	postinc1,c
 22998  015EFE  0E00               	movlw	0
 22999  015F00  6EE6               	movwf	postinc1,c
 23000  015F02  0E00               	movlw	0
 23001  015F04  6EE6               	movwf	postinc1,c
 23002  015F06  0E00               	movlw	0
 23003  015F08  6EE6               	movwf	postinc1,c
 23004  015F0A  0E00               	movlw	0
 23005  015F0C  6EE6               	movwf	postinc1,c
 23006  015F0E  0E00               	movlw	0
 23007  015F10  6EE6               	movwf	postinc1,c
 23008  015F12  0E00               	movlw	0
 23009  015F14  6EE6               	movwf	postinc1,c
 23010  015F16  0E00               	movlw	0
 23011  015F18  6EE6               	movwf	postinc1,c
 23012                           
 23013                           ;stkvar	_n @ sp[(-26)+2]
 23014  015F1A  50E1               	movf	fsr1l,w,c
 23015  015F1C  0FE8               	addlw	-24
 23016  015F1E  6ED9               	movwf	fsr2l,c
 23017  015F20  50E2               	movf	fsr1h,w,c
 23018  015F22  6EDA               	movwf	fsr2h,c
 23019  015F24  0EFF               	movlw	255
 23020  015F26  22DA               	addwfc	fsr2h,f,c
 23021  015F28  006F FF7B FFE6     	movff	postinc2,postinc1
 23022  015F2E  006F FF7B FFE6     	movff	postinc2,postinc1
 23023  015F34  006F FF7B FFE6     	movff	postinc2,postinc1
 23024  015F3A  006F FF7B FFE6     	movff	postinc2,postinc1
 23025  015F40  006F FF7B FFE6     	movff	postinc2,postinc1
 23026  015F46  006F FF7B FFE6     	movff	postinc2,postinc1
 23027  015F4C  006F FF7B FFE6     	movff	postinc2,postinc1
 23028  015F52  006F FF7B FFE6     	movff	postinc2,postinc1
 23029  015F58  ECE5  F0C1         	call	___aomod	;wreg free
 23030  015F5C  52E5               	movf	postdec1,f,c
 23031  015F5E  006F FF9C  F018    	movff	indf1,btemp+23
 23032  015F64  52E5               	movf	postdec1,f,c
 23033  015F66  006F FF9C  F017    	movff	indf1,btemp+22
 23034  015F6C  52E5               	movf	postdec1,f,c
 23035  015F6E  006F FF9C  F016    	movff	indf1,btemp+21
 23036  015F74  52E5               	movf	postdec1,f,c
 23037  015F76  006F FF9C  F015    	movff	indf1,btemp+20
 23038  015F7C  52E5               	movf	postdec1,f,c
 23039  015F7E  006F FF9C  F014    	movff	indf1,btemp+19
 23040  015F84  52E5               	movf	postdec1,f,c
 23041  015F86  006F FF9C  F013    	movff	indf1,btemp+18
 23042  015F8C  52E5               	movf	postdec1,f,c
 23043  015F8E  006F FF9C  F012    	movff	indf1,btemp+17
 23044  015F94  52E5               	movf	postdec1,f,c
 23045  015F96  006F FF9C  F011    	movff	indf1,btemp+16
 23046  015F9C  0EF8               	movlw	248
 23047  015F9E  26E1               	addwf	fsr1l,f,c
 23048  015FA0  0EFF               	movlw	255
 23049  015FA2  22E2               	addwfc	fsr1h,f,c
 23050  015FA4  0060  F044  F00B   	movff	btemp+16,btemp+10
 23051  015FAA  0060  F048  F00C   	movff	btemp+17,btemp+11
 23052  015FB0  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23053  015FB6  0060  F033  FFE6   	movff	btemp+11,postinc1
 23054  015FBC  EC87  F0E1         	call	_abs	;wreg free
 23055  015FC0  0E30               	movlw	48
 23056  015FC2  2601               	addwf	btemp^0,f,c
 23057                           
 23058                           ;stkvar	_i @ sp[(-18)+10]
 23059  015FC4  0EF8               	movlw	-8
 23060  015FC6  006F FF8C  F00B    	movff	plusw1,btemp+10
 23061  015FCC  0EF9               	movlw	-7
 23062  015FCE  006F FF8C  F00C    	movff	plusw1,btemp+11
 23063  015FD4  0E97               	movlw	low _dbuf
 23064  015FD6  240B               	addwf	(btemp+10)^0,w,c
 23065  015FD8  6ED9               	movwf	fsr2l,c
 23066  015FDA  0E02               	movlw	high _dbuf
 23067  015FDC  200C               	addwfc	(btemp+11)^0,w,c
 23068  015FDE  6EDA               	movwf	fsr2h,c
 23069  015FE0  0060  F007  FFDF   	movff	btemp,indf2
 23070                           
 23071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 23072                           ;stkvar	_p @ sp[(-18)+16]
 23073  015FE6  50E1               	movf	fsr1l,w,c
 23074  015FE8  0FFE               	addlw	-2
 23075  015FEA  6ED9               	movwf	fsr2l,c
 23076  015FEC  50E2               	movf	fsr1h,w,c
 23077  015FEE  6EDA               	movwf	fsr2h,c
 23078  015FF0  0EFF               	movlw	255
 23079  015FF2  22DA               	addwfc	fsr2h,f,c
 23080  015FF4  06DE               	decf	postinc2,f,c
 23081  015FF6  0E00               	movlw	0
 23082  015FF8  5ADD               	subwfb	postdec2,f,c
 23083                           
 23084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 23085                           ;stkvar	_w @ sp[(-18)+14]
 23086  015FFA  50E1               	movf	fsr1l,w,c
 23087  015FFC  0FFC               	addlw	-4
 23088  015FFE  6ED9               	movwf	fsr2l,c
 23089  016000  50E2               	movf	fsr1h,w,c
 23090  016002  6EDA               	movwf	fsr2h,c
 23091  016004  0EFF               	movlw	255
 23092  016006  22DA               	addwfc	fsr2h,f,c
 23093  016008  06DE               	decf	postinc2,f,c
 23094  01600A  0E00               	movlw	0
 23095  01600C  5ADD               	subwfb	postdec2,f,c
 23096                           
 23097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 23098  01600E  0E0A               	movlw	10
 23099  016010  6EE6               	movwf	postinc1,c
 23100  016012  0E00               	movlw	0
 23101  016014  6EE6               	movwf	postinc1,c
 23102  016016  0E00               	movlw	0
 23103  016018  6EE6               	movwf	postinc1,c
 23104  01601A  0E00               	movlw	0
 23105  01601C  6EE6               	movwf	postinc1,c
 23106  01601E  0E00               	movlw	0
 23107  016020  6EE6               	movwf	postinc1,c
 23108  016022  0E00               	movlw	0
 23109  016024  6EE6               	movwf	postinc1,c
 23110  016026  0E00               	movlw	0
 23111  016028  6EE6               	movwf	postinc1,c
 23112  01602A  0E00               	movlw	0
 23113  01602C  6EE6               	movwf	postinc1,c
 23114                           
 23115                           ;stkvar	_n @ sp[(-26)+2]
 23116  01602E  50E1               	movf	fsr1l,w,c
 23117  016030  0FE8               	addlw	-24
 23118  016032  6ED9               	movwf	fsr2l,c
 23119  016034  50E2               	movf	fsr1h,w,c
 23120  016036  6EDA               	movwf	fsr2h,c
 23121  016038  0EFF               	movlw	255
 23122  01603A  22DA               	addwfc	fsr2h,f,c
 23123  01603C  006F FF7B FFE6     	movff	postinc2,postinc1
 23124  016042  006F FF7B FFE6     	movff	postinc2,postinc1
 23125  016048  006F FF7B FFE6     	movff	postinc2,postinc1
 23126  01604E  006F FF7B FFE6     	movff	postinc2,postinc1
 23127  016054  006F FF7B FFE6     	movff	postinc2,postinc1
 23128  01605A  006F FF7B FFE6     	movff	postinc2,postinc1
 23129  016060  006F FF7B FFE6     	movff	postinc2,postinc1
 23130  016066  006F FF7B FFE6     	movff	postinc2,postinc1
 23131  01606C  EC48  F0BE         	call	___aodiv	;wreg free
 23132  016070  52E5               	movf	postdec1,f,c
 23133  016072  006F FF9C  F018    	movff	indf1,btemp+23
 23134  016078  52E5               	movf	postdec1,f,c
 23135  01607A  006F FF9C  F017    	movff	indf1,btemp+22
 23136  016080  52E5               	movf	postdec1,f,c
 23137  016082  006F FF9C  F016    	movff	indf1,btemp+21
 23138  016088  52E5               	movf	postdec1,f,c
 23139  01608A  006F FF9C  F015    	movff	indf1,btemp+20
 23140  016090  52E5               	movf	postdec1,f,c
 23141  016092  006F FF9C  F014    	movff	indf1,btemp+19
 23142  016098  52E5               	movf	postdec1,f,c
 23143  01609A  006F FF9C  F013    	movff	indf1,btemp+18
 23144  0160A0  52E5               	movf	postdec1,f,c
 23145  0160A2  006F FF9C  F012    	movff	indf1,btemp+17
 23146  0160A8  52E5               	movf	postdec1,f,c
 23147  0160AA  006F FF9C  F011    	movff	indf1,btemp+16
 23148  0160B0  0EF8               	movlw	248
 23149  0160B2  26E1               	addwf	fsr1l,f,c
 23150  0160B4  0EFF               	movlw	255
 23151  0160B6  22E2               	addwfc	fsr1h,f,c
 23152                           
 23153                           ;stkvar	_n @ sp[(-18)+2]
 23154  0160B8  0EF0               	movlw	-16
 23155  0160BA  0060  F047  FFE3   	movff	btemp+16,plusw1
 23156  0160C0  0EF1               	movlw	-15
 23157  0160C2  0060  F04B  FFE3   	movff	btemp+17,plusw1
 23158  0160C8  0EF2               	movlw	-14
 23159  0160CA  0060  F04F  FFE3   	movff	btemp+18,plusw1
 23160  0160D0  0EF3               	movlw	-13
 23161  0160D2  0060  F053  FFE3   	movff	btemp+19,plusw1
 23162  0160D8  0EF4               	movlw	-12
 23163  0160DA  0060  F057  FFE3   	movff	btemp+20,plusw1
 23164  0160E0  0EF5               	movlw	-11
 23165  0160E2  0060  F05B  FFE3   	movff	btemp+21,plusw1
 23166  0160E8  0EF6               	movlw	-10
 23167  0160EA  0060  F05F  FFE3   	movff	btemp+22,plusw1
 23168  0160F0  0EF7               	movlw	-9
 23169  0160F2  0060  F063  FFE3   	movff	btemp+23,plusw1
 23170  0160F8                     l12778:
 23171                           
 23172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 23173                           ;stkvar	_i @ sp[(-18)+10]
 23174  0160F8  0EF9               	movlw	-7
 23175  0160FA  BEE3               	btfsc	plusw1,7,c
 23176  0160FC  D036               	goto	u11710
 23177  0160FE  0EF9               	movlw	-7
 23178  016100  50E3               	movf	plusw1,w,c
 23179  016102  E104               	bnz	u11670
 23180  016104  0EF8               	movlw	-8
 23181  016106  04E3               	decf	plusw1,w,c
 23182  016108  A0D8               	btfss	status,0,c
 23183  01610A  D02F               	goto	u11710
 23184  01610C                     u11670:
 23185                           
 23186                           ;stkvar	_n @ sp[(-18)+2]
 23187  01610C  0EF0               	movlw	-16
 23188  01610E  50E3               	movf	plusw1,w,c
 23189  016110  E115               	bnz	u11681
 23190  016112  0EF1               	movlw	-15
 23191  016114  50E3               	movf	plusw1,w,c
 23192  016116  E112               	bnz	u11681
 23193  016118  0EF2               	movlw	-14
 23194  01611A  50E3               	movf	plusw1,w,c
 23195  01611C  E10F               	bnz	u11681
 23196  01611E  0EF3               	movlw	-13
 23197  016120  50E3               	movf	plusw1,w,c
 23198  016122  E10C               	bnz	u11681
 23199  016124  0EF4               	movlw	-12
 23200  016126  50E3               	movf	plusw1,w,c
 23201  016128  E109               	bnz	u11681
 23202  01612A  0EF5               	movlw	-11
 23203  01612C  50E3               	movf	plusw1,w,c
 23204  01612E  E106               	bnz	u11681
 23205  016130  0EF6               	movlw	-10
 23206  016132  50E3               	movf	plusw1,w,c
 23207  016134  E103               	bnz	u11681
 23208  016136  0EF7               	movlw	-9
 23209  016138  50E3               	movf	plusw1,w,c
 23210  01613A  A4D8               	btfss	status,2,c
 23211  01613C                     u11681:
 23212  01613C  D6D4               	goto	l12768
 23213                           
 23214                           ;stkvar	_p @ sp[(-18)+16]
 23215  01613E  0EFF               	movlw	-1
 23216  016140  BEE3               	btfsc	plusw1,7,c
 23217  016142  D007               	goto	u11690
 23218  016144  0EFF               	movlw	-1
 23219  016146  50E3               	movf	plusw1,w,c
 23220  016148  E103               	bnz	u11691
 23221  01614A  0EFE               	movlw	-2
 23222  01614C  04E3               	decf	plusw1,w,c
 23223  01614E  B0D8               	btfsc	status,0,c
 23224  016150                     u11691:
 23225  016150  D6CA               	goto	l12768
 23226  016152                     u11690:
 23227                           
 23228                           ;stkvar	_w @ sp[(-18)+14]
 23229  016152  0EFD               	movlw	-3
 23230  016154  BEE3               	btfsc	plusw1,7,c
 23231  016156  D009               	goto	u11710
 23232  016158  0EFD               	movlw	-3
 23233  01615A  50E3               	movf	plusw1,w,c
 23234  01615C  E104               	bnz	u11700
 23235  01615E  0EFC               	movlw	-4
 23236  016160  04E3               	decf	plusw1,w,c
 23237  016162  A0D8               	btfss	status,0,c
 23238  016164  D002               	goto	u11710
 23239  016166                     u11700:
 23240  016166  B23E               	btfsc	_flags^0,1,c
 23241  016168  D6BE               	goto	l12768
 23242  01616A                     u11710:
 23243                           
 23244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 23245                           ;stkvar	_s @ sp[(-18)+12]
 23246  01616A  0EFA               	movlw	-6
 23247  01616C  006F FF8C  F001    	movff	plusw1,btemp
 23248  016172  0EFB               	movlw	-5
 23249  016174  50E3               	movf	plusw1,w,c
 23250  016176  1001               	iorwf	btemp^0,w,c
 23251  016178  A4D8               	btfss	status,2,c
 23252  01617A  D002               	goto	u11730
 23253  01617C  A43E               	btfss	_flags^0,2,c
 23254  01617E  D033               	goto	l12802
 23255  016180                     u11730:
 23256                           
 23257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 23258                           ;stkvar	_i @ sp[(-18)+10]
 23259  016180  50E1               	movf	fsr1l,w,c
 23260  016182  0FF8               	addlw	-8
 23261  016184  6ED9               	movwf	fsr2l,c
 23262  016186  50E2               	movf	fsr1h,w,c
 23263  016188  6EDA               	movwf	fsr2h,c
 23264  01618A  0EFF               	movlw	255
 23265  01618C  22DA               	addwfc	fsr2h,f,c
 23266  01618E  06DE               	decf	postinc2,f,c
 23267  016190  0E00               	movlw	0
 23268  016192  5ADD               	subwfb	postdec2,f,c
 23269                           
 23270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 23271                           ;stkvar	_s @ sp[(-18)+12]
 23272  016194  0EFA               	movlw	-6
 23273  016196  006F FF8C  F001    	movff	plusw1,btemp
 23274  01619C  0EFB               	movlw	-5
 23275  01619E  50E3               	movf	plusw1,w,c
 23276  0161A0  1001               	iorwf	btemp^0,w,c
 23277  0161A2  A4D8               	btfss	status,2,c
 23278  0161A4  D002               	goto	l12798
 23279  0161A6  0E2B               	movlw	43
 23280  0161A8  D001               	goto	L28
 23281  0161AA                     l12798:
 23282  0161AA  0E2D               	movlw	45
 23283  0161AC                     L28:
 23284  0161AC  6E0B               	movwf	(btemp+10)^0,c
 23285  0161AE  0E00               	movlw	0
 23286  0161B0  6E0C               	movwf	(btemp+11)^0,c
 23287                           
 23288                           ;stkvar	_dtoa$5966 @ sp[(-18)+0]
 23289  0161B2  0EEE               	movlw	-18
 23290  0161B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23291  0161BA  0EEF               	movlw	-17
 23292  0161BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 23293                           
 23294                           ;stkvar	_dtoa$5966 @ sp[(-18)+0]
 23295                           ;stkvar	_i @ sp[(-18)+10]
 23296  0161C2  0EF8               	movlw	-8
 23297  0161C4  006F FF8C  F00B    	movff	plusw1,btemp+10
 23298  0161CA  0EF9               	movlw	-7
 23299  0161CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23300  0161D2  0E97               	movlw	low _dbuf
 23301  0161D4  240B               	addwf	(btemp+10)^0,w,c
 23302  0161D6  6ED9               	movwf	fsr2l,c
 23303  0161D8  0E02               	movlw	high _dbuf
 23304  0161DA  200C               	addwfc	(btemp+11)^0,w,c
 23305  0161DC  6EDA               	movwf	fsr2h,c
 23306  0161DE  0EEE               	movlw	-18
 23307  0161E0  006F FF8F FFDF     	movff	plusw1,indf2
 23308  0161E6                     l12802:
 23309                           
 23310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 23311                           ;stkvar	_w @ sp[(-18)+14]
 23312  0161E6  0EFC               	movlw	-4
 23313  0161E8  006F FF8F FFE6     	movff	plusw1,postinc1
 23314  0161EE  006F FF8F FFE6     	movff	plusw1,postinc1
 23315                           
 23316                           ;stkvar	_i @ sp[(-20)+10]
 23317  0161F4  0E97               	movlw	low _dbuf
 23318  0161F6  6E0B               	movwf	(btemp+10)^0,c
 23319  0161F8  0E02               	movlw	high _dbuf
 23320  0161FA  6E0C               	movwf	(btemp+11)^0,c
 23321  0161FC  0EF6               	movlw	-10
 23322  0161FE  50E3               	movf	plusw1,w,c
 23323  016200  260B               	addwf	(btemp+10)^0,f,c
 23324  016202  0EF7               	movlw	-9
 23325  016204  50E3               	movf	plusw1,w,c
 23326  016206  220C               	addwfc	(btemp+11)^0,f,c
 23327  016208  0060  F02F  FFE6   	movff	btemp+10,postinc1
 23328  01620E  0060  F033  FFE6   	movff	btemp+11,postinc1
 23329                           
 23330                           ;stkvar	_fp @ sp[(-22)+-2]
 23331  016214  0EE8               	movlw	-24
 23332  016216  006F FF8F FFE6     	movff	plusw1,postinc1
 23333  01621C  006F FF8F FFE6     	movff	plusw1,postinc1
 23334  016222  EC0A  F0D2         	call	_pad	;wreg free
 23335                           
 23336                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 23337  016226  0EE4               	movlw	228
 23338  016228  26E1               	addwf	fsr1l,f,c
 23339  01622A  0EFF               	movlw	255
 23340  01622C  22E2               	addwfc	fsr1h,f,c
 23341  01622E  0012               	return		;funcret
 23342  016230                     __end_of_dtoa:
 23343                           	opt callstack 0
 23344                           
 23345 ;; *************** function _abs *****************
 23346 ;; Defined at:
 23347 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 23348 ;; Parameters:    Size  Location     Type
 23349 ;;  a               2  [STACK] int 
 23350 ;; Auto vars:     Size  Location     Type
 23351 ;;		None
 23352 ;; Return value:  Size  Location     Type
 23353 ;;                  2  [STACK] int 
 23354 ;; Registers used:
 23355 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 23356 ;; Tracked objects:
 23357 ;;		On entry : 0/2
 23358 ;;		On exit  : 0/0
 23359 ;;		Unchanged: 0/0
 23360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23365 ;;Total ram usage:        0 bytes
 23366 ;; Hardware stack levels used:    1
 23367 ;; Hardware stack levels required when called:   15
 23368 ;; This function calls:
 23369 ;;		Nothing
 23370 ;; This function is called by:
 23371 ;;		_dtoa
 23372 ;; This function uses a reentrant model
 23373 ;;
 23374                           
 23375                           	psect	text82
 23376  01C30E                     __ptext82:
 23377                           	opt callstack 0
 23378  01C30E                     _abs:
 23379                           	opt callstack 0
 23380                           
 23381                           ;stkvar	_a @ sp[(0)+-2]
 23382                           
 23383                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23384                           ;incstack = 0
 23385 ;; hardware stack exceeded
 23386  01C30E  0EFF               	movlw	-1
 23387  01C310  BEE3               	btfsc	plusw1,7,c
 23388  01C312  D007               	goto	u6330
 23389  01C314  0EFF               	movlw	-1
 23390  01C316  50E3               	movf	plusw1,w,c
 23391  01C318  E112               	bnz	l8486
 23392  01C31A  0EFE               	movlw	-2
 23393  01C31C  04E3               	decf	plusw1,w,c
 23394  01C31E  B0D8               	btfsc	status,0,c
 23395  01C320  D00E               	goto	l8486
 23396  01C322                     u6330:
 23397                           
 23398                           ;stkvar	_a @ sp[(0)+-2]
 23399  01C322  0EFE               	movlw	-2
 23400  01C324  006F FF8C  F001    	movff	plusw1,btemp
 23401  01C32A  1E01               	comf	btemp^0,f,c
 23402  01C32C  0EFF               	movlw	-1
 23403  01C32E  006F FF8C  F002    	movff	plusw1,btemp+1
 23404  01C334  1E02               	comf	(btemp+1)^0,f,c
 23405  01C336  2A01               	incf	btemp^0,f,c
 23406  01C338  B4D8               	btfsc	status,2,c
 23407  01C33A  2A02               	incf	(btemp+1)^0,f,c
 23408  01C33C  D008               	goto	l3236
 23409  01C33E                     l8486:
 23410                           
 23411                           ;stkvar	_a @ sp[(0)+-2]
 23412  01C33E  0EFE               	movlw	-2
 23413  01C340  006F FF8C  F001    	movff	plusw1,btemp
 23414  01C346  0EFF               	movlw	-1
 23415  01C348  006F FF8C  F002    	movff	plusw1,btemp+1
 23416  01C34E                     l3236:
 23417                           
 23418                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 23419  01C34E  52E5               	movf	postdec1,f,c
 23420  01C350  52E5               	movf	postdec1,f,c
 23421  01C352  0012               	return		;funcret
 23422  01C354                     __end_of_abs:
 23423                           	opt callstack 0
 23424                           
 23425 ;; *************** function ___aomod *****************
 23426 ;; Defined at:
 23427 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 23428 ;; Parameters:    Size  Location     Type
 23429 ;;  dividend        8  [STACK] long long 
 23430 ;;  divisor         8  [STACK] long long 
 23431 ;; Auto vars:     Size  Location     Type
 23432 ;;  sign            1  [STACK] unsigned char 
 23433 ;;  counter         1  [STACK] unsigned char 
 23434 ;; Return value:  Size  Location     Type
 23435 ;;                  8  [STACK] long long 
 23436 ;; Registers used:
 23437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23438 ;; Tracked objects:
 23439 ;;		On entry : 0/2
 23440 ;;		On exit  : 0/0
 23441 ;;		Unchanged: 0/0
 23442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23447 ;;Total ram usage:        0 bytes
 23448 ;; Hardware stack levels used:    1
 23449 ;; Hardware stack levels required when called:   15
 23450 ;; This function calls:
 23451 ;;		Nothing
 23452 ;; This function is called by:
 23453 ;;		_dtoa
 23454 ;; This function uses a reentrant model
 23455 ;;
 23456                           
 23457                           	psect	text83
 23458  0183CA                     __ptext83:
 23459                           	opt callstack 0
 23460  0183CA                     ___aomod:
 23461                           	opt callstack 0
 23462                           
 23463                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 23464  0183CA  52E6               	movf	postinc1,f,c
 23465  0183CC  52E6               	movf	postinc1,f,c
 23466                           
 23467                           ;stkvar	_sign @ sp[(-2)+0]
 23468                           
 23469                           ;incstack = 0
 23470 ;; hardware stack exceeded
 23471  0183CE  0EFE               	movlw	-2
 23472  0183D0  6AE3               	clrf	plusw1,c
 23473                           
 23474                           ;stkvar	_dividend @ sp[(-2)+-8]
 23475  0183D2  0EFD               	movlw	-3
 23476  0183D4  AEE3               	btfss	plusw1,7,c
 23477  0183D6  D028               	goto	l8644
 23478                           
 23479                           ;stkvar	_dividend @ sp[(-2)+-8]
 23480                           ;stkvar	_dividend @ sp[(-2)+-8]
 23481  0183D8  0EF6               	movlw	-10
 23482  0183DA  6CE3               	negf	plusw1,c
 23483  0183DC  0EF7               	movlw	-9
 23484  0183DE  1EE3               	comf	plusw1,f,c
 23485  0183E0  0EF8               	movlw	-8
 23486  0183E2  1EE3               	comf	plusw1,f,c
 23487  0183E4  0EF9               	movlw	-7
 23488  0183E6  1EE3               	comf	plusw1,f,c
 23489  0183E8  0EFA               	movlw	-6
 23490  0183EA  1EE3               	comf	plusw1,f,c
 23491  0183EC  0EFB               	movlw	-5
 23492  0183EE  1EE3               	comf	plusw1,f,c
 23493  0183F0  0EFC               	movlw	-4
 23494  0183F2  1EE3               	comf	plusw1,f,c
 23495  0183F4  0EFD               	movlw	-3
 23496  0183F6  1EE3               	comf	plusw1,f,c
 23497  0183F8  E314               	bnc	u6760
 23498  0183FA  0EF7               	movlw	-9
 23499  0183FC  2AE3               	incf	plusw1,f,c
 23500  0183FE  E311               	bnc	u6760
 23501  018400  0EF8               	movlw	-8
 23502  018402  2AE3               	incf	plusw1,f,c
 23503  018404  E30E               	bnc	u6760
 23504  018406  0EF9               	movlw	-7
 23505  018408  2AE3               	incf	plusw1,f,c
 23506  01840A  E30B               	bnc	u6760
 23507  01840C  0EFA               	movlw	-6
 23508  01840E  2AE3               	incf	plusw1,f,c
 23509  018410  E308               	bnc	u6760
 23510  018412  0EFB               	movlw	-5
 23511  018414  2AE3               	incf	plusw1,f,c
 23512  018416  E305               	bnc	u6760
 23513  018418  0EFC               	movlw	-4
 23514  01841A  2AE3               	incf	plusw1,f,c
 23515  01841C  E302               	bnc	u6760
 23516  01841E  0EFD               	movlw	-3
 23517  018420  2AE3               	incf	plusw1,f,c
 23518  018422                     u6760:
 23519                           
 23520                           ;stkvar	_sign @ sp[(-2)+0]
 23521  018422  0EFE               	movlw	-2
 23522  018424  6AE3               	clrf	plusw1,c
 23523  018426  2AE3               	incf	plusw1,f,c
 23524  018428                     l8644:
 23525                           
 23526                           ;stkvar	_divisor @ sp[(-2)+-16]
 23527  018428  0EF5               	movlw	-11
 23528  01842A  AEE3               	btfss	plusw1,7,c
 23529  01842C  D025               	goto	u6780
 23530                           
 23531                           ;stkvar	_divisor @ sp[(-2)+-16]
 23532                           ;stkvar	_divisor @ sp[(-2)+-16]
 23533  01842E  0EEE               	movlw	-18
 23534  018430  6CE3               	negf	plusw1,c
 23535  018432  0EEF               	movlw	-17
 23536  018434  1EE3               	comf	plusw1,f,c
 23537  018436  0EF0               	movlw	-16
 23538  018438  1EE3               	comf	plusw1,f,c
 23539  01843A  0EF1               	movlw	-15
 23540  01843C  1EE3               	comf	plusw1,f,c
 23541  01843E  0EF2               	movlw	-14
 23542  018440  1EE3               	comf	plusw1,f,c
 23543  018442  0EF3               	movlw	-13
 23544  018444  1EE3               	comf	plusw1,f,c
 23545  018446  0EF4               	movlw	-12
 23546  018448  1EE3               	comf	plusw1,f,c
 23547  01844A  0EF5               	movlw	-11
 23548  01844C  1EE3               	comf	plusw1,f,c
 23549  01844E  E314               	bnc	u6780
 23550  018450  0EEF               	movlw	-17
 23551  018452  2AE3               	incf	plusw1,f,c
 23552  018454  E311               	bnc	u6780
 23553  018456  0EF0               	movlw	-16
 23554  018458  2AE3               	incf	plusw1,f,c
 23555  01845A  E30E               	bnc	u6780
 23556  01845C  0EF1               	movlw	-15
 23557  01845E  2AE3               	incf	plusw1,f,c
 23558  018460  E30B               	bnc	u6780
 23559  018462  0EF2               	movlw	-14
 23560  018464  2AE3               	incf	plusw1,f,c
 23561  018466  E308               	bnc	u6780
 23562  018468  0EF3               	movlw	-13
 23563  01846A  2AE3               	incf	plusw1,f,c
 23564  01846C  E305               	bnc	u6780
 23565  01846E  0EF4               	movlw	-12
 23566  018470  2AE3               	incf	plusw1,f,c
 23567  018472  E302               	bnc	u6780
 23568  018474  0EF5               	movlw	-11
 23569  018476  2AE3               	incf	plusw1,f,c
 23570  018478                     u6780:
 23571                           
 23572                           ;stkvar	_divisor @ sp[(-2)+-16]
 23573  018478  0EEE               	movlw	-18
 23574  01847A  50E3               	movf	plusw1,w,c
 23575  01847C  E116               	bnz	u6790
 23576  01847E  0EEF               	movlw	-17
 23577  018480  50E3               	movf	plusw1,w,c
 23578  018482  E113               	bnz	u6790
 23579  018484  0EF0               	movlw	-16
 23580  018486  50E3               	movf	plusw1,w,c
 23581  018488  E110               	bnz	u6790
 23582  01848A  0EF1               	movlw	-15
 23583  01848C  50E3               	movf	plusw1,w,c
 23584  01848E  E10D               	bnz	u6790
 23585  018490  0EF2               	movlw	-14
 23586  018492  50E3               	movf	plusw1,w,c
 23587  018494  E10A               	bnz	u6790
 23588  018496  0EF3               	movlw	-13
 23589  018498  50E3               	movf	plusw1,w,c
 23590  01849A  E107               	bnz	u6790
 23591  01849C  0EF4               	movlw	-12
 23592  01849E  50E3               	movf	plusw1,w,c
 23593  0184A0  E104               	bnz	u6790
 23594  0184A2  0EF5               	movlw	-11
 23595  0184A4  50E3               	movf	plusw1,w,c
 23596  0184A6  B4D8               	btfsc	status,2,c
 23597  0184A8  D075               	goto	u6820
 23598  0184AA                     u6790:
 23599                           
 23600                           ;stkvar	_counter @ sp[(-2)+1]
 23601  0184AA  0EFF               	movlw	-1
 23602  0184AC  6AE3               	clrf	plusw1,c
 23603  0184AE  D012               	goto	L29
 23604  0184B0                     l8652:
 23605                           
 23606                           ;stkvar	_divisor @ sp[(-2)+-16]
 23607  0184B0  90D8               	bcf	status,0,c
 23608  0184B2  0EEE               	movlw	-18
 23609  0184B4  36E3               	rlcf	plusw1,f,c
 23610  0184B6  0EEF               	movlw	-17
 23611  0184B8  36E3               	rlcf	plusw1,f,c
 23612  0184BA  0EF0               	movlw	-16
 23613  0184BC  36E3               	rlcf	plusw1,f,c
 23614  0184BE  0EF1               	movlw	-15
 23615  0184C0  36E3               	rlcf	plusw1,f,c
 23616  0184C2  0EF2               	movlw	-14
 23617  0184C4  36E3               	rlcf	plusw1,f,c
 23618  0184C6  0EF3               	movlw	-13
 23619  0184C8  36E3               	rlcf	plusw1,f,c
 23620  0184CA  0EF4               	movlw	-12
 23621  0184CC  36E3               	rlcf	plusw1,f,c
 23622  0184CE  0EF5               	movlw	-11
 23623  0184D0  36E3               	rlcf	plusw1,f,c
 23624                           
 23625                           ;stkvar	_counter @ sp[(-2)+1]
 23626  0184D2  0EFF               	movlw	-1
 23627  0184D4                     L29:
 23628  0184D4  2AE3               	incf	plusw1,f,c
 23629                           
 23630                           ;stkvar	_divisor @ sp[(-2)+-16]
 23631  0184D6  0EF5               	movlw	-11
 23632  0184D8  AEE3               	btfss	plusw1,7,c
 23633  0184DA  D7EA               	goto	l8652
 23634  0184DC                     u6800:
 23635                           
 23636                           ;stkvar	_divisor @ sp[(-2)+-16]
 23637                           ;stkvar	_dividend @ sp[(-2)+-8]
 23638  0184DC  50E1               	movf	fsr1l,w,c
 23639  0184DE  0FF6               	addlw	-10
 23640  0184E0  6ED9               	movwf	fsr2l,c
 23641  0184E2  50E2               	movf	fsr1h,w,c
 23642  0184E4  6EDA               	movwf	fsr2h,c
 23643  0184E6  0EFF               	movlw	255
 23644  0184E8  22DA               	addwfc	fsr2h,f,c
 23645  0184EA  0EEE               	movlw	-18
 23646  0184EC  50E3               	movf	plusw1,w,c
 23647  0184EE  5CDE               	subwf	postinc2,w,c
 23648  0184F0  0EEF               	movlw	-17
 23649  0184F2  50E3               	movf	plusw1,w,c
 23650  0184F4  58DE               	subwfb	postinc2,w,c
 23651  0184F6  0EF0               	movlw	-16
 23652  0184F8  50E3               	movf	plusw1,w,c
 23653  0184FA  58DE               	subwfb	postinc2,w,c
 23654  0184FC  0EF1               	movlw	-15
 23655  0184FE  50E3               	movf	plusw1,w,c
 23656  018500  58DE               	subwfb	postinc2,w,c
 23657  018502  0EF2               	movlw	-14
 23658  018504  50E3               	movf	plusw1,w,c
 23659  018506  58DE               	subwfb	postinc2,w,c
 23660  018508  0EF3               	movlw	-13
 23661  01850A  50E3               	movf	plusw1,w,c
 23662  01850C  58DE               	subwfb	postinc2,w,c
 23663  01850E  0EF4               	movlw	-12
 23664  018510  50E3               	movf	plusw1,w,c
 23665  018512  58DE               	subwfb	postinc2,w,c
 23666  018514  0EF5               	movlw	-11
 23667  018516  50E3               	movf	plusw1,w,c
 23668  018518  58DE               	subwfb	postinc2,w,c
 23669  01851A  A0D8               	btfss	status,0,c
 23670  01851C  D01F               	goto	l8660
 23671                           
 23672                           ;stkvar	_divisor @ sp[(-2)+-16]
 23673                           ;stkvar	_dividend @ sp[(-2)+-8]
 23674  01851E  50E1               	movf	fsr1l,w,c
 23675  018520  0FF6               	addlw	-10
 23676  018522  6ED9               	movwf	fsr2l,c
 23677  018524  50E2               	movf	fsr1h,w,c
 23678  018526  6EDA               	movwf	fsr2h,c
 23679  018528  0EFF               	movlw	255
 23680  01852A  22DA               	addwfc	fsr2h,f,c
 23681  01852C  0EEE               	movlw	-18
 23682  01852E  50E3               	movf	plusw1,w,c
 23683  018530  5EDE               	subwf	postinc2,f,c
 23684  018532  0EEF               	movlw	-17
 23685  018534  50E3               	movf	plusw1,w,c
 23686  018536  5ADE               	subwfb	postinc2,f,c
 23687  018538  0EF0               	movlw	-16
 23688  01853A  50E3               	movf	plusw1,w,c
 23689  01853C  5ADE               	subwfb	postinc2,f,c
 23690  01853E  0EF1               	movlw	-15
 23691  018540  50E3               	movf	plusw1,w,c
 23692  018542  5ADE               	subwfb	postinc2,f,c
 23693  018544  0EF2               	movlw	-14
 23694  018546  50E3               	movf	plusw1,w,c
 23695  018548  5ADE               	subwfb	postinc2,f,c
 23696  01854A  0EF3               	movlw	-13
 23697  01854C  50E3               	movf	plusw1,w,c
 23698  01854E  5ADE               	subwfb	postinc2,f,c
 23699  018550  0EF4               	movlw	-12
 23700  018552  50E3               	movf	plusw1,w,c
 23701  018554  5ADE               	subwfb	postinc2,f,c
 23702  018556  0EF5               	movlw	-11
 23703  018558  50E3               	movf	plusw1,w,c
 23704  01855A  5ADE               	subwfb	postinc2,f,c
 23705  01855C                     l8660:
 23706                           
 23707                           ;stkvar	_divisor @ sp[(-2)+-16]
 23708  01855C  90D8               	bcf	status,0,c
 23709  01855E  0EF5               	movlw	-11
 23710  018560  32E3               	rrcf	plusw1,f,c
 23711  018562  0EF4               	movlw	-12
 23712  018564  32E3               	rrcf	plusw1,f,c
 23713  018566  0EF3               	movlw	-13
 23714  018568  32E3               	rrcf	plusw1,f,c
 23715  01856A  0EF2               	movlw	-14
 23716  01856C  32E3               	rrcf	plusw1,f,c
 23717  01856E  0EF1               	movlw	-15
 23718  018570  32E3               	rrcf	plusw1,f,c
 23719  018572  0EF0               	movlw	-16
 23720  018574  32E3               	rrcf	plusw1,f,c
 23721  018576  0EEF               	movlw	-17
 23722  018578  32E3               	rrcf	plusw1,f,c
 23723  01857A  0EEE               	movlw	-18
 23724  01857C  32E3               	rrcf	plusw1,f,c
 23725                           
 23726                           ;stkvar	_counter @ sp[(-2)+1]
 23727  01857E  0EFF               	movlw	-1
 23728  018580  50E3               	movf	plusw1,w,c
 23729  018582  6E01               	movwf	btemp^0,c
 23730  018584  0E01               	movlw	1
 23731  018586  5E01               	subwf	btemp^0,f,c
 23732  018588  0EFF               	movlw	-1
 23733  01858A  0060  F007  FFE3   	movff	btemp,plusw1
 23734  018590  A4D8               	btfss	status,2,c
 23735  018592  D7A4               	goto	u6800
 23736  018594                     u6820:
 23737                           
 23738                           ;stkvar	_sign @ sp[(-2)+0]
 23739  018594  0EFE               	movlw	-2
 23740  018596  50E3               	movf	plusw1,w,c
 23741  018598  B4D8               	btfsc	status,2,c
 23742  01859A  D025               	goto	u6840
 23743                           
 23744                           ;stkvar	_dividend @ sp[(-2)+-8]
 23745                           ;stkvar	_dividend @ sp[(-2)+-8]
 23746  01859C  0EF6               	movlw	-10
 23747  01859E  6CE3               	negf	plusw1,c
 23748  0185A0  0EF7               	movlw	-9
 23749  0185A2  1EE3               	comf	plusw1,f,c
 23750  0185A4  0EF8               	movlw	-8
 23751  0185A6  1EE3               	comf	plusw1,f,c
 23752  0185A8  0EF9               	movlw	-7
 23753  0185AA  1EE3               	comf	plusw1,f,c
 23754  0185AC  0EFA               	movlw	-6
 23755  0185AE  1EE3               	comf	plusw1,f,c
 23756  0185B0  0EFB               	movlw	-5
 23757  0185B2  1EE3               	comf	plusw1,f,c
 23758  0185B4  0EFC               	movlw	-4
 23759  0185B6  1EE3               	comf	plusw1,f,c
 23760  0185B8  0EFD               	movlw	-3
 23761  0185BA  1EE3               	comf	plusw1,f,c
 23762  0185BC  E314               	bnc	u6840
 23763  0185BE  0EF7               	movlw	-9
 23764  0185C0  2AE3               	incf	plusw1,f,c
 23765  0185C2  E311               	bnc	u6840
 23766  0185C4  0EF8               	movlw	-8
 23767  0185C6  2AE3               	incf	plusw1,f,c
 23768  0185C8  E30E               	bnc	u6840
 23769  0185CA  0EF9               	movlw	-7
 23770  0185CC  2AE3               	incf	plusw1,f,c
 23771  0185CE  E30B               	bnc	u6840
 23772  0185D0  0EFA               	movlw	-6
 23773  0185D2  2AE3               	incf	plusw1,f,c
 23774  0185D4  E308               	bnc	u6840
 23775  0185D6  0EFB               	movlw	-5
 23776  0185D8  2AE3               	incf	plusw1,f,c
 23777  0185DA  E305               	bnc	u6840
 23778  0185DC  0EFC               	movlw	-4
 23779  0185DE  2AE3               	incf	plusw1,f,c
 23780  0185E0  E302               	bnc	u6840
 23781  0185E2  0EFD               	movlw	-3
 23782  0185E4  2AE3               	incf	plusw1,f,c
 23783  0185E6                     u6840:
 23784                           
 23785                           ;stkvar	_dividend @ sp[(-2)+-8]
 23786  0185E6  0EF6               	movlw	246
 23787  0185E8  24E1               	addwf	fsr1l,w,c
 23788  0185EA  6ED9               	movwf	fsr2l,c
 23789  0185EC  0EFF               	movlw	255
 23790  0185EE  20E2               	addwfc	fsr1h,w,c
 23791  0185F0  6EDA               	movwf	fsr2h,c
 23792                           
 23793                           ;stkvar	?___aomod @ sp[(-2)+-8]
 23794  0185F2  0E08               	movlw	8
 23795  0185F4  6E01               	movwf	btemp^0,c
 23796  0185F6  0EF6               	movlw	-10
 23797  0185F8                     us685999:
 23798  0185F8  006F FF7B FFE3     	movff	postinc2,plusw1
 23799  0185FE  28E8               	incf	wreg,w,c
 23800  018600  2E01               	decfsz	btemp^0,f,c
 23801  018602  D7FA               	bra	us685999
 23802                           
 23803                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 23804  018604  52E5               	movf	postdec1,f,c
 23805  018606  52E5               	movf	postdec1,f,c
 23806  018608  0012               	return		;funcret
 23807  01860A                     __end_of___aomod:
 23808                           	opt callstack 0
 23809                           
 23810 ;; *************** function ___aodiv *****************
 23811 ;; Defined at:
 23812 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 23813 ;; Parameters:    Size  Location     Type
 23814 ;;  dividend        8  [STACK] long long 
 23815 ;;  divisor         8  [STACK] long long 
 23816 ;; Auto vars:     Size  Location     Type
 23817 ;;  quotient        8  [STACK] long long 
 23818 ;;  sign            1  [STACK] unsigned char 
 23819 ;;  counter         1  [STACK] unsigned char 
 23820 ;; Return value:  Size  Location     Type
 23821 ;;                  8  [STACK] long long 
 23822 ;; Registers used:
 23823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 23824 ;; Tracked objects:
 23825 ;;		On entry : 0/2
 23826 ;;		On exit  : 0/0
 23827 ;;		Unchanged: 0/0
 23828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23833 ;;Total ram usage:        0 bytes
 23834 ;; Hardware stack levels used:    1
 23835 ;; Hardware stack levels required when called:   15
 23836 ;; This function calls:
 23837 ;;		Nothing
 23838 ;; This function is called by:
 23839 ;;		_dtoa
 23840 ;; This function uses a reentrant model
 23841 ;;
 23842                           
 23843                           	psect	text84
 23844  017C90                     __ptext84:
 23845                           	opt callstack 0
 23846  017C90                     ___aodiv:
 23847                           	opt callstack 0
 23848                           
 23849                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 23850  017C90  0E0A               	movlw	10
 23851  017C92  26E1               	addwf	fsr1l,f,c
 23852  017C94  0E00               	movlw	0
 23853  017C96  22E2               	addwfc	fsr1h,f,c
 23854                           
 23855                           ;stkvar	_sign @ sp[(-10)+8]
 23856                           
 23857                           ;incstack = 0
 23858 ;; hardware stack exceeded
 23859  017C98  0EFE               	movlw	-2
 23860  017C9A  6AE3               	clrf	plusw1,c
 23861                           
 23862                           ;stkvar	_divisor @ sp[(-10)+-16]
 23863  017C9C  0EED               	movlw	-19
 23864  017C9E  AEE3               	btfss	plusw1,7,c
 23865  017CA0  D028               	goto	l8600
 23866                           
 23867                           ;stkvar	_divisor @ sp[(-10)+-16]
 23868                           ;stkvar	_divisor @ sp[(-10)+-16]
 23869  017CA2  0EE6               	movlw	-26
 23870  017CA4  6CE3               	negf	plusw1,c
 23871  017CA6  0EE7               	movlw	-25
 23872  017CA8  1EE3               	comf	plusw1,f,c
 23873  017CAA  0EE8               	movlw	-24
 23874  017CAC  1EE3               	comf	plusw1,f,c
 23875  017CAE  0EE9               	movlw	-23
 23876  017CB0  1EE3               	comf	plusw1,f,c
 23877  017CB2  0EEA               	movlw	-22
 23878  017CB4  1EE3               	comf	plusw1,f,c
 23879  017CB6  0EEB               	movlw	-21
 23880  017CB8  1EE3               	comf	plusw1,f,c
 23881  017CBA  0EEC               	movlw	-20
 23882  017CBC  1EE3               	comf	plusw1,f,c
 23883  017CBE  0EED               	movlw	-19
 23884  017CC0  1EE3               	comf	plusw1,f,c
 23885  017CC2  E314               	bnc	u6640
 23886  017CC4  0EE7               	movlw	-25
 23887  017CC6  2AE3               	incf	plusw1,f,c
 23888  017CC8  E311               	bnc	u6640
 23889  017CCA  0EE8               	movlw	-24
 23890  017CCC  2AE3               	incf	plusw1,f,c
 23891  017CCE  E30E               	bnc	u6640
 23892  017CD0  0EE9               	movlw	-23
 23893  017CD2  2AE3               	incf	plusw1,f,c
 23894  017CD4  E30B               	bnc	u6640
 23895  017CD6  0EEA               	movlw	-22
 23896  017CD8  2AE3               	incf	plusw1,f,c
 23897  017CDA  E308               	bnc	u6640
 23898  017CDC  0EEB               	movlw	-21
 23899  017CDE  2AE3               	incf	plusw1,f,c
 23900  017CE0  E305               	bnc	u6640
 23901  017CE2  0EEC               	movlw	-20
 23902  017CE4  2AE3               	incf	plusw1,f,c
 23903  017CE6  E302               	bnc	u6640
 23904  017CE8  0EED               	movlw	-19
 23905  017CEA  2AE3               	incf	plusw1,f,c
 23906  017CEC                     u6640:
 23907                           
 23908                           ;stkvar	_sign @ sp[(-10)+8]
 23909  017CEC  0EFE               	movlw	-2
 23910  017CEE  6AE3               	clrf	plusw1,c
 23911  017CF0  2AE3               	incf	plusw1,f,c
 23912  017CF2                     l8600:
 23913                           
 23914                           ;stkvar	_dividend @ sp[(-10)+-8]
 23915  017CF2  0EF5               	movlw	-11
 23916  017CF4  AEE3               	btfss	plusw1,7,c
 23917  017CF6  D027               	goto	l8606
 23918                           
 23919                           ;stkvar	_dividend @ sp[(-10)+-8]
 23920                           ;stkvar	_dividend @ sp[(-10)+-8]
 23921  017CF8  0EEE               	movlw	-18
 23922  017CFA  6CE3               	negf	plusw1,c
 23923  017CFC  0EEF               	movlw	-17
 23924  017CFE  1EE3               	comf	plusw1,f,c
 23925  017D00  0EF0               	movlw	-16
 23926  017D02  1EE3               	comf	plusw1,f,c
 23927  017D04  0EF1               	movlw	-15
 23928  017D06  1EE3               	comf	plusw1,f,c
 23929  017D08  0EF2               	movlw	-14
 23930  017D0A  1EE3               	comf	plusw1,f,c
 23931  017D0C  0EF3               	movlw	-13
 23932  017D0E  1EE3               	comf	plusw1,f,c
 23933  017D10  0EF4               	movlw	-12
 23934  017D12  1EE3               	comf	plusw1,f,c
 23935  017D14  0EF5               	movlw	-11
 23936  017D16  1EE3               	comf	plusw1,f,c
 23937  017D18  E314               	bnc	u6660
 23938  017D1A  0EEF               	movlw	-17
 23939  017D1C  2AE3               	incf	plusw1,f,c
 23940  017D1E  E311               	bnc	u6660
 23941  017D20  0EF0               	movlw	-16
 23942  017D22  2AE3               	incf	plusw1,f,c
 23943  017D24  E30E               	bnc	u6660
 23944  017D26  0EF1               	movlw	-15
 23945  017D28  2AE3               	incf	plusw1,f,c
 23946  017D2A  E30B               	bnc	u6660
 23947  017D2C  0EF2               	movlw	-14
 23948  017D2E  2AE3               	incf	plusw1,f,c
 23949  017D30  E308               	bnc	u6660
 23950  017D32  0EF3               	movlw	-13
 23951  017D34  2AE3               	incf	plusw1,f,c
 23952  017D36  E305               	bnc	u6660
 23953  017D38  0EF4               	movlw	-12
 23954  017D3A  2AE3               	incf	plusw1,f,c
 23955  017D3C  E302               	bnc	u6660
 23956  017D3E  0EF5               	movlw	-11
 23957  017D40  2AE3               	incf	plusw1,f,c
 23958  017D42                     u6660:
 23959                           
 23960                           ;stkvar	_sign @ sp[(-10)+8]
 23961  017D42  0EFE               	movlw	-2
 23962  017D44  70E3               	btg	plusw1,0,c
 23963  017D46                     l8606:
 23964                           
 23965                           ;stkvar	_quotient @ sp[(-10)+0]
 23966  017D46  0E07               	movlw	7
 23967  017D48  6E01               	movwf	btemp^0,c
 23968  017D4A  0EF6               	movlw	-10
 23969  017D4C                     u6671:
 23970  017D4C  6AE3               	clrf	plusw1,c
 23971  017D4E  2AE8               	incf	wreg,f,c
 23972  017D50  0601               	decf	btemp^0,f,c
 23973  017D52  E2FC               	bc	u6671
 23974                           
 23975                           ;stkvar	_divisor @ sp[(-10)+-16]
 23976  017D54  0EE6               	movlw	-26
 23977  017D56  50E3               	movf	plusw1,w,c
 23978  017D58  E116               	bnz	u6680
 23979  017D5A  0EE7               	movlw	-25
 23980  017D5C  50E3               	movf	plusw1,w,c
 23981  017D5E  E113               	bnz	u6680
 23982  017D60  0EE8               	movlw	-24
 23983  017D62  50E3               	movf	plusw1,w,c
 23984  017D64  E110               	bnz	u6680
 23985  017D66  0EE9               	movlw	-23
 23986  017D68  50E3               	movf	plusw1,w,c
 23987  017D6A  E10D               	bnz	u6680
 23988  017D6C  0EEA               	movlw	-22
 23989  017D6E  50E3               	movf	plusw1,w,c
 23990  017D70  E10A               	bnz	u6680
 23991  017D72  0EEB               	movlw	-21
 23992  017D74  50E3               	movf	plusw1,w,c
 23993  017D76  E107               	bnz	u6680
 23994  017D78  0EEC               	movlw	-20
 23995  017D7A  50E3               	movf	plusw1,w,c
 23996  017D7C  E104               	bnz	u6680
 23997  017D7E  0EED               	movlw	-19
 23998  017D80  50E3               	movf	plusw1,w,c
 23999  017D82  B4D8               	btfsc	status,2,c
 24000  017D84  D088               	goto	u6710
 24001  017D86                     u6680:
 24002                           
 24003                           ;stkvar	_counter @ sp[(-10)+9]
 24004  017D86  0EFF               	movlw	-1
 24005  017D88  6AE3               	clrf	plusw1,c
 24006  017D8A  D012               	goto	L30
 24007  017D8C                     l8612:
 24008                           
 24009                           ;stkvar	_divisor @ sp[(-10)+-16]
 24010  017D8C  90D8               	bcf	status,0,c
 24011  017D8E  0EE6               	movlw	-26
 24012  017D90  36E3               	rlcf	plusw1,f,c
 24013  017D92  0EE7               	movlw	-25
 24014  017D94  36E3               	rlcf	plusw1,f,c
 24015  017D96  0EE8               	movlw	-24
 24016  017D98  36E3               	rlcf	plusw1,f,c
 24017  017D9A  0EE9               	movlw	-23
 24018  017D9C  36E3               	rlcf	plusw1,f,c
 24019  017D9E  0EEA               	movlw	-22
 24020  017DA0  36E3               	rlcf	plusw1,f,c
 24021  017DA2  0EEB               	movlw	-21
 24022  017DA4  36E3               	rlcf	plusw1,f,c
 24023  017DA6  0EEC               	movlw	-20
 24024  017DA8  36E3               	rlcf	plusw1,f,c
 24025  017DAA  0EED               	movlw	-19
 24026  017DAC  36E3               	rlcf	plusw1,f,c
 24027                           
 24028                           ;stkvar	_counter @ sp[(-10)+9]
 24029  017DAE  0EFF               	movlw	-1
 24030  017DB0                     L30:
 24031  017DB0  2AE3               	incf	plusw1,f,c
 24032                           
 24033                           ;stkvar	_divisor @ sp[(-10)+-16]
 24034  017DB2  0EED               	movlw	-19
 24035  017DB4  AEE3               	btfss	plusw1,7,c
 24036  017DB6  D7EA               	goto	l8612
 24037  017DB8                     u6690:
 24038                           
 24039                           ;stkvar	_quotient @ sp[(-10)+0]
 24040  017DB8  90D8               	bcf	status,0,c
 24041  017DBA  0EF6               	movlw	-10
 24042  017DBC  36E3               	rlcf	plusw1,f,c
 24043  017DBE  0EF7               	movlw	-9
 24044  017DC0  36E3               	rlcf	plusw1,f,c
 24045  017DC2  0EF8               	movlw	-8
 24046  017DC4  36E3               	rlcf	plusw1,f,c
 24047  017DC6  0EF9               	movlw	-7
 24048  017DC8  36E3               	rlcf	plusw1,f,c
 24049  017DCA  0EFA               	movlw	-6
 24050  017DCC  36E3               	rlcf	plusw1,f,c
 24051  017DCE  0EFB               	movlw	-5
 24052  017DD0  36E3               	rlcf	plusw1,f,c
 24053  017DD2  0EFC               	movlw	-4
 24054  017DD4  36E3               	rlcf	plusw1,f,c
 24055  017DD6  0EFD               	movlw	-3
 24056  017DD8  36E3               	rlcf	plusw1,f,c
 24057                           
 24058                           ;stkvar	_divisor @ sp[(-10)+-16]
 24059                           ;stkvar	_dividend @ sp[(-10)+-8]
 24060  017DDA  50E1               	movf	fsr1l,w,c
 24061  017DDC  0FEE               	addlw	-18
 24062  017DDE  6ED9               	movwf	fsr2l,c
 24063  017DE0  50E2               	movf	fsr1h,w,c
 24064  017DE2  6EDA               	movwf	fsr2h,c
 24065  017DE4  0EFF               	movlw	255
 24066  017DE6  22DA               	addwfc	fsr2h,f,c
 24067  017DE8  0EE6               	movlw	-26
 24068  017DEA  50E3               	movf	plusw1,w,c
 24069  017DEC  5CDE               	subwf	postinc2,w,c
 24070  017DEE  0EE7               	movlw	-25
 24071  017DF0  50E3               	movf	plusw1,w,c
 24072  017DF2  58DE               	subwfb	postinc2,w,c
 24073  017DF4  0EE8               	movlw	-24
 24074  017DF6  50E3               	movf	plusw1,w,c
 24075  017DF8  58DE               	subwfb	postinc2,w,c
 24076  017DFA  0EE9               	movlw	-23
 24077  017DFC  50E3               	movf	plusw1,w,c
 24078  017DFE  58DE               	subwfb	postinc2,w,c
 24079  017E00  0EEA               	movlw	-22
 24080  017E02  50E3               	movf	plusw1,w,c
 24081  017E04  58DE               	subwfb	postinc2,w,c
 24082  017E06  0EEB               	movlw	-21
 24083  017E08  50E3               	movf	plusw1,w,c
 24084  017E0A  58DE               	subwfb	postinc2,w,c
 24085  017E0C  0EEC               	movlw	-20
 24086  017E0E  50E3               	movf	plusw1,w,c
 24087  017E10  58DE               	subwfb	postinc2,w,c
 24088  017E12  0EED               	movlw	-19
 24089  017E14  50E3               	movf	plusw1,w,c
 24090  017E16  58DE               	subwfb	postinc2,w,c
 24091  017E18  A0D8               	btfss	status,0,c
 24092  017E1A  D021               	goto	l8624
 24093                           
 24094                           ;stkvar	_divisor @ sp[(-10)+-16]
 24095                           ;stkvar	_dividend @ sp[(-10)+-8]
 24096  017E1C  50E1               	movf	fsr1l,w,c
 24097  017E1E  0FEE               	addlw	-18
 24098  017E20  6ED9               	movwf	fsr2l,c
 24099  017E22  50E2               	movf	fsr1h,w,c
 24100  017E24  6EDA               	movwf	fsr2h,c
 24101  017E26  0EFF               	movlw	255
 24102  017E28  22DA               	addwfc	fsr2h,f,c
 24103  017E2A  0EE6               	movlw	-26
 24104  017E2C  50E3               	movf	plusw1,w,c
 24105  017E2E  5EDE               	subwf	postinc2,f,c
 24106  017E30  0EE7               	movlw	-25
 24107  017E32  50E3               	movf	plusw1,w,c
 24108  017E34  5ADE               	subwfb	postinc2,f,c
 24109  017E36  0EE8               	movlw	-24
 24110  017E38  50E3               	movf	plusw1,w,c
 24111  017E3A  5ADE               	subwfb	postinc2,f,c
 24112  017E3C  0EE9               	movlw	-23
 24113  017E3E  50E3               	movf	plusw1,w,c
 24114  017E40  5ADE               	subwfb	postinc2,f,c
 24115  017E42  0EEA               	movlw	-22
 24116  017E44  50E3               	movf	plusw1,w,c
 24117  017E46  5ADE               	subwfb	postinc2,f,c
 24118  017E48  0EEB               	movlw	-21
 24119  017E4A  50E3               	movf	plusw1,w,c
 24120  017E4C  5ADE               	subwfb	postinc2,f,c
 24121  017E4E  0EEC               	movlw	-20
 24122  017E50  50E3               	movf	plusw1,w,c
 24123  017E52  5ADE               	subwfb	postinc2,f,c
 24124  017E54  0EED               	movlw	-19
 24125  017E56  50E3               	movf	plusw1,w,c
 24126  017E58  5ADE               	subwfb	postinc2,f,c
 24127                           
 24128                           ;stkvar	_quotient @ sp[(-10)+0]
 24129  017E5A  0EF6               	movlw	-10
 24130  017E5C  80E3               	bsf	plusw1,0,c
 24131  017E5E                     l8624:
 24132                           
 24133                           ;stkvar	_divisor @ sp[(-10)+-16]
 24134  017E5E  90D8               	bcf	status,0,c
 24135  017E60  0EED               	movlw	-19
 24136  017E62  32E3               	rrcf	plusw1,f,c
 24137  017E64  0EEC               	movlw	-20
 24138  017E66  32E3               	rrcf	plusw1,f,c
 24139  017E68  0EEB               	movlw	-21
 24140  017E6A  32E3               	rrcf	plusw1,f,c
 24141  017E6C  0EEA               	movlw	-22
 24142  017E6E  32E3               	rrcf	plusw1,f,c
 24143  017E70  0EE9               	movlw	-23
 24144  017E72  32E3               	rrcf	plusw1,f,c
 24145  017E74  0EE8               	movlw	-24
 24146  017E76  32E3               	rrcf	plusw1,f,c
 24147  017E78  0EE7               	movlw	-25
 24148  017E7A  32E3               	rrcf	plusw1,f,c
 24149  017E7C  0EE6               	movlw	-26
 24150  017E7E  32E3               	rrcf	plusw1,f,c
 24151                           
 24152                           ;stkvar	_counter @ sp[(-10)+9]
 24153  017E80  0EFF               	movlw	-1
 24154  017E82  50E3               	movf	plusw1,w,c
 24155  017E84  6E01               	movwf	btemp^0,c
 24156  017E86  0E01               	movlw	1
 24157  017E88  5E01               	subwf	btemp^0,f,c
 24158  017E8A  0EFF               	movlw	-1
 24159  017E8C  0060  F007  FFE3   	movff	btemp,plusw1
 24160  017E92  A4D8               	btfss	status,2,c
 24161  017E94  D791               	goto	u6690
 24162  017E96                     u6710:
 24163                           
 24164                           ;stkvar	_sign @ sp[(-10)+8]
 24165  017E96  0EFE               	movlw	-2
 24166  017E98  50E3               	movf	plusw1,w,c
 24167  017E9A  B4D8               	btfsc	status,2,c
 24168  017E9C  D025               	goto	u6730
 24169                           
 24170                           ;stkvar	_quotient @ sp[(-10)+0]
 24171                           ;stkvar	_quotient @ sp[(-10)+0]
 24172  017E9E  0EF6               	movlw	-10
 24173  017EA0  6CE3               	negf	plusw1,c
 24174  017EA2  0EF7               	movlw	-9
 24175  017EA4  1EE3               	comf	plusw1,f,c
 24176  017EA6  0EF8               	movlw	-8
 24177  017EA8  1EE3               	comf	plusw1,f,c
 24178  017EAA  0EF9               	movlw	-7
 24179  017EAC  1EE3               	comf	plusw1,f,c
 24180  017EAE  0EFA               	movlw	-6
 24181  017EB0  1EE3               	comf	plusw1,f,c
 24182  017EB2  0EFB               	movlw	-5
 24183  017EB4  1EE3               	comf	plusw1,f,c
 24184  017EB6  0EFC               	movlw	-4
 24185  017EB8  1EE3               	comf	plusw1,f,c
 24186  017EBA  0EFD               	movlw	-3
 24187  017EBC  1EE3               	comf	plusw1,f,c
 24188  017EBE  E314               	bnc	u6730
 24189  017EC0  0EF7               	movlw	-9
 24190  017EC2  2AE3               	incf	plusw1,f,c
 24191  017EC4  E311               	bnc	u6730
 24192  017EC6  0EF8               	movlw	-8
 24193  017EC8  2AE3               	incf	plusw1,f,c
 24194  017ECA  E30E               	bnc	u6730
 24195  017ECC  0EF9               	movlw	-7
 24196  017ECE  2AE3               	incf	plusw1,f,c
 24197  017ED0  E30B               	bnc	u6730
 24198  017ED2  0EFA               	movlw	-6
 24199  017ED4  2AE3               	incf	plusw1,f,c
 24200  017ED6  E308               	bnc	u6730
 24201  017ED8  0EFB               	movlw	-5
 24202  017EDA  2AE3               	incf	plusw1,f,c
 24203  017EDC  E305               	bnc	u6730
 24204  017EDE  0EFC               	movlw	-4
 24205  017EE0  2AE3               	incf	plusw1,f,c
 24206  017EE2  E302               	bnc	u6730
 24207  017EE4  0EFD               	movlw	-3
 24208  017EE6  2AE3               	incf	plusw1,f,c
 24209  017EE8                     u6730:
 24210                           
 24211                           ;stkvar	_quotient @ sp[(-10)+0]
 24212  017EE8  0EF6               	movlw	246
 24213  017EEA  24E1               	addwf	fsr1l,w,c
 24214  017EEC  6ED9               	movwf	fsr2l,c
 24215  017EEE  0EFF               	movlw	255
 24216  017EF0  20E2               	addwfc	fsr1h,w,c
 24217  017EF2  6EDA               	movwf	fsr2h,c
 24218                           
 24219                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 24220  017EF4  0E08               	movlw	8
 24221  017EF6  6E01               	movwf	btemp^0,c
 24222  017EF8  0EEE               	movlw	-18
 24223  017EFA                     us674999:
 24224  017EFA  006F FF7B FFE3     	movff	postinc2,plusw1
 24225  017F00  28E8               	incf	wreg,w,c
 24226  017F02  2E01               	decfsz	btemp^0,f,c
 24227  017F04  D7FA               	bra	us674999
 24228                           
 24229                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 24230  017F06  0EF6               	movlw	246
 24231  017F08  26E1               	addwf	fsr1l,f,c
 24232  017F0A  0EFF               	movlw	255
 24233  017F0C  22E2               	addwfc	fsr1h,f,c
 24234  017F0E  0012               	return		;funcret
 24235  017F10                     __end_of___aodiv:
 24236                           	opt callstack 0
 24237                           
 24238 ;; *************** function _ctoa *****************
 24239 ;; Defined at:
 24240 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 24241 ;; Parameters:    Size  Location     Type
 24242 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24243 ;;		 -> f(6), NULL(0), 
 24244 ;;  c               1  [STACK] unsigned char 
 24245 ;; Auto vars:     Size  Location     Type
 24246 ;;  w               2  [STACK] int 
 24247 ;;  l               2    0        int 
 24248 ;; Return value:  Size  Location     Type
 24249 ;;                  2  [STACK] int 
 24250 ;; Registers used:
 24251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 24252 ;; Tracked objects:
 24253 ;;		On entry : 0/0
 24254 ;;		On exit  : 0/0
 24255 ;;		Unchanged: 0/0
 24256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24261 ;;Total ram usage:        0 bytes
 24262 ;; Hardware stack levels used:    1
 24263 ;; Hardware stack levels required when called:   20
 24264 ;; This function calls:
 24265 ;;		_pad
 24266 ;; This function is called by:
 24267 ;;		_vfpfcnvrt
 24268 ;; This function uses a reentrant model
 24269 ;;
 24270                           
 24271                           	psect	text85
 24272  01B76E                     __ptext85:
 24273                           	opt callstack 0
 24274  01B76E                     _ctoa:
 24275                           	opt callstack 0
 24276                           
 24277                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24278  01B76E  52E6               	movf	postinc1,f,c
 24279  01B770  52E6               	movf	postinc1,f,c
 24280                           
 24281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 24282                           
 24283                           ;incstack = 0
 24284 ;; hardware stack exceeded
 24285  01B772  503A               	movf	_width^0,w,c
 24286  01B774  103B               	iorwf	(_width+1)^0,w,c
 24287  01B776  A4D8               	btfss	status,2,c
 24288  01B778  D009               	goto	l12730
 24289                           
 24290                           ;stkvar	_w @ sp[(-2)+0]
 24291  01B77A  0EFE               	movlw	-2
 24292  01B77C  0060  F0EB  FFE3   	movff	_width,plusw1
 24293  01B782  0EFF               	movlw	-1
 24294  01B784  0060  F0EF  FFE3   	movff	_width+1,plusw1
 24295  01B78A  D016               	goto	l12732
 24296  01B78C                     l12730:
 24297  01B78C  0EFF               	movlw	255
 24298  01B78E  6E0B               	movwf	(btemp+10)^0,c
 24299  01B790  0EFF               	movlw	255
 24300  01B792  6E0C               	movwf	(btemp+11)^0,c
 24301  01B794  0060  F0E8  F009   	movff	_width,btemp+8
 24302  01B79A  0060  F0EC  F00A   	movff	_width+1,btemp+9
 24303  01B7A0  500B               	movf	(btemp+10)^0,w,c
 24304  01B7A2  2609               	addwf	(btemp+8)^0,f,c
 24305  01B7A4  500C               	movf	(btemp+11)^0,w,c
 24306  01B7A6  220A               	addwfc	(btemp+9)^0,f,c
 24307                           
 24308                           ;stkvar	_w @ sp[(-2)+0]
 24309  01B7A8  0EFE               	movlw	-2
 24310  01B7AA  0060  F027  FFE3   	movff	btemp+8,plusw1
 24311  01B7B0  0EFF               	movlw	-1
 24312  01B7B2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 24313  01B7B8                     l12732:
 24314                           
 24315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 24316                           ;stkvar	_c @ sp[(-2)+-3]
 24317  01B7B8  0EFB               	movlw	-5
 24318  01B7BA  006F FF8C  F297    	movff	plusw1,_dbuf
 24319                           
 24320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 24321  01B7C0  0102               	movlb	2	; () banked
 24322  01B7C2  6B98               	clrf	(_dbuf+1)& (0+255),b
 24323                           
 24324                           ; BSR set to: 2
 24325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 24326                           ;stkvar	_w @ sp[(-2)+0]
 24327  01B7C4  0EFE               	movlw	-2
 24328  01B7C6  006F FF8F FFE6     	movff	plusw1,postinc1
 24329  01B7CC  006F FF8F FFE6     	movff	plusw1,postinc1
 24330  01B7D2  0E97               	movlw	low _dbuf
 24331  01B7D4  6EE6               	movwf	postinc1,c
 24332  01B7D6  0E02               	movlw	high _dbuf
 24333  01B7D8  6EE6               	movwf	postinc1,c
 24334                           
 24335                           ;stkvar	_fp @ sp[(-6)+-2]
 24336  01B7DA  0EF8               	movlw	-8
 24337  01B7DC  006F FF8F FFE6     	movff	plusw1,postinc1
 24338  01B7E2  006F FF8F FFE6     	movff	plusw1,postinc1
 24339  01B7E8  EC0A  F0D2         	call	_pad	;wreg free
 24340                           
 24341                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 24342  01B7EC  0EFB               	movlw	251
 24343  01B7EE  26E1               	addwf	fsr1l,f,c
 24344  01B7F0  0EFF               	movlw	255
 24345  01B7F2  22E2               	addwfc	fsr1h,f,c
 24346  01B7F4  0012               	return		;funcret
 24347  01B7F6                     __end_of_ctoa:
 24348                           	opt callstack 0
 24349                           
 24350 ;; *************** function _pad *****************
 24351 ;; Defined at:
 24352 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 24353 ;; Parameters:    Size  Location     Type
 24354 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24355 ;;		 -> f(6), NULL(0), 
 24356 ;;  buf             2  [STACK] PTR unsigned char 
 24357 ;;		 -> dbuf(80), 
 24358 ;;  p               2  [STACK] int 
 24359 ;; Auto vars:     Size  Location     Type
 24360 ;;  w               2  [STACK] int 
 24361 ;;  i               2  [STACK] int 
 24362 ;; Return value:  Size  Location     Type
 24363 ;;                  2  [STACK] int 
 24364 ;; Registers used:
 24365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 24366 ;; Tracked objects:
 24367 ;;		On entry : 0/2
 24368 ;;		On exit  : 0/0
 24369 ;;		Unchanged: 0/0
 24370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24375 ;;Total ram usage:        0 bytes
 24376 ;; Hardware stack levels used:    1
 24377 ;; Hardware stack levels required when called:   19
 24378 ;; This function calls:
 24379 ;;		_fputc
 24380 ;;		_fputs
 24381 ;;		_strlen
 24382 ;; This function is called by:
 24383 ;;		_ctoa
 24384 ;;		_dtoa
 24385 ;;		_efgtoa
 24386 ;;		_utoa
 24387 ;;		_xtoa
 24388 ;; This function uses a reentrant model
 24389 ;;
 24390                           
 24391                           	psect	text86
 24392  01A414                     __ptext86:
 24393                           	opt callstack 0
 24394  01A414                     _pad:
 24395                           	opt callstack 0
 24396                           
 24397                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24398  01A414  52E6               	movf	postinc1,f,c
 24399  01A416  52E6               	movf	postinc1,f,c
 24400  01A418  52E6               	movf	postinc1,f,c
 24401  01A41A  52E6               	movf	postinc1,f,c
 24402                           
 24403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 24404                           
 24405                           ;incstack = 0
 24406 ;; hardware stack exceeded
 24407  01A41C  A03E               	btfss	_flags^0,0,c
 24408  01A41E  D010               	goto	l12692
 24409                           
 24410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 24411                           ;stkvar	_fp @ sp[(-4)+-2]
 24412  01A420  0EFA               	movlw	-6
 24413  01A422  006F FF8F FFE6     	movff	plusw1,postinc1
 24414  01A428  006F FF8F FFE6     	movff	plusw1,postinc1
 24415                           
 24416                           ;stkvar	_buf @ sp[(-6)+-4]
 24417  01A42E  0EF6               	movlw	-10
 24418  01A430  006F FF8F FFE6     	movff	plusw1,postinc1
 24419  01A436  006F FF8F FFE6     	movff	plusw1,postinc1
 24420  01A43C  EC92  F0DA         	call	_fputs	;wreg free
 24421  01A440                     l12692:
 24422                           
 24423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 24424                           ;stkvar	_p @ sp[(-4)+-6]
 24425  01A440  0EF7               	movlw	-9
 24426  01A442  BEE3               	btfsc	plusw1,7,c
 24427  01A444  D011               	goto	l12696
 24428                           
 24429                           ;stkvar	_p @ sp[(-4)+-6]
 24430                           ;stkvar	_w @ sp[(-4)+0]
 24431  01A446  0EF6               	movlw	-10
 24432  01A448  006F FF8C  F001    	movff	plusw1,btemp
 24433  01A44E  0EFC               	movlw	-4
 24434  01A450  0060  F007  FFE3   	movff	btemp,plusw1
 24435  01A456  0EF7               	movlw	-9
 24436  01A458  006F FF8C  F001    	movff	plusw1,btemp
 24437  01A45E  0EFD               	movlw	-3
 24438  01A460  0060  F007  FFE3   	movff	btemp,plusw1
 24439  01A466  D004               	goto	l2290
 24440  01A468                     l12696:
 24441                           
 24442                           ;stkvar	_w @ sp[(-4)+0]
 24443  01A468  0EFC               	movlw	-4
 24444  01A46A  6AE3               	clrf	plusw1,c
 24445  01A46C  0EFD               	movlw	-3
 24446  01A46E  6AE3               	clrf	plusw1,c
 24447  01A470                     l2290:
 24448                           
 24449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 24450                           ;stkvar	_i @ sp[(-4)+2]
 24451  01A470  0EFE               	movlw	-2
 24452  01A472  6AE3               	clrf	plusw1,c
 24453  01A474  0EFF               	movlw	-1
 24454  01A476  6AE3               	clrf	plusw1,c
 24455                           
 24456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 24457  01A478  D01E               	goto	l12702
 24458  01A47A                     l12698:
 24459                           
 24460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 24461                           ;stkvar	_fp @ sp[(-4)+-2]
 24462  01A47A  0EFA               	movlw	-6
 24463  01A47C  006F FF8F FFE6     	movff	plusw1,postinc1
 24464  01A482  006F FF8F FFE6     	movff	plusw1,postinc1
 24465  01A488  0E20               	movlw	32
 24466  01A48A  6EE6               	movwf	postinc1,c
 24467  01A48C  0E00               	movlw	0
 24468  01A48E  6EE6               	movwf	postinc1,c
 24469  01A490  EC60  F0D0         	call	_fputc	;wreg free
 24470                           
 24471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 24472                           ;stkvar	_i @ sp[(-4)+2]
 24473  01A494  0EFE               	movlw	-2
 24474  01A496  50E3               	movf	plusw1,w,c
 24475  01A498  0F01               	addlw	1
 24476  01A49A  6E01               	movwf	btemp^0,c
 24477  01A49C  0EFE               	movlw	-2
 24478  01A49E  0060  F007  FFE3   	movff	btemp,plusw1
 24479  01A4A4  6A01               	clrf	btemp^0,c
 24480  01A4A6  0EFF               	movlw	-1
 24481  01A4A8  50E3               	movf	plusw1,w,c
 24482  01A4AA  2001               	addwfc	btemp^0,w,c
 24483  01A4AC  6E01               	movwf	btemp^0,c
 24484  01A4AE  0EFF               	movlw	-1
 24485  01A4B0  0060  F007  FFE3   	movff	btemp,plusw1
 24486  01A4B6                     l12702:
 24487                           
 24488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 24489                           ;stkvar	_w @ sp[(-4)+0]
 24490                           ;stkvar	_i @ sp[(-4)+2]
 24491  01A4B6  50E1               	movf	fsr1l,w,c
 24492  01A4B8  0FFE               	addlw	-2
 24493  01A4BA  6ED9               	movwf	fsr2l,c
 24494  01A4BC  50E2               	movf	fsr1h,w,c
 24495  01A4BE  6EDA               	movwf	fsr2h,c
 24496  01A4C0  0EFF               	movlw	255
 24497  01A4C2  22DA               	addwfc	fsr2h,f,c
 24498  01A4C4  0EFC               	movlw	-4
 24499  01A4C6  50E3               	movf	plusw1,w,c
 24500  01A4C8  5CDE               	subwf	postinc2,w,c
 24501  01A4CA  50DE               	movf	postinc2,w,c
 24502  01A4CC  0A80               	xorlw	128
 24503  01A4CE  6E01               	movwf	btemp^0,c
 24504  01A4D0  0EFD               	movlw	-3
 24505  01A4D2  50E3               	movf	plusw1,w,c
 24506  01A4D4  0A80               	xorlw	128
 24507  01A4D6  5801               	subwfb	btemp^0,w,c
 24508  01A4D8  A0D8               	btfss	status,0,c
 24509  01A4DA  D7CF               	goto	l12698
 24510                           
 24511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 24512  01A4DC  B03E               	btfsc	_flags^0,0,c
 24513  01A4DE  D010               	goto	l12706
 24514                           
 24515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 24516                           ;stkvar	_fp @ sp[(-4)+-2]
 24517  01A4E0  0EFA               	movlw	-6
 24518  01A4E2  006F FF8F FFE6     	movff	plusw1,postinc1
 24519  01A4E8  006F FF8F FFE6     	movff	plusw1,postinc1
 24520                           
 24521                           ;stkvar	_buf @ sp[(-6)+-4]
 24522  01A4EE  0EF6               	movlw	-10
 24523  01A4F0  006F FF8F FFE6     	movff	plusw1,postinc1
 24524  01A4F6  006F FF8F FFE6     	movff	plusw1,postinc1
 24525  01A4FC  EC92  F0DA         	call	_fputs	;wreg free
 24526  01A500                     l12706:
 24527                           
 24528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 24529                           ;stkvar	_w @ sp[(-4)+0]
 24530                           ;stkvar	_buf @ sp[(-4)+-4]
 24531  01A500  0EF8               	movlw	-8
 24532  01A502  006F FF8F FFE6     	movff	plusw1,postinc1
 24533  01A508  006F FF8F FFE6     	movff	plusw1,postinc1
 24534  01A50E  EC41  F0DA         	call	_strlen	;wreg free
 24535  01A512  0EFC               	movlw	-4
 24536  01A514  50E3               	movf	plusw1,w,c
 24537  01A516  2601               	addwf	btemp^0,f,c
 24538  01A518  0EFD               	movlw	-3
 24539  01A51A  50E3               	movf	plusw1,w,c
 24540  01A51C  2202               	addwfc	(btemp+1)^0,f,c
 24541                           
 24542                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 24543  01A51E  0EF6               	movlw	246
 24544  01A520  26E1               	addwf	fsr1l,f,c
 24545  01A522  0EFF               	movlw	255
 24546  01A524  22E2               	addwfc	fsr1h,f,c
 24547  01A526  0012               	return		;funcret
 24548  01A528                     __end_of_pad:
 24549                           	opt callstack 0
 24550                           
 24551 ;; *************** function _strlen *****************
 24552 ;; Defined at:
 24553 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 24554 ;; Parameters:    Size  Location     Type
 24555 ;;  s               2  [STACK] PTR const unsigned char 
 24556 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 24557 ;;		 -> spin(120), STR_63(9), STR_62(12), D.lcd(480), 
 24558 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 24559 ;;		 -> V(192), 
 24560 ;; Auto vars:     Size  Location     Type
 24561 ;;  a               2  [STACK] PTR const unsigned char 
 24562 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 24563 ;;		 -> spin(120), STR_63(9), STR_62(12), D.lcd(480), 
 24564 ;;		 -> D(482), T(144), port_data(512), STR_3(5), 
 24565 ;;		 -> V(192), 
 24566 ;; Return value:  Size  Location     Type
 24567 ;;                  2  [STACK] unsigned int 
 24568 ;; Registers used:
 24569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 24570 ;; Tracked objects:
 24571 ;;		On entry : 0/0
 24572 ;;		On exit  : 0/0
 24573 ;;		Unchanged: 0/0
 24574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24579 ;;Total ram usage:        0 bytes
 24580 ;; Hardware stack levels used:    1
 24581 ;; Hardware stack levels required when called:   15
 24582 ;; This function calls:
 24583 ;;		Nothing
 24584 ;; This function is called by:
 24585 ;;		_eaDogM_WriteString
 24586 ;;		_spinners
 24587 ;;		_calc_bsoc
 24588 ;;		_pad
 24589 ;;		_stoa
 24590 ;; This function uses a reentrant model
 24591 ;;
 24592                           
 24593                           	psect	text87
 24594  01B482                     __ptext87:
 24595                           	opt callstack 0
 24596  01B482                     _strlen:
 24597                           	opt callstack 0
 24598                           
 24599                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24600  01B482  52E6               	movf	postinc1,f,c
 24601  01B484  52E6               	movf	postinc1,f,c
 24602                           
 24603                           ;stkvar	_s @ sp[(-2)+-2]
 24604                           
 24605                           ;incstack = 0
 24606 ;; hardware stack exceeded
 24607  01B486  0EFC               	movlw	-4
 24608  01B488  006F FF8C  F00B    	movff	plusw1,btemp+10
 24609  01B48E  0EFD               	movlw	-3
 24610  01B490  006F FF8C  F00C    	movff	plusw1,btemp+11
 24611                           
 24612                           ;stkvar	_a @ sp[(-2)+0]
 24613  01B496  0EFF               	movlw	-1
 24614  01B498  0060  F033  FFE3   	movff	btemp+11,plusw1
 24615  01B49E  0EFE               	movlw	-2
 24616  01B4A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 24617  01B4A6  D011               	goto	l8176
 24618  01B4A8                     l8174:
 24619                           
 24620                           ;stkvar	_s @ sp[(-2)+-2]
 24621  01B4A8  0EFC               	movlw	-4
 24622  01B4AA  50E3               	movf	plusw1,w,c
 24623  01B4AC  0F01               	addlw	1
 24624  01B4AE  6E01               	movwf	btemp^0,c
 24625  01B4B0  0EFC               	movlw	-4
 24626  01B4B2  0060  F007  FFE3   	movff	btemp,plusw1
 24627  01B4B8  6A01               	clrf	btemp^0,c
 24628  01B4BA  0EFD               	movlw	-3
 24629  01B4BC  50E3               	movf	plusw1,w,c
 24630  01B4BE  2001               	addwfc	btemp^0,w,c
 24631  01B4C0  6E01               	movwf	btemp^0,c
 24632  01B4C2  0EFD               	movlw	-3
 24633  01B4C4  0060  F007  FFE3   	movff	btemp,plusw1
 24634  01B4CA                     l8176:
 24635                           
 24636                           ;stkvar	_s @ sp[(-2)+-2]
 24637  01B4CA  0EFC               	movlw	-4
 24638  01B4CC  006F FF8F FFF6     	movff	plusw1,tblptrl
 24639  01B4D2  0EFD               	movlw	-3
 24640  01B4D4  006F FF8F FFF7     	movff	plusw1,tblptrh
 24641  01B4DA  0E00               	movlw	low (__mediumconst shr (0+16))
 24642  01B4DC  6EF8               	movwf	tblptru,c
 24643  01B4DE  0E1F               	movlw	(high __ramtop+-1)
 24644  01B4E0  64F7               	cpfsgt	tblptrh,c
 24645  01B4E2  D003               	bra	u5757
 24646  01B4E4  0008               	tblrd		*
 24647  01B4E6  50F5               	movf	tablat,w,c
 24648  01B4E8  D007               	bra	u5750
 24649  01B4EA                     u5757:
 24650  01B4EA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 24651  01B4F0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 24652  01B4F6  50EF               	movf	indf0,w,c
 24653  01B4F8                     u5750:
 24654  01B4F8  0900               	iorlw	0
 24655  01B4FA  A4D8               	btfss	status,2,c
 24656  01B4FC  D7D5               	goto	l8174
 24657                           
 24658                           ;stkvar	_a @ sp[(-2)+0]
 24659                           ;stkvar	_s @ sp[(-2)+-2]
 24660  01B4FE  0EFC               	movlw	-4
 24661  01B500  006F FF8C  F001    	movff	plusw1,btemp
 24662  01B506  0EFD               	movlw	-3
 24663  01B508  006F FF8C  F002    	movff	plusw1,btemp+1
 24664  01B50E  0EFE               	movlw	-2
 24665  01B510  50E3               	movf	plusw1,w,c
 24666  01B512  5E01               	subwf	btemp^0,f,c
 24667  01B514  0EFF               	movlw	-1
 24668  01B516  50E3               	movf	plusw1,w,c
 24669  01B518  5A02               	subwfb	(btemp+1)^0,f,c
 24670                           
 24671                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 24672  01B51A  52E5               	movf	postdec1,f,c
 24673  01B51C  52E5               	movf	postdec1,f,c
 24674  01B51E  52E5               	movf	postdec1,f,c
 24675  01B520  52E5               	movf	postdec1,f,c
 24676  01B522  0012               	return		;funcret
 24677  01B524                     __end_of_strlen:
 24678                           	opt callstack 0
 24679                           
 24680 ;; *************** function _fputs *****************
 24681 ;; Defined at:
 24682 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 24683 ;; Parameters:    Size  Location     Type
 24684 ;;  s               2  [STACK] PTR const unsigned char 
 24685 ;;		 -> dbuf(80), 
 24686 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24687 ;;		 -> f(6), NULL(0), 
 24688 ;; Auto vars:     Size  Location     Type
 24689 ;;  i               2  [STACK] int 
 24690 ;;  c               1  [STACK] unsigned char 
 24691 ;; Return value:  Size  Location     Type
 24692 ;;                  2  [STACK] int 
 24693 ;; Registers used:
 24694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 24695 ;; Tracked objects:
 24696 ;;		On entry : 0/2
 24697 ;;		On exit  : 0/0
 24698 ;;		Unchanged: 0/0
 24699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24704 ;;Total ram usage:        0 bytes
 24705 ;; Hardware stack levels used:    1
 24706 ;; Hardware stack levels required when called:   18
 24707 ;; This function calls:
 24708 ;;		_fputc
 24709 ;; This function is called by:
 24710 ;;		_pad
 24711 ;; This function uses a reentrant model
 24712 ;;
 24713                           
 24714                           	psect	text88
 24715  01B524                     __ptext88:
 24716                           	opt callstack 0
 24717  01B524                     _fputs:
 24718                           	opt callstack 0
 24719                           
 24720                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24721  01B524  52E6               	movf	postinc1,f,c
 24722  01B526  52E6               	movf	postinc1,f,c
 24723  01B528  52E6               	movf	postinc1,f,c
 24724                           
 24725                           ;stkvar	_i @ sp[(-3)+0]
 24726                           
 24727                           ;incstack = 0
 24728 ;; hardware stack exceeded
 24729  01B52A  0EFD               	movlw	-3
 24730  01B52C  6AE3               	clrf	plusw1,c
 24731  01B52E  0EFE               	movlw	-2
 24732  01B530  6AE3               	clrf	plusw1,c
 24733  01B532  D01F               	goto	l12644
 24734  01B534                     l12640:
 24735                           
 24736                           ;stkvar	_fp @ sp[(-3)+-4]
 24737  01B534  0EF9               	movlw	-7
 24738  01B536  006F FF8F FFE6     	movff	plusw1,postinc1
 24739  01B53C  006F FF8F FFE6     	movff	plusw1,postinc1
 24740                           
 24741                           ;stkvar	_c @ sp[(-5)+2]
 24742  01B542  0EFD               	movlw	-3
 24743  01B544  50E3               	movf	plusw1,w,c
 24744  01B546  6EE6               	movwf	postinc1,c
 24745  01B548  0E00               	movlw	0
 24746  01B54A  6EE6               	movwf	postinc1,c
 24747  01B54C  EC60  F0D0         	call	_fputc	;wreg free
 24748                           
 24749                           ;stkvar	_i @ sp[(-3)+0]
 24750  01B550  0EFD               	movlw	-3
 24751  01B552  50E3               	movf	plusw1,w,c
 24752  01B554  0F01               	addlw	1
 24753  01B556  6E01               	movwf	btemp^0,c
 24754  01B558  0EFD               	movlw	-3
 24755  01B55A  0060  F007  FFE3   	movff	btemp,plusw1
 24756  01B560  6A01               	clrf	btemp^0,c
 24757  01B562  0EFE               	movlw	-2
 24758  01B564  50E3               	movf	plusw1,w,c
 24759  01B566  2001               	addwfc	btemp^0,w,c
 24760  01B568  6E01               	movwf	btemp^0,c
 24761  01B56A  0EFE               	movlw	-2
 24762  01B56C  0060  F007  FFE3   	movff	btemp,plusw1
 24763  01B572                     l12644:
 24764                           
 24765                           ;stkvar	_i @ sp[(-3)+0]
 24766  01B572  0EFD               	movlw	-3
 24767  01B574  006F FF8C  F00B    	movff	plusw1,btemp+10
 24768  01B57A  0EFE               	movlw	-2
 24769  01B57C  006F FF8C  F00C    	movff	plusw1,btemp+11
 24770                           
 24771                           ;stkvar	_s @ sp[(-3)+-2]
 24772  01B582  0EFB               	movlw	-5
 24773  01B584  006F FF8C  F009    	movff	plusw1,btemp+8
 24774  01B58A  0EFC               	movlw	-4
 24775  01B58C  006F FF8C  F00A    	movff	plusw1,btemp+9
 24776  01B592  500B               	movf	(btemp+10)^0,w,c
 24777  01B594  2409               	addwf	(btemp+8)^0,w,c
 24778  01B596  6ED9               	movwf	fsr2l,c
 24779  01B598  500C               	movf	(btemp+11)^0,w,c
 24780  01B59A  200A               	addwfc	(btemp+9)^0,w,c
 24781  01B59C  6EDA               	movwf	fsr2h,c
 24782  01B59E  50DF               	movf	indf2,w,c
 24783  01B5A0  6E0C               	movwf	(btemp+11)^0,c
 24784                           
 24785                           ;stkvar	_c @ sp[(-3)+2]
 24786  01B5A2  0EFF               	movlw	-1
 24787  01B5A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 24788  01B5AA  0EFF               	movlw	-1
 24789  01B5AC  50E3               	movf	plusw1,w,c
 24790  01B5AE  A4D8               	btfss	status,2,c
 24791  01B5B0  D7C1               	goto	l12640
 24792                           
 24793                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 24794  01B5B2  0EF9               	movlw	249
 24795  01B5B4  26E1               	addwf	fsr1l,f,c
 24796  01B5B6  0EFF               	movlw	255
 24797  01B5B8  22E2               	addwfc	fsr1h,f,c
 24798  01B5BA  0012               	return		;funcret
 24799  01B5BC                     __end_of_fputs:
 24800                           	opt callstack 0
 24801                           
 24802 ;; *************** function _fputc *****************
 24803 ;; Defined at:
 24804 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 24805 ;; Parameters:    Size  Location     Type
 24806 ;;  c               2  [STACK] int 
 24807 ;;  fp              2  [STACK] PTR struct _IO_FILE
 24808 ;;		 -> f(6), NULL(0), 
 24809 ;; Auto vars:     Size  Location     Type
 24810 ;;		None
 24811 ;; Return value:  Size  Location     Type
 24812 ;;                  2  [STACK] int 
 24813 ;; Registers used:
 24814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 24815 ;; Tracked objects:
 24816 ;;		On entry : 0/0
 24817 ;;		On exit  : 0/0
 24818 ;;		Unchanged: 0/0
 24819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24824 ;;Total ram usage:        0 bytes
 24825 ;; Hardware stack levels used:    1
 24826 ;; Hardware stack levels required when called:   17
 24827 ;; This function calls:
 24828 ;;		_putch
 24829 ;; This function is called by:
 24830 ;;		_pad
 24831 ;;		_stoa
 24832 ;;		_vfpfcnvrt
 24833 ;;		_fputs
 24834 ;; This function uses a reentrant model
 24835 ;;
 24836                           
 24837                           	psect	text89
 24838  01A0C0                     __ptext89:
 24839                           	opt callstack 0
 24840  01A0C0                     _fputc:
 24841                           	opt callstack 0
 24842                           
 24843                           ;stkvar	_fp @ sp[(0)+-4]
 24844                           
 24845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24846                           ;incstack = 0
 24847 ;; hardware stack exceeded
 24848  01A0C0  0EFC               	movlw	-4
 24849  01A0C2  006F FF8C  F001    	movff	plusw1,btemp
 24850  01A0C8  0EFD               	movlw	-3
 24851  01A0CA  50E3               	movf	plusw1,w,c
 24852  01A0CC  1001               	iorwf	btemp^0,w,c
 24853  01A0CE  B4D8               	btfsc	status,2,c
 24854  01A0D0  D009               	goto	u11410
 24855                           
 24856                           ;stkvar	_fp @ sp[(0)+-4]
 24857  01A0D2  0EFC               	movlw	-4
 24858  01A0D4  006F FF8C  F001    	movff	plusw1,btemp
 24859  01A0DA  0EFD               	movlw	-3
 24860  01A0DC  50E3               	movf	plusw1,w,c
 24861  01A0DE  1001               	iorwf	btemp^0,w,c
 24862  01A0E0  A4D8               	btfss	status,2,c
 24863  01A0E2  D006               	goto	l12628
 24864  01A0E4                     u11410:
 24865                           
 24866                           ;stkvar	_c @ sp[(0)+-2]
 24867  01A0E4  0EFE               	movlw	-2
 24868  01A0E6  50E3               	movf	plusw1,w,c
 24869  01A0E8  6EE6               	movwf	postinc1,c
 24870  01A0EA  ECE2  F0E6         	call	_putch	;wreg free
 24871  01A0EE  D075               	goto	l3336
 24872  01A0F0                     l12628:
 24873                           
 24874                           ;stkvar	_fp @ sp[(0)+-4]
 24875  01A0F0  0EFC               	movlw	-4
 24876  01A0F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 24877  01A0F8  0EFD               	movlw	-3
 24878  01A0FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 24879  01A100  0E04               	movlw	4
 24880  01A102  240B               	addwf	(btemp+10)^0,w,c
 24881  01A104  6ED9               	movwf	fsr2l,c
 24882  01A106  0E00               	movlw	0
 24883  01A108  200C               	addwfc	(btemp+11)^0,w,c
 24884  01A10A  6EDA               	movwf	fsr2h,c
 24885  01A10C  50DE               	movf	postinc2,w,c
 24886  01A10E  10DE               	iorwf	postinc2,w,c
 24887  01A110  B4D8               	btfsc	status,2,c
 24888  01A112  D026               	goto	u11430
 24889                           
 24890                           ;stkvar	_fp @ sp[(0)+-4]
 24891  01A114  0EFC               	movlw	-4
 24892  01A116  006F FF8C  F00B    	movff	plusw1,btemp+10
 24893  01A11C  0EFD               	movlw	-3
 24894  01A11E  006F FF8C  F00C    	movff	plusw1,btemp+11
 24895  01A124  0E04               	movlw	4
 24896  01A126  240B               	addwf	(btemp+10)^0,w,c
 24897  01A128  6ED9               	movwf	fsr2l,c
 24898  01A12A  0E00               	movlw	0
 24899  01A12C  200C               	addwfc	(btemp+11)^0,w,c
 24900  01A12E  6EDA               	movwf	fsr2h,c
 24901                           
 24902                           ;stkvar	_fp @ sp[(0)+-4]
 24903  01A130  0EFC               	movlw	-4
 24904  01A132  006F FF8C  F00B    	movff	plusw1,btemp+10
 24905  01A138  0EFD               	movlw	-3
 24906  01A13A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24907  01A140  0E02               	movlw	2
 24908  01A142  240B               	addwf	(btemp+10)^0,w,c
 24909  01A144  6EE9               	movwf	fsr0l,c
 24910  01A146  0E00               	movlw	0
 24911  01A148  200C               	addwfc	(btemp+11)^0,w,c
 24912  01A14A  6EEA               	movwf	fsr0h,c
 24913  01A14C  50DE               	movf	postinc2,w,c
 24914  01A14E  5CEE               	subwf	postinc0,w,c
 24915  01A150  50EE               	movf	postinc0,w,c
 24916  01A152  0A80               	xorlw	128
 24917  01A154  6E01               	movwf	btemp^0,c
 24918  01A156  50DE               	movf	postinc2,w,c
 24919  01A158  0A80               	xorlw	128
 24920  01A15A  5801               	subwfb	btemp^0,w,c
 24921  01A15C  B0D8               	btfsc	status,0,c
 24922  01A15E  D03D               	goto	l3336
 24923  01A160                     u11430:
 24924                           
 24925                           ;stkvar	_c @ sp[(0)+-2]
 24926                           ;stkvar	_fp @ sp[(0)+-4]
 24927  01A160  0EFC               	movlw	-4
 24928  01A162  006F FF8C  F00B    	movff	plusw1,btemp+10
 24929  01A168  0EFD               	movlw	-3
 24930  01A16A  006F FF8C  F00C    	movff	plusw1,btemp+11
 24931  01A170  0E02               	movlw	2
 24932  01A172  240B               	addwf	(btemp+10)^0,w,c
 24933  01A174  6ED9               	movwf	fsr2l,c
 24934  01A176  0E00               	movlw	0
 24935  01A178  200C               	addwfc	(btemp+11)^0,w,c
 24936  01A17A  6EDA               	movwf	fsr2h,c
 24937  01A17C  006F FF78  F00B    	movff	postinc2,btemp+10
 24938  01A182  006F FF74  F00C    	movff	postdec2,btemp+11
 24939                           
 24940                           ;stkvar	_fp @ sp[(0)+-4]
 24941  01A188  0EFC               	movlw	-4
 24942  01A18A  006F FF8F FFD9     	movff	plusw1,fsr2l
 24943  01A190  0EFD               	movlw	-3
 24944  01A192  006F FF8F FFDA     	movff	plusw1,fsr2h
 24945  01A198  006F FF78  F009    	movff	postinc2,btemp+8
 24946  01A19E  006F FF74  F00A    	movff	postdec2,btemp+9
 24947  01A1A4  500B               	movf	(btemp+10)^0,w,c
 24948  01A1A6  2409               	addwf	(btemp+8)^0,w,c
 24949  01A1A8  6ED9               	movwf	fsr2l,c
 24950  01A1AA  500C               	movf	(btemp+11)^0,w,c
 24951  01A1AC  200A               	addwfc	(btemp+9)^0,w,c
 24952  01A1AE  6EDA               	movwf	fsr2h,c
 24953  01A1B0  0EFE               	movlw	-2
 24954  01A1B2  006F FF8F FFDF     	movff	plusw1,indf2
 24955                           
 24956                           ;stkvar	_fp @ sp[(0)+-4]
 24957  01A1B8  0EFC               	movlw	-4
 24958  01A1BA  006F FF8C  F00B    	movff	plusw1,btemp+10
 24959  01A1C0  0EFD               	movlw	-3
 24960  01A1C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 24961  01A1C8  0E02               	movlw	2
 24962  01A1CA  240B               	addwf	(btemp+10)^0,w,c
 24963  01A1CC  6ED9               	movwf	fsr2l,c
 24964  01A1CE  0E00               	movlw	0
 24965  01A1D0  200C               	addwfc	(btemp+11)^0,w,c
 24966  01A1D2  6EDA               	movwf	fsr2h,c
 24967  01A1D4  2ADE               	incf	postinc2,f,c
 24968  01A1D6  0E00               	movlw	0
 24969  01A1D8  22DD               	addwfc	postdec2,f,c
 24970  01A1DA                     l3336:
 24971                           
 24972                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 24973  01A1DA  52E5               	movf	postdec1,f,c
 24974  01A1DC  52E5               	movf	postdec1,f,c
 24975  01A1DE  52E5               	movf	postdec1,f,c
 24976  01A1E0  52E5               	movf	postdec1,f,c
 24977  01A1E2  0012               	return		;funcret
 24978  01A1E4                     __end_of_fputc:
 24979                           	opt callstack 0
 24980                           
 24981 ;; *************** function _putch *****************
 24982 ;; Defined at:
 24983 ;;		line 421 in file "eadog.c"
 24984 ;; Parameters:    Size  Location     Type
 24985 ;;  c               1  [STACK] unsigned char 
 24986 ;; Auto vars:     Size  Location     Type
 24987 ;;		None
 24988 ;; Return value:  Size  Location     Type
 24989 ;;                  1  [STACK] void 
 24990 ;; Registers used:
 24991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 24992 ;; Tracked objects:
 24993 ;;		On entry : 0/0
 24994 ;;		On exit  : 0/0
 24995 ;;		Unchanged: 0/0
 24996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25001 ;;Total ram usage:        0 bytes
 25002 ;; Hardware stack levels used:    1
 25003 ;; Hardware stack levels required when called:   16
 25004 ;; This function calls:
 25005 ;;		_ringBufS_put_dma
 25006 ;; This function is called by:
 25007 ;;		_fputc
 25008 ;; This function uses a reentrant model
 25009 ;;
 25010                           
 25011                           	psect	text90
 25012  01CDC4                     __ptext90:
 25013                           	opt callstack 0
 25014  01CDC4                     _putch:
 25015                           	opt callstack 0
 25016                           
 25017                           ;eadog.c: 421: void putch(char c);eadog.c: 422: {;eadog.c: 423:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 25018                           ;stkvar	_c @ sp[(0)+-1]
 25019                           
 25020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25021                           ;incstack = 0
 25022 ;; hardware stack exceeded
 25023  01CDC4  0EFF               	movlw	-1
 25024  01CDC6  50E3               	movf	plusw1,w,c
 25025  01CDC8  6EE6               	movwf	postinc1,c
 25026  01CDCA  0060  F75B  FFE6   	movff	_spi_link+6,postinc1
 25027  01CDD0  0060  F75F  FFE6   	movff	_spi_link+7,postinc1
 25028  01CDD6  EC45  F0D9         	call	_ringBufS_put_dma	;wreg free
 25029                           
 25030                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 25031  01CDDA  52E5               	movf	postdec1,f,c
 25032  01CDDC  0012               	return		;funcret
 25033  01CDDE                     __end_of_putch:
 25034                           	opt callstack 0
 25035                           
 25036 ;; *************** function _ringBufS_put_dma *****************
 25037 ;; Defined at:
 25038 ;;		line 67 in file "ringbufs.c"
 25039 ;; Parameters:    Size  Location     Type
 25040 ;;  _this           2  [STACK] PTR struct ringBufS_t
 25041 ;;		 -> ring_buf1(67), 
 25042 ;;  c               1  [STACK] const unsigned char 
 25043 ;; Auto vars:     Size  Location     Type
 25044 ;;		None
 25045 ;; Return value:  Size  Location     Type
 25046 ;;                  1  [STACK] void 
 25047 ;; Registers used:
 25048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25049 ;; Tracked objects:
 25050 ;;		On entry : 0/0
 25051 ;;		On exit  : 0/0
 25052 ;;		Unchanged: 0/0
 25053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25058 ;;Total ram usage:        0 bytes
 25059 ;; Hardware stack levels used:    1
 25060 ;; Hardware stack levels required when called:   15
 25061 ;; This function calls:
 25062 ;;		Nothing
 25063 ;; This function is called by:
 25064 ;;		_putch
 25065 ;; This function uses a reentrant model
 25066 ;;
 25067                           
 25068                           	psect	text91
 25069  01B28A                     __ptext91:
 25070                           	opt callstack 0
 25071  01B28A                     _ringBufS_put_dma:
 25072                           	opt callstack 0
 25073                           
 25074                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 25075                           ;stkvar	__this @ sp[(0)+-2]
 25076                           
 25077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25078                           ;incstack = 0
 25079 ;; hardware stack exceeded
 25080  01B28A  0EFE               	movlw	-2
 25081  01B28C  006F FF8C  F00B    	movff	plusw1,btemp+10
 25082  01B292  0EFF               	movlw	-1
 25083  01B294  006F FF8C  F00C    	movff	plusw1,btemp+11
 25084  01B29A  0E42               	movlw	66
 25085  01B29C  240B               	addwf	(btemp+10)^0,w,c
 25086  01B29E  6ED9               	movwf	fsr2l,c
 25087  01B2A0  0E00               	movlw	0
 25088  01B2A2  200C               	addwfc	(btemp+11)^0,w,c
 25089  01B2A4  6EDA               	movwf	fsr2h,c
 25090  01B2A6  0E40               	movlw	64
 25091  01B2A8  60DF               	cpfslt	indf2,c
 25092  01B2AA  D040               	goto	l1620
 25093                           
 25094                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 25095                           ;stkvar	_c @ sp[(0)+-3]
 25096                           ;stkvar	__this @ sp[(0)+-2]
 25097  01B2AC  0EFE               	movlw	-2
 25098  01B2AE  006F FF8C  F00B    	movff	plusw1,btemp+10
 25099  01B2B4  0EFF               	movlw	-1
 25100  01B2B6  006F FF8C  F00C    	movff	plusw1,btemp+11
 25101  01B2BC  0E40               	movlw	64
 25102  01B2BE  240B               	addwf	(btemp+10)^0,w,c
 25103  01B2C0  6ED9               	movwf	fsr2l,c
 25104  01B2C2  0E00               	movlw	0
 25105  01B2C4  200C               	addwfc	(btemp+11)^0,w,c
 25106  01B2C6  6EDA               	movwf	fsr2h,c
 25107  01B2C8  50DF               	movf	indf2,w,c
 25108  01B2CA  6E0C               	movwf	(btemp+11)^0,c
 25109                           
 25110                           ;stkvar	__this @ sp[(0)+-2]
 25111  01B2CC  0EFE               	movlw	-2
 25112  01B2CE  006F FF8C  F009    	movff	plusw1,btemp+8
 25113  01B2D4  0EFF               	movlw	-1
 25114  01B2D6  006F FF8C  F00A    	movff	plusw1,btemp+9
 25115  01B2DC  500C               	movf	(btemp+11)^0,w,c
 25116  01B2DE  2409               	addwf	(btemp+8)^0,w,c
 25117  01B2E0  6ED9               	movwf	fsr2l,c
 25118  01B2E2  0E00               	movlw	0
 25119  01B2E4  200A               	addwfc	(btemp+9)^0,w,c
 25120  01B2E6  6EDA               	movwf	fsr2h,c
 25121  01B2E8  0EFD               	movlw	-3
 25122  01B2EA  006F FF8F FFDF     	movff	plusw1,indf2
 25123                           
 25124                           ;ringbufs.c: 71:   ++_this->head;
 25125                           ;stkvar	__this @ sp[(0)+-2]
 25126  01B2F0  0EFE               	movlw	-2
 25127  01B2F2  006F FF8C  F00B    	movff	plusw1,btemp+10
 25128  01B2F8  0EFF               	movlw	-1
 25129  01B2FA  006F FF8C  F00C    	movff	plusw1,btemp+11
 25130  01B300  0E40               	movlw	64
 25131  01B302  240B               	addwf	(btemp+10)^0,w,c
 25132  01B304  6ED9               	movwf	fsr2l,c
 25133  01B306  0E00               	movlw	0
 25134  01B308  200C               	addwfc	(btemp+11)^0,w,c
 25135  01B30A  6EDA               	movwf	fsr2h,c
 25136  01B30C  2ADF               	incf	indf2,f,c
 25137                           
 25138                           ;ringbufs.c: 72:   ++_this->count;
 25139                           ;stkvar	__this @ sp[(0)+-2]
 25140  01B30E  0EFE               	movlw	-2
 25141  01B310  006F FF8C  F00B    	movff	plusw1,btemp+10
 25142  01B316  0EFF               	movlw	-1
 25143  01B318  006F FF8C  F00C    	movff	plusw1,btemp+11
 25144  01B31E  0E42               	movlw	66
 25145  01B320  240B               	addwf	(btemp+10)^0,w,c
 25146  01B322  6ED9               	movwf	fsr2l,c
 25147  01B324  0E00               	movlw	0
 25148  01B326  200C               	addwfc	(btemp+11)^0,w,c
 25149  01B328  6EDA               	movwf	fsr2h,c
 25150  01B32A  2ADF               	incf	indf2,f,c
 25151  01B32C                     l1620:
 25152                           
 25153                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 25154  01B32C  52E5               	movf	postdec1,f,c
 25155  01B32E  52E5               	movf	postdec1,f,c
 25156  01B330  52E5               	movf	postdec1,f,c
 25157  01B332  0012               	return		;funcret
 25158  01B334                     __end_of_ringBufS_put_dma:
 25159                           	opt callstack 0
 25160                           
 25161 ;; *************** function _atoi *****************
 25162 ;; Defined at:
 25163 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 25164 ;; Parameters:    Size  Location     Type
 25165 ;;  s               2  [STACK] PTR const unsigned char 
 25166 ;;		 -> STR_81(127), STR_79(3), STR_78(3), STR_77(19), 
 25167 ;;		 -> STR_76(19), STR_75(19), STR_74(19), STR_73(19), 
 25168 ;;		 -> STR_72(19), STR_71(24), STR_70(15), STR_69(15), 
 25169 ;;		 -> STR_68(15), STR_67(10), STR_66(10), STR_65(19), 
 25170 ;;		 -> STR_64(19), STR_61(3), STR_60(3), STR_59(21), 
 25171 ;;		 -> STR_58(21), STR_57(21), STR_56(21), STR_55(21), 
 25172 ;;		 -> STR_54(21), STR_53(21), STR_52(21), STR_51(21), 
 25173 ;;		 -> STR_50(20), STR_49(20), STR_48(21), STR_47(21), 
 25174 ;;		 -> STR_46(21), STR_45(22), STR_44(22), STR_43(22), 
 25175 ;;		 -> STR_42(23), STR_41(23), STR_40(23), STR_39(29), 
 25176 ;;		 -> STR_38(23), STR_37(23), STR_36(22), STR_35(22), 
 25177 ;;		 -> STR_34(22), STR_33(22), STR_32(22), STR_31(22), 
 25178 ;;		 -> STR_30(22), STR_29(22), STR_28(22), STR_27(22), 
 25179 ;;		 -> STR_26(22), STR_25(22), STR_24(17), STR_23(16), 
 25180 ;;		 -> STR_22(16), STR_21(26), STR_20(26), STR_19(22), 
 25181 ;;		 -> STR_18(21), STR_17(21), STR_16(21), STR_15(21), 
 25182 ;;		 -> STR_14(22), STR_13(22), STR_12(22), STR_11(26), 
 25183 ;;		 -> STR_10(21), STR_9(21), STR_8(21), STR_7(21), 
 25184 ;;		 -> STR_6(21), STR_5(21), STR_4(21), STR_2(21), 
 25185 ;;		 -> STR_1(21), 
 25186 ;; Auto vars:     Size  Location     Type
 25187 ;;  n               2  [STACK] int 
 25188 ;;  neg             2  [STACK] int 
 25189 ;; Return value:  Size  Location     Type
 25190 ;;                  2  [STACK] int 
 25191 ;; Registers used:
 25192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 25193 ;; Tracked objects:
 25194 ;;		On entry : 0/0
 25195 ;;		On exit  : 0/0
 25196 ;;		Unchanged: 0/0
 25197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25202 ;;Total ram usage:        0 bytes
 25203 ;; Hardware stack levels used:    1
 25204 ;; Hardware stack levels required when called:   16
 25205 ;; This function calls:
 25206 ;;		_isdigit
 25207 ;;		_isspace
 25208 ;; This function is called by:
 25209 ;;		_vfpfcnvrt
 25210 ;; This function uses a reentrant model
 25211 ;;
 25212                           
 25213                           	psect	text92
 25214  017F10                     __ptext92:
 25215                           	opt callstack 0
 25216  017F10                     _atoi:
 25217                           	opt callstack 0
 25218                           
 25219                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25220  017F10  0E09               	movlw	9
 25221  017F12  26E1               	addwf	fsr1l,f,c
 25222  017F14  0E00               	movlw	0
 25223  017F16  22E2               	addwfc	fsr1h,f,c
 25224                           
 25225                           ;stkvar	_n @ sp[(-9)+5]
 25226                           
 25227                           ;incstack = 0
 25228 ;; hardware stack exceeded
 25229  017F18  0EFC               	movlw	-4
 25230  017F1A  6AE3               	clrf	plusw1,c
 25231  017F1C  0EFD               	movlw	-3
 25232  017F1E  6AE3               	clrf	plusw1,c
 25233                           
 25234                           ;stkvar	_neg @ sp[(-9)+7]
 25235  017F20  0EFE               	movlw	-2
 25236  017F22  6AE3               	clrf	plusw1,c
 25237  017F24  0EFF               	movlw	-1
 25238  017F26  6AE3               	clrf	plusw1,c
 25239  017F28  D011               	goto	l9800
 25240  017F2A                     l9798:
 25241                           
 25242                           ;stkvar	_s @ sp[(-9)+-2]
 25243  017F2A  0EF5               	movlw	-11
 25244  017F2C  50E3               	movf	plusw1,w,c
 25245  017F2E  0F01               	addlw	1
 25246  017F30  6E01               	movwf	btemp^0,c
 25247  017F32  0EF5               	movlw	-11
 25248  017F34  0060  F007  FFE3   	movff	btemp,plusw1
 25249  017F3A  6A01               	clrf	btemp^0,c
 25250  017F3C  0EF6               	movlw	-10
 25251  017F3E  50E3               	movf	plusw1,w,c
 25252  017F40  2001               	addwfc	btemp^0,w,c
 25253  017F42  6E01               	movwf	btemp^0,c
 25254  017F44  0EF6               	movlw	-10
 25255  017F46  0060  F007  FFE3   	movff	btemp,plusw1
 25256  017F4C                     l9800:
 25257                           
 25258                           ;stkvar	_atoi$6549 @ sp[(-9)+4]
 25259  017F4C  0EFB               	movlw	-5
 25260  017F4E  6AE3               	clrf	plusw1,c
 25261  017F50  2AE3               	incf	plusw1,f,c
 25262                           
 25263                           ;stkvar	_s @ sp[(-9)+-2]
 25264  017F52  50E1               	movf	fsr1l,w,c
 25265  017F54  0FF5               	addlw	-11
 25266  017F56  6ED9               	movwf	fsr2l,c
 25267  017F58  50E2               	movf	fsr1h,w,c
 25268  017F5A  6EDA               	movwf	fsr2h,c
 25269  017F5C  0EFF               	movlw	255
 25270  017F5E  22DA               	addwfc	fsr2h,f,c
 25271  017F60  006F FF7B FFF6     	movff	postinc2,tblptrl
 25272  017F66  006F FF77 FFF7     	movff	postdec2,tblptrh
 25273  017F6C                     	if	0	;tblptru may be non-zero
 25274  017F6C                     	endif
 25275  017F6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25276  017F6C  0E00               	movlw	low (__mediumconst shr (0+16))
 25277  017F6E  6EF8               	movwf	tblptru,c
 25278  017F70                     	endif
 25279  017F70  0008               	tblrd		*
 25280  017F72  50F5               	movf	tablat,w,c
 25281  017F74  0A20               	xorlw	32
 25282  017F76  B4D8               	btfsc	status,2,c
 25283  017F78  D023               	goto	l9808
 25284  017F7A  0EF7               	movlw	247
 25285  017F7C  6E0B               	movwf	(btemp+10)^0,c
 25286  017F7E  0EFF               	movlw	255
 25287  017F80  6E0C               	movwf	(btemp+11)^0,c
 25288                           
 25289                           ;stkvar	_s @ sp[(-9)+-2]
 25290  017F82  50E1               	movf	fsr1l,w,c
 25291  017F84  0FF5               	addlw	-11
 25292  017F86  6ED9               	movwf	fsr2l,c
 25293  017F88  50E2               	movf	fsr1h,w,c
 25294  017F8A  6EDA               	movwf	fsr2h,c
 25295  017F8C  0EFF               	movlw	255
 25296  017F8E  22DA               	addwfc	fsr2h,f,c
 25297  017F90  006F FF7B FFF6     	movff	postinc2,tblptrl
 25298  017F96  006F FF77 FFF7     	movff	postdec2,tblptrh
 25299  017F9C                     	if	0	;tblptru may be non-zero
 25300  017F9C                     	endif
 25301  017F9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25302  017F9C  0E00               	movlw	low (__mediumconst shr (0+16))
 25303  017F9E  6EF8               	movwf	tblptru,c
 25304  017FA0                     	endif
 25305  017FA0  0008               	tblrd		*
 25306  017FA2  50F5               	movf	tablat,w,c
 25307  017FA4  6E09               	movwf	(btemp+8)^0,c
 25308  017FA6  6A0A               	clrf	(btemp+9)^0,c
 25309  017FA8  500B               	movf	(btemp+10)^0,w,c
 25310  017FAA  2609               	addwf	(btemp+8)^0,f,c
 25311  017FAC  500C               	movf	(btemp+11)^0,w,c
 25312  017FAE  220A               	addwfc	(btemp+9)^0,f,c
 25313  017FB0  500A               	movf	(btemp+9)^0,w,c
 25314  017FB2  E104               	bnz	u8870
 25315  017FB4  0E05               	movlw	5
 25316  017FB6  5C09               	subwf	(btemp+8)^0,w,c
 25317  017FB8  A0D8               	btfss	status,0,c
 25318  017FBA  D002               	goto	l9808
 25319  017FBC                     u8870:
 25320                           
 25321                           ;stkvar	_atoi$6549 @ sp[(-9)+4]
 25322  017FBC  0EFB               	movlw	-5
 25323  017FBE  6AE3               	clrf	plusw1,c
 25324  017FC0                     l9808:
 25325                           
 25326                           ;stkvar	_atoi$6549 @ sp[(-9)+4]
 25327  017FC0  0EFB               	movlw	-5
 25328  017FC2  50E3               	movf	plusw1,w,c
 25329  017FC4  6E0B               	movwf	(btemp+10)^0,c
 25330  017FC6  6A0C               	clrf	(btemp+11)^0,c
 25331                           
 25332                           ;stkvar	_atoi$6548 @ sp[(-9)+2]
 25333  017FC8  0EF9               	movlw	-7
 25334  017FCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25335  017FD0  0EFA               	movlw	-6
 25336  017FD2  0060  F033  FFE3   	movff	btemp+11,plusw1
 25337                           
 25338                           ;stkvar	_atoi$6548 @ sp[(-9)+2]
 25339  017FD8  0EF9               	movlw	-7
 25340  017FDA  006F FF8C  F001    	movff	plusw1,btemp
 25341  017FE0  0EFA               	movlw	-6
 25342  017FE2  50E3               	movf	plusw1,w,c
 25343  017FE4  1001               	iorwf	btemp^0,w,c
 25344  017FE6  B4D8               	btfsc	status,2,c
 25345  017FE8  D01F               	goto	l9818
 25346  017FEA  D79F               	goto	l9798
 25347  017FEC                     l9814:
 25348  017FEC  0E01               	movlw	1
 25349  017FEE  6E0B               	movwf	(btemp+10)^0,c
 25350  017FF0  0E00               	movlw	0
 25351  017FF2  6E0C               	movwf	(btemp+11)^0,c
 25352                           
 25353                           ;stkvar	_neg @ sp[(-9)+7]
 25354  017FF4  0EFE               	movlw	-2
 25355  017FF6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25356  017FFC  0EFF               	movlw	-1
 25357  017FFE  0060  F033  FFE3   	movff	btemp+11,plusw1
 25358  018004                     l9816:
 25359                           
 25360                           ;stkvar	_s @ sp[(-9)+-2]
 25361  018004  0EF5               	movlw	-11
 25362  018006  50E3               	movf	plusw1,w,c
 25363  018008  0F01               	addlw	1
 25364  01800A  6E01               	movwf	btemp^0,c
 25365  01800C  0EF5               	movlw	-11
 25366  01800E  0060  F007  FFE3   	movff	btemp,plusw1
 25367  018014  6A01               	clrf	btemp^0,c
 25368  018016  0EF6               	movlw	-10
 25369  018018  50E3               	movf	plusw1,w,c
 25370  01801A  2001               	addwfc	btemp^0,w,c
 25371  01801C  6E01               	movwf	btemp^0,c
 25372  01801E  0EF6               	movlw	-10
 25373  018020  0060  F007  FFE3   	movff	btemp,plusw1
 25374  018026  D053               	goto	l9824
 25375  018028                     l9818:
 25376                           
 25377                           ;stkvar	_s @ sp[(-9)+-2]
 25378  018028  50E1               	movf	fsr1l,w,c
 25379  01802A  0FF5               	addlw	-11
 25380  01802C  6ED9               	movwf	fsr2l,c
 25381  01802E  50E2               	movf	fsr1h,w,c
 25382  018030  6EDA               	movwf	fsr2h,c
 25383  018032  0EFF               	movlw	255
 25384  018034  22DA               	addwfc	fsr2h,f,c
 25385  018036  006F FF7B FFF6     	movff	postinc2,tblptrl
 25386  01803C  006F FF77 FFF7     	movff	postdec2,tblptrh
 25387  018042                     	if	0	;tblptru may be non-zero
 25388  018042                     	endif
 25389  018042                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25390  018042  0E00               	movlw	low (__mediumconst shr (0+16))
 25391  018044  6EF8               	movwf	tblptru,c
 25392  018046                     	endif
 25393  018046  0008               	tblrd		*
 25394  018048  50F5               	movf	tablat,w,c
 25395  01804A  6E0B               	movwf	(btemp+10)^0,c
 25396  01804C  6A0C               	clrf	(btemp+11)^0,c
 25397                           
 25398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25399                           ; Switch size 1, requested type "simple"
 25400                           ; Number of cases is 1, Range of values is 0 to 0
 25401                           ; switch strategies available:
 25402                           ; Name         Instructions Cycles
 25403                           ; simple_byte            4     3 (average)
 25404                           ;	Chosen strategy is simple_byte
 25405  01804E  500C               	movf	(btemp+11)^0,w,c
 25406  018050  0A00               	xorlw	0	; case 0
 25407  018052  A4D8               	btfss	status,2,c
 25408  018054  D03C               	goto	l9824
 25409                           
 25410                           ; Switch size 1, requested type "simple"
 25411                           ; Number of cases is 2, Range of values is 43 to 45
 25412                           ; switch strategies available:
 25413                           ; Name         Instructions Cycles
 25414                           ; simple_byte            7     4 (average)
 25415                           ;	Chosen strategy is simple_byte
 25416  018056  500B               	movf	(btemp+10)^0,w,c
 25417  018058  0A2B               	xorlw	43	; case 43
 25418  01805A  B4D8               	btfsc	status,2,c
 25419  01805C  D7D3               	goto	l9816
 25420  01805E  0A06               	xorlw	6	; case 45
 25421  018060  B4D8               	btfsc	status,2,c
 25422  018062  D7C4               	goto	l9814
 25423  018064  D034               	goto	l9824
 25424  018066                     l9820:
 25425                           
 25426                           ;stkvar	_n @ sp[(-9)+5]
 25427  018066  0EFC               	movlw	-4
 25428  018068  006F FF8C  F00B    	movff	plusw1,btemp+10
 25429  01806E  0EFD               	movlw	-3
 25430  018070  006F FF8C  F00C    	movff	plusw1,btemp+11
 25431  018076  0E0A               	movlw	10
 25432  018078  020B               	mulwf	(btemp+10)^0,c
 25433  01807A  006F FFCC  F009    	movff	prodl,btemp+8
 25434  018080  006F FFD0  F00A    	movff	prodh,btemp+9
 25435  018086  020C               	mulwf	(btemp+11)^0,c
 25436  018088  50F3               	movf	prodl,w,c
 25437  01808A  260A               	addwf	(btemp+9)^0,f,c
 25438                           
 25439                           ;stkvar	_s @ sp[(-9)+-2]
 25440  01808C  50E1               	movf	fsr1l,w,c
 25441  01808E  0FF5               	addlw	-11
 25442  018090  6ED9               	movwf	fsr2l,c
 25443  018092  50E2               	movf	fsr1h,w,c
 25444  018094  6EDA               	movwf	fsr2h,c
 25445  018096  0EFF               	movlw	255
 25446  018098  22DA               	addwfc	fsr2h,f,c
 25447  01809A  006F FF7B FFF6     	movff	postinc2,tblptrl
 25448  0180A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 25449  0180A6                     	if	0	;tblptru may be non-zero
 25450  0180A6                     	endif
 25451  0180A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25452  0180A6  0E00               	movlw	low (__mediumconst shr (0+16))
 25453  0180A8  6EF8               	movwf	tblptru,c
 25454  0180AA                     	endif
 25455  0180AA  0008               	tblrd		*
 25456  0180AC  50F5               	movf	tablat,w,c
 25457  0180AE  5E09               	subwf	(btemp+8)^0,f,c
 25458  0180B0  0E00               	movlw	0
 25459  0180B2  5A0A               	subwfb	(btemp+9)^0,f,c
 25460  0180B4  0E30               	movlw	48
 25461  0180B6  2609               	addwf	(btemp+8)^0,f,c
 25462  0180B8  0E00               	movlw	0
 25463  0180BA  220A               	addwfc	(btemp+9)^0,f,c
 25464                           
 25465                           ;stkvar	_n @ sp[(-9)+5]
 25466  0180BC  0EFC               	movlw	-4
 25467  0180BE  0060  F027  FFE3   	movff	btemp+8,plusw1
 25468  0180C4  0EFD               	movlw	-3
 25469  0180C6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 25470  0180CC  D79B               	goto	l9816
 25471  0180CE                     l9824:
 25472  0180CE  0ED0               	movlw	208
 25473  0180D0  6E0B               	movwf	(btemp+10)^0,c
 25474  0180D2  0EFF               	movlw	255
 25475  0180D4  6E0C               	movwf	(btemp+11)^0,c
 25476                           
 25477                           ;stkvar	_s @ sp[(-9)+-2]
 25478  0180D6  50E1               	movf	fsr1l,w,c
 25479  0180D8  0FF5               	addlw	-11
 25480  0180DA  6ED9               	movwf	fsr2l,c
 25481  0180DC  50E2               	movf	fsr1h,w,c
 25482  0180DE  6EDA               	movwf	fsr2h,c
 25483  0180E0  0EFF               	movlw	255
 25484  0180E2  22DA               	addwfc	fsr2h,f,c
 25485  0180E4  006F FF7B FFF6     	movff	postinc2,tblptrl
 25486  0180EA  006F FF77 FFF7     	movff	postdec2,tblptrh
 25487  0180F0                     	if	0	;tblptru may be non-zero
 25488  0180F0                     	endif
 25489  0180F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25490  0180F0  0E00               	movlw	low (__mediumconst shr (0+16))
 25491  0180F2  6EF8               	movwf	tblptru,c
 25492  0180F4                     	endif
 25493  0180F4  0008               	tblrd		*
 25494  0180F6  50F5               	movf	tablat,w,c
 25495  0180F8  6E09               	movwf	(btemp+8)^0,c
 25496  0180FA  6A0A               	clrf	(btemp+9)^0,c
 25497  0180FC  500B               	movf	(btemp+10)^0,w,c
 25498  0180FE  2609               	addwf	(btemp+8)^0,f,c
 25499  018100  500C               	movf	(btemp+11)^0,w,c
 25500  018102  220A               	addwfc	(btemp+9)^0,f,c
 25501  018104  500A               	movf	(btemp+9)^0,w,c
 25502  018106  E106               	bnz	u8890
 25503  018108  0E0A               	movlw	10
 25504  01810A  5C09               	subwf	(btemp+8)^0,w,c
 25505  01810C  B0D8               	btfsc	status,0,c
 25506  01810E  D002               	goto	u8890
 25507  018110  0E01               	movlw	1
 25508  018112  D001               	goto	u8900
 25509  018114                     u8890:
 25510  018114  0E00               	movlw	0
 25511  018116                     u8900:
 25512  018116  6E0B               	movwf	(btemp+10)^0,c
 25513  018118  6A0C               	clrf	(btemp+11)^0,c
 25514                           
 25515                           ;stkvar	_atoi$6550 @ sp[(-9)+0]
 25516  01811A  0EF7               	movlw	-9
 25517  01811C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 25518  018122  0EF8               	movlw	-8
 25519  018124  0060  F033  FFE3   	movff	btemp+11,plusw1
 25520                           
 25521                           ;stkvar	_atoi$6550 @ sp[(-9)+0]
 25522  01812A  0EF7               	movlw	-9
 25523  01812C  006F FF8C  F001    	movff	plusw1,btemp
 25524  018132  0EF8               	movlw	-8
 25525  018134  50E3               	movf	plusw1,w,c
 25526  018136  1001               	iorwf	btemp^0,w,c
 25527  018138  A4D8               	btfss	status,2,c
 25528  01813A  D795               	goto	l9820
 25529                           
 25530                           ;stkvar	_neg @ sp[(-9)+7]
 25531  01813C  0EFE               	movlw	-2
 25532  01813E  006F FF8C  F001    	movff	plusw1,btemp
 25533  018144  0EFF               	movlw	-1
 25534  018146  50E3               	movf	plusw1,w,c
 25535  018148  1001               	iorwf	btemp^0,w,c
 25536  01814A  A4D8               	btfss	status,2,c
 25537  01814C  D00E               	goto	l9834
 25538                           
 25539                           ;stkvar	_n @ sp[(-9)+5]
 25540  01814E  0EFC               	movlw	-4
 25541  018150  006F FF8C  F001    	movff	plusw1,btemp
 25542  018156  1E01               	comf	btemp^0,f,c
 25543  018158  0EFD               	movlw	-3
 25544  01815A  006F FF8C  F002    	movff	plusw1,btemp+1
 25545  018160  1E02               	comf	(btemp+1)^0,f,c
 25546  018162  2A01               	incf	btemp^0,f,c
 25547  018164  B4D8               	btfsc	status,2,c
 25548  018166  2A02               	incf	(btemp+1)^0,f,c
 25549  018168  D008               	goto	l3267
 25550  01816A                     l9834:
 25551                           
 25552                           ;stkvar	_n @ sp[(-9)+5]
 25553  01816A  0EFC               	movlw	-4
 25554  01816C  006F FF8C  F001    	movff	plusw1,btemp
 25555  018172  0EFD               	movlw	-3
 25556  018174  006F FF8C  F002    	movff	plusw1,btemp+1
 25557  01817A                     l3267:
 25558                           
 25559                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 25560  01817A  0EF5               	movlw	245
 25561  01817C  26E1               	addwf	fsr1l,f,c
 25562  01817E  0EFF               	movlw	255
 25563  018180  22E2               	addwfc	fsr1h,f,c
 25564  018182  0012               	return		;funcret
 25565  018184                     __end_of_atoi:
 25566                           	opt callstack 0
 25567                           
 25568 ;; *************** function _isspace *****************
 25569 ;; Defined at:
 25570 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 25571 ;; Parameters:    Size  Location     Type
 25572 ;;  c               2  [STACK] int 
 25573 ;; Auto vars:     Size  Location     Type
 25574 ;;		None
 25575 ;; Return value:  Size  Location     Type
 25576 ;;                  2  [STACK] int 
 25577 ;; Registers used:
 25578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 25579 ;; Tracked objects:
 25580 ;;		On entry : 0/0
 25581 ;;		On exit  : 0/0
 25582 ;;		Unchanged: 0/0
 25583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25588 ;;Total ram usage:        0 bytes
 25589 ;; Hardware stack levels used:    1
 25590 ;; Hardware stack levels required when called:   15
 25591 ;; This function calls:
 25592 ;;		Nothing
 25593 ;; This function is called by:
 25594 ;;		_atoi
 25595 ;; This function uses a reentrant model
 25596 ;;
 25597                           
 25598                           	psect	text93
 25599  01C068                     __ptext93:
 25600                           	opt callstack 0
 25601  01C068                     _isspace:
 25602                           	opt callstack 0
 25603                           
 25604                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25605  01C068  52E6               	movf	postinc1,f,c
 25606                           
 25607                           ;stkvar	_isspace$6599 @ sp[(-1)+0]
 25608                           
 25609                           ;incstack = 0
 25610 ;; hardware stack exceeded
 25611  01C06A  0EFF               	movlw	-1
 25612  01C06C  6AE3               	clrf	plusw1,c
 25613  01C06E  2AE3               	incf	plusw1,f,c
 25614                           
 25615                           ;stkvar	_c @ sp[(-1)+-2]
 25616  01C070  0EFD               	movlw	-3
 25617  01C072  006F FF8C  F001    	movff	plusw1,btemp
 25618  01C078  0E20               	movlw	32
 25619  01C07A  1801               	xorwf	btemp^0,w,c
 25620  01C07C  E104               	bnz	u7760
 25621  01C07E  0EFE               	movlw	-2
 25622  01C080  50E3               	movf	plusw1,w,c
 25623  01C082  B4D8               	btfsc	status,2,c
 25624  01C084  D012               	goto	l9218
 25625  01C086                     u7760:
 25626                           
 25627                           ;stkvar	_c @ sp[(-1)+-2]
 25628  01C086  0EFD               	movlw	-3
 25629  01C088  50E3               	movf	plusw1,w,c
 25630  01C08A  0FF7               	addlw	247
 25631  01C08C  6E0B               	movwf	(btemp+10)^0,c
 25632  01C08E  0EFE               	movlw	-2
 25633  01C090  006F FF8C  F00C    	movff	plusw1,btemp+11
 25634  01C096  0EFF               	movlw	255
 25635  01C098  220C               	addwfc	(btemp+11)^0,f,c
 25636  01C09A  500C               	movf	(btemp+11)^0,w,c
 25637  01C09C  E104               	bnz	u7770
 25638  01C09E  0E05               	movlw	5
 25639  01C0A0  5C0B               	subwf	(btemp+10)^0,w,c
 25640  01C0A2  A0D8               	btfss	status,0,c
 25641  01C0A4  D002               	goto	l9218
 25642  01C0A6                     u7770:
 25643                           
 25644                           ;stkvar	_isspace$6599 @ sp[(-1)+0]
 25645  01C0A6  0EFF               	movlw	-1
 25646  01C0A8  6AE3               	clrf	plusw1,c
 25647  01C0AA                     l9218:
 25648                           
 25649                           ;stkvar	_isspace$6599 @ sp[(-1)+0]
 25650  01C0AA  0EFF               	movlw	-1
 25651  01C0AC  50E3               	movf	plusw1,w,c
 25652  01C0AE  6E01               	movwf	btemp^0,c
 25653  01C0B0  6A02               	clrf	(btemp+1)^0,c
 25654                           
 25655                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 25656  01C0B2  52E5               	movf	postdec1,f,c
 25657  01C0B4  52E5               	movf	postdec1,f,c
 25658  01C0B6  52E5               	movf	postdec1,f,c
 25659  01C0B8  0012               	return		;funcret
 25660  01C0BA                     __end_of_isspace:
 25661                           	opt callstack 0
 25662                           
 25663 ;; *************** function _isdigit *****************
 25664 ;; Defined at:
 25665 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 25666 ;; Parameters:    Size  Location     Type
 25667 ;;  c               2  [STACK] int 
 25668 ;; Auto vars:     Size  Location     Type
 25669 ;;		None
 25670 ;; Return value:  Size  Location     Type
 25671 ;;                  2  [STACK] int 
 25672 ;; Registers used:
 25673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 25674 ;; Tracked objects:
 25675 ;;		On entry : 0/0
 25676 ;;		On exit  : 0/0
 25677 ;;		Unchanged: 0/0
 25678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25683 ;;Total ram usage:        0 bytes
 25684 ;; Hardware stack levels used:    1
 25685 ;; Hardware stack levels required when called:   15
 25686 ;; This function calls:
 25687 ;;		Nothing
 25688 ;; This function is called by:
 25689 ;;		_vfpfcnvrt
 25690 ;;		_atoi
 25691 ;; This function uses a reentrant model
 25692 ;;
 25693                           
 25694                           	psect	text94
 25695  01C84A                     __ptext94:
 25696                           	opt callstack 0
 25697  01C84A                     _isdigit:
 25698                           	opt callstack 0
 25699                           
 25700                           ;stkvar	_c @ sp[(0)+-2]
 25701                           
 25702                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25703                           ;incstack = 0
 25704 ;; hardware stack exceeded
 25705  01C84A  0EFE               	movlw	-2
 25706  01C84C  50E3               	movf	plusw1,w,c
 25707  01C84E  0FD0               	addlw	208
 25708  01C850  6E0B               	movwf	(btemp+10)^0,c
 25709  01C852  0EFF               	movlw	-1
 25710  01C854  006F FF8C  F00C    	movff	plusw1,btemp+11
 25711  01C85A  0EFF               	movlw	255
 25712  01C85C  220C               	addwfc	(btemp+11)^0,f,c
 25713  01C85E  500C               	movf	(btemp+11)^0,w,c
 25714  01C860  E106               	bnz	u6610
 25715  01C862  0E0A               	movlw	10
 25716  01C864  5C0B               	subwf	(btemp+10)^0,w,c
 25717  01C866  B0D8               	btfsc	status,0,c
 25718  01C868  D002               	goto	u6610
 25719  01C86A  0E01               	movlw	1
 25720  01C86C  D001               	goto	u6620
 25721  01C86E                     u6610:
 25722  01C86E  0E00               	movlw	0
 25723  01C870                     u6620:
 25724  01C870  6E01               	movwf	btemp^0,c
 25725  01C872  6A02               	clrf	(btemp+1)^0,c
 25726                           
 25727                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 25728  01C874  52E5               	movf	postdec1,f,c
 25729  01C876  52E5               	movf	postdec1,f,c
 25730  01C878  0012               	return		;funcret
 25731  01C87A                     __end_of_isdigit:
 25732                           	opt callstack 0
 25733                           
 25734 ;; *************** function _set_vterm *****************
 25735 ;; Defined at:
 25736 ;;		line 107 in file "mconfig.c"
 25737 ;; Parameters:    Size  Location     Type
 25738 ;;  vterm           1  [STACK] const unsigned char 
 25739 ;; Auto vars:     Size  Location     Type
 25740 ;;		None
 25741 ;; Return value:  Size  Location     Type
 25742 ;;                  1  [STACK] unsigned char 
 25743 ;; Registers used:
 25744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 25745 ;; Tracked objects:
 25746 ;;		On entry : 0/2
 25747 ;;		On exit  : 0/0
 25748 ;;		Unchanged: 0/0
 25749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25754 ;;Total ram usage:        0 bytes
 25755 ;; Hardware stack levels used:    1
 25756 ;; Hardware stack levels required when called:   15
 25757 ;; This function calls:
 25758 ;;		Nothing
 25759 ;; This function is called by:
 25760 ;;		_main
 25761 ;;		_check_help
 25762 ;; This function uses a reentrant model
 25763 ;;
 25764                           
 25765                           	psect	text95
 25766  01CD6A                     __ptext95:
 25767                           	opt callstack 0
 25768  01CD6A                     _set_vterm:
 25769                           	opt callstack 15
 25770                           
 25771                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 25772                           ;stkvar	_vterm @ sp[(0)+-1]
 25773                           
 25774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25775                           ;incstack = 0
 25776  01CD6A  0EFF               	movlw	-1
 25777  01CD6C  006F FF8C  F00C    	movff	plusw1,btemp+11
 25778  01CD72  0E03               	movlw	3
 25779  01CD74  160C               	andwf	(btemp+11)^0,f,c
 25780  01CD76  EE22  F20A         	lfsr	2,_D+480
 25781  01CD7A  50DF               	movf	223,w,c
 25782  01CD7C  180C               	xorwf	(btemp+11)^0,w,c
 25783  01CD7E  0BFE               	andlw	-2
 25784  01CD80  180C               	xorwf	(btemp+11)^0,w,c
 25785  01CD82  6EDF               	movwf	223,c
 25786                           
 25787                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 25788  01CD84  52E5               	movf	postdec1,f,c
 25789  01CD86  0012               	return		;funcret
 25790  01CD88                     __end_of_set_vterm:
 25791                           	opt callstack 0
 25792                           
 25793 ;; *************** function _set_temp_display_help *****************
 25794 ;; Defined at:
 25795 ;;		line 211 in file "mconfig.c"
 25796 ;; Parameters:    Size  Location     Type
 25797 ;;  new_response    1  [STACK] const enum E16509
 25798 ;; Auto vars:     Size  Location     Type
 25799 ;;		None
 25800 ;; Return value:  Size  Location     Type
 25801 ;;                  1  [STACK] enum E16509
 25802 ;; Registers used:
 25803 ;;		wreg, fsr1l, fsr1h
 25804 ;; Tracked objects:
 25805 ;;		On entry : 0/1
 25806 ;;		On exit  : 3F/1
 25807 ;;		Unchanged: 0/0
 25808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25813 ;;Total ram usage:        0 bytes
 25814 ;; Hardware stack levels used:    1
 25815 ;; Hardware stack levels required when called:   15
 25816 ;; This function calls:
 25817 ;;		Nothing
 25818 ;; This function is called by:
 25819 ;;		_check_help
 25820 ;; This function uses a reentrant model
 25821 ;;
 25822                           
 25823                           	psect	text96
 25824  01CEC8                     __ptext96:
 25825                           	opt callstack 0
 25826  01CEC8                     _set_temp_display_help:
 25827                           	opt callstack 14
 25828                           
 25829                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 25830                           
 25831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25832                           ;incstack = 0
 25833  01CEC8  0101               	movlb	1	; () banked
 25834  01CECA  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 25835                           
 25836                           ; BSR set to: 1
 25837                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 25838                           ;stkvar	_new_response_info @ sp[(0)+-1]
 25839  01CECC  0EFF               	movlw	-1
 25840  01CECE  006F FF8C  F1AC    	movff	plusw1,_V+165	;volatile
 25841                           
 25842                           ; BSR set to: 1
 25843                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 25844  01CED4  52E5               	movf	postdec1,f,c
 25845  01CED6  0012               	return		;funcret
 25846  01CED8                     __end_of_set_temp_display_help:
 25847                           	opt callstack 0
 25848                           
 25849 ;; *************** function _set_display_info *****************
 25850 ;; Defined at:
 25851 ;;		line 200 in file "mconfig.c"
 25852 ;; Parameters:    Size  Location     Type
 25853 ;;  new_response    1  [STACK] const enum E16509
 25854 ;; Auto vars:     Size  Location     Type
 25855 ;;		None
 25856 ;; Return value:  Size  Location     Type
 25857 ;;                  1  [STACK] enum E16994
 25858 ;; Registers used:
 25859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 25860 ;; Tracked objects:
 25861 ;;		On entry : 0/1
 25862 ;;		On exit  : 0/0
 25863 ;;		Unchanged: 0/0
 25864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25869 ;;Total ram usage:        0 bytes
 25870 ;; Hardware stack levels used:    1
 25871 ;; Hardware stack levels required when called:   16
 25872 ;; This function calls:
 25873 ;;		_TimerDone
 25874 ;; This function is called by:
 25875 ;;		_main
 25876 ;;		_check_help
 25877 ;; This function uses a reentrant model
 25878 ;;
 25879                           
 25880                           	psect	text97
 25881  01CD88                     __ptext97:
 25882                           	opt callstack 0
 25883  01CD88                     _set_display_info:
 25884                           	opt callstack 14
 25885                           
 25886                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 25887                           
 25888                           ; BSR set to: 1
 25889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25890                           ;incstack = 0
 25891  01CD88  0E07               	movlw	7
 25892  01CD8A  6EE6               	movwf	postinc1,c
 25893  01CD8C  ECBF  F0E4         	call	_TimerDone	;wreg free
 25894  01CD90  5001               	movf	btemp^0,w,c
 25895  01CD92  B4D8               	btfsc	status,2,c
 25896  01CD94  D006               	goto	l1755
 25897                           
 25898                           ;mconfig.c: 205:   old_info = V.response.info;
 25899  01CD96  0101               	movlb	1	; () banked
 25900  01CD98  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 25901                           
 25902                           ; BSR set to: 1
 25903                           ;mconfig.c: 206:   V.response.info = new_response_info;
 25904                           ;stkvar	_new_response_info @ sp[(0)+-1]
 25905  01CD9A  0EFF               	movlw	-1
 25906  01CD9C  006F FF8C  F1AB    	movff	plusw1,_V+164	;volatile
 25907  01CDA2                     l1755:
 25908                           
 25909                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 25910  01CDA2  52E5               	movf	postdec1,f,c
 25911  01CDA4  0012               	return		;funcret
 25912  01CDA6                     __end_of_set_display_info:
 25913                           	opt callstack 0
 25914                           
 25915 ;; *************** function _mode_lamp_dim *****************
 25916 ;; Defined at:
 25917 ;;		line 13 in file "mconfig.c"
 25918 ;; Parameters:    Size  Location     Type
 25919 ;;  level           2  [STACK] const unsigned short 
 25920 ;; Auto vars:     Size  Location     Type
 25921 ;;		None
 25922 ;; Return value:  Size  Location     Type
 25923 ;;                  1  [STACK] void 
 25924 ;; Registers used:
 25925 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 25926 ;; Tracked objects:
 25927 ;;		On entry : 0/1
 25928 ;;		On exit  : 0/0
 25929 ;;		Unchanged: 0/0
 25930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25935 ;;Total ram usage:        0 bytes
 25936 ;; Hardware stack levels used:    1
 25937 ;; Hardware stack levels required when called:   16
 25938 ;; This function calls:
 25939 ;;		_PWM8_LoadDutyValue
 25940 ;; This function is called by:
 25941 ;;		_main
 25942 ;;		_check_help
 25943 ;; This function uses a reentrant model
 25944 ;;
 25945                           
 25946                           	psect	text98
 25947  01CDFA                     __ptext98:
 25948                           	opt callstack 0
 25949  01CDFA                     _mode_lamp_dim:
 25950                           	opt callstack 14
 25951                           
 25952                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 25953                           ;stkvar	_level @ sp[(0)+-2]
 25954                           
 25955                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25956                           ;incstack = 0
 25957  01CDFA  0EFE               	movlw	-2
 25958  01CDFC  006F FF8F FFE6     	movff	plusw1,postinc1
 25959  01CE02  006F FF8F FFE6     	movff	plusw1,postinc1
 25960  01CE08  ECEF  F0E1         	call	_PWM8_LoadDutyValue	;wreg free
 25961                           
 25962                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 25963  01CE0C  52E5               	movf	postdec1,f,c
 25964  01CE0E  52E5               	movf	postdec1,f,c
 25965  01CE10  0012               	return		;funcret
 25966  01CE12                     __end_of_mode_lamp_dim:
 25967                           	opt callstack 0
 25968                           
 25969 ;; *************** function _mode_lamp_bright *****************
 25970 ;; Defined at:
 25971 ;;		line 18 in file "mconfig.c"
 25972 ;; Parameters:    Size  Location     Type
 25973 ;;		None
 25974 ;; Auto vars:     Size  Location     Type
 25975 ;;		None
 25976 ;; Return value:  Size  Location     Type
 25977 ;;                  1  [STACK] void 
 25978 ;; Registers used:
 25979 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 25980 ;; Tracked objects:
 25981 ;;		On entry : 0/0
 25982 ;;		On exit  : 0/0
 25983 ;;		Unchanged: 0/0
 25984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25989 ;;Total ram usage:        0 bytes
 25990 ;; Hardware stack levels used:    1
 25991 ;; Hardware stack levels required when called:   16
 25992 ;; This function calls:
 25993 ;;		_PWM8_LoadDutyValue
 25994 ;; This function is called by:
 25995 ;;		_check_help
 25996 ;; This function uses a reentrant model
 25997 ;;
 25998                           
 25999                           	psect	text99
 26000  01CEF6                     __ptext99:
 26001                           	opt callstack 0
 26002  01CEF6                     _mode_lamp_bright:
 26003                           	opt callstack 13
 26004                           
 26005                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 26006                           
 26007                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26008                           ;incstack = 0
 26009  01CEF6  0E2C               	movlw	44
 26010  01CEF8  6EE6               	movwf	postinc1,c
 26011  01CEFA  0E01               	movlw	1
 26012  01CEFC  6EE6               	movwf	postinc1,c
 26013  01CEFE  ECEF  F0E1         	call	_PWM8_LoadDutyValue	;wreg free
 26014                           
 26015                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 26016  01CF02  0012               	return		;funcret
 26017  01CF04                     __end_of_mode_lamp_bright:
 26018                           	opt callstack 0
 26019                           
 26020 ;; *************** function _PWM8_LoadDutyValue *****************
 26021 ;; Defined at:
 26022 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 26023 ;; Parameters:    Size  Location     Type
 26024 ;;  dutyValue       2  [STACK] unsigned short 
 26025 ;; Auto vars:     Size  Location     Type
 26026 ;;		None
 26027 ;; Return value:  Size  Location     Type
 26028 ;;                  1  [STACK] void 
 26029 ;; Registers used:
 26030 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 26031 ;; Tracked objects:
 26032 ;;		On entry : 0/1
 26033 ;;		On exit  : 0/0
 26034 ;;		Unchanged: 0/0
 26035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26040 ;;Total ram usage:        0 bytes
 26041 ;; Hardware stack levels used:    1
 26042 ;; Hardware stack levels required when called:   15
 26043 ;; This function calls:
 26044 ;;		Nothing
 26045 ;; This function is called by:
 26046 ;;		_mode_lamp_dim
 26047 ;;		_mode_lamp_bright
 26048 ;; This function uses a reentrant model
 26049 ;;
 26050                           
 26051                           	psect	text100
 26052  01C3DE                     __ptext100:
 26053                           	opt callstack 0
 26054  01C3DE                     _PWM8_LoadDutyValue:
 26055                           	opt callstack 14
 26056                           
 26057                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 26058                           ;stkvar	_dutyValue @ sp[(0)+-2]
 26059                           
 26060                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26061                           ;incstack = 0
 26062  01C3DE  0EFE               	movlw	-2
 26063  01C3E0  006F FF8C  F00B    	movff	plusw1,btemp+10
 26064  01C3E6  0EFF               	movlw	-1
 26065  01C3E8  006F FF8C  F00C    	movff	plusw1,btemp+11
 26066  01C3EE  90D8               	bcf	status,0,c
 26067  01C3F0  320C               	rrcf	(btemp+11)^0,f,c
 26068  01C3F2  320B               	rrcf	(btemp+10)^0,f,c
 26069  01C3F4  90D8               	bcf	status,0,c
 26070  01C3F6  320C               	rrcf	(btemp+11)^0,f,c
 26071  01C3F8  320B               	rrcf	(btemp+10)^0,f,c
 26072  01C3FA  500B               	movf	(btemp+10)^0,w,c
 26073  01C3FC  6E61               	movwf	97,c	;volatile
 26074                           
 26075                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 26076                           ;stkvar	_dutyValue @ sp[(0)+-2]
 26077  01C3FE  0EFE               	movlw	-2
 26078  01C400  006F FF8C  F00C    	movff	plusw1,btemp+11
 26079  01C406  0E03               	movlw	3
 26080  01C408  160C               	andwf	(btemp+11)^0,f,c
 26081  01C40A  0E06               	movlw	6
 26082  01C40C  6E01               	movwf	btemp^0,c
 26083  01C40E                     u9745:
 26084  01C40E  90D8               	bcf	status,0,c
 26085  01C410  360C               	rlcf	(btemp+11)^0,f,c
 26086  01C412  2E01               	decfsz	btemp^0,f,c
 26087  01C414  D7FC               	goto	u9745
 26088  01C416  500C               	movf	(btemp+11)^0,w,c
 26089  01C418  6E60               	movwf	96,c	;volatile
 26090                           
 26091                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 26092  01C41A  52E5               	movf	postdec1,f,c
 26093  01C41C  52E5               	movf	postdec1,f,c
 26094  01C41E  0012               	return		;funcret
 26095  01C420                     __end_of_PWM8_LoadDutyValue:
 26096                           	opt callstack 0
 26097                           
 26098 ;; *************** function _help_button *****************
 26099 ;; Defined at:
 26100 ;;		line 26 in file "mconfig.c"
 26101 ;; Parameters:    Size  Location     Type
 26102 ;;		None
 26103 ;; Auto vars:     Size  Location     Type
 26104 ;;		None
 26105 ;; Return value:  Size  Location     Type
 26106 ;;                  1  [STACK] _Bool 
 26107 ;; Registers used:
 26108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26109 ;; Tracked objects:
 26110 ;;		On entry : 0/1
 26111 ;;		On exit  : 0/0
 26112 ;;		Unchanged: 0/0
 26113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26118 ;;Total ram usage:        0 bytes
 26119 ;; Hardware stack levels used:    1
 26120 ;; Hardware stack levels required when called:   16
 26121 ;; This function calls:
 26122 ;;		_StartTimer
 26123 ;;		_TimerDone
 26124 ;; This function is called by:
 26125 ;;		_check_help
 26126 ;; This function uses a reentrant model
 26127 ;;
 26128                           
 26129                           	psect	text101
 26130  01C612                     __ptext101:
 26131                           	opt callstack 0
 26132  01C612                     _help_button:
 26133                           	opt callstack 13
 26134                           
 26135                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 26136                           
 26137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26138                           ;incstack = 0
 26139  01C612  B0CB               	btfsc	203,0,c	;volatile
 26140  01C614  D00C               	goto	l1698
 26141                           
 26142                           ;mconfig.c: 29:   V.help = 1;
 26143  01C616  0101               	movlb	1	; () banked
 26144  01C618  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 26145                           
 26146                           ; BSR set to: 1
 26147                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 26148  01C61A  0E08               	movlw	8
 26149  01C61C  6EE6               	movwf	postinc1,c
 26150  01C61E  ECBF  F0E4         	call	_TimerDone	;wreg free
 26151  01C622  5001               	movf	btemp^0,w,c
 26152  01C624  B4D8               	btfsc	status,2,c
 26153  01C626  D003               	goto	l1698
 26154                           
 26155                           ;mconfig.c: 31:    return 1;
 26156  01C628  0E01               	movlw	1
 26157  01C62A  6E01               	movwf	btemp^0,c
 26158  01C62C  0012               	return	
 26159  01C62E                     l1698:
 26160                           
 26161                           ;mconfig.c: 34:  if (!V.help)
 26162  01C62E  0101               	movlb	1	; () banked
 26163  01C630  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 26164  01C632  D008               	goto	l11052
 26165                           
 26166                           ; BSR set to: 1
 26167                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 26168  01C634  0E2C               	movlw	44
 26169  01C636  6EE6               	movwf	postinc1,c
 26170  01C638  0E01               	movlw	1
 26171  01C63A  6EE6               	movwf	postinc1,c
 26172  01C63C  0E08               	movlw	8
 26173  01C63E  6EE6               	movwf	postinc1,c
 26174  01C640  EC50  F0E2         	call	_StartTimer	;wreg free
 26175  01C644                     l11052:
 26176                           
 26177                           ;mconfig.c: 37:  return 0;
 26178  01C644  0E00               	movlw	0
 26179  01C646  6E01               	movwf	btemp^0,c
 26180                           
 26181                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 26182  01C648  0012               	return		;funcret
 26183  01C64A                     __end_of_help_button:
 26184                           	opt callstack 0
 26185                           
 26186 ;; *************** function _TimerDone *****************
 26187 ;; Defined at:
 26188 ;;		line 20 in file "timers.c"
 26189 ;; Parameters:    Size  Location     Type
 26190 ;;  timer           1  [STACK] const unsigned char 
 26191 ;; Auto vars:     Size  Location     Type
 26192 ;;		None
 26193 ;; Return value:  Size  Location     Type
 26194 ;;                  1  [STACK] _Bool 
 26195 ;; Registers used:
 26196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26197 ;; Tracked objects:
 26198 ;;		On entry : 0/1
 26199 ;;		On exit  : 0/0
 26200 ;;		Unchanged: 0/0
 26201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26206 ;;Total ram usage:        0 bytes
 26207 ;; Hardware stack levels used:    1
 26208 ;; Hardware stack levels required when called:   15
 26209 ;; This function calls:
 26210 ;;		Nothing
 26211 ;; This function is called by:
 26212 ;;		_main
 26213 ;;		_WaitMs
 26214 ;;		_help_button
 26215 ;;		_check_help
 26216 ;;		_set_display_info
 26217 ;;		_update_adc_result
 26218 ;;		_esr_check
 26219 ;; This function uses a reentrant model
 26220 ;;
 26221                           
 26222                           	psect	text102
 26223  01C97E                     __ptext102:
 26224                           	opt callstack 0
 26225  01C97E                     _TimerDone:
 26226                           	opt callstack 14
 26227                           
 26228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26229                           ;incstack = 0
 26230  01C97E  0004               	clrwdt		;# 
 26231                           
 26232                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 26233                           ;stkvar	_timer @ sp[(0)+-1]
 26234  01C980  0EFF               	movlw	-1
 26235  01C982  50E3               	movf	plusw1,w,c
 26236  01C984  0D02               	mullw	2
 26237  01C986  0E7D               	movlw	low _tickCount
 26238  01C988  24F3               	addwf	243,w,c
 26239  01C98A  6ED9               	movwf	fsr2l,c
 26240  01C98C  0E02               	movlw	high _tickCount
 26241  01C98E  20F4               	addwfc	prodh,w,c
 26242  01C990  6EDA               	movwf	fsr2h,c
 26243  01C992  50DE               	movf	postinc2,w,c
 26244  01C994  10DE               	iorwf	postinc2,w,c
 26245  01C996  A4D8               	btfss	status,2,c
 26246  01C998  D002               	goto	l10232
 26247                           
 26248                           ;timers.c: 24:   return 1;
 26249  01C99A  0E01               	movlw	1
 26250  01C99C  D001               	goto	L31
 26251  01C99E                     l10232:
 26252                           
 26253                           ;timers.c: 26:  return 0;
 26254  01C99E  0E00               	movlw	0
 26255  01C9A0                     L31:
 26256  01C9A0  6E01               	movwf	btemp^0,c
 26257                           
 26258                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 26259  01C9A2  52E5               	movf	postdec1,f,c
 26260  01C9A4  0012               	return		;funcret
 26261  01C9A6                     __end_of_TimerDone:
 26262                           	opt callstack 0
 26263                           
 26264 ;; *************** function _StartTimer *****************
 26265 ;; Defined at:
 26266 ;;		line 12 in file "timers.c"
 26267 ;; Parameters:    Size  Location     Type
 26268 ;;  timer           1  [STACK] const unsigned char 
 26269 ;;  count           2  [STACK] const unsigned short 
 26270 ;; Auto vars:     Size  Location     Type
 26271 ;;		None
 26272 ;; Return value:  Size  Location     Type
 26273 ;;                  1  [STACK] void 
 26274 ;; Registers used:
 26275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26276 ;; Tracked objects:
 26277 ;;		On entry : 0/0
 26278 ;;		On exit  : 0/0
 26279 ;;		Unchanged: 0/0
 26280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26285 ;;Total ram usage:        0 bytes
 26286 ;; Hardware stack levels used:    1
 26287 ;; Hardware stack levels required when called:   15
 26288 ;; This function calls:
 26289 ;;		Nothing
 26290 ;; This function is called by:
 26291 ;;		_main
 26292 ;;		_WaitMs
 26293 ;;		_help_button
 26294 ;;		_check_help
 26295 ;;		_update_adc_result
 26296 ;;		_calc_bsoc
 26297 ;;		_esr_check
 26298 ;; This function uses a reentrant model
 26299 ;;
 26300                           
 26301                           	psect	text103
 26302  01C4A0                     __ptext103:
 26303                           	opt callstack 0
 26304  01C4A0                     _StartTimer:
 26305                           	opt callstack 0
 26306                           
 26307                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 26308                           ;stkvar	_count @ sp[(0)+-3]
 26309                           
 26310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26311                           ;incstack = 0
 26312 ;; hardware stack exceeded
 26313  01C4A0  0EFD               	movlw	-3
 26314  01C4A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 26315  01C4A8  0EFE               	movlw	-2
 26316  01C4AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 26317  01C4B0  90D8               	bcf	status,0,c
 26318  01C4B2  340B               	rlcf	(btemp+10)^0,w,c
 26319  01C4B4  6E09               	movwf	(btemp+8)^0,c
 26320  01C4B6  340C               	rlcf	(btemp+11)^0,w,c
 26321  01C4B8  6E0A               	movwf	(btemp+9)^0,c
 26322                           
 26323                           ;stkvar	_timer @ sp[(0)+-1]
 26324  01C4BA  0EFF               	movlw	-1
 26325  01C4BC  50E3               	movf	plusw1,w,c
 26326  01C4BE  0D02               	mullw	2
 26327  01C4C0  0E7D               	movlw	low _tickCount
 26328  01C4C2  24F3               	addwf	243,w,c
 26329  01C4C4  6ED9               	movwf	fsr2l,c
 26330  01C4C6  0E02               	movlw	high _tickCount
 26331  01C4C8  20F4               	addwfc	prodh,w,c
 26332  01C4CA  6EDA               	movwf	fsr2h,c
 26333  01C4CC  0060  F027  FFDE   	movff	btemp+8,postinc2
 26334  01C4D2  0060  F02B  FFDD   	movff	btemp+9,postdec2
 26335                           
 26336                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 26337  01C4D8  52E5               	movf	postdec1,f,c
 26338  01C4DA  52E5               	movf	postdec1,f,c
 26339  01C4DC  52E5               	movf	postdec1,f,c
 26340  01C4DE  0012               	return		;funcret
 26341  01C4E0                     __end_of_StartTimer:
 26342                           	opt callstack 0
 26343                           
 26344 ;; *************** function _display_info *****************
 26345 ;; Defined at:
 26346 ;;		line 190 in file "mconfig.c"
 26347 ;; Parameters:    Size  Location     Type
 26348 ;;		None
 26349 ;; Auto vars:     Size  Location     Type
 26350 ;;		None
 26351 ;; Return value:  Size  Location     Type
 26352 ;;                  1  [STACK] enum E16509
 26353 ;; Registers used:
 26354 ;;		btemp
 26355 ;; Tracked objects:
 26356 ;;		On entry : 0/1
 26357 ;;		On exit  : 0/0
 26358 ;;		Unchanged: 0/0
 26359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26364 ;;Total ram usage:        0 bytes
 26365 ;; Hardware stack levels used:    1
 26366 ;; Hardware stack levels required when called:   15
 26367 ;; This function calls:
 26368 ;;		Nothing
 26369 ;; This function is called by:
 26370 ;;		_check_help
 26371 ;; This function uses a reentrant model
 26372 ;;
 26373                           
 26374                           	psect	text104
 26375  01CF7A                     __ptext104:
 26376                           	opt callstack 0
 26377  01CF7A                     _display_info:
 26378                           	opt callstack 14
 26379                           
 26380                           ;mconfig.c: 192:  return V.response.info;
 26381                           
 26382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26383                           ;incstack = 0
 26384  01CF7A  0060  F6AC  F001   	movff	_V+164,btemp	;volatile
 26385                           
 26386                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 26387  01CF80  0012               	return		;funcret
 26388  01CF82                     __end_of_display_info:
 26389                           	opt callstack 0
 26390                           
 26391 ;; *************** function _display_help *****************
 26392 ;; Defined at:
 26393 ;;		line 195 in file "mconfig.c"
 26394 ;; Parameters:    Size  Location     Type
 26395 ;;		None
 26396 ;; Auto vars:     Size  Location     Type
 26397 ;;		None
 26398 ;; Return value:  Size  Location     Type
 26399 ;;                  1  [STACK] enum E16509
 26400 ;; Registers used:
 26401 ;;		btemp
 26402 ;; Tracked objects:
 26403 ;;		On entry : 3F/1
 26404 ;;		On exit  : 0/0
 26405 ;;		Unchanged: 0/0
 26406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26411 ;;Total ram usage:        0 bytes
 26412 ;; Hardware stack levels used:    1
 26413 ;; Hardware stack levels required when called:   15
 26414 ;; This function calls:
 26415 ;;		Nothing
 26416 ;; This function is called by:
 26417 ;;		_check_help
 26418 ;; This function uses a reentrant model
 26419 ;;
 26420                           
 26421                           	psect	text105
 26422  01CF82                     __ptext105:
 26423                           	opt callstack 0
 26424  01CF82                     _display_help:
 26425                           	opt callstack 14
 26426                           
 26427                           ;mconfig.c: 197:  return V.response.help_temp;
 26428                           
 26429                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26430                           ;incstack = 0
 26431  01CF82  0060  F6B0  F001   	movff	_V+165,btemp	;volatile
 26432                           
 26433                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 26434  01CF88  0012               	return		;funcret
 26435  01CF8A                     __end_of_display_help:
 26436                           	opt callstack 0
 26437                           
 26438 ;; *************** function _check_enter_button *****************
 26439 ;; Defined at:
 26440 ;;		line 49 in file "hid.c"
 26441 ;; Parameters:    Size  Location     Type
 26442 ;;  h               2  [STACK] PTR struct H_data
 26443 ;;		 -> H(9), 
 26444 ;; Auto vars:     Size  Location     Type
 26445 ;;		None
 26446 ;; Return value:  Size  Location     Type
 26447 ;;                  1  [STACK] _Bool 
 26448 ;; Registers used:
 26449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 26450 ;; Tracked objects:
 26451 ;;		On entry : 0/0
 26452 ;;		On exit  : 0/0
 26453 ;;		Unchanged: 0/0
 26454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26459 ;;Total ram usage:        0 bytes
 26460 ;; Hardware stack levels used:    1
 26461 ;; Hardware stack levels required when called:   15
 26462 ;; This function calls:
 26463 ;;		Nothing
 26464 ;; This function is called by:
 26465 ;;		_main
 26466 ;; This function uses a reentrant model
 26467 ;;
 26468                           
 26469                           	psect	text106
 26470  01BAEE                     __ptext106:
 26471                           	opt callstack 0
 26472  01BAEE                     _check_enter_button:
 26473                           	opt callstack 15
 26474                           
 26475                           ;hid.c: 49: _Bool check_enter_button(H_data* h);hid.c: 50: {;hid.c: 51:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 26476                           ;stkvar	_h @ sp[(0)+-2]
 26477                           
 26478                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26479                           ;incstack = 0
 26480  01BAEE  0EFE               	movlw	-2
 26481  01BAF0  006F FF8C  F00B    	movff	plusw1,btemp+10
 26482  01BAF6  0EFF               	movlw	-1
 26483  01BAF8  006F FF8C  F00C    	movff	plusw1,btemp+11
 26484  01BAFE  0E04               	movlw	4
 26485  01BB00  240B               	addwf	(btemp+10)^0,w,c
 26486  01BB02  6ED9               	movwf	fsr2l,c
 26487  01BB04  0E00               	movlw	0
 26488  01BB06  200C               	addwfc	(btemp+11)^0,w,c
 26489  01BB08  6EDA               	movwf	fsr2h,c
 26490  01BB0A  50DF               	movf	indf2,w,c
 26491  01BB0C  A4D8               	btfss	status,2,c
 26492  01BB0E  D023               	goto	l13916
 26493                           
 26494                           ;stkvar	_h @ sp[(0)+-2]
 26495  01BB10  0EFE               	movlw	-2
 26496  01BB12  006F FF8C  F00B    	movff	plusw1,btemp+10
 26497  01BB18  0EFF               	movlw	-1
 26498  01BB1A  006F FF8C  F00C    	movff	plusw1,btemp+11
 26499  01BB20  0E05               	movlw	5
 26500  01BB22  240B               	addwf	(btemp+10)^0,w,c
 26501  01BB24  6ED9               	movwf	fsr2l,c
 26502  01BB26  0E00               	movlw	0
 26503  01BB28  200C               	addwfc	(btemp+11)^0,w,c
 26504  01BB2A  6EDA               	movwf	fsr2h,c
 26505  01BB2C  50DF               	movf	indf2,w,c
 26506  01BB2E  A4D8               	btfss	status,2,c
 26507  01BB30  D012               	goto	l13916
 26508                           
 26509                           ;hid.c: 52:   h->wait_enter = 1;
 26510                           ;stkvar	_h @ sp[(0)+-2]
 26511  01BB32  0EFE               	movlw	-2
 26512  01BB34  006F FF8C  F00B    	movff	plusw1,btemp+10
 26513  01BB3A  0EFF               	movlw	-1
 26514  01BB3C  006F FF8C  F00C    	movff	plusw1,btemp+11
 26515  01BB42  0E04               	movlw	4
 26516  01BB44  240B               	addwf	(btemp+10)^0,w,c
 26517  01BB46  6ED9               	movwf	fsr2l,c
 26518  01BB48  0E00               	movlw	0
 26519  01BB4A  200C               	addwfc	(btemp+11)^0,w,c
 26520  01BB4C  6EDA               	movwf	fsr2h,c
 26521  01BB4E  0E01               	movlw	1
 26522  01BB50  6EDF               	movwf	indf2,c
 26523                           
 26524                           ;hid.c: 53:   return 1;
 26525  01BB52  0E01               	movlw	1
 26526  01BB54  D001               	goto	L32
 26527  01BB56                     l13916:
 26528                           
 26529                           ;hid.c: 55:  return 0;
 26530  01BB56  0E00               	movlw	0
 26531  01BB58                     L32:
 26532  01BB58  6E01               	movwf	btemp^0,c
 26533                           
 26534                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 26535  01BB5A  52E5               	movf	postdec1,f,c
 26536  01BB5C  52E5               	movf	postdec1,f,c
 26537  01BB5E  0012               	return		;funcret
 26538  01BB60                     __end_of_check_enter_button:
 26539                           	opt callstack 0
 26540                           
 26541 ;; *************** function _calc_ror_data *****************
 26542 ;; Defined at:
 26543 ;;		line 102 in file "mbmc.c"
 26544 ;; Parameters:    Size  Location     Type
 26545 ;;		None
 26546 ;; Auto vars:     Size  Location     Type
 26547 ;;		None
 26548 ;; Return value:  Size  Location     Type
 26549 ;;                  1  [STACK] void 
 26550 ;; Registers used:
 26551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26552 ;; Tracked objects:
 26553 ;;		On entry : 0/0
 26554 ;;		On exit  : 0/0
 26555 ;;		Unchanged: 0/0
 26556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26561 ;;Total ram usage:        0 bytes
 26562 ;; Hardware stack levels used:    1
 26563 ;; Hardware stack levels required when called:   18
 26564 ;; This function calls:
 26565 ;;		___flge
 26566 ;;		___flsub
 26567 ;;		_conv_raw_result
 26568 ;;		_fabsf
 26569 ;; This function is called by:
 26570 ;;		_main
 26571 ;; This function uses a reentrant model
 26572 ;;
 26573                           
 26574                           	psect	text107
 26575  01934E                     __ptext107:
 26576                           	opt callstack 0
 26577  01934E                     _calc_ror_data:
 26578                           	opt callstack 12
 26579                           
 26580                           ;mbmc.c: 104:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 106:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 26581                           
 26582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26583                           ;incstack = 0
 26584  01934E  0060  F193  FFE6   	movff	calc_ror_data@bcror,postinc1
 26585  019354  0060  F197  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 26586  01935A  0060  F19B  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 26587  019360  0060  F19F  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 26588  019366  0E00               	movlw	0
 26589  019368  6EE6               	movwf	postinc1,c
 26590  01936A  0E00               	movlw	0
 26591  01936C  6EE6               	movwf	postinc1,c
 26592  01936E  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 26593  019372  0060  F007  FFE6   	movff	btemp,postinc1
 26594  019378  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26595  01937E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26596  019384  0060  F013  FFE6   	movff	btemp+3,postinc1
 26597  01938A  ECAA  F0E1         	call	___flsub	;wreg free
 26598  01938E  0060  F007  FFE6   	movff	btemp,postinc1
 26599  019394  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26600  01939A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26601  0193A0  0060  F013  FFE6   	movff	btemp+3,postinc1
 26602  0193A6  EC98  F0D8         	call	_fabsf	;wreg free
 26603  0193AA  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 26604  0193B0  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 26605  0193B6  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 26606  0193BC  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 26607                           
 26608                           ;mbmc.c: 107:  bcror = conv_raw_result(C_BATT, CONV);
 26609  0193C2  0E00               	movlw	0
 26610  0193C4  6EE6               	movwf	postinc1,c
 26611  0193C6  0E00               	movlw	0
 26612  0193C8  6EE6               	movwf	postinc1,c
 26613  0193CA  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 26614  0193CE  0060  F004  F064   	movff	btemp,calc_ror_data@bcror
 26615  0193D4  0060  F008  F065   	movff	btemp+1,calc_ror_data@bcror+1
 26616  0193DA  0060  F00C  F066   	movff	btemp+2,calc_ror_data@bcror+2
 26617  0193E0  0060  F010  F067   	movff	btemp+3,calc_ror_data@bcror+3
 26618                           
 26619                           ;mbmc.c: 108:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 26620  0193E6  0060  F1A3  FFE6   	movff	calc_ror_data@bvror,postinc1
 26621  0193EC  0060  F1A7  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 26622  0193F2  0060  F1AB  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 26623  0193F8  0060  F1AF  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 26624  0193FE  0E00               	movlw	0
 26625  019400  6EE6               	movwf	postinc1,c
 26626  019402  0E04               	movlw	4
 26627  019404  6EE6               	movwf	postinc1,c
 26628  019406  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 26629  01940A  0060  F007  FFE6   	movff	btemp,postinc1
 26630  019410  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26631  019416  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26632  01941C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26633  019422  ECAA  F0E1         	call	___flsub	;wreg free
 26634  019426  0060  F007  FFE6   	movff	btemp,postinc1
 26635  01942C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26636  019432  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26637  019438  0060  F013  FFE6   	movff	btemp+3,postinc1
 26638  01943E  EC98  F0D8         	call	_fabsf	;wreg free
 26639  019442  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 26640  019448  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 26641  01944E  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 26642  019454  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 26643                           
 26644                           ;mbmc.c: 109:  if (C.bv_ror < 0.0051)
 26645  01945A  0EE7               	movlw	231
 26646  01945C  6EE6               	movwf	postinc1,c
 26647  01945E  0E1D               	movlw	29
 26648  019460  6EE6               	movwf	postinc1,c
 26649  019462  0EA7               	movlw	167
 26650  019464  6EE6               	movwf	postinc1,c
 26651  019466  0E3B               	movlw	59
 26652  019468  6EE6               	movwf	postinc1,c
 26653  01946A  EE21  F36B         	lfsr	2,_C+108	;volatile
 26654  01946E  006F FF7B FFE6     	movff	postinc2,postinc1
 26655  019474  006F FF7B FFE6     	movff	postinc2,postinc1
 26656  01947A  006F FF7B FFE6     	movff	postinc2,postinc1
 26657  019480  006F FF7B FFE6     	movff	postinc2,postinc1
 26658  019486  ECE3  F0CB         	call	___flge	;wreg free
 26659  01948A  B001               	btfsc	btemp& (0+255),0,c
 26660  01948C  D010               	goto	l11582
 26661                           
 26662                           ;mbmc.c: 110:   C.bv_ror = 0.0140 + 0.0001;
 26663  01948E  0EB0               	movlw	176
 26664  019490  006F FFA0  F76B    	movff	wreg,_C+108	;volatile
 26665  019496  0E03               	movlw	3
 26666  019498  006F FFA0  F76C    	movff	wreg,_C+109	;volatile
 26667  01949E  0E67               	movlw	103
 26668  0194A0  006F FFA0  F76D    	movff	wreg,_C+110	;volatile
 26669  0194A6  0E3C               	movlw	60
 26670  0194A8  006F FFA0  F76E    	movff	wreg,_C+111	;volatile
 26671  0194AE                     l11582:
 26672                           
 26673                           ;mbmc.c: 111:  bvror = conv_raw_result(V_BAT, CONV);
 26674  0194AE  0E00               	movlw	0
 26675  0194B0  6EE6               	movwf	postinc1,c
 26676  0194B2  0E04               	movlw	4
 26677  0194B4  6EE6               	movwf	postinc1,c
 26678  0194B6  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 26679  0194BA  0060  F004  F068   	movff	btemp,calc_ror_data@bvror
 26680  0194C0  0060  F008  F069   	movff	btemp+1,calc_ror_data@bvror+1
 26681  0194C6  0060  F00C  F06A   	movff	btemp+2,calc_ror_data@bvror+2
 26682  0194CC  0060  F010  F06B   	movff	btemp+3,calc_ror_data@bvror+3
 26683                           
 26684                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 26685  0194D2  0012               	return		;funcret
 26686  0194D4                     __end_of_calc_ror_data:
 26687                           	opt callstack 0
 26688                           
 26689 ;; *************** function _fabsf *****************
 26690 ;; Defined at:
 26691 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 26692 ;; Parameters:    Size  Location     Type
 26693 ;;  x               4  [STACK] float 
 26694 ;; Auto vars:     Size  Location     Type
 26695 ;;  u               4  [STACK] struct .
 26696 ;; Return value:  Size  Location     Type
 26697 ;;                  4  [STACK] float 
 26698 ;; Registers used:
 26699 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 26700 ;; Tracked objects:
 26701 ;;		On entry : 0/0
 26702 ;;		On exit  : 0/0
 26703 ;;		Unchanged: 0/0
 26704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26709 ;;Total ram usage:        0 bytes
 26710 ;; Hardware stack levels used:    1
 26711 ;; Hardware stack levels required when called:   15
 26712 ;; This function calls:
 26713 ;;		Nothing
 26714 ;; This function is called by:
 26715 ;;		_main
 26716 ;;		_calc_ror_data
 26717 ;;		_calc_bsoc
 26718 ;;		_esr_check
 26719 ;; This function uses a reentrant model
 26720 ;;
 26721                           
 26722                           	psect	text108
 26723  01B130                     __ptext108:
 26724                           	opt callstack 0
 26725  01B130                     _fabsf:
 26726                           	opt callstack 0
 26727                           
 26728                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26729  01B130  52E6               	movf	postinc1,f,c
 26730  01B132  52E6               	movf	postinc1,f,c
 26731  01B134  52E6               	movf	postinc1,f,c
 26732  01B136  52E6               	movf	postinc1,f,c
 26733                           
 26734                           ;incstack = 0
 26735 ;; hardware stack exceeded
 26736  01B138  0060  F7B8  F009   	movff	fabsf@F463,btemp+8
 26737  01B13E  0060  F7BC  F00A   	movff	fabsf@F463+1,btemp+9
 26738  01B144  0060  F7C0  F00B   	movff	fabsf@F463+2,btemp+10
 26739  01B14A  0060  F7C4  F00C   	movff	fabsf@F463+3,btemp+11
 26740                           
 26741                           ;stkvar	_u @ sp[(-4)+0]
 26742  01B150  0EFC               	movlw	-4
 26743  01B152  0060  F027  FFE3   	movff	btemp+8,plusw1
 26744  01B158  0EFD               	movlw	-3
 26745  01B15A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26746  01B160  0EFE               	movlw	-2
 26747  01B162  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26748  01B168  0EFF               	movlw	-1
 26749  01B16A  0060  F033  FFE3   	movff	btemp+11,plusw1
 26750                           
 26751                           ;stkvar	_x @ sp[(-4)+-4]
 26752  01B170  0EF8               	movlw	-8
 26753  01B172  006F FF8C  F009    	movff	plusw1,btemp+8
 26754  01B178  0EF9               	movlw	-7
 26755  01B17A  006F FF8C  F00A    	movff	plusw1,btemp+9
 26756  01B180  0EFA               	movlw	-6
 26757  01B182  006F FF8C  F00B    	movff	plusw1,btemp+10
 26758  01B188  0EFB               	movlw	-5
 26759  01B18A  006F FF8C  F00C    	movff	plusw1,btemp+11
 26760                           
 26761                           ;stkvar	_u @ sp[(-4)+0]
 26762  01B190  0EFC               	movlw	-4
 26763  01B192  0060  F027  FFE3   	movff	btemp+8,plusw1
 26764  01B198  0EFD               	movlw	-3
 26765  01B19A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 26766  01B1A0  0EFE               	movlw	-2
 26767  01B1A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 26768  01B1A8  0EFF               	movlw	-1
 26769  01B1AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 26770                           
 26771                           ;stkvar	_u @ sp[(-4)+0]
 26772  01B1B0  0EFF               	movlw	-1
 26773  01B1B2  9EE3               	bcf	plusw1,7,c
 26774                           
 26775                           ;stkvar	_u @ sp[(-4)+0]
 26776  01B1B4  0EFC               	movlw	-4
 26777  01B1B6  006F FF8C  F001    	movff	plusw1,btemp
 26778  01B1BC  0EFD               	movlw	-3
 26779  01B1BE  006F FF8C  F002    	movff	plusw1,btemp+1
 26780  01B1C4  0EFE               	movlw	-2
 26781  01B1C6  006F FF8C  F003    	movff	plusw1,btemp+2
 26782  01B1CC  0EFF               	movlw	-1
 26783  01B1CE  006F FF8C  F004    	movff	plusw1,btemp+3
 26784                           
 26785                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 26786  01B1D4  0EF8               	movlw	248
 26787  01B1D6  26E1               	addwf	fsr1l,f,c
 26788  01B1D8  0EFF               	movlw	255
 26789  01B1DA  22E2               	addwfc	fsr1h,f,c
 26790  01B1DC  0012               	return		;funcret
 26791  01B1DE                     __end_of_fabsf:
 26792                           	opt callstack 0
 26793                           
 26794 ;; *************** function _conv_raw_result *****************
 26795 ;; Defined at:
 26796 ;;		line 127 in file "daq.c"
 26797 ;; Parameters:    Size  Location     Type
 26798 ;;  chan            1  [STACK] const enum E16590
 26799 ;;  to_what         1  [STACK] const enum E16671
 26800 ;; Auto vars:     Size  Location     Type
 26801 ;;		None
 26802 ;; Return value:  Size  Location     Type
 26803 ;;                  4  [STACK] float 
 26804 ;; Registers used:
 26805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 26806 ;; Tracked objects:
 26807 ;;		On entry : 0/0
 26808 ;;		On exit  : 0/0
 26809 ;;		Unchanged: 0/0
 26810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26815 ;;Total ram usage:        0 bytes
 26816 ;; Hardware stack levels used:    1
 26817 ;; Hardware stack levels required when called:   17
 26818 ;; This function calls:
 26819 ;;		___fldiv
 26820 ;;		___flmul
 26821 ;;		___flsub
 26822 ;;		___xxtofl
 26823 ;;		_get_raw_result
 26824 ;;		_nanf
 26825 ;; This function is called by:
 26826 ;;		_main
 26827 ;;		_convert_adc_data
 26828 ;;		_calc_ror_data
 26829 ;;		_check_day_time
 26830 ;;		_init_bsoc
 26831 ;;		_esr_check
 26832 ;; This function uses a reentrant model
 26833 ;;
 26834                           
 26835                           	psect	text109
 26836  01543C                     __ptext109:
 26837                           	opt callstack 0
 26838  01543C                     _conv_raw_result:
 26839                           	opt callstack 0
 26840                           
 26841                           ;daq.c: 127: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);
      +                          daq.c: 128: {;daq.c: 130:  switch (to_what) {
 26842                           
 26843                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26844                           ;incstack = 0
 26845 ;; hardware stack exceeded
 26846  01543C  D24A               	goto	l10214
 26847  01543E                     l10160:
 26848                           
 26849                           ;daq.c: 132:   if (!(0b0011110001110111 >> chan & 0x1))
 26850                           ;stkvar	_chan @ sp[(0)+-1]
 26851  01543E  0EFF               	movlw	-1
 26852  015440  006F FF8C  F00C    	movff	plusw1,btemp+11
 26853  015446  0E77               	movlw	119
 26854  015448  6E09               	movwf	(btemp+8)^0,c
 26855  01544A  0E3C               	movlw	60
 26856  01544C  6E0A               	movwf	(btemp+9)^0,c
 26857  01544E  2A0C               	incf	(btemp+11)^0,f,c
 26858  015450  D003               	goto	u9434
 26859  015452                     u9435:
 26860  015452  340A               	rlcf	(btemp+9)^0,w,c
 26861  015454  320A               	rrcf	(btemp+9)^0,f,c
 26862  015456  3209               	rrcf	(btemp+8)^0,f,c
 26863  015458                     u9434:
 26864  015458  2E0C               	decfsz	(btemp+11)^0,f,c
 26865  01545A  D7FB               	goto	u9435
 26866  01545C  B009               	btfsc	(btemp+8)^0,0,c
 26867  01545E  D007               	goto	l10166
 26868                           
 26869                           ;daq.c: 133:    return nanf("");
 26870  015460  0E4D               	movlw	low (STR_81+126)
 26871  015462  6EE6               	movwf	postinc1,c
 26872  015464  0EFB               	movlw	high (STR_81+126)
 26873  015466  6EE6               	movwf	postinc1,c
 26874  015468  EC4C  F0DF         	call	_nanf	;wreg free
 26875  01546C  D242               	goto	l1845
 26876  01546E                     l10166:
 26877                           
 26878                           ;daq.c: 135:   if (0b0000000000000011 >> chan & 0x1) {
 26879                           ;stkvar	_chan @ sp[(0)+-1]
 26880  01546E  0EFF               	movlw	-1
 26881  015470  006F FF8C  F00C    	movff	plusw1,btemp+11
 26882  015476  0E03               	movlw	3
 26883  015478  6E09               	movwf	(btemp+8)^0,c
 26884  01547A  0E00               	movlw	0
 26885  01547C  6E0A               	movwf	(btemp+9)^0,c
 26886  01547E  2A0C               	incf	(btemp+11)^0,f,c
 26887  015480  D003               	goto	u9454
 26888  015482                     u9455:
 26889  015482  340A               	rlcf	(btemp+9)^0,w,c
 26890  015484  320A               	rrcf	(btemp+9)^0,f,c
 26891  015486  3209               	rrcf	(btemp+8)^0,f,c
 26892  015488                     u9454:
 26893  015488  2E0C               	decfsz	(btemp+11)^0,f,c
 26894  01548A  D7FB               	goto	u9455
 26895  01548C  A009               	btfss	(btemp+8)^0,0,c
 26896  01548E  D0F3               	goto	l10180
 26897                           
 26898                           ;daq.c: 136:    if (0b0000000000000001 >> chan & 0x1) {
 26899                           ;stkvar	_chan @ sp[(0)+-1]
 26900  015490  0EFF               	movlw	-1
 26901  015492  006F FF8C  F00C    	movff	plusw1,btemp+11
 26902  015498  0E01               	movlw	1
 26903  01549A  6E09               	movwf	(btemp+8)^0,c
 26904  01549C  0E00               	movlw	0
 26905  01549E  6E0A               	movwf	(btemp+9)^0,c
 26906  0154A0  2A0C               	incf	(btemp+11)^0,f,c
 26907  0154A2  D003               	goto	u9474
 26908  0154A4                     u9475:
 26909  0154A4  340A               	rlcf	(btemp+9)^0,w,c
 26910  0154A6  320A               	rrcf	(btemp+9)^0,f,c
 26911  0154A8  3209               	rrcf	(btemp+8)^0,f,c
 26912  0154AA                     u9474:
 26913  0154AA  2E0C               	decfsz	(btemp+11)^0,f,c
 26914  0154AC  D7FB               	goto	u9475
 26915  0154AE  A009               	btfss	(btemp+8)^0,0,c
 26916  0154B0  D071               	goto	l10176
 26917                           
 26918                           ;daq.c: 137:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[0]) * R.n_
      +                          scalar[0];
 26919  0154B2  0060  F357  FFE6   	movff	_R+42,postinc1
 26920  0154B8  0060  F35B  FFE6   	movff	_R+43,postinc1
 26921  0154BE  0060  F35F  FFE6   	movff	_R+44,postinc1
 26922  0154C4  0060  F363  FFE6   	movff	_R+45,postinc1
 26923  0154CA  0060  F344  F009   	movff	_R+38,btemp+8	;volatile
 26924  0154D0  0060  F348  F00A   	movff	_R+39,btemp+9	;volatile
 26925  0154D6  0E00               	movlw	0
 26926  0154D8  BE0A               	btfsc	(btemp+9)^0,7,c
 26927  0154DA  0EFF               	movlw	255
 26928  0154DC  6E0B               	movwf	(btemp+10)^0,c
 26929  0154DE  6E0C               	movwf	(btemp+11)^0,c
 26930  0154E0  0060  F027  FFE6   	movff	btemp+8,postinc1
 26931  0154E6  0060  F02B  FFE6   	movff	btemp+9,postinc1
 26932  0154EC  0060  F02F  FFE6   	movff	btemp+10,postinc1
 26933  0154F2  0060  F033  FFE6   	movff	btemp+11,postinc1
 26934  0154F8  0E01               	movlw	1
 26935  0154FA  6EE6               	movwf	postinc1,c
 26936  0154FC  EC2C  F0C6         	call	___xxtofl	;wreg free
 26937  015500  0060  F007  FFE6   	movff	btemp,postinc1
 26938  015506  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26939  01550C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26940  015512  0060  F013  FFE6   	movff	btemp+3,postinc1
 26941                           
 26942                           ;stkvar	_chan @ sp[(-8)+-1]
 26943  015518  0EF7               	movlw	-9
 26944  01551A  50E3               	movf	plusw1,w,c
 26945  01551C  6EE6               	movwf	postinc1,c
 26946  01551E  ECD3  F0E6         	call	_get_raw_result	;wreg free
 26947  015522  0060  F004  F00B   	movff	btemp,btemp+10
 26948  015528  0060  F008  F00C   	movff	btemp+1,btemp+11
 26949  01552E  500B               	movf	(btemp+10)^0,w,c
 26950  015530  6E05               	movwf	(btemp+4)^0,c
 26951  015532  500C               	movf	(btemp+11)^0,w,c
 26952  015534  6E06               	movwf	(btemp+5)^0,c
 26953  015536  6A07               	clrf	(btemp+6)^0,c
 26954  015538  6A08               	clrf	(btemp+7)^0,c
 26955  01553A  0060  F017  FFE6   	movff	btemp+4,postinc1
 26956  015540  0060  F01B  FFE6   	movff	btemp+5,postinc1
 26957  015546  0060  F01F  FFE6   	movff	btemp+6,postinc1
 26958  01554C  0060  F023  FFE6   	movff	btemp+7,postinc1
 26959  015552  0E00               	movlw	0
 26960  015554  6EE6               	movwf	postinc1,c
 26961  015556  EC2C  F0C6         	call	___xxtofl	;wreg free
 26962  01555A  0060  F007  FFE6   	movff	btemp,postinc1
 26963  015560  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26964  015566  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26965  01556C  0060  F013  FFE6   	movff	btemp+3,postinc1
 26966  015572  ECAA  F0E1         	call	___flsub	;wreg free
 26967  015576  0060  F007  FFE6   	movff	btemp,postinc1
 26968  01557C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26969  015582  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26970  015588  0060  F013  FFE6   	movff	btemp+3,postinc1
 26971  01558E  EC6E  F09F         	call	___flmul	;wreg free
 26972  015592  D1AF               	goto	l1845
 26973  015594                     l10176:
 26974                           
 26975                           ;daq.c: 139:     return((float) ((int16_t) get_raw_result(chan)) - R.n_offset[1]) * R.n_
      +                          scalar[1];
 26976  015594  0060  F367  FFE6   	movff	_R+46,postinc1
 26977  01559A  0060  F36B  FFE6   	movff	_R+47,postinc1
 26978  0155A0  0060  F36F  FFE6   	movff	_R+48,postinc1
 26979  0155A6  0060  F373  FFE6   	movff	_R+49,postinc1
 26980  0155AC  0060  F34C  F009   	movff	_R+40,btemp+8	;volatile
 26981  0155B2  0060  F350  F00A   	movff	_R+41,btemp+9	;volatile
 26982  0155B8  0E00               	movlw	0
 26983  0155BA  BE0A               	btfsc	(btemp+9)^0,7,c
 26984  0155BC  0EFF               	movlw	255
 26985  0155BE  6E0B               	movwf	(btemp+10)^0,c
 26986  0155C0  6E0C               	movwf	(btemp+11)^0,c
 26987  0155C2  0060  F027  FFE6   	movff	btemp+8,postinc1
 26988  0155C8  0060  F02B  FFE6   	movff	btemp+9,postinc1
 26989  0155CE  0060  F02F  FFE6   	movff	btemp+10,postinc1
 26990  0155D4  0060  F033  FFE6   	movff	btemp+11,postinc1
 26991  0155DA  0E01               	movlw	1
 26992  0155DC  6EE6               	movwf	postinc1,c
 26993  0155DE  EC2C  F0C6         	call	___xxtofl	;wreg free
 26994  0155E2  0060  F007  FFE6   	movff	btemp,postinc1
 26995  0155E8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 26996  0155EE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 26997  0155F4  0060  F013  FFE6   	movff	btemp+3,postinc1
 26998                           
 26999                           ;stkvar	_chan @ sp[(-8)+-1]
 27000  0155FA  0EF7               	movlw	-9
 27001  0155FC  50E3               	movf	plusw1,w,c
 27002  0155FE  6EE6               	movwf	postinc1,c
 27003  015600  ECD3  F0E6         	call	_get_raw_result	;wreg free
 27004  015604  0060  F004  F00B   	movff	btemp,btemp+10
 27005  01560A  0060  F008  F00C   	movff	btemp+1,btemp+11
 27006  015610  500B               	movf	(btemp+10)^0,w,c
 27007  015612  6E05               	movwf	(btemp+4)^0,c
 27008  015614  500C               	movf	(btemp+11)^0,w,c
 27009  015616  6E06               	movwf	(btemp+5)^0,c
 27010  015618  6A07               	clrf	(btemp+6)^0,c
 27011  01561A  6A08               	clrf	(btemp+7)^0,c
 27012  01561C  0060  F017  FFE6   	movff	btemp+4,postinc1
 27013  015622  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27014  015628  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27015  01562E  0060  F023  FFE6   	movff	btemp+7,postinc1
 27016  015634  0E00               	movlw	0
 27017  015636  6EE6               	movwf	postinc1,c
 27018  015638  EC2C  F0C6         	call	___xxtofl	;wreg free
 27019  01563C  0060  F007  FFE6   	movff	btemp,postinc1
 27020  015642  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27021  015648  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27022  01564E  0060  F013  FFE6   	movff	btemp+3,postinc1
 27023  015654  ECAA  F0E1         	call	___flsub	;wreg free
 27024  015658  0060  F007  FFE6   	movff	btemp,postinc1
 27025  01565E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27026  015664  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27027  01566A  0060  F013  FFE6   	movff	btemp+3,postinc1
 27028  015670  EC6E  F09F         	call	___flmul	;wreg free
 27029  015674  D13E               	goto	l1845
 27030  015676                     l10180:
 27031                           
 27032                           ;daq.c: 142:    if (0b0000100000000000 >> chan & 0x1) {
 27033                           ;stkvar	_chan @ sp[(0)+-1]
 27034  015676  0EFF               	movlw	-1
 27035  015678  006F FF8C  F00C    	movff	plusw1,btemp+11
 27036  01567E  0E00               	movlw	0
 27037  015680  6E09               	movwf	(btemp+8)^0,c
 27038  015682  0E08               	movlw	8
 27039  015684  6E0A               	movwf	(btemp+9)^0,c
 27040  015686  2A0C               	incf	(btemp+11)^0,f,c
 27041  015688  D003               	goto	u9494
 27042  01568A                     u9495:
 27043  01568A  340A               	rlcf	(btemp+9)^0,w,c
 27044  01568C  320A               	rrcf	(btemp+9)^0,f,c
 27045  01568E  3209               	rrcf	(btemp+8)^0,f,c
 27046  015690                     u9494:
 27047  015690  2E0C               	decfsz	(btemp+11)^0,f,c
 27048  015692  D7FB               	goto	u9495
 27049  015694  A009               	btfss	(btemp+8)^0,0,c
 27050  015696  D008               	goto	l10188
 27051                           
 27052                           ;daq.c: 143:     return 25.0;
 27053  015698  0E00               	movlw	0
 27054  01569A  6E01               	movwf	btemp^0,c
 27055  01569C  0E00               	movlw	0
 27056  01569E  6E02               	movwf	(btemp+1)^0,c
 27057  0156A0  0EC8               	movlw	200
 27058  0156A2  6E03               	movwf	(btemp+2)^0,c
 27059  0156A4  0E41               	movlw	65
 27060  0156A6  D113               	goto	L33
 27061  0156A8                     l10188:
 27062                           
 27063                           ;daq.c: 145:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 27064  0156A8  0E00               	movlw	0
 27065  0156AA  6EE6               	movwf	postinc1,c
 27066  0156AC  0E00               	movlw	0
 27067  0156AE  6EE6               	movwf	postinc1,c
 27068  0156B0  0E7A               	movlw	122
 27069  0156B2  6EE6               	movwf	postinc1,c
 27070  0156B4  0E44               	movlw	68
 27071  0156B6  6EE6               	movwf	postinc1,c
 27072  0156B8  0E61               	movlw	97
 27073  0156BA  6EE6               	movwf	postinc1,c
 27074  0156BC  0E03               	movlw	3
 27075  0156BE  6EE6               	movwf	postinc1,c
 27076  0156C0  0E84               	movlw	132
 27077  0156C2  6EE6               	movwf	postinc1,c
 27078  0156C4  0E40               	movlw	64
 27079  0156C6  6EE6               	movwf	postinc1,c
 27080                           
 27081                           ;stkvar	_chan @ sp[(-8)+-1]
 27082  0156C8  0EF7               	movlw	-9
 27083  0156CA  50E3               	movf	plusw1,w,c
 27084  0156CC  6EE6               	movwf	postinc1,c
 27085  0156CE  ECD3  F0E6         	call	_get_raw_result	;wreg free
 27086  0156D2  0060  F004  F00B   	movff	btemp,btemp+10
 27087  0156D8  0060  F008  F00C   	movff	btemp+1,btemp+11
 27088  0156DE  500B               	movf	(btemp+10)^0,w,c
 27089  0156E0  6E05               	movwf	(btemp+4)^0,c
 27090  0156E2  500C               	movf	(btemp+11)^0,w,c
 27091  0156E4  6E06               	movwf	(btemp+5)^0,c
 27092  0156E6  6A07               	clrf	(btemp+6)^0,c
 27093  0156E8  6A08               	clrf	(btemp+7)^0,c
 27094  0156EA  0060  F017  FFE6   	movff	btemp+4,postinc1
 27095  0156F0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27096  0156F6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27097  0156FC  0060  F023  FFE6   	movff	btemp+7,postinc1
 27098  015702  0E00               	movlw	0
 27099  015704  6EE6               	movwf	postinc1,c
 27100  015706  EC2C  F0C6         	call	___xxtofl	;wreg free
 27101  01570A  0060  F007  FFE6   	movff	btemp,postinc1
 27102  015710  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27103  015716  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27104  01571C  0060  F013  FFE6   	movff	btemp+3,postinc1
 27105  015722  EC6E  F09F         	call	___flmul	;wreg free
 27106  015726  0060  F007  FFE6   	movff	btemp,postinc1
 27107  01572C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27108  015732  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27109  015738  0060  F013  FFE6   	movff	btemp+3,postinc1
 27110  01573E  EC61  F0A7         	call	___fldiv	;wreg free
 27111  015742  D0D7               	goto	l1845
 27112  015744                     l10192:
 27113                           
 27114                           ;daq.c: 150:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 27115                           ;stkvar	_chan @ sp[(0)+-1]
 27116  015744  0EFF               	movlw	-1
 27117  015746  006F FF8C  F00C    	movff	plusw1,btemp+11
 27118  01574C  0E03               	movlw	3
 27119  01574E  6E09               	movwf	(btemp+8)^0,c
 27120  015750  0E00               	movlw	0
 27121  015752  6E0A               	movwf	(btemp+9)^0,c
 27122  015754  2A0C               	incf	(btemp+11)^0,f,c
 27123  015756  D003               	goto	u9514
 27124  015758                     u9515:
 27125  015758  340A               	rlcf	(btemp+9)^0,w,c
 27126  01575A  320A               	rrcf	(btemp+9)^0,f,c
 27127  01575C  3209               	rrcf	(btemp+8)^0,f,c
 27128  01575E                     u9514:
 27129  01575E  2E0C               	decfsz	(btemp+11)^0,f,c
 27130  015760  D7FB               	goto	u9515
 27131  015762  B009               	btfsc	(btemp+8)^0,0,c
 27132  015764  D011               	goto	u9540
 27133                           
 27134                           ;stkvar	_chan @ sp[(0)+-1]
 27135  015766  0EFF               	movlw	-1
 27136  015768  006F FF8C  F00C    	movff	plusw1,btemp+11
 27137  01576E  0E00               	movlw	0
 27138  015770  6E09               	movwf	(btemp+8)^0,c
 27139  015772  0E08               	movlw	8
 27140  015774  6E0A               	movwf	(btemp+9)^0,c
 27141  015776  2A0C               	incf	(btemp+11)^0,f,c
 27142  015778  D003               	goto	u9534
 27143  01577A                     u9535:
 27144  01577A  340A               	rlcf	(btemp+9)^0,w,c
 27145  01577C  320A               	rrcf	(btemp+9)^0,f,c
 27146  01577E  3209               	rrcf	(btemp+8)^0,f,c
 27147  015780                     u9534:
 27148  015780  2E0C               	decfsz	(btemp+11)^0,f,c
 27149  015782  D7FB               	goto	u9535
 27150  015784  A009               	btfss	(btemp+8)^0,0,c
 27151  015786  D04E               	goto	l10200
 27152  015788                     u9540:
 27153                           
 27154                           ;daq.c: 151:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 27155  015788  0E00               	movlw	0
 27156  01578A  6EE6               	movwf	postinc1,c
 27157  01578C  0E00               	movlw	0
 27158  01578E  6EE6               	movwf	postinc1,c
 27159  015790  0E7A               	movlw	122
 27160  015792  6EE6               	movwf	postinc1,c
 27161  015794  0E44               	movlw	68
 27162  015796  6EE6               	movwf	postinc1,c
 27163  015798  0E00               	movlw	0
 27164  01579A  6EE6               	movwf	postinc1,c
 27165  01579C  0E00               	movlw	0
 27166  01579E  6EE6               	movwf	postinc1,c
 27167  0157A0  0E20               	movlw	32
 27168  0157A2  6EE6               	movwf	postinc1,c
 27169  0157A4  0E3F               	movlw	63
 27170  0157A6  6EE6               	movwf	postinc1,c
 27171                           
 27172                           ;stkvar	_chan @ sp[(-8)+-1]
 27173  0157A8  0EF7               	movlw	-9
 27174  0157AA  50E3               	movf	plusw1,w,c
 27175  0157AC  6EE6               	movwf	postinc1,c
 27176  0157AE  ECD3  F0E6         	call	_get_raw_result	;wreg free
 27177  0157B2  0060  F004  F00B   	movff	btemp,btemp+10
 27178  0157B8  0060  F008  F00C   	movff	btemp+1,btemp+11
 27179  0157BE  500B               	movf	(btemp+10)^0,w,c
 27180  0157C0  6E05               	movwf	(btemp+4)^0,c
 27181  0157C2  500C               	movf	(btemp+11)^0,w,c
 27182  0157C4  6E06               	movwf	(btemp+5)^0,c
 27183  0157C6  6A07               	clrf	(btemp+6)^0,c
 27184  0157C8  6A08               	clrf	(btemp+7)^0,c
 27185  0157CA  0060  F017  FFE6   	movff	btemp+4,postinc1
 27186  0157D0  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27187  0157D6  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27188  0157DC  0060  F023  FFE6   	movff	btemp+7,postinc1
 27189  0157E2  0E00               	movlw	0
 27190  0157E4  6EE6               	movwf	postinc1,c
 27191  0157E6  EC2C  F0C6         	call	___xxtofl	;wreg free
 27192  0157EA  0060  F007  FFE6   	movff	btemp,postinc1
 27193  0157F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27194  0157F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27195  0157FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 27196  015802  EC6E  F09F         	call	___flmul	;wreg free
 27197  015806  0060  F007  FFE6   	movff	btemp,postinc1
 27198  01580C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27199  015812  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27200  015818  0060  F013  FFE6   	movff	btemp+3,postinc1
 27201  01581E  EC61  F0A7         	call	___fldiv	;wreg free
 27202  015822  D067               	goto	l1845
 27203  015824                     l10200:
 27204                           
 27205                           ;daq.c: 153:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 27206  015824  0E00               	movlw	0
 27207  015826  6EE6               	movwf	postinc1,c
 27208  015828  0E00               	movlw	0
 27209  01582A  6EE6               	movwf	postinc1,c
 27210  01582C  0E7A               	movlw	122
 27211  01582E  6EE6               	movwf	postinc1,c
 27212  015830  0E44               	movlw	68
 27213  015832  6EE6               	movwf	postinc1,c
 27214  015834  0E61               	movlw	97
 27215  015836  6EE6               	movwf	postinc1,c
 27216  015838  0E03               	movlw	3
 27217  01583A  6EE6               	movwf	postinc1,c
 27218  01583C  0E84               	movlw	132
 27219  01583E  6EE6               	movwf	postinc1,c
 27220  015840  0E40               	movlw	64
 27221  015842  6EE6               	movwf	postinc1,c
 27222                           
 27223                           ;stkvar	_chan @ sp[(-8)+-1]
 27224  015844  0EF7               	movlw	-9
 27225  015846  50E3               	movf	plusw1,w,c
 27226  015848  6EE6               	movwf	postinc1,c
 27227  01584A  ECD3  F0E6         	call	_get_raw_result	;wreg free
 27228  01584E  0060  F004  F00B   	movff	btemp,btemp+10
 27229  015854  0060  F008  F00C   	movff	btemp+1,btemp+11
 27230  01585A  500B               	movf	(btemp+10)^0,w,c
 27231  01585C  6E05               	movwf	(btemp+4)^0,c
 27232  01585E  500C               	movf	(btemp+11)^0,w,c
 27233  015860  6E06               	movwf	(btemp+5)^0,c
 27234  015862  6A07               	clrf	(btemp+6)^0,c
 27235  015864  6A08               	clrf	(btemp+7)^0,c
 27236  015866  0060  F017  FFE6   	movff	btemp+4,postinc1
 27237  01586C  0060  F01B  FFE6   	movff	btemp+5,postinc1
 27238  015872  0060  F01F  FFE6   	movff	btemp+6,postinc1
 27239  015878  0060  F023  FFE6   	movff	btemp+7,postinc1
 27240  01587E  0E00               	movlw	0
 27241  015880  6EE6               	movwf	postinc1,c
 27242  015882  EC2C  F0C6         	call	___xxtofl	;wreg free
 27243  015886  0060  F007  FFE6   	movff	btemp,postinc1
 27244  01588C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27245  015892  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27246  015898  0060  F013  FFE6   	movff	btemp+3,postinc1
 27247  01589E  EC6E  F09F         	call	___flmul	;wreg free
 27248  0158A2  0060  F007  FFE6   	movff	btemp,postinc1
 27249  0158A8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27250  0158AE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27251  0158B4  0060  F013  FFE6   	movff	btemp+3,postinc1
 27252  0158BA  EC61  F0A7         	call	___fldiv	;wreg free
 27253  0158BE  D019               	goto	l1845
 27254  0158C0                     l10206:
 27255                           
 27256                           ;daq.c: 156:   return 0.0;
 27257  0158C0  0E00               	movlw	0
 27258  0158C2  6E01               	movwf	btemp^0,c
 27259  0158C4  0E00               	movlw	0
 27260  0158C6  6E02               	movwf	(btemp+1)^0,c
 27261  0158C8  0E00               	movlw	0
 27262  0158CA  6E03               	movwf	(btemp+2)^0,c
 27263  0158CC  0E00               	movlw	0
 27264  0158CE                     L33:
 27265  0158CE  6E04               	movwf	(btemp+3)^0,c
 27266  0158D0  D010               	goto	l1845
 27267  0158D2                     l10214:
 27268                           
 27269                           ;stkvar	_to_what @ sp[(0)+-2]
 27270  0158D2  0EFE               	movlw	-2
 27271  0158D4  50E3               	movf	plusw1,w,c
 27272  0158D6  6E0B               	movwf	(btemp+10)^0,c
 27273  0158D8  6A0C               	clrf	(btemp+11)^0,c
 27274                           
 27275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27276                           ; Switch size 1, requested type "simple"
 27277                           ; Number of cases is 1, Range of values is 0 to 0
 27278                           ; switch strategies available:
 27279                           ; Name         Instructions Cycles
 27280                           ; simple_byte            4     3 (average)
 27281                           ;	Chosen strategy is simple_byte
 27282  0158DA  500C               	movf	(btemp+11)^0,w,c
 27283  0158DC  0A00               	xorlw	0	; case 0
 27284  0158DE  A4D8               	btfss	status,2,c
 27285  0158E0  D7EF               	goto	l10206
 27286                           
 27287                           ; Switch size 1, requested type "simple"
 27288                           ; Number of cases is 2, Range of values is 0 to 1
 27289                           ; switch strategies available:
 27290                           ; Name         Instructions Cycles
 27291                           ; simple_byte            7     4 (average)
 27292                           ;	Chosen strategy is simple_byte
 27293  0158E2  500B               	movf	(btemp+10)^0,w,c
 27294  0158E4  0A00               	xorlw	0	; case 0
 27295  0158E6  B4D8               	btfsc	status,2,c
 27296  0158E8  D5AA               	goto	l10160
 27297  0158EA  0A01               	xorlw	1	; case 1
 27298  0158EC  B4D8               	btfsc	status,2,c
 27299  0158EE  D72A               	goto	l10192
 27300  0158F0  D7E7               	goto	l10206
 27301  0158F2                     l1845:
 27302                           
 27303                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 27304  0158F2  52E5               	movf	postdec1,f,c
 27305  0158F4  52E5               	movf	postdec1,f,c
 27306  0158F6  0012               	return		;funcret
 27307  0158F8                     __end_of_conv_raw_result:
 27308                           	opt callstack 0
 27309                           
 27310 ;; *************** function _nanf *****************
 27311 ;; Defined at:
 27312 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 27313 ;; Parameters:    Size  Location     Type
 27314 ;;  s               2  [STACK] PTR const unsigned char 
 27315 ;;		 -> STR_118(1), STR_80(1), 
 27316 ;; Auto vars:     Size  Location     Type
 27317 ;;  u               4  [STACK] struct .
 27318 ;; Return value:  Size  Location     Type
 27319 ;;                  4  [STACK] float 
 27320 ;; Registers used:
 27321 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 27322 ;; Tracked objects:
 27323 ;;		On entry : 0/0
 27324 ;;		On exit  : 0/0
 27325 ;;		Unchanged: 0/0
 27326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27331 ;;Total ram usage:        0 bytes
 27332 ;; Hardware stack levels used:    1
 27333 ;; Hardware stack levels required when called:   15
 27334 ;; This function calls:
 27335 ;;		Nothing
 27336 ;; This function is called by:
 27337 ;;		_conv_raw_result
 27338 ;; This function uses a reentrant model
 27339 ;;
 27340                           
 27341                           	psect	text110
 27342  01BE98                     __ptext110:
 27343                           	opt callstack 0
 27344  01BE98                     _nanf:
 27345                           	opt callstack 0
 27346                           
 27347                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27348  01BE98  52E6               	movf	postinc1,f,c
 27349  01BE9A  52E6               	movf	postinc1,f,c
 27350  01BE9C  52E6               	movf	postinc1,f,c
 27351  01BE9E  52E6               	movf	postinc1,f,c
 27352                           
 27353                           ;incstack = 0
 27354 ;; hardware stack exceeded
 27355  01BEA0  0EFF               	movlw	255
 27356  01BEA2  6E09               	movwf	(btemp+8)^0,c
 27357  01BEA4  0EFF               	movlw	255
 27358  01BEA6  6E0A               	movwf	(btemp+9)^0,c
 27359  01BEA8  0EFF               	movlw	255
 27360  01BEAA  6E0B               	movwf	(btemp+10)^0,c
 27361  01BEAC  0E7F               	movlw	127
 27362  01BEAE  6E0C               	movwf	(btemp+11)^0,c
 27363                           
 27364                           ;stkvar	_u @ sp[(-4)+0]
 27365  01BEB0  0EFC               	movlw	-4
 27366  01BEB2  0060  F027  FFE3   	movff	btemp+8,plusw1
 27367  01BEB8  0EFD               	movlw	-3
 27368  01BEBA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27369  01BEC0  0EFE               	movlw	-2
 27370  01BEC2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27371  01BEC8  0EFF               	movlw	-1
 27372  01BECA  0060  F033  FFE3   	movff	btemp+11,plusw1
 27373                           
 27374                           ;stkvar	_u @ sp[(-4)+0]
 27375  01BED0  0EFC               	movlw	-4
 27376  01BED2  006F FF8C  F001    	movff	plusw1,btemp
 27377  01BED8  0EFD               	movlw	-3
 27378  01BEDA  006F FF8C  F002    	movff	plusw1,btemp+1
 27379  01BEE0  0EFE               	movlw	-2
 27380  01BEE2  006F FF8C  F003    	movff	plusw1,btemp+2
 27381  01BEE8  0EFF               	movlw	-1
 27382  01BEEA  006F FF8C  F004    	movff	plusw1,btemp+3
 27383                           
 27384                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 27385  01BEF0  0EFA               	movlw	250
 27386  01BEF2  26E1               	addwf	fsr1l,f,c
 27387  01BEF4  0EFF               	movlw	255
 27388  01BEF6  22E2               	addwfc	fsr1h,f,c
 27389  01BEF8  0012               	return		;funcret
 27390  01BEFA                     __end_of_nanf:
 27391                           	opt callstack 0
 27392                           
 27393 ;; *************** function _get_raw_result *****************
 27394 ;; Defined at:
 27395 ;;		line 119 in file "daq.c"
 27396 ;; Parameters:    Size  Location     Type
 27397 ;;  index           1  [STACK] const enum E16590
 27398 ;; Auto vars:     Size  Location     Type
 27399 ;;		None
 27400 ;; Return value:  Size  Location     Type
 27401 ;;                  2  [STACK] unsigned short 
 27402 ;; Registers used:
 27403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 27404 ;; Tracked objects:
 27405 ;;		On entry : 0/1
 27406 ;;		On exit  : 0/0
 27407 ;;		Unchanged: 0/0
 27408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27413 ;;Total ram usage:        0 bytes
 27414 ;; Hardware stack levels used:    1
 27415 ;; Hardware stack levels required when called:   15
 27416 ;; This function calls:
 27417 ;;		Nothing
 27418 ;; This function is called by:
 27419 ;;		_main
 27420 ;;		_current_sensor_cal
 27421 ;;		_conv_raw_result
 27422 ;; This function uses a reentrant model
 27423 ;;
 27424                           
 27425                           	psect	text111
 27426  01CDA6                     __ptext111:
 27427                           	opt callstack 0
 27428  01CDA6                     _get_raw_result:
 27429                           	opt callstack 0
 27430                           
 27431                           ;daq.c: 119: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 120: {;daq.c
      +                          : 121:  return R.raw_adc[index];
 27432                           ;stkvar	_index @ sp[(0)+-1]
 27433                           
 27434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27435                           ;incstack = 0
 27436 ;; hardware stack exceeded
 27437  01CDA6  0EFF               	movlw	-1
 27438  01CDA8  50E3               	movf	plusw1,w,c
 27439  01CDAA  0D02               	mullw	2
 27440  01CDAC  50F3               	movf	243,w,c
 27441  01CDAE  0FAB               	addlw	low _R
 27442  01CDB0  6ED9               	movwf	fsr2l,c
 27443  01CDB2  6ADA               	clrf	fsr2h,c
 27444  01CDB4  006F FF78  F001    	movff	postinc2,btemp
 27445  01CDBA  006F FF74  F002    	movff	postdec2,btemp+1
 27446                           
 27447                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 27448  01CDC0  52E5               	movf	postdec1,f,c
 27449  01CDC2  0012               	return		;funcret
 27450  01CDC4                     __end_of_get_raw_result:
 27451                           	opt callstack 0
 27452                           
 27453 ;; *************** function ___xxtofl *****************
 27454 ;; Defined at:
 27455 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 27456 ;; Parameters:    Size  Location     Type
 27457 ;;  sign            1  [STACK] unsigned char 
 27458 ;;  val             4  [STACK] long 
 27459 ;; Auto vars:     Size  Location     Type
 27460 ;;  arg             4  [STACK] unsigned long 
 27461 ;;  exp             1  [STACK] unsigned char 
 27462 ;; Return value:  Size  Location     Type
 27463 ;;                  4  [STACK] unsigned char 
 27464 ;; Registers used:
 27465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27466 ;; Tracked objects:
 27467 ;;		On entry : 0/0
 27468 ;;		On exit  : 0/0
 27469 ;;		Unchanged: 0/0
 27470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27475 ;;Total ram usage:        0 bytes
 27476 ;; Hardware stack levels used:    1
 27477 ;; Hardware stack levels required when called:   15
 27478 ;; This function calls:
 27479 ;;		Nothing
 27480 ;; This function is called by:
 27481 ;;		_conv_raw_result
 27482 ;;		_init_bsoc
 27483 ;; This function uses a reentrant model
 27484 ;;
 27485                           
 27486                           	psect	text112
 27487  018C58                     __ptext112:
 27488                           	opt callstack 0
 27489  018C58                     ___xxtofl:
 27490                           	opt callstack 0
 27491                           
 27492                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27493  018C58  0E05               	movlw	5
 27494  018C5A  26E1               	addwf	fsr1l,f,c
 27495  018C5C  0E00               	movlw	0
 27496  018C5E  22E2               	addwfc	fsr1h,f,c
 27497                           
 27498                           ;stkvar	_sign @ sp[(-5)+-1]
 27499                           
 27500                           ;incstack = 0
 27501 ;; hardware stack exceeded
 27502  018C60  0EFA               	movlw	-6
 27503  018C62  50E3               	movf	plusw1,w,c
 27504  018C64  B4D8               	btfsc	status,2,c
 27505  018C66  D01D               	goto	l10108
 27506                           
 27507                           ;stkvar	_val @ sp[(-5)+-5]
 27508  018C68  0EF9               	movlw	-7
 27509  018C6A  AEE3               	btfss	plusw1,7,c
 27510  018C6C  D01A               	goto	l10108
 27511                           
 27512                           ;stkvar	_val @ sp[(-5)+-5]
 27513  018C6E  0EF6               	movlw	-10
 27514  018C70  006F FF8C  F009    	movff	plusw1,btemp+8
 27515  018C76  0EF7               	movlw	-9
 27516  018C78  006F FF8C  F00A    	movff	plusw1,btemp+9
 27517  018C7E  0EF8               	movlw	-8
 27518  018C80  006F FF8C  F00B    	movff	plusw1,btemp+10
 27519  018C86  0EF9               	movlw	-7
 27520  018C88  006F FF8C  F00C    	movff	plusw1,btemp+11
 27521  018C8E  1E09               	comf	(btemp+8)^0,f,c
 27522  018C90  1E0A               	comf	(btemp+9)^0,f,c
 27523  018C92  1E0B               	comf	(btemp+10)^0,f,c
 27524  018C94  1E0C               	comf	(btemp+11)^0,f,c
 27525  018C96  2A09               	incf	(btemp+8)^0,f,c
 27526  018C98  0E00               	movlw	0
 27527  018C9A  220A               	addwfc	(btemp+9)^0,f,c
 27528  018C9C  220B               	addwfc	(btemp+10)^0,f,c
 27529  018C9E  220C               	addwfc	(btemp+11)^0,f,c
 27530  018CA0  D010               	goto	L34
 27531  018CA2                     l10108:
 27532                           
 27533                           ;stkvar	_val @ sp[(-5)+-5]
 27534  018CA2  0EF6               	movlw	-10
 27535  018CA4  006F FF8C  F009    	movff	plusw1,btemp+8
 27536  018CAA  0EF7               	movlw	-9
 27537  018CAC  006F FF8C  F00A    	movff	plusw1,btemp+9
 27538  018CB2  0EF8               	movlw	-8
 27539  018CB4  006F FF8C  F00B    	movff	plusw1,btemp+10
 27540  018CBA  0EF9               	movlw	-7
 27541  018CBC  006F FF8C  F00C    	movff	plusw1,btemp+11
 27542  018CC2                     L34:
 27543                           
 27544                           ;stkvar	_arg @ sp[(-5)+0]
 27545  018CC2  0EFB               	movlw	-5
 27546  018CC4  0060  F027  FFE3   	movff	btemp+8,plusw1
 27547  018CCA  0EFC               	movlw	-4
 27548  018CCC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27549  018CD2  0EFD               	movlw	-3
 27550  018CD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27551  018CDA  0EFE               	movlw	-2
 27552  018CDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 27553                           
 27554                           ;stkvar	_val @ sp[(-5)+-5]
 27555  018CE2  0EF6               	movlw	-10
 27556  018CE4  50E3               	movf	plusw1,w,c
 27557  018CE6  E113               	bnz	l10116
 27558  018CE8  0EF7               	movlw	-9
 27559  018CEA  50E3               	movf	plusw1,w,c
 27560  018CEC  E110               	bnz	l10116
 27561  018CEE  0EF8               	movlw	-8
 27562  018CF0  50E3               	movf	plusw1,w,c
 27563  018CF2  E10D               	bnz	l10116
 27564  018CF4  0EF9               	movlw	-7
 27565  018CF6  50E3               	movf	plusw1,w,c
 27566  018CF8  A4D8               	btfss	status,2,c
 27567  018CFA  D009               	goto	l10116
 27568  018CFC  0E00               	movlw	0
 27569  018CFE  6E01               	movwf	btemp^0,c
 27570  018D00  0E00               	movlw	0
 27571  018D02  6E02               	movwf	(btemp+1)^0,c
 27572  018D04  0E00               	movlw	0
 27573  018D06  6E03               	movwf	(btemp+2)^0,c
 27574  018D08  0E00               	movlw	0
 27575  018D0A  6E04               	movwf	(btemp+3)^0,c
 27576  018D0C  D0A2               	goto	l3205
 27577  018D0E                     l10116:
 27578  018D0E  0E96               	movlw	150
 27579  018D10  6E0C               	movwf	(btemp+11)^0,c
 27580                           
 27581                           ;stkvar	_exp @ sp[(-5)+4]
 27582  018D12  0EFF               	movlw	-1
 27583  018D14  0060  F033  FFE3   	movff	btemp+11,plusw1
 27584  018D1A  D00B               	goto	l10120
 27585  018D1C                     l10118:
 27586                           
 27587                           ;stkvar	_exp @ sp[(-5)+4]
 27588  018D1C  0EFF               	movlw	-1
 27589  018D1E  2AE3               	incf	plusw1,f,c
 27590                           
 27591                           ;stkvar	_arg @ sp[(-5)+0]
 27592  018D20  90D8               	bcf	status,0,c
 27593  018D22  0EFE               	movlw	-2
 27594  018D24  32E3               	rrcf	plusw1,f,c
 27595  018D26  0EFD               	movlw	-3
 27596  018D28  32E3               	rrcf	plusw1,f,c
 27597  018D2A  0EFC               	movlw	-4
 27598  018D2C  32E3               	rrcf	plusw1,f,c
 27599  018D2E  0EFB               	movlw	-5
 27600  018D30  32E3               	rrcf	plusw1,f,c
 27601  018D32                     l10120:
 27602                           
 27603                           ;stkvar	_arg @ sp[(-5)+0]
 27604  018D32  50E1               	movf	fsr1l,w,c
 27605  018D34  0FFB               	addlw	-5
 27606  018D36  6ED9               	movwf	fsr2l,c
 27607  018D38  50E2               	movf	fsr1h,w,c
 27608  018D3A  6EDA               	movwf	fsr2h,c
 27609  018D3C  0EFF               	movlw	255
 27610  018D3E  22DA               	addwfc	fsr2h,f,c
 27611  018D40  52DE               	movf	postinc2,f,c
 27612  018D42  52DE               	movf	postinc2,f,c
 27613  018D44  52DE               	movf	postinc2,f,c
 27614  018D46  0EFE               	movlw	254
 27615  018D48  14DD               	andwf	postdec2,w,c
 27616  018D4A  B4D8               	btfsc	status,2,c
 27617  018D4C  D018               	goto	l10128
 27618  018D4E  D7E6               	goto	l10118
 27619  018D50                     l10122:
 27620                           
 27621                           ;stkvar	_exp @ sp[(-5)+4]
 27622  018D50  0EFF               	movlw	-1
 27623  018D52  2AE3               	incf	plusw1,f,c
 27624                           
 27625                           ;stkvar	_arg @ sp[(-5)+0]
 27626  018D54  50E1               	movf	fsr1l,w,c
 27627  018D56  0FFB               	addlw	-5
 27628  018D58  6ED9               	movwf	fsr2l,c
 27629  018D5A  50E2               	movf	fsr1h,w,c
 27630  018D5C  6EDA               	movwf	fsr2h,c
 27631  018D5E  0EFF               	movlw	255
 27632  018D60  22DA               	addwfc	fsr2h,f,c
 27633  018D62  2ADE               	incf	postinc2,f,c
 27634  018D64  0E00               	movlw	0
 27635  018D66  22DE               	addwfc	postinc2,f,c
 27636  018D68  22DE               	addwfc	postinc2,f,c
 27637  018D6A  22DE               	addwfc	postinc2,f,c
 27638                           
 27639                           ;stkvar	_arg @ sp[(-5)+0]
 27640  018D6C  90D8               	bcf	status,0,c
 27641  018D6E  0EFE               	movlw	-2
 27642  018D70  32E3               	rrcf	plusw1,f,c
 27643  018D72  0EFD               	movlw	-3
 27644  018D74  32E3               	rrcf	plusw1,f,c
 27645  018D76  0EFC               	movlw	-4
 27646  018D78  32E3               	rrcf	plusw1,f,c
 27647  018D7A  0EFB               	movlw	-5
 27648  018D7C  32E3               	rrcf	plusw1,f,c
 27649  018D7E                     l10128:
 27650                           
 27651                           ;stkvar	_arg @ sp[(-5)+0]
 27652  018D7E  50E1               	movf	fsr1l,w,c
 27653  018D80  0FFB               	addlw	-5
 27654  018D82  6ED9               	movwf	fsr2l,c
 27655  018D84  50E2               	movf	fsr1h,w,c
 27656  018D86  6EDA               	movwf	fsr2h,c
 27657  018D88  0EFF               	movlw	255
 27658  018D8A  22DA               	addwfc	fsr2h,f,c
 27659  018D8C  52DE               	movf	postinc2,f,c
 27660  018D8E  52DE               	movf	postinc2,f,c
 27661  018D90  52DE               	movf	postinc2,f,c
 27662  018D92  0EFF               	movlw	255
 27663  018D94  14DD               	andwf	postdec2,w,c
 27664  018D96  B4D8               	btfsc	status,2,c
 27665  018D98  D00C               	goto	l10132
 27666  018D9A  D7DA               	goto	l10122
 27667  018D9C                     l10130:
 27668                           
 27669                           ;stkvar	_exp @ sp[(-5)+4]
 27670  018D9C  0EFF               	movlw	-1
 27671  018D9E  06E3               	decf	plusw1,f,c
 27672                           
 27673                           ;stkvar	_arg @ sp[(-5)+0]
 27674  018DA0  90D8               	bcf	status,0,c
 27675  018DA2  0EFB               	movlw	-5
 27676  018DA4  36E3               	rlcf	plusw1,f,c
 27677  018DA6  0EFC               	movlw	-4
 27678  018DA8  36E3               	rlcf	plusw1,f,c
 27679  018DAA  0EFD               	movlw	-3
 27680  018DAC  36E3               	rlcf	plusw1,f,c
 27681  018DAE  0EFE               	movlw	-2
 27682  018DB0  36E3               	rlcf	plusw1,f,c
 27683  018DB2                     l10132:
 27684                           
 27685                           ;stkvar	_arg @ sp[(-5)+0]
 27686  018DB2  0EFD               	movlw	-3
 27687  018DB4  BEE3               	btfsc	plusw1,7,c
 27688  018DB6  D007               	goto	u9390
 27689                           
 27690                           ;stkvar	_exp @ sp[(-5)+4]
 27691  018DB8  0EFF               	movlw	-1
 27692  018DBA  006F FF8C  F001    	movff	plusw1,btemp
 27693  018DC0  0E02               	movlw	2
 27694  018DC2  6001               	cpfslt	btemp^0,c
 27695  018DC4  D7EB               	goto	l10130
 27696  018DC6                     u9390:
 27697                           
 27698                           ;stkvar	_exp @ sp[(-5)+4]
 27699  018DC6  0EFF               	movlw	-1
 27700  018DC8  B0E3               	btfsc	plusw1,0,c
 27701  018DCA  D002               	goto	l10140
 27702                           
 27703                           ;stkvar	_arg @ sp[(-5)+0]
 27704  018DCC  0EFD               	movlw	-3
 27705  018DCE  9EE3               	bcf	plusw1,7,c
 27706  018DD0                     l10140:
 27707                           
 27708                           ;stkvar	_exp @ sp[(-5)+4]
 27709  018DD0  50E1               	movf	fsr1l,w,c
 27710  018DD2  0FFF               	addlw	-1
 27711  018DD4  6ED9               	movwf	fsr2l,c
 27712  018DD6  50E2               	movf	fsr1h,w,c
 27713  018DD8  6EDA               	movwf	fsr2h,c
 27714  018DDA  0EFF               	movlw	255
 27715  018DDC  22DA               	addwfc	fsr2h,f,c
 27716  018DDE  90D8               	bcf	status,0,c
 27717  018DE0  32DF               	rrcf	indf2,f,c
 27718                           
 27719                           ;stkvar	_exp @ sp[(-5)+4]
 27720  018DE2  0EFF               	movlw	-1
 27721  018DE4  006F FF8C  F00C    	movff	plusw1,btemp+11
 27722  018DEA  0060  F030  F005   	movff	btemp+11,btemp+4
 27723  018DF0  6A06               	clrf	(btemp+5)^0,c
 27724  018DF2  6A07               	clrf	(btemp+6)^0,c
 27725  018DF4  6A08               	clrf	(btemp+7)^0,c
 27726  018DF6  0060  F014  F008   	movff	btemp+4,btemp+7
 27727  018DFC  6A07               	clrf	(btemp+6)^0,c
 27728  018DFE  6A06               	clrf	(btemp+5)^0,c
 27729  018E00  6A05               	clrf	(btemp+4)^0,c
 27730                           
 27731                           ;stkvar	_arg @ sp[(-5)+0]
 27732  018E02  50E1               	movf	fsr1l,w,c
 27733  018E04  0FFB               	addlw	-5
 27734  018E06  6ED9               	movwf	fsr2l,c
 27735  018E08  50E2               	movf	fsr1h,w,c
 27736  018E0A  6EDA               	movwf	fsr2h,c
 27737  018E0C  0EFF               	movlw	255
 27738  018E0E  22DA               	addwfc	fsr2h,f,c
 27739  018E10  5005               	movf	(btemp+4)^0,w,c
 27740  018E12  12DE               	iorwf	postinc2,f,c
 27741  018E14  5006               	movf	(btemp+5)^0,w,c
 27742  018E16  12DE               	iorwf	postinc2,f,c
 27743  018E18  5007               	movf	(btemp+6)^0,w,c
 27744  018E1A  12DE               	iorwf	postinc2,f,c
 27745  018E1C  5008               	movf	(btemp+7)^0,w,c
 27746  018E1E  12DE               	iorwf	postinc2,f,c
 27747                           
 27748                           ;stkvar	_sign @ sp[(-5)+-1]
 27749  018E20  0EFA               	movlw	-6
 27750  018E22  50E3               	movf	plusw1,w,c
 27751  018E24  B4D8               	btfsc	status,2,c
 27752  018E26  D005               	goto	l10150
 27753                           
 27754                           ;stkvar	_val @ sp[(-5)+-5]
 27755  018E28  0EF9               	movlw	-7
 27756  018E2A  AEE3               	btfss	plusw1,7,c
 27757  018E2C  D002               	goto	l10150
 27758                           
 27759                           ;stkvar	_arg @ sp[(-5)+0]
 27760  018E2E  0EFE               	movlw	-2
 27761  018E30  8EE3               	bsf	plusw1,7,c
 27762  018E32                     l10150:
 27763                           
 27764                           ;stkvar	_arg @ sp[(-5)+0]
 27765  018E32  0EFB               	movlw	-5
 27766  018E34  006F FF8C  F001    	movff	plusw1,btemp
 27767  018E3A  0EFC               	movlw	-4
 27768  018E3C  006F FF8C  F002    	movff	plusw1,btemp+1
 27769  018E42  0EFD               	movlw	-3
 27770  018E44  006F FF8C  F003    	movff	plusw1,btemp+2
 27771  018E4A  0EFE               	movlw	-2
 27772  018E4C  006F FF8C  F004    	movff	plusw1,btemp+3
 27773  018E52                     l3205:
 27774                           
 27775                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 27776  018E52  0EF6               	movlw	246
 27777  018E54  26E1               	addwf	fsr1l,f,c
 27778  018E56  0EFF               	movlw	255
 27779  018E58  22E2               	addwfc	fsr1h,f,c
 27780  018E5A  0012               	return		;funcret
 27781  018E5C                     __end_of___xxtofl:
 27782                           	opt callstack 0
 27783                           
 27784 ;; *************** function ___fldiv *****************
 27785 ;; Defined at:
 27786 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 27787 ;; Parameters:    Size  Location     Type
 27788 ;;  b               4  [STACK] unsigned char 
 27789 ;;  a               4  [STACK] unsigned char 
 27790 ;; Auto vars:     Size  Location     Type
 27791 ;;  grs             4  [STACK] unsigned long 
 27792 ;;  rem             4  [STACK] unsigned long 
 27793 ;;  new_exp         2  [STACK] short 
 27794 ;;  aexp            1  [STACK] unsigned char 
 27795 ;;  bexp            1  [STACK] unsigned char 
 27796 ;;  sign            1  [STACK] unsigned char 
 27797 ;; Return value:  Size  Location     Type
 27798 ;;                  4  [STACK] unsigned char 
 27799 ;; Registers used:
 27800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 27801 ;; Tracked objects:
 27802 ;;		On entry : 0/0
 27803 ;;		On exit  : 0/0
 27804 ;;		Unchanged: 0/0
 27805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27810 ;;Total ram usage:        0 bytes
 27811 ;; Hardware stack levels used:    1
 27812 ;; Hardware stack levels required when called:   15
 27813 ;; This function calls:
 27814 ;;		Nothing
 27815 ;; This function is called by:
 27816 ;;		_conv_raw_result
 27817 ;;		_convert_dac_raw
 27818 ;;		_calc_bsoc
 27819 ;;		_init_bsoc
 27820 ;;		_esr_check
 27821 ;;		_efgtoa
 27822 ;; This function uses a reentrant model
 27823 ;;
 27824                           
 27825                           	psect	text113
 27826  014EC2                     __ptext113:
 27827                           	opt callstack 0
 27828  014EC2                     ___fldiv:
 27829                           	opt callstack 0
 27830                           
 27831                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27832  014EC2  0E0D               	movlw	13
 27833  014EC4  26E1               	addwf	fsr1l,f,c
 27834  014EC6  0E00               	movlw	0
 27835  014EC8  22E2               	addwfc	fsr1h,f,c
 27836                           
 27837                           ;stkvar	_b @ sp[(-13)+-4]
 27838                           
 27839                           ;incstack = 0
 27840 ;; hardware stack exceeded
 27841  014ECA  0EF2               	movlw	242
 27842  014ECC  24E1               	addwf	fsr1l,w,c
 27843  014ECE  6ED9               	movwf	fsr2l,c
 27844  014ED0  0EFF               	movlw	255
 27845  014ED2  20E2               	addwfc	fsr1h,w,c
 27846  014ED4  6EDA               	movwf	fsr2h,c
 27847  014ED6  50DF               	movf	indf2,w,c
 27848  014ED8  6E0C               	movwf	(btemp+11)^0,c
 27849  014EDA  0E80               	movlw	128
 27850  014EDC  160C               	andwf	(btemp+11)^0,f,c
 27851                           
 27852                           ;stkvar	_sign @ sp[(-13)+12]
 27853  014EDE  0EFF               	movlw	-1
 27854  014EE0  0060  F033  FFE3   	movff	btemp+11,plusw1
 27855                           
 27856                           ;stkvar	_b @ sp[(-13)+-4]
 27857  014EE6  0EF2               	movlw	242
 27858  014EE8  24E1               	addwf	fsr1l,w,c
 27859  014EEA  6ED9               	movwf	fsr2l,c
 27860  014EEC  0EFF               	movlw	255
 27861  014EEE  20E2               	addwfc	fsr1h,w,c
 27862  014EF0  6EDA               	movwf	fsr2h,c
 27863  014EF2  50DF               	movf	indf2,w,c
 27864  014EF4  6E0C               	movwf	(btemp+11)^0,c
 27865  014EF6  90D8               	bcf	status,0,c
 27866  014EF8  340C               	rlcf	(btemp+11)^0,w,c
 27867  014EFA  6E0B               	movwf	(btemp+10)^0,c
 27868                           
 27869                           ;stkvar	_bexp @ sp[(-13)+11]
 27870  014EFC  0EFE               	movlw	-2
 27871  014EFE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27872                           
 27873                           ;stkvar	_b @ sp[(-13)+-4]
 27874  014F04  0EF1               	movlw	241
 27875  014F06  24E1               	addwf	fsr1l,w,c
 27876  014F08  6ED9               	movwf	fsr2l,c
 27877  014F0A  0EFF               	movlw	255
 27878  014F0C  20E2               	addwfc	fsr1h,w,c
 27879  014F0E  6EDA               	movwf	fsr2h,c
 27880  014F10  AEDF               	btfss	indf2,7,c
 27881  014F12  D002               	goto	l8680
 27882                           
 27883                           ;stkvar	_bexp @ sp[(-13)+11]
 27884  014F14  0EFE               	movlw	-2
 27885  014F16  80E3               	bsf	plusw1,0,c
 27886  014F18                     l8680:
 27887                           
 27888                           ;stkvar	_bexp @ sp[(-13)+11]
 27889  014F18  0EFE               	movlw	-2
 27890  014F1A  50E3               	movf	plusw1,w,c
 27891  014F1C  B4D8               	btfsc	status,2,c
 27892  014F1E  D027               	goto	l8690
 27893                           
 27894                           ;stkvar	_bexp @ sp[(-13)+11]
 27895  014F20  0EFE               	movlw	-2
 27896  014F22  28E3               	incf	plusw1,w,c
 27897  014F24  A4D8               	btfss	status,2,c
 27898  014F26  D018               	goto	l8686
 27899  014F28  0E00               	movlw	0
 27900  014F2A  6E09               	movwf	(btemp+8)^0,c
 27901  014F2C  0E00               	movlw	0
 27902  014F2E  6E0A               	movwf	(btemp+9)^0,c
 27903  014F30  0E00               	movlw	0
 27904  014F32  6E0B               	movwf	(btemp+10)^0,c
 27905  014F34  0E00               	movlw	0
 27906  014F36  6E0C               	movwf	(btemp+11)^0,c
 27907                           
 27908                           ;stkvar	_b @ sp[(-13)+-4]
 27909  014F38  0EEF               	movlw	-17
 27910  014F3A  0060  F027  FFE3   	movff	btemp+8,plusw1
 27911  014F40  0EF0               	movlw	-16
 27912  014F42  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27913  014F48  0EF1               	movlw	-15
 27914  014F4A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27915  014F50  0EF2               	movlw	-14
 27916  014F52  0060  F033  FFE3   	movff	btemp+11,plusw1
 27917  014F58                     l8686:
 27918                           
 27919                           ;stkvar	_b @ sp[(-13)+-4]
 27920  014F58  0EF1               	movlw	-15
 27921  014F5A  8EE3               	bsf	plusw1,7,c
 27922                           
 27923                           ;stkvar	_b @ sp[(-13)+-4]
 27924  014F5C  0EF2               	movlw	242
 27925  014F5E  24E1               	addwf	fsr1l,w,c
 27926  014F60  6ED9               	movwf	fsr2l,c
 27927  014F62  0EFF               	movlw	255
 27928  014F64  20E2               	addwfc	fsr1h,w,c
 27929  014F66  6EDA               	movwf	fsr2h,c
 27930  014F68  0E00               	movlw	0
 27931  014F6A  6EDF               	movwf	indf2,c
 27932  014F6C  D018               	goto	l8692
 27933  014F6E                     l8690:
 27934  014F6E  0E00               	movlw	0
 27935  014F70  6E09               	movwf	(btemp+8)^0,c
 27936  014F72  0E00               	movlw	0
 27937  014F74  6E0A               	movwf	(btemp+9)^0,c
 27938  014F76  0E00               	movlw	0
 27939  014F78  6E0B               	movwf	(btemp+10)^0,c
 27940  014F7A  0E00               	movlw	0
 27941  014F7C  6E0C               	movwf	(btemp+11)^0,c
 27942                           
 27943                           ;stkvar	_b @ sp[(-13)+-4]
 27944  014F7E  0EEF               	movlw	-17
 27945  014F80  0060  F027  FFE3   	movff	btemp+8,plusw1
 27946  014F86  0EF0               	movlw	-16
 27947  014F88  0060  F02B  FFE3   	movff	btemp+9,plusw1
 27948  014F8E  0EF1               	movlw	-15
 27949  014F90  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27950  014F96  0EF2               	movlw	-14
 27951  014F98  0060  F033  FFE3   	movff	btemp+11,plusw1
 27952  014F9E                     l8692:
 27953                           
 27954                           ;stkvar	_a @ sp[(-13)+-8]
 27955  014F9E  0EEE               	movlw	238
 27956  014FA0  24E1               	addwf	fsr1l,w,c
 27957  014FA2  6ED9               	movwf	fsr2l,c
 27958  014FA4  0EFF               	movlw	255
 27959  014FA6  20E2               	addwfc	fsr1h,w,c
 27960  014FA8  6EDA               	movwf	fsr2h,c
 27961  014FAA  50DF               	movf	indf2,w,c
 27962  014FAC  6E0C               	movwf	(btemp+11)^0,c
 27963  014FAE  0E80               	movlw	128
 27964  014FB0  160C               	andwf	(btemp+11)^0,f,c
 27965                           
 27966                           ;stkvar	_sign @ sp[(-13)+12]
 27967  014FB2  50E1               	movf	fsr1l,w,c
 27968  014FB4  0FFF               	addlw	-1
 27969  014FB6  6ED9               	movwf	fsr2l,c
 27970  014FB8  50E2               	movf	fsr1h,w,c
 27971  014FBA  6EDA               	movwf	fsr2h,c
 27972  014FBC  0EFF               	movlw	255
 27973  014FBE  22DA               	addwfc	fsr2h,f,c
 27974  014FC0  500C               	movf	(btemp+11)^0,w,c
 27975  014FC2  1ADF               	xorwf	indf2,f,c
 27976                           
 27977                           ;stkvar	_a @ sp[(-13)+-8]
 27978  014FC4  0EEE               	movlw	238
 27979  014FC6  24E1               	addwf	fsr1l,w,c
 27980  014FC8  6ED9               	movwf	fsr2l,c
 27981  014FCA  0EFF               	movlw	255
 27982  014FCC  20E2               	addwfc	fsr1h,w,c
 27983  014FCE  6EDA               	movwf	fsr2h,c
 27984  014FD0  50DF               	movf	indf2,w,c
 27985  014FD2  6E0C               	movwf	(btemp+11)^0,c
 27986  014FD4  90D8               	bcf	status,0,c
 27987  014FD6  340C               	rlcf	(btemp+11)^0,w,c
 27988  014FD8  6E0B               	movwf	(btemp+10)^0,c
 27989                           
 27990                           ;stkvar	_aexp @ sp[(-13)+10]
 27991  014FDA  0EFD               	movlw	-3
 27992  014FDC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27993                           
 27994                           ;stkvar	_a @ sp[(-13)+-8]
 27995  014FE2  0EED               	movlw	237
 27996  014FE4  24E1               	addwf	fsr1l,w,c
 27997  014FE6  6ED9               	movwf	fsr2l,c
 27998  014FE8  0EFF               	movlw	255
 27999  014FEA  20E2               	addwfc	fsr1h,w,c
 28000  014FEC  6EDA               	movwf	fsr2h,c
 28001  014FEE  AEDF               	btfss	indf2,7,c
 28002  014FF0  D002               	goto	l8700
 28003                           
 28004                           ;stkvar	_aexp @ sp[(-13)+10]
 28005  014FF2  0EFD               	movlw	-3
 28006  014FF4  80E3               	bsf	plusw1,0,c
 28007  014FF6                     l8700:
 28008                           
 28009                           ;stkvar	_aexp @ sp[(-13)+10]
 28010  014FF6  0EFD               	movlw	-3
 28011  014FF8  50E3               	movf	plusw1,w,c
 28012  014FFA  B4D8               	btfsc	status,2,c
 28013  014FFC  D027               	goto	l8710
 28014                           
 28015                           ;stkvar	_aexp @ sp[(-13)+10]
 28016  014FFE  0EFD               	movlw	-3
 28017  015000  28E3               	incf	plusw1,w,c
 28018  015002  A4D8               	btfss	status,2,c
 28019  015004  D018               	goto	l8706
 28020  015006  0E00               	movlw	0
 28021  015008  6E09               	movwf	(btemp+8)^0,c
 28022  01500A  0E00               	movlw	0
 28023  01500C  6E0A               	movwf	(btemp+9)^0,c
 28024  01500E  0E00               	movlw	0
 28025  015010  6E0B               	movwf	(btemp+10)^0,c
 28026  015012  0E00               	movlw	0
 28027  015014  6E0C               	movwf	(btemp+11)^0,c
 28028                           
 28029                           ;stkvar	_a @ sp[(-13)+-8]
 28030  015016  0EEB               	movlw	-21
 28031  015018  0060  F027  FFE3   	movff	btemp+8,plusw1
 28032  01501E  0EEC               	movlw	-20
 28033  015020  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28034  015026  0EED               	movlw	-19
 28035  015028  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28036  01502E  0EEE               	movlw	-18
 28037  015030  0060  F033  FFE3   	movff	btemp+11,plusw1
 28038  015036                     l8706:
 28039                           
 28040                           ;stkvar	_a @ sp[(-13)+-8]
 28041  015036  0EED               	movlw	-19
 28042  015038  8EE3               	bsf	plusw1,7,c
 28043                           
 28044                           ;stkvar	_a @ sp[(-13)+-8]
 28045  01503A  0EEE               	movlw	238
 28046  01503C  24E1               	addwf	fsr1l,w,c
 28047  01503E  6ED9               	movwf	fsr2l,c
 28048  015040  0EFF               	movlw	255
 28049  015042  20E2               	addwfc	fsr1h,w,c
 28050  015044  6EDA               	movwf	fsr2h,c
 28051  015046  0E00               	movlw	0
 28052  015048  6EDF               	movwf	indf2,c
 28053  01504A  D018               	goto	l8712
 28054  01504C                     l8710:
 28055  01504C  0E00               	movlw	0
 28056  01504E  6E09               	movwf	(btemp+8)^0,c
 28057  015050  0E00               	movlw	0
 28058  015052  6E0A               	movwf	(btemp+9)^0,c
 28059  015054  0E00               	movlw	0
 28060  015056  6E0B               	movwf	(btemp+10)^0,c
 28061  015058  0E00               	movlw	0
 28062  01505A  6E0C               	movwf	(btemp+11)^0,c
 28063                           
 28064                           ;stkvar	_a @ sp[(-13)+-8]
 28065  01505C  0EEB               	movlw	-21
 28066  01505E  0060  F027  FFE3   	movff	btemp+8,plusw1
 28067  015064  0EEC               	movlw	-20
 28068  015066  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28069  01506C  0EED               	movlw	-19
 28070  01506E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28071  015074  0EEE               	movlw	-18
 28072  015076  0060  F033  FFE3   	movff	btemp+11,plusw1
 28073  01507C                     l8712:
 28074                           
 28075                           ;stkvar	_a @ sp[(-13)+-8]
 28076  01507C  0EEB               	movlw	-21
 28077  01507E  50E3               	movf	plusw1,w,c
 28078  015080  E139               	bnz	l8724
 28079  015082  0EEC               	movlw	-20
 28080  015084  50E3               	movf	plusw1,w,c
 28081  015086  E136               	bnz	l8724
 28082  015088  0EED               	movlw	-19
 28083  01508A  50E3               	movf	plusw1,w,c
 28084  01508C  E133               	bnz	l8724
 28085  01508E  0EEE               	movlw	-18
 28086  015090  50E3               	movf	plusw1,w,c
 28087  015092  A4D8               	btfss	status,2,c
 28088  015094  D02F               	goto	l8724
 28089                           
 28090                           ;stkvar	_b @ sp[(-13)+-4]
 28091  015096  0EEF               	movlw	-17
 28092  015098  6AE3               	clrf	plusw1,c
 28093  01509A  0EF0               	movlw	-16
 28094  01509C  6AE3               	clrf	plusw1,c
 28095  01509E  0EF1               	movlw	-15
 28096  0150A0  6AE3               	clrf	plusw1,c
 28097  0150A2  0EF2               	movlw	-14
 28098  0150A4  6AE3               	clrf	plusw1,c
 28099                           
 28100                           ;stkvar	_b @ sp[(-13)+-4]
 28101  0150A6  0EF1               	movlw	241
 28102  0150A8  24E1               	addwf	fsr1l,w,c
 28103  0150AA  6ED9               	movwf	fsr2l,c
 28104  0150AC  0EFF               	movlw	255
 28105  0150AE  20E2               	addwfc	fsr1h,w,c
 28106  0150B0  6EDA               	movwf	fsr2h,c
 28107  0150B2  0E80               	movlw	128
 28108  0150B4  12DE               	iorwf	postinc2,f,c
 28109  0150B6  0E7F               	movlw	127
 28110  0150B8  12DD               	iorwf	postdec2,f,c
 28111  0150BA                     l8718:
 28112                           
 28113                           ;stkvar	_sign @ sp[(-13)+12]
 28114  0150BA  0EFF               	movlw	-1
 28115  0150BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 28116                           
 28117                           ;stkvar	_b @ sp[(-13)+-4]
 28118  0150C2  0EF2               	movlw	242
 28119  0150C4  24E1               	addwf	fsr1l,w,c
 28120  0150C6  6ED9               	movwf	fsr2l,c
 28121  0150C8  0EFF               	movlw	255
 28122  0150CA  20E2               	addwfc	fsr1h,w,c
 28123  0150CC  6EDA               	movwf	fsr2h,c
 28124  0150CE  500C               	movf	(btemp+11)^0,w,c
 28125  0150D0  12DF               	iorwf	indf2,f,c
 28126                           
 28127                           ;stkvar	_b @ sp[(-13)+-4]
 28128  0150D2  0EEF               	movlw	-17
 28129  0150D4  006F FF8C  F001    	movff	plusw1,btemp
 28130  0150DA  0EF0               	movlw	-16
 28131  0150DC  006F FF8C  F002    	movff	plusw1,btemp+1
 28132  0150E2  0EF1               	movlw	-15
 28133  0150E4  006F FF8C  F003    	movff	plusw1,btemp+2
 28134  0150EA  0EF2               	movlw	-14
 28135  0150EC  006F FF8C  F004    	movff	plusw1,btemp+3
 28136  0150F2  D19F               	goto	l3129
 28137  0150F4                     l8724:
 28138                           
 28139                           ;stkvar	_bexp @ sp[(-13)+11]
 28140  0150F4  0EFE               	movlw	-2
 28141  0150F6  50E3               	movf	plusw1,w,c
 28142  0150F8  A4D8               	btfss	status,2,c
 28143  0150FA  D009               	goto	l8732
 28144  0150FC  0E00               	movlw	0
 28145  0150FE  6E01               	movwf	btemp^0,c
 28146  015100  0E00               	movlw	0
 28147  015102  6E02               	movwf	(btemp+1)^0,c
 28148  015104  0E00               	movlw	0
 28149  015106  6E03               	movwf	(btemp+2)^0,c
 28150  015108  0E00               	movlw	0
 28151  01510A  6E04               	movwf	(btemp+3)^0,c
 28152  01510C  D192               	goto	l3129
 28153  01510E                     l8732:
 28154                           
 28155                           ;stkvar	_bexp @ sp[(-13)+11]
 28156  01510E  0EFE               	movlw	-2
 28157  015110  50E3               	movf	plusw1,w,c
 28158  015112  6E0B               	movwf	(btemp+10)^0,c
 28159  015114  6A0C               	clrf	(btemp+11)^0,c
 28160                           
 28161                           ;stkvar	_aexp @ sp[(-13)+10]
 28162  015116  0EFD               	movlw	-3
 28163  015118  50E3               	movf	plusw1,w,c
 28164  01511A  5E0B               	subwf	(btemp+10)^0,f,c
 28165  01511C  0E00               	movlw	0
 28166  01511E  5A0C               	subwfb	(btemp+11)^0,f,c
 28167  015120  0E7F               	movlw	127
 28168  015122  260B               	addwf	(btemp+10)^0,f,c
 28169  015124  0E00               	movlw	0
 28170  015126  220C               	addwfc	(btemp+11)^0,f,c
 28171                           
 28172                           ;stkvar	_new_exp @ sp[(-13)+8]
 28173  015128  0EFB               	movlw	-5
 28174  01512A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28175  015130  0EFC               	movlw	-4
 28176  015132  0060  F033  FFE3   	movff	btemp+11,plusw1
 28177                           
 28178                           ;stkvar	_b @ sp[(-13)+-4]
 28179  015138  0EEF               	movlw	-17
 28180  01513A  006F FF8C  F009    	movff	plusw1,btemp+8
 28181  015140  0EF0               	movlw	-16
 28182  015142  006F FF8C  F00A    	movff	plusw1,btemp+9
 28183  015148  0EF1               	movlw	-15
 28184  01514A  006F FF8C  F00B    	movff	plusw1,btemp+10
 28185  015150  0EF2               	movlw	-14
 28186  015152  006F FF8C  F00C    	movff	plusw1,btemp+11
 28187                           
 28188                           ;stkvar	_rem @ sp[(-13)+4]
 28189  015158  0EF7               	movlw	-9
 28190  01515A  0060  F027  FFE3   	movff	btemp+8,plusw1
 28191  015160  0EF8               	movlw	-8
 28192  015162  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28193  015168  0EF9               	movlw	-7
 28194  01516A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28195  015170  0EFA               	movlw	-6
 28196  015172  0060  F033  FFE3   	movff	btemp+11,plusw1
 28197                           
 28198                           ;stkvar	_b @ sp[(-13)+-4]
 28199  015178  0EEF               	movlw	-17
 28200  01517A  6AE3               	clrf	plusw1,c
 28201  01517C  0EF0               	movlw	-16
 28202  01517E  6AE3               	clrf	plusw1,c
 28203  015180  0EF1               	movlw	-15
 28204  015182  6AE3               	clrf	plusw1,c
 28205  015184  0EF2               	movlw	-14
 28206  015186  6AE3               	clrf	plusw1,c
 28207                           
 28208                           ;stkvar	_grs @ sp[(-13)+0]
 28209  015188  0EF3               	movlw	-13
 28210  01518A  6AE3               	clrf	plusw1,c
 28211  01518C  0EF4               	movlw	-12
 28212  01518E  6AE3               	clrf	plusw1,c
 28213  015190  0EF5               	movlw	-11
 28214  015192  6AE3               	clrf	plusw1,c
 28215  015194  0EF6               	movlw	-10
 28216  015196  6AE3               	clrf	plusw1,c
 28217                           
 28218                           ;stkvar	_aexp @ sp[(-13)+10]
 28219  015198  0EFD               	movlw	-3
 28220  01519A  6AE3               	clrf	plusw1,c
 28221  01519C  D050               	goto	l8760
 28222  01519E                     l8742:
 28223                           
 28224                           ;stkvar	_aexp @ sp[(-13)+10]
 28225  01519E  0EFD               	movlw	-3
 28226  0151A0  50E3               	movf	plusw1,w,c
 28227  0151A2  B4D8               	btfsc	status,2,c
 28228  0151A4  D020               	goto	l8752
 28229                           
 28230                           ;stkvar	_rem @ sp[(-13)+4]
 28231  0151A6  90D8               	bcf	status,0,c
 28232  0151A8  0EF7               	movlw	-9
 28233  0151AA  36E3               	rlcf	plusw1,f,c
 28234  0151AC  0EF8               	movlw	-8
 28235  0151AE  36E3               	rlcf	plusw1,f,c
 28236  0151B0  0EF9               	movlw	-7
 28237  0151B2  36E3               	rlcf	plusw1,f,c
 28238  0151B4  0EFA               	movlw	-6
 28239  0151B6  36E3               	rlcf	plusw1,f,c
 28240                           
 28241                           ;stkvar	_b @ sp[(-13)+-4]
 28242  0151B8  90D8               	bcf	status,0,c
 28243  0151BA  0EEF               	movlw	-17
 28244  0151BC  36E3               	rlcf	plusw1,f,c
 28245  0151BE  0EF0               	movlw	-16
 28246  0151C0  36E3               	rlcf	plusw1,f,c
 28247  0151C2  0EF1               	movlw	-15
 28248  0151C4  36E3               	rlcf	plusw1,f,c
 28249  0151C6  0EF2               	movlw	-14
 28250  0151C8  36E3               	rlcf	plusw1,f,c
 28251                           
 28252                           ;stkvar	_grs @ sp[(-13)+0]
 28253  0151CA  0EF6               	movlw	-10
 28254  0151CC  AEE3               	btfss	plusw1,7,c
 28255  0151CE  D002               	goto	l8750
 28256                           
 28257                           ;stkvar	_b @ sp[(-13)+-4]
 28258  0151D0  0EEF               	movlw	-17
 28259  0151D2  80E3               	bsf	plusw1,0,c
 28260  0151D4                     l8750:
 28261                           
 28262                           ;stkvar	_grs @ sp[(-13)+0]
 28263  0151D4  90D8               	bcf	status,0,c
 28264  0151D6  0EF3               	movlw	-13
 28265  0151D8  36E3               	rlcf	plusw1,f,c
 28266  0151DA  0EF4               	movlw	-12
 28267  0151DC  36E3               	rlcf	plusw1,f,c
 28268  0151DE  0EF5               	movlw	-11
 28269  0151E0  36E3               	rlcf	plusw1,f,c
 28270  0151E2  0EF6               	movlw	-10
 28271  0151E4  36E3               	rlcf	plusw1,f,c
 28272  0151E6                     l8752:
 28273                           
 28274                           ;stkvar	_a @ sp[(-13)+-8]
 28275                           ;stkvar	_rem @ sp[(-13)+4]
 28276  0151E6  50E1               	movf	fsr1l,w,c
 28277  0151E8  0FF7               	addlw	-9
 28278  0151EA  6ED9               	movwf	fsr2l,c
 28279  0151EC  50E2               	movf	fsr1h,w,c
 28280  0151EE  6EDA               	movwf	fsr2h,c
 28281  0151F0  0EFF               	movlw	255
 28282  0151F2  22DA               	addwfc	fsr2h,f,c
 28283  0151F4  0EEB               	movlw	-21
 28284  0151F6  50E3               	movf	plusw1,w,c
 28285  0151F8  5CDE               	subwf	postinc2,w,c
 28286  0151FA  0EEC               	movlw	-20
 28287  0151FC  50E3               	movf	plusw1,w,c
 28288  0151FE  58DE               	subwfb	postinc2,w,c
 28289  015200  0EED               	movlw	-19
 28290  015202  50E3               	movf	plusw1,w,c
 28291  015204  58DE               	subwfb	postinc2,w,c
 28292  015206  0EEE               	movlw	-18
 28293  015208  50E3               	movf	plusw1,w,c
 28294  01520A  58DE               	subwfb	postinc2,w,c
 28295  01520C  A0D8               	btfss	status,0,c
 28296  01520E  D015               	goto	l8758
 28297                           
 28298                           ;stkvar	_grs @ sp[(-13)+0]
 28299  015210  0EF6               	movlw	-10
 28300  015212  8CE3               	bsf	plusw1,6,c
 28301                           
 28302                           ;stkvar	_a @ sp[(-13)+-8]
 28303                           ;stkvar	_rem @ sp[(-13)+4]
 28304  015214  50E1               	movf	fsr1l,w,c
 28305  015216  0FF7               	addlw	-9
 28306  015218  6ED9               	movwf	fsr2l,c
 28307  01521A  50E2               	movf	fsr1h,w,c
 28308  01521C  6EDA               	movwf	fsr2h,c
 28309  01521E  0EFF               	movlw	255
 28310  015220  22DA               	addwfc	fsr2h,f,c
 28311  015222  0EEB               	movlw	-21
 28312  015224  50E3               	movf	plusw1,w,c
 28313  015226  5EDE               	subwf	postinc2,f,c
 28314  015228  0EEC               	movlw	-20
 28315  01522A  50E3               	movf	plusw1,w,c
 28316  01522C  5ADE               	subwfb	postinc2,f,c
 28317  01522E  0EED               	movlw	-19
 28318  015230  50E3               	movf	plusw1,w,c
 28319  015232  5ADE               	subwfb	postinc2,f,c
 28320  015234  0EEE               	movlw	-18
 28321  015236  50E3               	movf	plusw1,w,c
 28322  015238  5ADE               	subwfb	postinc2,f,c
 28323  01523A                     l8758:
 28324                           
 28325                           ;stkvar	_aexp @ sp[(-13)+10]
 28326  01523A  0EFD               	movlw	-3
 28327  01523C  2AE3               	incf	plusw1,f,c
 28328  01523E                     l8760:
 28329                           
 28330                           ;stkvar	_aexp @ sp[(-13)+10]
 28331  01523E  0EFD               	movlw	-3
 28332  015240  006F FF8C  F001    	movff	plusw1,btemp
 28333  015246  0E19               	movlw	25
 28334  015248  6401               	cpfsgt	btemp^0,c
 28335  01524A  D7A9               	goto	l8742
 28336                           
 28337                           ;stkvar	_rem @ sp[(-13)+4]
 28338  01524C  0EF7               	movlw	-9
 28339  01524E  50E3               	movf	plusw1,w,c
 28340  015250  E10A               	bnz	u6980
 28341  015252  0EF8               	movlw	-8
 28342  015254  50E3               	movf	plusw1,w,c
 28343  015256  E107               	bnz	u6980
 28344  015258  0EF9               	movlw	-7
 28345  01525A  50E3               	movf	plusw1,w,c
 28346  01525C  E104               	bnz	u6980
 28347  01525E  0EFA               	movlw	-6
 28348  015260  50E3               	movf	plusw1,w,c
 28349  015262  B4D8               	btfsc	status,2,c
 28350  015264  D024               	goto	l8776
 28351  015266                     u6980:
 28352                           
 28353                           ;stkvar	_grs @ sp[(-13)+0]
 28354  015266  0EF3               	movlw	-13
 28355  015268  80E3               	bsf	plusw1,0,c
 28356  01526A  D021               	goto	l8776
 28357  01526C                     l8766:
 28358                           
 28359                           ;stkvar	_b @ sp[(-13)+-4]
 28360  01526C  90D8               	bcf	status,0,c
 28361  01526E  0EEF               	movlw	-17
 28362  015270  36E3               	rlcf	plusw1,f,c
 28363  015272  0EF0               	movlw	-16
 28364  015274  36E3               	rlcf	plusw1,f,c
 28365  015276  0EF1               	movlw	-15
 28366  015278  36E3               	rlcf	plusw1,f,c
 28367  01527A  0EF2               	movlw	-14
 28368  01527C  36E3               	rlcf	plusw1,f,c
 28369                           
 28370                           ;stkvar	_grs @ sp[(-13)+0]
 28371  01527E  0EF6               	movlw	-10
 28372  015280  AEE3               	btfss	plusw1,7,c
 28373  015282  D002               	goto	l8772
 28374                           
 28375                           ;stkvar	_b @ sp[(-13)+-4]
 28376  015284  0EEF               	movlw	-17
 28377  015286  80E3               	bsf	plusw1,0,c
 28378  015288                     l8772:
 28379                           
 28380                           ;stkvar	_grs @ sp[(-13)+0]
 28381  015288  90D8               	bcf	status,0,c
 28382  01528A  0EF3               	movlw	-13
 28383  01528C  36E3               	rlcf	plusw1,f,c
 28384  01528E  0EF4               	movlw	-12
 28385  015290  36E3               	rlcf	plusw1,f,c
 28386  015292  0EF5               	movlw	-11
 28387  015294  36E3               	rlcf	plusw1,f,c
 28388  015296  0EF6               	movlw	-10
 28389  015298  36E3               	rlcf	plusw1,f,c
 28390                           
 28391                           ;stkvar	_new_exp @ sp[(-13)+8]
 28392  01529A  50E1               	movf	fsr1l,w,c
 28393  01529C  0FFB               	addlw	-5
 28394  01529E  6ED9               	movwf	fsr2l,c
 28395  0152A0  50E2               	movf	fsr1h,w,c
 28396  0152A2  6EDA               	movwf	fsr2h,c
 28397  0152A4  0EFF               	movlw	255
 28398  0152A6  22DA               	addwfc	fsr2h,f,c
 28399  0152A8  06DE               	decf	postinc2,f,c
 28400  0152AA  0E00               	movlw	0
 28401  0152AC  5ADD               	subwfb	postdec2,f,c
 28402  0152AE                     l8776:
 28403                           
 28404                           ;stkvar	_b @ sp[(-13)+-4]
 28405  0152AE  0EF1               	movlw	-15
 28406  0152B0  AEE3               	btfss	plusw1,7,c
 28407  0152B2  D7DC               	goto	l8766
 28408                           
 28409                           ;stkvar	_aexp @ sp[(-13)+10]
 28410  0152B4  0EFD               	movlw	-3
 28411  0152B6  6AE3               	clrf	plusw1,c
 28412                           
 28413                           ;stkvar	_grs @ sp[(-13)+0]
 28414  0152B8  0EF6               	movlw	-10
 28415  0152BA  AEE3               	btfss	plusw1,7,c
 28416  0152BC  D020               	goto	l8790
 28417                           
 28418                           ;stkvar	_grs @ sp[(-13)+0]
 28419  0152BE  50E1               	movf	fsr1l,w,c
 28420  0152C0  0FF3               	addlw	-13
 28421  0152C2  6ED9               	movwf	fsr2l,c
 28422  0152C4  50E2               	movf	fsr1h,w,c
 28423  0152C6  6EDA               	movwf	fsr2h,c
 28424  0152C8  0EFF               	movlw	255
 28425  0152CA  22DA               	addwfc	fsr2h,f,c
 28426  0152CC  0EFF               	movlw	255
 28427  0152CE  14DE               	andwf	postinc2,w,c
 28428  0152D0  6E09               	movwf	(btemp+8)^0,c
 28429  0152D2  0EFF               	movlw	255
 28430  0152D4  14DE               	andwf	postinc2,w,c
 28431  0152D6  6E0A               	movwf	(btemp+9)^0,c
 28432  0152D8  0EFF               	movlw	255
 28433  0152DA  14DE               	andwf	postinc2,w,c
 28434  0152DC  6E0B               	movwf	(btemp+10)^0,c
 28435  0152DE  0E7F               	movlw	127
 28436  0152E0  14DE               	andwf	postinc2,w,c
 28437  0152E2  6E0C               	movwf	(btemp+11)^0,c
 28438  0152E4  5009               	movf	(btemp+8)^0,w,c
 28439  0152E6  100A               	iorwf	(btemp+9)^0,w,c
 28440  0152E8  100B               	iorwf	(btemp+10)^0,w,c
 28441  0152EA  100C               	iorwf	(btemp+11)^0,w,c
 28442  0152EC  B4D8               	btfsc	status,2,c
 28443  0152EE  D004               	goto	l8786
 28444  0152F0                     u7020:
 28445                           
 28446                           ;stkvar	_aexp @ sp[(-13)+10]
 28447  0152F0  0EFD               	movlw	-3
 28448  0152F2  6AE3               	clrf	plusw1,c
 28449  0152F4  2AE3               	incf	plusw1,f,c
 28450  0152F6  D003               	goto	l8790
 28451  0152F8                     l8786:
 28452                           
 28453                           ;stkvar	_b @ sp[(-13)+-4]
 28454  0152F8  0EEF               	movlw	-17
 28455  0152FA  B0E3               	btfsc	plusw1,0,c
 28456  0152FC  D7F9               	goto	u7020
 28457  0152FE                     l8790:
 28458                           
 28459                           ;stkvar	_aexp @ sp[(-13)+10]
 28460  0152FE  0EFD               	movlw	-3
 28461  015300  50E3               	movf	plusw1,w,c
 28462  015302  B4D8               	btfsc	status,2,c
 28463  015304  D036               	goto	l8800
 28464                           
 28465                           ;stkvar	_b @ sp[(-13)+-4]
 28466  015306  50E1               	movf	fsr1l,w,c
 28467  015308  0FEF               	addlw	-17
 28468  01530A  6ED9               	movwf	fsr2l,c
 28469  01530C  50E2               	movf	fsr1h,w,c
 28470  01530E  6EDA               	movwf	fsr2h,c
 28471  015310  0EFF               	movlw	255
 28472  015312  22DA               	addwfc	fsr2h,f,c
 28473  015314  2ADE               	incf	postinc2,f,c
 28474  015316  0E00               	movlw	0
 28475  015318  22DE               	addwfc	postinc2,f,c
 28476  01531A  22DE               	addwfc	postinc2,f,c
 28477  01531C  22DE               	addwfc	postinc2,f,c
 28478                           
 28479                           ;stkvar	_b @ sp[(-13)+-4]
 28480  01531E  0EF2               	movlw	-14
 28481  015320  A0E3               	btfss	plusw1,0,c
 28482  015322  D027               	goto	l8800
 28483  015324  0E01               	movlw	1
 28484  015326  6E0C               	movwf	(btemp+11)^0,c
 28485                           
 28486                           ;stkvar	_b @ sp[(-13)+-4]
 28487  015328  50E1               	movf	fsr1l,w,c
 28488  01532A  0FEF               	addlw	-17
 28489  01532C  6ED9               	movwf	fsr2l,c
 28490  01532E  50E2               	movf	fsr1h,w,c
 28491  015330  6EDA               	movwf	fsr2h,c
 28492  015332  0EFF               	movlw	255
 28493  015334  22DA               	addwfc	fsr2h,f,c
 28494  015336  280C               	incf	(btemp+11)^0,w,c
 28495  015338  52DE               	movf	postinc2,f,c
 28496  01533A  D008               	goto	u7060
 28497  01533C                     u7065:
 28498  01533C  52DE               	movf	postinc2,f,c
 28499  01533E  90D8               	bcf	status,0,c
 28500  015340  BEDC               	btfsc	preinc2,7,c
 28501  015342  80D8               	bsf	status,0,c
 28502  015344  32DD               	rrcf	postdec2,f,c
 28503  015346  32DD               	rrcf	postdec2,f,c
 28504  015348  32DD               	rrcf	postdec2,f,c
 28505  01534A  32DE               	rrcf	postinc2,f,c
 28506  01534C                     u7060:
 28507  01534C  2EE8               	decfsz	wreg,f,c
 28508  01534E  D7F6               	goto	u7065
 28509                           
 28510                           ;stkvar	_new_exp @ sp[(-13)+8]
 28511  015350  0EFB               	movlw	-5
 28512  015352  50E3               	movf	plusw1,w,c
 28513  015354  0F01               	addlw	1
 28514  015356  6E01               	movwf	btemp^0,c
 28515  015358  0EFB               	movlw	-5
 28516  01535A  0060  F007  FFE3   	movff	btemp,plusw1
 28517  015360  6A01               	clrf	btemp^0,c
 28518  015362  0EFC               	movlw	-4
 28519  015364  50E3               	movf	plusw1,w,c
 28520  015366  2001               	addwfc	btemp^0,w,c
 28521  015368  6E01               	movwf	btemp^0,c
 28522  01536A  0EFC               	movlw	-4
 28523  01536C  0060  F007  FFE3   	movff	btemp,plusw1
 28524  015372                     l8800:
 28525                           
 28526                           ;stkvar	_new_exp @ sp[(-13)+8]
 28527  015372  0EFC               	movlw	-4
 28528  015374  BEE3               	btfsc	plusw1,7,c
 28529  015376  D01B               	goto	l8806
 28530  015378  0EFC               	movlw	-4
 28531  01537A  50E3               	movf	plusw1,w,c
 28532  01537C  E104               	bnz	u7070
 28533  01537E  0EFB               	movlw	-5
 28534  015380  28E3               	incf	plusw1,w,c
 28535  015382  A0D8               	btfss	status,0,c
 28536  015384  D014               	goto	l8806
 28537  015386                     u7070:
 28538  015386  0EFF               	movlw	255
 28539  015388  6E0B               	movwf	(btemp+10)^0,c
 28540  01538A  0E00               	movlw	0
 28541  01538C  6E0C               	movwf	(btemp+11)^0,c
 28542                           
 28543                           ;stkvar	_new_exp @ sp[(-13)+8]
 28544  01538E  0EFB               	movlw	-5
 28545  015390  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28546  015396  0EFC               	movlw	-4
 28547  015398  0060  F033  FFE3   	movff	btemp+11,plusw1
 28548                           
 28549                           ;stkvar	_b @ sp[(-13)+-4]
 28550  01539E  0EEF               	movlw	-17
 28551  0153A0  6AE3               	clrf	plusw1,c
 28552  0153A2  0EF0               	movlw	-16
 28553  0153A4  6AE3               	clrf	plusw1,c
 28554  0153A6  0EF1               	movlw	-15
 28555  0153A8  6AE3               	clrf	plusw1,c
 28556  0153AA  0EF2               	movlw	-14
 28557  0153AC  6AE3               	clrf	plusw1,c
 28558  0153AE                     l8806:
 28559                           
 28560                           ;stkvar	_new_exp @ sp[(-13)+8]
 28561  0153AE  0EFC               	movlw	-4
 28562  0153B0  BEE3               	btfsc	plusw1,7,c
 28563  0153B2  D007               	goto	u7080
 28564  0153B4  0EFC               	movlw	-4
 28565  0153B6  50E3               	movf	plusw1,w,c
 28566  0153B8  E112               	bnz	l8812
 28567  0153BA  0EFB               	movlw	-5
 28568  0153BC  04E3               	decf	plusw1,w,c
 28569  0153BE  B0D8               	btfsc	status,0,c
 28570  0153C0  D00E               	goto	l8812
 28571  0153C2                     u7080:
 28572                           
 28573                           ;stkvar	_new_exp @ sp[(-13)+8]
 28574  0153C2  0EFB               	movlw	-5
 28575  0153C4  6AE3               	clrf	plusw1,c
 28576  0153C6  0EFC               	movlw	-4
 28577  0153C8  6AE3               	clrf	plusw1,c
 28578                           
 28579                           ;stkvar	_b @ sp[(-13)+-4]
 28580  0153CA  0EEF               	movlw	-17
 28581  0153CC  6AE3               	clrf	plusw1,c
 28582  0153CE  0EF0               	movlw	-16
 28583  0153D0  6AE3               	clrf	plusw1,c
 28584  0153D2  0EF1               	movlw	-15
 28585  0153D4  6AE3               	clrf	plusw1,c
 28586  0153D6  0EF2               	movlw	-14
 28587  0153D8  6AE3               	clrf	plusw1,c
 28588                           
 28589                           ;stkvar	_sign @ sp[(-13)+12]
 28590  0153DA  0EFF               	movlw	-1
 28591  0153DC  6AE3               	clrf	plusw1,c
 28592  0153DE                     l8812:
 28593                           
 28594                           ;stkvar	_new_exp @ sp[(-13)+8]
 28595                           ;stkvar	_bexp @ sp[(-13)+11]
 28596  0153DE  0EFB               	movlw	-5
 28597  0153E0  006F FF8C  F001    	movff	plusw1,btemp
 28598  0153E6  0EFE               	movlw	-2
 28599  0153E8  0060  F007  FFE3   	movff	btemp,plusw1
 28600                           
 28601                           ;stkvar	_bexp @ sp[(-13)+11]
 28602  0153EE  0EFE               	movlw	-2
 28603  0153F0  A0E3               	btfss	plusw1,0,c
 28604  0153F2  D009               	goto	l8818
 28605                           
 28606                           ;stkvar	_b @ sp[(-13)+-4]
 28607  0153F4  0EF1               	movlw	241
 28608  0153F6  24E1               	addwf	fsr1l,w,c
 28609  0153F8  6ED9               	movwf	fsr2l,c
 28610  0153FA  0EFF               	movlw	255
 28611  0153FC  20E2               	addwfc	fsr1h,w,c
 28612  0153FE  6EDA               	movwf	fsr2h,c
 28613  015400  0E00               	movlw	0
 28614  015402  8EDB               	bsf	plusw2,7,c
 28615  015404  D008               	goto	l8820
 28616  015406                     l8818:
 28617                           
 28618                           ;stkvar	_b @ sp[(-13)+-4]
 28619  015406  0EF1               	movlw	241
 28620  015408  24E1               	addwf	fsr1l,w,c
 28621  01540A  6ED9               	movwf	fsr2l,c
 28622  01540C  0EFF               	movlw	255
 28623  01540E  20E2               	addwfc	fsr1h,w,c
 28624  015410  6EDA               	movwf	fsr2h,c
 28625  015412  0E7F               	movlw	127
 28626  015414  16DF               	andwf	indf2,f,c
 28627  015416                     l8820:
 28628                           
 28629                           ;stkvar	_b @ sp[(-13)+-4]
 28630  015416  0EF2               	movlw	242
 28631  015418  24E1               	addwf	fsr1l,w,c
 28632  01541A  6ED9               	movwf	fsr2l,c
 28633  01541C  0EFF               	movlw	255
 28634  01541E  20E2               	addwfc	fsr1h,w,c
 28635  015420  6EDA               	movwf	fsr2h,c
 28636                           
 28637                           ;stkvar	_bexp @ sp[(-13)+11]
 28638  015422  0EFE               	movlw	-2
 28639  015424  006F FF8C  F00C    	movff	plusw1,btemp+11
 28640  01542A  90D8               	bcf	status,0,c
 28641  01542C  300C               	rrcf	(btemp+11)^0,w,c
 28642  01542E  6EDF               	movwf	indf2,c
 28643  015430  D644               	goto	l8718
 28644  015432                     l3129:
 28645                           
 28646                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28647  015432  0EEB               	movlw	235
 28648  015434  26E1               	addwf	fsr1l,f,c
 28649  015436  0EFF               	movlw	255
 28650  015438  22E2               	addwfc	fsr1h,f,c
 28651  01543A  0012               	return		;funcret
 28652  01543C                     __end_of___fldiv:
 28653                           	opt callstack 0
 28654                           
 28655 ;; *************** function ___flge *****************
 28656 ;; Defined at:
 28657 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 28658 ;; Parameters:    Size  Location     Type
 28659 ;;  ff1             4  [STACK] unsigned char 
 28660 ;;  ff2             4  [STACK] unsigned char 
 28661 ;; Auto vars:     Size  Location     Type
 28662 ;;		None
 28663 ;; Return value:  Size  Location     Type
 28664 ;;		None               void
 28665 ;; Registers used:
 28666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 28667 ;; Tracked objects:
 28668 ;;		On entry : 0/0
 28669 ;;		On exit  : 0/0
 28670 ;;		Unchanged: 0/0
 28671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28676 ;;Total ram usage:        0 bytes
 28677 ;; Hardware stack levels used:    1
 28678 ;; Hardware stack levels required when called:   15
 28679 ;; This function calls:
 28680 ;;		Nothing
 28681 ;; This function is called by:
 28682 ;;		_main
 28683 ;;		_convert_dac_raw
 28684 ;;		_calc_ror_data
 28685 ;;		_check_day_time
 28686 ;;		_calc_bsoc
 28687 ;;		_efgtoa
 28688 ;; This function uses a reentrant model
 28689 ;;
 28690                           
 28691                           	psect	text114
 28692  0197C6                     __ptext114:
 28693                           	opt callstack 0
 28694  0197C6                     ___flge:
 28695                           	opt callstack 0
 28696                           
 28697                           ;stkvar	_ff1 @ sp[(0)+-4]
 28698                           
 28699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28700                           ;incstack = 0
 28701 ;; hardware stack exceeded
 28702  0197C6  50E1               	movf	fsr1l,w,c
 28703  0197C8  0FFC               	addlw	-4
 28704  0197CA  6ED9               	movwf	fsr2l,c
 28705  0197CC  50E2               	movf	fsr1h,w,c
 28706  0197CE  6EDA               	movwf	fsr2h,c
 28707  0197D0  0EFF               	movlw	255
 28708  0197D2  22DA               	addwfc	fsr2h,f,c
 28709  0197D4  0E00               	movlw	0
 28710  0197D6  14DE               	andwf	postinc2,w,c
 28711  0197D8  6E09               	movwf	(btemp+8)^0,c
 28712  0197DA  0E00               	movlw	0
 28713  0197DC  14DE               	andwf	postinc2,w,c
 28714  0197DE  6E0A               	movwf	(btemp+9)^0,c
 28715  0197E0  0E80               	movlw	128
 28716  0197E2  14DE               	andwf	postinc2,w,c
 28717  0197E4  6E0B               	movwf	(btemp+10)^0,c
 28718  0197E6  0E7F               	movlw	127
 28719  0197E8  14DE               	andwf	postinc2,w,c
 28720  0197EA  6E0C               	movwf	(btemp+11)^0,c
 28721  0197EC  5009               	movf	(btemp+8)^0,w,c
 28722  0197EE  100A               	iorwf	(btemp+9)^0,w,c
 28723  0197F0  100B               	iorwf	(btemp+10)^0,w,c
 28724  0197F2  100C               	iorwf	(btemp+11)^0,w,c
 28725  0197F4  A4D8               	btfss	status,2,c
 28726  0197F6  D008               	goto	l9094
 28727                           
 28728                           ;stkvar	_ff1 @ sp[(0)+-4]
 28729  0197F8  0EFC               	movlw	-4
 28730  0197FA  6AE3               	clrf	plusw1,c
 28731  0197FC  0EFD               	movlw	-3
 28732  0197FE  6AE3               	clrf	plusw1,c
 28733  019800  0EFE               	movlw	-2
 28734  019802  6AE3               	clrf	plusw1,c
 28735  019804  0EFF               	movlw	-1
 28736  019806  6AE3               	clrf	plusw1,c
 28737  019808                     l9094:
 28738                           
 28739                           ;stkvar	_ff2 @ sp[(0)+-8]
 28740  019808  50E1               	movf	fsr1l,w,c
 28741  01980A  0FF8               	addlw	-8
 28742  01980C  6ED9               	movwf	fsr2l,c
 28743  01980E  50E2               	movf	fsr1h,w,c
 28744  019810  6EDA               	movwf	fsr2h,c
 28745  019812  0EFF               	movlw	255
 28746  019814  22DA               	addwfc	fsr2h,f,c
 28747  019816  0E00               	movlw	0
 28748  019818  14DE               	andwf	postinc2,w,c
 28749  01981A  6E09               	movwf	(btemp+8)^0,c
 28750  01981C  0E00               	movlw	0
 28751  01981E  14DE               	andwf	postinc2,w,c
 28752  019820  6E0A               	movwf	(btemp+9)^0,c
 28753  019822  0E80               	movlw	128
 28754  019824  14DE               	andwf	postinc2,w,c
 28755  019826  6E0B               	movwf	(btemp+10)^0,c
 28756  019828  0E7F               	movlw	127
 28757  01982A  14DE               	andwf	postinc2,w,c
 28758  01982C  6E0C               	movwf	(btemp+11)^0,c
 28759  01982E  5009               	movf	(btemp+8)^0,w,c
 28760  019830  100A               	iorwf	(btemp+9)^0,w,c
 28761  019832  100B               	iorwf	(btemp+10)^0,w,c
 28762  019834  100C               	iorwf	(btemp+11)^0,w,c
 28763  019836  A4D8               	btfss	status,2,c
 28764  019838  D008               	goto	l2810
 28765                           
 28766                           ;stkvar	_ff2 @ sp[(0)+-8]
 28767  01983A  0EF8               	movlw	-8
 28768  01983C  6AE3               	clrf	plusw1,c
 28769  01983E  0EF9               	movlw	-7
 28770  019840  6AE3               	clrf	plusw1,c
 28771  019842  0EFA               	movlw	-6
 28772  019844  6AE3               	clrf	plusw1,c
 28773  019846  0EFB               	movlw	-5
 28774  019848  6AE3               	clrf	plusw1,c
 28775  01984A                     l2810:
 28776                           
 28777                           ;stkvar	_ff1 @ sp[(0)+-4]
 28778  01984A  0EFF               	movlw	-1
 28779  01984C  AEE3               	btfss	plusw1,7,c
 28780  01984E  D024               	goto	l9100
 28781                           
 28782                           ;stkvar	_ff1 @ sp[(0)+-4]
 28783  019850  0E00               	movlw	0
 28784  019852  6E09               	movwf	(btemp+8)^0,c
 28785  019854  0E00               	movlw	0
 28786  019856  6E0A               	movwf	(btemp+9)^0,c
 28787  019858  0E00               	movlw	0
 28788  01985A  6E0B               	movwf	(btemp+10)^0,c
 28789  01985C  0E80               	movlw	128
 28790  01985E  6E0C               	movwf	(btemp+11)^0,c
 28791  019860  0EFC               	movlw	-4
 28792  019862  50E3               	movf	plusw1,w,c
 28793  019864  5E09               	subwf	(btemp+8)^0,f,c
 28794  019866  0EFD               	movlw	-3
 28795  019868  50E3               	movf	plusw1,w,c
 28796  01986A  5A0A               	subwfb	(btemp+9)^0,f,c
 28797  01986C  0EFE               	movlw	-2
 28798  01986E  50E3               	movf	plusw1,w,c
 28799  019870  5A0B               	subwfb	(btemp+10)^0,f,c
 28800  019872  0EFF               	movlw	-1
 28801  019874  50E3               	movf	plusw1,w,c
 28802  019876  5A0C               	subwfb	(btemp+11)^0,f,c
 28803                           
 28804                           ;stkvar	_ff1 @ sp[(0)+-4]
 28805  019878  0EFC               	movlw	-4
 28806  01987A  0060  F027  FFE3   	movff	btemp+8,plusw1
 28807  019880  0EFD               	movlw	-3
 28808  019882  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28809  019888  0EFE               	movlw	-2
 28810  01988A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28811  019890  0EFF               	movlw	-1
 28812  019892  0060  F033  FFE3   	movff	btemp+11,plusw1
 28813  019898                     l9100:
 28814                           
 28815                           ;stkvar	_ff2 @ sp[(0)+-8]
 28816  019898  0EFB               	movlw	-5
 28817  01989A  AEE3               	btfss	plusw1,7,c
 28818  01989C  D024               	goto	l9104
 28819                           
 28820                           ;stkvar	_ff2 @ sp[(0)+-8]
 28821  01989E  0E00               	movlw	0
 28822  0198A0  6E09               	movwf	(btemp+8)^0,c
 28823  0198A2  0E00               	movlw	0
 28824  0198A4  6E0A               	movwf	(btemp+9)^0,c
 28825  0198A6  0E00               	movlw	0
 28826  0198A8  6E0B               	movwf	(btemp+10)^0,c
 28827  0198AA  0E80               	movlw	128
 28828  0198AC  6E0C               	movwf	(btemp+11)^0,c
 28829  0198AE  0EF8               	movlw	-8
 28830  0198B0  50E3               	movf	plusw1,w,c
 28831  0198B2  5E09               	subwf	(btemp+8)^0,f,c
 28832  0198B4  0EF9               	movlw	-7
 28833  0198B6  50E3               	movf	plusw1,w,c
 28834  0198B8  5A0A               	subwfb	(btemp+9)^0,f,c
 28835  0198BA  0EFA               	movlw	-6
 28836  0198BC  50E3               	movf	plusw1,w,c
 28837  0198BE  5A0B               	subwfb	(btemp+10)^0,f,c
 28838  0198C0  0EFB               	movlw	-5
 28839  0198C2  50E3               	movf	plusw1,w,c
 28840  0198C4  5A0C               	subwfb	(btemp+11)^0,f,c
 28841                           
 28842                           ;stkvar	_ff2 @ sp[(0)+-8]
 28843  0198C6  0EF8               	movlw	-8
 28844  0198C8  0060  F027  FFE3   	movff	btemp+8,plusw1
 28845  0198CE  0EF9               	movlw	-7
 28846  0198D0  0060  F02B  FFE3   	movff	btemp+9,plusw1
 28847  0198D6  0EFA               	movlw	-6
 28848  0198D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 28849  0198DE  0EFB               	movlw	-5
 28850  0198E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 28851  0198E6                     l9104:
 28852                           
 28853                           ;stkvar	_ff1 @ sp[(0)+-4]
 28854  0198E6  0EFF               	movlw	-1
 28855  0198E8  7EE3               	btg	plusw1,7,c
 28856                           
 28857                           ;stkvar	_ff2 @ sp[(0)+-8]
 28858  0198EA  0EFB               	movlw	-5
 28859  0198EC  7EE3               	btg	plusw1,7,c
 28860                           
 28861                           ;stkvar	_ff2 @ sp[(0)+-8]
 28862                           ;stkvar	_ff1 @ sp[(0)+-4]
 28863  0198EE  50E1               	movf	fsr1l,w,c
 28864  0198F0  0FFC               	addlw	-4
 28865  0198F2  6ED9               	movwf	fsr2l,c
 28866  0198F4  50E2               	movf	fsr1h,w,c
 28867  0198F6  6EDA               	movwf	fsr2h,c
 28868  0198F8  0EFF               	movlw	255
 28869  0198FA  22DA               	addwfc	fsr2h,f,c
 28870  0198FC  0EF8               	movlw	-8
 28871  0198FE  50E3               	movf	plusw1,w,c
 28872  019900  5CDE               	subwf	postinc2,w,c
 28873  019902  0EF9               	movlw	-7
 28874  019904  50E3               	movf	plusw1,w,c
 28875  019906  58DE               	subwfb	postinc2,w,c
 28876  019908  0EFA               	movlw	-6
 28877  01990A  50E3               	movf	plusw1,w,c
 28878  01990C  58DE               	subwfb	postinc2,w,c
 28879  01990E  0EFB               	movlw	-5
 28880  019910  50E3               	movf	plusw1,w,c
 28881  019912  58DE               	subwfb	postinc2,w,c
 28882  019914  B0D8               	btfsc	status,0,c
 28883  019916  D002               	goto	l9112
 28884  019918  9001               	bcf	btemp& (0+255),0,c
 28885  01991A  D001               	goto	l2817
 28886  01991C                     l9112:
 28887  01991C  8001               	bsf	btemp& (0+255),0,c
 28888  01991E                     l2817:
 28889                           
 28890                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 28891  01991E  0EF8               	movlw	248
 28892  019920  26E1               	addwf	fsr1l,f,c
 28893  019922  0EFF               	movlw	255
 28894  019924  22E2               	addwfc	fsr1h,f,c
 28895  019926  0012               	return		;funcret
 28896  019928                     __end_of___flge:
 28897                           	opt callstack 0
 28898                           
 28899 ;; *************** function _calc_model_data *****************
 28900 ;; Defined at:
 28901 ;;		line 67 in file "mbmc.c"
 28902 ;; Parameters:    Size  Location     Type
 28903 ;;		None
 28904 ;; Auto vars:     Size  Location     Type
 28905 ;;		None
 28906 ;; Return value:  Size  Location     Type
 28907 ;;                  1  [STACK] void 
 28908 ;; Registers used:
 28909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 28910 ;; Tracked objects:
 28911 ;;		On entry : 0/1
 28912 ;;		On exit  : 3F/39
 28913 ;;		Unchanged: 0/0
 28914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28919 ;;Total ram usage:        0 bytes
 28920 ;; Hardware stack levels used:    1
 28921 ;; Hardware stack levels required when called:   18
 28922 ;; This function calls:
 28923 ;;		___fladd
 28924 ;;		___flmul
 28925 ;;		___flsub
 28926 ;;		_lp_filter
 28927 ;;		_start_bsoc
 28928 ;;		_stop_bsoc
 28929 ;; This function is called by:
 28930 ;;		_main
 28931 ;; This function uses a reentrant model
 28932 ;;
 28933                           
 28934                           	psect	text115
 28935  016230                     __ptext115:
 28936                           	opt callstack 0
 28937  016230                     _calc_model_data:
 28938                           	opt callstack 12
 28939                           
 28940                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 28941                           
 28942                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28943                           ;incstack = 0
 28944  016230  ECD2  F0E7         	call	_stop_bsoc	;wreg free
 28945                           
 28946                           ; BSR set to: 57
 28947                           ;mbmc.c: 72:  if (!V.calib) {
 28948  016234  0101               	movlb	1	; () banked
 28949  016236  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 28950  016238  A4D8               	btfss	status,2,c
 28951  01623A  D219               	goto	l11808
 28952                           
 28953                           ; BSR set to: 1
 28954                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 28955  01623C  EE21  F2FF         	lfsr	2,_C
 28956  016240  006F FF78  F743    	movff	postinc2,_C+68	;volatile
 28957  016246  006F FF78  F744    	movff	postinc2,_C+69	;volatile
 28958  01624C  006F FF78  F745    	movff	postinc2,_C+70	;volatile
 28959  016252  006F FF74  F746    	movff	postdec2,_C+71	;volatile
 28960                           
 28961                           ; BSR set to: 1
 28962                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 28963  016258  0060  F1B3  FFE6   	movff	calc_model_data@bcror,postinc1
 28964  01625E  0060  F1B7  FFE6   	movff	calc_model_data@bcror+1,postinc1
 28965  016264  0060  F1BB  FFE6   	movff	calc_model_data@bcror+2,postinc1
 28966  01626A  0060  F1BF  FFE6   	movff	calc_model_data@bcror+3,postinc1
 28967  016270  EE21  F343         	lfsr	2,_C+68	;volatile
 28968  016274  006F FF7B FFE6     	movff	postinc2,postinc1
 28969  01627A  006F FF7B FFE6     	movff	postinc2,postinc1
 28970  016280  006F FF7B FFE6     	movff	postinc2,postinc1
 28971  016286  006F FF7B FFE6     	movff	postinc2,postinc1
 28972  01628C  ECAA  F0E1         	call	___flsub	;wreg free
 28973  016290  0060  F004  F76F   	movff	btemp,_C+112	;volatile
 28974  016296  0060  F008  F770   	movff	btemp+1,_C+113	;volatile
 28975  01629C  0060  F00C  F771   	movff	btemp+2,_C+114	;volatile
 28976  0162A2  0060  F010  F772   	movff	btemp+3,_C+115	;volatile
 28977                           
 28978                           ;mbmc.c: 75:   bcror = C.c_bat;
 28979  0162A8  C743  F06C         	movff	_C+68,calc_model_data@bcror	;volatile
 28980  0162AC  C744  F06D         	movff	_C+69,calc_model_data@bcror+1	;volatile
 28981  0162B0  C745  F06E         	movff	_C+70,calc_model_data@bcror+2	;volatile
 28982  0162B4  C746  F06F         	movff	_C+71,calc_model_data@bcror+3	;volatile
 28983                           
 28984                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 28985  0162B8  EE21  F303         	lfsr	2,_C+4	;volatile
 28986  0162BC  006F FF78  F747    	movff	postinc2,_C+72	;volatile
 28987  0162C2  006F FF78  F748    	movff	postinc2,_C+73	;volatile
 28988  0162C8  006F FF78  F749    	movff	postinc2,_C+74	;volatile
 28989  0162CE  006F FF74  F74A    	movff	postdec2,_C+75	;volatile
 28990                           
 28991                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 28992  0162D4  EE21  F30F         	lfsr	2,_C+16	;volatile
 28993  0162D8  006F FF78  F753    	movff	postinc2,_C+84	;volatile
 28994  0162DE  006F FF78  F754    	movff	postinc2,_C+85	;volatile
 28995  0162E4  006F FF78  F755    	movff	postinc2,_C+86	;volatile
 28996  0162EA  006F FF74  F756    	movff	postdec2,_C+87	;volatile
 28997                           
 28998                           ;mbmc.c: 78:   C.v_sensor = C.calc[V_LIGHT_SENSOR];
 28999  0162F0  EE21  F333         	lfsr	2,_C+52	;volatile
 29000  0162F4  006F FF78  F767    	movff	postinc2,_C+104	;volatile
 29001  0162FA  006F FF78  F768    	movff	postinc2,_C+105	;volatile
 29002  016300  006F FF78  F769    	movff	postinc2,_C+106	;volatile
 29003  016306  006F FF74  F76A    	movff	postdec2,_C+107	;volatile
 29004                           
 29005                           ;mbmc.c: 79:   C.bv_ror = C.v_bat - bvror;
 29006  01630C  0060  F1C3  FFE6   	movff	calc_model_data@bvror,postinc1
 29007  016312  0060  F1C7  FFE6   	movff	calc_model_data@bvror+1,postinc1
 29008  016318  0060  F1CB  FFE6   	movff	calc_model_data@bvror+2,postinc1
 29009  01631E  0060  F1CF  FFE6   	movff	calc_model_data@bvror+3,postinc1
 29010  016324  EE21  F353         	lfsr	2,_C+84	;volatile
 29011  016328  006F FF7B FFE6     	movff	postinc2,postinc1
 29012  01632E  006F FF7B FFE6     	movff	postinc2,postinc1
 29013  016334  006F FF7B FFE6     	movff	postinc2,postinc1
 29014  01633A  006F FF7B FFE6     	movff	postinc2,postinc1
 29015  016340  ECAA  F0E1         	call	___flsub	;wreg free
 29016  016344  0060  F004  F76B   	movff	btemp,_C+108	;volatile
 29017  01634A  0060  F008  F76C   	movff	btemp+1,_C+109	;volatile
 29018  016350  0060  F00C  F76D   	movff	btemp+2,_C+110	;volatile
 29019  016356  0060  F010  F76E   	movff	btemp+3,_C+111	;volatile
 29020                           
 29021                           ;mbmc.c: 80:   bvror = C.v_bat;
 29022  01635C  C753  F070         	movff	_C+84,calc_model_data@bvror	;volatile
 29023  016360  C754  F071         	movff	_C+85,calc_model_data@bvror+1	;volatile
 29024  016364  C755  F072         	movff	_C+86,calc_model_data@bvror+2	;volatile
 29025  016368  C756  F073         	movff	_C+87,calc_model_data@bvror+3	;volatile
 29026                           
 29027                           ;mbmc.c: 81:   C.v_pv = C.calc[V_PV];
 29028  01636C  EE21  F313         	lfsr	2,_C+20	;volatile
 29029  016370  006F FF78  F74F    	movff	postinc2,_C+80	;volatile
 29030  016376  006F FF78  F750    	movff	postinc2,_C+81	;volatile
 29031  01637C  006F FF78  F751    	movff	postinc2,_C+82	;volatile
 29032  016382  006F FF74  F752    	movff	postdec2,_C+83	;volatile
 29033                           
 29034                           ;mbmc.c: 82:   C.v_cc = C.calc[V_CC];
 29035  016388  EE21  F307         	lfsr	2,_C+8	;volatile
 29036  01638C  006F FF78  F74B    	movff	postinc2,_C+76	;volatile
 29037  016392  006F FF78  F74C    	movff	postinc2,_C+77	;volatile
 29038  016398  006F FF78  F74D    	movff	postinc2,_C+78	;volatile
 29039  01639E  006F FF74  F74E    	movff	postdec2,_C+79	;volatile
 29040                           
 29041                           ;mbmc.c: 83:   C.v_inverter = C.calc[V_INVERTER];
 29042  0163A4  EE21  F32F         	lfsr	2,_C+48	;volatile
 29043  0163A8  006F FF78  F763    	movff	postinc2,_C+100	;volatile
 29044  0163AE  006F FF78  F764    	movff	postinc2,_C+101	;volatile
 29045  0163B4  006F FF78  F765    	movff	postinc2,_C+102	;volatile
 29046  0163BA  006F FF74  F766    	movff	postdec2,_C+103	;volatile
 29047                           
 29048                           ;mbmc.c: 84:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 29049  0163C0  0E01               	movlw	1
 29050  0163C2  6EE6               	movwf	postinc1,c
 29051  0163C4  0E10               	movlw	16
 29052  0163C6  6EE6               	movwf	postinc1,c
 29053  0163C8  EE21  F2FF         	lfsr	2,_C
 29054  0163CC  006F FF7B FFE6     	movff	postinc2,postinc1
 29055  0163D2  006F FF7B FFE6     	movff	postinc2,postinc1
 29056  0163D8  006F FF7B FFE6     	movff	postinc2,postinc1
 29057  0163DE  006F FF7B FFE6     	movff	postinc2,postinc1
 29058  0163E4  EE21  F303         	lfsr	2,_C+4	;volatile
 29059  0163E8  006F FF7B FFE6     	movff	postinc2,postinc1
 29060  0163EE  006F FF7B FFE6     	movff	postinc2,postinc1
 29061  0163F4  006F FF7B FFE6     	movff	postinc2,postinc1
 29062  0163FA  006F FF7B FFE6     	movff	postinc2,postinc1
 29063  016400  ECAA  F0E1         	call	___flsub	;wreg free
 29064  016404  0060  F007  FFE6   	movff	btemp,postinc1
 29065  01640A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29066  016410  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29067  016416  0060  F013  FFE6   	movff	btemp+3,postinc1
 29068  01641C  EC2E  F0C7         	call	_lp_filter	;wreg free
 29069  016420  0060  F004  F73F   	movff	btemp,_C+64	;volatile
 29070  016426  0060  F008  F740   	movff	btemp+1,_C+65	;volatile
 29071  01642C  0060  F00C  F741   	movff	btemp+2,_C+66	;volatile
 29072  016432  0060  F010  F742   	movff	btemp+3,_C+67	;volatile
 29073                           
 29074                           ;mbmc.c: 85:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 29075  016438  0E01               	movlw	1
 29076  01643A  6EE6               	movwf	postinc1,c
 29077  01643C  0E11               	movlw	17
 29078  01643E  6EE6               	movwf	postinc1,c
 29079  016440  EE21  F353         	lfsr	2,_C+84	;volatile
 29080  016444  006F FF7B FFE6     	movff	postinc2,postinc1
 29081  01644A  006F FF7B FFE6     	movff	postinc2,postinc1
 29082  016450  006F FF7B FFE6     	movff	postinc2,postinc1
 29083  016456  006F FF7B FFE6     	movff	postinc2,postinc1
 29084  01645C  EE21  F33F         	lfsr	2,_C+64	;volatile
 29085  016460  006F FF7B FFE6     	movff	postinc2,postinc1
 29086  016466  006F FF7B FFE6     	movff	postinc2,postinc1
 29087  01646C  006F FF7B FFE6     	movff	postinc2,postinc1
 29088  016472  006F FF7B FFE6     	movff	postinc2,postinc1
 29089  016478  EC6E  F09F         	call	___flmul	;wreg free
 29090  01647C  0060  F007  FFE6   	movff	btemp,postinc1
 29091  016482  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29092  016488  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29093  01648E  0060  F013  FFE6   	movff	btemp+3,postinc1
 29094  016494  EC2E  F0C7         	call	_lp_filter	;wreg free
 29095  016498  0060  F004  F773   	movff	btemp,_C+116	;volatile
 29096  01649E  0060  F008  F774   	movff	btemp+1,_C+117	;volatile
 29097  0164A4  0060  F00C  F775   	movff	btemp+2,_C+118	;volatile
 29098  0164AA  0060  F010  F776   	movff	btemp+3,_C+119	;volatile
 29099                           
 29100                           ;mbmc.c: 86:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 29101  0164B0  0E01               	movlw	1
 29102  0164B2  6EE6               	movwf	postinc1,c
 29103  0164B4  0E12               	movlw	18
 29104  0164B6  6EE6               	movwf	postinc1,c
 29105  0164B8  EE21  F34F         	lfsr	2,_C+80	;volatile
 29106  0164BC  006F FF7B FFE6     	movff	postinc2,postinc1
 29107  0164C2  006F FF7B FFE6     	movff	postinc2,postinc1
 29108  0164C8  006F FF7B FFE6     	movff	postinc2,postinc1
 29109  0164CE  006F FF7B FFE6     	movff	postinc2,postinc1
 29110  0164D4  EE21  F347         	lfsr	2,_C+72	;volatile
 29111  0164D8  006F FF7B FFE6     	movff	postinc2,postinc1
 29112  0164DE  006F FF7B FFE6     	movff	postinc2,postinc1
 29113  0164E4  006F FF7B FFE6     	movff	postinc2,postinc1
 29114  0164EA  006F FF7B FFE6     	movff	postinc2,postinc1
 29115  0164F0  EC6E  F09F         	call	___flmul	;wreg free
 29116  0164F4  0060  F007  FFE6   	movff	btemp,postinc1
 29117  0164FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29118  016500  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29119  016506  0060  F013  FFE6   	movff	btemp+3,postinc1
 29120  01650C  EC2E  F0C7         	call	_lp_filter	;wreg free
 29121  016510  0060  F004  F77B   	movff	btemp,_C+124	;volatile
 29122  016516  0060  F008  F77C   	movff	btemp+1,_C+125	;volatile
 29123  01651C  0060  F00C  F77D   	movff	btemp+2,_C+126	;volatile
 29124  016522  0060  F010  F77E   	movff	btemp+3,_C+127	;volatile
 29125                           
 29126                           ;mbmc.c: 87:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 29127  016528  0E01               	movlw	1
 29128  01652A  6EE6               	movwf	postinc1,c
 29129  01652C  0E13               	movlw	19
 29130  01652E  6EE6               	movwf	postinc1,c
 29131  016530  0E00               	movlw	0
 29132  016532  6EE6               	movwf	postinc1,c
 29133  016534  0E00               	movlw	0
 29134  016536  6EE6               	movwf	postinc1,c
 29135  016538  0E60               	movlw	96
 29136  01653A  6EE6               	movwf	postinc1,c
 29137  01653C  0EC1               	movlw	193
 29138  01653E  6EE6               	movwf	postinc1,c
 29139  016540  EE21  F363         	lfsr	2,_C+100	;volatile
 29140  016544  006F FF7B FFE6     	movff	postinc2,postinc1
 29141  01654A  006F FF7B FFE6     	movff	postinc2,postinc1
 29142  016550  006F FF7B FFE6     	movff	postinc2,postinc1
 29143  016556  006F FF7B FFE6     	movff	postinc2,postinc1
 29144  01655C  EE21  F33F         	lfsr	2,_C+64	;volatile
 29145  016560  006F FF7B FFE6     	movff	postinc2,postinc1
 29146  016566  006F FF7B FFE6     	movff	postinc2,postinc1
 29147  01656C  006F FF7B FFE6     	movff	postinc2,postinc1
 29148  016572  006F FF7B FFE6     	movff	postinc2,postinc1
 29149  016578  EC6E  F09F         	call	___flmul	;wreg free
 29150  01657C  0060  F007  FFE6   	movff	btemp,postinc1
 29151  016582  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29152  016588  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29153  01658E  0060  F013  FFE6   	movff	btemp+3,postinc1
 29154  016594  EC83  F0A3         	call	___fladd	;wreg free
 29155  016598  0060  F007  FFE6   	movff	btemp,postinc1
 29156  01659E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29157  0165A4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29158  0165AA  0060  F013  FFE6   	movff	btemp+3,postinc1
 29159  0165B0  EC2E  F0C7         	call	_lp_filter	;wreg free
 29160  0165B4  0060  F004  F777   	movff	btemp,_C+120	;volatile
 29161  0165BA  0060  F008  F778   	movff	btemp+1,_C+121	;volatile
 29162  0165C0  0060  F00C  F779   	movff	btemp+2,_C+122	;volatile
 29163  0165C6  0060  F010  F77A   	movff	btemp+3,_C+123	;volatile
 29164                           
 29165                           ;mbmc.c: 88:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 29166  0165CC  0E01               	movlw	1
 29167  0165CE  6EE6               	movwf	postinc1,c
 29168  0165D0  0E14               	movlw	20
 29169  0165D2  6EE6               	movwf	postinc1,c
 29170  0165D4  EE21  F353         	lfsr	2,_C+84	;volatile
 29171  0165D8  006F FF7B FFE6     	movff	postinc2,postinc1
 29172  0165DE  006F FF7B FFE6     	movff	postinc2,postinc1
 29173  0165E4  006F FF7B FFE6     	movff	postinc2,postinc1
 29174  0165EA  006F FF7B FFE6     	movff	postinc2,postinc1
 29175  0165F0  EE21  F343         	lfsr	2,_C+68	;volatile
 29176  0165F4  006F FF7B FFE6     	movff	postinc2,postinc1
 29177  0165FA  006F FF7B FFE6     	movff	postinc2,postinc1
 29178  016600  006F FF7B FFE6     	movff	postinc2,postinc1
 29179  016606  006F FF7B FFE6     	movff	postinc2,postinc1
 29180  01660C  EC6E  F09F         	call	___flmul	;wreg free
 29181  016610  0060  F007  FFE6   	movff	btemp,postinc1
 29182  016616  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29183  01661C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29184  016622  0060  F013  FFE6   	movff	btemp+3,postinc1
 29185  016628  EC2E  F0C7         	call	_lp_filter	;wreg free
 29186  01662C  0060  F004  F77F   	movff	btemp,_C+128	;volatile
 29187  016632  0060  F008  F780   	movff	btemp+1,_C+129	;volatile
 29188  016638  0060  F00C  F781   	movff	btemp+2,_C+130	;volatile
 29189  01663E  0060  F010  F782   	movff	btemp+3,_C+131	;volatile
 29190                           
 29191                           ;mbmc.c: 92:   if (C.p_inverter < 0.0)
 29192  016644  EE21  F377         	lfsr	2,_C+120	;volatile
 29193  016648  0E03               	movlw	3
 29194  01664A  AEDB               	btfss	plusw2,7,c
 29195  01664C  D010               	goto	l11808
 29196                           
 29197                           ;mbmc.c: 93:    C.p_inverter = 0.0001;
 29198  01664E  0E17               	movlw	23
 29199  016650  006F FFA0  F777    	movff	wreg,_C+120	;volatile
 29200  016656  0EB7               	movlw	183
 29201  016658  006F FFA0  F778    	movff	wreg,_C+121	;volatile
 29202  01665E  0ED1               	movlw	209
 29203  016660  006F FFA0  F779    	movff	wreg,_C+122	;volatile
 29204  016666  0E38               	movlw	56
 29205  016668  006F FFA0  F77A    	movff	wreg,_C+123	;volatile
 29206  01666E                     l11808:
 29207                           
 29208                           ;mbmc.c: 95:  start_bsoc();
 29209  01666E  EC55  F0E6         	call	_start_bsoc	;wreg free
 29210                           
 29211                           ; BSR set to: 57
 29212                           ;mbmc.c: 96:  C.update = 1;
 29213  016672  0E01               	movlw	1
 29214  016674  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 29215                           
 29216                           ; BSR set to: 57
 29217                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29218  01667A  0012               	return		;funcret
 29219  01667C                     __end_of_calc_model_data:
 29220                           	opt callstack 0
 29221                           
 29222 ;; *************** function _stop_bsoc *****************
 29223 ;; Defined at:
 29224 ;;		line 130 in file "bsoc.c"
 29225 ;; Parameters:    Size  Location     Type
 29226 ;;		None
 29227 ;; Auto vars:     Size  Location     Type
 29228 ;;		None
 29229 ;; Return value:  Size  Location     Type
 29230 ;;                  1  [STACK] void 
 29231 ;; Registers used:
 29232 ;;		None
 29233 ;; Tracked objects:
 29234 ;;		On entry : 0/1
 29235 ;;		On exit  : 3F/39
 29236 ;;		Unchanged: 0/0
 29237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29242 ;;Total ram usage:        0 bytes
 29243 ;; Hardware stack levels used:    1
 29244 ;; Hardware stack levels required when called:   15
 29245 ;; This function calls:
 29246 ;;		Nothing
 29247 ;; This function is called by:
 29248 ;;		_calc_model_data
 29249 ;; This function uses a reentrant model
 29250 ;;
 29251                           
 29252                           	psect	text116
 29253  01CFA4                     __ptext116:
 29254                           	opt callstack 0
 29255  01CFA4                     _stop_bsoc:
 29256                           	opt callstack 14
 29257                           
 29258                           ;bsoc.c: 133:  PIE6bits.TMR3IE = 0;
 29259                           
 29260                           ; BSR set to: 57
 29261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29262                           ;incstack = 0
 29263  01CFA4  0139               	movlb	57	; () banked
 29264  01CFA6  9D96               	bcf	150,6,b	;volatile
 29265                           
 29266                           ; BSR set to: 57
 29267                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 29268  01CFA8  0012               	return		;funcret
 29269  01CFAA                     __end_of_stop_bsoc:
 29270                           	opt callstack 0
 29271                           
 29272 ;; *************** function _start_bsoc *****************
 29273 ;; Defined at:
 29274 ;;		line 121 in file "bsoc.c"
 29275 ;; Parameters:    Size  Location     Type
 29276 ;;		None
 29277 ;; Auto vars:     Size  Location     Type
 29278 ;;		None
 29279 ;; Return value:  Size  Location     Type
 29280 ;;                  1  [STACK] void 
 29281 ;; Registers used:
 29282 ;;		wreg, status,2, status,0, btemp+11
 29283 ;; Tracked objects:
 29284 ;;		On entry : 0/1
 29285 ;;		On exit  : 3F/39
 29286 ;;		Unchanged: 0/0
 29287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29292 ;;Total ram usage:        0 bytes
 29293 ;; Hardware stack levels used:    1
 29294 ;; Hardware stack levels required when called:   15
 29295 ;; This function calls:
 29296 ;;		Nothing
 29297 ;; This function is called by:
 29298 ;;		_calc_model_data
 29299 ;; This function uses a reentrant model
 29300 ;;
 29301                           
 29302                           	psect	text117
 29303  01CCAA                     __ptext117:
 29304                           	opt callstack 0
 29305  01CCAA                     _start_bsoc:
 29306                           	opt callstack 14
 29307                           
 29308                           ;bsoc.c: 124:  PIE6bits.TMR3IE = 1;
 29309                           
 29310                           ; BSR set to: 57
 29311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29312                           ;incstack = 0
 29313  01CCAA  0139               	movlb	57	; () banked
 29314  01CCAC  8D96               	bsf	150,6,b	;volatile
 29315                           
 29316                           ; BSR set to: 57
 29317  01CCAE  A4BE               	btfss	190,2,c	;volatile
 29318  01CCB0  D002               	goto	u10150
 29319  01CCB2  0E01               	movlw	1
 29320  01CCB4  D001               	goto	u10156
 29321  01CCB6                     u10150:
 29322  01CCB6  0E00               	movlw	0
 29323  01CCB8                     u10156:
 29324  01CCB8  0AFF               	xorlw	255
 29325  01CCBA  6E0C               	movwf	(btemp+11)^0,c
 29326  01CCBC  460C               	rlncf	(btemp+11)^0,f,c
 29327  01CCBE  460C               	rlncf	(btemp+11)^0,f,c
 29328  01CCC0  50BE               	movf	190,w,c	;volatile
 29329  01CCC2  180C               	xorwf	(btemp+11)^0,w,c
 29330  01CCC4  0BFB               	andlw	-5
 29331  01CCC6  180C               	xorwf	(btemp+11)^0,w,c
 29332  01CCC8  6EBE               	movwf	190,c	;volatile
 29333                           
 29334                           ; BSR set to: 57
 29335                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 29336  01CCCA  0012               	return		;funcret
 29337  01CCCC                     __end_of_start_bsoc:
 29338                           	opt callstack 0
 29339                           
 29340 ;; *************** function _lp_filter *****************
 29341 ;; Defined at:
 29342 ;;		line 29 in file "mbmc.c"
 29343 ;; Parameters:    Size  Location     Type
 29344 ;;  new             4  [STACK] const float 
 29345 ;;  bn              1  [STACK] const unsigned char 
 29346 ;;  slow            1  [STACK] const char 
 29347 ;; Auto vars:     Size  Location     Type
 29348 ;;  lp_speed        4  [STACK] float 
 29349 ;; Return value:  Size  Location     Type
 29350 ;;                  4  [STACK] float 
 29351 ;; Registers used:
 29352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 29353 ;; Tracked objects:
 29354 ;;		On entry : 0/1
 29355 ;;		On exit  : 0/0
 29356 ;;		Unchanged: 0/0
 29357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29362 ;;Total ram usage:        0 bytes
 29363 ;; Hardware stack levels used:    1
 29364 ;; Hardware stack levels required when called:   17
 29365 ;; This function calls:
 29366 ;;		___fladd
 29367 ;;		___flmul
 29368 ;;		___flsub
 29369 ;; This function is called by:
 29370 ;;		_main
 29371 ;;		_convert_adc_data
 29372 ;;		_calc_model_data
 29373 ;; This function uses a reentrant model
 29374 ;;
 29375                           
 29376                           	psect	text118
 29377  018E5C                     __ptext118:
 29378                           	opt callstack 0
 29379  018E5C                     _lp_filter:
 29380                           	opt callstack 0
 29381                           
 29382                           ; BSR set to: 57
 29383                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29384  018E5C  52E6               	movf	postinc1,f,c
 29385  018E5E  52E6               	movf	postinc1,f,c
 29386  018E60  52E6               	movf	postinc1,f,c
 29387  018E62  52E6               	movf	postinc1,f,c
 29388                           
 29389                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 29390                           ;stkvar	_bn @ sp[(-4)+-5]
 29391                           
 29392                           ;incstack = 0
 29393  018E64  0EF7               	movlw	-9
 29394  018E66  006F FF8C  F001    	movff	plusw1,btemp
 29395  018E6C  0E14               	movlw	20
 29396  018E6E  6401               	cpfsgt	btemp^0,c
 29397  018E70  D011               	goto	l10966
 29398  018E72                     u9970:
 29399                           
 29400                           ;mbmc.c: 35:   return new;
 29401                           ;stkvar	_new @ sp[(-4)+-4]
 29402  018E72  0EF8               	movlw	-8
 29403  018E74  006F FF8C  F001    	movff	plusw1,btemp
 29404  018E7A  0EF9               	movlw	-7
 29405  018E7C  006F FF8C  F002    	movff	plusw1,btemp+1
 29406  018E82  0EFA               	movlw	-6
 29407  018E84  006F FF8C  F003    	movff	plusw1,btemp+2
 29408  018E8A  0EFB               	movlw	-5
 29409  018E8C  006F FF8C  F004    	movff	plusw1,btemp+3
 29410  018E92  D0BD               	goto	l1976
 29411  018E94                     l10966:
 29412                           
 29413                           ;mbmc.c: 37:  if (slow == (-1)) {
 29414                           ;stkvar	_slow @ sp[(-4)+-6]
 29415  018E94  0EF6               	movlw	-10
 29416  018E96  28E3               	incf	plusw1,w,c
 29417  018E98  A4D8               	btfss	status,2,c
 29418  018E9A  D012               	goto	l10974
 29419                           
 29420                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 29421                           ;stkvar	_bn @ sp[(-4)+-5]
 29422  018E9C  0EF7               	movlw	-9
 29423  018E9E  50E3               	movf	plusw1,w,c
 29424  018EA0  0D04               	mullw	4
 29425  018EA2  0E00               	movlw	low lp_filter@smooth
 29426  018EA4  24F3               	addwf	243,w,c
 29427  018EA6  6ED9               	movwf	fsr2l,c
 29428  018EA8  0E02               	movlw	high lp_filter@smooth
 29429  018EAA  20F4               	addwfc	prodh,w,c
 29430  018EAC  6EDA               	movwf	fsr2h,c
 29431  018EAE  0E00               	movlw	0
 29432  018EB0  6EDE               	movwf	postinc2,c
 29433  018EB2  0E00               	movlw	0
 29434  018EB4  6EDE               	movwf	postinc2,c
 29435  018EB6  0E00               	movlw	0
 29436  018EB8  6EDE               	movwf	postinc2,c
 29437  018EBA  0E00               	movlw	0
 29438  018EBC  6EDD               	movwf	postdec2,c
 29439  018EBE  D7D9               	goto	u9970
 29440  018EC0                     l10974:
 29441                           
 29442                           ;mbmc.c: 42:  if (slow) {
 29443                           ;stkvar	_slow @ sp[(-4)+-6]
 29444  018EC0  0EF6               	movlw	-10
 29445  018EC2  50E3               	movf	plusw1,w,c
 29446  018EC4  B4D8               	btfsc	status,2,c
 29447  018EC6  D006               	goto	l10978
 29448                           
 29449                           ;mbmc.c: 43:   lp_speed = 0.033;
 29450  018EC8  0E02               	movlw	2
 29451  018ECA  6E09               	movwf	(btemp+8)^0,c
 29452  018ECC  0E2B               	movlw	43
 29453  018ECE  6E0A               	movwf	(btemp+9)^0,c
 29454  018ED0  0E07               	movlw	7
 29455  018ED2  D005               	goto	L35
 29456  018ED4                     l10978:
 29457                           
 29458                           ;mbmc.c: 45:   lp_speed = 0.066;
 29459  018ED4  0E02               	movlw	2
 29460  018ED6  6E09               	movwf	(btemp+8)^0,c
 29461  018ED8  0E2B               	movlw	43
 29462  018EDA  6E0A               	movwf	(btemp+9)^0,c
 29463  018EDC  0E87               	movlw	135
 29464  018EDE                     L35:
 29465  018EDE  6E0B               	movwf	(btemp+10)^0,c
 29466  018EE0  0E3D               	movlw	61
 29467  018EE2  6E0C               	movwf	(btemp+11)^0,c
 29468                           
 29469                           ;stkvar	_lp_speed @ sp[(-4)+0]
 29470  018EE4  0EFC               	movlw	-4
 29471  018EE6  0060  F027  FFE3   	movff	btemp+8,plusw1
 29472  018EEC  0EFD               	movlw	-3
 29473  018EEE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29474  018EF4  0EFE               	movlw	-2
 29475  018EF6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29476  018EFC  0EFF               	movlw	-1
 29477  018EFE  0060  F033  FFE3   	movff	btemp+11,plusw1
 29478                           
 29479                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 29480                           ;stkvar	_bn @ sp[(-4)+-5]
 29481  018F04  0EF7               	movlw	-9
 29482  018F06  50E3               	movf	plusw1,w,c
 29483  018F08  0D04               	mullw	4
 29484  018F0A  0E00               	movlw	low lp_filter@smooth
 29485  018F0C  24F3               	addwf	243,w,c
 29486  018F0E  6ED9               	movwf	fsr2l,c
 29487  018F10  0E02               	movlw	high lp_filter@smooth
 29488  018F12  20F4               	addwfc	prodh,w,c
 29489  018F14  6EDA               	movwf	fsr2h,c
 29490  018F16  006F FF7B FFE6     	movff	postinc2,postinc1
 29491  018F1C  006F FF7B FFE6     	movff	postinc2,postinc1
 29492  018F22  006F FF7B FFE6     	movff	postinc2,postinc1
 29493  018F28  006F FF7B FFE6     	movff	postinc2,postinc1
 29494                           
 29495                           ;stkvar	_lp_speed @ sp[(-8)+0]
 29496  018F2E  0EF8               	movlw	-8
 29497  018F30  006F FF8F FFE6     	movff	plusw1,postinc1
 29498  018F36  006F FF8F FFE6     	movff	plusw1,postinc1
 29499  018F3C  006F FF8F FFE6     	movff	plusw1,postinc1
 29500  018F42  006F FF8F FFE6     	movff	plusw1,postinc1
 29501                           
 29502                           ;stkvar	_bn @ sp[(-12)+-5]
 29503  018F48  0EEF               	movlw	-17
 29504  018F4A  50E3               	movf	plusw1,w,c
 29505  018F4C  0D04               	mullw	4
 29506  018F4E  0E00               	movlw	low lp_filter@smooth
 29507  018F50  24F3               	addwf	243,w,c
 29508  018F52  6ED9               	movwf	fsr2l,c
 29509  018F54  0E02               	movlw	high lp_filter@smooth
 29510  018F56  20F4               	addwfc	prodh,w,c
 29511  018F58  6EDA               	movwf	fsr2h,c
 29512  018F5A  006F FF7B FFE6     	movff	postinc2,postinc1
 29513  018F60  006F FF7B FFE6     	movff	postinc2,postinc1
 29514  018F66  006F FF7B FFE6     	movff	postinc2,postinc1
 29515  018F6C  006F FF7B FFE6     	movff	postinc2,postinc1
 29516                           
 29517                           ;stkvar	_new @ sp[(-16)+-4]
 29518  018F72  0EEC               	movlw	-20
 29519  018F74  006F FF8F FFE6     	movff	plusw1,postinc1
 29520  018F7A  006F FF8F FFE6     	movff	plusw1,postinc1
 29521  018F80  006F FF8F FFE6     	movff	plusw1,postinc1
 29522  018F86  006F FF8F FFE6     	movff	plusw1,postinc1
 29523  018F8C  ECAA  F0E1         	call	___flsub	;wreg free
 29524  018F90  0060  F007  FFE6   	movff	btemp,postinc1
 29525  018F96  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29526  018F9C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29527  018FA2  0060  F013  FFE6   	movff	btemp+3,postinc1
 29528  018FA8  EC6E  F09F         	call	___flmul	;wreg free
 29529  018FAC  0060  F007  FFE6   	movff	btemp,postinc1
 29530  018FB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 29531  018FB8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 29532  018FBE  0060  F013  FFE6   	movff	btemp+3,postinc1
 29533  018FC4  EC83  F0A3         	call	___fladd	;wreg free
 29534                           
 29535                           ;stkvar	_bn @ sp[(-4)+-5]
 29536  018FC8  0EF7               	movlw	-9
 29537  018FCA  50E3               	movf	plusw1,w,c
 29538  018FCC  0D04               	mullw	4
 29539  018FCE  0E00               	movlw	low lp_filter@smooth
 29540  018FD0  24F3               	addwf	243,w,c
 29541  018FD2  6ED9               	movwf	fsr2l,c
 29542  018FD4  0E02               	movlw	high lp_filter@smooth
 29543  018FD6  20F4               	addwfc	prodh,w,c
 29544  018FD8  6EDA               	movwf	fsr2h,c
 29545  018FDA  0060  F007  FFDE   	movff	btemp,postinc2
 29546  018FE0  0060  F00B  FFDE   	movff	btemp+1,postinc2
 29547  018FE6  0060  F00F  FFDE   	movff	btemp+2,postinc2
 29548  018FEC  0060  F013  FFDD   	movff	btemp+3,postdec2
 29549  018FF2  52DD               	movf	postdec2,f,c
 29550  018FF4  52DD               	movf	postdec2,f,c
 29551  018FF6  006F FF78  F001    	movff	postinc2,btemp
 29552  018FFC  006F FF78  F002    	movff	postinc2,btemp+1
 29553  019002  006F FF78  F003    	movff	postinc2,btemp+2
 29554  019008  006F FF78  F004    	movff	postinc2,btemp+3
 29555  01900E                     l1976:
 29556                           
 29557                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 29558  01900E  0EF6               	movlw	246
 29559  019010  26E1               	addwf	fsr1l,f,c
 29560  019012  0EFF               	movlw	255
 29561  019014  22E2               	addwfc	fsr1h,f,c
 29562  019016  0012               	return		;funcret
 29563  019018                     __end_of_lp_filter:
 29564                           	opt callstack 0
 29565                           
 29566 ;; *************** function ___flsub *****************
 29567 ;; Defined at:
 29568 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 29569 ;; Parameters:    Size  Location     Type
 29570 ;;  b               4  [STACK] float 
 29571 ;;  a               4  [STACK] float 
 29572 ;; Auto vars:     Size  Location     Type
 29573 ;;		None
 29574 ;; Return value:  Size  Location     Type
 29575 ;;                  4  [STACK] float 
 29576 ;; Registers used:
 29577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 29578 ;; Tracked objects:
 29579 ;;		On entry : 0/0
 29580 ;;		On exit  : 0/0
 29581 ;;		Unchanged: 0/0
 29582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29587 ;;Total ram usage:        0 bytes
 29588 ;; Hardware stack levels used:    1
 29589 ;; Hardware stack levels required when called:   16
 29590 ;; This function calls:
 29591 ;;		___fladd
 29592 ;; This function is called by:
 29593 ;;		_conv_raw_result
 29594 ;;		_lp_filter
 29595 ;;		_calc_model_data
 29596 ;;		_calc_ror_data
 29597 ;;		_esr_check
 29598 ;;		_efgtoa
 29599 ;; This function uses a reentrant model
 29600 ;;
 29601                           
 29602                           	psect	text119
 29603  01C354                     __ptext119:
 29604                           	opt callstack 0
 29605  01C354                     ___flsub:
 29606                           	opt callstack 0
 29607                           
 29608                           ;stkvar	_a @ sp[(0)+-8]
 29609                           
 29610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29611                           ;incstack = 0
 29612 ;; hardware stack exceeded
 29613  01C354  0EFB               	movlw	-5
 29614  01C356  7EE3               	btg	plusw1,7,c
 29615                           
 29616                           ;stkvar	_a @ sp[(0)+-8]
 29617  01C358  0EF8               	movlw	-8
 29618  01C35A  006F FF8F FFE6     	movff	plusw1,postinc1
 29619  01C360  006F FF8F FFE6     	movff	plusw1,postinc1
 29620  01C366  006F FF8F FFE6     	movff	plusw1,postinc1
 29621  01C36C  006F FF8F FFE6     	movff	plusw1,postinc1
 29622                           
 29623                           ;stkvar	_b @ sp[(-4)+-4]
 29624  01C372  0EF8               	movlw	-8
 29625  01C374  006F FF8F FFE6     	movff	plusw1,postinc1
 29626  01C37A  006F FF8F FFE6     	movff	plusw1,postinc1
 29627  01C380  006F FF8F FFE6     	movff	plusw1,postinc1
 29628  01C386  006F FF8F FFE6     	movff	plusw1,postinc1
 29629  01C38C  EC83  F0A3         	call	___fladd	;wreg free
 29630                           
 29631                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 29632  01C390  0EF8               	movlw	248
 29633  01C392  26E1               	addwf	fsr1l,f,c
 29634  01C394  0EFF               	movlw	255
 29635  01C396  22E2               	addwfc	fsr1h,f,c
 29636  01C398  0012               	return		;funcret
 29637  01C39A                     __end_of___flsub:
 29638                           	opt callstack 0
 29639                           
 29640 ;; *************** function ___fladd *****************
 29641 ;; Defined at:
 29642 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 29643 ;; Parameters:    Size  Location     Type
 29644 ;;  b               4  [STACK] float 
 29645 ;;  a               4  [STACK] float 
 29646 ;; Auto vars:     Size  Location     Type
 29647 ;;  grs             1  [STACK] unsigned char 
 29648 ;;  bexp            1  [STACK] unsigned char 
 29649 ;;  aexp            1  [STACK] unsigned char 
 29650 ;;  signs           1  [STACK] unsigned char 
 29651 ;; Return value:  Size  Location     Type
 29652 ;;                  4  [STACK] unsigned char 
 29653 ;; Registers used:
 29654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 29655 ;; Tracked objects:
 29656 ;;		On entry : 0/0
 29657 ;;		On exit  : 0/0
 29658 ;;		Unchanged: 0/0
 29659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29664 ;;Total ram usage:        0 bytes
 29665 ;; Hardware stack levels used:    1
 29666 ;; Hardware stack levels required when called:   15
 29667 ;; This function calls:
 29668 ;;		Nothing
 29669 ;; This function is called by:
 29670 ;;		_main
 29671 ;;		_lp_filter
 29672 ;;		_calc_model_data
 29673 ;;		_efgtoa
 29674 ;;		___asfladd
 29675 ;;		___flsub
 29676 ;; This function uses a reentrant model
 29677 ;;
 29678                           
 29679                           	psect	text120
 29680  014706                     __ptext120:
 29681                           	opt callstack 0
 29682  014706                     ___fladd:
 29683                           	opt callstack 0
 29684                           
 29685                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29686  014706  52E6               	movf	postinc1,f,c
 29687  014708  52E6               	movf	postinc1,f,c
 29688  01470A  52E6               	movf	postinc1,f,c
 29689  01470C  52E6               	movf	postinc1,f,c
 29690                           
 29691                           ;stkvar	_b @ sp[(-4)+-4]
 29692                           
 29693                           ;incstack = 0
 29694 ;; hardware stack exceeded
 29695  01470E  0EFB               	movlw	251
 29696  014710  24E1               	addwf	fsr1l,w,c
 29697  014712  6ED9               	movwf	fsr2l,c
 29698  014714  0EFF               	movlw	255
 29699  014716  20E2               	addwfc	fsr1h,w,c
 29700  014718  6EDA               	movwf	fsr2h,c
 29701  01471A  50DF               	movf	indf2,w,c
 29702  01471C  6E0C               	movwf	(btemp+11)^0,c
 29703  01471E  0E80               	movlw	128
 29704  014720  160C               	andwf	(btemp+11)^0,f,c
 29705                           
 29706                           ;stkvar	_signs @ sp[(-4)+3]
 29707  014722  0EFF               	movlw	-1
 29708  014724  0060  F033  FFE3   	movff	btemp+11,plusw1
 29709                           
 29710                           ;stkvar	_b @ sp[(-4)+-4]
 29711  01472A  0EFB               	movlw	251
 29712  01472C  24E1               	addwf	fsr1l,w,c
 29713  01472E  6ED9               	movwf	fsr2l,c
 29714  014730  0EFF               	movlw	255
 29715  014732  20E2               	addwfc	fsr1h,w,c
 29716  014734  6EDA               	movwf	fsr2h,c
 29717  014736  50DF               	movf	indf2,w,c
 29718  014738  6E0C               	movwf	(btemp+11)^0,c
 29719  01473A  90D8               	bcf	status,0,c
 29720  01473C  340C               	rlcf	(btemp+11)^0,w,c
 29721  01473E  6E0B               	movwf	(btemp+10)^0,c
 29722                           
 29723                           ;stkvar	_bexp @ sp[(-4)+1]
 29724  014740  0EFD               	movlw	-3
 29725  014742  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29726                           
 29727                           ;stkvar	_b @ sp[(-4)+-4]
 29728  014748  0EFA               	movlw	250
 29729  01474A  24E1               	addwf	fsr1l,w,c
 29730  01474C  6ED9               	movwf	fsr2l,c
 29731  01474E  0EFF               	movlw	255
 29732  014750  20E2               	addwfc	fsr1h,w,c
 29733  014752  6EDA               	movwf	fsr2h,c
 29734  014754  AEDF               	btfss	indf2,7,c
 29735  014756  D002               	goto	l8202
 29736                           
 29737                           ;stkvar	_bexp @ sp[(-4)+1]
 29738  014758  0EFD               	movlw	-3
 29739  01475A  80E3               	bsf	plusw1,0,c
 29740  01475C                     l8202:
 29741                           
 29742                           ;stkvar	_bexp @ sp[(-4)+1]
 29743  01475C  0EFD               	movlw	-3
 29744  01475E  50E3               	movf	plusw1,w,c
 29745  014760  B4D8               	btfsc	status,2,c
 29746  014762  D027               	goto	l8212
 29747                           
 29748                           ;stkvar	_bexp @ sp[(-4)+1]
 29749  014764  0EFD               	movlw	-3
 29750  014766  28E3               	incf	plusw1,w,c
 29751  014768  A4D8               	btfss	status,2,c
 29752  01476A  D018               	goto	l8208
 29753  01476C  0E00               	movlw	0
 29754  01476E  6E09               	movwf	(btemp+8)^0,c
 29755  014770  0E00               	movlw	0
 29756  014772  6E0A               	movwf	(btemp+9)^0,c
 29757  014774  0E00               	movlw	0
 29758  014776  6E0B               	movwf	(btemp+10)^0,c
 29759  014778  0E00               	movlw	0
 29760  01477A  6E0C               	movwf	(btemp+11)^0,c
 29761                           
 29762                           ;stkvar	_b @ sp[(-4)+-4]
 29763  01477C  0EF8               	movlw	-8
 29764  01477E  0060  F027  FFE3   	movff	btemp+8,plusw1
 29765  014784  0EF9               	movlw	-7
 29766  014786  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29767  01478C  0EFA               	movlw	-6
 29768  01478E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29769  014794  0EFB               	movlw	-5
 29770  014796  0060  F033  FFE3   	movff	btemp+11,plusw1
 29771  01479C                     l8208:
 29772                           
 29773                           ;stkvar	_b @ sp[(-4)+-4]
 29774  01479C  0EFA               	movlw	-6
 29775  01479E  8EE3               	bsf	plusw1,7,c
 29776                           
 29777                           ;stkvar	_b @ sp[(-4)+-4]
 29778  0147A0  0EFB               	movlw	251
 29779  0147A2  24E1               	addwf	fsr1l,w,c
 29780  0147A4  6ED9               	movwf	fsr2l,c
 29781  0147A6  0EFF               	movlw	255
 29782  0147A8  20E2               	addwfc	fsr1h,w,c
 29783  0147AA  6EDA               	movwf	fsr2h,c
 29784  0147AC  0E00               	movlw	0
 29785  0147AE  6EDF               	movwf	indf2,c
 29786  0147B0  D018               	goto	l8214
 29787  0147B2                     l8212:
 29788  0147B2  0E00               	movlw	0
 29789  0147B4  6E09               	movwf	(btemp+8)^0,c
 29790  0147B6  0E00               	movlw	0
 29791  0147B8  6E0A               	movwf	(btemp+9)^0,c
 29792  0147BA  0E00               	movlw	0
 29793  0147BC  6E0B               	movwf	(btemp+10)^0,c
 29794  0147BE  0E00               	movlw	0
 29795  0147C0  6E0C               	movwf	(btemp+11)^0,c
 29796                           
 29797                           ;stkvar	_b @ sp[(-4)+-4]
 29798  0147C2  0EF8               	movlw	-8
 29799  0147C4  0060  F027  FFE3   	movff	btemp+8,plusw1
 29800  0147CA  0EF9               	movlw	-7
 29801  0147CC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29802  0147D2  0EFA               	movlw	-6
 29803  0147D4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29804  0147DA  0EFB               	movlw	-5
 29805  0147DC  0060  F033  FFE3   	movff	btemp+11,plusw1
 29806  0147E2                     l8214:
 29807                           
 29808                           ;stkvar	_a @ sp[(-4)+-8]
 29809  0147E2  0EF7               	movlw	247
 29810  0147E4  24E1               	addwf	fsr1l,w,c
 29811  0147E6  6ED9               	movwf	fsr2l,c
 29812  0147E8  0EFF               	movlw	255
 29813  0147EA  20E2               	addwfc	fsr1h,w,c
 29814  0147EC  6EDA               	movwf	fsr2h,c
 29815  0147EE  50DF               	movf	indf2,w,c
 29816  0147F0  6E0C               	movwf	(btemp+11)^0,c
 29817  0147F2  0E80               	movlw	128
 29818  0147F4  160C               	andwf	(btemp+11)^0,f,c
 29819                           
 29820                           ;stkvar	_aexp @ sp[(-4)+2]
 29821  0147F6  0EFE               	movlw	-2
 29822  0147F8  0060  F033  FFE3   	movff	btemp+11,plusw1
 29823                           
 29824                           ;stkvar	_signs @ sp[(-4)+3]
 29825                           ;stkvar	_aexp @ sp[(-4)+2]
 29826  0147FE  50E1               	movf	fsr1l,w,c
 29827  014800  0FFE               	addlw	-2
 29828  014802  6ED9               	movwf	fsr2l,c
 29829  014804  50E2               	movf	fsr1h,w,c
 29830  014806  6EDA               	movwf	fsr2h,c
 29831  014808  0EFF               	movlw	255
 29832  01480A  22DA               	addwfc	fsr2h,f,c
 29833  01480C  0EFF               	movlw	-1
 29834  01480E  50E3               	movf	plusw1,w,c
 29835  014810  18DE               	xorwf	postinc2,w,c
 29836  014812  B4D8               	btfsc	status,2,c
 29837  014814  D002               	goto	l8220
 29838                           
 29839                           ;stkvar	_signs @ sp[(-4)+3]
 29840  014816  0EFF               	movlw	-1
 29841  014818  8CE3               	bsf	plusw1,6,c
 29842  01481A                     l8220:
 29843                           
 29844                           ;stkvar	_a @ sp[(-4)+-8]
 29845  01481A  0EF7               	movlw	247
 29846  01481C  24E1               	addwf	fsr1l,w,c
 29847  01481E  6ED9               	movwf	fsr2l,c
 29848  014820  0EFF               	movlw	255
 29849  014822  20E2               	addwfc	fsr1h,w,c
 29850  014824  6EDA               	movwf	fsr2h,c
 29851  014826  50DF               	movf	indf2,w,c
 29852  014828  6E0C               	movwf	(btemp+11)^0,c
 29853  01482A  90D8               	bcf	status,0,c
 29854  01482C  340C               	rlcf	(btemp+11)^0,w,c
 29855  01482E  6E0B               	movwf	(btemp+10)^0,c
 29856                           
 29857                           ;stkvar	_aexp @ sp[(-4)+2]
 29858  014830  0EFE               	movlw	-2
 29859  014832  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29860                           
 29861                           ;stkvar	_a @ sp[(-4)+-8]
 29862  014838  0EF6               	movlw	246
 29863  01483A  24E1               	addwf	fsr1l,w,c
 29864  01483C  6ED9               	movwf	fsr2l,c
 29865  01483E  0EFF               	movlw	255
 29866  014840  20E2               	addwfc	fsr1h,w,c
 29867  014842  6EDA               	movwf	fsr2h,c
 29868  014844  AEDF               	btfss	indf2,7,c
 29869  014846  D002               	goto	l8226
 29870                           
 29871                           ;stkvar	_aexp @ sp[(-4)+2]
 29872  014848  0EFE               	movlw	-2
 29873  01484A  80E3               	bsf	plusw1,0,c
 29874  01484C                     l8226:
 29875                           
 29876                           ;stkvar	_aexp @ sp[(-4)+2]
 29877  01484C  0EFE               	movlw	-2
 29878  01484E  50E3               	movf	plusw1,w,c
 29879  014850  B4D8               	btfsc	status,2,c
 29880  014852  D027               	goto	l8236
 29881                           
 29882                           ;stkvar	_aexp @ sp[(-4)+2]
 29883  014854  0EFE               	movlw	-2
 29884  014856  28E3               	incf	plusw1,w,c
 29885  014858  A4D8               	btfss	status,2,c
 29886  01485A  D018               	goto	l8232
 29887  01485C  0E00               	movlw	0
 29888  01485E  6E09               	movwf	(btemp+8)^0,c
 29889  014860  0E00               	movlw	0
 29890  014862  6E0A               	movwf	(btemp+9)^0,c
 29891  014864  0E00               	movlw	0
 29892  014866  6E0B               	movwf	(btemp+10)^0,c
 29893  014868  0E00               	movlw	0
 29894  01486A  6E0C               	movwf	(btemp+11)^0,c
 29895                           
 29896                           ;stkvar	_a @ sp[(-4)+-8]
 29897  01486C  0EF4               	movlw	-12
 29898  01486E  0060  F027  FFE3   	movff	btemp+8,plusw1
 29899  014874  0EF5               	movlw	-11
 29900  014876  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29901  01487C  0EF6               	movlw	-10
 29902  01487E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29903  014884  0EF7               	movlw	-9
 29904  014886  0060  F033  FFE3   	movff	btemp+11,plusw1
 29905  01488C                     l8232:
 29906                           
 29907                           ;stkvar	_a @ sp[(-4)+-8]
 29908  01488C  0EF6               	movlw	-10
 29909  01488E  8EE3               	bsf	plusw1,7,c
 29910                           
 29911                           ;stkvar	_a @ sp[(-4)+-8]
 29912  014890  0EF7               	movlw	247
 29913  014892  24E1               	addwf	fsr1l,w,c
 29914  014894  6ED9               	movwf	fsr2l,c
 29915  014896  0EFF               	movlw	255
 29916  014898  20E2               	addwfc	fsr1h,w,c
 29917  01489A  6EDA               	movwf	fsr2h,c
 29918  01489C  0E00               	movlw	0
 29919  01489E  6EDF               	movwf	indf2,c
 29920  0148A0  D018               	goto	l8238
 29921  0148A2                     l8236:
 29922  0148A2  0E00               	movlw	0
 29923  0148A4  6E09               	movwf	(btemp+8)^0,c
 29924  0148A6  0E00               	movlw	0
 29925  0148A8  6E0A               	movwf	(btemp+9)^0,c
 29926  0148AA  0E00               	movlw	0
 29927  0148AC  6E0B               	movwf	(btemp+10)^0,c
 29928  0148AE  0E00               	movlw	0
 29929  0148B0  6E0C               	movwf	(btemp+11)^0,c
 29930                           
 29931                           ;stkvar	_a @ sp[(-4)+-8]
 29932  0148B2  0EF4               	movlw	-12
 29933  0148B4  0060  F027  FFE3   	movff	btemp+8,plusw1
 29934  0148BA  0EF5               	movlw	-11
 29935  0148BC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 29936  0148C2  0EF6               	movlw	-10
 29937  0148C4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 29938  0148CA  0EF7               	movlw	-9
 29939  0148CC  0060  F033  FFE3   	movff	btemp+11,plusw1
 29940  0148D2                     l8238:
 29941                           
 29942                           ;stkvar	_bexp @ sp[(-4)+1]
 29943                           ;stkvar	_aexp @ sp[(-4)+2]
 29944  0148D2  50E1               	movf	fsr1l,w,c
 29945  0148D4  0FFE               	addlw	-2
 29946  0148D6  6ED9               	movwf	fsr2l,c
 29947  0148D8  50E2               	movf	fsr1h,w,c
 29948  0148DA  6EDA               	movwf	fsr2h,c
 29949  0148DC  0EFF               	movlw	255
 29950  0148DE  22DA               	addwfc	fsr2h,f,c
 29951  0148E0  0EFD               	movlw	-3
 29952  0148E2  50E3               	movf	plusw1,w,c
 29953  0148E4  5CDE               	subwf	postinc2,w,c
 29954  0148E6  B0D8               	btfsc	status,0,c
 29955  0148E8  D0A4               	goto	l8274
 29956                           
 29957                           ;stkvar	_signs @ sp[(-4)+3]
 29958  0148EA  0EFF               	movlw	-1
 29959  0148EC  ACE3               	btfss	plusw1,6,c
 29960  0148EE  D002               	goto	l8244
 29961                           
 29962                           ;stkvar	_signs @ sp[(-4)+3]
 29963  0148F0  0EFF               	movlw	-1
 29964  0148F2  7EE3               	btg	plusw1,7,c
 29965  0148F4                     l8244:
 29966                           
 29967                           ;stkvar	_bexp @ sp[(-4)+1]
 29968                           ;stkvar	_grs @ sp[(-4)+0]
 29969  0148F4  0EFD               	movlw	-3
 29970  0148F6  006F FF8C  F001    	movff	plusw1,btemp
 29971  0148FC  0EFC               	movlw	-4
 29972  0148FE  0060  F007  FFE3   	movff	btemp,plusw1
 29973                           
 29974                           ;stkvar	_aexp @ sp[(-4)+2]
 29975                           ;stkvar	_bexp @ sp[(-4)+1]
 29976  014904  0EFE               	movlw	-2
 29977  014906  006F FF8C  F001    	movff	plusw1,btemp
 29978  01490C  0EFD               	movlw	-3
 29979  01490E  0060  F007  FFE3   	movff	btemp,plusw1
 29980                           
 29981                           ;stkvar	_grs @ sp[(-4)+0]
 29982                           ;stkvar	_aexp @ sp[(-4)+2]
 29983  014914  0EFC               	movlw	-4
 29984  014916  006F FF8C  F001    	movff	plusw1,btemp
 29985  01491C  0EFE               	movlw	-2
 29986  01491E  0060  F007  FFE3   	movff	btemp,plusw1
 29987                           
 29988                           ;stkvar	_b @ sp[(-4)+-4]
 29989                           ;stkvar	_grs @ sp[(-4)+0]
 29990  014924  0EF8               	movlw	-8
 29991  014926  006F FF8C  F001    	movff	plusw1,btemp
 29992  01492C  0EFC               	movlw	-4
 29993  01492E  0060  F007  FFE3   	movff	btemp,plusw1
 29994                           
 29995                           ;stkvar	_a @ sp[(-4)+-8]
 29996                           ;stkvar	_b @ sp[(-4)+-4]
 29997  014934  0EF4               	movlw	-12
 29998  014936  006F FF8C  F001    	movff	plusw1,btemp
 29999  01493C  0EF8               	movlw	-8
 30000  01493E  0060  F007  FFE3   	movff	btemp,plusw1
 30001                           
 30002                           ;stkvar	_grs @ sp[(-4)+0]
 30003                           ;stkvar	_a @ sp[(-4)+-8]
 30004  014944  0EFC               	movlw	-4
 30005  014946  006F FF8C  F001    	movff	plusw1,btemp
 30006  01494C  0EF4               	movlw	-12
 30007  01494E  0060  F007  FFE3   	movff	btemp,plusw1
 30008                           
 30009                           ;stkvar	_b @ sp[(-4)+-4]
 30010  014954  0EF9               	movlw	249
 30011  014956  24E1               	addwf	fsr1l,w,c
 30012  014958  6ED9               	movwf	fsr2l,c
 30013  01495A  0EFF               	movlw	255
 30014  01495C  20E2               	addwfc	fsr1h,w,c
 30015  01495E  6EDA               	movwf	fsr2h,c
 30016  014960  50DF               	movf	indf2,w,c
 30017  014962  6E0C               	movwf	(btemp+11)^0,c
 30018                           
 30019                           ;stkvar	_grs @ sp[(-4)+0]
 30020  014964  0EFC               	movlw	-4
 30021  014966  0060  F033  FFE3   	movff	btemp+11,plusw1
 30022                           
 30023                           ;stkvar	_a @ sp[(-4)+-8]
 30024  01496C  0EF5               	movlw	245
 30025  01496E  24E1               	addwf	fsr1l,w,c
 30026  014970  6ED9               	movwf	fsr2l,c
 30027  014972  0EFF               	movlw	255
 30028  014974  20E2               	addwfc	fsr1h,w,c
 30029  014976  6EDA               	movwf	fsr2h,c
 30030                           
 30031                           ;stkvar	_b @ sp[(-4)+-4]
 30032  014978  0EF9               	movlw	249
 30033  01497A  24E1               	addwf	fsr1l,w,c
 30034  01497C  6EE9               	movwf	fsr0l,c
 30035  01497E  0EFF               	movlw	255
 30036  014980  20E2               	addwfc	fsr1h,w,c
 30037  014982  6EEA               	movwf	fsr0h,c
 30038  014984  006F FF7F FFEF     	movff	indf2,indf0
 30039                           
 30040                           ;stkvar	_grs @ sp[(-4)+0]
 30041                           ;stkvar	_a @ sp[(-4)+-8]
 30042  01498A  0EF5               	movlw	245
 30043  01498C  24E1               	addwf	fsr1l,w,c
 30044  01498E  6ED9               	movwf	fsr2l,c
 30045  014990  0EFF               	movlw	255
 30046  014992  20E2               	addwfc	fsr1h,w,c
 30047  014994  6EDA               	movwf	fsr2h,c
 30048  014996  0EFC               	movlw	-4
 30049  014998  006F FF8F FFDF     	movff	plusw1,indf2
 30050                           
 30051                           ;stkvar	_b @ sp[(-4)+-4]
 30052  01499E  0EFA               	movlw	250
 30053  0149A0  24E1               	addwf	fsr1l,w,c
 30054  0149A2  6ED9               	movwf	fsr2l,c
 30055  0149A4  0EFF               	movlw	255
 30056  0149A6  20E2               	addwfc	fsr1h,w,c
 30057  0149A8  6EDA               	movwf	fsr2h,c
 30058  0149AA  50DF               	movf	indf2,w,c
 30059  0149AC  6E0C               	movwf	(btemp+11)^0,c
 30060                           
 30061                           ;stkvar	_grs @ sp[(-4)+0]
 30062  0149AE  0EFC               	movlw	-4
 30063  0149B0  0060  F033  FFE3   	movff	btemp+11,plusw1
 30064                           
 30065                           ;stkvar	_a @ sp[(-4)+-8]
 30066  0149B6  0EF6               	movlw	246
 30067  0149B8  24E1               	addwf	fsr1l,w,c
 30068  0149BA  6ED9               	movwf	fsr2l,c
 30069  0149BC  0EFF               	movlw	255
 30070  0149BE  20E2               	addwfc	fsr1h,w,c
 30071  0149C0  6EDA               	movwf	fsr2h,c
 30072                           
 30073                           ;stkvar	_b @ sp[(-4)+-4]
 30074  0149C2  0EFA               	movlw	250
 30075  0149C4  24E1               	addwf	fsr1l,w,c
 30076  0149C6  6EE9               	movwf	fsr0l,c
 30077  0149C8  0EFF               	movlw	255
 30078  0149CA  20E2               	addwfc	fsr1h,w,c
 30079  0149CC  6EEA               	movwf	fsr0h,c
 30080  0149CE  006F FF7F FFEF     	movff	indf2,indf0
 30081                           
 30082                           ;stkvar	_grs @ sp[(-4)+0]
 30083                           ;stkvar	_a @ sp[(-4)+-8]
 30084  0149D4  0EF6               	movlw	246
 30085  0149D6  24E1               	addwf	fsr1l,w,c
 30086  0149D8  6ED9               	movwf	fsr2l,c
 30087  0149DA  0EFF               	movlw	255
 30088  0149DC  20E2               	addwfc	fsr1h,w,c
 30089  0149DE  6EDA               	movwf	fsr2h,c
 30090  0149E0  0EFC               	movlw	-4
 30091  0149E2  006F FF8F FFDF     	movff	plusw1,indf2
 30092                           
 30093                           ;stkvar	_b @ sp[(-4)+-4]
 30094  0149E8  0EFB               	movlw	251
 30095  0149EA  24E1               	addwf	fsr1l,w,c
 30096  0149EC  6ED9               	movwf	fsr2l,c
 30097  0149EE  0EFF               	movlw	255
 30098  0149F0  20E2               	addwfc	fsr1h,w,c
 30099  0149F2  6EDA               	movwf	fsr2h,c
 30100  0149F4  50DF               	movf	indf2,w,c
 30101  0149F6  6E0C               	movwf	(btemp+11)^0,c
 30102                           
 30103                           ;stkvar	_grs @ sp[(-4)+0]
 30104  0149F8  0EFC               	movlw	-4
 30105  0149FA  0060  F033  FFE3   	movff	btemp+11,plusw1
 30106                           
 30107                           ;stkvar	_a @ sp[(-4)+-8]
 30108  014A00  0EF7               	movlw	247
 30109  014A02  24E1               	addwf	fsr1l,w,c
 30110  014A04  6ED9               	movwf	fsr2l,c
 30111  014A06  0EFF               	movlw	255
 30112  014A08  20E2               	addwfc	fsr1h,w,c
 30113  014A0A  6EDA               	movwf	fsr2h,c
 30114                           
 30115                           ;stkvar	_b @ sp[(-4)+-4]
 30116  014A0C  0EFB               	movlw	251
 30117  014A0E  24E1               	addwf	fsr1l,w,c
 30118  014A10  6EE9               	movwf	fsr0l,c
 30119  014A12  0EFF               	movlw	255
 30120  014A14  20E2               	addwfc	fsr1h,w,c
 30121  014A16  6EEA               	movwf	fsr0h,c
 30122  014A18  006F FF7F FFEF     	movff	indf2,indf0
 30123                           
 30124                           ;stkvar	_grs @ sp[(-4)+0]
 30125                           ;stkvar	_a @ sp[(-4)+-8]
 30126  014A1E  0EF7               	movlw	247
 30127  014A20  24E1               	addwf	fsr1l,w,c
 30128  014A22  6ED9               	movwf	fsr2l,c
 30129  014A24  0EFF               	movlw	255
 30130  014A26  20E2               	addwfc	fsr1h,w,c
 30131  014A28  6EDA               	movwf	fsr2h,c
 30132  014A2A  0EFC               	movlw	-4
 30133  014A2C  006F FF8F FFDF     	movff	plusw1,indf2
 30134  014A32                     l8274:
 30135                           
 30136                           ;stkvar	_grs @ sp[(-4)+0]
 30137  014A32  0EFC               	movlw	-4
 30138  014A34  6AE3               	clrf	plusw1,c
 30139                           
 30140                           ;stkvar	_aexp @ sp[(-4)+2]
 30141  014A36  0EFE               	movlw	-2
 30142  014A38  50E3               	movf	plusw1,w,c
 30143  014A3A  6E0B               	movwf	(btemp+10)^0,c
 30144  014A3C  6A0C               	clrf	(btemp+11)^0,c
 30145                           
 30146                           ;stkvar	_bexp @ sp[(-4)+1]
 30147  014A3E  0EFD               	movlw	-3
 30148  014A40  50E3               	movf	plusw1,w,c
 30149  014A42  5E0B               	subwf	(btemp+10)^0,f,c
 30150  014A44  0E00               	movlw	0
 30151  014A46  5A0C               	subwfb	(btemp+11)^0,f,c
 30152  014A48  BE0C               	btfsc	(btemp+11)^0,7,c
 30153  014A4A  D062               	goto	l8298
 30154  014A4C  500C               	movf	(btemp+11)^0,w,c
 30155  014A4E  E104               	bnz	u5890
 30156  014A50  0E1A               	movlw	26
 30157  014A52  5C0B               	subwf	(btemp+10)^0,w,c
 30158  014A54  A0D8               	btfss	status,0,c
 30159  014A56  D05C               	goto	l8298
 30160  014A58                     u5890:
 30161                           
 30162                           ;stkvar	_b @ sp[(-4)+-4]
 30163  014A58  0EF8               	movlw	-8
 30164  014A5A  50E3               	movf	plusw1,w,c
 30165  014A5C  E10A               	bnz	u5901
 30166  014A5E  0EF9               	movlw	-7
 30167  014A60  50E3               	movf	plusw1,w,c
 30168  014A62  E107               	bnz	u5901
 30169  014A64  0EFA               	movlw	-6
 30170  014A66  50E3               	movf	plusw1,w,c
 30171  014A68  E104               	bnz	u5901
 30172  014A6A  0EFB               	movlw	-5
 30173  014A6C  50E3               	movf	plusw1,w,c
 30174  014A6E  B4D8               	btfsc	status,2,c
 30175  014A70  D003               	goto	u5900
 30176  014A72                     u5901:
 30177  014A72  6A0C               	clrf	(btemp+11)^0,c
 30178  014A74  2A0C               	incf	(btemp+11)^0,f,c
 30179  014A76  D001               	goto	u5918
 30180  014A78                     u5900:
 30181  014A78  6A0C               	clrf	(btemp+11)^0,c
 30182  014A7A                     u5918:
 30183                           
 30184                           ;stkvar	_grs @ sp[(-4)+0]
 30185  014A7A  0EFC               	movlw	-4
 30186  014A7C  0060  F033  FFE3   	movff	btemp+11,plusw1
 30187                           
 30188                           ;stkvar	_b @ sp[(-4)+-4]
 30189  014A82  0EF8               	movlw	-8
 30190  014A84  6AE3               	clrf	plusw1,c
 30191  014A86  0EF9               	movlw	-7
 30192  014A88  6AE3               	clrf	plusw1,c
 30193  014A8A  0EFA               	movlw	-6
 30194  014A8C  6AE3               	clrf	plusw1,c
 30195  014A8E  0EFB               	movlw	-5
 30196  014A90  6AE3               	clrf	plusw1,c
 30197                           
 30198                           ;stkvar	_aexp @ sp[(-4)+2]
 30199                           ;stkvar	_bexp @ sp[(-4)+1]
 30200  014A92  0EFE               	movlw	-2
 30201  014A94  006F FF8C  F001    	movff	plusw1,btemp
 30202  014A9A  0EFD               	movlw	-3
 30203  014A9C  0060  F007  FFE3   	movff	btemp,plusw1
 30204  014AA2  D042               	goto	u5950
 30205  014AA4                     l8284:
 30206                           
 30207                           ;stkvar	_grs @ sp[(-4)+0]
 30208  014AA4  0EFC               	movlw	-4
 30209  014AA6  A0E3               	btfss	plusw1,0,c
 30210  014AA8  D00D               	goto	l8288
 30211                           
 30212                           ;stkvar	_grs @ sp[(-4)+0]
 30213  014AAA  0EFC               	movlw	-4
 30214  014AAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 30215  014AB2  90D8               	bcf	status,0,c
 30216  014AB4  320C               	rrcf	(btemp+11)^0,f,c
 30217  014AB6  0E01               	movlw	1
 30218  014AB8  120C               	iorwf	(btemp+11)^0,f,c
 30219                           
 30220                           ;stkvar	_grs @ sp[(-4)+0]
 30221  014ABA  0EFC               	movlw	-4
 30222  014ABC  0060  F033  FFE3   	movff	btemp+11,plusw1
 30223  014AC2  D009               	goto	l8290
 30224  014AC4                     l8288:
 30225                           
 30226                           ;stkvar	_grs @ sp[(-4)+0]
 30227  014AC4  50E1               	movf	fsr1l,w,c
 30228  014AC6  0FFC               	addlw	-4
 30229  014AC8  6ED9               	movwf	fsr2l,c
 30230  014ACA  50E2               	movf	fsr1h,w,c
 30231  014ACC  6EDA               	movwf	fsr2h,c
 30232  014ACE  0EFF               	movlw	255
 30233  014AD0  22DA               	addwfc	fsr2h,f,c
 30234  014AD2  90D8               	bcf	status,0,c
 30235  014AD4  32DF               	rrcf	indf2,f,c
 30236  014AD6                     l8290:
 30237                           
 30238                           ;stkvar	_b @ sp[(-4)+-4]
 30239  014AD6  0EF8               	movlw	-8
 30240  014AD8  A0E3               	btfss	plusw1,0,c
 30241  014ADA  D002               	goto	l8294
 30242                           
 30243                           ;stkvar	_grs @ sp[(-4)+0]
 30244  014ADC  0EFC               	movlw	-4
 30245  014ADE  8EE3               	bsf	plusw1,7,c
 30246  014AE0                     l8294:
 30247  014AE0  0E01               	movlw	1
 30248  014AE2  6E0C               	movwf	(btemp+11)^0,c
 30249                           
 30250                           ;stkvar	_b @ sp[(-4)+-4]
 30251  014AE4  50E1               	movf	fsr1l,w,c
 30252  014AE6  0FF8               	addlw	-8
 30253  014AE8  6ED9               	movwf	fsr2l,c
 30254  014AEA  50E2               	movf	fsr1h,w,c
 30255  014AEC  6EDA               	movwf	fsr2h,c
 30256  014AEE  0EFF               	movlw	255
 30257  014AF0  22DA               	addwfc	fsr2h,f,c
 30258  014AF2  280C               	incf	(btemp+11)^0,w,c
 30259  014AF4  52DE               	movf	postinc2,f,c
 30260  014AF6  D008               	goto	u5940
 30261  014AF8                     u5945:
 30262  014AF8  52DE               	movf	postinc2,f,c
 30263  014AFA  90D8               	bcf	status,0,c
 30264  014AFC  BEDC               	btfsc	preinc2,7,c
 30265  014AFE  80D8               	bsf	status,0,c
 30266  014B00  32DD               	rrcf	postdec2,f,c
 30267  014B02  32DD               	rrcf	postdec2,f,c
 30268  014B04  32DD               	rrcf	postdec2,f,c
 30269  014B06  32DE               	rrcf	postinc2,f,c
 30270  014B08                     u5940:
 30271  014B08  2EE8               	decfsz	wreg,f,c
 30272  014B0A  D7F6               	goto	u5945
 30273                           
 30274                           ;stkvar	_bexp @ sp[(-4)+1]
 30275  014B0C  0EFD               	movlw	-3
 30276  014B0E  2AE3               	incf	plusw1,f,c
 30277  014B10                     l8298:
 30278                           
 30279                           ;stkvar	_aexp @ sp[(-4)+2]
 30280                           ;stkvar	_bexp @ sp[(-4)+1]
 30281  014B10  50E1               	movf	fsr1l,w,c
 30282  014B12  0FFD               	addlw	-3
 30283  014B14  6ED9               	movwf	fsr2l,c
 30284  014B16  50E2               	movf	fsr1h,w,c
 30285  014B18  6EDA               	movwf	fsr2h,c
 30286  014B1A  0EFF               	movlw	255
 30287  014B1C  22DA               	addwfc	fsr2h,f,c
 30288  014B1E  0EFE               	movlw	-2
 30289  014B20  50E3               	movf	plusw1,w,c
 30290  014B22  5CDE               	subwf	postinc2,w,c
 30291  014B24  A0D8               	btfss	status,0,c
 30292  014B26  D7BE               	goto	l8284
 30293  014B28                     u5950:
 30294                           
 30295                           ;stkvar	_signs @ sp[(-4)+3]
 30296  014B28  0EFF               	movlw	-1
 30297  014B2A  BCE3               	btfsc	plusw1,6,c
 30298  014B2C  D066               	goto	l8326
 30299                           
 30300                           ;stkvar	_bexp @ sp[(-4)+1]
 30301  014B2E  0EFD               	movlw	-3
 30302  014B30  50E3               	movf	plusw1,w,c
 30303  014B32  B4D8               	btfsc	status,2,c
 30304  014B34  D0F2               	goto	u6050
 30305                           
 30306                           ;stkvar	_a @ sp[(-4)+-8]
 30307                           ;stkvar	_b @ sp[(-4)+-4]
 30308  014B36  0EF8               	movlw	-8
 30309  014B38  50E3               	movf	plusw1,w,c
 30310  014B3A  6E01               	movwf	btemp^0,c
 30311  014B3C  0EF4               	movlw	-12
 30312  014B3E  50E3               	movf	plusw1,w,c
 30313  014B40  2601               	addwf	btemp^0,f,c
 30314  014B42  0EF8               	movlw	-8
 30315  014B44  0060  F007  FFE3   	movff	btemp,plusw1
 30316  014B4A  0EF9               	movlw	-7
 30317  014B4C  50E3               	movf	plusw1,w,c
 30318  014B4E  6E01               	movwf	btemp^0,c
 30319  014B50  0EF5               	movlw	-11
 30320  014B52  50E3               	movf	plusw1,w,c
 30321  014B54  2201               	addwfc	btemp^0,f,c
 30322  014B56  0EF9               	movlw	-7
 30323  014B58  0060  F007  FFE3   	movff	btemp,plusw1
 30324  014B5E  0EFA               	movlw	-6
 30325  014B60  50E3               	movf	plusw1,w,c
 30326  014B62  6E01               	movwf	btemp^0,c
 30327  014B64  0EF6               	movlw	-10
 30328  014B66  50E3               	movf	plusw1,w,c
 30329  014B68  2201               	addwfc	btemp^0,f,c
 30330  014B6A  0EFA               	movlw	-6
 30331  014B6C  0060  F007  FFE3   	movff	btemp,plusw1
 30332  014B72  0EFB               	movlw	-5
 30333  014B74  50E3               	movf	plusw1,w,c
 30334  014B76  6E01               	movwf	btemp^0,c
 30335  014B78  0EF7               	movlw	-9
 30336  014B7A  50E3               	movf	plusw1,w,c
 30337  014B7C  2201               	addwfc	btemp^0,f,c
 30338  014B7E  0EFB               	movlw	-5
 30339  014B80  0060  F007  FFE3   	movff	btemp,plusw1
 30340                           
 30341                           ;stkvar	_b @ sp[(-4)+-4]
 30342  014B86  0EFB               	movlw	-5
 30343  014B88  A0E3               	btfss	plusw1,0,c
 30344  014B8A  D101               	goto	u6090
 30345                           
 30346                           ;stkvar	_grs @ sp[(-4)+0]
 30347  014B8C  0EFC               	movlw	-4
 30348  014B8E  A0E3               	btfss	plusw1,0,c
 30349  014B90  D00D               	goto	l8316
 30350                           
 30351                           ;stkvar	_grs @ sp[(-4)+0]
 30352  014B92  0EFC               	movlw	-4
 30353  014B94  006F FF8C  F00C    	movff	plusw1,btemp+11
 30354  014B9A  90D8               	bcf	status,0,c
 30355  014B9C  320C               	rrcf	(btemp+11)^0,f,c
 30356  014B9E  0E01               	movlw	1
 30357  014BA0  120C               	iorwf	(btemp+11)^0,f,c
 30358                           
 30359                           ;stkvar	_grs @ sp[(-4)+0]
 30360  014BA2  0EFC               	movlw	-4
 30361  014BA4  0060  F033  FFE3   	movff	btemp+11,plusw1
 30362  014BAA  D009               	goto	l8318
 30363  014BAC                     l8316:
 30364                           
 30365                           ;stkvar	_grs @ sp[(-4)+0]
 30366  014BAC  50E1               	movf	fsr1l,w,c
 30367  014BAE  0FFC               	addlw	-4
 30368  014BB0  6ED9               	movwf	fsr2l,c
 30369  014BB2  50E2               	movf	fsr1h,w,c
 30370  014BB4  6EDA               	movwf	fsr2h,c
 30371  014BB6  0EFF               	movlw	255
 30372  014BB8  22DA               	addwfc	fsr2h,f,c
 30373  014BBA  90D8               	bcf	status,0,c
 30374  014BBC  32DF               	rrcf	indf2,f,c
 30375  014BBE                     l8318:
 30376                           
 30377                           ;stkvar	_b @ sp[(-4)+-4]
 30378  014BBE  0EF8               	movlw	-8
 30379  014BC0  A0E3               	btfss	plusw1,0,c
 30380  014BC2  D002               	goto	l8322
 30381                           
 30382                           ;stkvar	_grs @ sp[(-4)+0]
 30383  014BC4  0EFC               	movlw	-4
 30384  014BC6  8EE3               	bsf	plusw1,7,c
 30385  014BC8                     l8322:
 30386  014BC8  0E01               	movlw	1
 30387  014BCA  6E0C               	movwf	(btemp+11)^0,c
 30388                           
 30389                           ;stkvar	_b @ sp[(-4)+-4]
 30390  014BCC  50E1               	movf	fsr1l,w,c
 30391  014BCE  0FF8               	addlw	-8
 30392  014BD0  6ED9               	movwf	fsr2l,c
 30393  014BD2  50E2               	movf	fsr1h,w,c
 30394  014BD4  6EDA               	movwf	fsr2h,c
 30395  014BD6  0EFF               	movlw	255
 30396  014BD8  22DA               	addwfc	fsr2h,f,c
 30397  014BDA  280C               	incf	(btemp+11)^0,w,c
 30398  014BDC  52DE               	movf	postinc2,f,c
 30399  014BDE  D008               	goto	u6010
 30400  014BE0                     u6015:
 30401  014BE0  52DE               	movf	postinc2,f,c
 30402  014BE2  90D8               	bcf	status,0,c
 30403  014BE4  BEDC               	btfsc	preinc2,7,c
 30404  014BE6  80D8               	bsf	status,0,c
 30405  014BE8  32DD               	rrcf	postdec2,f,c
 30406  014BEA  32DD               	rrcf	postdec2,f,c
 30407  014BEC  32DD               	rrcf	postdec2,f,c
 30408  014BEE  32DE               	rrcf	postinc2,f,c
 30409  014BF0                     u6010:
 30410  014BF0  2EE8               	decfsz	wreg,f,c
 30411  014BF2  D7F6               	goto	u6015
 30412                           
 30413                           ;stkvar	_bexp @ sp[(-4)+1]
 30414  014BF4  0EFD               	movlw	-3
 30415  014BF6  2AE3               	incf	plusw1,f,c
 30416  014BF8  D0CA               	goto	u6090
 30417  014BFA                     l8326:
 30418                           
 30419                           ;stkvar	_a @ sp[(-4)+-8]
 30420                           ;stkvar	_b @ sp[(-4)+-4]
 30421  014BFA  50E1               	movf	fsr1l,w,c
 30422  014BFC  0FF8               	addlw	-8
 30423  014BFE  6ED9               	movwf	fsr2l,c
 30424  014C00  50E2               	movf	fsr1h,w,c
 30425  014C02  6EDA               	movwf	fsr2h,c
 30426  014C04  0EFF               	movlw	255
 30427  014C06  22DA               	addwfc	fsr2h,f,c
 30428  014C08  0EF4               	movlw	-12
 30429  014C0A  50E3               	movf	plusw1,w,c
 30430  014C0C  5CDE               	subwf	postinc2,w,c
 30431  014C0E  0EF5               	movlw	-11
 30432  014C10  50E3               	movf	plusw1,w,c
 30433  014C12  58DE               	subwfb	postinc2,w,c
 30434  014C14  0EF6               	movlw	-10
 30435  014C16  50E3               	movf	plusw1,w,c
 30436  014C18  58DE               	subwfb	postinc2,w,c
 30437  014C1A  50DE               	movf	postinc2,w,c
 30438  014C1C  0A80               	xorlw	128
 30439  014C1E  6E01               	movwf	btemp^0,c
 30440  014C20  0EF7               	movlw	-9
 30441  014C22  50E3               	movf	plusw1,w,c
 30442  014C24  0A80               	xorlw	128
 30443  014C26  5801               	subwfb	btemp^0,w,c
 30444  014C28  B0D8               	btfsc	status,0,c
 30445  014C2A  D053               	goto	l8338
 30446                           
 30447                           ;stkvar	_b @ sp[(-4)+-4]
 30448                           ;stkvar	_a @ sp[(-4)+-8]
 30449  014C2C  0EF4               	movlw	-12
 30450  014C2E  006F FF8C  F009    	movff	plusw1,btemp+8
 30451  014C34  0EF5               	movlw	-11
 30452  014C36  006F FF8C  F00A    	movff	plusw1,btemp+9
 30453  014C3C  0EF6               	movlw	-10
 30454  014C3E  006F FF8C  F00B    	movff	plusw1,btemp+10
 30455  014C44  0EF7               	movlw	-9
 30456  014C46  006F FF8C  F00C    	movff	plusw1,btemp+11
 30457  014C4C  0EF8               	movlw	-8
 30458  014C4E  50E3               	movf	plusw1,w,c
 30459  014C50  5E09               	subwf	(btemp+8)^0,f,c
 30460  014C52  0EF9               	movlw	-7
 30461  014C54  50E3               	movf	plusw1,w,c
 30462  014C56  5A0A               	subwfb	(btemp+9)^0,f,c
 30463  014C58  0EFA               	movlw	-6
 30464  014C5A  50E3               	movf	plusw1,w,c
 30465  014C5C  5A0B               	subwfb	(btemp+10)^0,f,c
 30466  014C5E  0EFB               	movlw	-5
 30467  014C60  50E3               	movf	plusw1,w,c
 30468  014C62  5A0C               	subwfb	(btemp+11)^0,f,c
 30469  014C64  0EFF               	movlw	255
 30470  014C66  2409               	addwf	(btemp+8)^0,w,c
 30471  014C68  6E05               	movwf	(btemp+4)^0,c
 30472  014C6A  0EFF               	movlw	255
 30473  014C6C  200A               	addwfc	(btemp+9)^0,w,c
 30474  014C6E  6E06               	movwf	(btemp+5)^0,c
 30475  014C70  0EFF               	movlw	255
 30476  014C72  200B               	addwfc	(btemp+10)^0,w,c
 30477  014C74  6E07               	movwf	(btemp+6)^0,c
 30478  014C76  0EFF               	movlw	255
 30479  014C78  200C               	addwfc	(btemp+11)^0,w,c
 30480  014C7A  6E08               	movwf	(btemp+7)^0,c
 30481                           
 30482                           ;stkvar	_b @ sp[(-4)+-4]
 30483  014C7C  0EF8               	movlw	-8
 30484  014C7E  0060  F017  FFE3   	movff	btemp+4,plusw1
 30485  014C84  0EF9               	movlw	-7
 30486  014C86  0060  F01B  FFE3   	movff	btemp+5,plusw1
 30487  014C8C  0EFA               	movlw	-6
 30488  014C8E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 30489  014C94  0EFB               	movlw	-5
 30490  014C96  0060  F023  FFE3   	movff	btemp+7,plusw1
 30491                           
 30492                           ;stkvar	_signs @ sp[(-4)+3]
 30493  014C9C  0EFF               	movlw	-1
 30494  014C9E  7EE3               	btg	plusw1,7,c
 30495                           
 30496                           ;stkvar	_grs @ sp[(-4)+0]
 30497  014CA0  0EFC               	movlw	-4
 30498  014CA2  50E3               	movf	plusw1,w,c
 30499  014CA4  0800               	sublw	0
 30500  014CA6  6E0C               	movwf	(btemp+11)^0,c
 30501                           
 30502                           ;stkvar	_grs @ sp[(-4)+0]
 30503  014CA8  0EFC               	movlw	-4
 30504  014CAA  0060  F033  FFE3   	movff	btemp+11,plusw1
 30505                           
 30506                           ;stkvar	_grs @ sp[(-4)+0]
 30507  014CB0  0EFC               	movlw	-4
 30508  014CB2  50E3               	movf	plusw1,w,c
 30509  014CB4  A4D8               	btfss	status,2,c
 30510  014CB6  D020               	goto	l8340
 30511                           
 30512                           ;stkvar	_b @ sp[(-4)+-4]
 30513  014CB8  50E1               	movf	fsr1l,w,c
 30514  014CBA  0FF8               	addlw	-8
 30515  014CBC  6ED9               	movwf	fsr2l,c
 30516  014CBE  50E2               	movf	fsr1h,w,c
 30517  014CC0  6EDA               	movwf	fsr2h,c
 30518  014CC2  0EFF               	movlw	255
 30519  014CC4  22DA               	addwfc	fsr2h,f,c
 30520  014CC6  2ADE               	incf	postinc2,f,c
 30521  014CC8  0E00               	movlw	0
 30522  014CCA  22DE               	addwfc	postinc2,f,c
 30523  014CCC  22DE               	addwfc	postinc2,f,c
 30524  014CCE  22DE               	addwfc	postinc2,f,c
 30525  014CD0  D013               	goto	l8340
 30526  014CD2                     l8338:
 30527                           
 30528                           ;stkvar	_a @ sp[(-4)+-8]
 30529                           ;stkvar	_b @ sp[(-4)+-4]
 30530  014CD2  50E1               	movf	fsr1l,w,c
 30531  014CD4  0FF8               	addlw	-8
 30532  014CD6  6ED9               	movwf	fsr2l,c
 30533  014CD8  50E2               	movf	fsr1h,w,c
 30534  014CDA  6EDA               	movwf	fsr2h,c
 30535  014CDC  0EFF               	movlw	255
 30536  014CDE  22DA               	addwfc	fsr2h,f,c
 30537  014CE0  0EF4               	movlw	-12
 30538  014CE2  50E3               	movf	plusw1,w,c
 30539  014CE4  5EDE               	subwf	postinc2,f,c
 30540  014CE6  0EF5               	movlw	-11
 30541  014CE8  50E3               	movf	plusw1,w,c
 30542  014CEA  5ADE               	subwfb	postinc2,f,c
 30543  014CEC  0EF6               	movlw	-10
 30544  014CEE  50E3               	movf	plusw1,w,c
 30545  014CF0  5ADE               	subwfb	postinc2,f,c
 30546  014CF2  0EF7               	movlw	-9
 30547  014CF4  50E3               	movf	plusw1,w,c
 30548  014CF6  5ADE               	subwfb	postinc2,f,c
 30549  014CF8                     l8340:
 30550                           
 30551                           ;stkvar	_b @ sp[(-4)+-4]
 30552  014CF8  0EF8               	movlw	-8
 30553  014CFA  50E3               	movf	plusw1,w,c
 30554  014CFC  E145               	bnz	l8362
 30555  014CFE  0EF9               	movlw	-7
 30556  014D00  50E3               	movf	plusw1,w,c
 30557  014D02  E142               	bnz	l8362
 30558  014D04  0EFA               	movlw	-6
 30559  014D06  50E3               	movf	plusw1,w,c
 30560  014D08  E13F               	bnz	l8362
 30561  014D0A  0EFB               	movlw	-5
 30562  014D0C  50E3               	movf	plusw1,w,c
 30563  014D0E  A4D8               	btfss	status,2,c
 30564  014D10  D03B               	goto	l8362
 30565                           
 30566                           ;stkvar	_grs @ sp[(-4)+0]
 30567  014D12  0EFC               	movlw	-4
 30568  014D14  50E3               	movf	plusw1,w,c
 30569  014D16  A4D8               	btfss	status,2,c
 30570  014D18  D037               	goto	l8362
 30571  014D1A                     u6050:
 30572  014D1A  0E00               	movlw	0
 30573  014D1C  6E01               	movwf	btemp^0,c
 30574  014D1E  0E00               	movlw	0
 30575  014D20  6E02               	movwf	(btemp+1)^0,c
 30576  014D22  0E00               	movlw	0
 30577  014D24  6E03               	movwf	(btemp+2)^0,c
 30578  014D26  0E00               	movlw	0
 30579  014D28  6E04               	movwf	(btemp+3)^0,c
 30580  014D2A  D0C6               	goto	l3084
 30581  014D2C                     l8348:
 30582                           
 30583                           ;stkvar	_b @ sp[(-4)+-4]
 30584  014D2C  90D8               	bcf	status,0,c
 30585  014D2E  0EF8               	movlw	-8
 30586  014D30  36E3               	rlcf	plusw1,f,c
 30587  014D32  0EF9               	movlw	-7
 30588  014D34  36E3               	rlcf	plusw1,f,c
 30589  014D36  0EFA               	movlw	-6
 30590  014D38  36E3               	rlcf	plusw1,f,c
 30591  014D3A  0EFB               	movlw	-5
 30592  014D3C  36E3               	rlcf	plusw1,f,c
 30593                           
 30594                           ;stkvar	_grs @ sp[(-4)+0]
 30595  014D3E  0EFC               	movlw	-4
 30596  014D40  AEE3               	btfss	plusw1,7,c
 30597  014D42  D002               	goto	l3096
 30598                           
 30599                           ;stkvar	_b @ sp[(-4)+-4]
 30600  014D44  0EF8               	movlw	-8
 30601  014D46  80E3               	bsf	plusw1,0,c
 30602  014D48                     l3096:
 30603                           
 30604                           ;stkvar	_grs @ sp[(-4)+0]
 30605  014D48  0EFC               	movlw	-4
 30606  014D4A  A0E3               	btfss	plusw1,0,c
 30607  014D4C  D00E               	goto	l8356
 30608                           
 30609                           ;stkvar	_grs @ sp[(-4)+0]
 30610  014D4E  0EFC               	movlw	-4
 30611  014D50  006F FF8C  F00C    	movff	plusw1,btemp+11
 30612  014D56  90D8               	bcf	status,0,c
 30613  014D58  340C               	rlcf	(btemp+11)^0,w,c
 30614  014D5A  6E0B               	movwf	(btemp+10)^0,c
 30615  014D5C  0E01               	movlw	1
 30616  014D5E  120B               	iorwf	(btemp+10)^0,f,c
 30617                           
 30618                           ;stkvar	_grs @ sp[(-4)+0]
 30619  014D60  0EFC               	movlw	-4
 30620  014D62  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30621  014D68  D009               	goto	l8358
 30622  014D6A                     l8356:
 30623                           
 30624                           ;stkvar	_grs @ sp[(-4)+0]
 30625  014D6A  50E1               	movf	fsr1l,w,c
 30626  014D6C  0FFC               	addlw	-4
 30627  014D6E  6ED9               	movwf	fsr2l,c
 30628  014D70  50E2               	movf	fsr1h,w,c
 30629  014D72  6EDA               	movwf	fsr2h,c
 30630  014D74  0EFF               	movlw	255
 30631  014D76  22DA               	addwfc	fsr2h,f,c
 30632  014D78  90D8               	bcf	status,0,c
 30633  014D7A  36DF               	rlcf	indf2,f,c
 30634  014D7C                     l8358:
 30635                           
 30636                           ;stkvar	_bexp @ sp[(-4)+1]
 30637  014D7C  0EFD               	movlw	-3
 30638  014D7E  50E3               	movf	plusw1,w,c
 30639  014D80  B4D8               	btfsc	status,2,c
 30640  014D82  D002               	goto	l8362
 30641                           
 30642                           ;stkvar	_bexp @ sp[(-4)+1]
 30643  014D84  0EFD               	movlw	-3
 30644  014D86  06E3               	decf	plusw1,f,c
 30645  014D88                     l8362:
 30646                           
 30647                           ;stkvar	_b @ sp[(-4)+-4]
 30648  014D88  0EFA               	movlw	-6
 30649  014D8A  AEE3               	btfss	plusw1,7,c
 30650  014D8C  D7CF               	goto	l8348
 30651  014D8E                     u6090:
 30652                           
 30653                           ;stkvar	_aexp @ sp[(-4)+2]
 30654  014D8E  0EFE               	movlw	-2
 30655  014D90  6AE3               	clrf	plusw1,c
 30656                           
 30657                           ;stkvar	_grs @ sp[(-4)+0]
 30658  014D92  0EFC               	movlw	-4
 30659  014D94  AEE3               	btfss	plusw1,7,c
 30660  014D96  D00F               	goto	l8376
 30661                           
 30662                           ;stkvar	_grs @ sp[(-4)+0]
 30663  014D98  0EFC               	movlw	-4
 30664  014D9A  006F FF8C  F00C    	movff	plusw1,btemp+11
 30665  014DA0  0E7F               	movlw	127
 30666  014DA2  160C               	andwf	(btemp+11)^0,f,c
 30667  014DA4  B4D8               	btfsc	status,2,c
 30668  014DA6  D004               	goto	l8372
 30669  014DA8                     u6110:
 30670                           
 30671                           ;stkvar	_aexp @ sp[(-4)+2]
 30672  014DA8  0EFE               	movlw	-2
 30673  014DAA  6AE3               	clrf	plusw1,c
 30674  014DAC  2AE3               	incf	plusw1,f,c
 30675  014DAE  D003               	goto	l8376
 30676  014DB0                     l8372:
 30677                           
 30678                           ;stkvar	_b @ sp[(-4)+-4]
 30679  014DB0  0EF8               	movlw	-8
 30680  014DB2  B0E3               	btfsc	plusw1,0,c
 30681  014DB4  D7F9               	goto	u6110
 30682  014DB6                     l8376:
 30683                           
 30684                           ;stkvar	_aexp @ sp[(-4)+2]
 30685  014DB6  0EFE               	movlw	-2
 30686  014DB8  50E3               	movf	plusw1,w,c
 30687  014DBA  B4D8               	btfsc	status,2,c
 30688  014DBC  D02B               	goto	l8388
 30689                           
 30690                           ;stkvar	_b @ sp[(-4)+-4]
 30691  014DBE  50E1               	movf	fsr1l,w,c
 30692  014DC0  0FF8               	addlw	-8
 30693  014DC2  6ED9               	movwf	fsr2l,c
 30694  014DC4  50E2               	movf	fsr1h,w,c
 30695  014DC6  6EDA               	movwf	fsr2h,c
 30696  014DC8  0EFF               	movlw	255
 30697  014DCA  22DA               	addwfc	fsr2h,f,c
 30698  014DCC  2ADE               	incf	postinc2,f,c
 30699  014DCE  0E00               	movlw	0
 30700  014DD0  22DE               	addwfc	postinc2,f,c
 30701  014DD2  22DE               	addwfc	postinc2,f,c
 30702  014DD4  22DE               	addwfc	postinc2,f,c
 30703                           
 30704                           ;stkvar	_b @ sp[(-4)+-4]
 30705  014DD6  0EFB               	movlw	-5
 30706  014DD8  A0E3               	btfss	plusw1,0,c
 30707  014DDA  D01C               	goto	l8388
 30708  014DDC  0E01               	movlw	1
 30709  014DDE  6E0C               	movwf	(btemp+11)^0,c
 30710                           
 30711                           ;stkvar	_b @ sp[(-4)+-4]
 30712  014DE0  50E1               	movf	fsr1l,w,c
 30713  014DE2  0FF8               	addlw	-8
 30714  014DE4  6ED9               	movwf	fsr2l,c
 30715  014DE6  50E2               	movf	fsr1h,w,c
 30716  014DE8  6EDA               	movwf	fsr2h,c
 30717  014DEA  0EFF               	movlw	255
 30718  014DEC  22DA               	addwfc	fsr2h,f,c
 30719  014DEE  280C               	incf	(btemp+11)^0,w,c
 30720  014DF0  52DE               	movf	postinc2,f,c
 30721  014DF2  D008               	goto	u6150
 30722  014DF4                     u6155:
 30723  014DF4  52DE               	movf	postinc2,f,c
 30724  014DF6  90D8               	bcf	status,0,c
 30725  014DF8  BEDC               	btfsc	preinc2,7,c
 30726  014DFA  80D8               	bsf	status,0,c
 30727  014DFC  32DD               	rrcf	postdec2,f,c
 30728  014DFE  32DD               	rrcf	postdec2,f,c
 30729  014E00  32DD               	rrcf	postdec2,f,c
 30730  014E02  32DE               	rrcf	postinc2,f,c
 30731  014E04                     u6150:
 30732  014E04  2EE8               	decfsz	wreg,f,c
 30733  014E06  D7F6               	goto	u6155
 30734                           
 30735                           ;stkvar	_bexp @ sp[(-4)+1]
 30736  014E08  0EFD               	movlw	-3
 30737  014E0A  28E3               	incf	plusw1,w,c
 30738  014E0C  B4D8               	btfsc	status,2,c
 30739  014E0E  D002               	goto	l8388
 30740                           
 30741                           ;stkvar	_bexp @ sp[(-4)+1]
 30742  014E10  0EFD               	movlw	-3
 30743  014E12  2AE3               	incf	plusw1,f,c
 30744  014E14                     l8388:
 30745                           
 30746                           ;stkvar	_bexp @ sp[(-4)+1]
 30747  014E14  0EFD               	movlw	-3
 30748  014E16  28E3               	incf	plusw1,w,c
 30749  014E18  B4D8               	btfsc	status,2,c
 30750  014E1A  D004               	goto	u6180
 30751                           
 30752                           ;stkvar	_bexp @ sp[(-4)+1]
 30753  014E1C  0EFD               	movlw	-3
 30754  014E1E  50E3               	movf	plusw1,w,c
 30755  014E20  A4D8               	btfss	status,2,c
 30756  014E22  D00E               	goto	l8398
 30757  014E24                     u6180:
 30758                           
 30759                           ;stkvar	_b @ sp[(-4)+-4]
 30760  014E24  0EF8               	movlw	-8
 30761  014E26  6AE3               	clrf	plusw1,c
 30762  014E28  0EF9               	movlw	-7
 30763  014E2A  6AE3               	clrf	plusw1,c
 30764  014E2C  0EFA               	movlw	-6
 30765  014E2E  6AE3               	clrf	plusw1,c
 30766  014E30  0EFB               	movlw	-5
 30767  014E32  6AE3               	clrf	plusw1,c
 30768                           
 30769                           ;stkvar	_bexp @ sp[(-4)+1]
 30770  014E34  0EFD               	movlw	-3
 30771  014E36  50E3               	movf	plusw1,w,c
 30772  014E38  A4D8               	btfss	status,2,c
 30773  014E3A  D002               	goto	l8398
 30774                           
 30775                           ;stkvar	_signs @ sp[(-4)+3]
 30776  014E3C  0EFF               	movlw	-1
 30777  014E3E  6AE3               	clrf	plusw1,c
 30778  014E40                     l8398:
 30779                           
 30780                           ;stkvar	_bexp @ sp[(-4)+1]
 30781  014E40  0EFD               	movlw	-3
 30782  014E42  A0E3               	btfss	plusw1,0,c
 30783  014E44  D009               	goto	l8402
 30784                           
 30785                           ;stkvar	_b @ sp[(-4)+-4]
 30786  014E46  0EFA               	movlw	250
 30787  014E48  24E1               	addwf	fsr1l,w,c
 30788  014E4A  6ED9               	movwf	fsr2l,c
 30789  014E4C  0EFF               	movlw	255
 30790  014E4E  20E2               	addwfc	fsr1h,w,c
 30791  014E50  6EDA               	movwf	fsr2h,c
 30792  014E52  0E00               	movlw	0
 30793  014E54  8EDB               	bsf	plusw2,7,c
 30794  014E56  D008               	goto	l8404
 30795  014E58                     l8402:
 30796                           
 30797                           ;stkvar	_b @ sp[(-4)+-4]
 30798  014E58  0EFA               	movlw	250
 30799  014E5A  24E1               	addwf	fsr1l,w,c
 30800  014E5C  6ED9               	movwf	fsr2l,c
 30801  014E5E  0EFF               	movlw	255
 30802  014E60  20E2               	addwfc	fsr1h,w,c
 30803  014E62  6EDA               	movwf	fsr2h,c
 30804  014E64  0E7F               	movlw	127
 30805  014E66  16DF               	andwf	indf2,f,c
 30806  014E68                     l8404:
 30807                           
 30808                           ;stkvar	_b @ sp[(-4)+-4]
 30809  014E68  0EFB               	movlw	251
 30810  014E6A  24E1               	addwf	fsr1l,w,c
 30811  014E6C  6ED9               	movwf	fsr2l,c
 30812  014E6E  0EFF               	movlw	255
 30813  014E70  20E2               	addwfc	fsr1h,w,c
 30814  014E72  6EDA               	movwf	fsr2h,c
 30815                           
 30816                           ;stkvar	_bexp @ sp[(-4)+1]
 30817  014E74  0EFD               	movlw	-3
 30818  014E76  006F FF8C  F00C    	movff	plusw1,btemp+11
 30819  014E7C  90D8               	bcf	status,0,c
 30820  014E7E  300C               	rrcf	(btemp+11)^0,w,c
 30821  014E80  6EDF               	movwf	indf2,c
 30822                           
 30823                           ;stkvar	_signs @ sp[(-4)+3]
 30824  014E82  0EFF               	movlw	-1
 30825  014E84  AEE3               	btfss	plusw1,7,c
 30826  014E86  D008               	goto	l8410
 30827                           
 30828                           ;stkvar	_b @ sp[(-4)+-4]
 30829  014E88  0EFB               	movlw	251
 30830  014E8A  24E1               	addwf	fsr1l,w,c
 30831  014E8C  6ED9               	movwf	fsr2l,c
 30832  014E8E  0EFF               	movlw	255
 30833  014E90  20E2               	addwfc	fsr1h,w,c
 30834  014E92  6EDA               	movwf	fsr2h,c
 30835  014E94  0E00               	movlw	0
 30836  014E96  8EDB               	bsf	plusw2,7,c
 30837  014E98                     l8410:
 30838                           
 30839                           ;stkvar	_b @ sp[(-4)+-4]
 30840  014E98  0EF8               	movlw	-8
 30841  014E9A  006F FF8C  F001    	movff	plusw1,btemp
 30842  014EA0  0EF9               	movlw	-7
 30843  014EA2  006F FF8C  F002    	movff	plusw1,btemp+1
 30844  014EA8  0EFA               	movlw	-6
 30845  014EAA  006F FF8C  F003    	movff	plusw1,btemp+2
 30846  014EB0  0EFB               	movlw	-5
 30847  014EB2  006F FF8C  F004    	movff	plusw1,btemp+3
 30848  014EB8                     l3084:
 30849                           
 30850                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 30851  014EB8  0EF4               	movlw	244
 30852  014EBA  26E1               	addwf	fsr1l,f,c
 30853  014EBC  0EFF               	movlw	255
 30854  014EBE  22E2               	addwfc	fsr1h,f,c
 30855  014EC0  0012               	return		;funcret
 30856  014EC2                     __end_of___fladd:
 30857                           	opt callstack 0
 30858                           
 30859 ;; *************** function ___flmul *****************
 30860 ;; Defined at:
 30861 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 30862 ;; Parameters:    Size  Location     Type
 30863 ;;  b               4  [STACK] unsigned char 
 30864 ;;  a               4  [STACK] unsigned char 
 30865 ;; Auto vars:     Size  Location     Type
 30866 ;;  prod            4  [STACK] struct .
 30867 ;;  grs             4  [STACK] unsigned long 
 30868 ;;  temp            2  [STACK] struct .
 30869 ;;  bexp            1  [STACK] unsigned char 
 30870 ;;  aexp            1  [STACK] unsigned char 
 30871 ;;  sign            1  [STACK] unsigned char 
 30872 ;; Return value:  Size  Location     Type
 30873 ;;                  4  [STACK] unsigned char 
 30874 ;; Registers used:
 30875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 30876 ;; Tracked objects:
 30877 ;;		On entry : 0/0
 30878 ;;		On exit  : 0/0
 30879 ;;		Unchanged: 0/0
 30880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30885 ;;Total ram usage:        0 bytes
 30886 ;; Hardware stack levels used:    1
 30887 ;; Hardware stack levels required when called:   15
 30888 ;; This function calls:
 30889 ;;		Nothing
 30890 ;; This function is called by:
 30891 ;;		_conv_raw_result
 30892 ;;		_lp_filter
 30893 ;;		_calc_model_data
 30894 ;;		_calc_bsoc
 30895 ;;		_init_bsoc
 30896 ;;		_efgtoa
 30897 ;; This function uses a reentrant model
 30898 ;;
 30899                           
 30900                           	psect	text121
 30901  013EDC                     __ptext121:
 30902                           	opt callstack 0
 30903  013EDC                     ___flmul:
 30904                           	opt callstack 0
 30905                           
 30906                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 30907  013EDC  0E0D               	movlw	13
 30908  013EDE  26E1               	addwf	fsr1l,f,c
 30909  013EE0  0E00               	movlw	0
 30910  013EE2  22E2               	addwfc	fsr1h,f,c
 30911                           
 30912                           ;stkvar	_b @ sp[(-13)+-4]
 30913                           
 30914                           ;incstack = 0
 30915 ;; hardware stack exceeded
 30916  013EE4  0EF2               	movlw	242
 30917  013EE6  24E1               	addwf	fsr1l,w,c
 30918  013EE8  6ED9               	movwf	fsr2l,c
 30919  013EEA  0EFF               	movlw	255
 30920  013EEC  20E2               	addwfc	fsr1h,w,c
 30921  013EEE  6EDA               	movwf	fsr2h,c
 30922  013EF0  50DF               	movf	indf2,w,c
 30923  013EF2  6E0C               	movwf	(btemp+11)^0,c
 30924  013EF4  0E80               	movlw	128
 30925  013EF6  160C               	andwf	(btemp+11)^0,f,c
 30926                           
 30927                           ;stkvar	_sign @ sp[(-13)+12]
 30928  013EF8  0EFF               	movlw	-1
 30929  013EFA  0060  F033  FFE3   	movff	btemp+11,plusw1
 30930                           
 30931                           ;stkvar	_b @ sp[(-13)+-4]
 30932  013F00  0EF2               	movlw	242
 30933  013F02  24E1               	addwf	fsr1l,w,c
 30934  013F04  6ED9               	movwf	fsr2l,c
 30935  013F06  0EFF               	movlw	255
 30936  013F08  20E2               	addwfc	fsr1h,w,c
 30937  013F0A  6EDA               	movwf	fsr2h,c
 30938  013F0C  50DF               	movf	indf2,w,c
 30939  013F0E  6E0C               	movwf	(btemp+11)^0,c
 30940  013F10  90D8               	bcf	status,0,c
 30941  013F12  340C               	rlcf	(btemp+11)^0,w,c
 30942  013F14  6E0B               	movwf	(btemp+10)^0,c
 30943                           
 30944                           ;stkvar	_bexp @ sp[(-13)+10]
 30945  013F16  0EFD               	movlw	-3
 30946  013F18  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30947                           
 30948                           ;stkvar	_b @ sp[(-13)+-4]
 30949  013F1E  0EF1               	movlw	241
 30950  013F20  24E1               	addwf	fsr1l,w,c
 30951  013F22  6ED9               	movwf	fsr2l,c
 30952  013F24  0EFF               	movlw	255
 30953  013F26  20E2               	addwfc	fsr1h,w,c
 30954  013F28  6EDA               	movwf	fsr2h,c
 30955  013F2A  AEDF               	btfss	indf2,7,c
 30956  013F2C  D002               	goto	l8836
 30957                           
 30958                           ;stkvar	_bexp @ sp[(-13)+10]
 30959  013F2E  0EFD               	movlw	-3
 30960  013F30  80E3               	bsf	plusw1,0,c
 30961  013F32                     l8836:
 30962                           
 30963                           ;stkvar	_bexp @ sp[(-13)+10]
 30964  013F32  0EFD               	movlw	-3
 30965  013F34  50E3               	movf	plusw1,w,c
 30966  013F36  B4D8               	btfsc	status,2,c
 30967  013F38  D01F               	goto	l8844
 30968                           
 30969                           ;stkvar	_bexp @ sp[(-13)+10]
 30970  013F3A  0EFD               	movlw	-3
 30971  013F3C  28E3               	incf	plusw1,w,c
 30972  013F3E  A4D8               	btfss	status,2,c
 30973  013F40  D018               	goto	l8842
 30974  013F42  0E00               	movlw	0
 30975  013F44  6E09               	movwf	(btemp+8)^0,c
 30976  013F46  0E00               	movlw	0
 30977  013F48  6E0A               	movwf	(btemp+9)^0,c
 30978  013F4A  0E00               	movlw	0
 30979  013F4C  6E0B               	movwf	(btemp+10)^0,c
 30980  013F4E  0E00               	movlw	0
 30981  013F50  6E0C               	movwf	(btemp+11)^0,c
 30982                           
 30983                           ;stkvar	_b @ sp[(-13)+-4]
 30984  013F52  0EEF               	movlw	-17
 30985  013F54  0060  F027  FFE3   	movff	btemp+8,plusw1
 30986  013F5A  0EF0               	movlw	-16
 30987  013F5C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 30988  013F62  0EF1               	movlw	-15
 30989  013F64  0060  F02F  FFE3   	movff	btemp+10,plusw1
 30990  013F6A  0EF2               	movlw	-14
 30991  013F6C  0060  F033  FFE3   	movff	btemp+11,plusw1
 30992  013F72                     l8842:
 30993                           
 30994                           ;stkvar	_b @ sp[(-13)+-4]
 30995  013F72  0EF1               	movlw	-15
 30996  013F74  8EE3               	bsf	plusw1,7,c
 30997  013F76  D018               	goto	l8846
 30998  013F78                     l8844:
 30999  013F78  0E00               	movlw	0
 31000  013F7A  6E09               	movwf	(btemp+8)^0,c
 31001  013F7C  0E00               	movlw	0
 31002  013F7E  6E0A               	movwf	(btemp+9)^0,c
 31003  013F80  0E00               	movlw	0
 31004  013F82  6E0B               	movwf	(btemp+10)^0,c
 31005  013F84  0E00               	movlw	0
 31006  013F86  6E0C               	movwf	(btemp+11)^0,c
 31007                           
 31008                           ;stkvar	_b @ sp[(-13)+-4]
 31009  013F88  0EEF               	movlw	-17
 31010  013F8A  0060  F027  FFE3   	movff	btemp+8,plusw1
 31011  013F90  0EF0               	movlw	-16
 31012  013F92  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31013  013F98  0EF1               	movlw	-15
 31014  013F9A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31015  013FA0  0EF2               	movlw	-14
 31016  013FA2  0060  F033  FFE3   	movff	btemp+11,plusw1
 31017  013FA8                     l8846:
 31018                           
 31019                           ;stkvar	_a @ sp[(-13)+-8]
 31020  013FA8  0EEE               	movlw	238
 31021  013FAA  24E1               	addwf	fsr1l,w,c
 31022  013FAC  6ED9               	movwf	fsr2l,c
 31023  013FAE  0EFF               	movlw	255
 31024  013FB0  20E2               	addwfc	fsr1h,w,c
 31025  013FB2  6EDA               	movwf	fsr2h,c
 31026  013FB4  50DF               	movf	indf2,w,c
 31027  013FB6  6E0C               	movwf	(btemp+11)^0,c
 31028  013FB8  0E80               	movlw	128
 31029  013FBA  160C               	andwf	(btemp+11)^0,f,c
 31030                           
 31031                           ;stkvar	_sign @ sp[(-13)+12]
 31032  013FBC  50E1               	movf	fsr1l,w,c
 31033  013FBE  0FFF               	addlw	-1
 31034  013FC0  6ED9               	movwf	fsr2l,c
 31035  013FC2  50E2               	movf	fsr1h,w,c
 31036  013FC4  6EDA               	movwf	fsr2h,c
 31037  013FC6  0EFF               	movlw	255
 31038  013FC8  22DA               	addwfc	fsr2h,f,c
 31039  013FCA  500C               	movf	(btemp+11)^0,w,c
 31040  013FCC  1ADF               	xorwf	indf2,f,c
 31041                           
 31042                           ;stkvar	_a @ sp[(-13)+-8]
 31043  013FCE  0EEE               	movlw	238
 31044  013FD0  24E1               	addwf	fsr1l,w,c
 31045  013FD2  6ED9               	movwf	fsr2l,c
 31046  013FD4  0EFF               	movlw	255
 31047  013FD6  20E2               	addwfc	fsr1h,w,c
 31048  013FD8  6EDA               	movwf	fsr2h,c
 31049  013FDA  50DF               	movf	indf2,w,c
 31050  013FDC  6E0C               	movwf	(btemp+11)^0,c
 31051  013FDE  90D8               	bcf	status,0,c
 31052  013FE0  340C               	rlcf	(btemp+11)^0,w,c
 31053  013FE2  6E0B               	movwf	(btemp+10)^0,c
 31054                           
 31055                           ;stkvar	_aexp @ sp[(-13)+11]
 31056  013FE4  0EFE               	movlw	-2
 31057  013FE6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31058                           
 31059                           ;stkvar	_a @ sp[(-13)+-8]
 31060  013FEC  0EED               	movlw	237
 31061  013FEE  24E1               	addwf	fsr1l,w,c
 31062  013FF0  6ED9               	movwf	fsr2l,c
 31063  013FF2  0EFF               	movlw	255
 31064  013FF4  20E2               	addwfc	fsr1h,w,c
 31065  013FF6  6EDA               	movwf	fsr2h,c
 31066  013FF8  AEDF               	btfss	indf2,7,c
 31067  013FFA  D002               	goto	l8854
 31068                           
 31069                           ;stkvar	_aexp @ sp[(-13)+11]
 31070  013FFC  0EFE               	movlw	-2
 31071  013FFE  80E3               	bsf	plusw1,0,c
 31072  014000                     l8854:
 31073                           
 31074                           ;stkvar	_aexp @ sp[(-13)+11]
 31075  014000  0EFE               	movlw	-2
 31076  014002  50E3               	movf	plusw1,w,c
 31077  014004  B4D8               	btfsc	status,2,c
 31078  014006  D01F               	goto	l8862
 31079                           
 31080                           ;stkvar	_aexp @ sp[(-13)+11]
 31081  014008  0EFE               	movlw	-2
 31082  01400A  28E3               	incf	plusw1,w,c
 31083  01400C  A4D8               	btfss	status,2,c
 31084  01400E  D018               	goto	l8860
 31085  014010  0E00               	movlw	0
 31086  014012  6E09               	movwf	(btemp+8)^0,c
 31087  014014  0E00               	movlw	0
 31088  014016  6E0A               	movwf	(btemp+9)^0,c
 31089  014018  0E00               	movlw	0
 31090  01401A  6E0B               	movwf	(btemp+10)^0,c
 31091  01401C  0E00               	movlw	0
 31092  01401E  6E0C               	movwf	(btemp+11)^0,c
 31093                           
 31094                           ;stkvar	_a @ sp[(-13)+-8]
 31095  014020  0EEB               	movlw	-21
 31096  014022  0060  F027  FFE3   	movff	btemp+8,plusw1
 31097  014028  0EEC               	movlw	-20
 31098  01402A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31099  014030  0EED               	movlw	-19
 31100  014032  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31101  014038  0EEE               	movlw	-18
 31102  01403A  0060  F033  FFE3   	movff	btemp+11,plusw1
 31103  014040                     l8860:
 31104                           
 31105                           ;stkvar	_a @ sp[(-13)+-8]
 31106  014040  0EED               	movlw	-19
 31107  014042  8EE3               	bsf	plusw1,7,c
 31108  014044  D018               	goto	l8864
 31109  014046                     l8862:
 31110  014046  0E00               	movlw	0
 31111  014048  6E09               	movwf	(btemp+8)^0,c
 31112  01404A  0E00               	movlw	0
 31113  01404C  6E0A               	movwf	(btemp+9)^0,c
 31114  01404E  0E00               	movlw	0
 31115  014050  6E0B               	movwf	(btemp+10)^0,c
 31116  014052  0E00               	movlw	0
 31117  014054  6E0C               	movwf	(btemp+11)^0,c
 31118                           
 31119                           ;stkvar	_a @ sp[(-13)+-8]
 31120  014056  0EEB               	movlw	-21
 31121  014058  0060  F027  FFE3   	movff	btemp+8,plusw1
 31122  01405E  0EEC               	movlw	-20
 31123  014060  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31124  014066  0EED               	movlw	-19
 31125  014068  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31126  01406E  0EEE               	movlw	-18
 31127  014070  0060  F033  FFE3   	movff	btemp+11,plusw1
 31128  014076                     l8864:
 31129                           
 31130                           ;stkvar	_aexp @ sp[(-13)+11]
 31131  014076  0EFE               	movlw	-2
 31132  014078  50E3               	movf	plusw1,w,c
 31133  01407A  B4D8               	btfsc	status,2,c
 31134  01407C  D004               	goto	u7170
 31135                           
 31136                           ;stkvar	_bexp @ sp[(-13)+10]
 31137  01407E  0EFD               	movlw	-3
 31138  014080  50E3               	movf	plusw1,w,c
 31139  014082  A4D8               	btfss	status,2,c
 31140  014084  D009               	goto	l8872
 31141  014086                     u7170:
 31142  014086  0E00               	movlw	0
 31143  014088  6E01               	movwf	btemp^0,c
 31144  01408A  0E00               	movlw	0
 31145  01408C  6E02               	movwf	(btemp+1)^0,c
 31146  01408E  0E00               	movlw	0
 31147  014090  6E03               	movwf	(btemp+2)^0,c
 31148  014092  0E00               	movlw	0
 31149  014094  6E04               	movwf	(btemp+3)^0,c
 31150  014096  D332               	goto	l3165
 31151  014098                     l8872:
 31152                           
 31153                           ;stkvar	_b @ sp[(-13)+-4]
 31154  014098  0EEF               	movlw	-17
 31155  01409A  006F FF8C  F00C    	movff	plusw1,btemp+11
 31156                           
 31157                           ;stkvar	_a @ sp[(-13)+-8]
 31158  0140A0  0EED               	movlw	237
 31159  0140A2  24E1               	addwf	fsr1l,w,c
 31160  0140A4  6ED9               	movwf	fsr2l,c
 31161  0140A6  0EFF               	movlw	255
 31162  0140A8  20E2               	addwfc	fsr1h,w,c
 31163  0140AA  6EDA               	movwf	fsr2h,c
 31164  0140AC  50DF               	movf	indf2,w,c
 31165  0140AE  020C               	mulwf	(btemp+11)^0,c
 31166                           
 31167                           ;stkvar	_temp @ sp[(-13)+8]
 31168  0140B0  0EFB               	movlw	-5
 31169  0140B2  006F FFCF FFE3     	movff	prodl,plusw1
 31170  0140B8  0EFC               	movlw	-4
 31171  0140BA  006F FFD3 FFE3     	movff	prodh,plusw1
 31172                           
 31173                           ;stkvar	_temp @ sp[(-13)+8]
 31174  0140C0  0EFB               	movlw	-5
 31175  0140C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 31176  0140C8  0060  F030  F005   	movff	btemp+11,btemp+4
 31177  0140CE  6A06               	clrf	(btemp+5)^0,c
 31178  0140D0  6A07               	clrf	(btemp+6)^0,c
 31179  0140D2  6A08               	clrf	(btemp+7)^0,c
 31180                           
 31181                           ;stkvar	_grs @ sp[(-13)+4]
 31182  0140D4  0EF7               	movlw	-9
 31183  0140D6  0060  F017  FFE3   	movff	btemp+4,plusw1
 31184  0140DC  0EF8               	movlw	-8
 31185  0140DE  0060  F01B  FFE3   	movff	btemp+5,plusw1
 31186  0140E4  0EF9               	movlw	-7
 31187  0140E6  0060  F01F  FFE3   	movff	btemp+6,plusw1
 31188  0140EC  0EFA               	movlw	-6
 31189  0140EE  0060  F023  FFE3   	movff	btemp+7,plusw1
 31190                           
 31191                           ;stkvar	_temp @ sp[(-13)+8]
 31192  0140F4  0EFC               	movlw	252
 31193  0140F6  24E1               	addwf	fsr1l,w,c
 31194  0140F8  6ED9               	movwf	fsr2l,c
 31195  0140FA  0EFF               	movlw	255
 31196  0140FC  20E2               	addwfc	fsr1h,w,c
 31197  0140FE  6EDA               	movwf	fsr2h,c
 31198  014100  50DF               	movf	indf2,w,c
 31199  014102  6E0C               	movwf	(btemp+11)^0,c
 31200  014104  0060  F030  F005   	movff	btemp+11,btemp+4
 31201  01410A  6A06               	clrf	(btemp+5)^0,c
 31202  01410C  6A07               	clrf	(btemp+6)^0,c
 31203  01410E  6A08               	clrf	(btemp+7)^0,c
 31204                           
 31205                           ;stkvar	_prod @ sp[(-13)+0]
 31206  014110  0EF3               	movlw	-13
 31207  014112  0060  F017  FFE3   	movff	btemp+4,plusw1
 31208  014118  0EF4               	movlw	-12
 31209  01411A  0060  F01B  FFE3   	movff	btemp+5,plusw1
 31210  014120  0EF5               	movlw	-11
 31211  014122  0060  F01F  FFE3   	movff	btemp+6,plusw1
 31212  014128  0EF6               	movlw	-10
 31213  01412A  0060  F023  FFE3   	movff	btemp+7,plusw1
 31214                           
 31215                           ;stkvar	_b @ sp[(-13)+-4]
 31216  014130  0EF0               	movlw	240
 31217  014132  24E1               	addwf	fsr1l,w,c
 31218  014134  6ED9               	movwf	fsr2l,c
 31219  014136  0EFF               	movlw	255
 31220  014138  20E2               	addwfc	fsr1h,w,c
 31221  01413A  6EDA               	movwf	fsr2h,c
 31222  01413C  50DF               	movf	indf2,w,c
 31223  01413E  6E0C               	movwf	(btemp+11)^0,c
 31224                           
 31225                           ;stkvar	_a @ sp[(-13)+-8]
 31226  014140  0EEC               	movlw	236
 31227  014142  24E1               	addwf	fsr1l,w,c
 31228  014144  6ED9               	movwf	fsr2l,c
 31229  014146  0EFF               	movlw	255
 31230  014148  20E2               	addwfc	fsr1h,w,c
 31231  01414A  6EDA               	movwf	fsr2h,c
 31232  01414C  50DF               	movf	indf2,w,c
 31233  01414E  020C               	mulwf	(btemp+11)^0,c
 31234                           
 31235                           ;stkvar	_temp @ sp[(-13)+8]
 31236  014150  0EFB               	movlw	-5
 31237  014152  006F FFCF FFE3     	movff	prodl,plusw1
 31238  014158  0EFC               	movlw	-4
 31239  01415A  006F FFD3 FFE3     	movff	prodh,plusw1
 31240                           
 31241                           ;stkvar	_grs @ sp[(-13)+4]
 31242  014160  50E1               	movf	fsr1l,w,c
 31243  014162  0FF7               	addlw	-9
 31244  014164  6ED9               	movwf	fsr2l,c
 31245  014166  50E2               	movf	fsr1h,w,c
 31246  014168  6EDA               	movwf	fsr2h,c
 31247  01416A  0EFF               	movlw	255
 31248  01416C  22DA               	addwfc	fsr2h,f,c
 31249                           
 31250                           ;stkvar	_temp @ sp[(-13)+8]
 31251  01416E  0EFB               	movlw	-5
 31252  014170  50E3               	movf	plusw1,w,c
 31253  014172  26DE               	addwf	postinc2,f,c
 31254  014174  0E00               	movlw	0
 31255  014176  22DE               	addwfc	postinc2,f,c
 31256  014178  22DE               	addwfc	postinc2,f,c
 31257  01417A  22DE               	addwfc	postinc2,f,c
 31258                           
 31259                           ;stkvar	_prod @ sp[(-13)+0]
 31260  01417C  50E1               	movf	fsr1l,w,c
 31261  01417E  0FF3               	addlw	-13
 31262  014180  6ED9               	movwf	fsr2l,c
 31263  014182  50E2               	movf	fsr1h,w,c
 31264  014184  6EDA               	movwf	fsr2h,c
 31265  014186  0EFF               	movlw	255
 31266  014188  22DA               	addwfc	fsr2h,f,c
 31267                           
 31268                           ;stkvar	_temp @ sp[(-13)+8]
 31269  01418A  0EFC               	movlw	252
 31270  01418C  24E1               	addwf	fsr1l,w,c
 31271  01418E  6EE9               	movwf	fsr0l,c
 31272  014190  0EFF               	movlw	255
 31273  014192  20E2               	addwfc	fsr1h,w,c
 31274  014194  6EEA               	movwf	fsr0h,c
 31275  014196  50EF               	movf	indf0,w,c
 31276  014198  26DE               	addwf	postinc2,f,c
 31277  01419A  0E00               	movlw	0
 31278  01419C  22DE               	addwfc	postinc2,f,c
 31279  01419E  22DE               	addwfc	postinc2,f,c
 31280  0141A0  22DE               	addwfc	postinc2,f,c
 31281                           
 31282                           ;stkvar	_b @ sp[(-13)+-4]
 31283  0141A2  0EF1               	movlw	241
 31284  0141A4  24E1               	addwf	fsr1l,w,c
 31285  0141A6  6ED9               	movwf	fsr2l,c
 31286  0141A8  0EFF               	movlw	255
 31287  0141AA  20E2               	addwfc	fsr1h,w,c
 31288  0141AC  6EDA               	movwf	fsr2h,c
 31289  0141AE  50DF               	movf	indf2,w,c
 31290  0141B0  6E0C               	movwf	(btemp+11)^0,c
 31291                           
 31292                           ;stkvar	_a @ sp[(-13)+-8]
 31293  0141B2  0EEB               	movlw	-21
 31294  0141B4  50E3               	movf	plusw1,w,c
 31295  0141B6  020C               	mulwf	(btemp+11)^0,c
 31296                           
 31297                           ;stkvar	_temp @ sp[(-13)+8]
 31298  0141B8  0EFB               	movlw	-5
 31299  0141BA  006F FFCF FFE3     	movff	prodl,plusw1
 31300  0141C0  0EFC               	movlw	-4
 31301  0141C2  006F FFD3 FFE3     	movff	prodh,plusw1
 31302                           
 31303                           ;stkvar	_grs @ sp[(-13)+4]
 31304  0141C8  50E1               	movf	fsr1l,w,c
 31305  0141CA  0FF7               	addlw	-9
 31306  0141CC  6ED9               	movwf	fsr2l,c
 31307  0141CE  50E2               	movf	fsr1h,w,c
 31308  0141D0  6EDA               	movwf	fsr2h,c
 31309  0141D2  0EFF               	movlw	255
 31310  0141D4  22DA               	addwfc	fsr2h,f,c
 31311                           
 31312                           ;stkvar	_temp @ sp[(-13)+8]
 31313  0141D6  0EFB               	movlw	-5
 31314  0141D8  50E3               	movf	plusw1,w,c
 31315  0141DA  26DE               	addwf	postinc2,f,c
 31316  0141DC  0E00               	movlw	0
 31317  0141DE  22DE               	addwfc	postinc2,f,c
 31318  0141E0  22DE               	addwfc	postinc2,f,c
 31319  0141E2  22DE               	addwfc	postinc2,f,c
 31320                           
 31321                           ;stkvar	_prod @ sp[(-13)+0]
 31322  0141E4  50E1               	movf	fsr1l,w,c
 31323  0141E6  0FF3               	addlw	-13
 31324  0141E8  6ED9               	movwf	fsr2l,c
 31325  0141EA  50E2               	movf	fsr1h,w,c
 31326  0141EC  6EDA               	movwf	fsr2h,c
 31327  0141EE  0EFF               	movlw	255
 31328  0141F0  22DA               	addwfc	fsr2h,f,c
 31329                           
 31330                           ;stkvar	_temp @ sp[(-13)+8]
 31331  0141F2  0EFC               	movlw	252
 31332  0141F4  24E1               	addwf	fsr1l,w,c
 31333  0141F6  6EE9               	movwf	fsr0l,c
 31334  0141F8  0EFF               	movlw	255
 31335  0141FA  20E2               	addwfc	fsr1h,w,c
 31336  0141FC  6EEA               	movwf	fsr0h,c
 31337  0141FE  50EF               	movf	indf0,w,c
 31338  014200  26DE               	addwf	postinc2,f,c
 31339  014202  0E00               	movlw	0
 31340  014204  22DE               	addwfc	postinc2,f,c
 31341  014206  22DE               	addwfc	postinc2,f,c
 31342  014208  22DE               	addwfc	postinc2,f,c
 31343                           
 31344                           ;stkvar	_grs @ sp[(-13)+4]
 31345  01420A  50E1               	movf	fsr1l,w,c
 31346  01420C  0FF7               	addlw	-9
 31347  01420E  6ED9               	movwf	fsr2l,c
 31348  014210  50E2               	movf	fsr1h,w,c
 31349  014212  6EDA               	movwf	fsr2h,c
 31350  014214  0EFF               	movlw	255
 31351  014216  22DA               	addwfc	fsr2h,f,c
 31352  014218  0E08               	movlw	8
 31353  01421A                     u7185:
 31354  01421A  90D8               	bcf	status,0,c
 31355  01421C  36DE               	rlcf	postinc2,f,c
 31356  01421E  36DE               	rlcf	postinc2,f,c
 31357  014220  36DE               	rlcf	postinc2,f,c
 31358  014222  36DD               	rlcf	postdec2,f,c
 31359  014224  52DD               	movf	postdec2,f,c
 31360  014226  52DD               	movf	postdec2,f,c
 31361  014228  2EE8               	decfsz	wreg,f,c
 31362  01422A  D7F7               	goto	u7185
 31363                           
 31364                           ;stkvar	_b @ sp[(-13)+-4]
 31365  01422C  0EF0               	movlw	240
 31366  01422E  24E1               	addwf	fsr1l,w,c
 31367  014230  6ED9               	movwf	fsr2l,c
 31368  014232  0EFF               	movlw	255
 31369  014234  20E2               	addwfc	fsr1h,w,c
 31370  014236  6EDA               	movwf	fsr2h,c
 31371  014238  50DF               	movf	indf2,w,c
 31372  01423A  6E0C               	movwf	(btemp+11)^0,c
 31373                           
 31374                           ;stkvar	_a @ sp[(-13)+-8]
 31375  01423C  0EEB               	movlw	-21
 31376  01423E  50E3               	movf	plusw1,w,c
 31377  014240  020C               	mulwf	(btemp+11)^0,c
 31378                           
 31379                           ;stkvar	_temp @ sp[(-13)+8]
 31380  014242  0EFB               	movlw	-5
 31381  014244  006F FFCF FFE3     	movff	prodl,plusw1
 31382  01424A  0EFC               	movlw	-4
 31383  01424C  006F FFD3 FFE3     	movff	prodh,plusw1
 31384                           
 31385                           ;stkvar	_temp @ sp[(-13)+8]
 31386  014252  0EFB               	movlw	-5
 31387  014254  006F FF8C  F00B    	movff	plusw1,btemp+10
 31388  01425A  0EFC               	movlw	-4
 31389  01425C  006F FF8C  F00C    	movff	plusw1,btemp+11
 31390                           
 31391                           ;stkvar	_grs @ sp[(-13)+4]
 31392  014262  50E1               	movf	fsr1l,w,c
 31393  014264  0FF7               	addlw	-9
 31394  014266  6ED9               	movwf	fsr2l,c
 31395  014268  50E2               	movf	fsr1h,w,c
 31396  01426A  6EDA               	movwf	fsr2h,c
 31397  01426C  0EFF               	movlw	255
 31398  01426E  22DA               	addwfc	fsr2h,f,c
 31399  014270  500B               	movf	(btemp+10)^0,w,c
 31400  014272  26DE               	addwf	postinc2,f,c
 31401  014274  500C               	movf	(btemp+11)^0,w,c
 31402  014276  22DE               	addwfc	postinc2,f,c
 31403  014278  0E00               	movlw	0
 31404  01427A  22DE               	addwfc	postinc2,f,c
 31405  01427C  22DE               	addwfc	postinc2,f,c
 31406                           
 31407                           ;stkvar	_b @ sp[(-13)+-4]
 31408  01427E  0EEF               	movlw	-17
 31409  014280  006F FF8C  F00C    	movff	plusw1,btemp+11
 31410                           
 31411                           ;stkvar	_a @ sp[(-13)+-8]
 31412  014286  0EEC               	movlw	236
 31413  014288  24E1               	addwf	fsr1l,w,c
 31414  01428A  6ED9               	movwf	fsr2l,c
 31415  01428C  0EFF               	movlw	255
 31416  01428E  20E2               	addwfc	fsr1h,w,c
 31417  014290  6EDA               	movwf	fsr2h,c
 31418  014292  50DF               	movf	indf2,w,c
 31419  014294  020C               	mulwf	(btemp+11)^0,c
 31420                           
 31421                           ;stkvar	_temp @ sp[(-13)+8]
 31422  014296  0EFB               	movlw	-5
 31423  014298  006F FFCF FFE3     	movff	prodl,plusw1
 31424  01429E  0EFC               	movlw	-4
 31425  0142A0  006F FFD3 FFE3     	movff	prodh,plusw1
 31426                           
 31427                           ;stkvar	_temp @ sp[(-13)+8]
 31428  0142A6  0EFB               	movlw	-5
 31429  0142A8  006F FF8C  F00B    	movff	plusw1,btemp+10
 31430  0142AE  0EFC               	movlw	-4
 31431  0142B0  006F FF8C  F00C    	movff	plusw1,btemp+11
 31432                           
 31433                           ;stkvar	_grs @ sp[(-13)+4]
 31434  0142B6  50E1               	movf	fsr1l,w,c
 31435  0142B8  0FF7               	addlw	-9
 31436  0142BA  6ED9               	movwf	fsr2l,c
 31437  0142BC  50E2               	movf	fsr1h,w,c
 31438  0142BE  6EDA               	movwf	fsr2h,c
 31439  0142C0  0EFF               	movlw	255
 31440  0142C2  22DA               	addwfc	fsr2h,f,c
 31441  0142C4  500B               	movf	(btemp+10)^0,w,c
 31442  0142C6  26DE               	addwf	postinc2,f,c
 31443  0142C8  500C               	movf	(btemp+11)^0,w,c
 31444  0142CA  22DE               	addwfc	postinc2,f,c
 31445  0142CC  0E00               	movlw	0
 31446  0142CE  22DE               	addwfc	postinc2,f,c
 31447  0142D0  22DE               	addwfc	postinc2,f,c
 31448                           
 31449                           ;stkvar	_grs @ sp[(-13)+4]
 31450  0142D2  50E1               	movf	fsr1l,w,c
 31451  0142D4  0FF7               	addlw	-9
 31452  0142D6  6ED9               	movwf	fsr2l,c
 31453  0142D8  50E2               	movf	fsr1h,w,c
 31454  0142DA  6EDA               	movwf	fsr2h,c
 31455  0142DC  0EFF               	movlw	255
 31456  0142DE  22DA               	addwfc	fsr2h,f,c
 31457  0142E0  0E08               	movlw	8
 31458  0142E2                     u7195:
 31459  0142E2  90D8               	bcf	status,0,c
 31460  0142E4  36DE               	rlcf	postinc2,f,c
 31461  0142E6  36DE               	rlcf	postinc2,f,c
 31462  0142E8  36DE               	rlcf	postinc2,f,c
 31463  0142EA  36DD               	rlcf	postdec2,f,c
 31464  0142EC  52DD               	movf	postdec2,f,c
 31465  0142EE  52DD               	movf	postdec2,f,c
 31466  0142F0  2EE8               	decfsz	wreg,f,c
 31467  0142F2  D7F7               	goto	u7195
 31468                           
 31469                           ;stkvar	_b @ sp[(-13)+-4]
 31470  0142F4  0EEF               	movlw	-17
 31471  0142F6  006F FF8C  F00C    	movff	plusw1,btemp+11
 31472                           
 31473                           ;stkvar	_a @ sp[(-13)+-8]
 31474  0142FC  0EEB               	movlw	-21
 31475  0142FE  50E3               	movf	plusw1,w,c
 31476  014300  020C               	mulwf	(btemp+11)^0,c
 31477                           
 31478                           ;stkvar	_temp @ sp[(-13)+8]
 31479  014302  0EFB               	movlw	-5
 31480  014304  006F FFCF FFE3     	movff	prodl,plusw1
 31481  01430A  0EFC               	movlw	-4
 31482  01430C  006F FFD3 FFE3     	movff	prodh,plusw1
 31483                           
 31484                           ;stkvar	_temp @ sp[(-13)+8]
 31485  014312  0EFB               	movlw	-5
 31486  014314  006F FF8C  F00B    	movff	plusw1,btemp+10
 31487  01431A  0EFC               	movlw	-4
 31488  01431C  006F FF8C  F00C    	movff	plusw1,btemp+11
 31489                           
 31490                           ;stkvar	_grs @ sp[(-13)+4]
 31491  014322  50E1               	movf	fsr1l,w,c
 31492  014324  0FF7               	addlw	-9
 31493  014326  6ED9               	movwf	fsr2l,c
 31494  014328  50E2               	movf	fsr1h,w,c
 31495  01432A  6EDA               	movwf	fsr2h,c
 31496  01432C  0EFF               	movlw	255
 31497  01432E  22DA               	addwfc	fsr2h,f,c
 31498  014330  500B               	movf	(btemp+10)^0,w,c
 31499  014332  26DE               	addwf	postinc2,f,c
 31500  014334  500C               	movf	(btemp+11)^0,w,c
 31501  014336  22DE               	addwfc	postinc2,f,c
 31502  014338  0E00               	movlw	0
 31503  01433A  22DE               	addwfc	postinc2,f,c
 31504  01433C  22DE               	addwfc	postinc2,f,c
 31505                           
 31506                           ;stkvar	_b @ sp[(-13)+-4]
 31507  01433E  0EF0               	movlw	240
 31508  014340  24E1               	addwf	fsr1l,w,c
 31509  014342  6ED9               	movwf	fsr2l,c
 31510  014344  0EFF               	movlw	255
 31511  014346  20E2               	addwfc	fsr1h,w,c
 31512  014348  6EDA               	movwf	fsr2h,c
 31513  01434A  50DF               	movf	indf2,w,c
 31514  01434C  6E0C               	movwf	(btemp+11)^0,c
 31515                           
 31516                           ;stkvar	_a @ sp[(-13)+-8]
 31517  01434E  0EED               	movlw	237
 31518  014350  24E1               	addwf	fsr1l,w,c
 31519  014352  6ED9               	movwf	fsr2l,c
 31520  014354  0EFF               	movlw	255
 31521  014356  20E2               	addwfc	fsr1h,w,c
 31522  014358  6EDA               	movwf	fsr2h,c
 31523  01435A  50DF               	movf	indf2,w,c
 31524  01435C  020C               	mulwf	(btemp+11)^0,c
 31525                           
 31526                           ;stkvar	_temp @ sp[(-13)+8]
 31527  01435E  0EFB               	movlw	-5
 31528  014360  006F FFCF FFE3     	movff	prodl,plusw1
 31529  014366  0EFC               	movlw	-4
 31530  014368  006F FFD3 FFE3     	movff	prodh,plusw1
 31531                           
 31532                           ;stkvar	_temp @ sp[(-13)+8]
 31533  01436E  0EFB               	movlw	-5
 31534  014370  006F FF8C  F00B    	movff	plusw1,btemp+10
 31535  014376  0EFC               	movlw	-4
 31536  014378  006F FF8C  F00C    	movff	plusw1,btemp+11
 31537                           
 31538                           ;stkvar	_prod @ sp[(-13)+0]
 31539  01437E  50E1               	movf	fsr1l,w,c
 31540  014380  0FF3               	addlw	-13
 31541  014382  6ED9               	movwf	fsr2l,c
 31542  014384  50E2               	movf	fsr1h,w,c
 31543  014386  6EDA               	movwf	fsr2h,c
 31544  014388  0EFF               	movlw	255
 31545  01438A  22DA               	addwfc	fsr2h,f,c
 31546  01438C  500B               	movf	(btemp+10)^0,w,c
 31547  01438E  26DE               	addwf	postinc2,f,c
 31548  014390  500C               	movf	(btemp+11)^0,w,c
 31549  014392  22DE               	addwfc	postinc2,f,c
 31550  014394  0E00               	movlw	0
 31551  014396  22DE               	addwfc	postinc2,f,c
 31552  014398  22DE               	addwfc	postinc2,f,c
 31553                           
 31554                           ;stkvar	_b @ sp[(-13)+-4]
 31555  01439A  0EF1               	movlw	241
 31556  01439C  24E1               	addwf	fsr1l,w,c
 31557  01439E  6ED9               	movwf	fsr2l,c
 31558  0143A0  0EFF               	movlw	255
 31559  0143A2  20E2               	addwfc	fsr1h,w,c
 31560  0143A4  6EDA               	movwf	fsr2h,c
 31561  0143A6  50DF               	movf	indf2,w,c
 31562  0143A8  6E0C               	movwf	(btemp+11)^0,c
 31563                           
 31564                           ;stkvar	_a @ sp[(-13)+-8]
 31565  0143AA  0EEC               	movlw	236
 31566  0143AC  24E1               	addwf	fsr1l,w,c
 31567  0143AE  6ED9               	movwf	fsr2l,c
 31568  0143B0  0EFF               	movlw	255
 31569  0143B2  20E2               	addwfc	fsr1h,w,c
 31570  0143B4  6EDA               	movwf	fsr2h,c
 31571  0143B6  50DF               	movf	indf2,w,c
 31572  0143B8  020C               	mulwf	(btemp+11)^0,c
 31573                           
 31574                           ;stkvar	_temp @ sp[(-13)+8]
 31575  0143BA  0EFB               	movlw	-5
 31576  0143BC  006F FFCF FFE3     	movff	prodl,plusw1
 31577  0143C2  0EFC               	movlw	-4
 31578  0143C4  006F FFD3 FFE3     	movff	prodh,plusw1
 31579                           
 31580                           ;stkvar	_temp @ sp[(-13)+8]
 31581  0143CA  0EFB               	movlw	-5
 31582  0143CC  006F FF8C  F00B    	movff	plusw1,btemp+10
 31583  0143D2  0EFC               	movlw	-4
 31584  0143D4  006F FF8C  F00C    	movff	plusw1,btemp+11
 31585                           
 31586                           ;stkvar	_prod @ sp[(-13)+0]
 31587  0143DA  50E1               	movf	fsr1l,w,c
 31588  0143DC  0FF3               	addlw	-13
 31589  0143DE  6ED9               	movwf	fsr2l,c
 31590  0143E0  50E2               	movf	fsr1h,w,c
 31591  0143E2  6EDA               	movwf	fsr2h,c
 31592  0143E4  0EFF               	movlw	255
 31593  0143E6  22DA               	addwfc	fsr2h,f,c
 31594  0143E8  500B               	movf	(btemp+10)^0,w,c
 31595  0143EA  26DE               	addwf	postinc2,f,c
 31596  0143EC  500C               	movf	(btemp+11)^0,w,c
 31597  0143EE  22DE               	addwfc	postinc2,f,c
 31598  0143F0  0E00               	movlw	0
 31599  0143F2  22DE               	addwfc	postinc2,f,c
 31600  0143F4  22DE               	addwfc	postinc2,f,c
 31601                           
 31602                           ;stkvar	_b @ sp[(-13)+-4]
 31603  0143F6  0EF1               	movlw	241
 31604  0143F8  24E1               	addwf	fsr1l,w,c
 31605  0143FA  6ED9               	movwf	fsr2l,c
 31606  0143FC  0EFF               	movlw	255
 31607  0143FE  20E2               	addwfc	fsr1h,w,c
 31608  014400  6EDA               	movwf	fsr2h,c
 31609  014402  50DF               	movf	indf2,w,c
 31610  014404  6E0C               	movwf	(btemp+11)^0,c
 31611                           
 31612                           ;stkvar	_a @ sp[(-13)+-8]
 31613  014406  0EED               	movlw	237
 31614  014408  24E1               	addwf	fsr1l,w,c
 31615  01440A  6ED9               	movwf	fsr2l,c
 31616  01440C  0EFF               	movlw	255
 31617  01440E  20E2               	addwfc	fsr1h,w,c
 31618  014410  6EDA               	movwf	fsr2h,c
 31619  014412  50DF               	movf	indf2,w,c
 31620  014414  020C               	mulwf	(btemp+11)^0,c
 31621                           
 31622                           ;stkvar	_temp @ sp[(-13)+8]
 31623  014416  0EFB               	movlw	-5
 31624  014418  006F FFCF FFE3     	movff	prodl,plusw1
 31625  01441E  0EFC               	movlw	-4
 31626  014420  006F FFD3 FFE3     	movff	prodh,plusw1
 31627                           
 31628                           ;stkvar	_temp @ sp[(-13)+8]
 31629  014426  0EFB               	movlw	-5
 31630  014428  006F FF8C  F00B    	movff	plusw1,btemp+10
 31631  01442E  0EFC               	movlw	-4
 31632  014430  006F FF8C  F00C    	movff	plusw1,btemp+11
 31633  014436  500B               	movf	(btemp+10)^0,w,c
 31634  014438  6E05               	movwf	(btemp+4)^0,c
 31635  01443A  500C               	movf	(btemp+11)^0,w,c
 31636  01443C  6E06               	movwf	(btemp+5)^0,c
 31637  01443E  6A07               	clrf	(btemp+6)^0,c
 31638  014440  6A08               	clrf	(btemp+7)^0,c
 31639  014442  0060  F01C  F008   	movff	btemp+6,btemp+7
 31640  014448  0060  F018  F007   	movff	btemp+5,btemp+6
 31641  01444E  0060  F014  F006   	movff	btemp+4,btemp+5
 31642  014454  6A05               	clrf	(btemp+4)^0,c
 31643                           
 31644                           ;stkvar	_prod @ sp[(-13)+0]
 31645  014456  50E1               	movf	fsr1l,w,c
 31646  014458  0FF3               	addlw	-13
 31647  01445A  6ED9               	movwf	fsr2l,c
 31648  01445C  50E2               	movf	fsr1h,w,c
 31649  01445E  6EDA               	movwf	fsr2h,c
 31650  014460  0EFF               	movlw	255
 31651  014462  22DA               	addwfc	fsr2h,f,c
 31652  014464  5005               	movf	(btemp+4)^0,w,c
 31653  014466  26DE               	addwf	postinc2,f,c
 31654  014468  5006               	movf	(btemp+5)^0,w,c
 31655  01446A  22DE               	addwfc	postinc2,f,c
 31656  01446C  5007               	movf	(btemp+6)^0,w,c
 31657  01446E  22DE               	addwfc	postinc2,f,c
 31658  014470  5008               	movf	(btemp+7)^0,w,c
 31659  014472  22DE               	addwfc	postinc2,f,c
 31660                           
 31661                           ;stkvar	_prod @ sp[(-13)+0]
 31662  014474  50E1               	movf	fsr1l,w,c
 31663  014476  0FF3               	addlw	-13
 31664  014478  6ED9               	movwf	fsr2l,c
 31665  01447A  50E2               	movf	fsr1h,w,c
 31666  01447C  6EDA               	movwf	fsr2h,c
 31667  01447E  0EFF               	movlw	255
 31668  014480  22DA               	addwfc	fsr2h,f,c
 31669                           
 31670                           ;stkvar	_grs @ sp[(-13)+4]
 31671  014482  0EFA               	movlw	250
 31672  014484  24E1               	addwf	fsr1l,w,c
 31673  014486  6EE9               	movwf	fsr0l,c
 31674  014488  0EFF               	movlw	255
 31675  01448A  20E2               	addwfc	fsr1h,w,c
 31676  01448C  6EEA               	movwf	fsr0h,c
 31677  01448E  50EF               	movf	indf0,w,c
 31678  014490  26DE               	addwf	postinc2,f,c
 31679  014492  0E00               	movlw	0
 31680  014494  22DE               	addwfc	postinc2,f,c
 31681  014496  22DE               	addwfc	postinc2,f,c
 31682  014498  22DE               	addwfc	postinc2,f,c
 31683                           
 31684                           ;stkvar	_grs @ sp[(-13)+4]
 31685  01449A  50E1               	movf	fsr1l,w,c
 31686  01449C  0FF7               	addlw	-9
 31687  01449E  6ED9               	movwf	fsr2l,c
 31688  0144A0  50E2               	movf	fsr1h,w,c
 31689  0144A2  6EDA               	movwf	fsr2h,c
 31690  0144A4  0EFF               	movlw	255
 31691  0144A6  22DA               	addwfc	fsr2h,f,c
 31692  0144A8  0E08               	movlw	8
 31693  0144AA                     u7205:
 31694  0144AA  90D8               	bcf	status,0,c
 31695  0144AC  36DE               	rlcf	postinc2,f,c
 31696  0144AE  36DE               	rlcf	postinc2,f,c
 31697  0144B0  36DE               	rlcf	postinc2,f,c
 31698  0144B2  36DD               	rlcf	postdec2,f,c
 31699  0144B4  52DD               	movf	postdec2,f,c
 31700  0144B6  52DD               	movf	postdec2,f,c
 31701  0144B8  2EE8               	decfsz	wreg,f,c
 31702  0144BA  D7F7               	goto	u7205
 31703  0144BC  0E82               	movlw	130
 31704  0144BE  6E0B               	movwf	(btemp+10)^0,c
 31705  0144C0  0EFF               	movlw	255
 31706  0144C2  6E0C               	movwf	(btemp+11)^0,c
 31707                           
 31708                           ;stkvar	_bexp @ sp[(-13)+10]
 31709  0144C4  0EFD               	movlw	-3
 31710  0144C6  50E3               	movf	plusw1,w,c
 31711  0144C8  6E09               	movwf	(btemp+8)^0,c
 31712  0144CA  6A0A               	clrf	(btemp+9)^0,c
 31713                           
 31714                           ;stkvar	_aexp @ sp[(-13)+11]
 31715  0144CC  0EFE               	movlw	-2
 31716  0144CE  50E3               	movf	plusw1,w,c
 31717  0144D0  2609               	addwf	(btemp+8)^0,f,c
 31718  0144D2  0E00               	movlw	0
 31719  0144D4  220A               	addwfc	(btemp+9)^0,f,c
 31720  0144D6  500B               	movf	(btemp+10)^0,w,c
 31721  0144D8  2609               	addwf	(btemp+8)^0,f,c
 31722  0144DA  500C               	movf	(btemp+11)^0,w,c
 31723  0144DC  220A               	addwfc	(btemp+9)^0,f,c
 31724                           
 31725                           ;stkvar	_temp @ sp[(-13)+8]
 31726  0144DE  0EFB               	movlw	-5
 31727  0144E0  0060  F027  FFE3   	movff	btemp+8,plusw1
 31728  0144E6  0EFC               	movlw	-4
 31729  0144E8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31730  0144EE  D021               	goto	l8934
 31731  0144F0                     l8924:
 31732                           
 31733                           ;stkvar	_prod @ sp[(-13)+0]
 31734  0144F0  90D8               	bcf	status,0,c
 31735  0144F2  0EF3               	movlw	-13
 31736  0144F4  36E3               	rlcf	plusw1,f,c
 31737  0144F6  0EF4               	movlw	-12
 31738  0144F8  36E3               	rlcf	plusw1,f,c
 31739  0144FA  0EF5               	movlw	-11
 31740  0144FC  36E3               	rlcf	plusw1,f,c
 31741  0144FE  0EF6               	movlw	-10
 31742  014500  36E3               	rlcf	plusw1,f,c
 31743                           
 31744                           ;stkvar	_grs @ sp[(-13)+4]
 31745  014502  0EFA               	movlw	-6
 31746  014504  AEE3               	btfss	plusw1,7,c
 31747  014506  D002               	goto	l8930
 31748                           
 31749                           ;stkvar	_prod @ sp[(-13)+0]
 31750  014508  0EF3               	movlw	-13
 31751  01450A  80E3               	bsf	plusw1,0,c
 31752  01450C                     l8930:
 31753                           
 31754                           ;stkvar	_grs @ sp[(-13)+4]
 31755  01450C  90D8               	bcf	status,0,c
 31756  01450E  0EF7               	movlw	-9
 31757  014510  36E3               	rlcf	plusw1,f,c
 31758  014512  0EF8               	movlw	-8
 31759  014514  36E3               	rlcf	plusw1,f,c
 31760  014516  0EF9               	movlw	-7
 31761  014518  36E3               	rlcf	plusw1,f,c
 31762  01451A  0EFA               	movlw	-6
 31763  01451C  36E3               	rlcf	plusw1,f,c
 31764                           
 31765                           ;stkvar	_temp @ sp[(-13)+8]
 31766  01451E  50E1               	movf	fsr1l,w,c
 31767  014520  0FFB               	addlw	-5
 31768  014522  6ED9               	movwf	fsr2l,c
 31769  014524  50E2               	movf	fsr1h,w,c
 31770  014526  6EDA               	movwf	fsr2h,c
 31771  014528  0EFF               	movlw	255
 31772  01452A  22DA               	addwfc	fsr2h,f,c
 31773  01452C  06DE               	decf	postinc2,f,c
 31774  01452E  0E00               	movlw	0
 31775  014530  5ADD               	subwfb	postdec2,f,c
 31776  014532                     l8934:
 31777                           
 31778                           ;stkvar	_prod @ sp[(-13)+0]
 31779  014532  0EF5               	movlw	-11
 31780  014534  AEE3               	btfss	plusw1,7,c
 31781  014536  D7DC               	goto	l8924
 31782                           
 31783                           ;stkvar	_aexp @ sp[(-13)+11]
 31784  014538  0EFE               	movlw	-2
 31785  01453A  6AE3               	clrf	plusw1,c
 31786                           
 31787                           ;stkvar	_grs @ sp[(-13)+4]
 31788  01453C  0EFA               	movlw	-6
 31789  01453E  AEE3               	btfss	plusw1,7,c
 31790  014540  D020               	goto	l8948
 31791                           
 31792                           ;stkvar	_grs @ sp[(-13)+4]
 31793  014542  50E1               	movf	fsr1l,w,c
 31794  014544  0FF7               	addlw	-9
 31795  014546  6ED9               	movwf	fsr2l,c
 31796  014548  50E2               	movf	fsr1h,w,c
 31797  01454A  6EDA               	movwf	fsr2h,c
 31798  01454C  0EFF               	movlw	255
 31799  01454E  22DA               	addwfc	fsr2h,f,c
 31800  014550  0EFF               	movlw	255
 31801  014552  14DE               	andwf	postinc2,w,c
 31802  014554  6E09               	movwf	(btemp+8)^0,c
 31803  014556  0EFF               	movlw	255
 31804  014558  14DE               	andwf	postinc2,w,c
 31805  01455A  6E0A               	movwf	(btemp+9)^0,c
 31806  01455C  0EFF               	movlw	255
 31807  01455E  14DE               	andwf	postinc2,w,c
 31808  014560  6E0B               	movwf	(btemp+10)^0,c
 31809  014562  0E7F               	movlw	127
 31810  014564  14DE               	andwf	postinc2,w,c
 31811  014566  6E0C               	movwf	(btemp+11)^0,c
 31812  014568  5009               	movf	(btemp+8)^0,w,c
 31813  01456A  100A               	iorwf	(btemp+9)^0,w,c
 31814  01456C  100B               	iorwf	(btemp+10)^0,w,c
 31815  01456E  100C               	iorwf	(btemp+11)^0,w,c
 31816  014570  B4D8               	btfsc	status,2,c
 31817  014572  D004               	goto	l8944
 31818  014574                     u7240:
 31819                           
 31820                           ;stkvar	_aexp @ sp[(-13)+11]
 31821  014574  0EFE               	movlw	-2
 31822  014576  6AE3               	clrf	plusw1,c
 31823  014578  2AE3               	incf	plusw1,f,c
 31824  01457A  D003               	goto	l8948
 31825  01457C                     l8944:
 31826                           
 31827                           ;stkvar	_prod @ sp[(-13)+0]
 31828  01457C  0EF3               	movlw	-13
 31829  01457E  B0E3               	btfsc	plusw1,0,c
 31830  014580  D7F9               	goto	u7240
 31831  014582                     l8948:
 31832                           
 31833                           ;stkvar	_aexp @ sp[(-13)+11]
 31834  014582  0EFE               	movlw	-2
 31835  014584  50E3               	movf	plusw1,w,c
 31836  014586  B4D8               	btfsc	status,2,c
 31837  014588  D036               	goto	l8958
 31838                           
 31839                           ;stkvar	_prod @ sp[(-13)+0]
 31840  01458A  50E1               	movf	fsr1l,w,c
 31841  01458C  0FF3               	addlw	-13
 31842  01458E  6ED9               	movwf	fsr2l,c
 31843  014590  50E2               	movf	fsr1h,w,c
 31844  014592  6EDA               	movwf	fsr2h,c
 31845  014594  0EFF               	movlw	255
 31846  014596  22DA               	addwfc	fsr2h,f,c
 31847  014598  2ADE               	incf	postinc2,f,c
 31848  01459A  0E00               	movlw	0
 31849  01459C  22DE               	addwfc	postinc2,f,c
 31850  01459E  22DE               	addwfc	postinc2,f,c
 31851  0145A0  22DE               	addwfc	postinc2,f,c
 31852                           
 31853                           ;stkvar	_prod @ sp[(-13)+0]
 31854  0145A2  0EF6               	movlw	-10
 31855  0145A4  A0E3               	btfss	plusw1,0,c
 31856  0145A6  D027               	goto	l8958
 31857  0145A8  0E01               	movlw	1
 31858  0145AA  6E0C               	movwf	(btemp+11)^0,c
 31859                           
 31860                           ;stkvar	_prod @ sp[(-13)+0]
 31861  0145AC  50E1               	movf	fsr1l,w,c
 31862  0145AE  0FF3               	addlw	-13
 31863  0145B0  6ED9               	movwf	fsr2l,c
 31864  0145B2  50E2               	movf	fsr1h,w,c
 31865  0145B4  6EDA               	movwf	fsr2h,c
 31866  0145B6  0EFF               	movlw	255
 31867  0145B8  22DA               	addwfc	fsr2h,f,c
 31868  0145BA  280C               	incf	(btemp+11)^0,w,c
 31869  0145BC  52DE               	movf	postinc2,f,c
 31870  0145BE  D008               	goto	u7280
 31871  0145C0                     u7285:
 31872  0145C0  52DE               	movf	postinc2,f,c
 31873  0145C2  90D8               	bcf	status,0,c
 31874  0145C4  BEDC               	btfsc	preinc2,7,c
 31875  0145C6  80D8               	bsf	status,0,c
 31876  0145C8  32DD               	rrcf	postdec2,f,c
 31877  0145CA  32DD               	rrcf	postdec2,f,c
 31878  0145CC  32DD               	rrcf	postdec2,f,c
 31879  0145CE  32DE               	rrcf	postinc2,f,c
 31880  0145D0                     u7280:
 31881  0145D0  2EE8               	decfsz	wreg,f,c
 31882  0145D2  D7F6               	goto	u7285
 31883                           
 31884                           ;stkvar	_temp @ sp[(-13)+8]
 31885  0145D4  0EFB               	movlw	-5
 31886  0145D6  50E3               	movf	plusw1,w,c
 31887  0145D8  0F01               	addlw	1
 31888  0145DA  6E01               	movwf	btemp^0,c
 31889  0145DC  0EFB               	movlw	-5
 31890  0145DE  0060  F007  FFE3   	movff	btemp,plusw1
 31891  0145E4  6A01               	clrf	btemp^0,c
 31892  0145E6  0EFC               	movlw	-4
 31893  0145E8  50E3               	movf	plusw1,w,c
 31894  0145EA  2001               	addwfc	btemp^0,w,c
 31895  0145EC  6E01               	movwf	btemp^0,c
 31896  0145EE  0EFC               	movlw	-4
 31897  0145F0  0060  F007  FFE3   	movff	btemp,plusw1
 31898  0145F6                     l8958:
 31899                           
 31900                           ;stkvar	_temp @ sp[(-13)+8]
 31901  0145F6  0EFC               	movlw	-4
 31902  0145F8  BEE3               	btfsc	plusw1,7,c
 31903  0145FA  D020               	goto	l8962
 31904  0145FC  0EFC               	movlw	-4
 31905  0145FE  50E3               	movf	plusw1,w,c
 31906  014600  E104               	bnz	u7290
 31907  014602  0EFB               	movlw	-5
 31908  014604  28E3               	incf	plusw1,w,c
 31909  014606  A0D8               	btfss	status,0,c
 31910  014608  D019               	goto	l8962
 31911  01460A                     u7290:
 31912  01460A  0E00               	movlw	0
 31913  01460C  6E09               	movwf	(btemp+8)^0,c
 31914  01460E  0E00               	movlw	0
 31915  014610  6E0A               	movwf	(btemp+9)^0,c
 31916  014612  0E80               	movlw	128
 31917  014614  6E0B               	movwf	(btemp+10)^0,c
 31918  014616  0E7F               	movlw	127
 31919  014618  6E0C               	movwf	(btemp+11)^0,c
 31920                           
 31921                           ;stkvar	_prod @ sp[(-13)+0]
 31922  01461A  0EF3               	movlw	-13
 31923  01461C  0060  F027  FFE3   	movff	btemp+8,plusw1
 31924  014622  0EF4               	movlw	-12
 31925  014624  0060  F02B  FFE3   	movff	btemp+9,plusw1
 31926  01462A  0EF5               	movlw	-11
 31927  01462C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 31928  014632  0EF6               	movlw	-10
 31929  014634  0060  F033  FFE3   	movff	btemp+11,plusw1
 31930  01463A  D044               	goto	l8978
 31931  01463C                     l8962:
 31932                           
 31933                           ;stkvar	_temp @ sp[(-13)+8]
 31934  01463C  0EFC               	movlw	-4
 31935  01463E  BEE3               	btfsc	plusw1,7,c
 31936  014640  D007               	goto	u7300
 31937  014642  0EFC               	movlw	-4
 31938  014644  50E3               	movf	plusw1,w,c
 31939  014646  E10F               	bnz	l8968
 31940  014648  0EFB               	movlw	-5
 31941  01464A  04E3               	decf	plusw1,w,c
 31942  01464C  B0D8               	btfsc	status,0,c
 31943  01464E  D00B               	goto	l8968
 31944  014650                     u7300:
 31945                           
 31946                           ;stkvar	_prod @ sp[(-13)+0]
 31947  014650  0EF3               	movlw	-13
 31948  014652  6AE3               	clrf	plusw1,c
 31949  014654  0EF4               	movlw	-12
 31950  014656  6AE3               	clrf	plusw1,c
 31951  014658  0EF5               	movlw	-11
 31952  01465A  6AE3               	clrf	plusw1,c
 31953  01465C  0EF6               	movlw	-10
 31954  01465E  6AE3               	clrf	plusw1,c
 31955                           
 31956                           ;stkvar	_sign @ sp[(-13)+12]
 31957  014660  0EFF               	movlw	-1
 31958  014662  6AE3               	clrf	plusw1,c
 31959  014664  D02F               	goto	l8978
 31960  014666                     l8968:
 31961                           
 31962                           ;stkvar	_temp @ sp[(-13)+8]
 31963                           ;stkvar	_bexp @ sp[(-13)+10]
 31964  014666  0EFB               	movlw	-5
 31965  014668  006F FF8C  F001    	movff	plusw1,btemp
 31966  01466E  0EFD               	movlw	-3
 31967  014670  0060  F007  FFE3   	movff	btemp,plusw1
 31968                           
 31969                           ;stkvar	_prod @ sp[(-13)+0]
 31970  014676  50E1               	movf	fsr1l,w,c
 31971  014678  0FF3               	addlw	-13
 31972  01467A  6ED9               	movwf	fsr2l,c
 31973  01467C  50E2               	movf	fsr1h,w,c
 31974  01467E  6EDA               	movwf	fsr2h,c
 31975  014680  0EFF               	movlw	255
 31976  014682  22DA               	addwfc	fsr2h,f,c
 31977  014684  0EFF               	movlw	255
 31978  014686  16DE               	andwf	postinc2,f,c
 31979  014688  0EFF               	movlw	255
 31980  01468A  16DE               	andwf	postinc2,f,c
 31981  01468C  0E7F               	movlw	127
 31982  01468E  16DE               	andwf	postinc2,f,c
 31983  014690  0E00               	movlw	0
 31984  014692  16DE               	andwf	postinc2,f,c
 31985                           
 31986                           ;stkvar	_bexp @ sp[(-13)+10]
 31987  014694  0EFD               	movlw	-3
 31988  014696  A0E3               	btfss	plusw1,0,c
 31989  014698  D008               	goto	l8976
 31990                           
 31991                           ;stkvar	_prod @ sp[(-13)+0]
 31992  01469A  0EF5               	movlw	245
 31993  01469C  24E1               	addwf	fsr1l,w,c
 31994  01469E  6ED9               	movwf	fsr2l,c
 31995  0146A0  0EFF               	movlw	255
 31996  0146A2  20E2               	addwfc	fsr1h,w,c
 31997  0146A4  6EDA               	movwf	fsr2h,c
 31998  0146A6  0E00               	movlw	0
 31999  0146A8  8EDB               	bsf	plusw2,7,c
 32000  0146AA                     l8976:
 32001                           
 32002                           ;stkvar	_prod @ sp[(-13)+0]
 32003  0146AA  0EF6               	movlw	246
 32004  0146AC  24E1               	addwf	fsr1l,w,c
 32005  0146AE  6ED9               	movwf	fsr2l,c
 32006  0146B0  0EFF               	movlw	255
 32007  0146B2  20E2               	addwfc	fsr1h,w,c
 32008  0146B4  6EDA               	movwf	fsr2h,c
 32009                           
 32010                           ;stkvar	_bexp @ sp[(-13)+10]
 32011  0146B6  0EFD               	movlw	-3
 32012  0146B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 32013  0146BE  90D8               	bcf	status,0,c
 32014  0146C0  300C               	rrcf	(btemp+11)^0,w,c
 32015  0146C2  6EDF               	movwf	indf2,c
 32016  0146C4                     l8978:
 32017                           
 32018                           ;stkvar	_sign @ sp[(-13)+12]
 32019  0146C4  0EFF               	movlw	-1
 32020  0146C6  006F FF8C  F00C    	movff	plusw1,btemp+11
 32021                           
 32022                           ;stkvar	_prod @ sp[(-13)+0]
 32023  0146CC  0EF6               	movlw	246
 32024  0146CE  24E1               	addwf	fsr1l,w,c
 32025  0146D0  6ED9               	movwf	fsr2l,c
 32026  0146D2  0EFF               	movlw	255
 32027  0146D4  20E2               	addwfc	fsr1h,w,c
 32028  0146D6  6EDA               	movwf	fsr2h,c
 32029  0146D8  500C               	movf	(btemp+11)^0,w,c
 32030  0146DA  12DF               	iorwf	indf2,f,c
 32031                           
 32032                           ;stkvar	_prod @ sp[(-13)+0]
 32033  0146DC  0EF3               	movlw	-13
 32034  0146DE  006F FF8C  F001    	movff	plusw1,btemp
 32035  0146E4  0EF4               	movlw	-12
 32036  0146E6  006F FF8C  F002    	movff	plusw1,btemp+1
 32037  0146EC  0EF5               	movlw	-11
 32038  0146EE  006F FF8C  F003    	movff	plusw1,btemp+2
 32039  0146F4  0EF6               	movlw	-10
 32040  0146F6  006F FF8C  F004    	movff	plusw1,btemp+3
 32041  0146FC                     l3165:
 32042                           
 32043                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 32044  0146FC  0EEB               	movlw	235
 32045  0146FE  26E1               	addwf	fsr1l,f,c
 32046  014700  0EFF               	movlw	255
 32047  014702  22E2               	addwfc	fsr1h,f,c
 32048  014704  0012               	return		;funcret
 32049  014706                     __end_of___flmul:
 32050                           	opt callstack 0
 32051                           
 32052 ;; *************** function _SYSTEM_Initialize *****************
 32053 ;; Defined at:
 32054 ;;		line 50 in file "mcc_generated_files/mcc.c"
 32055 ;; Parameters:    Size  Location     Type
 32056 ;;		None
 32057 ;; Auto vars:     Size  Location     Type
 32058 ;;		None
 32059 ;; Return value:  Size  Location     Type
 32060 ;;                  1  [STACK] void 
 32061 ;; Registers used:
 32062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 32063 ;; Tracked objects:
 32064 ;;		On entry : 0/0
 32065 ;;		On exit  : 3F/3C
 32066 ;;		Unchanged: 0/0
 32067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32072 ;;Total ram usage:        0 bytes
 32073 ;; Hardware stack levels used:    1
 32074 ;; Hardware stack levels required when called:   17
 32075 ;; This function calls:
 32076 ;;		_ADCC_Initialize
 32077 ;;		_CLKREF_Initialize
 32078 ;;		_DMA1_Initialize
 32079 ;;		_DMA2_Initialize
 32080 ;;		_EXT_INT_Initialize
 32081 ;;		_FVR_Initialize
 32082 ;;		_INTERRUPT_Initialize
 32083 ;;		_OSCILLATOR_Initialize
 32084 ;;		_PIN_MANAGER_Initialize
 32085 ;;		_PMD_Initialize
 32086 ;;		_PWM8_Initialize
 32087 ;;		_SPI1_Initialize
 32088 ;;		_TMR2_Initialize
 32089 ;;		_TMR3_Initialize
 32090 ;;		_TMR5_Initialize
 32091 ;;		_TMR6_Initialize
 32092 ;;		_UART1_Initialize
 32093 ;;		_UART2_Initialize
 32094 ;; This function is called by:
 32095 ;;		_main
 32096 ;; This function uses a reentrant model
 32097 ;;
 32098                           
 32099                           	psect	text122
 32100  01C1A4                     __ptext122:
 32101                           	opt callstack 0
 32102  01C1A4                     _SYSTEM_Initialize:
 32103                           	opt callstack 13
 32104                           
 32105                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 32106                           
 32107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32108                           ;incstack = 0
 32109  01C1A4  ECB6  F0DE         	call	_INTERRUPT_Initialize	;wreg free
 32110                           
 32111                           ; BSR set to: 57
 32112                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 32113  01C1A8  EC41  F0E7         	call	_PMD_Initialize	;wreg free
 32114                           
 32115                           ; BSR set to: 57
 32116                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 32117  01C1AC  EC27  F0DB         	call	_PIN_MANAGER_Initialize	;wreg free
 32118                           
 32119                           ; BSR set to: 58
 32120                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 32121  01C1B0  EC36  F0E7         	call	_OSCILLATOR_Initialize	;wreg free
 32122                           
 32123                           ; BSR set to: 57
 32124                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 32125  01C1B4  ECC5  F0E7         	call	_FVR_Initialize	;wreg free
 32126                           
 32127                           ; BSR set to: 62
 32128                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 32129  01C1B8  ECE5  F0DD         	call	_ADCC_Initialize	;wreg free
 32130                           
 32131                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 32132  01C1BC  EC2B  F0E7         	call	_PWM8_Initialize	;wreg free
 32133                           
 32134                           ; BSR set to: 63
 32135                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 32136  01C1C0  EC09  F0E7         	call	_TMR2_Initialize	;wreg free
 32137                           
 32138                           ; BSR set to: 57
 32139                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 32140  01C1C4  ECAA  F0E3         	call	_EXT_INT_Initialize	;wreg free
 32141                           
 32142                           ; BSR set to: 57
 32143                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 32144  01C1C8  EC96  F0E4         	call	_TMR6_Initialize	;wreg free
 32145                           
 32146                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 32147  01C1CC  EC63  F0E1         	call	_TMR3_Initialize	;wreg free
 32148                           
 32149                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 32150  01C1D0  EC3F  F0E1         	call	_TMR5_Initialize	;wreg free
 32151                           
 32152                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 32153  01C1D4  EC1B  F0E1         	call	_UART1_Initialize	;wreg free
 32154                           
 32155                           ; BSR set to: 57
 32156                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 32157  01C1D8  EC7D  F0DF         	call	_UART2_Initialize	;wreg free
 32158                           
 32159                           ; BSR set to: 57
 32160                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 32161  01C1DC  EC20  F0E7         	call	_SPI1_Initialize	;wreg free
 32162                           
 32163                           ; BSR set to: 61
 32164                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 32165  01C1E0  EC07  F0E0         	call	_DMA2_Initialize	;wreg free
 32166                           
 32167                           ; BSR set to: 59
 32168                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 32169  01C1E4  ECB0  F0DD         	call	_DMA1_Initialize	;wreg free
 32170                           
 32171                           ; BSR set to: 59
 32172                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 32173  01C1E8  EC99  F0E7         	call	_CLKREF_Initialize	;wreg free
 32174                           
 32175                           ; BSR set to: 60
 32176                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 32177  01C1EC  0012               	return		;funcret
 32178  01C1EE                     __end_of_SYSTEM_Initialize:
 32179                           	opt callstack 0
 32180                           
 32181 ;; *************** function _UART2_Initialize *****************
 32182 ;; Defined at:
 32183 ;;		line 78 in file "mcc_generated_files/uart2.c"
 32184 ;; Parameters:    Size  Location     Type
 32185 ;;		None
 32186 ;; Auto vars:     Size  Location     Type
 32187 ;;		None
 32188 ;; Return value:  Size  Location     Type
 32189 ;;                  1  [STACK] void 
 32190 ;; Registers used:
 32191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 32192 ;; Tracked objects:
 32193 ;;		On entry : 3F/39
 32194 ;;		On exit  : 3F/39
 32195 ;;		Unchanged: 0/0
 32196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32201 ;;Total ram usage:        0 bytes
 32202 ;; Hardware stack levels used:    1
 32203 ;; Hardware stack levels required when called:   16
 32204 ;; This function calls:
 32205 ;;		_UART2_SetRxInterruptHandler
 32206 ;;		_UART2_SetTxInterruptHandler
 32207 ;; This function is called by:
 32208 ;;		_SYSTEM_Initialize
 32209 ;; This function uses a reentrant model
 32210 ;;
 32211                           
 32212                           	psect	text123
 32213  01BEFA                     __ptext123:
 32214                           	opt callstack 0
 32215  01BEFA                     _UART2_Initialize:
 32216                           	opt callstack 13
 32217                           
 32218                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 32219                           
 32220                           ; BSR set to: 60
 32221                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32222                           ;incstack = 0
 32223  01BEFA  0139               	movlb	57	; () banked
 32224  01BEFC  9596               	bcf	150,2,b	;volatile
 32225                           
 32226                           ; BSR set to: 57
 32227                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 32228  01BEFE  0E0E               	movlw	low _UART2_Receive_ISR
 32229  01BF00  6EE6               	movwf	postinc1,c
 32230  01BF02  0ECD               	movlw	high _UART2_Receive_ISR
 32231  01BF04  6EE6               	movwf	postinc1,c
 32232  01BF06  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 32233  01BF08  6EE6               	movwf	postinc1,c
 32234  01BF0A  ECE7  F0E4         	call	_UART2_SetRxInterruptHandler	;wreg free
 32235                           
 32236                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 32237  01BF0E  0139               	movlb	57	; () banked
 32238  01BF10  9796               	bcf	150,3,b	;volatile
 32239                           
 32240                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 32241  01BF12  0E00               	movlw	low _UART2_Transmit_ISR
 32242  01BF14  6EE6               	movwf	postinc1,c
 32243  01BF16  0EC9               	movlw	high _UART2_Transmit_ISR
 32244  01BF18  6EE6               	movwf	postinc1,c
 32245  01BF1A  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 32246  01BF1C  6EE6               	movwf	postinc1,c
 32247  01BF1E  ECD3  F0E4         	call	_UART2_SetTxInterruptHandler	;wreg free
 32248                           
 32249                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 32250  01BF22  013D               	movlb	61	; () banked
 32251  01BF24  6BD4               	clrf	212,b	;volatile
 32252                           
 32253                           ; BSR set to: 61
 32254                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 32255  01BF26  6BD6               	clrf	214,b	;volatile
 32256                           
 32257                           ; BSR set to: 61
 32258                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 32259  01BF28  6BD8               	clrf	216,b	;volatile
 32260                           
 32261                           ; BSR set to: 61
 32262                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 32263  01BF2A  0EB0               	movlw	176
 32264  01BF2C  6FDA               	movwf	218,b	;volatile
 32265                           
 32266                           ; BSR set to: 61
 32267                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 32268  01BF2E  0E80               	movlw	128
 32269  01BF30  6FDB               	movwf	219,b	;volatile
 32270                           
 32271                           ; BSR set to: 61
 32272                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 32273  01BF32  6BDC               	clrf	220,b	;volatile
 32274                           
 32275                           ; BSR set to: 61
 32276                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 32277  01BF34  0E82               	movlw	130
 32278  01BF36  6FDD               	movwf	221,b	;volatile
 32279                           
 32280                           ; BSR set to: 61
 32281                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 32282  01BF38  0E06               	movlw	6
 32283  01BF3A  6FDE               	movwf	222,b	;volatile
 32284                           
 32285                           ; BSR set to: 61
 32286                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 32287  01BF3C  6BDF               	clrf	223,b	;volatile
 32288                           
 32289                           ; BSR set to: 61
 32290                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 32291  01BF3E  6BE0               	clrf	224,b	;volatile
 32292                           
 32293                           ; BSR set to: 61
 32294                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 32295  01BF40  6BE1               	clrf	225,b	;volatile
 32296                           
 32297                           ; BSR set to: 61
 32298                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 32299  01BF42  6BE2               	clrf	226,b	;volatile
 32300                           
 32301                           ; BSR set to: 61
 32302                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 32303  01BF44  0100               	movlb	0	; () banked
 32304  01BF46  6BA8               	clrf	_uart2TxHead& (0+255),b	;volatile
 32305                           
 32306                           ; BSR set to: 0
 32307                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 32308  01BF48  6A46               	clrf	_uart2TxTail^0,c	;volatile
 32309                           
 32310                           ; BSR set to: 0
 32311                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 32312  01BF4A  0E40               	movlw	64
 32313  01BF4C  6E45               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 32314                           
 32315                           ; BSR set to: 0
 32316                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 32317  01BF4E  6A44               	clrf	_uart2RxHead^0,c	;volatile
 32318                           
 32319                           ; BSR set to: 0
 32320                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 32321  01BF50  6BA7               	clrf	_uart2RxTail& (0+255),b	;volatile
 32322                           
 32323                           ; BSR set to: 0
 32324                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 32325  01BF52  6BA6               	clrf	_uart2RxCount& (0+255),b	;volatile
 32326                           
 32327                           ; BSR set to: 0
 32328                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 32329  01BF54  0139               	movlb	57	; () banked
 32330  01BF56  8596               	bsf	150,2,b	;volatile
 32331                           
 32332                           ; BSR set to: 57
 32333                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 32334  01BF58  0012               	return		;funcret
 32335  01BF5A                     __end_of_UART2_Initialize:
 32336                           	opt callstack 0
 32337                           
 32338 ;; *************** function _UART2_SetTxInterruptHandler *****************
 32339 ;; Defined at:
 32340 ;;		line 252 in file "mcc_generated_files/uart2.c"
 32341 ;; Parameters:    Size  Location     Type
 32342 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32343 ;;		 -> UART2_Transmit_ISR(1), 
 32344 ;; Auto vars:     Size  Location     Type
 32345 ;;		None
 32346 ;; Return value:  Size  Location     Type
 32347 ;;                  1  [STACK] void 
 32348 ;; Registers used:
 32349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32350 ;; Tracked objects:
 32351 ;;		On entry : 3F/39
 32352 ;;		On exit  : 0/0
 32353 ;;		Unchanged: 0/0
 32354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32359 ;;Total ram usage:        0 bytes
 32360 ;; Hardware stack levels used:    1
 32361 ;; Hardware stack levels required when called:   15
 32362 ;; This function calls:
 32363 ;;		Nothing
 32364 ;; This function is called by:
 32365 ;;		_UART2_Initialize
 32366 ;; This function uses a reentrant model
 32367 ;;
 32368                           
 32369                           	psect	text124
 32370  01C9A6                     __ptext124:
 32371                           	opt callstack 0
 32372  01C9A6                     _UART2_SetTxInterruptHandler:
 32373                           	opt callstack 13
 32374                           
 32375                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 32376                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32377                           
 32378                           ; BSR set to: 57
 32379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32380                           ;incstack = 0
 32381  01C9A6  50E1               	movf	fsr1l,w,c
 32382  01C9A8  0FFD               	addlw	-3
 32383  01C9AA  6ED9               	movwf	fsr2l,c
 32384  01C9AC  50E2               	movf	fsr1h,w,c
 32385  01C9AE  6EDA               	movwf	fsr2h,c
 32386  01C9B0  0EFF               	movlw	255
 32387  01C9B2  22DA               	addwfc	fsr2h,f,c
 32388  01C9B4  006F FF78  F08A    	movff	postinc2,_UART2_TxInterruptHandler
 32389  01C9BA  006F FF78  F08B    	movff	postinc2,_UART2_TxInterruptHandler+1
 32390  01C9C0  006F FF74  F08C    	movff	postdec2,_UART2_TxInterruptHandler+2
 32391                           
 32392                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 32393  01C9C6  52E5               	movf	postdec1,f,c
 32394  01C9C8  52E5               	movf	postdec1,f,c
 32395  01C9CA  52E5               	movf	postdec1,f,c
 32396  01C9CC  0012               	return		;funcret
 32397  01C9CE                     __end_of_UART2_SetTxInterruptHandler:
 32398                           	opt callstack 0
 32399                           
 32400 ;; *************** function _UART2_SetRxInterruptHandler *****************
 32401 ;; Defined at:
 32402 ;;		line 248 in file "mcc_generated_files/uart2.c"
 32403 ;; Parameters:    Size  Location     Type
 32404 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32405 ;;		 -> UART2_Receive_ISR(1), 
 32406 ;; Auto vars:     Size  Location     Type
 32407 ;;		None
 32408 ;; Return value:  Size  Location     Type
 32409 ;;                  1  [STACK] void 
 32410 ;; Registers used:
 32411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32412 ;; Tracked objects:
 32413 ;;		On entry : 3F/39
 32414 ;;		On exit  : 0/0
 32415 ;;		Unchanged: 0/0
 32416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32421 ;;Total ram usage:        0 bytes
 32422 ;; Hardware stack levels used:    1
 32423 ;; Hardware stack levels required when called:   15
 32424 ;; This function calls:
 32425 ;;		Nothing
 32426 ;; This function is called by:
 32427 ;;		_UART2_Initialize
 32428 ;; This function uses a reentrant model
 32429 ;;
 32430                           
 32431                           	psect	text125
 32432  01C9CE                     __ptext125:
 32433                           	opt callstack 0
 32434  01C9CE                     _UART2_SetRxInterruptHandler:
 32435                           	opt callstack 13
 32436                           
 32437                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 32438                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32439                           
 32440                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32441                           ;incstack = 0
 32442  01C9CE  50E1               	movf	fsr1l,w,c
 32443  01C9D0  0FFD               	addlw	-3
 32444  01C9D2  6ED9               	movwf	fsr2l,c
 32445  01C9D4  50E2               	movf	fsr1h,w,c
 32446  01C9D6  6EDA               	movwf	fsr2h,c
 32447  01C9D8  0EFF               	movlw	255
 32448  01C9DA  22DA               	addwfc	fsr2h,f,c
 32449  01C9DC  006F FF78  F08D    	movff	postinc2,_UART2_RxInterruptHandler
 32450  01C9E2  006F FF78  F08E    	movff	postinc2,_UART2_RxInterruptHandler+1
 32451  01C9E8  006F FF74  F08F    	movff	postdec2,_UART2_RxInterruptHandler+2
 32452                           
 32453                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 32454  01C9EE  52E5               	movf	postdec1,f,c
 32455  01C9F0  52E5               	movf	postdec1,f,c
 32456  01C9F2  52E5               	movf	postdec1,f,c
 32457  01C9F4  0012               	return		;funcret
 32458  01C9F6                     __end_of_UART2_SetRxInterruptHandler:
 32459                           	opt callstack 0
 32460                           
 32461 ;; *************** function _UART1_Initialize *****************
 32462 ;; Defined at:
 32463 ;;		line 75 in file "mcc_generated_files/uart1.c"
 32464 ;; Parameters:    Size  Location     Type
 32465 ;;		None
 32466 ;; Auto vars:     Size  Location     Type
 32467 ;;		None
 32468 ;; Return value:  Size  Location     Type
 32469 ;;                  1  [STACK] void 
 32470 ;; Registers used:
 32471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 32472 ;; Tracked objects:
 32473 ;;		On entry : 0/39
 32474 ;;		On exit  : 3F/39
 32475 ;;		Unchanged: 0/0
 32476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32481 ;;Total ram usage:        0 bytes
 32482 ;; Hardware stack levels used:    1
 32483 ;; Hardware stack levels required when called:   16
 32484 ;; This function calls:
 32485 ;;		_UART1_SetRxInterruptHandler
 32486 ;; This function is called by:
 32487 ;;		_SYSTEM_Initialize
 32488 ;; This function uses a reentrant model
 32489 ;;
 32490                           
 32491                           	psect	text126
 32492  01C236                     __ptext126:
 32493                           	opt callstack 0
 32494  01C236                     _UART1_Initialize:
 32495                           	opt callstack 13
 32496                           
 32497                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 32498                           
 32499                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32500                           ;incstack = 0
 32501  01C236  0139               	movlb	57	; () banked
 32502  01C238  9793               	bcf	147,3,b	;volatile
 32503                           
 32504                           ; BSR set to: 57
 32505                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 32506  01C23A  0ECC               	movlw	low _UART1_Receive_ISR
 32507  01C23C  6EE6               	movwf	postinc1,c
 32508  01C23E  0ECC               	movlw	high _UART1_Receive_ISR
 32509  01C240  6EE6               	movwf	postinc1,c
 32510  01C242  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 32511  01C244  6EE6               	movwf	postinc1,c
 32512  01C246  ECFB  F0E4         	call	_UART1_SetRxInterruptHandler	;wreg free
 32513                           
 32514                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 32515  01C24A  013D               	movlb	61	; () banked
 32516  01C24C  6BEC               	clrf	236,b	;volatile
 32517                           
 32518                           ; BSR set to: 61
 32519                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 32520  01C24E  6BED               	clrf	237,b	;volatile
 32521                           
 32522                           ; BSR set to: 61
 32523                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 32524  01C250  6BEE               	clrf	238,b	;volatile
 32525                           
 32526                           ; BSR set to: 61
 32527                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 32528  01C252  6BEF               	clrf	239,b	;volatile
 32529                           
 32530                           ; BSR set to: 61
 32531                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 32532  01C254  6BF0               	clrf	240,b	;volatile
 32533                           
 32534                           ; BSR set to: 61
 32535                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 32536  01C256  6BF1               	clrf	241,b	;volatile
 32537                           
 32538                           ; BSR set to: 61
 32539                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 32540  01C258  0EB0               	movlw	176
 32541  01C25A  6FF2               	movwf	242,b	;volatile
 32542                           
 32543                           ; BSR set to: 61
 32544                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 32545  01C25C  0E80               	movlw	128
 32546  01C25E  6FF3               	movwf	243,b	;volatile
 32547                           
 32548                           ; BSR set to: 61
 32549                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 32550  01C260  6BF4               	clrf	244,b	;volatile
 32551                           
 32552                           ; BSR set to: 61
 32553                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 32554  01C262  0E8A               	movlw	138
 32555  01C264  6FF5               	movwf	245,b	;volatile
 32556                           
 32557                           ; BSR set to: 61
 32558                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 32559  01C266  6BF6               	clrf	246,b	;volatile
 32560                           
 32561                           ; BSR set to: 61
 32562                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 32563  01C268  6BF7               	clrf	247,b	;volatile
 32564                           
 32565                           ; BSR set to: 61
 32566                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 32567  01C26A  6BF8               	clrf	248,b	;volatile
 32568                           
 32569                           ; BSR set to: 61
 32570                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 32571  01C26C  6BF9               	clrf	249,b	;volatile
 32572                           
 32573                           ; BSR set to: 61
 32574                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 32575  01C26E  6BFA               	clrf	250,b	;volatile
 32576                           
 32577                           ; BSR set to: 61
 32578                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 32579  01C270  6A47               	clrf	_uart1RxHead^0,c	;volatile
 32580                           
 32581                           ; BSR set to: 61
 32582                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 32583  01C272  0100               	movlb	0	; () banked
 32584  01C274  6BAA               	clrf	_uart1RxTail& (0+255),b	;volatile
 32585                           
 32586                           ; BSR set to: 0
 32587                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 32588  01C276  6BA9               	clrf	_uart1RxCount& (0+255),b	;volatile
 32589                           
 32590                           ; BSR set to: 0
 32591                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 32592  01C278  0139               	movlb	57	; () banked
 32593  01C27A  8793               	bsf	147,3,b	;volatile
 32594                           
 32595                           ; BSR set to: 57
 32596                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 32597  01C27C  0012               	return		;funcret
 32598  01C27E                     __end_of_UART1_Initialize:
 32599                           	opt callstack 0
 32600                           
 32601 ;; *************** function _UART1_SetRxInterruptHandler *****************
 32602 ;; Defined at:
 32603 ;;		line 207 in file "mcc_generated_files/uart1.c"
 32604 ;; Parameters:    Size  Location     Type
 32605 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32606 ;;		 -> UART1_Receive_ISR(1), 
 32607 ;; Auto vars:     Size  Location     Type
 32608 ;;		None
 32609 ;; Return value:  Size  Location     Type
 32610 ;;                  1  [STACK] void 
 32611 ;; Registers used:
 32612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32613 ;; Tracked objects:
 32614 ;;		On entry : 3F/39
 32615 ;;		On exit  : 0/0
 32616 ;;		Unchanged: 0/0
 32617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32622 ;;Total ram usage:        0 bytes
 32623 ;; Hardware stack levels used:    1
 32624 ;; Hardware stack levels required when called:   15
 32625 ;; This function calls:
 32626 ;;		Nothing
 32627 ;; This function is called by:
 32628 ;;		_UART1_Initialize
 32629 ;; This function uses a reentrant model
 32630 ;;
 32631                           
 32632                           	psect	text127
 32633  01C9F6                     __ptext127:
 32634                           	opt callstack 0
 32635  01C9F6                     _UART1_SetRxInterruptHandler:
 32636                           	opt callstack 13
 32637                           
 32638                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 32639                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32640                           
 32641                           ; BSR set to: 57
 32642                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32643                           ;incstack = 0
 32644  01C9F6  50E1               	movf	fsr1l,w,c
 32645  01C9F8  0FFD               	addlw	-3
 32646  01C9FA  6ED9               	movwf	fsr2l,c
 32647  01C9FC  50E2               	movf	fsr1h,w,c
 32648  01C9FE  6EDA               	movwf	fsr2h,c
 32649  01CA00  0EFF               	movlw	255
 32650  01CA02  22DA               	addwfc	fsr2h,f,c
 32651  01CA04  006F FF78  F087    	movff	postinc2,_UART1_RxInterruptHandler
 32652  01CA0A  006F FF78  F088    	movff	postinc2,_UART1_RxInterruptHandler+1
 32653  01CA10  006F FF74  F089    	movff	postdec2,_UART1_RxInterruptHandler+2
 32654                           
 32655                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 32656  01CA16  52E5               	movf	postdec1,f,c
 32657  01CA18  52E5               	movf	postdec1,f,c
 32658  01CA1A  52E5               	movf	postdec1,f,c
 32659  01CA1C  0012               	return		;funcret
 32660  01CA1E                     __end_of_UART1_SetRxInterruptHandler:
 32661                           	opt callstack 0
 32662                           
 32663 ;; *************** function _TMR6_Initialize *****************
 32664 ;; Defined at:
 32665 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 32666 ;; Parameters:    Size  Location     Type
 32667 ;;		None
 32668 ;; Auto vars:     Size  Location     Type
 32669 ;;		None
 32670 ;; Return value:  Size  Location     Type
 32671 ;;                  1  [STACK] void 
 32672 ;; Registers used:
 32673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 32674 ;; Tracked objects:
 32675 ;;		On entry : 3F/39
 32676 ;;		On exit  : 0/0
 32677 ;;		Unchanged: 0/0
 32678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32683 ;;Total ram usage:        0 bytes
 32684 ;; Hardware stack levels used:    1
 32685 ;; Hardware stack levels required when called:   16
 32686 ;; This function calls:
 32687 ;;		_TMR6_SetInterruptHandler
 32688 ;; This function is called by:
 32689 ;;		_SYSTEM_Initialize
 32690 ;; This function uses a reentrant model
 32691 ;;
 32692                           
 32693                           	psect	text128
 32694  01C92C                     __ptext128:
 32695                           	opt callstack 0
 32696  01C92C                     _TMR6_Initialize:
 32697                           	opt callstack 13
 32698                           
 32699                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 32700                           
 32701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32702                           ;incstack = 0
 32703  01C92C  0E01               	movlw	1
 32704  01C92E  6E96               	movwf	150,c	;volatile
 32705                           
 32706                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 32707  01C930  6A95               	clrf	149,c	;volatile
 32708                           
 32709                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 32710  01C932  6A97               	clrf	151,c	;volatile
 32711                           
 32712                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 32713  01C934  0E7C               	movlw	124
 32714  01C936  6E93               	movwf	147,c	;volatile
 32715                           
 32716                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 32717  01C938  6A92               	clrf	146,c	;volatile
 32718                           
 32719                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 32720  01C93A  0139               	movlb	57	; () banked
 32721  01C93C  91A9               	bcf	169,0,b	;volatile
 32722                           
 32723                           ; BSR set to: 57
 32724                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 32725  01C93E  8199               	bsf	153,0,b	;volatile
 32726                           
 32727                           ; BSR set to: 57
 32728                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 32729  01C940  0E0C               	movlw	low _TMR6_DefaultInterruptHandler
 32730  01C942  6EE6               	movwf	postinc1,c
 32731  01C944  0EC1               	movlw	high _TMR6_DefaultInterruptHandler
 32732  01C946  6EE6               	movwf	postinc1,c
 32733  01C948  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 32734  01C94A  6EE6               	movwf	postinc1,c
 32735  01C94C  EC0F  F0E5         	call	_TMR6_SetInterruptHandler	;wreg free
 32736                           
 32737                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 32738  01C950  0EE0               	movlw	224
 32739  01C952  6E94               	movwf	148,c	;volatile
 32740                           
 32741                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32742  01C954  0012               	return		;funcret
 32743  01C956                     __end_of_TMR6_Initialize:
 32744                           	opt callstack 0
 32745                           
 32746 ;; *************** function _TMR6_SetInterruptHandler *****************
 32747 ;; Defined at:
 32748 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 32749 ;; Parameters:    Size  Location     Type
 32750 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32751 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 32752 ;; Auto vars:     Size  Location     Type
 32753 ;;		None
 32754 ;; Return value:  Size  Location     Type
 32755 ;;                  1  [STACK] void 
 32756 ;; Registers used:
 32757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32758 ;; Tracked objects:
 32759 ;;		On entry : 3F/39
 32760 ;;		On exit  : 0/0
 32761 ;;		Unchanged: 0/0
 32762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32767 ;;Total ram usage:        0 bytes
 32768 ;; Hardware stack levels used:    1
 32769 ;; Hardware stack levels required when called:   15
 32770 ;; This function calls:
 32771 ;;		Nothing
 32772 ;; This function is called by:
 32773 ;;		_TMR6_Initialize
 32774 ;; This function uses a reentrant model
 32775 ;;
 32776                           
 32777                           	psect	text129
 32778  01CA1E                     __ptext129:
 32779                           	opt callstack 0
 32780  01CA1E                     _TMR6_SetInterruptHandler:
 32781                           	opt callstack 13
 32782                           
 32783                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 32784                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32785                           
 32786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32787                           ;incstack = 0
 32788  01CA1E  50E1               	movf	fsr1l,w,c
 32789  01CA20  0FFD               	addlw	-3
 32790  01CA22  6ED9               	movwf	fsr2l,c
 32791  01CA24  50E2               	movf	fsr1h,w,c
 32792  01CA26  6EDA               	movwf	fsr2h,c
 32793  01CA28  0EFF               	movlw	255
 32794  01CA2A  22DA               	addwfc	fsr2h,f,c
 32795  01CA2C  006F FF78  F07E    	movff	postinc2,_TMR6_InterruptHandler
 32796  01CA32  006F FF78  F07F    	movff	postinc2,_TMR6_InterruptHandler+1
 32797  01CA38  006F FF74  F080    	movff	postdec2,_TMR6_InterruptHandler+2
 32798                           
 32799                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32800  01CA3E  52E5               	movf	postdec1,f,c
 32801  01CA40  52E5               	movf	postdec1,f,c
 32802  01CA42  52E5               	movf	postdec1,f,c
 32803  01CA44  0012               	return		;funcret
 32804  01CA46                     __end_of_TMR6_SetInterruptHandler:
 32805                           	opt callstack 0
 32806                           
 32807 ;; *************** function _TMR5_Initialize *****************
 32808 ;; Defined at:
 32809 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 32810 ;; Parameters:    Size  Location     Type
 32811 ;;		None
 32812 ;; Auto vars:     Size  Location     Type
 32813 ;;		None
 32814 ;; Return value:  Size  Location     Type
 32815 ;;                  1  [STACK] void 
 32816 ;; Registers used:
 32817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 32818 ;; Tracked objects:
 32819 ;;		On entry : 0/39
 32820 ;;		On exit  : 0/0
 32821 ;;		Unchanged: 0/0
 32822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32827 ;;Total ram usage:        0 bytes
 32828 ;; Hardware stack levels used:    1
 32829 ;; Hardware stack levels required when called:   16
 32830 ;; This function calls:
 32831 ;;		_TMR5_SetInterruptHandler
 32832 ;; This function is called by:
 32833 ;;		_SYSTEM_Initialize
 32834 ;; This function uses a reentrant model
 32835 ;;
 32836                           
 32837                           	psect	text130
 32838  01C27E                     __ptext130:
 32839                           	opt callstack 0
 32840  01C27E                     _TMR5_Initialize:
 32841                           	opt callstack 13
 32842                           
 32843                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 32844                           
 32845                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32846                           ;incstack = 0
 32847  01C27E  6A9B               	clrf	155,c	;volatile
 32848                           
 32849                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 32850  01C280  6A9C               	clrf	156,c	;volatile
 32851                           
 32852                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 32853  01C282  0E01               	movlw	1
 32854  01C284  6E9D               	movwf	157,c	;volatile
 32855                           
 32856                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 32857  01C286  0E63               	movlw	99
 32858  01C288  6E99               	movwf	153,c	;volatile
 32859                           
 32860                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 32861  01C28A  0EC0               	movlw	192
 32862  01C28C  6E98               	movwf	152,c	;volatile
 32863                           
 32864                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 32865  01C28E  5098               	movf	152,w,c	;volatile
 32866  01C290  006F FE64  F001    	movff	16281,btemp	;volatile
 32867  01C296  6A02               	clrf	(btemp+1)^0,c
 32868  01C298  0060  F004  F002   	movff	btemp,btemp+1
 32869  01C29E  6A01               	clrf	btemp^0,c
 32870  01C2A0  1001               	iorwf	btemp^0,w,c
 32871  01C2A2  0100               	movlb	0	; () banked
 32872  01C2A4  6F9E               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 32873  01C2A6  5002               	movf	(btemp+1)^0,w,c
 32874  01C2A8  6F9F               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 32875                           
 32876                           ; BSR set to: 0
 32877                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 32878  01C2AA  0139               	movlb	57	; () banked
 32879  01C2AC  9DA8               	bcf	168,6,b	;volatile
 32880                           
 32881                           ; BSR set to: 57
 32882                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 32883  01C2AE  8D98               	bsf	152,6,b	;volatile
 32884                           
 32885                           ; BSR set to: 57
 32886                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 32887  01C2B0  0E4A               	movlw	low _TMR5_DefaultInterruptHandler
 32888  01C2B2  6EE6               	movwf	postinc1,c
 32889  01C2B4  0EC6               	movlw	high _TMR5_DefaultInterruptHandler
 32890  01C2B6  6EE6               	movwf	postinc1,c
 32891  01C2B8  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 32892  01C2BA  6EE6               	movwf	postinc1,c
 32893  01C2BC  EC23  F0E5         	call	_TMR5_SetInterruptHandler	;wreg free
 32894                           
 32895                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 32896  01C2C0  0E31               	movlw	49
 32897  01C2C2  6E9A               	movwf	154,c	;volatile
 32898                           
 32899                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 32900  01C2C4  0012               	return		;funcret
 32901  01C2C6                     __end_of_TMR5_Initialize:
 32902                           	opt callstack 0
 32903                           
 32904 ;; *************** function _TMR5_SetInterruptHandler *****************
 32905 ;; Defined at:
 32906 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 32907 ;; Parameters:    Size  Location     Type
 32908 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 32909 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 32910 ;; Auto vars:     Size  Location     Type
 32911 ;;		None
 32912 ;; Return value:  Size  Location     Type
 32913 ;;                  1  [STACK] void 
 32914 ;; Registers used:
 32915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 32916 ;; Tracked objects:
 32917 ;;		On entry : 3F/39
 32918 ;;		On exit  : 0/0
 32919 ;;		Unchanged: 0/0
 32920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32925 ;;Total ram usage:        0 bytes
 32926 ;; Hardware stack levels used:    1
 32927 ;; Hardware stack levels required when called:   15
 32928 ;; This function calls:
 32929 ;;		Nothing
 32930 ;; This function is called by:
 32931 ;;		_TMR5_Initialize
 32932 ;; This function uses a reentrant model
 32933 ;;
 32934                           
 32935                           	psect	text131
 32936  01CA46                     __ptext131:
 32937                           	opt callstack 0
 32938  01CA46                     _TMR5_SetInterruptHandler:
 32939                           	opt callstack 13
 32940                           
 32941                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 32942                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 32943                           
 32944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32945                           ;incstack = 0
 32946  01CA46  50E1               	movf	fsr1l,w,c
 32947  01CA48  0FFD               	addlw	-3
 32948  01CA4A  6ED9               	movwf	fsr2l,c
 32949  01CA4C  50E2               	movf	fsr1h,w,c
 32950  01CA4E  6EDA               	movwf	fsr2h,c
 32951  01CA50  0EFF               	movlw	255
 32952  01CA52  22DA               	addwfc	fsr2h,f,c
 32953  01CA54  006F FF78  F07B    	movff	postinc2,_TMR5_InterruptHandler
 32954  01CA5A  006F FF78  F07C    	movff	postinc2,_TMR5_InterruptHandler+1
 32955  01CA60  006F FF74  F07D    	movff	postdec2,_TMR5_InterruptHandler+2
 32956                           
 32957                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 32958  01CA66  52E5               	movf	postdec1,f,c
 32959  01CA68  52E5               	movf	postdec1,f,c
 32960  01CA6A  52E5               	movf	postdec1,f,c
 32961  01CA6C  0012               	return		;funcret
 32962  01CA6E                     __end_of_TMR5_SetInterruptHandler:
 32963                           	opt callstack 0
 32964                           
 32965 ;; *************** function _TMR3_Initialize *****************
 32966 ;; Defined at:
 32967 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 32968 ;; Parameters:    Size  Location     Type
 32969 ;;		None
 32970 ;; Auto vars:     Size  Location     Type
 32971 ;;		None
 32972 ;; Return value:  Size  Location     Type
 32973 ;;                  1  [STACK] void 
 32974 ;; Registers used:
 32975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 32976 ;; Tracked objects:
 32977 ;;		On entry : 0/39
 32978 ;;		On exit  : 0/0
 32979 ;;		Unchanged: 0/0
 32980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32985 ;;Total ram usage:        0 bytes
 32986 ;; Hardware stack levels used:    1
 32987 ;; Hardware stack levels required when called:   16
 32988 ;; This function calls:
 32989 ;;		_TMR3_SetInterruptHandler
 32990 ;; This function is called by:
 32991 ;;		_SYSTEM_Initialize
 32992 ;; This function uses a reentrant model
 32993 ;;
 32994                           
 32995                           	psect	text132
 32996  01C2C6                     __ptext132:
 32997                           	opt callstack 0
 32998  01C2C6                     _TMR3_Initialize:
 32999                           	opt callstack 13
 33000                           
 33001                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 33002                           
 33003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33004                           ;incstack = 0
 33005  01C2C6  6AA7               	clrf	167,c	;volatile
 33006                           
 33007                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 33008  01C2C8  6AA8               	clrf	168,c	;volatile
 33009                           
 33010                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 33011  01C2CA  0E01               	movlw	1
 33012  01C2CC  6EA9               	movwf	169,c	;volatile
 33013                           
 33014                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 33015  01C2CE  0E3C               	movlw	60
 33016  01C2D0  6EA5               	movwf	165,c	;volatile
 33017                           
 33018                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 33019  01C2D2  0EB0               	movlw	176
 33020  01C2D4  6EA4               	movwf	164,c	;volatile
 33021                           
 33022                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 33023  01C2D6  50A4               	movf	164,w,c	;volatile
 33024  01C2D8  006F FE94  F001    	movff	16293,btemp	;volatile
 33025  01C2DE  6A02               	clrf	(btemp+1)^0,c
 33026  01C2E0  0060  F004  F002   	movff	btemp,btemp+1
 33027  01C2E6  6A01               	clrf	btemp^0,c
 33028  01C2E8  1001               	iorwf	btemp^0,w,c
 33029  01C2EA  0100               	movlb	0	; () banked
 33030  01C2EC  6F9A               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 33031  01C2EE  5002               	movf	(btemp+1)^0,w,c
 33032  01C2F0  6F9B               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 33033                           
 33034                           ; BSR set to: 0
 33035                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 33036  01C2F2  0139               	movlb	57	; () banked
 33037  01C2F4  9DA6               	bcf	166,6,b	;volatile
 33038                           
 33039                           ; BSR set to: 57
 33040                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 33041  01C2F6  8D96               	bsf	150,6,b	;volatile
 33042                           
 33043                           ; BSR set to: 57
 33044                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 33045  01C2F8  0EB4               	movlw	low _TMR3_DefaultInterruptHandler
 33046  01C2FA  6EE6               	movwf	postinc1,c
 33047  01C2FC  0ECF               	movlw	high _TMR3_DefaultInterruptHandler
 33048  01C2FE  6EE6               	movwf	postinc1,c
 33049  01C300  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 33050  01C302  6EE6               	movwf	postinc1,c
 33051  01C304  EC37  F0E5         	call	_TMR3_SetInterruptHandler	;wreg free
 33052                           
 33053                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 33054  01C308  0E31               	movlw	49
 33055  01C30A  6EA6               	movwf	166,c	;volatile
 33056                           
 33057                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33058  01C30C  0012               	return		;funcret
 33059  01C30E                     __end_of_TMR3_Initialize:
 33060                           	opt callstack 0
 33061                           
 33062 ;; *************** function _TMR3_SetInterruptHandler *****************
 33063 ;; Defined at:
 33064 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 33065 ;; Parameters:    Size  Location     Type
 33066 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 33067 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 33068 ;; Auto vars:     Size  Location     Type
 33069 ;;		None
 33070 ;; Return value:  Size  Location     Type
 33071 ;;                  1  [STACK] void 
 33072 ;; Registers used:
 33073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33074 ;; Tracked objects:
 33075 ;;		On entry : 0/0
 33076 ;;		On exit  : 0/0
 33077 ;;		Unchanged: 0/0
 33078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33083 ;;Total ram usage:        0 bytes
 33084 ;; Hardware stack levels used:    1
 33085 ;; Hardware stack levels required when called:   15
 33086 ;; This function calls:
 33087 ;;		Nothing
 33088 ;; This function is called by:
 33089 ;;		_TMR3_Initialize
 33090 ;;		_init_bsoc
 33091 ;; This function uses a reentrant model
 33092 ;;
 33093                           
 33094                           	psect	text133
 33095  01CA6E                     __ptext133:
 33096                           	opt callstack 0
 33097  01CA6E                     _TMR3_SetInterruptHandler:
 33098                           	opt callstack 14
 33099                           
 33100                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 33101                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 33102                           
 33103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33104                           ;incstack = 0
 33105  01CA6E  50E1               	movf	fsr1l,w,c
 33106  01CA70  0FFD               	addlw	-3
 33107  01CA72  6ED9               	movwf	fsr2l,c
 33108  01CA74  50E2               	movf	fsr1h,w,c
 33109  01CA76  6EDA               	movwf	fsr2h,c
 33110  01CA78  0EFF               	movlw	255
 33111  01CA7A  22DA               	addwfc	fsr2h,f,c
 33112  01CA7C  006F FF78  F078    	movff	postinc2,_TMR3_InterruptHandler
 33113  01CA82  006F FF78  F079    	movff	postinc2,_TMR3_InterruptHandler+1
 33114  01CA88  006F FF74  F07A    	movff	postdec2,_TMR3_InterruptHandler+2
 33115                           
 33116                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 33117  01CA8E  52E5               	movf	postdec1,f,c
 33118  01CA90  52E5               	movf	postdec1,f,c
 33119  01CA92  52E5               	movf	postdec1,f,c
 33120  01CA94  0012               	return		;funcret
 33121  01CA96                     __end_of_TMR3_SetInterruptHandler:
 33122                           	opt callstack 0
 33123                           
 33124 ;; *************** function _TMR2_Initialize *****************
 33125 ;; Defined at:
 33126 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 33127 ;; Parameters:    Size  Location     Type
 33128 ;;		None
 33129 ;; Auto vars:     Size  Location     Type
 33130 ;;		None
 33131 ;; Return value:  Size  Location     Type
 33132 ;;                  1  [STACK] void 
 33133 ;; Registers used:
 33134 ;;		wreg, status,2
 33135 ;; Tracked objects:
 33136 ;;		On entry : 3F/3F
 33137 ;;		On exit  : 3F/39
 33138 ;;		Unchanged: 0/0
 33139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33144 ;;Total ram usage:        0 bytes
 33145 ;; Hardware stack levels used:    1
 33146 ;; Hardware stack levels required when called:   15
 33147 ;; This function calls:
 33148 ;;		Nothing
 33149 ;; This function is called by:
 33150 ;;		_SYSTEM_Initialize
 33151 ;; This function uses a reentrant model
 33152 ;;
 33153                           
 33154                           	psect	text134
 33155  01CE12                     __ptext134:
 33156                           	opt callstack 0
 33157  01CE12                     _TMR2_Initialize:
 33158                           	opt callstack 14
 33159                           
 33160                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 33161                           
 33162                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33163                           ;incstack = 0
 33164  01CE12  0E01               	movlw	1
 33165  01CE14  6EAE               	movwf	174,c	;volatile
 33166                           
 33167                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 33168  01CE16  6AAD               	clrf	173,c	;volatile
 33169                           
 33170                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 33171  01CE18  6AAF               	clrf	175,c	;volatile
 33172                           
 33173                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 33174  01CE1A  0E63               	movlw	99
 33175  01CE1C  6EAB               	movwf	171,c	;volatile
 33176                           
 33177                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 33178  01CE1E  6AAA               	clrf	170,c	;volatile
 33179                           
 33180                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 33181  01CE20  0139               	movlb	57	; () banked
 33182  01CE22  95A4               	bcf	164,2,b	;volatile
 33183                           
 33184                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 33185  01CE24  0EC0               	movlw	192
 33186  01CE26  6EAC               	movwf	172,c	;volatile
 33187                           
 33188                           ; BSR set to: 57
 33189                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33190  01CE28  0012               	return		;funcret
 33191  01CE2A                     __end_of_TMR2_Initialize:
 33192                           	opt callstack 0
 33193                           
 33194 ;; *************** function _SPI1_Initialize *****************
 33195 ;; Defined at:
 33196 ;;		line 64 in file "mcc_generated_files/spi1.c"
 33197 ;; Parameters:    Size  Location     Type
 33198 ;;		None
 33199 ;; Auto vars:     Size  Location     Type
 33200 ;;		None
 33201 ;; Return value:  Size  Location     Type
 33202 ;;                  1  [STACK] void 
 33203 ;; Registers used:
 33204 ;;		wreg, status,2
 33205 ;; Tracked objects:
 33206 ;;		On entry : 3F/39
 33207 ;;		On exit  : 3F/3D
 33208 ;;		Unchanged: 0/0
 33209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33214 ;;Total ram usage:        0 bytes
 33215 ;; Hardware stack levels used:    1
 33216 ;; Hardware stack levels required when called:   15
 33217 ;; This function calls:
 33218 ;;		Nothing
 33219 ;; This function is called by:
 33220 ;;		_SYSTEM_Initialize
 33221 ;; This function uses a reentrant model
 33222 ;;
 33223                           
 33224                           	psect	text135
 33225  01CE40                     __ptext135:
 33226                           	opt callstack 0
 33227  01CE40                     _SPI1_Initialize:
 33228                           	opt callstack 14
 33229                           
 33230                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 33231                           
 33232                           ; BSR set to: 57
 33233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33234                           ;incstack = 0
 33235  01CE40  0E40               	movlw	64
 33236  01CE42  013D               	movlb	61	; () banked
 33237  01CE44  6F15               	movwf	21,b	;volatile
 33238                           
 33239                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 33240  01CE46  0E03               	movlw	3
 33241  01CE48  6F16               	movwf	22,b	;volatile
 33242                           
 33243                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 33244  01CE4A  0E4F               	movlw	79
 33245  01CE4C  6F19               	movwf	25,b	;volatile
 33246                           
 33247                           ; BSR set to: 61
 33248                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 33249  01CE4E  6B1C               	clrf	28,b	;volatile
 33250                           
 33251                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 33252  01CE50  0E83               	movlw	131
 33253  01CE52  6F14               	movwf	20,b	;volatile
 33254                           
 33255                           ; BSR set to: 61
 33256                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33257  01CE54  0012               	return		;funcret
 33258  01CE56                     __end_of_SPI1_Initialize:
 33259                           	opt callstack 0
 33260                           
 33261 ;; *************** function _PWM8_Initialize *****************
 33262 ;; Defined at:
 33263 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 33264 ;; Parameters:    Size  Location     Type
 33265 ;;		None
 33266 ;; Auto vars:     Size  Location     Type
 33267 ;;		None
 33268 ;; Return value:  Size  Location     Type
 33269 ;;                  1  [STACK] void 
 33270 ;; Registers used:
 33271 ;;		wreg, status,2
 33272 ;; Tracked objects:
 33273 ;;		On entry : 0/3E
 33274 ;;		On exit  : 3F/3F
 33275 ;;		Unchanged: 0/0
 33276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33281 ;;Total ram usage:        0 bytes
 33282 ;; Hardware stack levels used:    1
 33283 ;; Hardware stack levels required when called:   15
 33284 ;; This function calls:
 33285 ;;		Nothing
 33286 ;; This function is called by:
 33287 ;;		_SYSTEM_Initialize
 33288 ;; This function uses a reentrant model
 33289 ;;
 33290                           
 33291                           	psect	text136
 33292  01CE56                     __ptext136:
 33293                           	opt callstack 0
 33294  01CE56                     _PWM8_Initialize:
 33295                           	opt callstack 14
 33296                           
 33297                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 33298                           
 33299                           ; BSR set to: 61
 33300                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33301                           ;incstack = 0
 33302  01CE56  0E80               	movlw	128
 33303  01CE58  6E62               	movwf	98,c	;volatile
 33304                           
 33305                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 33306  01CE5A  6A61               	clrf	97,c	;volatile
 33307                           
 33308                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 33309  01CE5C  0E40               	movlw	64
 33310  01CE5E  6E60               	movwf	96,c	;volatile
 33311                           
 33312                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 33313  01CE60  013F               	movlb	63	; () banked
 33314  01CE62  515F               	movf	95,w,b	;volatile
 33315  01CE64  0B3F               	andlw	-193
 33316  01CE66  0940               	iorlw	64
 33317  01CE68  6F5F               	movwf	95,b	;volatile
 33318                           
 33319                           ; BSR set to: 63
 33320                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33321  01CE6A  0012               	return		;funcret
 33322  01CE6C                     __end_of_PWM8_Initialize:
 33323                           	opt callstack 0
 33324                           
 33325 ;; *************** function _PMD_Initialize *****************
 33326 ;; Defined at:
 33327 ;;		line 90 in file "mcc_generated_files/mcc.c"
 33328 ;; Parameters:    Size  Location     Type
 33329 ;;		None
 33330 ;; Auto vars:     Size  Location     Type
 33331 ;;		None
 33332 ;; Return value:  Size  Location     Type
 33333 ;;                  1  [STACK] void 
 33334 ;; Registers used:
 33335 ;;		None
 33336 ;; Tracked objects:
 33337 ;;		On entry : 3F/39
 33338 ;;		On exit  : 3F/39
 33339 ;;		Unchanged: 0/0
 33340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33345 ;;Total ram usage:        0 bytes
 33346 ;; Hardware stack levels used:    1
 33347 ;; Hardware stack levels required when called:   15
 33348 ;; This function calls:
 33349 ;;		Nothing
 33350 ;; This function is called by:
 33351 ;;		_SYSTEM_Initialize
 33352 ;; This function uses a reentrant model
 33353 ;;
 33354                           
 33355                           	psect	text137
 33356  01CE82                     __ptext137:
 33357                           	opt callstack 0
 33358  01CE82                     _PMD_Initialize:
 33359                           	opt callstack 14
 33360                           
 33361                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 33362                           
 33363                           ; BSR set to: 63
 33364                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33365                           ;incstack = 0
 33366  01CE82  0139               	movlb	57	; () banked
 33367  01CE84  6BC0               	clrf	192,b	;volatile
 33368                           
 33369                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 33370  01CE86  6BC1               	clrf	193,b	;volatile
 33371                           
 33372                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 33373  01CE88  6BC2               	clrf	194,b	;volatile
 33374                           
 33375                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 33376  01CE8A  6BC3               	clrf	195,b	;volatile
 33377                           
 33378                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 33379  01CE8C  6BC4               	clrf	196,b	;volatile
 33380                           
 33381                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 33382  01CE8E  6BC5               	clrf	197,b	;volatile
 33383                           
 33384                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 33385  01CE90  6BC6               	clrf	198,b	;volatile
 33386                           
 33387                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 33388  01CE92  6BC7               	clrf	199,b	;volatile
 33389                           
 33390                           ; BSR set to: 57
 33391                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33392  01CE94  0012               	return		;funcret
 33393  01CE96                     __end_of_PMD_Initialize:
 33394                           	opt callstack 0
 33395                           
 33396 ;; *************** function _PIN_MANAGER_Initialize *****************
 33397 ;; Defined at:
 33398 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 33399 ;; Parameters:    Size  Location     Type
 33400 ;;		None
 33401 ;; Auto vars:     Size  Location     Type
 33402 ;;		None
 33403 ;; Return value:  Size  Location     Type
 33404 ;;                  1  [STACK] void 
 33405 ;; Registers used:
 33406 ;;		wreg, status,2
 33407 ;; Tracked objects:
 33408 ;;		On entry : 3F/39
 33409 ;;		On exit  : 3F/3A
 33410 ;;		Unchanged: 0/0
 33411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33416 ;;Total ram usage:        0 bytes
 33417 ;; Hardware stack levels used:    1
 33418 ;; Hardware stack levels required when called:   15
 33419 ;; This function calls:
 33420 ;;		Nothing
 33421 ;; This function is called by:
 33422 ;;		_SYSTEM_Initialize
 33423 ;; This function uses a reentrant model
 33424 ;;
 33425                           
 33426                           	psect	text138
 33427  01B64E                     __ptext138:
 33428                           	opt callstack 0
 33429  01B64E                     _PIN_MANAGER_Initialize:
 33430                           	opt callstack 14
 33431                           
 33432                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 33433                           
 33434                           ; BSR set to: 57
 33435                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33436                           ;incstack = 0
 33437  01B64E  0E07               	movlw	7
 33438  01B650  6EBE               	movwf	190,c	;volatile
 33439                           
 33440                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 33441  01B652  6ABD               	clrf	189,c	;volatile
 33442                           
 33443                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 33444  01B654  6ABA               	clrf	186,c	;volatile
 33445                           
 33446                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x23;
 33447  01B656  0E23               	movlw	35
 33448  01B658  6EBF               	movwf	191,c	;volatile
 33449                           
 33450                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 33451  01B65A  6ABB               	clrf	187,c	;volatile
 33452                           
 33453                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 33454  01B65C  0E07               	movlw	7
 33455  01B65E  6EBC               	movwf	188,c	;volatile
 33456                           
 33457                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 33458  01B660  6AC6               	clrf	198,c	;volatile
 33459                           
 33460                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0C;
 33461  01B662  0E0C               	movlw	12
 33462  01B664  6EC7               	movwf	199,c	;volatile
 33463                           
 33464                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 33465  01B666  68C2               	setf	194,c	;volatile
 33466                           
 33467                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 33468  01B668  0EBF               	movlw	191
 33469  01B66A  6EC3               	movwf	195,c	;volatile
 33470                           
 33471                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 33472  01B66C  0E90               	movlw	144
 33473  01B66E  6EC4               	movwf	196,c	;volatile
 33474                           
 33475                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 33476  01B670  0E0C               	movlw	12
 33477  01B672  6EC5               	movwf	197,c	;volatile
 33478                           
 33479                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 33480  01B674  013A               	movlb	58	; () banked
 33481  01B676  6B70               	clrf	112,b	;volatile
 33482                           
 33483                           ; BSR set to: 58
 33484                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 33485  01B678  6B60               	clrf	96,b	;volatile
 33486                           
 33487                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 33488  01B67A  0E3C               	movlw	60
 33489  01B67C  6F50               	movwf	80,b	;volatile
 33490                           
 33491                           ; BSR set to: 58
 33492                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 33493  01B67E  6B80               	clrf	128,b	;volatile
 33494                           
 33495                           ; BSR set to: 58
 33496                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 33497  01B680  6B90               	clrf	144,b	;volatile
 33498                           
 33499                           ; BSR set to: 58
 33500                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 33501  01B682  6940               	setf	64,b	;volatile
 33502                           
 33503                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 33504  01B684  0E0C               	movlw	12
 33505  01B686  6F71               	movwf	113,b	;volatile
 33506                           
 33507                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0C;
 33508  01B688  0E0C               	movlw	12
 33509  01B68A  6F91               	movwf	145,b	;volatile
 33510                           
 33511                           ; BSR set to: 58
 33512                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 33513  01B68C  6B81               	clrf	129,b	;volatile
 33514                           
 33515                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 33516  01B68E  0E83               	movlw	131
 33517  01B690  6F51               	movwf	81,b	;volatile
 33518                           
 33519                           ; BSR set to: 58
 33520                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 33521  01B692  6B41               	clrf	65,b	;volatile
 33522                           
 33523                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 33524  01B694  0E97               	movlw	151
 33525  01B696  6F61               	movwf	97,b	;volatile
 33526                           
 33527                           ; BSR set to: 58
 33528                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 33529  01B698  6B82               	clrf	130,b	;volatile
 33530                           
 33531                           ; BSR set to: 58
 33532                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 33533  01B69A  6B92               	clrf	146,b	;volatile
 33534                           
 33535                           ; BSR set to: 58
 33536                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 33537  01B69C  6B42               	clrf	66,b	;volatile
 33538                           
 33539                           ; BSR set to: 58
 33540                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 33541  01B69E  6B52               	clrf	82,b	;volatile
 33542                           
 33543                           ; BSR set to: 58
 33544                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 33545  01B6A0  6B62               	clrf	98,b	;volatile
 33546                           
 33547                           ; BSR set to: 58
 33548                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 33549  01B6A2  6B72               	clrf	114,b	;volatile
 33550                           
 33551                           ; BSR set to: 58
 33552                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 33553  01B6A4  6943               	setf	67,b	;volatile
 33554                           
 33555                           ; BSR set to: 58
 33556                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 33557  01B6A6  6953               	setf	83,b	;volatile
 33558                           
 33559                           ; BSR set to: 58
 33560                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 33561  01B6A8  6963               	setf	99,b	;volatile
 33562                           
 33563                           ; BSR set to: 58
 33564                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 33565  01B6AA  6973               	setf	115,b	;volatile
 33566                           
 33567                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 33568  01B6AC  0E07               	movlw	7
 33569  01B6AE  6F83               	movwf	131,b	;volatile
 33570                           
 33571                           ; BSR set to: 58
 33572                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 33573  01B6B0  6993               	setf	147,b	;volatile
 33574                           
 33575                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 33576  01B6B2  0E0F               	movlw	15
 33577  01B6B4  6FE8               	movwf	232,b	;volatile
 33578                           
 33579                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 33580  01B6B6  0E13               	movlw	19
 33581  01B6B8  6FDE               	movwf	222,b	;volatile
 33582                           
 33583                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 33584  01B6BA  0E16               	movlw	22
 33585  01B6BC  6F0E               	movwf	14,b	;volatile
 33586                           
 33587                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 33588  01B6BE  0E1E               	movlw	30
 33589  01B6C0  6F13               	movwf	19,b	;volatile
 33590                           
 33591                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 33592  01B6C2  0E08               	movlw	8
 33593  01B6C4  6FC0               	movwf	192,b	;volatile
 33594                           
 33595                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 33596  01B6C6  0E10               	movlw	16
 33597  01B6C8  6F19               	movwf	25,b	;volatile
 33598                           
 33599                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 33600  01B6CA  0E09               	movlw	9
 33601  01B6CC  6FC1               	movwf	193,b	;volatile
 33602                           
 33603                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 33604  01B6CE  0E1F               	movlw	31
 33605  01B6D0  6F15               	movwf	21,b	;volatile
 33606                           
 33607                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 33608  01B6D2  0E13               	movlw	19
 33609  01B6D4  6F16               	movwf	22,b	;volatile
 33610                           
 33611                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 33612  01B6D6  0E17               	movlw	23
 33613  01B6D8  6FE5               	movwf	229,b	;volatile
 33614                           
 33615                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 33616  01B6DA  0E14               	movlw	20
 33617  01B6DC  6FDF               	movwf	223,b	;volatile
 33618                           
 33619                           ; BSR set to: 58
 33620                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 33621  01B6DE  0012               	return		;funcret
 33622  01B6E0                     __end_of_PIN_MANAGER_Initialize:
 33623                           	opt callstack 0
 33624                           
 33625 ;; *************** function _OSCILLATOR_Initialize *****************
 33626 ;; Defined at:
 33627 ;;		line 72 in file "mcc_generated_files/mcc.c"
 33628 ;; Parameters:    Size  Location     Type
 33629 ;;		None
 33630 ;; Auto vars:     Size  Location     Type
 33631 ;;		None
 33632 ;; Return value:  Size  Location     Type
 33633 ;;                  1  [STACK] void 
 33634 ;; Registers used:
 33635 ;;		wreg, status,2
 33636 ;; Tracked objects:
 33637 ;;		On entry : 3F/3A
 33638 ;;		On exit  : 3F/39
 33639 ;;		Unchanged: 0/0
 33640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33645 ;;Total ram usage:        0 bytes
 33646 ;; Hardware stack levels used:    1
 33647 ;; Hardware stack levels required when called:   15
 33648 ;; This function calls:
 33649 ;;		Nothing
 33650 ;; This function is called by:
 33651 ;;		_SYSTEM_Initialize
 33652 ;; This function uses a reentrant model
 33653 ;;
 33654                           
 33655                           	psect	text139
 33656  01CE6C                     __ptext139:
 33657                           	opt callstack 0
 33658  01CE6C                     _OSCILLATOR_Initialize:
 33659                           	opt callstack 14
 33660                           
 33661                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 33662                           
 33663                           ; BSR set to: 58
 33664                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33665                           ;incstack = 0
 33666  01CE6C  0E20               	movlw	32
 33667  01CE6E  0139               	movlb	57	; () banked
 33668  01CE70  6FD9               	movwf	217,b	;volatile
 33669                           
 33670                           ; BSR set to: 57
 33671                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 33672  01CE72  6BDB               	clrf	219,b	;volatile
 33673                           
 33674                           ; BSR set to: 57
 33675                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 33676  01CE74  6BDD               	clrf	221,b	;volatile
 33677                           
 33678                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 33679  01CE76  0E02               	movlw	2
 33680  01CE78  6FDF               	movwf	223,b	;volatile
 33681                           
 33682                           ; BSR set to: 57
 33683                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 33684  01CE7A  6BDE               	clrf	222,b	;volatile
 33685  01CE7C                     l169:
 33686                           
 33687                           ; BSR set to: 57
 33688                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 33689  01CE7C  B1DC               	btfsc	220,0,b	;volatile
 33690  01CE7E  0012               	return	
 33691  01CE80  D7FD               	goto	l169
 33692  01CE82                     __end_of_OSCILLATOR_Initialize:
 33693                           	opt callstack 0
 33694                           
 33695 ;; *************** function _INTERRUPT_Initialize *****************
 33696 ;; Defined at:
 33697 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 33698 ;; Parameters:    Size  Location     Type
 33699 ;;		None
 33700 ;; Auto vars:     Size  Location     Type
 33701 ;;  state           1  [STACK] _Bool 
 33702 ;; Return value:  Size  Location     Type
 33703 ;;                  1  [STACK] void 
 33704 ;; Registers used:
 33705 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 33706 ;; Tracked objects:
 33707 ;;		On entry : 0/0
 33708 ;;		On exit  : 3F/39
 33709 ;;		Unchanged: 0/0
 33710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33715 ;;Total ram usage:        0 bytes
 33716 ;; Hardware stack levels used:    1
 33717 ;; Hardware stack levels required when called:   15
 33718 ;; This function calls:
 33719 ;;		Nothing
 33720 ;; This function is called by:
 33721 ;;		_SYSTEM_Initialize
 33722 ;; This function uses a reentrant model
 33723 ;;
 33724                           
 33725                           	psect	text140
 33726  01BD6C                     __ptext140:
 33727                           	opt callstack 0
 33728  01BD6C                     _INTERRUPT_Initialize:
 33729                           	opt callstack 0
 33730                           
 33731                           ; BSR set to: 57
 33732                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33733  01BD6C  52E6               	movf	postinc1,f,c
 33734                           
 33735                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 33736                           
 33737                           ;incstack = 0
 33738  01BD6E  8AD2               	bsf	210,5,c	;volatile
 33739                           
 33740                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 33741  01BD70  AED2               	btfss	16338,7,c	;volatile
 33742  01BD72  D003               	goto	u9820
 33743  01BD74  6A0C               	clrf	(btemp+11)^0,c
 33744  01BD76  2A0C               	incf	(btemp+11)^0,f,c
 33745  01BD78  D001               	goto	u9838
 33746  01BD7A                     u9820:
 33747  01BD7A  6A0C               	clrf	(btemp+11)^0,c
 33748  01BD7C                     u9838:
 33749                           
 33750                           ;stkvar	_state @ sp[(-1)+0]
 33751  01BD7C  0EFF               	movlw	-1
 33752  01BD7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 33753                           
 33754                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 33755  01BD84  9ED2               	bcf	16338,7,c	;volatile
 33756                           
 33757                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 33758  01BD86  0E55               	movlw	85
 33759  01BD88  6ED4               	movwf	212,c	;volatile
 33760                           
 33761                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 33762  01BD8A  0EAA               	movlw	170
 33763  01BD8C  6ED4               	movwf	212,c	;volatile
 33764                           
 33765                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 33766  01BD8E  90D4               	bcf	212,0,c	;volatile
 33767                           
 33768                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 33769  01BD90  0138               	movlb	56	; () banked
 33770  01BD92  6B9F               	clrf	159,b	;volatile
 33771                           
 33772                           ; BSR set to: 56
 33773                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 33774  01BD94  6B9E               	clrf	158,b	;volatile
 33775                           
 33776                           ; BSR set to: 56
 33777                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 33778  01BD96  0E08               	movlw	8
 33779  01BD98  6F9D               	movwf	157,b	;volatile
 33780                           
 33781                           ; BSR set to: 56
 33782                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 33783  01BD9A  0E55               	movlw	85
 33784  01BD9C  6ED4               	movwf	212,c	;volatile
 33785                           
 33786                           ; BSR set to: 56
 33787                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 33788  01BD9E  0EAA               	movlw	170
 33789  01BDA0  6ED4               	movwf	212,c	;volatile
 33790                           
 33791                           ; BSR set to: 56
 33792                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 33793  01BDA2  80D4               	bsf	212,0,c	;volatile
 33794                           
 33795                           ; BSR set to: 56
 33796                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 33797                           ;stkvar	_state @ sp[(-1)+0]
 33798  01BDA4  0EFF               	movlw	-1
 33799  01BDA6  B0E3               	btfsc	plusw1,0,c
 33800  01BDA8  D002               	bra	u9845
 33801  01BDAA  9ED2               	bcf	16338,7,c	;volatile
 33802  01BDAC  D001               	bra	u9846
 33803  01BDAE                     u9845:
 33804  01BDAE  8ED2               	bsf	16338,7,c	;volatile
 33805  01BDB0                     u9846:
 33806                           
 33807                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 33808  01BDB0  0139               	movlb	57	; () banked
 33809  01BDB2  8782               	bsf	130,3,b	;volatile
 33810                           
 33811                           ; BSR set to: 57
 33812                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 33813  01BDB4  8382               	bsf	130,1,b	;volatile
 33814                           
 33815                           ; BSR set to: 57
 33816                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 33817  01BDB6  8182               	bsf	130,0,b	;volatile
 33818                           
 33819                           ; BSR set to: 57
 33820                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 33821  01BDB8  8582               	bsf	130,2,b	;volatile
 33822                           
 33823                           ; BSR set to: 57
 33824                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 33825  01BDBA  8786               	bsf	134,3,b	;volatile
 33826                           
 33827                           ; BSR set to: 57
 33828                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 33829  01BDBC  8586               	bsf	134,2,b	;volatile
 33830                           
 33831                           ; BSR set to: 57
 33832                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 33833  01BDBE  8783               	bsf	131,3,b	;volatile
 33834                           
 33835                           ; BSR set to: 57
 33836                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 33837  01BDC0  8181               	bsf	129,0,b	;volatile
 33838                           
 33839                           ; BSR set to: 57
 33840                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 33841  01BDC2  9185               	bcf	133,0,b	;volatile
 33842                           
 33843                           ; BSR set to: 57
 33844                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 33845  01BDC4  8189               	bsf	137,0,b	;volatile
 33846                           
 33847                           ; BSR set to: 57
 33848                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 33849  01BDC6  9D88               	bcf	136,6,b	;volatile
 33850                           
 33851                           ; BSR set to: 57
 33852                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 33853  01BDC8  9D86               	bcf	134,6,b	;volatile
 33854                           
 33855                           ; BSR set to: 57
 33856                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 33857  01BDCA  8581               	bsf	129,2,b	;volatile
 33858                           
 33859                           ; BSR set to: 57
 33860                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 33861  01BDCC  8781               	bsf	129,3,b	;volatile
 33862                           
 33863                           ; BSR set to: 57
 33864                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 33865  01BDCE  52E5               	movf	postdec1,f,c
 33866  01BDD0  0012               	return		;funcret
 33867  01BDD2                     __end_of_INTERRUPT_Initialize:
 33868                           	opt callstack 0
 33869                           
 33870 ;; *************** function _FVR_Initialize *****************
 33871 ;; Defined at:
 33872 ;;		line 58 in file "mcc_generated_files/fvr.c"
 33873 ;; Parameters:    Size  Location     Type
 33874 ;;		None
 33875 ;; Auto vars:     Size  Location     Type
 33876 ;;		None
 33877 ;; Return value:  Size  Location     Type
 33878 ;;                  1  [STACK] void 
 33879 ;; Registers used:
 33880 ;;		wreg, status,2
 33881 ;; Tracked objects:
 33882 ;;		On entry : 3F/39
 33883 ;;		On exit  : 3F/3E
 33884 ;;		Unchanged: 0/0
 33885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33890 ;;Total ram usage:        0 bytes
 33891 ;; Hardware stack levels used:    1
 33892 ;; Hardware stack levels required when called:   15
 33893 ;; This function calls:
 33894 ;;		Nothing
 33895 ;; This function is called by:
 33896 ;;		_SYSTEM_Initialize
 33897 ;; This function uses a reentrant model
 33898 ;;
 33899                           
 33900                           	psect	text141
 33901  01CF8A                     __ptext141:
 33902                           	opt callstack 0
 33903  01CF8A                     _FVR_Initialize:
 33904                           	opt callstack 14
 33905                           
 33906                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 33907                           
 33908                           ; BSR set to: 57
 33909                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33910                           ;incstack = 0
 33911  01CF8A  0EAF               	movlw	175
 33912  01CF8C  013E               	movlb	62	; () banked
 33913  01CF8E  6FC1               	movwf	193,b	;volatile
 33914                           
 33915                           ; BSR set to: 62
 33916                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 33917  01CF90  0012               	return		;funcret
 33918  01CF92                     __end_of_FVR_Initialize:
 33919                           	opt callstack 0
 33920                           
 33921 ;; *************** function _EXT_INT_Initialize *****************
 33922 ;; Defined at:
 33923 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 33924 ;; Parameters:    Size  Location     Type
 33925 ;;		None
 33926 ;; Auto vars:     Size  Location     Type
 33927 ;;		None
 33928 ;; Return value:  Size  Location     Type
 33929 ;;                  1  [STACK] void 
 33930 ;; Registers used:
 33931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 33932 ;; Tracked objects:
 33933 ;;		On entry : 3F/39
 33934 ;;		On exit  : 3F/39
 33935 ;;		Unchanged: 0/0
 33936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33941 ;;Total ram usage:        0 bytes
 33942 ;; Hardware stack levels used:    1
 33943 ;; Hardware stack levels required when called:   16
 33944 ;; This function calls:
 33945 ;;		_INT0_SetInterruptHandler
 33946 ;;		_INT1_SetInterruptHandler
 33947 ;; This function is called by:
 33948 ;;		_SYSTEM_Initialize
 33949 ;; This function uses a reentrant model
 33950 ;;
 33951                           
 33952                           	psect	text142
 33953  01C754                     __ptext142:
 33954                           	opt callstack 0
 33955  01C754                     _EXT_INT_Initialize:
 33956                           	opt callstack 13
 33957                           
 33958                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 33959                           
 33960                           ; BSR set to: 62
 33961                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33962                           ;incstack = 0
 33963  01C754  0139               	movlb	57	; () banked
 33964  01C756  91A1               	bcf	161,0,b	;volatile
 33965                           
 33966                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 33967  01C758  90D2               	bcf	210,0,c	;volatile
 33968                           
 33969                           ; BSR set to: 57
 33970                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 33971  01C75A  0EB6               	movlw	low _INT0_DefaultInterruptHandler
 33972  01C75C  6EE6               	movwf	postinc1,c
 33973  01C75E  0ECF               	movlw	high _INT0_DefaultInterruptHandler
 33974  01C760  6EE6               	movwf	postinc1,c
 33975  01C762  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 33976  01C764  6EE6               	movwf	postinc1,c
 33977  01C766  EC5F  F0E5         	call	_INT0_SetInterruptHandler	;wreg free
 33978                           
 33979                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 33980  01C76A  0139               	movlb	57	; () banked
 33981  01C76C  8191               	bsf	145,0,b	;volatile
 33982                           
 33983                           ; BSR set to: 57
 33984                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 33985  01C76E  91A5               	bcf	165,0,b	;volatile
 33986                           
 33987                           ; BSR set to: 57
 33988                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 33989  01C770  92D2               	bcf	210,1,c	;volatile
 33990                           
 33991                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 33992  01C772  0EB2               	movlw	low _INT1_DefaultInterruptHandler
 33993  01C774  6EE6               	movwf	postinc1,c
 33994  01C776  0ECF               	movlw	high _INT1_DefaultInterruptHandler
 33995  01C778  6EE6               	movwf	postinc1,c
 33996  01C77A  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 33997  01C77C  6EE6               	movwf	postinc1,c
 33998  01C77E  EC4B  F0E5         	call	_INT1_SetInterruptHandler	;wreg free
 33999                           
 34000                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 34001  01C782  0139               	movlb	57	; () banked
 34002  01C784  8195               	bsf	149,0,b	;volatile
 34003                           
 34004                           ; BSR set to: 57
 34005                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 34006  01C786  0012               	return		;funcret
 34007  01C788                     __end_of_EXT_INT_Initialize:
 34008                           	opt callstack 0
 34009                           
 34010 ;; *************** function _INT1_SetInterruptHandler *****************
 34011 ;; Defined at:
 34012 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 34013 ;; Parameters:    Size  Location     Type
 34014 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34015 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 34016 ;; Auto vars:     Size  Location     Type
 34017 ;;		None
 34018 ;; Return value:  Size  Location     Type
 34019 ;;                  1  [STACK] void 
 34020 ;; Registers used:
 34021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34022 ;; Tracked objects:
 34023 ;;		On entry : 3F/39
 34024 ;;		On exit  : 0/0
 34025 ;;		Unchanged: 0/0
 34026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34031 ;;Total ram usage:        0 bytes
 34032 ;; Hardware stack levels used:    1
 34033 ;; Hardware stack levels required when called:   15
 34034 ;; This function calls:
 34035 ;;		Nothing
 34036 ;; This function is called by:
 34037 ;;		_EXT_INT_Initialize
 34038 ;;		_start_switch_handler
 34039 ;; This function uses a reentrant model
 34040 ;;
 34041                           
 34042                           	psect	text143
 34043  01CA96                     __ptext143:
 34044                           	opt callstack 0
 34045  01CA96                     _INT1_SetInterruptHandler:
 34046                           	opt callstack 14
 34047                           
 34048                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 34049                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34050                           
 34051                           ; BSR set to: 57
 34052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34053                           ;incstack = 0
 34054  01CA96  50E1               	movf	fsr1l,w,c
 34055  01CA98  0FFD               	addlw	-3
 34056  01CA9A  6ED9               	movwf	fsr2l,c
 34057  01CA9C  50E2               	movf	fsr1h,w,c
 34058  01CA9E  6EDA               	movwf	fsr2h,c
 34059  01CAA0  0EFF               	movlw	255
 34060  01CAA2  22DA               	addwfc	fsr2h,f,c
 34061  01CAA4  006F FF78  F090    	movff	postinc2,_INT1_InterruptHandler
 34062  01CAAA  006F FF78  F091    	movff	postinc2,_INT1_InterruptHandler+1
 34063  01CAB0  006F FF74  F092    	movff	postdec2,_INT1_InterruptHandler+2
 34064                           
 34065                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 34066  01CAB6  52E5               	movf	postdec1,f,c
 34067  01CAB8  52E5               	movf	postdec1,f,c
 34068  01CABA  52E5               	movf	postdec1,f,c
 34069  01CABC  0012               	return		;funcret
 34070  01CABE                     __end_of_INT1_SetInterruptHandler:
 34071                           	opt callstack 0
 34072                           
 34073 ;; *************** function _INT0_SetInterruptHandler *****************
 34074 ;; Defined at:
 34075 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 34076 ;; Parameters:    Size  Location     Type
 34077 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34078 ;;		 -> INT0_DefaultInterruptHandler(1), 
 34079 ;; Auto vars:     Size  Location     Type
 34080 ;;		None
 34081 ;; Return value:  Size  Location     Type
 34082 ;;                  1  [STACK] void 
 34083 ;; Registers used:
 34084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34085 ;; Tracked objects:
 34086 ;;		On entry : 3F/39
 34087 ;;		On exit  : 0/0
 34088 ;;		Unchanged: 0/0
 34089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34094 ;;Total ram usage:        0 bytes
 34095 ;; Hardware stack levels used:    1
 34096 ;; Hardware stack levels required when called:   15
 34097 ;; This function calls:
 34098 ;;		Nothing
 34099 ;; This function is called by:
 34100 ;;		_EXT_INT_Initialize
 34101 ;; This function uses a reentrant model
 34102 ;;
 34103                           
 34104                           	psect	text144
 34105  01CABE                     __ptext144:
 34106                           	opt callstack 0
 34107  01CABE                     _INT0_SetInterruptHandler:
 34108                           	opt callstack 13
 34109                           
 34110                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 34111                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34112                           
 34113                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34114                           ;incstack = 0
 34115  01CABE  50E1               	movf	fsr1l,w,c
 34116  01CAC0  0FFD               	addlw	-3
 34117  01CAC2  6ED9               	movwf	fsr2l,c
 34118  01CAC4  50E2               	movf	fsr1h,w,c
 34119  01CAC6  6EDA               	movwf	fsr2h,c
 34120  01CAC8  0EFF               	movlw	255
 34121  01CACA  22DA               	addwfc	fsr2h,f,c
 34122  01CACC  006F FF78  F093    	movff	postinc2,_INT0_InterruptHandler
 34123  01CAD2  006F FF78  F094    	movff	postinc2,_INT0_InterruptHandler+1
 34124  01CAD8  006F FF74  F095    	movff	postdec2,_INT0_InterruptHandler+2
 34125                           
 34126                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 34127  01CADE  52E5               	movf	postdec1,f,c
 34128  01CAE0  52E5               	movf	postdec1,f,c
 34129  01CAE2  52E5               	movf	postdec1,f,c
 34130  01CAE4  0012               	return		;funcret
 34131  01CAE6                     __end_of_INT0_SetInterruptHandler:
 34132                           	opt callstack 0
 34133                           
 34134 ;; *************** function _DMA2_Initialize *****************
 34135 ;; Defined at:
 34136 ;;		line 61 in file "mcc_generated_files/dma2.c"
 34137 ;; Parameters:    Size  Location     Type
 34138 ;;		None
 34139 ;; Auto vars:     Size  Location     Type
 34140 ;;		None
 34141 ;; Return value:  Size  Location     Type
 34142 ;;                  1  [STACK] void 
 34143 ;; Registers used:
 34144 ;;		wreg, status,2
 34145 ;; Tracked objects:
 34146 ;;		On entry : 3F/3D
 34147 ;;		On exit  : 3F/3B
 34148 ;;		Unchanged: 0/0
 34149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34154 ;;Total ram usage:        0 bytes
 34155 ;; Hardware stack levels used:    1
 34156 ;; Hardware stack levels required when called:   15
 34157 ;; This function calls:
 34158 ;;		Nothing
 34159 ;; This function is called by:
 34160 ;;		_SYSTEM_Initialize
 34161 ;; This function uses a reentrant model
 34162 ;;
 34163                           
 34164                           	psect	text145
 34165  01C00E                     __ptext145:
 34166                           	opt callstack 0
 34167  01C00E                     _DMA2_Initialize:
 34168                           	opt callstack 14
 34169                           
 34170                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 34171                           
 34172                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34173                           ;incstack = 0
 34174  01C00E  0E00               	movlw	0
 34175  01C010  013B               	movlb	59	; () banked
 34176  01C012  6FD9               	movwf	217,b	;volatile
 34177  01C014  0E10               	movlw	16
 34178  01C016  6FDA               	movwf	218,b	;volatile
 34179  01C018  0E00               	movlw	0
 34180  01C01A  6FDB               	movwf	219,b	;volatile
 34181                           
 34182                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 34183  01C01C  0E3F               	movlw	63
 34184  01C01E  6FD1               	movwf	209,b	;volatile
 34185  01C020  0EBB               	movlw	187
 34186  01C022  6FD0               	movwf	208,b	;volatile
 34187                           
 34188                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 34189  01C024  0E03               	movlw	3
 34190  01C026  6FDD               	movwf	221,b	;volatile
 34191                           
 34192                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 34193  01C028  0E00               	movlw	0
 34194  01C02A  6FD8               	movwf	216,b	;volatile
 34195  01C02C  0E01               	movlw	1
 34196  01C02E  6FD7               	movwf	215,b	;volatile
 34197                           
 34198                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 34199  01C030  0E00               	movlw	0
 34200  01C032  6FCF               	movwf	207,b	;volatile
 34201  01C034  0E01               	movlw	1
 34202  01C036  6FCE               	movwf	206,b	;volatile
 34203                           
 34204                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 34205  01C038  0E1C               	movlw	28
 34206  01C03A  6FDF               	movwf	223,b	;volatile
 34207                           
 34208                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 34209  01C03C  0E3D               	movlw	61
 34210  01C03E  6FDE               	movwf	222,b	;volatile
 34211                           
 34212                           ; BSR set to: 59
 34213                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 34214  01C040  0139               	movlb	57	; () banked
 34215  01C042  97A5               	bcf	165,3,b	;volatile
 34216                           
 34217                           ; BSR set to: 57
 34218                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 34219  01C044  95A5               	bcf	165,2,b	;volatile
 34220                           
 34221                           ; BSR set to: 57
 34222                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 34223  01C046  9BA5               	bcf	165,5,b	;volatile
 34224                           
 34225                           ; BSR set to: 57
 34226                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 34227  01C048  99A5               	bcf	165,4,b	;volatile
 34228                           
 34229                           ; BSR set to: 57
 34230                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 34231  01C04A  9795               	bcf	149,3,b	;volatile
 34232                           
 34233                           ; BSR set to: 57
 34234                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 34235  01C04C  9595               	bcf	149,2,b	;volatile
 34236                           
 34237                           ; BSR set to: 57
 34238                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 34239  01C04E  9B95               	bcf	149,5,b	;volatile
 34240                           
 34241                           ; BSR set to: 57
 34242                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 34243  01C050  9995               	bcf	149,4,b	;volatile
 34244  01C052  9ED2               	bcf	16338,7,c	;# 
 34245  01C054  0139               	banksel	14831	;# 
 34246  01C056  0E55               	movlw	85	;# 
 34247  01C058  6FEF               	movwf	14831,b	;# 
 34248  01C05A  0EAA               	movlw	170	;# 
 34249  01C05C  6FEF               	movwf	14831,b	;# 
 34250  01C05E  81EF               	bsf	14831,0,b	;# 
 34251  01C060  8ED2               	bsf	16338,7,c	;# 
 34252                           
 34253                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 34254  01C062  013B               	movlb	59	; () banked
 34255  01C064  6BDC               	clrf	220,b	;volatile
 34256                           
 34257                           ; BSR set to: 59
 34258                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34259  01C066  0012               	return		;funcret
 34260  01C068                     __end_of_DMA2_Initialize:
 34261                           	opt callstack 0
 34262                           
 34263 ;; *************** function _DMA1_Initialize *****************
 34264 ;; Defined at:
 34265 ;;		line 86 in file "mcc_generated_files/dma1.c"
 34266 ;; Parameters:    Size  Location     Type
 34267 ;;		None
 34268 ;; Auto vars:     Size  Location     Type
 34269 ;;		None
 34270 ;; Return value:  Size  Location     Type
 34271 ;;                  1  [STACK] void 
 34272 ;; Registers used:
 34273 ;;		wreg, status,2
 34274 ;; Tracked objects:
 34275 ;;		On entry : 3F/3B
 34276 ;;		On exit  : 3F/3B
 34277 ;;		Unchanged: 0/0
 34278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34283 ;;Total ram usage:        0 bytes
 34284 ;; Hardware stack levels used:    1
 34285 ;; Hardware stack levels required when called:   15
 34286 ;; This function calls:
 34287 ;;		Nothing
 34288 ;; This function is called by:
 34289 ;;		_SYSTEM_Initialize
 34290 ;; This function uses a reentrant model
 34291 ;;
 34292                           
 34293                           	psect	text146
 34294  01BB60                     __ptext146:
 34295                           	opt callstack 0
 34296  01BB60                     _DMA1_Initialize:
 34297                           	opt callstack 14
 34298                           
 34299                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 34300                           
 34301                           ; BSR set to: 59
 34302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34303                           ;incstack = 0
 34304  01BB60  0E00               	movlw	0
 34305  01BB62  013B               	movlb	59	; () banked
 34306  01BB64  6FF9               	movwf	249,b	;volatile
 34307  01BB66  0E10               	movlw	16
 34308  01BB68  6FFA               	movwf	250,b	;volatile
 34309  01BB6A  0E00               	movlw	0
 34310  01BB6C  6FFB               	movwf	251,b	;volatile
 34311                           
 34312                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 34313  01BB6E  0E3D               	movlw	61
 34314  01BB70  6FF1               	movwf	241,b	;volatile
 34315  01BB72  0E11               	movlw	17
 34316  01BB74  6FF0               	movwf	240,b	;volatile
 34317                           
 34318                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 34319  01BB76  0E03               	movlw	3
 34320  01BB78  6FFD               	movwf	253,b	;volatile
 34321                           
 34322                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 34323  01BB7A  0E00               	movlw	0
 34324  01BB7C  6FF8               	movwf	248,b	;volatile
 34325  01BB7E  0E01               	movlw	1
 34326  01BB80  6FF7               	movwf	247,b	;volatile
 34327                           
 34328                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 34329  01BB82  0E00               	movlw	0
 34330  01BB84  6FEF               	movwf	239,b	;volatile
 34331  01BB86  0E01               	movlw	1
 34332  01BB88  6FEE               	movwf	238,b	;volatile
 34333                           
 34334                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 34335  01BB8A  0E15               	movlw	21
 34336  01BB8C  6FFF               	movwf	255,b	;volatile
 34337                           
 34338                           ; BSR set to: 59
 34339                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 34340  01BB8E  6BFE               	clrf	254,b	;volatile
 34341                           
 34342                           ; BSR set to: 59
 34343                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 34344  01BB90  0139               	movlb	57	; () banked
 34345  01BB92  93A2               	bcf	162,1,b	;volatile
 34346                           
 34347                           ; BSR set to: 57
 34348                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 34349  01BB94  91A2               	bcf	162,0,b	;volatile
 34350                           
 34351                           ; BSR set to: 57
 34352                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 34353  01BB96  97A2               	bcf	162,3,b	;volatile
 34354                           
 34355                           ; BSR set to: 57
 34356                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 34357  01BB98  95A2               	bcf	162,2,b	;volatile
 34358                           
 34359                           ; BSR set to: 57
 34360                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 34361  01BB9A  8392               	bsf	146,1,b	;volatile
 34362                           
 34363                           ; BSR set to: 57
 34364                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 34365  01BB9C  8192               	bsf	146,0,b	;volatile
 34366                           
 34367                           ; BSR set to: 57
 34368                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 34369  01BB9E  8792               	bsf	146,3,b	;volatile
 34370                           
 34371                           ; BSR set to: 57
 34372                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 34373  01BBA0  8592               	bsf	146,2,b	;volatile
 34374                           
 34375                           ; BSR set to: 57
 34376                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 34377  01BBA2  6BF1               	clrf	241,b	;volatile
 34378                           
 34379                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 34380  01BBA4  0E01               	movlw	1
 34381  01BBA6  6FF2               	movwf	242,b	;volatile
 34382                           
 34383                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 34384  01BBA8  0E04               	movlw	4
 34385  01BBAA  6FF3               	movwf	243,b	;volatile
 34386                           
 34387                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 34388  01BBAC  0E02               	movlw	2
 34389  01BBAE  6FF4               	movwf	244,b	;volatile
 34390                           
 34391                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 34392  01BBB0  0E03               	movlw	3
 34393  01BBB2  6FF7               	movwf	247,b	;volatile
 34394  01BBB4  9ED2               	bcf	16338,7,c	;# 
 34395  01BBB6  0139               	banksel	14831	;# 
 34396  01BBB8  0E55               	movlw	85	;# 
 34397  01BBBA  6FEF               	movwf	14831,b	;# 
 34398  01BBBC  0EAA               	movlw	170	;# 
 34399  01BBBE  6FEF               	movwf	14831,b	;# 
 34400  01BBC0  81EF               	bsf	14831,0,b	;# 
 34401  01BBC2  8ED2               	bsf	16338,7,c	;# 
 34402                           
 34403                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 34404  01BBC4  013B               	movlb	59	; () banked
 34405  01BBC6  6BFC               	clrf	252,b	;volatile
 34406                           
 34407                           ; BSR set to: 59
 34408                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34409  01BBC8  0012               	return		;funcret
 34410  01BBCA                     __end_of_DMA1_Initialize:
 34411                           	opt callstack 0
 34412                           
 34413 ;; *************** function _CLKREF_Initialize *****************
 34414 ;; Defined at:
 34415 ;;		line 58 in file "mcc_generated_files/clkref.c"
 34416 ;; Parameters:    Size  Location     Type
 34417 ;;		None
 34418 ;; Auto vars:     Size  Location     Type
 34419 ;;		None
 34420 ;; Return value:  Size  Location     Type
 34421 ;;                  1  [STACK] void 
 34422 ;; Registers used:
 34423 ;;		wreg, status,2
 34424 ;; Tracked objects:
 34425 ;;		On entry : 3F/3B
 34426 ;;		On exit  : 3F/3C
 34427 ;;		Unchanged: 0/0
 34428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34433 ;;Total ram usage:        0 bytes
 34434 ;; Hardware stack levels used:    1
 34435 ;; Hardware stack levels required when called:   15
 34436 ;; This function calls:
 34437 ;;		Nothing
 34438 ;; This function is called by:
 34439 ;;		_SYSTEM_Initialize
 34440 ;; This function uses a reentrant model
 34441 ;;
 34442                           
 34443                           	psect	text147
 34444  01CF32                     __ptext147:
 34445                           	opt callstack 0
 34446  01CF32                     _CLKREF_Initialize:
 34447                           	opt callstack 14
 34448                           
 34449                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 34450                           
 34451                           ; BSR set to: 59
 34452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34453                           ;incstack = 0
 34454  01CF32  013C               	movlb	60	; () banked
 34455  01CF34  6BE6               	clrf	230,b	;volatile
 34456                           
 34457                           ; BSR set to: 60
 34458                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 34459  01CF36  0E94               	movlw	148
 34460  01CF38  6FE5               	movwf	229,b	;volatile
 34461                           
 34462                           ; BSR set to: 60
 34463                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34464  01CF3A  0012               	return		;funcret
 34465  01CF3C                     __end_of_CLKREF_Initialize:
 34466                           	opt callstack 0
 34467                           
 34468 ;; *************** function _ADCC_Initialize *****************
 34469 ;; Defined at:
 34470 ;;		line 65 in file "mcc_generated_files/adcc.c"
 34471 ;; Parameters:    Size  Location     Type
 34472 ;;		None
 34473 ;; Auto vars:     Size  Location     Type
 34474 ;;		None
 34475 ;; Return value:  Size  Location     Type
 34476 ;;                  1  [STACK] void 
 34477 ;; Registers used:
 34478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 34479 ;; Tracked objects:
 34480 ;;		On entry : 3F/3E
 34481 ;;		On exit  : 0/0
 34482 ;;		Unchanged: 0/0
 34483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34488 ;;Total ram usage:        0 bytes
 34489 ;; Hardware stack levels used:    1
 34490 ;; Hardware stack levels required when called:   16
 34491 ;; This function calls:
 34492 ;;		_ADCC_SetADIInterruptHandler
 34493 ;;		_ADCC_SetADTIInterruptHandler
 34494 ;; This function is called by:
 34495 ;;		_SYSTEM_Initialize
 34496 ;; This function uses a reentrant model
 34497 ;;
 34498                           
 34499                           	psect	text148
 34500  01BBCA                     __ptext148:
 34501                           	opt callstack 0
 34502  01BBCA                     _ADCC_Initialize:
 34503                           	opt callstack 13
 34504                           
 34505                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 34506                           
 34507                           ; BSR set to: 60
 34508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34509                           ;incstack = 0
 34510  01BBCA  013E               	movlb	62	; () banked
 34511  01BBCC  6BDE               	clrf	222,b	;volatile
 34512                           
 34513                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 34514  01BBCE  6BDF               	clrf	223,b	;volatile
 34515                           
 34516                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 34517  01BBD0  6BE0               	clrf	224,b	;volatile
 34518                           
 34519                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 34520  01BBD2  6BE1               	clrf	225,b	;volatile
 34521                           
 34522                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 34523  01BBD4  6BE4               	clrf	228,b	;volatile
 34524                           
 34525                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 34526  01BBD6  6BE5               	clrf	229,b	;volatile
 34527                           
 34528                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 34529  01BBD8  6BEA               	clrf	234,b	;volatile
 34530                           
 34531                           ; BSR set to: 62
 34532                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 34533  01BBDA  0E40               	movlw	64
 34534  01BBDC  6FEC               	movwf	236,b	;volatile
 34535                           
 34536                           ; BSR set to: 62
 34537                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 34538  01BBDE  6BF1               	clrf	241,b	;volatile
 34539                           
 34540                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 34541  01BBE0  0E20               	movlw	32
 34542  01BBE2  6FF3               	movwf	243,b	;volatile
 34543                           
 34544                           ; BSR set to: 62
 34545                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 34546  01BBE4  6BF4               	clrf	244,b	;volatile
 34547                           
 34548                           ; BSR set to: 62
 34549                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 34550  01BBE6  6BF5               	clrf	245,b	;volatile
 34551                           
 34552                           ; BSR set to: 62
 34553                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 34554  01BBE8  6BF6               	clrf	246,b	;volatile
 34555                           
 34556                           ; BSR set to: 62
 34557                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 34558  01BBEA  6BF7               	clrf	247,b	;volatile
 34559                           
 34560                           ; BSR set to: 62
 34561                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 34562  01BBEC  6BF9               	clrf	249,b	;volatile
 34563                           
 34564                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 34565  01BBEE  0E5B               	movlw	91
 34566  01BBF0  6FFA               	movwf	250,b	;volatile
 34567                           
 34568                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 34569  01BBF2  0E27               	movlw	39
 34570  01BBF4  6FFB               	movwf	251,b	;volatile
 34571                           
 34572                           ; BSR set to: 62
 34573                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 34574  01BBF6  6BFC               	clrf	252,b	;volatile
 34575                           
 34576                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 34577  01BBF8  0E02               	movlw	2
 34578  01BBFA  6FFD               	movwf	253,b	;volatile
 34579                           
 34580                           ; BSR set to: 62
 34581                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 34582  01BBFC  6BFE               	clrf	254,b	;volatile
 34583                           
 34584                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 34585  01BBFE  0E07               	movlw	7
 34586  01BC00  6FFF               	movwf	255,b	;volatile
 34587                           
 34588                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 34589  01BC02  0E84               	movlw	132
 34590  01BC04  6FF8               	movwf	248,b	;volatile
 34591                           
 34592                           ; BSR set to: 62
 34593                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 34594  01BC06  0139               	movlb	57	; () banked
 34595  01BC08  95A1               	bcf	161,2,b	;volatile
 34596                           
 34597                           ; BSR set to: 57
 34598                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 34599  01BC0A  8591               	bsf	145,2,b	;volatile
 34600                           
 34601                           ; BSR set to: 57
 34602                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 34603  01BC0C  0EB8               	movlw	low _ADCC_DefaultInterruptHandler
 34604  01BC0E  6EE6               	movwf	postinc1,c
 34605  01BC10  0ECF               	movlw	high _ADCC_DefaultInterruptHandler
 34606  01BC12  6EE6               	movwf	postinc1,c
 34607  01BC14  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 34608  01BC16  6EE6               	movwf	postinc1,c
 34609  01BC18  EC87  F0E5         	call	_ADCC_SetADIInterruptHandler	;wreg free
 34610                           
 34611                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 34612  01BC1C  0139               	movlb	57	; () banked
 34613  01BC1E  97A1               	bcf	161,3,b	;volatile
 34614                           
 34615                           ; BSR set to: 57
 34616                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 34617  01BC20  8791               	bsf	145,3,b	;volatile
 34618                           
 34619                           ; BSR set to: 57
 34620                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 34621  01BC22  0EB8               	movlw	low _ADCC_DefaultInterruptHandler
 34622  01BC24  6EE6               	movwf	postinc1,c
 34623  01BC26  0ECF               	movlw	high _ADCC_DefaultInterruptHandler
 34624  01BC28  6EE6               	movwf	postinc1,c
 34625  01BC2A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 34626  01BC2C  6EE6               	movwf	postinc1,c
 34627  01BC2E  EC73  F0E5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 34628                           
 34629                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 34630  01BC32  0012               	return		;funcret
 34631  01BC34                     __end_of_ADCC_Initialize:
 34632                           	opt callstack 0
 34633                           
 34634 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 34635 ;; Defined at:
 34636 ;;		line 336 in file "mcc_generated_files/adcc.c"
 34637 ;; Parameters:    Size  Location     Type
 34638 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34639 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 34640 ;; Auto vars:     Size  Location     Type
 34641 ;;		None
 34642 ;; Return value:  Size  Location     Type
 34643 ;;                  1  [STACK] void 
 34644 ;; Registers used:
 34645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34646 ;; Tracked objects:
 34647 ;;		On entry : 0/0
 34648 ;;		On exit  : 0/0
 34649 ;;		Unchanged: 0/0
 34650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34655 ;;Total ram usage:        0 bytes
 34656 ;; Hardware stack levels used:    1
 34657 ;; Hardware stack levels required when called:   15
 34658 ;; This function calls:
 34659 ;;		Nothing
 34660 ;; This function is called by:
 34661 ;;		_ADCC_Initialize
 34662 ;;		_start_adc_scan
 34663 ;; This function uses a reentrant model
 34664 ;;
 34665                           
 34666                           	psect	text149
 34667  01CAE6                     __ptext149:
 34668                           	opt callstack 0
 34669  01CAE6                     _ADCC_SetADTIInterruptHandler:
 34670                           	opt callstack 14
 34671                           
 34672                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 34673                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34674                           
 34675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34676                           ;incstack = 0
 34677  01CAE6  50E1               	movf	fsr1l,w,c
 34678  01CAE8  0FFD               	addlw	-3
 34679  01CAEA  6ED9               	movwf	fsr2l,c
 34680  01CAEC  50E2               	movf	fsr1h,w,c
 34681  01CAEE  6EDA               	movwf	fsr2h,c
 34682  01CAF0  0EFF               	movlw	255
 34683  01CAF2  22DA               	addwfc	fsr2h,f,c
 34684  01CAF4  006F FF78  F081    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 34685  01CAFA  006F FF78  F082    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 34686  01CB00  006F FF74  F083    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 34687                           
 34688                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 34689  01CB06  52E5               	movf	postdec1,f,c
 34690  01CB08  52E5               	movf	postdec1,f,c
 34691  01CB0A  52E5               	movf	postdec1,f,c
 34692  01CB0C  0012               	return		;funcret
 34693  01CB0E                     __end_of_ADCC_SetADTIInterruptHandler:
 34694                           	opt callstack 0
 34695                           
 34696 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 34697 ;; Defined at:
 34698 ;;		line 323 in file "mcc_generated_files/adcc.c"
 34699 ;; Parameters:    Size  Location     Type
 34700 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 34701 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 34702 ;; Auto vars:     Size  Location     Type
 34703 ;;		None
 34704 ;; Return value:  Size  Location     Type
 34705 ;;                  1  [STACK] void 
 34706 ;; Registers used:
 34707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 34708 ;; Tracked objects:
 34709 ;;		On entry : 6/0
 34710 ;;		On exit  : 0/0
 34711 ;;		Unchanged: 0/0
 34712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34717 ;;Total ram usage:        0 bytes
 34718 ;; Hardware stack levels used:    1
 34719 ;; Hardware stack levels required when called:   15
 34720 ;; This function calls:
 34721 ;;		Nothing
 34722 ;; This function is called by:
 34723 ;;		_ADCC_Initialize
 34724 ;;		_start_adc_scan
 34725 ;; This function uses a reentrant model
 34726 ;;
 34727                           
 34728                           	psect	text150
 34729  01CB0E                     __ptext150:
 34730                           	opt callstack 0
 34731  01CB0E                     _ADCC_SetADIInterruptHandler:
 34732                           	opt callstack 14
 34733                           
 34734                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 34735                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 34736                           
 34737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34738                           ;incstack = 0
 34739  01CB0E  50E1               	movf	fsr1l,w,c
 34740  01CB10  0FFD               	addlw	-3
 34741  01CB12  6ED9               	movwf	fsr2l,c
 34742  01CB14  50E2               	movf	fsr1h,w,c
 34743  01CB16  6EDA               	movwf	fsr2h,c
 34744  01CB18  0EFF               	movlw	255
 34745  01CB1A  22DA               	addwfc	fsr2h,f,c
 34746  01CB1C  006F FF78  F084    	movff	postinc2,_ADCC_ADI_InterruptHandler
 34747  01CB22  006F FF78  F085    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 34748  01CB28  006F FF74  F086    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 34749                           
 34750                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 34751  01CB2E  52E5               	movf	postdec1,f,c
 34752  01CB30  52E5               	movf	postdec1,f,c
 34753  01CB32  52E5               	movf	postdec1,f,c
 34754  01CB34  0012               	return		;funcret
 34755  01CB36                     __end_of_ADCC_SetADIInterruptHandler:
 34756                           	opt callstack 0
 34757                           
 34758 ;; *************** function _INT1_ISR *****************
 34759 ;; Defined at:
 34760 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 34761 ;; Parameters:    Size  Location     Type
 34762 ;;		None
 34763 ;; Auto vars:     Size  Location     Type
 34764 ;;		None
 34765 ;; Return value:  Size  Location     Type
 34766 ;;                  1    wreg      void 
 34767 ;; Registers used:
 34768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 34769 ;; Tracked objects:
 34770 ;;		On entry : 0/0
 34771 ;;		On exit  : 0/0
 34772 ;;		Unchanged: 0/0
 34773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34776 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34777 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34778 ;;Total ram usage:        4 bytes
 34779 ;; Hardware stack levels used:    1
 34780 ;; Hardware stack levels required when called:    5
 34781 ;; This function calls:
 34782 ;;		_INT1_CallBack
 34783 ;; This function is called by:
 34784 ;;		Interrupt level 1
 34785 ;; This function uses a non-reentrant model
 34786 ;;
 34787                           
 34788                           	psect	text151
 34789  01C560                     __ptext151:
 34790                           	opt callstack 0
 34791  01C560                     _INT1_ISR:
 34792                           	opt callstack 11
 34793                           
 34794                           ;incstack = 0
 34795  01C560  006F FF60  F027    	movff	status,??_INT1_ISR
 34796  01C566  0060  F004  F028   	movff	btemp,??_INT1_ISR+1
 34797  01C56C  0060  F02C  F029   	movff	btemp+10,??_INT1_ISR+2
 34798  01C572  0060  F030  F02A   	movff	btemp+11,??_INT1_ISR+3
 34799  01C578  EE16  F0AF         	lfsr	1,___intlo_sp
 34800                           
 34801                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 34802  01C57C  0139               	movlb	57	; () banked
 34803  01C57E  91A5               	bcf	165,0,b	;volatile
 34804                           
 34805                           ; BSR set to: 57
 34806                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 34807  01C580  ECEA  F0E5         	call	_INT1_CallBack	;wreg free
 34808  01C584  0060  F0A8  F00C   	movff	??_INT1_ISR+3,btemp+11
 34809  01C58A  0060  F0A4  F00B   	movff	??_INT1_ISR+2,btemp+10
 34810  01C590  0060  F0A0  F001   	movff	??_INT1_ISR+1,btemp
 34811  01C596  0060  F09F  FFD8   	movff	??_INT1_ISR,status
 34812  01C59C  0011               	retfie		f
 34813  01C59E                     __end_of_INT1_ISR:
 34814                           	opt callstack 0
 34815                           
 34816 ;; *************** function _INT1_CallBack *****************
 34817 ;; Defined at:
 34818 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 34819 ;; Parameters:    Size  Location     Type
 34820 ;;		None
 34821 ;; Auto vars:     Size  Location     Type
 34822 ;;		None
 34823 ;; Return value:  Size  Location     Type
 34824 ;;                  1  [STACK] void 
 34825 ;; Registers used:
 34826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 34827 ;; Tracked objects:
 34828 ;;		On entry : 3F/39
 34829 ;;		On exit  : 0/0
 34830 ;;		Unchanged: 0/0
 34831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34836 ;;Total ram usage:        0 bytes
 34837 ;; Hardware stack levels used:    1
 34838 ;; Hardware stack levels required when called:    4
 34839 ;; This function calls:
 34840 ;;		Absolute function
 34841 ;;		_INT1_DefaultInterruptHandler
 34842 ;;		_switch_handler
 34843 ;; This function is called by:
 34844 ;;		_INT1_ISR
 34845 ;; This function uses a reentrant model
 34846 ;;
 34847                           
 34848                           	psect	text152
 34849  01CBD4                     __ptext152:
 34850                           	opt callstack 0
 34851  01CBD4                     _INT1_CallBack:
 34852                           	opt callstack 11
 34853                           
 34854                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 34855                           
 34856                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34857                           ;incstack = 0
 34858  01CBD4  0100               	movlb	0	; () banked
 34859  01CBD6  5190               	movf	_INT1_InterruptHandler& (0+255),w,b
 34860  01CBD8  1191               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 34861  01CBDA  1192               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 34862  01CBDC  B4D8               	btfsc	status,2,c
 34863  01CBDE  0012               	return	
 34864                           
 34865                           ; BSR set to: 0
 34866                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 34867  01CBE0  D801               	call	u1052_28
 34868  01CBE2  0012               	return	
 34869  01CBE4                     u1052_28:
 34870  01CBE4  0005               	push	
 34871  01CBE6  6EFA               	movwf	pclath,c
 34872  01CBE8  5190               	movf	_INT1_InterruptHandler& (0+255),w,b
 34873  01CBEA  6EFD               	movwf	tosl,c
 34874  01CBEC  5191               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 34875  01CBEE  6EFE               	movwf	tosh,c
 34876  01CBF0  5192               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 34877  01CBF2  6EFF               	movwf	tosu,c
 34878  01CBF4  50FA               	movf	pclath,w,c
 34879  01CBF6  0012               	return		;indir
 34880  01CBF8                     __end_of_INT1_CallBack:
 34881                           	opt callstack 0
 34882                           
 34883 ;; *************** function _INT1_DefaultInterruptHandler *****************
 34884 ;; Defined at:
 34885 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 34886 ;; Parameters:    Size  Location     Type
 34887 ;;		None
 34888 ;; Auto vars:     Size  Location     Type
 34889 ;;		None
 34890 ;; Return value:  Size  Location     Type
 34891 ;;                  1  [STACK] void 
 34892 ;; Registers used:
 34893 ;;		None
 34894 ;; Tracked objects:
 34895 ;;		On entry : 3F/0
 34896 ;;		On exit  : 0/0
 34897 ;;		Unchanged: 0/0
 34898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34903 ;;Total ram usage:        0 bytes
 34904 ;; Hardware stack levels used:    1
 34905 ;; Hardware stack levels required when called:    3
 34906 ;; This function calls:
 34907 ;;		Nothing
 34908 ;; This function is called by:
 34909 ;;		_EXT_INT_Initialize
 34910 ;;		_INT1_CallBack
 34911 ;; This function uses a reentrant model
 34912 ;;
 34913                           
 34914                           	psect	text153
 34915  01CFB2                     __ptext153:
 34916                           	opt callstack 0
 34917  01CFB2                     _INT1_DefaultInterruptHandler:
 34918                           	opt callstack 11
 34919                           
 34920                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34921                           
 34922                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34923                           ;incstack = 0
 34924  01CFB2  0012               	return		;funcret
 34925  01CFB4                     __end_of_INT1_DefaultInterruptHandler:
 34926                           	opt callstack 0
 34927                           
 34928 ;; *************** function _switch_handler *****************
 34929 ;; Defined at:
 34930 ;;		line 58 in file "dio.c"
 34931 ;; Parameters:    Size  Location     Type
 34932 ;;		None
 34933 ;; Auto vars:     Size  Location     Type
 34934 ;;  i               1  [STACK] unsigned char 
 34935 ;;  sw_value        1  [STACK] unsigned char 
 34936 ;; Return value:  Size  Location     Type
 34937 ;;                  1  [STACK] void 
 34938 ;; Registers used:
 34939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 34940 ;; Tracked objects:
 34941 ;;		On entry : 3F/0
 34942 ;;		On exit  : 0/0
 34943 ;;		Unchanged: 0/0
 34944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34949 ;;Total ram usage:        0 bytes
 34950 ;; Hardware stack levels used:    1
 34951 ;; Hardware stack levels required when called:    3
 34952 ;; This function calls:
 34953 ;;		Nothing
 34954 ;; This function is called by:
 34955 ;;		_start_switch_handler
 34956 ;;		_INT1_CallBack
 34957 ;; This function uses a reentrant model
 34958 ;;
 34959                           
 34960                           	psect	text154
 34961  019BD8                     __ptext154:
 34962                           	opt callstack 0
 34963  019BD8                     _switch_handler:
 34964                           	opt callstack 0
 34965                           
 34966                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34967  019BD8  52E6               	movf	postinc1,f,c
 34968  019BDA  52E6               	movf	postinc1,f,c
 34969                           
 34970                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 34971                           ;stkvar	_i @ sp[(-2)+0]
 34972                           
 34973                           ;incstack = 0
 34974  019BDC  0EFE               	movlw	-2
 34975  019BDE  6AE3               	clrf	plusw1,c
 34976  019BE0  9ABF               	bcf	191,5,c	;volatile
 34977                           
 34978                           ;dio.c: 72:  __nop();
 34979  019BE2  F000               	nop	
 34980                           
 34981                           ;dio.c: 73:  __nop();
 34982  019BE4  F000               	nop	
 34983                           
 34984                           ;dio.c: 74:  __nop();
 34985  019BE6  F000               	nop	
 34986                           
 34987                           ;dio.c: 75:  __nop();
 34988  019BE8  F000               	nop	
 34989                           
 34990                           ;dio.c: 76:  __nop();
 34991  019BEA  F000               	nop	
 34992                           
 34993                           ;dio.c: 77:  __nop();
 34994  019BEC  F000               	nop	
 34995  019BEE  D016               	goto	l11182
 34996  019BF0                     l11168:
 34997                           
 34998                           ;dio.c: 82:    sw_value = PORTFbits.RF3;
 34999  019BF0  A6CF               	btfss	207,3,c	;volatile
 35000  019BF2  D00E               	goto	u1018_20
 35001  019BF4  D00A               	goto	u1018_21
 35002  019BF6                     u1016_28:
 35003                           
 35004                           ;stkvar	_sw_value @ sp[(-2)+1]
 35005  019BF6  0EFF               	movlw	-1
 35006  019BF8  0060  F033  FFE3   	movff	btemp+11,plusw1
 35007                           
 35008                           ;dio.c: 83:    break;
 35009  019BFE  D027               	goto	l11184
 35010  019C00                     l11170:
 35011                           
 35012                           ;dio.c: 85:    sw_value = PORTFbits.RF2;
 35013  019C00  A4CF               	btfss	207,2,c	;volatile
 35014  019C02  D006               	goto	u1018_20
 35015  019C04  D002               	goto	u1018_21
 35016  019C06                     l11172:
 35017                           
 35018                           ;dio.c: 88:    sw_value = PORTDbits.RD3;
 35019  019C06  A6CD               	btfss	205,3,c	;volatile
 35020  019C08  D003               	goto	u1018_20
 35021  019C0A                     u1018_21:
 35022  019C0A  6A0C               	clrf	(btemp+11)^0,c
 35023  019C0C  2A0C               	incf	(btemp+11)^0,f,c
 35024  019C0E  D7F3               	goto	u1016_28
 35025  019C10                     u1018_20:
 35026  019C10  6A0C               	clrf	(btemp+11)^0,c
 35027  019C12  D7F1               	goto	u1016_28
 35028  019C14                     l11174:
 35029                           
 35030                           ;dio.c: 91:    sw_value = 1;
 35031                           ;stkvar	_sw_value @ sp[(-2)+1]
 35032  019C14  0EFF               	movlw	-1
 35033  019C16  6AE3               	clrf	plusw1,c
 35034  019C18  2AE3               	incf	plusw1,f,c
 35035                           
 35036                           ;dio.c: 92:    break;
 35037  019C1A  D019               	goto	l11184
 35038  019C1C                     l11182:
 35039                           
 35040                           ;stkvar	_i @ sp[(-2)+0]
 35041  019C1C  0EFE               	movlw	-2
 35042  019C1E  50E3               	movf	plusw1,w,c
 35043  019C20  6E0B               	movwf	(btemp+10)^0,c
 35044  019C22  6A0C               	clrf	(btemp+11)^0,c
 35045                           
 35046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35047                           ; Switch size 1, requested type "simple"
 35048                           ; Number of cases is 1, Range of values is 0 to 0
 35049                           ; switch strategies available:
 35050                           ; Name         Instructions Cycles
 35051                           ; simple_byte            4     3 (average)
 35052                           ;	Chosen strategy is simple_byte
 35053  019C24  500C               	movf	(btemp+11)^0,w,c
 35054  019C26  0A00               	xorlw	0	; case 0
 35055  019C28  A4D8               	btfss	status,2,c
 35056  019C2A  D7F4               	goto	l11174
 35057                           
 35058                           ; Switch size 1, requested type "simple"
 35059                           ; Number of cases is 5, Range of values is 0 to 4
 35060                           ; switch strategies available:
 35061                           ; Name         Instructions Cycles
 35062                           ; simple_byte           16     9 (average)
 35063                           ;	Chosen strategy is simple_byte
 35064  019C2C  500B               	movf	(btemp+10)^0,w,c
 35065  019C2E  0A00               	xorlw	0	; case 0
 35066  019C30  B4D8               	btfsc	status,2,c
 35067  019C32  D7F0               	goto	l11174
 35068  019C34  0A01               	xorlw	1	; case 1
 35069  019C36  B4D8               	btfsc	status,2,c
 35070  019C38  D7ED               	goto	l11174
 35071  019C3A  0A03               	xorlw	3	; case 2
 35072  019C3C  B4D8               	btfsc	status,2,c
 35073  019C3E  D7E0               	goto	l11170
 35074  019C40  0A01               	xorlw	1	; case 3
 35075  019C42  B4D8               	btfsc	status,2,c
 35076  019C44  D7D5               	goto	l11168
 35077  019C46  0A07               	xorlw	7	; case 4
 35078  019C48  B4D8               	btfsc	status,2,c
 35079  019C4A  D7DD               	goto	l11172
 35080  019C4C  D7E3               	goto	l11174
 35081  019C4E                     l11184:
 35082                           
 35083                           ;dio.c: 102:   if (sw_value) {
 35084                           ;stkvar	_sw_value @ sp[(-2)+1]
 35085  019C4E  0EFF               	movlw	-1
 35086  019C50  50E3               	movf	plusw1,w,c
 35087  019C52  B4D8               	btfsc	status,2,c
 35088  019C54  D018               	goto	l11190
 35089                           
 35090                           ;dio.c: 103:    if (S.button[i].sw == SW_ON) {
 35091                           ;stkvar	_i @ sp[(-2)+0]
 35092  019C56  0EFE               	movlw	-2
 35093  019C58  50E3               	movf	plusw1,w,c
 35094  019C5A  0D05               	mullw	5
 35095  019C5C  0E54               	movlw	low _S
 35096  019C5E  24F3               	addwf	243,w,c
 35097  019C60  6ED9               	movwf	fsr2l,c
 35098  019C62  0E02               	movlw	high _S
 35099  019C64  20F4               	addwfc	prodh,w,c
 35100  019C66  6EDA               	movwf	fsr2h,c
 35101  019C68  04DE               	decf	postinc2,w,c
 35102  019C6A  A4D8               	btfss	status,2,c
 35103  019C6C  D049               	goto	l11198
 35104                           
 35105                           ;dio.c: 104:     S.button[i].sw = SW_OFF;
 35106                           ;stkvar	_i @ sp[(-2)+0]
 35107  019C6E  0EFE               	movlw	-2
 35108  019C70  50E3               	movf	plusw1,w,c
 35109  019C72  0D05               	mullw	5
 35110  019C74  0E54               	movlw	low _S
 35111  019C76  24F3               	addwf	243,w,c
 35112  019C78  6ED9               	movwf	fsr2l,c
 35113  019C7A  0E02               	movlw	high _S
 35114  019C7C  20F4               	addwfc	prodh,w,c
 35115  019C7E  6EDA               	movwf	fsr2h,c
 35116  019C80  0E00               	movlw	0
 35117  019C82  6EDF               	movwf	indf2,c
 35118  019C84  D03D               	goto	l11198
 35119  019C86                     l11190:
 35120                           
 35121                           ;dio.c: 107:    if (S.button[i].sw == SW_OFF) {
 35122                           ;stkvar	_i @ sp[(-2)+0]
 35123  019C86  0EFE               	movlw	-2
 35124  019C88  50E3               	movf	plusw1,w,c
 35125  019C8A  0D05               	mullw	5
 35126  019C8C  0E54               	movlw	low _S
 35127  019C8E  24F3               	addwf	243,w,c
 35128  019C90  6ED9               	movwf	fsr2l,c
 35129  019C92  0E02               	movlw	high _S
 35130  019C94  20F4               	addwfc	prodh,w,c
 35131  019C96  6EDA               	movwf	fsr2h,c
 35132  019C98  50DF               	movf	indf2,w,c
 35133  019C9A  A4D8               	btfss	status,2,c
 35134  019C9C  D031               	goto	l11198
 35135                           
 35136                           ;dio.c: 108:     S.button[i].sw = SW_ON;
 35137                           ;stkvar	_i @ sp[(-2)+0]
 35138  019C9E  0EFE               	movlw	-2
 35139  019CA0  50E3               	movf	plusw1,w,c
 35140  019CA2  0D05               	mullw	5
 35141  019CA4  0E54               	movlw	low _S
 35142  019CA6  24F3               	addwf	243,w,c
 35143  019CA8  6ED9               	movwf	fsr2l,c
 35144  019CAA  0E02               	movlw	high _S
 35145  019CAC  20F4               	addwfc	prodh,w,c
 35146  019CAE  6EDA               	movwf	fsr2h,c
 35147  019CB0  0E01               	movlw	1
 35148  019CB2  6EDF               	movwf	indf2,c
 35149                           
 35150                           ;dio.c: 109:     S.button[i].count = V.timerint_count;
 35151  019CB4  EE20  F1C3         	lfsr	2,_V+188	;volatile
 35152                           
 35153                           ;stkvar	_i @ sp[(-2)+0]
 35154  019CB8  0EFE               	movlw	-2
 35155  019CBA  50E3               	movf	plusw1,w,c
 35156  019CBC  0D05               	mullw	5
 35157  019CBE  0E55               	movlw	low (_S+1)
 35158  019CC0  24F3               	addwf	243,w,c
 35159  019CC2  6EE9               	movwf	fsr0l,c
 35160  019CC4  0E02               	movlw	high (_S+1)
 35161  019CC6  20F4               	addwfc	prodh,w,c
 35162  019CC8  6EEA               	movwf	fsr0h,c
 35163  019CCA  006F FF7B FFEE     	movff	postinc2,postinc0
 35164  019CD0  006F FF7B FFEE     	movff	postinc2,postinc0
 35165  019CD6  006F FF7B FFEE     	movff	postinc2,postinc0
 35166  019CDC  006F FF7B FFEE     	movff	postinc2,postinc0
 35167                           
 35168                           ;dio.c: 110:     S.sw_bitmap |= 1 << i;
 35169                           ;stkvar	_i @ sp[(-2)+0]
 35170  019CE2  0EFE               	movlw	-2
 35171  019CE4  006F FF8C  F00C    	movff	plusw1,btemp+11
 35172  019CEA  0E01               	movlw	1
 35173  019CEC  6E0B               	movwf	(btemp+10)^0,c
 35174  019CEE  2A0C               	incf	(btemp+11)^0,f,c
 35175  019CF0  D002               	goto	u1022_24
 35176  019CF2                     u1022_25:
 35177  019CF2  90D8               	bcf	status,0,c
 35178  019CF4  360B               	rlcf	(btemp+10)^0,f,c
 35179  019CF6                     u1022_24:
 35180  019CF6  2E0C               	decfsz	(btemp+11)^0,f,c
 35181  019CF8  D7FC               	goto	u1022_25
 35182  019CFA  500B               	movf	(btemp+10)^0,w,c
 35183  019CFC  0102               	movlb	2	; () banked
 35184  019CFE  137C               	iorwf	(_S+40)& (0+255),f,b	;volatile
 35185  019D00                     l11198:
 35186                           
 35187                           ;dio.c: 113:  } while (++i < 6);
 35188                           ;stkvar	_i @ sp[(-2)+0]
 35189  019D00  0EFE               	movlw	-2
 35190  019D02  2AE3               	incf	plusw1,f,c
 35191  019D04  0EFE               	movlw	-2
 35192  019D06  006F FF8C  F001    	movff	plusw1,btemp
 35193  019D0C  0E05               	movlw	5
 35194  019D0E  6401               	cpfsgt	btemp^0,c
 35195  019D10  D785               	goto	l11182
 35196                           
 35197                           ;dio.c: 122:  do { LATFbits.LATF5 = 1; } while(0);
 35198  019D12  8ABF               	bsf	191,5,c	;volatile
 35199                           
 35200                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 35201  019D14  52E5               	movf	postdec1,f,c
 35202  019D16  52E5               	movf	postdec1,f,c
 35203  019D18  0012               	return		;funcret
 35204  019D1A                     __end_of_switch_handler:
 35205                           	opt callstack 0
 35206                           
 35207 ;; *************** function _TMR5_ISR *****************
 35208 ;; Defined at:
 35209 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 35210 ;; Parameters:    Size  Location     Type
 35211 ;;		None
 35212 ;; Auto vars:     Size  Location     Type
 35213 ;;		None
 35214 ;; Return value:  Size  Location     Type
 35215 ;;                  1    wreg      void 
 35216 ;; Registers used:
 35217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 35218 ;; Tracked objects:
 35219 ;;		On entry : 0/0
 35220 ;;		On exit  : 3F/0
 35221 ;;		Unchanged: 0/0
 35222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35225 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35226 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35227 ;;Total ram usage:       15 bytes
 35228 ;; Hardware stack levels used:    1
 35229 ;; Hardware stack levels required when called:    9
 35230 ;; This function calls:
 35231 ;;		_TMR5_CallBack
 35232 ;;		_TMR5_WriteTimer
 35233 ;; This function is called by:
 35234 ;;		Interrupt level 1
 35235 ;; This function uses a non-reentrant model
 35236 ;;
 35237                           
 35238                           	psect	text155
 35239  01AB00                     __ptext155:
 35240                           	opt callstack 0
 35241  01AB00                     _TMR5_ISR:
 35242                           	opt callstack 7
 35243                           
 35244                           ;incstack = 0
 35245  01AB00  006F FF60  F02D    	movff	status,??_TMR5_ISR+2
 35246  01AB06  0060  F004  F02E   	movff	btemp,??_TMR5_ISR+3
 35247  01AB0C  0060  F008  F02F   	movff	btemp+1,??_TMR5_ISR+4
 35248  01AB12  0060  F00C  F030   	movff	btemp+2,??_TMR5_ISR+5
 35249  01AB18  0060  F010  F031   	movff	btemp+3,??_TMR5_ISR+6
 35250  01AB1E  0060  F014  F032   	movff	btemp+4,??_TMR5_ISR+7
 35251  01AB24  0060  F018  F033   	movff	btemp+5,??_TMR5_ISR+8
 35252  01AB2A  0060  F01C  F034   	movff	btemp+6,??_TMR5_ISR+9
 35253  01AB30  0060  F020  F035   	movff	btemp+7,??_TMR5_ISR+10
 35254  01AB36  0060  F024  F036   	movff	btemp+8,??_TMR5_ISR+11
 35255  01AB3C  0060  F028  F037   	movff	btemp+9,??_TMR5_ISR+12
 35256  01AB42  0060  F02C  F038   	movff	btemp+10,??_TMR5_ISR+13
 35257  01AB48  0060  F030  F039   	movff	btemp+11,??_TMR5_ISR+14
 35258  01AB4E  EE16  F0AF         	lfsr	1,___intlo_sp
 35259                           
 35260                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 35261  01AB52  0139               	movlb	57	; () banked
 35262  01AB54  9DA8               	bcf	168,6,b	;volatile
 35263                           
 35264                           ; BSR set to: 57
 35265                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 35266  01AB56  0060  F27B  FFE6   	movff	_timer5ReloadVal,postinc1
 35267  01AB5C  0060  F27F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 35268  01AB62  EC70  F0E2         	call	_TMR5_WriteTimer	;wreg free
 35269                           
 35270                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 35271  01AB66  0101               	movlb	1	; () banked
 35272  01AB68  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 35273  01AB6A  6E2B               	movwf	??_TMR5_ISR^0,c
 35274  01AB6C  6A2C               	clrf	(??_TMR5_ISR+1)^0,c
 35275  01AB6E  0E05               	movlw	5
 35276  01AB70  262B               	addwf	??_TMR5_ISR^0,f,c
 35277  01AB72  0E00               	movlw	0
 35278  01AB74  222C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 35279  01AB76  0100               	movlb	0	; () banked
 35280  01AB78  4B9C               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 35281  01AB7A  2B9D               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 35282  01AB7C  502B               	movf	??_TMR5_ISR^0,w,c
 35283  01AB7E  5D9C               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 35284  01AB80  502C               	movf	(??_TMR5_ISR+1)^0,w,c
 35285  01AB82  599D               	subwfb	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 35286  01AB84  A0D8               	btfss	status,0,c
 35287  01AB86  D005               	goto	i1l1019
 35288                           
 35289                           ; BSR set to: 0
 35290                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 35291  01AB88  ECFC  F0E5         	call	_TMR5_CallBack	;wreg free
 35292                           
 35293                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 35294  01AB8C  0100               	movlb	0	; () banked
 35295  01AB8E  6B9C               	clrf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 35296  01AB90  6B9D               	clrf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 35297  01AB92                     i1l1019:
 35298                           
 35299                           ; BSR set to: 0
 35300  01AB92  0060  F0E4  F00C   	movff	??_TMR5_ISR+14,btemp+11
 35301  01AB98  0060  F0E0  F00B   	movff	??_TMR5_ISR+13,btemp+10
 35302  01AB9E  0060  F0DC  F00A   	movff	??_TMR5_ISR+12,btemp+9
 35303  01ABA4  0060  F0D8  F009   	movff	??_TMR5_ISR+11,btemp+8
 35304  01ABAA  0060  F0D4  F008   	movff	??_TMR5_ISR+10,btemp+7
 35305  01ABB0  0060  F0D0  F007   	movff	??_TMR5_ISR+9,btemp+6
 35306  01ABB6  0060  F0CC  F006   	movff	??_TMR5_ISR+8,btemp+5
 35307  01ABBC  0060  F0C8  F005   	movff	??_TMR5_ISR+7,btemp+4
 35308  01ABC2  0060  F0C4  F004   	movff	??_TMR5_ISR+6,btemp+3
 35309  01ABC8  0060  F0C0  F003   	movff	??_TMR5_ISR+5,btemp+2
 35310  01ABCE  0060  F0BC  F002   	movff	??_TMR5_ISR+4,btemp+1
 35311  01ABD4  0060  F0B8  F001   	movff	??_TMR5_ISR+3,btemp
 35312  01ABDA  0060  F0B7  FFD8   	movff	??_TMR5_ISR+2,status
 35313  01ABE0  0011               	retfie		f
 35314  01ABE2                     __end_of_TMR5_ISR:
 35315                           	opt callstack 0
 35316                           
 35317 ;; *************** function _TMR5_WriteTimer *****************
 35318 ;; Defined at:
 35319 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 35320 ;; Parameters:    Size  Location     Type
 35321 ;;  timerVal        2  [STACK] unsigned short 
 35322 ;; Auto vars:     Size  Location     Type
 35323 ;;		None
 35324 ;; Return value:  Size  Location     Type
 35325 ;;                  1  [STACK] void 
 35326 ;; Registers used:
 35327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 35328 ;; Tracked objects:
 35329 ;;		On entry : 3F/39
 35330 ;;		On exit  : 0/0
 35331 ;;		Unchanged: 0/0
 35332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35337 ;;Total ram usage:        0 bytes
 35338 ;; Hardware stack levels used:    1
 35339 ;; Hardware stack levels required when called:    3
 35340 ;; This function calls:
 35341 ;;		Nothing
 35342 ;; This function is called by:
 35343 ;;		_TMR5_ISR
 35344 ;; This function uses a reentrant model
 35345 ;;
 35346                           
 35347                           	psect	text156
 35348  01C4E0                     __ptext156:
 35349                           	opt callstack 0
 35350  01C4E0                     _TMR5_WriteTimer:
 35351                           	opt callstack 12
 35352                           
 35353                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 35354                           
 35355                           ; BSR set to: 0
 35356                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35357                           ;incstack = 0
 35358  01C4E0  A49A               	btfss	154,2,c	;volatile
 35359  01C4E2  D00F               	goto	l11408
 35360                           
 35361                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 35362  01C4E4  909A               	bcf	154,0,c	;volatile
 35363                           
 35364                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 35365                           ;stkvar	_timerVal @ sp[(0)+-2]
 35366  01C4E6  0EFF               	movlw	255
 35367  01C4E8  24E1               	addwf	fsr1l,w,c
 35368  01C4EA  6ED9               	movwf	fsr2l,c
 35369  01C4EC  0EFF               	movlw	255
 35370  01C4EE  20E2               	addwfc	fsr1h,w,c
 35371  01C4F0  6EDA               	movwf	fsr2h,c
 35372  01C4F2  50DF               	movf	indf2,w,c
 35373  01C4F4  6E99               	movwf	153,c	;volatile
 35374                           
 35375                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 35376                           ;stkvar	_timerVal @ sp[(0)+-2]
 35377  01C4F6  0EFE               	movlw	-2
 35378  01C4F8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 35379                           
 35380                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 35381  01C4FE  809A               	bsf	154,0,c	;volatile
 35382                           
 35383                           ;mcc_generated_files/tmr5.c: 144:  } else {
 35384  01C500  D00C               	goto	l1002
 35385  01C502                     l11408:
 35386                           
 35387                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 35388                           ;stkvar	_timerVal @ sp[(0)+-2]
 35389  01C502  0EFF               	movlw	255
 35390  01C504  24E1               	addwf	fsr1l,w,c
 35391  01C506  6ED9               	movwf	fsr2l,c
 35392  01C508  0EFF               	movlw	255
 35393  01C50A  20E2               	addwfc	fsr1h,w,c
 35394  01C50C  6EDA               	movwf	fsr2h,c
 35395  01C50E  50DF               	movf	indf2,w,c
 35396  01C510  6E99               	movwf	153,c	;volatile
 35397                           
 35398                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 35399                           ;stkvar	_timerVal @ sp[(0)+-2]
 35400  01C512  0EFE               	movlw	-2
 35401  01C514  006F FF8F FF98     	movff	plusw1,16280	;volatile
 35402  01C51A                     l1002:
 35403                           
 35404                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 35405  01C51A  52E5               	movf	postdec1,f,c
 35406  01C51C  52E5               	movf	postdec1,f,c
 35407  01C51E  0012               	return		;funcret
 35408  01C520                     __end_of_TMR5_WriteTimer:
 35409                           	opt callstack 0
 35410                           
 35411 ;; *************** function _TMR5_CallBack *****************
 35412 ;; Defined at:
 35413 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 35414 ;; Parameters:    Size  Location     Type
 35415 ;;		None
 35416 ;; Auto vars:     Size  Location     Type
 35417 ;;		None
 35418 ;; Return value:  Size  Location     Type
 35419 ;;                  1  [STACK] void 
 35420 ;; Registers used:
 35421 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 35422 ;; Tracked objects:
 35423 ;;		On entry : 3F/0
 35424 ;;		On exit  : 0/0
 35425 ;;		Unchanged: 0/0
 35426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35431 ;;Total ram usage:        0 bytes
 35432 ;; Hardware stack levels used:    1
 35433 ;; Hardware stack levels required when called:    8
 35434 ;; This function calls:
 35435 ;;		Absolute function
 35436 ;;		_TMR5_DefaultInterruptHandler
 35437 ;; This function is called by:
 35438 ;;		_TMR5_ISR
 35439 ;; This function uses a reentrant model
 35440 ;;
 35441                           
 35442                           	psect	text157
 35443  01CBF8                     __ptext157:
 35444                           	opt callstack 0
 35445  01CBF8                     _TMR5_CallBack:
 35446                           	opt callstack 7
 35447                           
 35448                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 35449                           
 35450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35451                           ;incstack = 0
 35452  01CBF8  0100               	movlb	0	; () banked
 35453  01CBFA  517B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 35454  01CBFC  117C               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 35455  01CBFE  117D               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 35456  01CC00  B4D8               	btfsc	status,2,c
 35457  01CC02  0012               	return	
 35458                           
 35459                           ; BSR set to: 0
 35460                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 35461  01CC04  D801               	call	u1061_28
 35462  01CC06  0012               	return	
 35463  01CC08                     u1061_28:
 35464  01CC08  0005               	push	
 35465  01CC0A  6EFA               	movwf	pclath,c
 35466  01CC0C  517B               	movf	_TMR5_InterruptHandler& (0+255),w,b
 35467  01CC0E  6EFD               	movwf	tosl,c
 35468  01CC10  517C               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 35469  01CC12  6EFE               	movwf	tosh,c
 35470  01CC14  517D               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 35471  01CC16  6EFF               	movwf	tosu,c
 35472  01CC18  50FA               	movf	pclath,w,c
 35473  01CC1A  0012               	return		;indir
 35474  01CC1C                     __end_of_TMR5_CallBack:
 35475                           	opt callstack 0
 35476                           
 35477 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 35478 ;; Defined at:
 35479 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 35480 ;; Parameters:    Size  Location     Type
 35481 ;;		None
 35482 ;; Auto vars:     Size  Location     Type
 35483 ;;		None
 35484 ;; Return value:  Size  Location     Type
 35485 ;;                  1  [STACK] void 
 35486 ;; Registers used:
 35487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 35488 ;; Tracked objects:
 35489 ;;		On entry : 3F/0
 35490 ;;		On exit  : 0/0
 35491 ;;		Unchanged: 0/0
 35492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35497 ;;Total ram usage:        0 bytes
 35498 ;; Hardware stack levels used:    1
 35499 ;; Hardware stack levels required when called:    7
 35500 ;; This function calls:
 35501 ;;		_check_day_time
 35502 ;; This function is called by:
 35503 ;;		_TMR5_Initialize
 35504 ;;		_TMR5_CallBack
 35505 ;; This function uses a reentrant model
 35506 ;;
 35507                           
 35508                           	psect	text158
 35509  01C64A                     __ptext158:
 35510                           	opt callstack 0
 35511  01C64A                     _TMR5_DefaultInterruptHandler:
 35512                           	opt callstack 7
 35513                           
 35514                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 35515                           
 35516                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35517                           ;incstack = 0
 35518  01C64A  A0BE               	btfss	190,0,c	;volatile
 35519  01C64C  D002               	goto	u988_20
 35520  01C64E  0E01               	movlw	1
 35521  01C650  D001               	goto	u988_26
 35522  01C652                     u988_20:
 35523  01C652  0E00               	movlw	0
 35524  01C654                     u988_26:
 35525  01C654  0AFF               	xorlw	255
 35526  01C656  6E0C               	movwf	(btemp+11)^0,c
 35527  01C658  50BE               	movf	190,w,c	;volatile
 35528  01C65A  180C               	xorwf	(btemp+11)^0,w,c
 35529  01C65C  0BFE               	andlw	-2
 35530  01C65E  180C               	xorwf	(btemp+11)^0,w,c
 35531  01C660  6EBE               	movwf	190,c	;volatile
 35532                           
 35533                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 35534  01C662  0E01               	movlw	1
 35535  01C664  0101               	movlb	1	; () banked
 35536  01C666  27C3               	addwf	(_V+188)& (0+255),f,b	;volatile
 35537  01C668  0E00               	movlw	0
 35538  01C66A  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 35539  01C66C  23C5               	addwfc	(_V+190)& (0+255),f,b	;volatile
 35540  01C66E  23C6               	addwfc	(_V+191)& (0+255),f,b	;volatile
 35541                           
 35542                           ; BSR set to: 1
 35543                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 35544  01C670  0E01               	movlw	1
 35545  01C672  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 35546  01C674  0E00               	movlw	0
 35547  01C676  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 35548  01C678  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 35549  01C67A  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 35550                           
 35551                           ; BSR set to: 1
 35552                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 35553  01C67C  EC0C  F0C8         	call	_check_day_time	;wreg free
 35554                           
 35555                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 35556  01C680  0012               	return		;funcret
 35557  01C682                     __end_of_TMR5_DefaultInterruptHandler:
 35558                           	opt callstack 0
 35559                           
 35560 ;; *************** function _check_day_time *****************
 35561 ;; Defined at:
 35562 ;;		line 165 in file "mbmc.c"
 35563 ;; Parameters:    Size  Location     Type
 35564 ;;		None
 35565 ;; Auto vars:     Size  Location     Type
 35566 ;;  light           4  [STACK] float 
 35567 ;; Return value:  Size  Location     Type
 35568 ;;                  1  [STACK] _Bool 
 35569 ;; Registers used:
 35570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 35571 ;; Tracked objects:
 35572 ;;		On entry : 3F/1
 35573 ;;		On exit  : 0/0
 35574 ;;		Unchanged: 0/0
 35575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35580 ;;Total ram usage:        0 bytes
 35581 ;; Hardware stack levels used:    1
 35582 ;; Hardware stack levels required when called:    6
 35583 ;; This function calls:
 35584 ;;		___flge
 35585 ;;		_conv_raw_result
 35586 ;;		_get_ac_charger_relay
 35587 ;;		_set_ac_charger_relay
 35588 ;; This function is called by:
 35589 ;;		_TMR5_DefaultInterruptHandler
 35590 ;; This function uses a reentrant model
 35591 ;;
 35592                           
 35593                           	psect	text159
 35594  019018                     __ptext159:
 35595                           	opt callstack 0
 35596  019018                     _check_day_time:
 35597                           	opt callstack 0
 35598                           
 35599                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35600  019018  52E6               	movf	postinc1,f,c
 35601  01901A  52E6               	movf	postinc1,f,c
 35602  01901C  52E6               	movf	postinc1,f,c
 35603  01901E  52E6               	movf	postinc1,f,c
 35604                           
 35605                           ;mbmc.c: 167:  static uint8_t day_delay = 0;;mbmc.c: 168:  float light;;mbmc.c: 170:  li
      +                          ght = conv_raw_result(V_LIGHT_SENSOR, CONV);
 35606                           
 35607                           ;incstack = 0
 35608  019020  0E00               	movlw	0
 35609  019022  6EE6               	movwf	postinc1,c
 35610  019024  0E0D               	movlw	13
 35611  019026  6EE6               	movwf	postinc1,c
 35612  019028  EC1E  F0AA         	call	_conv_raw_result	;wreg free
 35613                           
 35614                           ;stkvar	_light @ sp[(-4)+0]
 35615  01902C  0EFC               	movlw	-4
 35616  01902E  0060  F007  FFE3   	movff	btemp,plusw1
 35617  019034  0EFD               	movlw	-3
 35618  019036  0060  F00B  FFE3   	movff	btemp+1,plusw1
 35619  01903C  0EFE               	movlw	-2
 35620  01903E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 35621  019044  0EFF               	movlw	-1
 35622  019046  0060  F013  FFE3   	movff	btemp+3,plusw1
 35623                           
 35624                           ;mbmc.c: 172:  if (!day_delay++ && V.system_stable) {
 35625  01904C  2A41               	incf	check_day_time@day_delay^0,f,c
 35626  01904E  0441               	decf	check_day_time@day_delay^0,w,c
 35627  019050  A4D8               	btfss	status,2,c
 35628  019052  D0A9               	goto	l2040
 35629  019054  0101               	movlb	1	; () banked
 35630  019056  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 35631  019058  B4D8               	btfsc	status,2,c
 35632  01905A  D0A5               	goto	l2040
 35633                           
 35634                           ; BSR set to: 1
 35635                           ;mbmc.c: 173:   if (C.soc > 3) {
 35636  01905C  EE21  F3B5         	lfsr	2,_C+182	;volatile
 35637  019060  0E01               	movlw	1
 35638  019062  50DB               	movf	plusw2,w,c
 35639  019064  E104               	bnz	u965_20
 35640  019066  0E04               	movlw	4
 35641  019068  5CDE               	subwf	postinc2,w,c
 35642  01906A  A0D8               	btfss	status,0,c
 35643  01906C  D073               	goto	l10354
 35644  01906E                     u965_20:
 35645                           
 35646                           ; BSR set to: 1
 35647                           ;mbmc.c: 174:    if (!C.day) {
 35648  01906E  EE22  F021         	lfsr	2,_C+290	;volatile
 35649  019072  50DF               	movf	indf2,w,c
 35650  019074  A4D8               	btfss	status,2,c
 35651  019076  D035               	goto	l10342
 35652                           
 35653                           ; BSR set to: 1
 35654                           ;mbmc.c: 175:     if (light > 22.0) {
 35655                           ;stkvar	_light @ sp[(-4)+0]
 35656  019078  0EFC               	movlw	-4
 35657  01907A  006F FF8F FFE6     	movff	plusw1,postinc1
 35658  019080  006F FF8F FFE6     	movff	plusw1,postinc1
 35659  019086  006F FF8F FFE6     	movff	plusw1,postinc1
 35660  01908C  006F FF8F FFE6     	movff	plusw1,postinc1
 35661  019092  0E00               	movlw	0
 35662  019094  6EE6               	movwf	postinc1,c
 35663  019096  0E00               	movlw	0
 35664  019098  6EE6               	movwf	postinc1,c
 35665  01909A  0EB0               	movlw	176
 35666  01909C  6EE6               	movwf	postinc1,c
 35667  01909E  0E41               	movlw	65
 35668  0190A0  6EE6               	movwf	postinc1,c
 35669  0190A2  ECE3  F0CB         	call	___flge	;wreg free
 35670  0190A6  B001               	btfsc	btemp& (0+255),0,c
 35671  0190A8  D07E               	goto	l2040
 35672                           
 35673                           ;mbmc.c: 176:      C.day = 1;
 35674  0190AA  0E01               	movlw	1
 35675  0190AC  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 35676                           
 35677                           ;mbmc.c: 177:      C.day_start = V.ticks;
 35678  0190B2  EE20  F188         	lfsr	2,_V+129	;volatile
 35679  0190B6  006F FF78  F822    	movff	postinc2,_C+291	;volatile
 35680  0190BC  006F FF78  F823    	movff	postinc2,_C+292	;volatile
 35681  0190C2  006F FF78  F824    	movff	postinc2,_C+293	;volatile
 35682  0190C8  006F FF74  F825    	movff	postdec2,_C+294	;volatile
 35683                           
 35684                           ;mbmc.c: 178:      if (get_ac_charger_relay()) {
 35685  0190CE  EC82  F0E7         	call	_get_ac_charger_relay	;wreg free
 35686  0190D2  5001               	movf	btemp^0,w,c
 35687  0190D4  B4D8               	btfsc	status,2,c
 35688  0190D6  D06B               	goto	l2036
 35689                           
 35690                           ;mbmc.c: 179:       set_ac_charger_relay(0);
 35691  0190D8  0E00               	movlw	0
 35692  0190DA  6EE6               	movwf	postinc1,c
 35693  0190DC  EC6C  F0E7         	call	_set_ac_charger_relay	;wreg free
 35694  0190E0  D066               	goto	l2036
 35695  0190E2                     l10342:
 35696                           
 35697                           ; BSR set to: 1
 35698                           ;mbmc.c: 184:     if (light < 12.0) {
 35699  0190E2  0E00               	movlw	0
 35700  0190E4  6EE6               	movwf	postinc1,c
 35701  0190E6  0E00               	movlw	0
 35702  0190E8  6EE6               	movwf	postinc1,c
 35703  0190EA  0E40               	movlw	64
 35704  0190EC  6EE6               	movwf	postinc1,c
 35705  0190EE  0E41               	movlw	65
 35706  0190F0  6EE6               	movwf	postinc1,c
 35707                           
 35708                           ;stkvar	_light @ sp[(-8)+0]
 35709  0190F2  0EF8               	movlw	-8
 35710  0190F4  006F FF8F FFE6     	movff	plusw1,postinc1
 35711  0190FA  006F FF8F FFE6     	movff	plusw1,postinc1
 35712  019100  006F FF8F FFE6     	movff	plusw1,postinc1
 35713  019106  006F FF8F FFE6     	movff	plusw1,postinc1
 35714  01910C  ECE3  F0CB         	call	___flge	;wreg free
 35715  019110  B001               	btfsc	btemp& (0+255),0,c
 35716  019112  D049               	goto	l2040
 35717                           
 35718                           ;mbmc.c: 185:      C.day = 0;
 35719  019114  0E00               	movlw	0
 35720  019116  006F FFA0  F821    	movff	wreg,_C+290	;volatile
 35721                           
 35722                           ;mbmc.c: 186:      C.day_end = V.ticks;
 35723  01911C  EE20  F188         	lfsr	2,_V+129	;volatile
 35724  019120  006F FF78  F826    	movff	postinc2,_C+295	;volatile
 35725  019126  006F FF78  F827    	movff	postinc2,_C+296	;volatile
 35726  01912C  006F FF78  F828    	movff	postinc2,_C+297	;volatile
 35727  019132  006F FF74  F829    	movff	postdec2,_C+298	;volatile
 35728                           
 35729                           ;mbmc.c: 190:      if ((C.soc < 20)) {
 35730  019138  EE21  F3B5         	lfsr	2,_C+182	;volatile
 35731  01913C  0E01               	movlw	1
 35732  01913E  50DB               	movf	plusw2,w,c
 35733  019140  E136               	bnz	l2036
 35734  019142  0E14               	movlw	20
 35735  019144  5CDE               	subwf	postinc2,w,c
 35736  019146  B0D8               	btfsc	status,0,c
 35737  019148  D032               	goto	l2036
 35738                           
 35739                           ;mbmc.c: 191:       set_ac_charger_relay(1);
 35740  01914A  0E01               	movlw	1
 35741  01914C  6EE6               	movwf	postinc1,c
 35742  01914E  EC6C  F0E7         	call	_set_ac_charger_relay	;wreg free
 35743  019152  D02D               	goto	l2036
 35744  019154                     l10354:
 35745                           
 35746                           ; BSR set to: 1
 35747                           ;mbmc.c: 197:    if (C.p_pv < C.p_inverter) {
 35748  019154  EE21  F377         	lfsr	2,_C+120	;volatile
 35749  019158  006F FF7B FFE6     	movff	postinc2,postinc1
 35750  01915E  006F FF7B FFE6     	movff	postinc2,postinc1
 35751  019164  006F FF7B FFE6     	movff	postinc2,postinc1
 35752  01916A  006F FF7B FFE6     	movff	postinc2,postinc1
 35753  019170  EE21  F37B         	lfsr	2,_C+124	;volatile
 35754  019174  006F FF7B FFE6     	movff	postinc2,postinc1
 35755  01917A  006F FF7B FFE6     	movff	postinc2,postinc1
 35756  019180  006F FF7B FFE6     	movff	postinc2,postinc1
 35757  019186  006F FF7B FFE6     	movff	postinc2,postinc1
 35758  01918C  ECE3  F0CB         	call	___flge	;wreg free
 35759  019190  B001               	btfsc	btemp& (0+255),0,c
 35760  019192  D009               	goto	l2040
 35761                           
 35762                           ;mbmc.c: 198:     if (!get_ac_charger_relay()) {
 35763  019194  EC82  F0E7         	call	_get_ac_charger_relay	;wreg free
 35764  019198  5001               	movf	btemp^0,w,c
 35765  01919A  A4D8               	btfss	status,2,c
 35766  01919C  D004               	goto	l2040
 35767                           
 35768                           ;mbmc.c: 199:      set_ac_charger_relay(1);
 35769  01919E  0E01               	movlw	1
 35770  0191A0  6EE6               	movwf	postinc1,c
 35771  0191A2  EC6C  F0E7         	call	_set_ac_charger_relay	;wreg free
 35772  0191A6                     l2040:
 35773                           
 35774                           ;mbmc.c: 204:  if (day_delay >= 240)
 35775  0191A6  0EEF               	movlw	239
 35776  0191A8  6441               	cpfsgt	check_day_time@day_delay^0,c
 35777  0191AA  D001               	goto	l2036
 35778                           
 35779                           ;mbmc.c: 205:   day_delay = 0;
 35780  0191AC  6A41               	clrf	check_day_time@day_delay^0,c
 35781  0191AE                     l2036:
 35782                           
 35783                           ; _check_day_time: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 35784  0191AE  52E5               	movf	postdec1,f,c
 35785  0191B0  52E5               	movf	postdec1,f,c
 35786  0191B2  52E5               	movf	postdec1,f,c
 35787  0191B4  52E5               	movf	postdec1,f,c
 35788  0191B6  0012               	return		;funcret
 35789  0191B8                     __end_of_check_day_time:
 35790                           	opt callstack 0
 35791                           
 35792 ;; *************** function _set_ac_charger_relay *****************
 35793 ;; Defined at:
 35794 ;;		line 135 in file "mbmc.c"
 35795 ;; Parameters:    Size  Location     Type
 35796 ;;  mode            1  [STACK] const _Bool 
 35797 ;; Auto vars:     Size  Location     Type
 35798 ;;		None
 35799 ;; Return value:  Size  Location     Type
 35800 ;;                  1  [STACK] void 
 35801 ;; Registers used:
 35802 ;;		wreg, fsr1l, fsr1h
 35803 ;; Tracked objects:
 35804 ;;		On entry : 0/1
 35805 ;;		On exit  : 0/0
 35806 ;;		Unchanged: 0/0
 35807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35812 ;;Total ram usage:        0 bytes
 35813 ;; Hardware stack levels used:    1
 35814 ;; Hardware stack levels required when called:    3
 35815 ;; This function calls:
 35816 ;;		Nothing
 35817 ;; This function is called by:
 35818 ;;		_check_day_time
 35819 ;; This function uses a reentrant model
 35820 ;;
 35821                           
 35822                           	psect	text160
 35823  01CED8                     __ptext160:
 35824                           	opt callstack 0
 35825  01CED8                     _set_ac_charger_relay:
 35826                           	opt callstack 9
 35827                           
 35828                           ;mbmc.c: 135: void set_ac_charger_relay(const _Bool mode);mbmc.c: 136: {;mbmc.c: 137:  L
      +                          ATDbits.LATD6 = mode;
 35829                           ;stkvar	_mode @ sp[(0)+-1]
 35830                           
 35831                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35832                           ;incstack = 0
 35833  01CED8  0EFF               	movlw	-1
 35834  01CEDA  B0E3               	btfsc	plusw1,0,c
 35835  01CEDC  D002               	bra	u957_25
 35836  01CEDE  9CBD               	bcf	189,6,c	;volatile
 35837  01CEE0  D001               	bra	u957_26
 35838  01CEE2                     u957_25:
 35839  01CEE2  8CBD               	bsf	189,6,c	;volatile
 35840  01CEE4                     u957_26:
 35841                           
 35842                           ; _set_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
 35843  01CEE4  52E5               	movf	postdec1,f,c
 35844  01CEE6  0012               	return		;funcret
 35845  01CEE8                     __end_of_set_ac_charger_relay:
 35846                           	opt callstack 0
 35847                           
 35848 ;; *************** function _get_ac_charger_relay *****************
 35849 ;; Defined at:
 35850 ;;		line 140 in file "mbmc.c"
 35851 ;; Parameters:    Size  Location     Type
 35852 ;;		None
 35853 ;; Auto vars:     Size  Location     Type
 35854 ;;		None
 35855 ;; Return value:  Size  Location     Type
 35856 ;;                  1  [STACK] _Bool 
 35857 ;; Registers used:
 35858 ;;		btemp
 35859 ;; Tracked objects:
 35860 ;;		On entry : 0/1
 35861 ;;		On exit  : 0/0
 35862 ;;		Unchanged: 0/0
 35863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35868 ;;Total ram usage:        0 bytes
 35869 ;; Hardware stack levels used:    1
 35870 ;; Hardware stack levels required when called:    3
 35871 ;; This function calls:
 35872 ;;		Nothing
 35873 ;; This function is called by:
 35874 ;;		_check_day_time
 35875 ;;		_calc_bsoc
 35876 ;; This function uses a reentrant model
 35877 ;;
 35878                           
 35879                           	psect	text161
 35880  01CF04                     __ptext161:
 35881                           	opt callstack 0
 35882  01CF04                     _get_ac_charger_relay:
 35883                           	opt callstack 10
 35884                           
 35885                           ;mbmc.c: 142:  return LATDbits.LATD6;
 35886                           
 35887                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 35888                           ;incstack = 0
 35889  01CF04  ACBD               	btfss	189,6,c	;volatile
 35890  01CF06  D003               	goto	u981_20
 35891  01CF08  6A01               	clrf	btemp^0,c
 35892  01CF0A  2A01               	incf	btemp^0,f,c
 35893  01CF0C  0012               	return	
 35894  01CF0E                     u981_20:
 35895  01CF0E  6A01               	clrf	btemp^0,c
 35896                           
 35897                           ; _get_ac_charger_relay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 35898  01CF10  0012               	return		;funcret
 35899  01CF12                     __end_of_get_ac_charger_relay:
 35900                           	opt callstack 0
 35901                           
 35902 ;; *************** function _TMR3_ISR *****************
 35903 ;; Defined at:
 35904 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 35905 ;; Parameters:    Size  Location     Type
 35906 ;;		None
 35907 ;; Auto vars:     Size  Location     Type
 35908 ;;		None
 35909 ;; Return value:  Size  Location     Type
 35910 ;;                  1    wreg      void 
 35911 ;; Registers used:
 35912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 35913 ;; Tracked objects:
 35914 ;;		On entry : 0/0
 35915 ;;		On exit  : 3F/0
 35916 ;;		Unchanged: 0/0
 35917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 35918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35920 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35921 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 35922 ;;Total ram usage:       25 bytes
 35923 ;; Hardware stack levels used:    1
 35924 ;; Hardware stack levels required when called:   14
 35925 ;; This function calls:
 35926 ;;		_TMR3_CallBack
 35927 ;;		_TMR3_WriteTimer
 35928 ;; This function is called by:
 35929 ;;		Interrupt level 1
 35930 ;; This function uses a non-reentrant model
 35931 ;;
 35932                           
 35933                           	psect	text162
 35934  019928                     __ptext162:
 35935                           	opt callstack 0
 35936  019928                     _TMR3_ISR:
 35937                           	opt callstack 2
 35938                           
 35939                           ;incstack = 0
 35940  019928  006F FF60  F0E5    	movff	status,??_TMR3_ISR
 35941  01992E  006F FFD8  F0E6    	movff	tblptrl,??_TMR3_ISR+1
 35942  019934  006F FFDC  F0E7    	movff	tblptrh,??_TMR3_ISR+2
 35943  01993A  006F FFE0  F0E8    	movff	tblptru,??_TMR3_ISR+3
 35944  019940  006F FFD4  F0E9    	movff	tablat,??_TMR3_ISR+4
 35945  019946  0060  F004  F0EA   	movff	btemp,??_TMR3_ISR+5
 35946  01994C  0060  F008  F0EB   	movff	btemp+1,??_TMR3_ISR+6
 35947  019952  0060  F00C  F0EC   	movff	btemp+2,??_TMR3_ISR+7
 35948  019958  0060  F010  F0ED   	movff	btemp+3,??_TMR3_ISR+8
 35949  01995E  0060  F014  F0EE   	movff	btemp+4,??_TMR3_ISR+9
 35950  019964  0060  F018  F0EF   	movff	btemp+5,??_TMR3_ISR+10
 35951  01996A  0060  F01C  F0F0   	movff	btemp+6,??_TMR3_ISR+11
 35952  019970  0060  F020  F0F1   	movff	btemp+7,??_TMR3_ISR+12
 35953  019976  0060  F024  F0F2   	movff	btemp+8,??_TMR3_ISR+13
 35954  01997C  0060  F028  F0F3   	movff	btemp+9,??_TMR3_ISR+14
 35955  019982  0060  F02C  F0F4   	movff	btemp+10,??_TMR3_ISR+15
 35956  019988  0060  F030  F0F5   	movff	btemp+11,??_TMR3_ISR+16
 35957  01998E  0060  F044  F0F6   	movff	btemp+16,??_TMR3_ISR+17
 35958  019994  0060  F048  F0F7   	movff	btemp+17,??_TMR3_ISR+18
 35959  01999A  0060  F04C  F0F8   	movff	btemp+18,??_TMR3_ISR+19
 35960  0199A0  0060  F050  F0F9   	movff	btemp+19,??_TMR3_ISR+20
 35961  0199A6  0060  F054  F0FA   	movff	btemp+20,??_TMR3_ISR+21
 35962  0199AC  0060  F058  F0FB   	movff	btemp+21,??_TMR3_ISR+22
 35963  0199B2  0060  F05C  F0FC   	movff	btemp+22,??_TMR3_ISR+23
 35964  0199B8  0060  F060  F0FD   	movff	btemp+23,??_TMR3_ISR+24
 35965  0199BE  EE16  F0AF         	lfsr	1,___intlo_sp
 35966                           
 35967                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 35968  0199C2  0139               	movlb	57	; () banked
 35969  0199C4  9DA6               	bcf	166,6,b	;volatile
 35970                           
 35971                           ; BSR set to: 57
 35972                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 35973  0199C6  0060  F26B  FFE6   	movff	_timer3ReloadVal,postinc1
 35974  0199CC  0060  F26F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 35975  0199D2  EC90  F0E2         	call	_TMR3_WriteTimer	;wreg free
 35976                           
 35977                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 35978  0199D6  0100               	movlb	0	; () banked
 35979  0199D8  4B98               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 35980  0199DA  2B99               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 35981  0199DC  5199               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 35982  0199DE  E104               	bnz	i1u1341_20
 35983  0199E0  0E28               	movlw	40
 35984  0199E2  5D98               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 35985  0199E4  A0D8               	btfss	status,0,c
 35986  0199E6  D005               	goto	i1l1207
 35987  0199E8                     i1u1341_20:
 35988                           
 35989                           ; BSR set to: 0
 35990                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 35991  0199E8  EC0E  F0E6         	call	_TMR3_CallBack	;wreg free
 35992                           
 35993                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 35994  0199EC  0100               	movlb	0	; () banked
 35995  0199EE  6B98               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 35996  0199F0  6B99               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 35997  0199F2                     i1l1207:
 35998                           
 35999                           ; BSR set to: 0
 36000  0199F2  0060  F3F4  F018   	movff	??_TMR3_ISR+24,btemp+23
 36001  0199F8  0060  F3F0  F017   	movff	??_TMR3_ISR+23,btemp+22
 36002  0199FE  0060  F3EC  F016   	movff	??_TMR3_ISR+22,btemp+21
 36003  019A04  0060  F3E8  F015   	movff	??_TMR3_ISR+21,btemp+20
 36004  019A0A  0060  F3E4  F014   	movff	??_TMR3_ISR+20,btemp+19
 36005  019A10  0060  F3E0  F013   	movff	??_TMR3_ISR+19,btemp+18
 36006  019A16  0060  F3DC  F012   	movff	??_TMR3_ISR+18,btemp+17
 36007  019A1C  0060  F3D8  F011   	movff	??_TMR3_ISR+17,btemp+16
 36008  019A22  0060  F3D4  F00C   	movff	??_TMR3_ISR+16,btemp+11
 36009  019A28  0060  F3D0  F00B   	movff	??_TMR3_ISR+15,btemp+10
 36010  019A2E  0060  F3CC  F00A   	movff	??_TMR3_ISR+14,btemp+9
 36011  019A34  0060  F3C8  F009   	movff	??_TMR3_ISR+13,btemp+8
 36012  019A3A  0060  F3C4  F008   	movff	??_TMR3_ISR+12,btemp+7
 36013  019A40  0060  F3C0  F007   	movff	??_TMR3_ISR+11,btemp+6
 36014  019A46  0060  F3BC  F006   	movff	??_TMR3_ISR+10,btemp+5
 36015  019A4C  0060  F3B8  F005   	movff	??_TMR3_ISR+9,btemp+4
 36016  019A52  0060  F3B4  F004   	movff	??_TMR3_ISR+8,btemp+3
 36017  019A58  0060  F3B0  F003   	movff	??_TMR3_ISR+7,btemp+2
 36018  019A5E  0060  F3AC  F002   	movff	??_TMR3_ISR+6,btemp+1
 36019  019A64  0060  F3A8  F001   	movff	??_TMR3_ISR+5,btemp
 36020  019A6A  0060  F3A7  FFF5   	movff	??_TMR3_ISR+4,tablat
 36021  019A70  0060  F3A3  FFF8   	movff	??_TMR3_ISR+3,tblptru
 36022  019A76  0060  F39F  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 36023  019A7C  0060  F39B  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 36024  019A82  0060  F397  FFD8   	movff	??_TMR3_ISR,status
 36025  019A88  0011               	retfie		f
 36026  019A8A                     __end_of_TMR3_ISR:
 36027                           	opt callstack 0
 36028                           
 36029 ;; *************** function _TMR3_WriteTimer *****************
 36030 ;; Defined at:
 36031 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 36032 ;; Parameters:    Size  Location     Type
 36033 ;;  timerVal        2  [STACK] unsigned short 
 36034 ;; Auto vars:     Size  Location     Type
 36035 ;;		None
 36036 ;; Return value:  Size  Location     Type
 36037 ;;                  1  [STACK] void 
 36038 ;; Registers used:
 36039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 36040 ;; Tracked objects:
 36041 ;;		On entry : 3F/39
 36042 ;;		On exit  : 0/0
 36043 ;;		Unchanged: 0/0
 36044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36049 ;;Total ram usage:        0 bytes
 36050 ;; Hardware stack levels used:    1
 36051 ;; Hardware stack levels required when called:    3
 36052 ;; This function calls:
 36053 ;;		Nothing
 36054 ;; This function is called by:
 36055 ;;		_TMR3_ISR
 36056 ;; This function uses a reentrant model
 36057 ;;
 36058                           
 36059                           	psect	text163
 36060  01C520                     __ptext163:
 36061                           	opt callstack 0
 36062  01C520                     _TMR3_WriteTimer:
 36063                           	opt callstack 12
 36064                           
 36065                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 36066                           
 36067                           ; BSR set to: 0
 36068                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36069                           ;incstack = 0
 36070  01C520  A4A6               	btfss	166,2,c	;volatile
 36071  01C522  D00F               	goto	l11426
 36072                           
 36073                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 36074  01C524  90A6               	bcf	166,0,c	;volatile
 36075                           
 36076                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 36077                           ;stkvar	_timerVal @ sp[(0)+-2]
 36078  01C526  0EFF               	movlw	255
 36079  01C528  24E1               	addwf	fsr1l,w,c
 36080  01C52A  6ED9               	movwf	fsr2l,c
 36081  01C52C  0EFF               	movlw	255
 36082  01C52E  20E2               	addwfc	fsr1h,w,c
 36083  01C530  6EDA               	movwf	fsr2h,c
 36084  01C532  50DF               	movf	indf2,w,c
 36085  01C534  6EA5               	movwf	165,c	;volatile
 36086                           
 36087                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 36088                           ;stkvar	_timerVal @ sp[(0)+-2]
 36089  01C536  0EFE               	movlw	-2
 36090  01C538  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 36091                           
 36092                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 36093  01C53E  80A6               	bsf	166,0,c	;volatile
 36094                           
 36095                           ;mcc_generated_files/tmr3.c: 141:     }
 36096  01C540  D00C               	goto	l1190
 36097  01C542                     l11426:
 36098                           
 36099                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 36100                           ;stkvar	_timerVal @ sp[(0)+-2]
 36101  01C542  0EFF               	movlw	255
 36102  01C544  24E1               	addwf	fsr1l,w,c
 36103  01C546  6ED9               	movwf	fsr2l,c
 36104  01C548  0EFF               	movlw	255
 36105  01C54A  20E2               	addwfc	fsr1h,w,c
 36106  01C54C  6EDA               	movwf	fsr2h,c
 36107  01C54E  50DF               	movf	indf2,w,c
 36108  01C550  6EA5               	movwf	165,c	;volatile
 36109                           
 36110                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 36111                           ;stkvar	_timerVal @ sp[(0)+-2]
 36112  01C552  0EFE               	movlw	-2
 36113  01C554  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 36114  01C55A                     l1190:
 36115                           
 36116                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 36117  01C55A  52E5               	movf	postdec1,f,c
 36118  01C55C  52E5               	movf	postdec1,f,c
 36119  01C55E  0012               	return		;funcret
 36120  01C560                     __end_of_TMR3_WriteTimer:
 36121                           	opt callstack 0
 36122                           
 36123 ;; *************** function _TMR3_CallBack *****************
 36124 ;; Defined at:
 36125 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 36126 ;; Parameters:    Size  Location     Type
 36127 ;;		None
 36128 ;; Auto vars:     Size  Location     Type
 36129 ;;		None
 36130 ;; Return value:  Size  Location     Type
 36131 ;;                  1  [STACK] void 
 36132 ;; Registers used:
 36133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 36134 ;; Tracked objects:
 36135 ;;		On entry : 3F/0
 36136 ;;		On exit  : 0/0
 36137 ;;		Unchanged: 0/0
 36138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36143 ;;Total ram usage:        0 bytes
 36144 ;; Hardware stack levels used:    1
 36145 ;; Hardware stack levels required when called:   13
 36146 ;; This function calls:
 36147 ;;		Absolute function
 36148 ;;		_TMR3_DefaultInterruptHandler
 36149 ;;		_calc_bsoc
 36150 ;; This function is called by:
 36151 ;;		_TMR3_ISR
 36152 ;; This function uses a reentrant model
 36153 ;;
 36154                           
 36155                           	psect	text164
 36156  01CC1C                     __ptext164:
 36157                           	opt callstack 0
 36158  01CC1C                     _TMR3_CallBack:
 36159                           	opt callstack 2
 36160                           
 36161                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 36162                           
 36163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36164                           ;incstack = 0
 36165  01CC1C  0100               	movlb	0	; () banked
 36166  01CC1E  5178               	movf	_TMR3_InterruptHandler& (0+255),w,b
 36167  01CC20  1179               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 36168  01CC22  117A               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 36169  01CC24  B4D8               	btfsc	status,2,c
 36170  01CC26  0012               	return	
 36171                           
 36172                           ; BSR set to: 0
 36173                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 36174  01CC28  D801               	call	u1322_28
 36175  01CC2A  0012               	return	
 36176  01CC2C                     u1322_28:
 36177  01CC2C  0005               	push	
 36178  01CC2E  6EFA               	movwf	pclath,c
 36179  01CC30  5178               	movf	_TMR3_InterruptHandler& (0+255),w,b
 36180  01CC32  6EFD               	movwf	tosl,c
 36181  01CC34  5179               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 36182  01CC36  6EFE               	movwf	tosh,c
 36183  01CC38  517A               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 36184  01CC3A  6EFF               	movwf	tosu,c
 36185  01CC3C  50FA               	movf	pclath,w,c
 36186  01CC3E  0012               	return		;indir
 36187  01CC40                     __end_of_TMR3_CallBack:
 36188                           	opt callstack 0
 36189                           
 36190 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 36191 ;; Defined at:
 36192 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 36193 ;; Parameters:    Size  Location     Type
 36194 ;;		None
 36195 ;; Auto vars:     Size  Location     Type
 36196 ;;		None
 36197 ;; Return value:  Size  Location     Type
 36198 ;;                  1  [STACK] void 
 36199 ;; Registers used:
 36200 ;;		None
 36201 ;; Tracked objects:
 36202 ;;		On entry : 3F/0
 36203 ;;		On exit  : 0/0
 36204 ;;		Unchanged: 0/0
 36205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36210 ;;Total ram usage:        0 bytes
 36211 ;; Hardware stack levels used:    1
 36212 ;; Hardware stack levels required when called:    3
 36213 ;; This function calls:
 36214 ;;		Nothing
 36215 ;; This function is called by:
 36216 ;;		_TMR3_Initialize
 36217 ;;		_TMR3_CallBack
 36218 ;; This function uses a reentrant model
 36219 ;;
 36220                           
 36221                           	psect	text165
 36222  01CFB4                     __ptext165:
 36223                           	opt callstack 0
 36224  01CFB4                     _TMR3_DefaultInterruptHandler:
 36225                           	opt callstack 11
 36226                           
 36227                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 36228                           
 36229                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36230                           ;incstack = 0
 36231  01CFB4  0012               	return		;funcret
 36232  01CFB6                     __end_of_TMR3_DefaultInterruptHandler:
 36233                           	opt callstack 0
 36234                           
 36235 ;; *************** function _calc_bsoc *****************
 36236 ;; Defined at:
 36237 ;;		line 39 in file "bsoc.c"
 36238 ;; Parameters:    Size  Location     Type
 36239 ;;		None
 36240 ;; Auto vars:     Size  Location     Type
 36241 ;;  adj             4  [STACK] float 
 36242 ;;  log_ptr         2  [STACK] PTR unsigned char 
 36243 ;;		 -> port_data(512), 
 36244 ;; Return value:  Size  Location     Type
 36245 ;;                  1  [STACK] void 
 36246 ;; Registers used:
 36247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 36248 ;; Tracked objects:
 36249 ;;		On entry : 3F/0
 36250 ;;		On exit  : 5/1
 36251 ;;		Unchanged: 0/0
 36252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 36253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 36257 ;;Total ram usage:        0 bytes
 36258 ;; Hardware stack levels used:    1
 36259 ;; Hardware stack levels required when called:   12
 36260 ;; This function calls:
 36261 ;;		_StartTimer
 36262 ;;		___asfladd
 36263 ;;		___fldiv
 36264 ;;		___flge
 36265 ;;		___flmul
 36266 ;;		___flneg
 36267 ;;		___fltol
 36268 ;;		_fabsf
 36269 ;;		_get_ac_charger_relay
 36270 ;;		_port_data_dma_ptr
 36271 ;;		_send_port_data_dma
 36272 ;;		_sprintf
 36273 ;;		_strlen
 36274 ;; This function is called by:
 36275 ;;		_init_bsoc
 36276 ;;		_TMR3_CallBack
 36277 ;; This function uses a reentrant model
 36278 ;;
 36279                           
 36280                           	psect	text166
 36281  01346E                     __ptext166:
 36282                           	opt callstack 0
 36283  01346E                     _calc_bsoc:
 36284                           	opt callstack 0
 36285                           
 36286                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 36287  01346E  0E06               	movlw	6
 36288  013470  26E1               	addwf	fsr1l,f,c
 36289  013472  0E00               	movlw	0
 36290  013474  22E2               	addwfc	fsr1h,f,c
 36291                           
 36292                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 43:  float adj = 1.0;
 36293                           
 36294                           ;incstack = 0
 36295  013476  0E00               	movlw	0
 36296  013478  6E09               	movwf	(btemp+8)^0,c
 36297  01347A  0E00               	movlw	0
 36298  01347C  6E0A               	movwf	(btemp+9)^0,c
 36299  01347E  0E80               	movlw	128
 36300  013480  6E0B               	movwf	(btemp+10)^0,c
 36301  013482  0E3F               	movlw	63
 36302  013484  6E0C               	movwf	(btemp+11)^0,c
 36303                           
 36304                           ;stkvar	_adj @ sp[(-6)+0]
 36305  013486  0EFA               	movlw	-6
 36306  013488  0060  F027  FFE3   	movff	btemp+8,plusw1
 36307  01348E  0EFB               	movlw	-5
 36308  013490  0060  F02B  FFE3   	movff	btemp+9,plusw1
 36309  013496  0EFC               	movlw	-4
 36310  013498  0060  F02F  FFE3   	movff	btemp+10,plusw1
 36311  01349E  0EFD               	movlw	-3
 36312  0134A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 36313  0134A6  82BE               	bsf	190,1,c	;volatile
 36314                           
 36315                           ;bsoc.c: 47:  C.dynamic_ah += (C.c_bat / 3600.0);
 36316  0134A8  0E00               	movlw	0
 36317  0134AA  6EE6               	movwf	postinc1,c
 36318  0134AC  0E00               	movlw	0
 36319  0134AE  6EE6               	movwf	postinc1,c
 36320  0134B0  0E61               	movlw	97
 36321  0134B2  6EE6               	movwf	postinc1,c
 36322  0134B4  0E45               	movlw	69
 36323  0134B6  6EE6               	movwf	postinc1,c
 36324  0134B8  EE21  F343         	lfsr	2,_C+68	;volatile
 36325  0134BC  006F FF7B FFE6     	movff	postinc2,postinc1
 36326  0134C2  006F FF7B FFE6     	movff	postinc2,postinc1
 36327  0134C8  006F FF7B FFE6     	movff	postinc2,postinc1
 36328  0134CE  006F FF7B FFE6     	movff	postinc2,postinc1
 36329  0134D4  EC61  F0A7         	call	___fldiv	;wreg free
 36330  0134D8  0060  F007  FFE6   	movff	btemp,postinc1
 36331  0134DE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36332  0134E4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36333  0134EA  0060  F013  FFE6   	movff	btemp+3,postinc1
 36334  0134F0  0E8F               	movlw	low (_C+144)
 36335  0134F2  6EE6               	movwf	postinc1,c
 36336  0134F4  0E07               	movlw	high (_C+144)
 36337  0134F6  6EE6               	movwf	postinc1,c
 36338  0134F8  EC3B  F0DD         	call	___asfladd	;wreg free
 36339                           
 36340                           ;bsoc.c: 48:  if (C.dynamic_ah > (C.bank_ah))
 36341  0134FC  EE21  F38F         	lfsr	2,_C+144	;volatile
 36342  013500  006F FF7B FFE6     	movff	postinc2,postinc1
 36343  013506  006F FF7B FFE6     	movff	postinc2,postinc1
 36344  01350C  006F FF7B FFE6     	movff	postinc2,postinc1
 36345  013512  006F FF7B FFE6     	movff	postinc2,postinc1
 36346  013518  EE21  F38B         	lfsr	2,_C+140	;volatile
 36347  01351C  006F FF7B FFE6     	movff	postinc2,postinc1
 36348  013522  006F FF7B FFE6     	movff	postinc2,postinc1
 36349  013528  006F FF7B FFE6     	movff	postinc2,postinc1
 36350  01352E  006F FF7B FFE6     	movff	postinc2,postinc1
 36351  013534  ECE3  F0CB         	call	___flge	;wreg free
 36352  013538  B001               	btfsc	btemp& (0+255),0,c
 36353  01353A  D00E               	goto	l13652
 36354                           
 36355                           ;bsoc.c: 49:   C.dynamic_ah = C.bank_ah;
 36356  01353C  EE21  F38B         	lfsr	2,_C+140	;volatile
 36357  013540  006F FF78  F78F    	movff	postinc2,_C+144	;volatile
 36358  013546  006F FF78  F790    	movff	postinc2,_C+145	;volatile
 36359  01354C  006F FF78  F791    	movff	postinc2,_C+146	;volatile
 36360  013552  006F FF74  F792    	movff	postdec2,_C+147	;volatile
 36361  013558                     l13652:
 36362                           
 36363                           ;bsoc.c: 50:  if (C.dynamic_ah < 0.1)
 36364  013558  0ECD               	movlw	205
 36365  01355A  6EE6               	movwf	postinc1,c
 36366  01355C  0ECC               	movlw	204
 36367  01355E  6EE6               	movwf	postinc1,c
 36368  013560  0ECC               	movlw	204
 36369  013562  6EE6               	movwf	postinc1,c
 36370  013564  0E3D               	movlw	61
 36371  013566  6EE6               	movwf	postinc1,c
 36372  013568  EE21  F38F         	lfsr	2,_C+144	;volatile
 36373  01356C  006F FF7B FFE6     	movff	postinc2,postinc1
 36374  013572  006F FF7B FFE6     	movff	postinc2,postinc1
 36375  013578  006F FF7B FFE6     	movff	postinc2,postinc1
 36376  01357E  006F FF7B FFE6     	movff	postinc2,postinc1
 36377  013584  ECE3  F0CB         	call	___flge	;wreg free
 36378  013588  B001               	btfsc	btemp& (0+255),0,c
 36379  01358A  D010               	goto	l13656
 36380                           
 36381                           ;bsoc.c: 51:   C.dynamic_ah = 0.1;
 36382  01358C  0ECD               	movlw	205
 36383  01358E  006F FFA0  F78F    	movff	wreg,_C+144	;volatile
 36384  013594  0ECC               	movlw	204
 36385  013596  006F FFA0  F790    	movff	wreg,_C+145	;volatile
 36386  01359C  0ECC               	movlw	204
 36387  01359E  006F FFA0  F791    	movff	wreg,_C+146	;volatile
 36388  0135A4  0E3D               	movlw	61
 36389  0135A6  006F FFA0  F792    	movff	wreg,_C+147	;volatile
 36390  0135AC                     l13656:
 36391                           
 36392                           ;bsoc.c: 53:  if (C.c_bat > 0.01)
 36393  0135AC  EE21  F343         	lfsr	2,_C+68	;volatile
 36394  0135B0  006F FF7B FFE6     	movff	postinc2,postinc1
 36395  0135B6  006F FF7B FFE6     	movff	postinc2,postinc1
 36396  0135BC  006F FF7B FFE6     	movff	postinc2,postinc1
 36397  0135C2  006F FF7B FFE6     	movff	postinc2,postinc1
 36398  0135C8  0E0A               	movlw	10
 36399  0135CA  6EE6               	movwf	postinc1,c
 36400  0135CC  0ED7               	movlw	215
 36401  0135CE  6EE6               	movwf	postinc1,c
 36402  0135D0  0E23               	movlw	35
 36403  0135D2  6EE6               	movwf	postinc1,c
 36404  0135D4  0E3C               	movlw	60
 36405  0135D6  6EE6               	movwf	postinc1,c
 36406  0135D8  ECE3  F0CB         	call	___flge	;wreg free
 36407  0135DC  B001               	btfsc	btemp& (0+255),0,c
 36408  0135DE  D01C               	goto	l13660
 36409                           
 36410                           ;bsoc.c: 54:   adj = C.hist[0].cef;
 36411  0135E0  0061  FEF4  F009   	movff	_C+190,btemp+8	;volatile
 36412  0135E6  0061  FEF8  F00A   	movff	_C+191,btemp+9	;volatile
 36413  0135EC  0061  FEFC  F00B   	movff	_C+192,btemp+10	;volatile
 36414  0135F2  0061  FF00  F00C   	movff	_C+193,btemp+11	;volatile
 36415                           
 36416                           ;stkvar	_adj @ sp[(-6)+0]
 36417  0135F8  0EFA               	movlw	-6
 36418  0135FA  0060  F027  FFE3   	movff	btemp+8,plusw1
 36419  013600  0EFB               	movlw	-5
 36420  013602  0060  F02B  FFE3   	movff	btemp+9,plusw1
 36421  013608  0EFC               	movlw	-4
 36422  01360A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 36423  013610  0EFD               	movlw	-3
 36424  013612  0060  F033  FFE3   	movff	btemp+11,plusw1
 36425  013618                     l13660:
 36426                           
 36427                           ;bsoc.c: 55:  if (C.c_bat < 0.01)
 36428  013618  0E0A               	movlw	10
 36429  01361A  6EE6               	movwf	postinc1,c
 36430  01361C  0ED7               	movlw	215
 36431  01361E  6EE6               	movwf	postinc1,c
 36432  013620  0E23               	movlw	35
 36433  013622  6EE6               	movwf	postinc1,c
 36434  013624  0E3C               	movlw	60
 36435  013626  6EE6               	movwf	postinc1,c
 36436  013628  EE21  F343         	lfsr	2,_C+68	;volatile
 36437  01362C  006F FF7B FFE6     	movff	postinc2,postinc1
 36438  013632  006F FF7B FFE6     	movff	postinc2,postinc1
 36439  013638  006F FF7B FFE6     	movff	postinc2,postinc1
 36440  01363E  006F FF7B FFE6     	movff	postinc2,postinc1
 36441  013644  ECE3  F0CB         	call	___flge	;wreg free
 36442  013648  B001               	btfsc	btemp& (0+255),0,c
 36443  01364A  D01C               	goto	l13664
 36444                           
 36445                           ;bsoc.c: 56:   adj = C.hist[0].peukert;
 36446  01364C  0061  FEE4  F009   	movff	_C+186,btemp+8	;volatile
 36447  013652  0061  FEE8  F00A   	movff	_C+187,btemp+9	;volatile
 36448  013658  0061  FEEC  F00B   	movff	_C+188,btemp+10	;volatile
 36449  01365E  0061  FEF0  F00C   	movff	_C+189,btemp+11	;volatile
 36450                           
 36451                           ;stkvar	_adj @ sp[(-6)+0]
 36452  013664  0EFA               	movlw	-6
 36453  013666  0060  F027  FFE3   	movff	btemp+8,plusw1
 36454  01366C  0EFB               	movlw	-5
 36455  01366E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 36456  013674  0EFC               	movlw	-4
 36457  013676  0060  F02F  FFE3   	movff	btemp+10,plusw1
 36458  01367C  0EFD               	movlw	-3
 36459  01367E  0060  F033  FFE3   	movff	btemp+11,plusw1
 36460  013684                     l13664:
 36461                           
 36462                           ;bsoc.c: 57:  C.dynamic_ah += ((C.c_bat * adj) / 3600.0);
 36463  013684  0E00               	movlw	0
 36464  013686  6EE6               	movwf	postinc1,c
 36465  013688  0E00               	movlw	0
 36466  01368A  6EE6               	movwf	postinc1,c
 36467  01368C  0E61               	movlw	97
 36468  01368E  6EE6               	movwf	postinc1,c
 36469  013690  0E45               	movlw	69
 36470  013692  6EE6               	movwf	postinc1,c
 36471                           
 36472                           ;stkvar	_adj @ sp[(-10)+0]
 36473  013694  0EF6               	movlw	-10
 36474  013696  006F FF8F FFE6     	movff	plusw1,postinc1
 36475  01369C  006F FF8F FFE6     	movff	plusw1,postinc1
 36476  0136A2  006F FF8F FFE6     	movff	plusw1,postinc1
 36477  0136A8  006F FF8F FFE6     	movff	plusw1,postinc1
 36478  0136AE  EE21  F343         	lfsr	2,_C+68	;volatile
 36479  0136B2  006F FF7B FFE6     	movff	postinc2,postinc1
 36480  0136B8  006F FF7B FFE6     	movff	postinc2,postinc1
 36481  0136BE  006F FF7B FFE6     	movff	postinc2,postinc1
 36482  0136C4  006F FF7B FFE6     	movff	postinc2,postinc1
 36483  0136CA  EC6E  F09F         	call	___flmul	;wreg free
 36484  0136CE  0060  F007  FFE6   	movff	btemp,postinc1
 36485  0136D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36486  0136DA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36487  0136E0  0060  F013  FFE6   	movff	btemp+3,postinc1
 36488  0136E6  EC61  F0A7         	call	___fldiv	;wreg free
 36489  0136EA  0060  F007  FFE6   	movff	btemp,postinc1
 36490  0136F0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36491  0136F6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36492  0136FC  0060  F013  FFE6   	movff	btemp+3,postinc1
 36493  013702  0E8F               	movlw	low (_C+144)
 36494  013704  6EE6               	movwf	postinc1,c
 36495  013706  0E07               	movlw	high (_C+144)
 36496  013708  6EE6               	movwf	postinc1,c
 36497  01370A  EC3B  F0DD         	call	___asfladd	;wreg free
 36498                           
 36499                           ;bsoc.c: 59:  C.dynamic_ah_adj = C.dynamic_ah;
 36500  01370E  EE21  F38F         	lfsr	2,_C+144	;volatile
 36501  013712  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 36502  013718  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 36503  01371E  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 36504  013724  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 36505                           
 36506                           ;bsoc.c: 60:  if (C.dynamic_ah_adj > (C.bank_ah))
 36507  01372A  EE21  F39B         	lfsr	2,_C+156	;volatile
 36508  01372E  006F FF7B FFE6     	movff	postinc2,postinc1
 36509  013734  006F FF7B FFE6     	movff	postinc2,postinc1
 36510  01373A  006F FF7B FFE6     	movff	postinc2,postinc1
 36511  013740  006F FF7B FFE6     	movff	postinc2,postinc1
 36512  013746  EE21  F38B         	lfsr	2,_C+140	;volatile
 36513  01374A  006F FF7B FFE6     	movff	postinc2,postinc1
 36514  013750  006F FF7B FFE6     	movff	postinc2,postinc1
 36515  013756  006F FF7B FFE6     	movff	postinc2,postinc1
 36516  01375C  006F FF7B FFE6     	movff	postinc2,postinc1
 36517  013762  ECE3  F0CB         	call	___flge	;wreg free
 36518  013766  B001               	btfsc	btemp& (0+255),0,c
 36519  013768  D00E               	goto	l13672
 36520                           
 36521                           ;bsoc.c: 61:   C.dynamic_ah_adj = C.bank_ah;
 36522  01376A  EE21  F38B         	lfsr	2,_C+140	;volatile
 36523  01376E  006F FF78  F79B    	movff	postinc2,_C+156	;volatile
 36524  013774  006F FF78  F79C    	movff	postinc2,_C+157	;volatile
 36525  01377A  006F FF78  F79D    	movff	postinc2,_C+158	;volatile
 36526  013780  006F FF74  F79E    	movff	postdec2,_C+159	;volatile
 36527  013786                     l13672:
 36528                           
 36529                           ;bsoc.c: 62:  if (C.dynamic_ah_adj < 0.1)
 36530  013786  0ECD               	movlw	205
 36531  013788  6EE6               	movwf	postinc1,c
 36532  01378A  0ECC               	movlw	204
 36533  01378C  6EE6               	movwf	postinc1,c
 36534  01378E  0ECC               	movlw	204
 36535  013790  6EE6               	movwf	postinc1,c
 36536  013792  0E3D               	movlw	61
 36537  013794  6EE6               	movwf	postinc1,c
 36538  013796  EE21  F39B         	lfsr	2,_C+156	;volatile
 36539  01379A  006F FF7B FFE6     	movff	postinc2,postinc1
 36540  0137A0  006F FF7B FFE6     	movff	postinc2,postinc1
 36541  0137A6  006F FF7B FFE6     	movff	postinc2,postinc1
 36542  0137AC  006F FF7B FFE6     	movff	postinc2,postinc1
 36543  0137B2  ECE3  F0CB         	call	___flge	;wreg free
 36544  0137B6  B001               	btfsc	btemp& (0+255),0,c
 36545  0137B8  D010               	goto	l13676
 36546                           
 36547                           ;bsoc.c: 63:   C.dynamic_ah_adj = 0.1;
 36548  0137BA  0ECD               	movlw	205
 36549  0137BC  006F FFA0  F79B    	movff	wreg,_C+156	;volatile
 36550  0137C2  0ECC               	movlw	204
 36551  0137C4  006F FFA0  F79C    	movff	wreg,_C+157	;volatile
 36552  0137CA  0ECC               	movlw	204
 36553  0137CC  006F FFA0  F79D    	movff	wreg,_C+158	;volatile
 36554  0137D2  0E3D               	movlw	61
 36555  0137D4  006F FFA0  F79E    	movff	wreg,_C+159	;volatile
 36556  0137DA                     l13676:
 36557                           
 36558                           ;bsoc.c: 66:  C.pv_ah += (C.c_pv / 3600.0);
 36559  0137DA  0E00               	movlw	0
 36560  0137DC  6EE6               	movwf	postinc1,c
 36561  0137DE  0E00               	movlw	0
 36562  0137E0  6EE6               	movwf	postinc1,c
 36563  0137E2  0E61               	movlw	97
 36564  0137E4  6EE6               	movwf	postinc1,c
 36565  0137E6  0E45               	movlw	69
 36566  0137E8  6EE6               	movwf	postinc1,c
 36567  0137EA  EE21  F347         	lfsr	2,_C+72	;volatile
 36568  0137EE  006F FF7B FFE6     	movff	postinc2,postinc1
 36569  0137F4  006F FF7B FFE6     	movff	postinc2,postinc1
 36570  0137FA  006F FF7B FFE6     	movff	postinc2,postinc1
 36571  013800  006F FF7B FFE6     	movff	postinc2,postinc1
 36572  013806  EC61  F0A7         	call	___fldiv	;wreg free
 36573  01380A  0060  F007  FFE6   	movff	btemp,postinc1
 36574  013810  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36575  013816  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36576  01381C  0060  F013  FFE6   	movff	btemp+3,postinc1
 36577  013822  0E93               	movlw	low (_C+148)
 36578  013824  6EE6               	movwf	postinc1,c
 36579  013826  0E07               	movlw	high (_C+148)
 36580  013828  6EE6               	movwf	postinc1,c
 36581  01382A  EC3B  F0DD         	call	___asfladd	;wreg free
 36582                           
 36583                           ;bsoc.c: 67:  C.pvkw += (C.p_pv / 3600.0);
 36584  01382E  0E00               	movlw	0
 36585  013830  6EE6               	movwf	postinc1,c
 36586  013832  0E00               	movlw	0
 36587  013834  6EE6               	movwf	postinc1,c
 36588  013836  0E61               	movlw	97
 36589  013838  6EE6               	movwf	postinc1,c
 36590  01383A  0E45               	movlw	69
 36591  01383C  6EE6               	movwf	postinc1,c
 36592  01383E  EE21  F37B         	lfsr	2,_C+124	;volatile
 36593  013842  006F FF7B FFE6     	movff	postinc2,postinc1
 36594  013848  006F FF7B FFE6     	movff	postinc2,postinc1
 36595  01384E  006F FF7B FFE6     	movff	postinc2,postinc1
 36596  013854  006F FF7B FFE6     	movff	postinc2,postinc1
 36597  01385A  EC61  F0A7         	call	___fldiv	;wreg free
 36598  01385E  0060  F007  FFE6   	movff	btemp,postinc1
 36599  013864  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36600  01386A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36601  013870  0060  F013  FFE6   	movff	btemp+3,postinc1
 36602  013876  0EA7               	movlw	low (_C+168)
 36603  013878  6EE6               	movwf	postinc1,c
 36604  01387A  0E07               	movlw	high (_C+168)
 36605  01387C  6EE6               	movwf	postinc1,c
 36606  01387E  EC3B  F0DD         	call	___asfladd	;wreg free
 36607                           
 36608                           ;bsoc.c: 68:  C.invkw += (C.p_inverter / 3600.0);
 36609  013882  0E00               	movlw	0
 36610  013884  6EE6               	movwf	postinc1,c
 36611  013886  0E00               	movlw	0
 36612  013888  6EE6               	movwf	postinc1,c
 36613  01388A  0E61               	movlw	97
 36614  01388C  6EE6               	movwf	postinc1,c
 36615  01388E  0E45               	movlw	69
 36616  013890  6EE6               	movwf	postinc1,c
 36617  013892  EE21  F377         	lfsr	2,_C+120	;volatile
 36618  013896  006F FF7B FFE6     	movff	postinc2,postinc1
 36619  01389C  006F FF7B FFE6     	movff	postinc2,postinc1
 36620  0138A2  006F FF7B FFE6     	movff	postinc2,postinc1
 36621  0138A8  006F FF7B FFE6     	movff	postinc2,postinc1
 36622  0138AE  EC61  F0A7         	call	___fldiv	;wreg free
 36623  0138B2  0060  F007  FFE6   	movff	btemp,postinc1
 36624  0138B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36625  0138BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36626  0138C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 36627  0138CA  0EAB               	movlw	low (_C+172)
 36628  0138CC  6EE6               	movwf	postinc1,c
 36629  0138CE  0E07               	movlw	high (_C+172)
 36630  0138D0  6EE6               	movwf	postinc1,c
 36631  0138D2  EC3B  F0DD         	call	___asfladd	;wreg free
 36632                           
 36633                           ;bsoc.c: 69:  C.loadkw += (C.p_load / 3600.0);
 36634  0138D6  0E00               	movlw	0
 36635  0138D8  6EE6               	movwf	postinc1,c
 36636  0138DA  0E00               	movlw	0
 36637  0138DC  6EE6               	movwf	postinc1,c
 36638  0138DE  0E61               	movlw	97
 36639  0138E0  6EE6               	movwf	postinc1,c
 36640  0138E2  0E45               	movlw	69
 36641  0138E4  6EE6               	movwf	postinc1,c
 36642  0138E6  EE21  F373         	lfsr	2,_C+116	;volatile
 36643  0138EA  006F FF7B FFE6     	movff	postinc2,postinc1
 36644  0138F0  006F FF7B FFE6     	movff	postinc2,postinc1
 36645  0138F6  006F FF7B FFE6     	movff	postinc2,postinc1
 36646  0138FC  006F FF7B FFE6     	movff	postinc2,postinc1
 36647  013902  EC61  F0A7         	call	___fldiv	;wreg free
 36648  013906  0060  F007  FFE6   	movff	btemp,postinc1
 36649  01390C  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36650  013912  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36651  013918  0060  F013  FFE6   	movff	btemp+3,postinc1
 36652  01391E  0EAF               	movlw	low (_C+176)
 36653  013920  6EE6               	movwf	postinc1,c
 36654  013922  0E07               	movlw	high (_C+176)
 36655  013924  6EE6               	movwf	postinc1,c
 36656  013926  EC3B  F0DD         	call	___asfladd	;wreg free
 36657                           
 36658                           ;bsoc.c: 70:  if (C.p_bat > 0.0)
 36659  01392A  EE21  F37F         	lfsr	2,_C+128	;volatile
 36660  01392E  006F FF7B FFE6     	movff	postinc2,postinc1
 36661  013934  006F FF7B FFE6     	movff	postinc2,postinc1
 36662  01393A  006F FF7B FFE6     	movff	postinc2,postinc1
 36663  013940  006F FF7B FFE6     	movff	postinc2,postinc1
 36664  013946  0E00               	movlw	0
 36665  013948  6EE6               	movwf	postinc1,c
 36666  01394A  0E00               	movlw	0
 36667  01394C  6EE6               	movwf	postinc1,c
 36668  01394E  0E00               	movlw	0
 36669  013950  6EE6               	movwf	postinc1,c
 36670  013952  0E00               	movlw	0
 36671  013954  6EE6               	movwf	postinc1,c
 36672  013956  ECE3  F0CB         	call	___flge	;wreg free
 36673  01395A  B001               	btfsc	btemp& (0+255),0,c
 36674  01395C  D02A               	goto	l13682
 36675                           
 36676                           ;bsoc.c: 71:   C.bkwi += (C.p_bat / 3600.0);
 36677  01395E  0E00               	movlw	0
 36678  013960  6EE6               	movwf	postinc1,c
 36679  013962  0E00               	movlw	0
 36680  013964  6EE6               	movwf	postinc1,c
 36681  013966  0E61               	movlw	97
 36682  013968  6EE6               	movwf	postinc1,c
 36683  01396A  0E45               	movlw	69
 36684  01396C  6EE6               	movwf	postinc1,c
 36685  01396E  EE21  F37F         	lfsr	2,_C+128	;volatile
 36686  013972  006F FF7B FFE6     	movff	postinc2,postinc1
 36687  013978  006F FF7B FFE6     	movff	postinc2,postinc1
 36688  01397E  006F FF7B FFE6     	movff	postinc2,postinc1
 36689  013984  006F FF7B FFE6     	movff	postinc2,postinc1
 36690  01398A  EC61  F0A7         	call	___fldiv	;wreg free
 36691  01398E  0060  F007  FFE6   	movff	btemp,postinc1
 36692  013994  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36693  01399A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36694  0139A0  0060  F013  FFE6   	movff	btemp+3,postinc1
 36695  0139A6  0E9F               	movlw	low (_C+160)
 36696  0139A8  6EE6               	movwf	postinc1,c
 36697  0139AA  0E07               	movlw	high (_C+160)
 36698  0139AC  6EE6               	movwf	postinc1,c
 36699  0139AE  EC3B  F0DD         	call	___asfladd	;wreg free
 36700  0139B2                     l13682:
 36701                           
 36702                           ;bsoc.c: 72:  if (C.p_bat < 0.0)
 36703  0139B2  EE21  F37F         	lfsr	2,_C+128	;volatile
 36704  0139B6  0E03               	movlw	3
 36705  0139B8  AEDB               	btfss	plusw2,7,c
 36706  0139BA  D038               	goto	l13686
 36707                           
 36708                           ;bsoc.c: 73:   C.bkwo += fabsf(C.p_bat / 3600.0);
 36709  0139BC  0E00               	movlw	0
 36710  0139BE  6EE6               	movwf	postinc1,c
 36711  0139C0  0E00               	movlw	0
 36712  0139C2  6EE6               	movwf	postinc1,c
 36713  0139C4  0E61               	movlw	97
 36714  0139C6  6EE6               	movwf	postinc1,c
 36715  0139C8  0E45               	movlw	69
 36716  0139CA  6EE6               	movwf	postinc1,c
 36717  0139CC  EE21  F37F         	lfsr	2,_C+128	;volatile
 36718  0139D0  006F FF7B FFE6     	movff	postinc2,postinc1
 36719  0139D6  006F FF7B FFE6     	movff	postinc2,postinc1
 36720  0139DC  006F FF7B FFE6     	movff	postinc2,postinc1
 36721  0139E2  006F FF7B FFE6     	movff	postinc2,postinc1
 36722  0139E8  EC61  F0A7         	call	___fldiv	;wreg free
 36723  0139EC  0060  F007  FFE6   	movff	btemp,postinc1
 36724  0139F2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36725  0139F8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36726  0139FE  0060  F013  FFE6   	movff	btemp+3,postinc1
 36727  013A04  EC98  F0D8         	call	_fabsf	;wreg free
 36728  013A08  0060  F007  FFE6   	movff	btemp,postinc1
 36729  013A0E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36730  013A14  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36731  013A1A  0060  F013  FFE6   	movff	btemp+3,postinc1
 36732  013A20  0EA3               	movlw	low (_C+164)
 36733  013A22  6EE6               	movwf	postinc1,c
 36734  013A24  0E07               	movlw	high (_C+164)
 36735  013A26  6EE6               	movwf	postinc1,c
 36736  013A28  EC3B  F0DD         	call	___asfladd	;wreg free
 36737  013A2C                     l13686:
 36738                           
 36739                           ;bsoc.c: 75:  C.soc = ((uint16_t) ((C.dynamic_ah_adj / C.bank_ah)*100.0) + 1);
 36740  013A2C  0E00               	movlw	0
 36741  013A2E  6EE6               	movwf	postinc1,c
 36742  013A30  0E00               	movlw	0
 36743  013A32  6EE6               	movwf	postinc1,c
 36744  013A34  0EC8               	movlw	200
 36745  013A36  6EE6               	movwf	postinc1,c
 36746  013A38  0E42               	movlw	66
 36747  013A3A  6EE6               	movwf	postinc1,c
 36748  013A3C  EE21  F38B         	lfsr	2,_C+140	;volatile
 36749  013A40  006F FF7B FFE6     	movff	postinc2,postinc1
 36750  013A46  006F FF7B FFE6     	movff	postinc2,postinc1
 36751  013A4C  006F FF7B FFE6     	movff	postinc2,postinc1
 36752  013A52  006F FF7B FFE6     	movff	postinc2,postinc1
 36753  013A58  EE21  F39B         	lfsr	2,_C+156	;volatile
 36754  013A5C  006F FF7B FFE6     	movff	postinc2,postinc1
 36755  013A62  006F FF7B FFE6     	movff	postinc2,postinc1
 36756  013A68  006F FF7B FFE6     	movff	postinc2,postinc1
 36757  013A6E  006F FF7B FFE6     	movff	postinc2,postinc1
 36758  013A74  EC61  F0A7         	call	___fldiv	;wreg free
 36759  013A78  0060  F007  FFE6   	movff	btemp,postinc1
 36760  013A7E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36761  013A84  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36762  013A8A  0060  F013  FFE6   	movff	btemp+3,postinc1
 36763  013A90  EC6E  F09F         	call	___flmul	;wreg free
 36764  013A94  0060  F007  FFE6   	movff	btemp,postinc1
 36765  013A9A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36766  013AA0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36767  013AA6  0060  F013  FFE6   	movff	btemp+3,postinc1
 36768  013AAC  EC2A  F0CB         	call	___fltol	;wreg free
 36769  013AB0  0060  F004  F00B   	movff	btemp,btemp+10
 36770  013AB6  0060  F008  F00C   	movff	btemp+1,btemp+11
 36771  013ABC  0E01               	movlw	1
 36772  013ABE  260B               	addwf	(btemp+10)^0,f,c
 36773  013AC0  0E00               	movlw	0
 36774  013AC2  220C               	addwfc	(btemp+11)^0,f,c
 36775  013AC4  0060  F02C  F7B5   	movff	btemp+10,_C+182	;volatile
 36776  013ACA  0060  F030  F7B6   	movff	btemp+11,_C+183	;volatile
 36777                           
 36778                           ;bsoc.c: 76:  if (C.soc > 100)
 36779  013AD0  EE21  F3B5         	lfsr	2,_C+182	;volatile
 36780  013AD4  0E01               	movlw	1
 36781  013AD6  50DB               	movf	plusw2,w,c
 36782  013AD8  E104               	bnz	u1315_20
 36783  013ADA  0E65               	movlw	101
 36784  013ADC  5CDE               	subwf	postinc2,w,c
 36785  013ADE  A0D8               	btfss	status,0,c
 36786  013AE0  D008               	goto	l13692
 36787  013AE2                     u1315_20:
 36788                           
 36789                           ;bsoc.c: 77:   C.soc = 100;
 36790  013AE2  0E64               	movlw	100
 36791  013AE4  006F FFA0  F7B5    	movff	wreg,_C+182	;volatile
 36792  013AEA  0E00               	movlw	0
 36793  013AEC  006F FFA0  F7B6    	movff	wreg,_C+183	;volatile
 36794  013AF2                     l13692:
 36795                           
 36796                           ;bsoc.c: 79:  if (C.c_bat < 0.0) {
 36797  013AF2  EE21  F343         	lfsr	2,_C+68	;volatile
 36798  013AF6  0E03               	movlw	3
 36799  013AF8  AEDB               	btfss	plusw2,7,c
 36800  013AFA  D047               	goto	l2185
 36801                           
 36802                           ;bsoc.c: 80:   C.runtime = (uint16_t) (-(C.dynamic_ah_adj / C.c_bat));
 36803  013AFC  EE21  F343         	lfsr	2,_C+68	;volatile
 36804  013B00  006F FF7B FFE6     	movff	postinc2,postinc1
 36805  013B06  006F FF7B FFE6     	movff	postinc2,postinc1
 36806  013B0C  006F FF7B FFE6     	movff	postinc2,postinc1
 36807  013B12  006F FF7B FFE6     	movff	postinc2,postinc1
 36808  013B18  EE21  F39B         	lfsr	2,_C+156	;volatile
 36809  013B1C  006F FF7B FFE6     	movff	postinc2,postinc1
 36810  013B22  006F FF7B FFE6     	movff	postinc2,postinc1
 36811  013B28  006F FF7B FFE6     	movff	postinc2,postinc1
 36812  013B2E  006F FF7B FFE6     	movff	postinc2,postinc1
 36813  013B34  EC61  F0A7         	call	___fldiv	;wreg free
 36814  013B38  0060  F007  FFE6   	movff	btemp,postinc1
 36815  013B3E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36816  013B44  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36817  013B4A  0060  F013  FFE6   	movff	btemp+3,postinc1
 36818  013B50  ECF7  F0E0         	call	___flneg	;wreg free
 36819  013B54  0060  F007  FFE6   	movff	btemp,postinc1
 36820  013B5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 36821  013B60  0060  F00F  FFE6   	movff	btemp+2,postinc1
 36822  013B66  0060  F013  FFE6   	movff	btemp+3,postinc1
 36823  013B6C  EC2A  F0CB         	call	___fltol	;wreg free
 36824  013B70  0060  F004  F00B   	movff	btemp,btemp+10
 36825  013B76  0060  F008  F00C   	movff	btemp+1,btemp+11
 36826  013B7C  0060  F02C  F7B3   	movff	btemp+10,_C+180	;volatile
 36827  013B82  0060  F030  F7B4   	movff	btemp+11,_C+181	;volatile
 36828                           
 36829                           ;bsoc.c: 81:  } else {
 36830  013B88  D008               	goto	l13696
 36831  013B8A                     l2185:
 36832                           
 36833                           ;bsoc.c: 82:   C.runtime = 99;
 36834  013B8A  0E63               	movlw	99
 36835  013B8C  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 36836  013B92  0E00               	movlw	0
 36837  013B94  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 36838  013B9A                     l13696:
 36839                           
 36840                           ;bsoc.c: 84:  if (C.runtime > 99)
 36841  013B9A  EE21  F3B3         	lfsr	2,_C+180	;volatile
 36842  013B9E  0E01               	movlw	1
 36843  013BA0  50DB               	movf	plusw2,w,c
 36844  013BA2  E104               	bnz	u1317_20
 36845  013BA4  0E64               	movlw	100
 36846  013BA6  5CDE               	subwf	postinc2,w,c
 36847  013BA8  A0D8               	btfss	status,0,c
 36848  013BAA  D008               	goto	l13700
 36849  013BAC                     u1317_20:
 36850                           
 36851                           ;bsoc.c: 85:   C.runtime = 99;
 36852  013BAC  0E63               	movlw	99
 36853  013BAE  006F FFA0  F7B3    	movff	wreg,_C+180	;volatile
 36854  013BB4  0E00               	movlw	0
 36855  013BB6  006F FFA0  F7B4    	movff	wreg,_C+181	;volatile
 36856  013BBC                     l13700:
 36857                           
 36858                           ;bsoc.c: 87:  V.lowint_count++;
 36859  013BBC  0E01               	movlw	1
 36860  013BBE  0101               	movlb	1	; () banked
 36861  013BC0  27BB               	addwf	(_V+180)& (0+255),f,b	;volatile
 36862  013BC2  0E00               	movlw	0
 36863  013BC4  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 36864  013BC6  23BD               	addwfc	(_V+182)& (0+255),f,b	;volatile
 36865  013BC8  23BE               	addwfc	(_V+183)& (0+255),f,b	;volatile
 36866                           
 36867                           ;bsoc.c: 89:  if (!log_update_wait++ && V.system_stable) {
 36868  013BCA  2A40               	incf	calc_bsoc@log_update_wait^0,f,c
 36869  013BCC  0440               	decf	calc_bsoc@log_update_wait^0,w,c
 36870  013BCE  A4D8               	btfss	status,2,c
 36871  013BD0  D177               	goto	l13712
 36872                           
 36873                           ; BSR set to: 1
 36874  013BD2  51B6               	movf	(_V+175)& (0+255),w,b	;volatile
 36875  013BD4  B4D8               	btfsc	status,2,c
 36876  013BD6  D174               	goto	l13712
 36877                           
 36878                           ; BSR set to: 1
 36879                           ;bsoc.c: 90:   log_ptr = port_data_dma_ptr();
 36880  013BD8  EC9E  F0E7         	call	_port_data_dma_ptr	;wreg free
 36881                           
 36882                           ;stkvar	_log_ptr @ sp[(-6)+4]
 36883  013BDC  0EFF               	movlw	-1
 36884  013BDE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 36885  013BE4  0EFE               	movlw	-2
 36886  013BE6  0060  F007  FFE3   	movff	btemp,plusw1
 36887                           
 36888                           ;bsoc.c: 91:   sprintf((char*) log_ptr, " %c ,%lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4
      +                          .3f,%4.3f,%4.3f,%4.3f,%4.3f,%d,%d,%2.6f,%4.3f,%d,%d,%lu,%lu,%4.3f,%4.3f,%4.3f\r\n",
 36889  013BEC  EE21  F3B9         	lfsr	2,_C+186	;volatile
 36890  013BF0  006F FF7B FFE6     	movff	postinc2,postinc1
 36891  013BF6  006F FF7B FFE6     	movff	postinc2,postinc1
 36892  013BFC  006F FF7B FFE6     	movff	postinc2,postinc1
 36893  013C02  006F FF7B FFE6     	movff	postinc2,postinc1
 36894  013C08  EE21  F3BD         	lfsr	2,_C+190	;volatile
 36895  013C0C  006F FF7B FFE6     	movff	postinc2,postinc1
 36896  013C12  006F FF7B FFE6     	movff	postinc2,postinc1
 36897  013C18  006F FF7B FFE6     	movff	postinc2,postinc1
 36898  013C1E  006F FF7B FFE6     	movff	postinc2,postinc1
 36899  013C24  EE21  F39B         	lfsr	2,_C+156	;volatile
 36900  013C28  006F FF7B FFE6     	movff	postinc2,postinc1
 36901  013C2E  006F FF7B FFE6     	movff	postinc2,postinc1
 36902  013C34  006F FF7B FFE6     	movff	postinc2,postinc1
 36903  013C3A  006F FF7B FFE6     	movff	postinc2,postinc1
 36904  013C40  EE22  F026         	lfsr	2,_C+295	;volatile
 36905  013C44  006F FF7B FFE6     	movff	postinc2,postinc1
 36906  013C4A  006F FF7B FFE6     	movff	postinc2,postinc1
 36907  013C50  006F FF7B FFE6     	movff	postinc2,postinc1
 36908  013C56  006F FF7B FFE6     	movff	postinc2,postinc1
 36909  013C5C  EE22  F022         	lfsr	2,_C+291	;volatile
 36910  013C60  006F FF7B FFE6     	movff	postinc2,postinc1
 36911  013C66  006F FF7B FFE6     	movff	postinc2,postinc1
 36912  013C6C  006F FF7B FFE6     	movff	postinc2,postinc1
 36913  013C72  006F FF7B FFE6     	movff	postinc2,postinc1
 36914  013C78  EE22  F021         	lfsr	2,_C+290	;volatile
 36915  013C7C  50DF               	movf	indf2,w,c
 36916  013C7E  6EE6               	movwf	postinc1,c
 36917  013C80  0E00               	movlw	0
 36918  013C82  6EE6               	movwf	postinc1,c
 36919  013C84  EC82  F0E7         	call	_get_ac_charger_relay	;wreg free
 36920  013C88  5001               	movf	btemp^0,w,c
 36921  013C8A  6EE6               	movwf	postinc1,c
 36922  013C8C  0E00               	movlw	0
 36923  013C8E  6EE6               	movwf	postinc1,c
 36924  013C90  EE21  F367         	lfsr	2,_C+104	;volatile
 36925  013C94  006F FF7B FFE6     	movff	postinc2,postinc1
 36926  013C9A  006F FF7B FFE6     	movff	postinc2,postinc1
 36927  013CA0  006F FF7B FFE6     	movff	postinc2,postinc1
 36928  013CA6  006F FF7B FFE6     	movff	postinc2,postinc1
 36929  013CAC  EE21  F387         	lfsr	2,_C+136	;volatile
 36930  013CB0  006F FF7B FFE6     	movff	postinc2,postinc1
 36931  013CB6  006F FF7B FFE6     	movff	postinc2,postinc1
 36932  013CBC  006F FF7B FFE6     	movff	postinc2,postinc1
 36933  013CC2  006F FF7B FFE6     	movff	postinc2,postinc1
 36934  013CC8  EE21  F3B3         	lfsr	2,_C+180	;volatile
 36935  013CCC  006F FF78  F00B    	movff	postinc2,btemp+10
 36936  013CD2  006F FF74  F00C    	movff	postdec2,btemp+11
 36937  013CD8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 36938  013CDE  0060  F033  FFE6   	movff	btemp+11,postinc1
 36939  013CE4  EE21  F3B5         	lfsr	2,_C+182	;volatile
 36940  013CE8  006F FF78  F00B    	movff	postinc2,btemp+10
 36941  013CEE  006F FF74  F00C    	movff	postdec2,btemp+11
 36942  013CF4  0060  F02F  FFE6   	movff	btemp+10,postinc1
 36943  013CFA  0060  F033  FFE6   	movff	btemp+11,postinc1
 36944  013D00  EE21  F393         	lfsr	2,_C+148	;volatile
 36945  013D04  006F FF7B FFE6     	movff	postinc2,postinc1
 36946  013D0A  006F FF7B FFE6     	movff	postinc2,postinc1
 36947  013D10  006F FF7B FFE6     	movff	postinc2,postinc1
 36948  013D16  006F FF7B FFE6     	movff	postinc2,postinc1
 36949  013D1C  EE21  F38F         	lfsr	2,_C+144	;volatile
 36950  013D20  006F FF7B FFE6     	movff	postinc2,postinc1
 36951  013D26  006F FF7B FFE6     	movff	postinc2,postinc1
 36952  013D2C  006F FF7B FFE6     	movff	postinc2,postinc1
 36953  013D32  006F FF7B FFE6     	movff	postinc2,postinc1
 36954  013D38  EE21  F377         	lfsr	2,_C+120	;volatile
 36955  013D3C  006F FF7B FFE6     	movff	postinc2,postinc1
 36956  013D42  006F FF7B FFE6     	movff	postinc2,postinc1
 36957  013D48  006F FF7B FFE6     	movff	postinc2,postinc1
 36958  013D4E  006F FF7B FFE6     	movff	postinc2,postinc1
 36959  013D54  EE21  F373         	lfsr	2,_C+116	;volatile
 36960  013D58  006F FF7B FFE6     	movff	postinc2,postinc1
 36961  013D5E  006F FF7B FFE6     	movff	postinc2,postinc1
 36962  013D64  006F FF7B FFE6     	movff	postinc2,postinc1
 36963  013D6A  006F FF7B FFE6     	movff	postinc2,postinc1
 36964  013D70  EE21  F37B         	lfsr	2,_C+124	;volatile
 36965  013D74  006F FF7B FFE6     	movff	postinc2,postinc1
 36966  013D7A  006F FF7B FFE6     	movff	postinc2,postinc1
 36967  013D80  006F FF7B FFE6     	movff	postinc2,postinc1
 36968  013D86  006F FF7B FFE6     	movff	postinc2,postinc1
 36969  013D8C  EE21  F37F         	lfsr	2,_C+128	;volatile
 36970  013D90  006F FF7B FFE6     	movff	postinc2,postinc1
 36971  013D96  006F FF7B FFE6     	movff	postinc2,postinc1
 36972  013D9C  006F FF7B FFE6     	movff	postinc2,postinc1
 36973  013DA2  006F FF7B FFE6     	movff	postinc2,postinc1
 36974  013DA8  EE21  F347         	lfsr	2,_C+72	;volatile
 36975  013DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 36976  013DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 36977  013DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 36978  013DBE  006F FF7B FFE6     	movff	postinc2,postinc1
 36979  013DC4  EE21  F343         	lfsr	2,_C+68	;volatile
 36980  013DC8  006F FF7B FFE6     	movff	postinc2,postinc1
 36981  013DCE  006F FF7B FFE6     	movff	postinc2,postinc1
 36982  013DD4  006F FF7B FFE6     	movff	postinc2,postinc1
 36983  013DDA  006F FF7B FFE6     	movff	postinc2,postinc1
 36984  013DE0  EE21  F363         	lfsr	2,_C+100	;volatile
 36985  013DE4  006F FF7B FFE6     	movff	postinc2,postinc1
 36986  013DEA  006F FF7B FFE6     	movff	postinc2,postinc1
 36987  013DF0  006F FF7B FFE6     	movff	postinc2,postinc1
 36988  013DF6  006F FF7B FFE6     	movff	postinc2,postinc1
 36989  013DFC  EE21  F34B         	lfsr	2,_C+76	;volatile
 36990  013E00  006F FF7B FFE6     	movff	postinc2,postinc1
 36991  013E06  006F FF7B FFE6     	movff	postinc2,postinc1
 36992  013E0C  006F FF7B FFE6     	movff	postinc2,postinc1
 36993  013E12  006F FF7B FFE6     	movff	postinc2,postinc1
 36994  013E18  EE21  F34F         	lfsr	2,_C+80	;volatile
 36995  013E1C  006F FF7B FFE6     	movff	postinc2,postinc1
 36996  013E22  006F FF7B FFE6     	movff	postinc2,postinc1
 36997  013E28  006F FF7B FFE6     	movff	postinc2,postinc1
 36998  013E2E  006F FF7B FFE6     	movff	postinc2,postinc1
 36999  013E34  EE21  F353         	lfsr	2,_C+84	;volatile
 37000  013E38  006F FF7B FFE6     	movff	postinc2,postinc1
 37001  013E3E  006F FF7B FFE6     	movff	postinc2,postinc1
 37002  013E44  006F FF7B FFE6     	movff	postinc2,postinc1
 37003  013E4A  006F FF7B FFE6     	movff	postinc2,postinc1
 37004  013E50  0060  F623  FFE6   	movff	_V+129,postinc1
 37005  013E56  0060  F627  FFE6   	movff	_V+130,postinc1
 37006  013E5C  0060  F62B  FFE6   	movff	_V+131,postinc1
 37007  013E62  0060  F62F  FFE6   	movff	_V+132,postinc1
 37008  013E68  0E32               	movlw	50
 37009  013E6A  6EE6               	movwf	postinc1,c
 37010  013E6C  0E00               	movlw	0
 37011  013E6E  6EE6               	movwf	postinc1,c
 37012  013E70  0ECF               	movlw	low STR_81
 37013  013E72  6EE6               	movwf	postinc1,c
 37014  013E74  0EFA               	movlw	high STR_81
 37015  013E76  6EE6               	movwf	postinc1,c
 37016                           
 37017                           ;stkvar	_log_ptr @ sp[(-98)+4]
 37018  013E78  0EA2               	movlw	-94
 37019  013E7A  006F FF8F FFE6     	movff	plusw1,postinc1
 37020  013E80  006F FF8F FFE6     	movff	plusw1,postinc1
 37021  013E86  0E5E               	movlw	94
 37022  013E88  6EE6               	movwf	postinc1,c
 37023  013E8A  EC1C  F0D3         	call	_sprintf	;wreg free
 37024                           
 37025                           ; BSR set to: 0
 37026                           ;bsoc.c: 98:   StartTimer(TMR_DISPLAY, 125);
 37027  013E8E  0E7D               	movlw	125
 37028  013E90  6EE6               	movwf	postinc1,c
 37029  013E92  0E00               	movlw	0
 37030  013E94  6EE6               	movwf	postinc1,c
 37031  013E96  0E0A               	movlw	10
 37032  013E98  6EE6               	movwf	postinc1,c
 37033  013E9A  EC50  F0E2         	call	_StartTimer	;wreg free
 37034                           
 37035                           ;bsoc.c: 99:   send_port_data_dma(strlen((char*) log_ptr));
 37036                           ;stkvar	_log_ptr @ sp[(-6)+4]
 37037  013E9E  0EFE               	movlw	-2
 37038  013EA0  006F FF8F FFE6     	movff	plusw1,postinc1
 37039  013EA6  006F FF8F FFE6     	movff	plusw1,postinc1
 37040  013EAC  EC41  F0DA         	call	_strlen	;wreg free
 37041  013EB0  0060  F007  FFE6   	movff	btemp,postinc1
 37042  013EB6  0060  F00B  FFE6   	movff	btemp+1,postinc1
 37043  013EBC  EC5D  F0E0         	call	_send_port_data_dma	;wreg free
 37044  013EC0                     l13712:
 37045                           
 37046                           ;bsoc.c: 101:  if (log_update_wait >= 10)
 37047  013EC0  0E09               	movlw	9
 37048  013EC2  6440               	cpfsgt	calc_bsoc@log_update_wait^0,c
 37049  013EC4  D001               	goto	l2189
 37050                           
 37051                           ;bsoc.c: 102:   log_update_wait = 0;
 37052  013EC6  6A40               	clrf	calc_bsoc@log_update_wait^0,c
 37053  013EC8                     l2189:
 37054                           
 37055                           ;bsoc.c: 104:  C.update = 0;
 37056  013EC8  0E00               	movlw	0
 37057  013ECA  006F FFA0  F7B7    	movff	wreg,_C+184	;volatile
 37058                           
 37059                           ;bsoc.c: 106:  do { LATEbits.LATE1 = 0; } while(0);
 37060  013ED0  92BE               	bcf	190,1,c	;volatile
 37061                           
 37062                           ; _calc_bsoc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 37063  013ED2  0EFA               	movlw	250
 37064  013ED4  26E1               	addwf	fsr1l,f,c
 37065  013ED6  0EFF               	movlw	255
 37066  013ED8  22E2               	addwfc	fsr1h,f,c
 37067  013EDA  0012               	return		;funcret
 37068  013EDC                     __end_of_calc_bsoc:
 37069                           	opt callstack 0
 37070                           
 37071 ;; *************** function _send_port_data_dma *****************
 37072 ;; Defined at:
 37073 ;;		line 398 in file "eadog.c"
 37074 ;; Parameters:    Size  Location     Type
 37075 ;;  dsize           2  [STACK] unsigned short 
 37076 ;; Auto vars:     Size  Location     Type
 37077 ;;		None
 37078 ;; Return value:  Size  Location     Type
 37079 ;;                  1  [STACK] void 
 37080 ;; Registers used:
 37081 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 37082 ;; Tracked objects:
 37083 ;;		On entry : 0/0
 37084 ;;		On exit  : 3F/3B
 37085 ;;		Unchanged: 0/0
 37086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37091 ;;Total ram usage:        0 bytes
 37092 ;; Hardware stack levels used:    1
 37093 ;; Hardware stack levels required when called:    3
 37094 ;; This function calls:
 37095 ;;		Nothing
 37096 ;; This function is called by:
 37097 ;;		_calc_bsoc
 37098 ;; This function uses a reentrant model
 37099 ;;
 37100                           
 37101                           	psect	text167
 37102  01C0BA                     __ptext167:
 37103                           	opt callstack 0
 37104  01C0BA                     _send_port_data_dma:
 37105                           	opt callstack 10
 37106                           
 37107                           ;eadog.c: 398: void send_port_data_dma(uint16_t dsize);eadog.c: 399: {;eadog.c: 400:  if
      +                           (dsize > 512)
 37108                           ;stkvar	_dsize @ sp[(0)+-2]
 37109                           
 37110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37111                           ;incstack = 0
 37112  01C0BA  0EFE               	movlw	-2
 37113  01C0BC  04E3               	decf	plusw1,w,c
 37114  01C0BE  0EFF               	movlw	-1
 37115  01C0C0  006F FF8C  F001    	movff	plusw1,btemp
 37116  01C0C6  0E02               	movlw	2
 37117  01C0C8  5A01               	subwfb	btemp^0,f,c
 37118  01C0CA  A0D8               	btfss	status,0,c
 37119  01C0CC  D00C               	goto	l10464
 37120                           
 37121                           ;eadog.c: 401:   dsize = 512;
 37122  01C0CE  0E00               	movlw	0
 37123  01C0D0  6E0B               	movwf	(btemp+10)^0,c
 37124  01C0D2  0E02               	movlw	2
 37125  01C0D4  6E0C               	movwf	(btemp+11)^0,c
 37126                           
 37127                           ;stkvar	_dsize @ sp[(0)+-2]
 37128  01C0D6  0EFE               	movlw	-2
 37129  01C0D8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 37130  01C0DE  0EFF               	movlw	-1
 37131  01C0E0  0060  F033  FFE3   	movff	btemp+11,plusw1
 37132  01C0E6                     l10464:
 37133                           
 37134                           ;eadog.c: 403:  DMA2CON0bits.EN = 0;
 37135  01C0E6  013B               	movlb	59	; () banked
 37136  01C0E8  9FDC               	bcf	220,7,b	;volatile
 37137                           
 37138                           ; BSR set to: 59
 37139                           ;eadog.c: 404:  DMA2SSZ = dsize;
 37140                           ;stkvar	_dsize @ sp[(0)+-2]
 37141  01C0EA  0EFE               	movlw	-2
 37142  01C0EC  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 37143  01C0F2  0EFF               	movlw	-1
 37144  01C0F4  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 37145                           
 37146                           ; BSR set to: 59
 37147                           ;eadog.c: 405:  DMA2DSZ = 1;
 37148  01C0FA  0E00               	movlw	0
 37149  01C0FC  6FCF               	movwf	207,b	;volatile
 37150  01C0FE  0E01               	movlw	1
 37151  01C100  6FCE               	movwf	206,b	;volatile
 37152                           
 37153                           ; BSR set to: 59
 37154                           ;eadog.c: 406:  DMA2CON0bits.EN = 1;
 37155  01C102  8FDC               	bsf	220,7,b	;volatile
 37156                           
 37157                           ; BSR set to: 59
 37158                           ;eadog.c: 407:  DMA2CON0bits.DMA2SIRQEN = 1;
 37159  01C104  8DDC               	bsf	220,6,b	;volatile
 37160                           
 37161                           ; BSR set to: 59
 37162                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 37163  01C106  52E5               	movf	postdec1,f,c
 37164  01C108  52E5               	movf	postdec1,f,c
 37165  01C10A  0012               	return		;funcret
 37166  01C10C                     __end_of_send_port_data_dma:
 37167                           	opt callstack 0
 37168                           
 37169 ;; *************** function _port_data_dma_ptr *****************
 37170 ;; Defined at:
 37171 ;;		line 413 in file "eadog.c"
 37172 ;; Parameters:    Size  Location     Type
 37173 ;;		None
 37174 ;; Auto vars:     Size  Location     Type
 37175 ;;		None
 37176 ;; Return value:  Size  Location     Type
 37177 ;;                  2  [STACK] PTR unsigned char 
 37178 ;; Registers used:
 37179 ;;		wreg, status,2, status,0, btemp, btemp+1
 37180 ;; Tracked objects:
 37181 ;;		On entry : 3F/1
 37182 ;;		On exit  : 0/0
 37183 ;;		Unchanged: 0/0
 37184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37189 ;;Total ram usage:        0 bytes
 37190 ;; Hardware stack levels used:    1
 37191 ;; Hardware stack levels required when called:    3
 37192 ;; This function calls:
 37193 ;;		Nothing
 37194 ;; This function is called by:
 37195 ;;		_calc_bsoc
 37196 ;; This function uses a reentrant model
 37197 ;;
 37198                           
 37199                           	psect	text168
 37200  01CF3C                     __ptext168:
 37201                           	opt callstack 0
 37202  01CF3C                     _port_data_dma_ptr:
 37203                           	opt callstack 10
 37204                           
 37205                           ;eadog.c: 415:  return port_data;
 37206                           
 37207                           ; BSR set to: 59
 37208                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37209                           ;incstack = 0
 37210  01CF3C  0EFF               	movlw	low _port_data
 37211  01CF3E  6E01               	movwf	btemp^0,c
 37212  01CF40  0E04               	movlw	high _port_data
 37213  01CF42  6E02               	movwf	(btemp+1)^0,c
 37214                           
 37215                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 37216  01CF44  0012               	return		;funcret
 37217  01CF46                     __end_of_port_data_dma_ptr:
 37218                           	opt callstack 0
 37219                           
 37220 ;; *************** function ___asfladd *****************
 37221 ;; Defined at:
 37222 ;;		line 6 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/pic18/asfladd.c"
 37223 ;; Parameters:    Size  Location     Type
 37224 ;;  f1p             2  [STACK] PTR 
 37225 ;;		 -> C(299), 
 37226 ;;  f2              4  [STACK] PTR 
 37227 ;; Auto vars:     Size  Location     Type
 37228 ;;		None
 37229 ;; Return value:  Size  Location     Type
 37230 ;;                  4  [STACK] PTR 
 37231 ;; Registers used:
 37232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 37233 ;; Tracked objects:
 37234 ;;		On entry : 0/0
 37235 ;;		On exit  : 0/0
 37236 ;;		Unchanged: 0/0
 37237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37242 ;;Total ram usage:        0 bytes
 37243 ;; Hardware stack levels used:    1
 37244 ;; Hardware stack levels required when called:    4
 37245 ;; This function calls:
 37246 ;;		___fladd
 37247 ;; This function is called by:
 37248 ;;		_calc_bsoc
 37249 ;; This function uses a reentrant model
 37250 ;;
 37251                           
 37252                           	psect	text169
 37253  01BA76                     __ptext169:
 37254                           	opt callstack 0
 37255  01BA76                     ___asfladd:
 37256                           	opt callstack 9
 37257                           
 37258                           ;	Return value of ___asfladd is never used
 37259                           ;stkvar	_f2 @ sp[(0)+-6]
 37260                           
 37261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37262                           ;incstack = 0
 37263  01BA76  0EFA               	movlw	-6
 37264  01BA78  006F FF8F FFE6     	movff	plusw1,postinc1
 37265  01BA7E  006F FF8F FFE6     	movff	plusw1,postinc1
 37266  01BA84  006F FF8F FFE6     	movff	plusw1,postinc1
 37267  01BA8A  006F FF8F FFE6     	movff	plusw1,postinc1
 37268                           
 37269                           ;stkvar	_f1p @ sp[(-4)+-2]
 37270  01BA90  0EFA               	movlw	-6
 37271  01BA92  006F FF8F FFD9     	movff	plusw1,fsr2l
 37272  01BA98  0EFB               	movlw	-5
 37273  01BA9A  006F FF8F FFDA     	movff	plusw1,fsr2h
 37274  01BAA0  006F FF7B FFE6     	movff	postinc2,postinc1
 37275  01BAA6  006F FF7B FFE6     	movff	postinc2,postinc1
 37276  01BAAC  006F FF7B FFE6     	movff	postinc2,postinc1
 37277  01BAB2  006F FF7B FFE6     	movff	postinc2,postinc1
 37278  01BAB8  EC83  F0A3         	call	___fladd	;wreg free
 37279                           
 37280                           ;stkvar	_f1p @ sp[(0)+-2]
 37281  01BABC  0EFE               	movlw	-2
 37282  01BABE  006F FF8F FFD9     	movff	plusw1,fsr2l
 37283  01BAC4  0EFF               	movlw	-1
 37284  01BAC6  006F FF8F FFDA     	movff	plusw1,fsr2h
 37285  01BACC  0060  F007  FFDE   	movff	btemp,postinc2
 37286  01BAD2  0060  F00B  FFDE   	movff	btemp+1,postinc2
 37287  01BAD8  0060  F00F  FFDE   	movff	btemp+2,postinc2
 37288  01BADE  0060  F013  FFDE   	movff	btemp+3,postinc2
 37289                           
 37290                           ; ___asfladd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 37291  01BAE4  0EFA               	movlw	250
 37292  01BAE6  26E1               	addwf	fsr1l,f,c
 37293  01BAE8  0EFF               	movlw	255
 37294  01BAEA  22E2               	addwfc	fsr1h,f,c
 37295  01BAEC  0012               	return		;funcret
 37296  01BAEE                     __end_of___asfladd:
 37297                           	opt callstack 0
 37298                           
 37299 ;; *************** function _INT0_ISR *****************
 37300 ;; Defined at:
 37301 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 37302 ;; Parameters:    Size  Location     Type
 37303 ;;		None
 37304 ;; Auto vars:     Size  Location     Type
 37305 ;;		None
 37306 ;; Return value:  Size  Location     Type
 37307 ;;                  1    wreg      void 
 37308 ;; Registers used:
 37309 ;;		wreg, status,2, status,0, pclath, tosl
 37310 ;; Tracked objects:
 37311 ;;		On entry : 0/0
 37312 ;;		On exit  : 0/0
 37313 ;;		Unchanged: 0/0
 37314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37319 ;;Total ram usage:        0 bytes
 37320 ;; Hardware stack levels used:    1
 37321 ;; Hardware stack levels required when called:    2
 37322 ;; This function calls:
 37323 ;;		_INT0_CallBack
 37324 ;; This function is called by:
 37325 ;;		Interrupt level 2
 37326 ;; This function uses a non-reentrant model
 37327 ;;
 37328                           
 37329                           	psect	text170
 37330  01CF14                     __ptext170:
 37331                           	opt callstack 0
 37332  01CF14                     _INT0_ISR:
 37333                           	opt callstack 2
 37334                           
 37335                           ;incstack = 0
 37336  01CF14  EE14  F15E         	lfsr	1,___inthi_sp
 37337                           
 37338                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 37339  01CF18  0139               	movlb	57	; () banked
 37340  01CF1A  91A1               	bcf	161,0,b	;volatile
 37341                           
 37342                           ; BSR set to: 57
 37343                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 37344  01CF1C  EC20  F0E6         	call	_INT0_CallBack	;wreg free
 37345  01CF20  0011               	retfie		f
 37346  01CF22                     __end_of_INT0_ISR:
 37347                           	opt callstack 0
 37348                           
 37349 ;; *************** function _INT0_CallBack *****************
 37350 ;; Defined at:
 37351 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 37352 ;; Parameters:    Size  Location     Type
 37353 ;;		None
 37354 ;; Auto vars:     Size  Location     Type
 37355 ;;		None
 37356 ;; Return value:  Size  Location     Type
 37357 ;;                  1  [STACK] void 
 37358 ;; Registers used:
 37359 ;;		wreg, status,2, status,0, pclath, tosl
 37360 ;; Tracked objects:
 37361 ;;		On entry : 3F/39
 37362 ;;		On exit  : 0/0
 37363 ;;		Unchanged: 0/0
 37364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37369 ;;Total ram usage:        0 bytes
 37370 ;; Hardware stack levels used:    1
 37371 ;; Hardware stack levels required when called:    1
 37372 ;; This function calls:
 37373 ;;		Absolute function
 37374 ;;		_INT0_DefaultInterruptHandler
 37375 ;; This function is called by:
 37376 ;;		_INT0_ISR
 37377 ;; This function uses a reentrant model
 37378 ;;
 37379                           
 37380                           	psect	text171
 37381  01CC40                     __ptext171:
 37382                           	opt callstack 0
 37383  01CC40                     _INT0_CallBack:
 37384                           	opt callstack 2
 37385                           
 37386                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 37387                           
 37388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37389                           ;incstack = 0
 37390  01CC40  0100               	movlb	0	; () banked
 37391  01CC42  5193               	movf	_INT0_InterruptHandler& (0+255),w,b
 37392  01CC44  1194               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 37393  01CC46  1195               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 37394  01CC48  B4D8               	btfsc	status,2,c
 37395  01CC4A  0012               	return	
 37396                           
 37397                           ; BSR set to: 0
 37398                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 37399  01CC4C  D801               	call	u1050_48
 37400  01CC4E  0012               	return	
 37401  01CC50                     u1050_48:
 37402  01CC50  0005               	push	
 37403  01CC52  6EFA               	movwf	pclath,c
 37404  01CC54  5193               	movf	_INT0_InterruptHandler& (0+255),w,b
 37405  01CC56  6EFD               	movwf	tosl,c
 37406  01CC58  5194               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 37407  01CC5A  6EFE               	movwf	tosh,c
 37408  01CC5C  5195               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 37409  01CC5E  6EFF               	movwf	tosu,c
 37410  01CC60  50FA               	movf	pclath,w,c
 37411  01CC62  0012               	return		;indir
 37412  01CC64                     __end_of_INT0_CallBack:
 37413                           	opt callstack 0
 37414                           
 37415 ;; *************** function _INT0_DefaultInterruptHandler *****************
 37416 ;; Defined at:
 37417 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 37418 ;; Parameters:    Size  Location     Type
 37419 ;;		None
 37420 ;; Auto vars:     Size  Location     Type
 37421 ;;		None
 37422 ;; Return value:  Size  Location     Type
 37423 ;;                  1  [STACK] void 
 37424 ;; Registers used:
 37425 ;;		None
 37426 ;; Tracked objects:
 37427 ;;		On entry : 3F/0
 37428 ;;		On exit  : 0/0
 37429 ;;		Unchanged: 0/0
 37430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37435 ;;Total ram usage:        0 bytes
 37436 ;; Hardware stack levels used:    1
 37437 ;; This function calls:
 37438 ;;		Nothing
 37439 ;; This function is called by:
 37440 ;;		_EXT_INT_Initialize
 37441 ;;		_INT0_CallBack
 37442 ;; This function uses a reentrant model
 37443 ;;
 37444                           
 37445                           	psect	text172
 37446  01CFB6                     __ptext172:
 37447                           	opt callstack 0
 37448  01CFB6                     _INT0_DefaultInterruptHandler:
 37449                           	opt callstack 2
 37450                           
 37451                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37452                           
 37453                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37454                           ;incstack = 0
 37455  01CFB6  0012               	return		;funcret
 37456  01CFB8                     __end_of_INT0_DefaultInterruptHandler:
 37457                           	opt callstack 0
 37458                           
 37459 ;; *************** function _Default_ISR *****************
 37460 ;; Defined at:
 37461 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 37462 ;; Parameters:    Size  Location     Type
 37463 ;;		None
 37464 ;; Auto vars:     Size  Location     Type
 37465 ;;		None
 37466 ;; Return value:  Size  Location     Type
 37467 ;;                  1    wreg      void 
 37468 ;; Registers used:
 37469 ;;		None
 37470 ;; Tracked objects:
 37471 ;;		On entry : 0/0
 37472 ;;		On exit  : 0/0
 37473 ;;		Unchanged: 0/0
 37474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37479 ;;Total ram usage:        0 bytes
 37480 ;; Hardware stack levels used:    1
 37481 ;; This function calls:
 37482 ;;		Nothing
 37483 ;; This function is called by:
 37484 ;;		Interrupt level 2
 37485 ;; This function uses a non-reentrant model
 37486 ;;
 37487                           
 37488                           	psect	text173
 37489  01CFAC                     __ptext173:
 37490                           	opt callstack 0
 37491  01CFAC                     _Default_ISR:
 37492                           	opt callstack 4
 37493                           
 37494                           ;incstack = 0
 37495  01CFAC  EE14  F15E         	lfsr	1,___inthi_sp
 37496  01CFB0  0011               	retfie		f
 37497  01CFB2                     __end_of_Default_ISR:
 37498                           	opt callstack 0
 37499                           
 37500 ;; *************** function _ADCC_ISR *****************
 37501 ;; Defined at:
 37502 ;;		line 314 in file "mcc_generated_files/adcc.c"
 37503 ;; Parameters:    Size  Location     Type
 37504 ;;		None
 37505 ;; Auto vars:     Size  Location     Type
 37506 ;;		None
 37507 ;; Return value:  Size  Location     Type
 37508 ;;                  1    wreg      void 
 37509 ;; Registers used:
 37510 ;;		wreg, status,2, status,0, pclath, tosl
 37511 ;; Tracked objects:
 37512 ;;		On entry : 0/0
 37513 ;;		On exit  : 0/0
 37514 ;;		Unchanged: 0/0
 37515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37520 ;;Total ram usage:        0 bytes
 37521 ;; Hardware stack levels used:    1
 37522 ;; Hardware stack levels required when called:    1
 37523 ;; This function calls:
 37524 ;;		Absolute function
 37525 ;;		_ADCC_DefaultInterruptHandler
 37526 ;;		_adc_int_handler
 37527 ;; This function is called by:
 37528 ;;		Interrupt level 2
 37529 ;; This function uses a non-reentrant model
 37530 ;;
 37531                           
 37532                           	psect	text174
 37533  01C8D4                     __ptext174:
 37534                           	opt callstack 0
 37535  01C8D4                     _ADCC_ISR:
 37536                           	opt callstack 3
 37537                           
 37538                           ;incstack = 0
 37539  01C8D4  EE14  F15E         	lfsr	1,___inthi_sp
 37540                           
 37541                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 37542  01C8D8  0139               	movlb	57	; () banked
 37543  01C8DA  95A1               	bcf	161,2,b	;volatile
 37544                           
 37545                           ; BSR set to: 57
 37546                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 37547  01C8DC  0100               	movlb	0	; () banked
 37548  01C8DE  5184               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 37549  01C8E0  1185               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 37550  01C8E2  1186               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 37551  01C8E4  B4D8               	btfsc	status,2,c
 37552  01C8E6  0011               	retfie		f
 37553                           
 37554                           ; BSR set to: 0
 37555                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 37556  01C8E8  D801               	call	i2u1101_48
 37557  01C8EA  0011               	retfie		f
 37558  01C8EC                     i2u1101_48:
 37559  01C8EC  0005               	push	
 37560  01C8EE  6EFA               	movwf	pclath,c
 37561  01C8F0  5184               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 37562  01C8F2  6EFD               	movwf	tosl,c
 37563  01C8F4  5185               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 37564  01C8F6  6EFE               	movwf	tosh,c
 37565  01C8F8  5186               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 37566  01C8FA  6EFF               	movwf	tosu,c
 37567  01C8FC  50FA               	movf	pclath,w,c
 37568  01C8FE  0012               	return		;indir
 37569  01C900                     __end_of_ADCC_ISR:
 37570                           	opt callstack 0
 37571                           
 37572 ;; *************** function _adc_int_t_handler *****************
 37573 ;; Defined at:
 37574 ;;		line 175 in file "daq.c"
 37575 ;; Parameters:    Size  Location     Type
 37576 ;;		None
 37577 ;; Auto vars:     Size  Location     Type
 37578 ;;		None
 37579 ;; Return value:  Size  Location     Type
 37580 ;;                  1  [STACK] void 
 37581 ;; Registers used:
 37582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 37583 ;; Tracked objects:
 37584 ;;		On entry : 3F/0
 37585 ;;		On exit  : 1/0
 37586 ;;		Unchanged: 0/0
 37587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37592 ;;Total ram usage:        0 bytes
 37593 ;; Hardware stack levels used:    1
 37594 ;; Hardware stack levels required when called:    1
 37595 ;; This function calls:
 37596 ;;		_ADCC_DischargeSampleCapacitor
 37597 ;;		_ADCC_StartConversion
 37598 ;; This function is called by:
 37599 ;;		_start_adc_scan
 37600 ;;		_ADCC_ThresholdISR
 37601 ;; This function uses a reentrant model
 37602 ;;
 37603                           
 37604                           	psect	text175
 37605  01B97E                     __ptext175:
 37606                           	opt callstack 0
 37607  01B97E                     _adc_int_t_handler:
 37608                           	opt callstack 2
 37609                           
 37610                           ;daq.c: 180:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 37611                           
 37612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37613                           ;incstack = 0
 37614  01B97E  013E               	movlb	62	; () banked
 37615  01B980  51E6               	movf	230,w,b	;volatile
 37616  01B982  006F FB9C  F001    	movff	16103,btemp	;volatile
 37617  01B988  6A02               	clrf	(btemp+1)^0,c
 37618  01B98A  0060  F004  F002   	movff	btemp,btemp+1
 37619  01B990  6A01               	clrf	btemp^0,c
 37620  01B992  2601               	addwf	btemp^0,f,c
 37621  01B994  0E00               	movlw	0
 37622  01B996  2202               	addwfc	(btemp+1)^0,f,c
 37623  01B998  0100               	movlb	0	; () banked
 37624  01B99A  51DD               	movf	(_R+50)& (0+255),w,b	;volatile
 37625  01B99C  0D02               	mullw	2
 37626  01B99E  50F3               	movf	243,w,c
 37627  01B9A0  0FAB               	addlw	low _R
 37628  01B9A2  6ED9               	movwf	fsr2l,c
 37629  01B9A4  6ADA               	clrf	fsr2h,c
 37630  01B9A6  0060  F007  FFDE   	movff	btemp,postinc2
 37631  01B9AC  0060  F00B  FFDD   	movff	btemp+1,postdec2
 37632  01B9B2                     l11930:
 37633                           
 37634                           ;daq.c: 182:   if (++R.scan_index > 0XD) {
 37635  01B9B2  0100               	movlb	0	; () banked
 37636  01B9B4  2BDD               	incf	(_R+50)& (0+255),f,b	;volatile
 37637  01B9B6  0E0D               	movlw	13
 37638  01B9B8  65DD               	cpfsgt	(_R+50)& (0+255),b	;volatile
 37639  01B9BA  D003               	goto	l11936
 37640                           
 37641                           ; BSR set to: 0
 37642                           ;daq.c: 183:    R.done = 1;
 37643  01B9BC  0E01               	movlw	1
 37644  01B9BE  6FE0               	movwf	(_R+53)& (0+255),b	;volatile
 37645  01B9C0  0012               	return	
 37646  01B9C2                     l11936:
 37647                           
 37648                           ; BSR set to: 0
 37649                           ;daq.c: 189:  } while (!((R.scan_select >> R.scan_index) &0x1));
 37650  01B9C2  0060  F374  F00C   	movff	_R+50,btemp+11	;volatile
 37651  01B9C8  EE20  F0DE         	lfsr	2,_R+51	;volatile
 37652  01B9CC  006F FF78  F009    	movff	postinc2,btemp+8
 37653  01B9D2  006F FF74  F00A    	movff	postdec2,btemp+9
 37654  01B9D8  2A0C               	incf	(btemp+11)^0,f,c
 37655  01B9DA  D003               	goto	u1098_44
 37656  01B9DC                     u1098_45:
 37657  01B9DC  90D8               	bcf	status,0,c
 37658  01B9DE  320A               	rrcf	(btemp+9)^0,f,c
 37659  01B9E0  3209               	rrcf	(btemp+8)^0,f,c
 37660  01B9E2                     u1098_44:
 37661  01B9E2  2E0C               	decfsz	(btemp+11)^0,f,c
 37662  01B9E4  D7FB               	goto	u1098_45
 37663  01B9E6  A009               	btfss	(btemp+8)^0,0,c
 37664  01B9E8  D7E4               	goto	l11930
 37665                           
 37666                           ;daq.c: 190:  ADCC_DischargeSampleCapacitor();
 37667  01B9EA  ECB9  F0E7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 37668                           
 37669                           ; BSR set to: 62
 37670                           ;daq.c: 191:  ADCC_StartConversion(R.scan_index & 0xf);
 37671  01B9EE  0100               	movlb	0	; () banked
 37672  01B9F0  51DD               	movf	(_R+50)& (0+255),w,b	;volatile
 37673  01B9F2  0B0F               	andlw	15
 37674  01B9F4  6EE6               	movwf	postinc1,c
 37675  01B9F6  EC4B  F0E7         	call	_ADCC_StartConversion	;wreg free
 37676                           
 37677                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 37678  01B9FA  0012               	return		;funcret
 37679  01B9FC                     __end_of_adc_int_t_handler:
 37680                           	opt callstack 0
 37681                           
 37682 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 37683 ;; Defined at:
 37684 ;;		line 339 in file "mcc_generated_files/adcc.c"
 37685 ;; Parameters:    Size  Location     Type
 37686 ;;		None
 37687 ;; Auto vars:     Size  Location     Type
 37688 ;;		None
 37689 ;; Return value:  Size  Location     Type
 37690 ;;                  1  [STACK] void 
 37691 ;; Registers used:
 37692 ;;		None
 37693 ;; Tracked objects:
 37694 ;;		On entry : 3F/0
 37695 ;;		On exit  : 0/0
 37696 ;;		Unchanged: 0/0
 37697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37702 ;;Total ram usage:        0 bytes
 37703 ;; Hardware stack levels used:    1
 37704 ;; This function calls:
 37705 ;;		Nothing
 37706 ;; This function is called by:
 37707 ;;		_ADCC_Initialize
 37708 ;;		_ADCC_ISR
 37709 ;;		_ADCC_ThresholdISR
 37710 ;; This function uses a reentrant model
 37711 ;;
 37712                           
 37713                           	psect	text176
 37714  01CFB8                     __ptext176:
 37715                           	opt callstack 0
 37716  01CFB8                     _ADCC_DefaultInterruptHandler:
 37717                           	opt callstack 3
 37718                           
 37719                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 37720                           
 37721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37722                           ;incstack = 0
 37723  01CFB8  0012               	return		;funcret
 37724  01CFBA                     __end_of_ADCC_DefaultInterruptHandler:
 37725                           	opt callstack 0
 37726                           
 37727 ;; *************** function _adc_int_handler *****************
 37728 ;; Defined at:
 37729 ;;		line 165 in file "daq.c"
 37730 ;; Parameters:    Size  Location     Type
 37731 ;;		None
 37732 ;; Auto vars:     Size  Location     Type
 37733 ;;		None
 37734 ;; Return value:  Size  Location     Type
 37735 ;;                  1  [STACK] void 
 37736 ;; Registers used:
 37737 ;;		None
 37738 ;; Tracked objects:
 37739 ;;		On entry : 3F/0
 37740 ;;		On exit  : 0/0
 37741 ;;		Unchanged: 0/0
 37742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37747 ;;Total ram usage:        0 bytes
 37748 ;; Hardware stack levels used:    1
 37749 ;; This function calls:
 37750 ;;		Nothing
 37751 ;; This function is called by:
 37752 ;;		_start_adc_scan
 37753 ;;		_ADCC_ISR
 37754 ;; This function uses a reentrant model
 37755 ;;
 37756                           
 37757                           	psect	text177
 37758  01CFBA                     __ptext177:
 37759                           	opt callstack 0
 37760  01CFBA                     _adc_int_handler:
 37761                           	opt callstack 3
 37762                           
 37763                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 37764                           
 37765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37766                           ;incstack = 0
 37767  01CFBA  0012               	return		;funcret
 37768  01CFBC                     __end_of_adc_int_handler:
 37769                           	opt callstack 0
 37770                           
 37771 ;; *************** function _ADCC_ThresholdISR *****************
 37772 ;; Defined at:
 37773 ;;		line 327 in file "mcc_generated_files/adcc.c"
 37774 ;; Parameters:    Size  Location     Type
 37775 ;;		None
 37776 ;; Auto vars:     Size  Location     Type
 37777 ;;		None
 37778 ;; Return value:  Size  Location     Type
 37779 ;;                  1    wreg      void 
 37780 ;; Registers used:
 37781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 37782 ;; Tracked objects:
 37783 ;;		On entry : 0/0
 37784 ;;		On exit  : 0/0
 37785 ;;		Unchanged: 0/0
 37786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37789 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37790 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37791 ;;Total ram usage:        5 bytes
 37792 ;; Hardware stack levels used:    1
 37793 ;; Hardware stack levels required when called:    2
 37794 ;; This function calls:
 37795 ;;		Absolute function
 37796 ;;		_ADCC_DefaultInterruptHandler
 37797 ;;		_adc_int_t_handler
 37798 ;; This function is called by:
 37799 ;;		Interrupt level 2
 37800 ;; This function uses a non-reentrant model
 37801 ;;
 37802                           
 37803                           	psect	text178
 37804  01BC34                     __ptext178:
 37805                           	opt callstack 0
 37806  01BC34                     _ADCC_ThresholdISR:
 37807                           	opt callstack 2
 37808                           
 37809                           ;incstack = 0
 37810  01BC34  0060  F004  F021   	movff	btemp,??_ADCC_ThresholdISR
 37811  01BC3A  0060  F008  F022   	movff	btemp+1,??_ADCC_ThresholdISR+1
 37812  01BC40  0060  F024  F023   	movff	btemp+8,??_ADCC_ThresholdISR+2
 37813  01BC46  0060  F028  F024   	movff	btemp+9,??_ADCC_ThresholdISR+3
 37814  01BC4C  0060  F030  F025   	movff	btemp+11,??_ADCC_ThresholdISR+4
 37815  01BC52  EE14  F15E         	lfsr	1,___inthi_sp
 37816                           
 37817                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 37818  01BC56  0139               	movlb	57	; () banked
 37819  01BC58  97A1               	bcf	161,3,b	;volatile
 37820                           
 37821                           ; BSR set to: 57
 37822                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 37823  01BC5A  0100               	movlb	0	; () banked
 37824  01BC5C  5181               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 37825  01BC5E  1182               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 37826  01BC60  1183               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 37827  01BC62  B4D8               	btfsc	status,2,c
 37828  01BC64  D00C               	goto	i2u1103_49
 37829                           
 37830                           ; BSR set to: 0
 37831                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 37832  01BC66  D801               	call	i2u1103_48
 37833  01BC68  D00A               	goto	i2u1103_49
 37834  01BC6A                     i2u1103_48:
 37835  01BC6A  0005               	push	
 37836  01BC6C  6EFA               	movwf	pclath,c
 37837  01BC6E  5181               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 37838  01BC70  6EFD               	movwf	tosl,c
 37839  01BC72  5182               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 37840  01BC74  6EFE               	movwf	tosh,c
 37841  01BC76  5183               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 37842  01BC78  6EFF               	movwf	tosu,c
 37843  01BC7A  50FA               	movf	pclath,w,c
 37844  01BC7C  0012               	return		;indir
 37845  01BC7E                     i2u1103_49:
 37846  01BC7E  0060  F094  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 37847  01BC84  0060  F090  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 37848  01BC8A  0060  F08C  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 37849  01BC90  0060  F088  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 37850  01BC96  0060  F084  F001   	movff	??_ADCC_ThresholdISR,btemp
 37851  01BC9C  0011               	retfie		f
 37852  01BC9E                     __end_of_ADCC_ThresholdISR:
 37853                           	opt callstack 0
 37854                           
 37855 ;; *************** function _UART1_rx_vect_isr *****************
 37856 ;; Defined at:
 37857 ;;		line 181 in file "mcc_generated_files/uart1.c"
 37858 ;; Parameters:    Size  Location     Type
 37859 ;;		None
 37860 ;; Auto vars:     Size  Location     Type
 37861 ;;		None
 37862 ;; Return value:  Size  Location     Type
 37863 ;;                  1    wreg      void 
 37864 ;; Registers used:
 37865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 37866 ;; Tracked objects:
 37867 ;;		On entry : 0/0
 37868 ;;		On exit  : 0/0
 37869 ;;		Unchanged: 0/0
 37870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37875 ;;Total ram usage:        0 bytes
 37876 ;; Hardware stack levels used:    1
 37877 ;; Hardware stack levels required when called:    1
 37878 ;; This function calls:
 37879 ;;		Absolute function
 37880 ;;		_UART1_Receive_ISR
 37881 ;; This function is called by:
 37882 ;;		Interrupt level 2
 37883 ;; This function uses a non-reentrant model
 37884 ;;
 37885                           
 37886                           	psect	text179
 37887  01CB38                     __ptext179:
 37888                           	opt callstack 0
 37889  01CB38                     _UART1_rx_vect_isr:
 37890                           	opt callstack 3
 37891                           
 37892                           ;incstack = 0
 37893  01CB38  EE14  F15E         	lfsr	1,___inthi_sp
 37894                           
 37895                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 37896  01CB3C  0100               	movlb	0	; () banked
 37897  01CB3E  5187               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 37898  01CB40  1188               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 37899  01CB42  1189               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 37900  01CB44  B4D8               	btfsc	status,2,c
 37901  01CB46  0011               	retfie		f
 37902                           
 37903                           ; BSR set to: 0
 37904                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 37905  01CB48  D801               	call	i2u1105_48
 37906  01CB4A  0011               	retfie		f
 37907  01CB4C                     i2u1105_48:
 37908  01CB4C  0005               	push	
 37909  01CB4E  6EFA               	movwf	pclath,c
 37910  01CB50  5187               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 37911  01CB52  6EFD               	movwf	tosl,c
 37912  01CB54  5188               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 37913  01CB56  6EFE               	movwf	tosh,c
 37914  01CB58  5189               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 37915  01CB5A  6EFF               	movwf	tosu,c
 37916  01CB5C  50FA               	movf	pclath,w,c
 37917  01CB5E  0012               	return		;indir
 37918  01CB60                     __end_of_UART1_rx_vect_isr:
 37919                           	opt callstack 0
 37920                           
 37921 ;; *************** function _UART1_Receive_ISR *****************
 37922 ;; Defined at:
 37923 ;;		line 192 in file "mcc_generated_files/uart1.c"
 37924 ;; Parameters:    Size  Location     Type
 37925 ;;		None
 37926 ;; Auto vars:     Size  Location     Type
 37927 ;;		None
 37928 ;; Return value:  Size  Location     Type
 37929 ;;                  1  [STACK] void 
 37930 ;; Registers used:
 37931 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37932 ;; Tracked objects:
 37933 ;;		On entry : 3F/0
 37934 ;;		On exit  : 3F/0
 37935 ;;		Unchanged: 0/0
 37936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 37937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 37941 ;;Total ram usage:        0 bytes
 37942 ;; Hardware stack levels used:    1
 37943 ;; This function calls:
 37944 ;;		Nothing
 37945 ;; This function is called by:
 37946 ;;		_UART1_Initialize
 37947 ;;		_UART1_rx_vect_isr
 37948 ;; This function uses a reentrant model
 37949 ;;
 37950                           
 37951                           	psect	text180
 37952  01CCCC                     __ptext180:
 37953                           	opt callstack 0
 37954  01CCCC                     _UART1_Receive_ISR:
 37955                           	opt callstack 3
 37956                           
 37957                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 37958                           
 37959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 37960                           ;incstack = 0
 37961  01CCCC  0EDC               	movlw	low _uart1RxBuffer
 37962  01CCCE  2447               	addwf	_uart1RxHead^0,w,c	;volatile
 37963  01CCD0  6ED9               	movwf	fsr2l,c
 37964  01CCD2  6ADA               	clrf	fsr2h,c
 37965  01CCD4  0E01               	movlw	high _uart1RxBuffer
 37966  01CCD6  22DA               	addwfc	fsr2h,f,c
 37967  01CCD8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 37968  01CCDE  2A47               	incf	_uart1RxHead^0,f,c	;volatile
 37969                           
 37970                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 37971  01CCE0  0E07               	movlw	7
 37972  01CCE2  6447               	cpfsgt	_uart1RxHead^0,c
 37973  01CCE4  D001               	goto	l11370
 37974                           
 37975                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 37976  01CCE6  6A47               	clrf	_uart1RxHead^0,c	;volatile
 37977  01CCE8                     l11370:
 37978                           
 37979                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 37980  01CCE8  0100               	movlb	0	; () banked
 37981  01CCEA  2BA9               	incf	_uart1RxCount& (0+255),f,b	;volatile
 37982                           
 37983                           ; BSR set to: 0
 37984                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 37985  01CCEC  0012               	return		;funcret
 37986  01CCEE                     __end_of_UART1_Receive_ISR:
 37987                           	opt callstack 0
 37988                           
 37989 ;; *************** function _UART2_tx_vect_isr *****************
 37990 ;; Defined at:
 37991 ;;		line 195 in file "mcc_generated_files/uart2.c"
 37992 ;; Parameters:    Size  Location     Type
 37993 ;;		None
 37994 ;; Auto vars:     Size  Location     Type
 37995 ;;		None
 37996 ;; Return value:  Size  Location     Type
 37997 ;;                  1    wreg      void 
 37998 ;; Registers used:
 37999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 38000 ;; Tracked objects:
 38001 ;;		On entry : 0/0
 38002 ;;		On exit  : 0/0
 38003 ;;		Unchanged: 0/0
 38004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38009 ;;Total ram usage:        0 bytes
 38010 ;; Hardware stack levels used:    1
 38011 ;; Hardware stack levels required when called:    1
 38012 ;; This function calls:
 38013 ;;		Absolute function
 38014 ;;		_UART2_Transmit_ISR
 38015 ;; This function is called by:
 38016 ;;		Interrupt level 2
 38017 ;; This function uses a non-reentrant model
 38018 ;;
 38019                           
 38020                           	psect	text181
 38021  01CB60                     __ptext181:
 38022                           	opt callstack 0
 38023  01CB60                     _UART2_tx_vect_isr:
 38024                           	opt callstack 3
 38025                           
 38026                           ; BSR set to: 0
 38027                           ;incstack = 0
 38028  01CB60  EE14  F15E         	lfsr	1,___inthi_sp
 38029                           
 38030                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 38031  01CB64  0100               	movlb	0	; () banked
 38032  01CB66  518A               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 38033  01CB68  118B               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 38034  01CB6A  118C               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 38035  01CB6C  B4D8               	btfsc	status,2,c
 38036  01CB6E  0011               	retfie		f
 38037                           
 38038                           ; BSR set to: 0
 38039                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 38040  01CB70  D801               	call	i2u1107_48
 38041  01CB72  0011               	retfie		f
 38042  01CB74                     i2u1107_48:
 38043  01CB74  0005               	push	
 38044  01CB76  6EFA               	movwf	pclath,c
 38045  01CB78  518A               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 38046  01CB7A  6EFD               	movwf	tosl,c
 38047  01CB7C  518B               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 38048  01CB7E  6EFE               	movwf	tosh,c
 38049  01CB80  518C               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 38050  01CB82  6EFF               	movwf	tosu,c
 38051  01CB84  50FA               	movf	pclath,w,c
 38052  01CB86  0012               	return		;indir
 38053  01CB88                     __end_of_UART2_tx_vect_isr:
 38054                           	opt callstack 0
 38055                           
 38056 ;; *************** function _UART2_Transmit_ISR *****************
 38057 ;; Defined at:
 38058 ;;		line 213 in file "mcc_generated_files/uart2.c"
 38059 ;; Parameters:    Size  Location     Type
 38060 ;;		None
 38061 ;; Auto vars:     Size  Location     Type
 38062 ;;		None
 38063 ;; Return value:  Size  Location     Type
 38064 ;;                  1  [STACK] void 
 38065 ;; Registers used:
 38066 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38067 ;; Tracked objects:
 38068 ;;		On entry : 3F/0
 38069 ;;		On exit  : 3B/39
 38070 ;;		Unchanged: 0/0
 38071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38076 ;;Total ram usage:        0 bytes
 38077 ;; Hardware stack levels used:    1
 38078 ;; This function calls:
 38079 ;;		Nothing
 38080 ;; This function is called by:
 38081 ;;		_UART2_Initialize
 38082 ;;		_UART2_tx_vect_isr
 38083 ;; This function uses a reentrant model
 38084 ;;
 38085                           
 38086                           	psect	text182
 38087  01C900                     __ptext182:
 38088                           	opt callstack 0
 38089  01C900                     _UART2_Transmit_ISR:
 38090                           	opt callstack 3
 38091                           
 38092                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 38093                           
 38094                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38095                           ;incstack = 0
 38096  01C900  0E40               	movlw	64
 38097  01C902  6045               	cpfslt	_uart2TxBufferRemaining^0,c
 38098  01C904  D010               	goto	l673
 38099                           
 38100                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 38101  01C906  0E00               	movlw	low _uart2TxBuffer
 38102  01C908  2446               	addwf	_uart2TxTail^0,w,c	;volatile
 38103  01C90A  6ED9               	movwf	fsr2l,c
 38104  01C90C  6ADA               	clrf	fsr2h,c
 38105  01C90E  0E03               	movlw	high _uart2TxBuffer
 38106  01C910  22DA               	addwfc	fsr2h,f,c
 38107  01C912  50DF               	movf	indf2,w,c
 38108  01C914  013D               	movlb	61	; () banked
 38109  01C916  6FD2               	movwf	210,b	;volatile
 38110                           
 38111                           ; BSR set to: 61
 38112  01C918  2A46               	incf	_uart2TxTail^0,f,c	;volatile
 38113                           
 38114                           ; BSR set to: 61
 38115                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 38116  01C91A  0E3F               	movlw	63
 38117  01C91C  6446               	cpfsgt	_uart2TxTail^0,c
 38118  01C91E  D001               	goto	l11382
 38119                           
 38120                           ; BSR set to: 61
 38121                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 38122  01C920  6A46               	clrf	_uart2TxTail^0,c	;volatile
 38123  01C922                     l11382:
 38124                           
 38125                           ; BSR set to: 61
 38126                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 38127  01C922  2A45               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 38128                           
 38129                           ;mcc_generated_files/uart2.c: 224:     }
 38130  01C924  0012               	return	
 38131  01C926                     l673:
 38132                           
 38133                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 38134  01C926  0139               	movlb	57	; () banked
 38135  01C928  9796               	bcf	150,3,b	;volatile
 38136                           
 38137                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 38138  01C92A  0012               	return		;funcret
 38139  01C92C                     __end_of_UART2_Transmit_ISR:
 38140                           	opt callstack 0
 38141                           
 38142 ;; *************** function _UART2_rx_vect_isr *****************
 38143 ;; Defined at:
 38144 ;;		line 203 in file "mcc_generated_files/uart2.c"
 38145 ;; Parameters:    Size  Location     Type
 38146 ;;		None
 38147 ;; Auto vars:     Size  Location     Type
 38148 ;;		None
 38149 ;; Return value:  Size  Location     Type
 38150 ;;                  1    wreg      void 
 38151 ;; Registers used:
 38152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 38153 ;; Tracked objects:
 38154 ;;		On entry : 0/0
 38155 ;;		On exit  : 0/0
 38156 ;;		Unchanged: 0/0
 38157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38162 ;;Total ram usage:        0 bytes
 38163 ;; Hardware stack levels used:    1
 38164 ;; Hardware stack levels required when called:    1
 38165 ;; This function calls:
 38166 ;;		Absolute function
 38167 ;;		_UART2_Receive_ISR
 38168 ;; This function is called by:
 38169 ;;		Interrupt level 2
 38170 ;; This function uses a non-reentrant model
 38171 ;;
 38172                           
 38173                           	psect	text183
 38174  01CB88                     __ptext183:
 38175                           	opt callstack 0
 38176  01CB88                     _UART2_rx_vect_isr:
 38177                           	opt callstack 3
 38178                           
 38179                           ;incstack = 0
 38180  01CB88  EE14  F15E         	lfsr	1,___inthi_sp
 38181                           
 38182                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 38183  01CB8C  0100               	movlb	0	; () banked
 38184  01CB8E  518D               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 38185  01CB90  118E               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 38186  01CB92  118F               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 38187  01CB94  B4D8               	btfsc	status,2,c
 38188  01CB96  0011               	retfie		f
 38189                           
 38190                           ; BSR set to: 0
 38191                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 38192  01CB98  D801               	call	i2u1109_48
 38193  01CB9A  0011               	retfie		f
 38194  01CB9C                     i2u1109_48:
 38195  01CB9C  0005               	push	
 38196  01CB9E  6EFA               	movwf	pclath,c
 38197  01CBA0  518D               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 38198  01CBA2  6EFD               	movwf	tosl,c
 38199  01CBA4  518E               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 38200  01CBA6  6EFE               	movwf	tosh,c
 38201  01CBA8  518F               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 38202  01CBAA  6EFF               	movwf	tosu,c
 38203  01CBAC  50FA               	movf	pclath,w,c
 38204  01CBAE  0012               	return		;indir
 38205  01CBB0                     __end_of_UART2_rx_vect_isr:
 38206                           	opt callstack 0
 38207                           
 38208 ;; *************** function _UART2_Receive_ISR *****************
 38209 ;; Defined at:
 38210 ;;		line 233 in file "mcc_generated_files/uart2.c"
 38211 ;; Parameters:    Size  Location     Type
 38212 ;;		None
 38213 ;; Auto vars:     Size  Location     Type
 38214 ;;		None
 38215 ;; Return value:  Size  Location     Type
 38216 ;;                  1  [STACK] void 
 38217 ;; Registers used:
 38218 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38219 ;; Tracked objects:
 38220 ;;		On entry : 3F/0
 38221 ;;		On exit  : 3F/0
 38222 ;;		Unchanged: 0/0
 38223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38228 ;;Total ram usage:        0 bytes
 38229 ;; Hardware stack levels used:    1
 38230 ;; This function calls:
 38231 ;;		Nothing
 38232 ;; This function is called by:
 38233 ;;		_UART2_Initialize
 38234 ;;		_UART2_rx_vect_isr
 38235 ;; This function uses a reentrant model
 38236 ;;
 38237                           
 38238                           	psect	text184
 38239  01CD0E                     __ptext184:
 38240                           	opt callstack 0
 38241  01CD0E                     _UART2_Receive_ISR:
 38242                           	opt callstack 3
 38243                           
 38244                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 38245                           
 38246                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38247                           ;incstack = 0
 38248  01CD0E  0E00               	movlw	low _uart2RxBuffer
 38249  01CD10  2444               	addwf	_uart2RxHead^0,w,c	;volatile
 38250  01CD12  6ED9               	movwf	fsr2l,c
 38251  01CD14  6ADA               	clrf	fsr2h,c
 38252  01CD16  0E04               	movlw	high _uart2RxBuffer
 38253  01CD18  22DA               	addwfc	fsr2h,f,c
 38254  01CD1A  006F F743 FFDF     	movff	15824,indf2	;volatile
 38255  01CD20  2A44               	incf	_uart2RxHead^0,f,c	;volatile
 38256                           
 38257                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 38258  01CD22  2844               	incf	_uart2RxHead^0,w,c
 38259  01CD24  B4D8               	btfsc	status,2,c
 38260                           
 38261                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 38262  01CD26  6A44               	clrf	_uart2RxHead^0,c	;volatile
 38263                           
 38264                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 38265  01CD28  0100               	movlb	0	; () banked
 38266  01CD2A  2BA6               	incf	_uart2RxCount& (0+255),f,b	;volatile
 38267                           
 38268                           ; BSR set to: 0
 38269                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 38270  01CD2C  0012               	return		;funcret
 38271  01CD2E                     __end_of_UART2_Receive_ISR:
 38272                           	opt callstack 0
 38273                           
 38274 ;; *************** function _TMR6_ISR *****************
 38275 ;; Defined at:
 38276 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 38277 ;; Parameters:    Size  Location     Type
 38278 ;;		None
 38279 ;; Auto vars:     Size  Location     Type
 38280 ;;		None
 38281 ;; Return value:  Size  Location     Type
 38282 ;;                  1    wreg      void 
 38283 ;; Registers used:
 38284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 38285 ;; Tracked objects:
 38286 ;;		On entry : 0/0
 38287 ;;		On exit  : 0/0
 38288 ;;		Unchanged: 0/0
 38289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38292 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38294 ;;Total ram usage:        1 bytes
 38295 ;; Hardware stack levels used:    1
 38296 ;; Hardware stack levels required when called:    2
 38297 ;; This function calls:
 38298 ;;		_TMR6_CallBack
 38299 ;; This function is called by:
 38300 ;;		Interrupt level 2
 38301 ;; This function uses a non-reentrant model
 38302 ;;
 38303                           
 38304                           	psect	text185
 38305  01CDE0                     __ptext185:
 38306                           	opt callstack 0
 38307  01CDE0                     _TMR6_ISR:
 38308                           	opt callstack 2
 38309                           
 38310                           ; BSR set to: 0
 38311                           ;incstack = 0
 38312  01CDE0  0060  F004  F026   	movff	btemp,??_TMR6_ISR
 38313  01CDE6  EE14  F15E         	lfsr	1,___inthi_sp
 38314                           
 38315                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 38316  01CDEA  0139               	movlb	57	; () banked
 38317  01CDEC  91A9               	bcf	169,0,b	;volatile
 38318                           
 38319                           ; BSR set to: 57
 38320                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 38321  01CDEE  EC32  F0E6         	call	_TMR6_CallBack	;wreg free
 38322  01CDF2  0060  F098  F001   	movff	??_TMR6_ISR,btemp
 38323  01CDF8  0011               	retfie		f
 38324  01CDFA                     __end_of_TMR6_ISR:
 38325                           	opt callstack 0
 38326                           
 38327 ;; *************** function _TMR6_CallBack *****************
 38328 ;; Defined at:
 38329 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 38330 ;; Parameters:    Size  Location     Type
 38331 ;;		None
 38332 ;; Auto vars:     Size  Location     Type
 38333 ;;		None
 38334 ;; Return value:  Size  Location     Type
 38335 ;;                  1  [STACK] void 
 38336 ;; Registers used:
 38337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 38338 ;; Tracked objects:
 38339 ;;		On entry : 3F/39
 38340 ;;		On exit  : 0/0
 38341 ;;		Unchanged: 0/0
 38342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38347 ;;Total ram usage:        0 bytes
 38348 ;; Hardware stack levels used:    1
 38349 ;; Hardware stack levels required when called:    1
 38350 ;; This function calls:
 38351 ;;		Absolute function
 38352 ;;		_TMR6_DefaultInterruptHandler
 38353 ;; This function is called by:
 38354 ;;		_TMR6_ISR
 38355 ;; This function uses a reentrant model
 38356 ;;
 38357                           
 38358                           	psect	text186
 38359  01CC64                     __ptext186:
 38360                           	opt callstack 0
 38361  01CC64                     _TMR6_CallBack:
 38362                           	opt callstack 2
 38363                           
 38364                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 38365                           
 38366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38367                           ;incstack = 0
 38368  01CC64  0100               	movlb	0	; () banked
 38369  01CC66  517E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 38370  01CC68  117F               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 38371  01CC6A  1180               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 38372  01CC6C  B4D8               	btfsc	status,2,c
 38373  01CC6E  0012               	return	
 38374                           
 38375                           ; BSR set to: 0
 38376                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 38377  01CC70  D801               	call	u1058_48
 38378  01CC72  0012               	return	
 38379  01CC74                     u1058_48:
 38380  01CC74  0005               	push	
 38381  01CC76  6EFA               	movwf	pclath,c
 38382  01CC78  517E               	movf	_TMR6_InterruptHandler& (0+255),w,b
 38383  01CC7A  6EFD               	movwf	tosl,c
 38384  01CC7C  517F               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 38385  01CC7E  6EFE               	movwf	tosh,c
 38386  01CC80  5180               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 38387  01CC82  6EFF               	movwf	tosu,c
 38388  01CC84  50FA               	movf	pclath,w,c
 38389  01CC86  0012               	return		;indir
 38390  01CC88                     __end_of_TMR6_CallBack:
 38391                           	opt callstack 0
 38392                           
 38393 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 38394 ;; Defined at:
 38395 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 38396 ;; Parameters:    Size  Location     Type
 38397 ;;		None
 38398 ;; Auto vars:     Size  Location     Type
 38399 ;;  i               1  [STACK] unsigned char 
 38400 ;; Return value:  Size  Location     Type
 38401 ;;                  1  [STACK] void 
 38402 ;; Registers used:
 38403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 38404 ;; Tracked objects:
 38405 ;;		On entry : 3F/0
 38406 ;;		On exit  : 0/0
 38407 ;;		Unchanged: 0/0
 38408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38413 ;;Total ram usage:        0 bytes
 38414 ;; Hardware stack levels used:    1
 38415 ;; This function calls:
 38416 ;;		Nothing
 38417 ;; This function is called by:
 38418 ;;		_TMR6_Initialize
 38419 ;;		_TMR6_CallBack
 38420 ;; This function uses a reentrant model
 38421 ;;
 38422                           
 38423                           	psect	text187
 38424  01C10C                     __ptext187:
 38425                           	opt callstack 0
 38426  01C10C                     _TMR6_DefaultInterruptHandler:
 38427                           	opt callstack 0
 38428                           
 38429                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 38430  01C10C  52E6               	movf	postinc1,f,c
 38431                           
 38432                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 38433                           ;stkvar	_i @ sp[(-1)+0]
 38434                           
 38435                           ;incstack = 0
 38436  01C10E  0EFF               	movlw	-1
 38437  01C110  6AE3               	clrf	plusw1,c
 38438  01C112                     l10870:
 38439                           
 38440                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 38441                           ;stkvar	_i @ sp[(-1)+0]
 38442  01C112  0EFF               	movlw	-1
 38443  01C114  50E3               	movf	plusw1,w,c
 38444  01C116  0D02               	mullw	2
 38445  01C118  0E7D               	movlw	low _tickCount
 38446  01C11A  24F3               	addwf	243,w,c
 38447  01C11C  6ED9               	movwf	fsr2l,c
 38448  01C11E  0E02               	movlw	high _tickCount
 38449  01C120  20F4               	addwfc	prodh,w,c
 38450  01C122  6EDA               	movwf	fsr2h,c
 38451  01C124  50DE               	movf	postinc2,w,c
 38452  01C126  10DE               	iorwf	postinc2,w,c
 38453  01C128  B4D8               	btfsc	status,2,c
 38454  01C12A  D00C               	goto	l10874
 38455                           
 38456                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 38457                           ;stkvar	_i @ sp[(-1)+0]
 38458  01C12C  0EFF               	movlw	-1
 38459  01C12E  50E3               	movf	plusw1,w,c
 38460  01C130  0D02               	mullw	2
 38461  01C132  0E7D               	movlw	low _tickCount
 38462  01C134  24F3               	addwf	243,w,c
 38463  01C136  6ED9               	movwf	fsr2l,c
 38464  01C138  0E02               	movlw	high _tickCount
 38465  01C13A  20F4               	addwfc	prodh,w,c
 38466  01C13C  6EDA               	movwf	fsr2h,c
 38467  01C13E  06DE               	decf	postinc2,f,c
 38468  01C140  0E00               	movlw	0
 38469  01C142  5ADD               	subwfb	postdec2,f,c
 38470  01C144                     l10874:
 38471                           
 38472                           ;mcc_generated_files/tmr6.c: 207:  }
 38473                           ;stkvar	_i @ sp[(-1)+0]
 38474  01C144  0EFF               	movlw	-1
 38475  01C146  2AE3               	incf	plusw1,f,c
 38476                           
 38477                           ;stkvar	_i @ sp[(-1)+0]
 38478  01C148  0EFF               	movlw	-1
 38479  01C14A  006F FF8C  F001    	movff	plusw1,btemp
 38480  01C150  0E0C               	movlw	12
 38481  01C152  6401               	cpfsgt	btemp^0,c
 38482  01C154  D7DE               	goto	l10870
 38483                           
 38484                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 38485  01C156  52E5               	movf	postdec1,f,c
 38486  01C158  0012               	return		;funcret
 38487  01C15A                     __end_of_TMR6_DefaultInterruptHandler:
 38488                           	opt callstack 0
 38489                           
 38490 ;; *************** function _DMA1_DMASCNT_ISR *****************
 38491 ;; Defined at:
 38492 ;;		line 126 in file "mcc_generated_files/dma1.c"
 38493 ;; Parameters:    Size  Location     Type
 38494 ;;		None
 38495 ;; Auto vars:     Size  Location     Type
 38496 ;;		None
 38497 ;; Return value:  Size  Location     Type
 38498 ;;                  1    wreg      void 
 38499 ;; Registers used:
 38500 ;;		None
 38501 ;; Tracked objects:
 38502 ;;		On entry : 0/0
 38503 ;;		On exit  : 3F/1
 38504 ;;		Unchanged: 0/0
 38505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38510 ;;Total ram usage:        0 bytes
 38511 ;; Hardware stack levels used:    1
 38512 ;; This function calls:
 38513 ;;		Nothing
 38514 ;; This function is called by:
 38515 ;;		Interrupt level 2
 38516 ;; This function uses a non-reentrant model
 38517 ;;
 38518                           
 38519                           	psect	text188
 38520  01CF24                     __ptext188:
 38521                           	opt callstack 0
 38522  01CF24                     _DMA1_DMASCNT_ISR:
 38523                           	opt callstack 4
 38524                           
 38525                           ;incstack = 0
 38526  01CF24  EE14  F15E         	lfsr	1,___inthi_sp
 38527                           
 38528                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 38529  01CF28  0139               	movlb	57	; () banked
 38530  01CF2A  91A2               	bcf	162,0,b	;volatile
 38531                           
 38532                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 38533  01CF2C  0101               	movlb	1	; () banked
 38534  01CF2E  97D0               	bcf	_spi_link& (0+255),3,b	;volatile
 38535                           
 38536                           ; BSR set to: 1
 38537  01CF30  0011               	retfie		f
 38538  01CF32                     __end_of_DMA1_DMASCNT_ISR:
 38539                           	opt callstack 0
 38540                           
 38541 ;; *************** function _DMA1_DMADCNT_ISR *****************
 38542 ;; Defined at:
 38543 ;;		line 133 in file "mcc_generated_files/dma1.c"
 38544 ;; Parameters:    Size  Location     Type
 38545 ;;		None
 38546 ;; Auto vars:     Size  Location     Type
 38547 ;;		None
 38548 ;; Return value:  Size  Location     Type
 38549 ;;                  1    wreg      void 
 38550 ;; Registers used:
 38551 ;;		None
 38552 ;; Tracked objects:
 38553 ;;		On entry : 0/0
 38554 ;;		On exit  : 3F/39
 38555 ;;		Unchanged: 0/0
 38556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38561 ;;Total ram usage:        0 bytes
 38562 ;; Hardware stack levels used:    1
 38563 ;; This function calls:
 38564 ;;		Nothing
 38565 ;; This function is called by:
 38566 ;;		Interrupt level 2
 38567 ;; This function uses a non-reentrant model
 38568 ;;
 38569                           
 38570                           	psect	text189
 38571  01CF48                     __ptext189:
 38572                           	opt callstack 0
 38573  01CF48                     _DMA1_DMADCNT_ISR:
 38574                           	opt callstack 4
 38575                           
 38576                           ; BSR set to: 1
 38577                           ;incstack = 0
 38578  01CF48  EE14  F15E         	lfsr	1,___inthi_sp
 38579                           
 38580                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 38581  01CF4C  0139               	movlb	57	; () banked
 38582  01CF4E  93A2               	bcf	162,1,b	;volatile
 38583                           
 38584                           ; BSR set to: 57
 38585  01CF50  0011               	retfie		f
 38586  01CF52                     __end_of_DMA1_DMADCNT_ISR:
 38587                           	opt callstack 0
 38588                           
 38589 ;; *************** function _DMA1_DMAA_ISR *****************
 38590 ;; Defined at:
 38591 ;;		line 143 in file "mcc_generated_files/dma1.c"
 38592 ;; Parameters:    Size  Location     Type
 38593 ;;		None
 38594 ;; Auto vars:     Size  Location     Type
 38595 ;;		None
 38596 ;; Return value:  Size  Location     Type
 38597 ;;                  1    wreg      void 
 38598 ;; Registers used:
 38599 ;;		None
 38600 ;; Tracked objects:
 38601 ;;		On entry : 0/0
 38602 ;;		On exit  : 3F/39
 38603 ;;		Unchanged: 0/0
 38604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38609 ;;Total ram usage:        0 bytes
 38610 ;; Hardware stack levels used:    1
 38611 ;; This function calls:
 38612 ;;		Nothing
 38613 ;; This function is called by:
 38614 ;;		Interrupt level 2
 38615 ;; This function uses a non-reentrant model
 38616 ;;
 38617                           
 38618                           	psect	text190
 38619  01CF54                     __ptext190:
 38620                           	opt callstack 0
 38621  01CF54                     _DMA1_DMAA_ISR:
 38622                           	opt callstack 4
 38623                           
 38624                           ; BSR set to: 57
 38625                           ;incstack = 0
 38626  01CF54  EE14  F15E         	lfsr	1,___inthi_sp
 38627                           
 38628                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 38629  01CF58  0139               	movlb	57	; () banked
 38630  01CF5A  97A2               	bcf	162,3,b	;volatile
 38631                           
 38632                           ; BSR set to: 57
 38633  01CF5C  0011               	retfie		f
 38634  01CF5E                     __end_of_DMA1_DMAA_ISR:
 38635                           	opt callstack 0
 38636                           
 38637 ;; *************** function _DMA1_DMAOR_ISR *****************
 38638 ;; Defined at:
 38639 ;;		line 154 in file "mcc_generated_files/dma1.c"
 38640 ;; Parameters:    Size  Location     Type
 38641 ;;		None
 38642 ;; Auto vars:     Size  Location     Type
 38643 ;;		None
 38644 ;; Return value:  Size  Location     Type
 38645 ;;                  1    wreg      void 
 38646 ;; Registers used:
 38647 ;;		None
 38648 ;; Tracked objects:
 38649 ;;		On entry : 0/0
 38650 ;;		On exit  : 3F/39
 38651 ;;		Unchanged: 0/0
 38652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 38653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 38657 ;;Total ram usage:        0 bytes
 38658 ;; Hardware stack levels used:    1
 38659 ;; This function calls:
 38660 ;;		Nothing
 38661 ;; This function is called by:
 38662 ;;		Interrupt level 2
 38663 ;; This function uses a non-reentrant model
 38664 ;;
 38665                           
 38666                           	psect	text191
 38667  01CF60                     __ptext191:
 38668                           	opt callstack 0
 38669  01CF60                     _DMA1_DMAOR_ISR:
 38670                           	opt callstack 4
 38671                           
 38672                           ; BSR set to: 57
 38673                           ;incstack = 0
 38674  01CF60  EE14  F15E         	lfsr	1,___inthi_sp
 38675                           
 38676                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 38677  01CF64  0139               	movlb	57	; () banked
 38678  01CF66  95A2               	bcf	162,2,b	;volatile
 38679                           
 38680                           ; BSR set to: 57
 38681  01CF68  0011               	retfie		f
 38682  01CF6A                     __end_of_DMA1_DMAOR_ISR:
 38683                           	opt callstack 0
 38684                           
 38685                           ;
 38686                           ; Interrupt Vector Table @ 0x8
 38687                           ;
 38688                           
 38689                           	psect	ivt0x8
 38690  000008                     __pivt0x8:
 38691                           	opt callstack 0
 38692  000008                     ivt0x8_base:
 38693                           	opt callstack 0
 38694                           
 38695                           ; Vector 0 : SWINT
 38696  000008  73EB               	dw	_Default_ISR shr (0+2)
 38697                           
 38698                           ; Vector 1 : HLVD
 38699  00000A  73EB               	dw	_Default_ISR shr (0+2)
 38700                           
 38701                           ; Vector 2 : OSF
 38702  00000C  73EB               	dw	_Default_ISR shr (0+2)
 38703                           
 38704                           ; Vector 3 : CSW
 38705  00000E  73EB               	dw	_Default_ISR shr (0+2)
 38706                           
 38707                           ; Vector 4 : NVM
 38708  000010  73EB               	dw	_Default_ISR shr (0+2)
 38709                           
 38710                           ; Vector 5 : SCAN
 38711  000012  73EB               	dw	_Default_ISR shr (0+2)
 38712                           
 38713                           ; Vector 6 : CRC
 38714  000014  73EB               	dw	_Default_ISR shr (0+2)
 38715                           
 38716                           ; Vector 7 : IOC
 38717  000016  73EB               	dw	_Default_ISR shr (0+2)
 38718                           
 38719                           ; Vector 8 : INT0
 38720  000018  73C5               	dw	_INT0_ISR shr (0+2)
 38721                           
 38722                           ; Vector 9 : ZCD
 38723  00001A  73EB               	dw	_Default_ISR shr (0+2)
 38724                           
 38725                           ; Vector 10 : AD
 38726  00001C  7235               	dw	_ADCC_ISR shr (0+2)
 38727                           
 38728                           ; Vector 11 : ADT
 38729  00001E  6F0D               	dw	_ADCC_ThresholdISR shr (0+2)
 38730                           
 38731                           ; Vector 12 : CMP1
 38732  000020  73EB               	dw	_Default_ISR shr (0+2)
 38733                           
 38734                           ; Vector 13 : SMT1
 38735  000022  73EB               	dw	_Default_ISR shr (0+2)
 38736                           
 38737                           ; Vector 14 : SMT1PRA
 38738  000024  73EB               	dw	_Default_ISR shr (0+2)
 38739                           
 38740                           ; Vector 15 : SMT1PRW
 38741  000026  73EB               	dw	_Default_ISR shr (0+2)
 38742                           
 38743                           ; Vector 16 : DMA1SCNT
 38744  000028  73C9               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 38745                           
 38746                           ; Vector 17 : DMA1DCNT
 38747  00002A  73D2               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 38748                           
 38749                           ; Vector 18 : DMA1OR
 38750  00002C  73D8               	dw	_DMA1_DMAOR_ISR shr (0+2)
 38751                           
 38752                           ; Vector 19 : DMA1A
 38753  00002E  73D5               	dw	_DMA1_DMAA_ISR shr (0+2)
 38754                           
 38755                           ; Vector 20 : SPI1RX
 38756  000030  73EB               	dw	_Default_ISR shr (0+2)
 38757                           
 38758                           ; Vector 21 : SPI1TX
 38759  000032  73EB               	dw	_Default_ISR shr (0+2)
 38760                           
 38761                           ; Vector 22 : SPI1
 38762  000034  73EB               	dw	_Default_ISR shr (0+2)
 38763                           
 38764                           ; Vector 23 : I2C1RX
 38765  000036  73EB               	dw	_Default_ISR shr (0+2)
 38766                           
 38767                           ; Vector 24 : I2C1TX
 38768  000038  73EB               	dw	_Default_ISR shr (0+2)
 38769                           
 38770                           ; Vector 25 : I2C1
 38771  00003A  73EB               	dw	_Default_ISR shr (0+2)
 38772                           
 38773                           ; Vector 26 : I2C1E
 38774  00003C  73EB               	dw	_Default_ISR shr (0+2)
 38775                           
 38776                           ; Vector 27 : U1RX
 38777  00003E  72CE               	dw	_UART1_rx_vect_isr shr (0+2)
 38778                           
 38779                           ; Vector 28 : U1TX
 38780  000040  73EB               	dw	_Default_ISR shr (0+2)
 38781                           
 38782                           ; Vector 29 : U1E
 38783  000042  73EB               	dw	_Default_ISR shr (0+2)
 38784                           
 38785                           ; Vector 30 : U1
 38786  000044  73EB               	dw	_Default_ISR shr (0+2)
 38787                           
 38788                           ; Vector 31 : TMR0
 38789  000046  73EB               	dw	_Default_ISR shr (0+2)
 38790                           
 38791                           ; Vector 32 : TMR1
 38792  000048  73EB               	dw	_Default_ISR shr (0+2)
 38793                           
 38794                           ; Vector 33 : TMR1G
 38795  00004A  73EB               	dw	_Default_ISR shr (0+2)
 38796                           
 38797                           ; Vector 34 : TMR2
 38798  00004C  73EB               	dw	_Default_ISR shr (0+2)
 38799                           
 38800                           ; Vector 35 : CCP1
 38801  00004E  73EB               	dw	_Default_ISR shr (0+2)
 38802                           
 38803                           ; Vector 36 : Undefined
 38804  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 38805                           
 38806                           ; Vector 37 : NCO1
 38807  000052  73EB               	dw	_Default_ISR shr (0+2)
 38808                           
 38809                           ; Vector 38 : CWG1
 38810  000054  73EB               	dw	_Default_ISR shr (0+2)
 38811                           
 38812                           ; Vector 39 : CLC1
 38813  000056  73EB               	dw	_Default_ISR shr (0+2)
 38814                           
 38815                           ; Vector 40 : INT1
 38816  000058  7158               	dw	_INT1_ISR shr (0+2)
 38817                           
 38818                           ; Vector 41 : CMP2
 38819  00005A  73EB               	dw	_Default_ISR shr (0+2)
 38820                           
 38821                           ; Vector 42 : DMA2SCNT
 38822  00005C  73EB               	dw	_Default_ISR shr (0+2)
 38823                           
 38824                           ; Vector 43 : DMA2DCNT
 38825  00005E  73EB               	dw	_Default_ISR shr (0+2)
 38826                           
 38827                           ; Vector 44 : DMA2OR
 38828  000060  73EB               	dw	_Default_ISR shr (0+2)
 38829                           
 38830                           ; Vector 45 : DMA2A
 38831  000062  73EB               	dw	_Default_ISR shr (0+2)
 38832                           
 38833                           ; Vector 46 : I2C2RX
 38834  000064  73EB               	dw	_Default_ISR shr (0+2)
 38835                           
 38836                           ; Vector 47 : I2C2TX
 38837  000066  73EB               	dw	_Default_ISR shr (0+2)
 38838                           
 38839                           ; Vector 48 : I2C2
 38840  000068  73EB               	dw	_Default_ISR shr (0+2)
 38841                           
 38842                           ; Vector 49 : I2C2E
 38843  00006A  73EB               	dw	_Default_ISR shr (0+2)
 38844                           
 38845                           ; Vector 50 : U2RX
 38846  00006C  72E2               	dw	_UART2_rx_vect_isr shr (0+2)
 38847                           
 38848                           ; Vector 51 : U2TX
 38849  00006E  72D8               	dw	_UART2_tx_vect_isr shr (0+2)
 38850                           
 38851                           ; Vector 52 : U2E
 38852  000070  73EB               	dw	_Default_ISR shr (0+2)
 38853                           
 38854                           ; Vector 53 : U2
 38855  000072  73EB               	dw	_Default_ISR shr (0+2)
 38856                           
 38857                           ; Vector 54 : TMR3
 38858  000074  664A               	dw	_TMR3_ISR shr (0+2)
 38859                           
 38860                           ; Vector 55 : TMR3G
 38861  000076  73EB               	dw	_Default_ISR shr (0+2)
 38862                           
 38863                           ; Vector 56 : TMR4
 38864  000078  73EB               	dw	_Default_ISR shr (0+2)
 38865                           
 38866                           ; Vector 57 : CCP2
 38867  00007A  73EB               	dw	_Default_ISR shr (0+2)
 38868                           
 38869                           ; Vector 58 : Undefined
 38870  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 38871                           
 38872                           ; Vector 59 : CWG2
 38873  00007E  73EB               	dw	_Default_ISR shr (0+2)
 38874                           
 38875                           ; Vector 60 : CLC2
 38876  000080  73EB               	dw	_Default_ISR shr (0+2)
 38877                           
 38878                           ; Vector 61 : INT2
 38879  000082  73EB               	dw	_Default_ISR shr (0+2)
 38880                           
 38881                           ; Vector 62 : Undefined
 38882  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 38883                           
 38884                           ; Vector 63 : Undefined
 38885  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 38886                           
 38887                           ; Vector 64 : Undefined
 38888  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 38889                           
 38890                           ; Vector 65 : Undefined
 38891  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 38892                           
 38893                           ; Vector 66 : Undefined
 38894  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 38895                           
 38896                           ; Vector 67 : Undefined
 38897  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 38898                           
 38899                           ; Vector 68 : Undefined
 38900  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 38901                           
 38902                           ; Vector 69 : Undefined
 38903  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 38904                           
 38905                           ; Vector 70 : TMR5
 38906  000094  6AC0               	dw	_TMR5_ISR shr (0+2)
 38907                           
 38908                           ; Vector 71 : TMR5G
 38909  000096  73EB               	dw	_Default_ISR shr (0+2)
 38910                           
 38911                           ; Vector 72 : TMR6
 38912  000098  7378               	dw	_TMR6_ISR shr (0+2)
 38913                           
 38914                           ; Vector 73 : CCP3
 38915  00009A  73EB               	dw	_Default_ISR shr (0+2)
 38916                           
 38917                           ; Vector 74 : CWG3
 38918  00009C  73EB               	dw	_Default_ISR shr (0+2)
 38919                           
 38920                           ; Vector 75 : CLC3
 38921  00009E  73EB               	dw	_Default_ISR shr (0+2)
 38922                           
 38923                           ; Vector 76 : Undefined
 38924  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 38925                           
 38926                           ; Vector 77 : Undefined
 38927  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 38928                           
 38929                           ; Vector 78 : Undefined
 38930  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 38931                           
 38932                           ; Vector 79 : Undefined
 38933  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 38934                           
 38935                           ; Vector 80 : CCP4
 38936  0000A8  73EB               	dw	_Default_ISR shr (0+2)
 38937                           
 38938                           ; Vector 81 : CLC4
 38939  0000AA  73EB               	dw	_Default_ISR shr (0+2)
 38940  0000AC                     ivt0x8_undefint:
 38941                           	opt callstack 0
 38942  0000AC  00FF               	reset	
 38943                           
 38944                           	psect	text192
 38945  000000                     __ptext192:
 38946                           	opt callstack 0
 38947                           
 38948                           	psect	rparam
 38949  0000                     
 38950                           	psect	temp
 38951  000001                     btemp:
 38952                           	opt callstack 0
 38953  000001                     	ds	32
 38954  0000                     wtemp0	set	btemp
 38955  0000                     wtemp1	set	btemp+2
 38956  0000                     wtemp2	set	btemp+4
 38957  0000                     wtemp3	set	btemp+6
 38958  0000                     wtemp4	set	btemp+8
 38959  0000                     wtemp5	set	btemp+10
 38960  0000                     wtemp8	set	btemp+1
 38961  0000                     ttemp0	set	btemp
 38962  0000                     ttemp1	set	btemp+3
 38963  0000                     ttemp2	set	btemp+6
 38964  0000                     ttemp3	set	btemp+9
 38965  0000                     ttemp5	set	btemp+1
 38966  0000                     ttemp6	set	btemp+4
 38967  0000                     ttemp7	set	btemp+8
 38968  0000                     ltemp0	set	btemp
 38969  0000                     ltemp1	set	btemp+4
 38970  0000                     ltemp2	set	btemp+8
 38971  0000                     lltemp0	set	btemp
 38972  0000                     lltemp1	set	btemp+8
 38973  0000                     lltemp2	set	btemp+16
 38974  0000                     lltemp3	set	btemp+24
 38975                           tosu	equ	0x3FFF
 38976                           tosh	equ	0x3FFE
 38977                           tosl	equ	0x3FFD
 38978                           stkptr	equ	0x3FFC
 38979                           pclatu	equ	0x3FFB
 38980                           pclath	equ	0x3FFA
 38981                           pcl	equ	0x3FF9
 38982                           tblptru	equ	0x3FF8
 38983                           tblptrh	equ	0x3FF7
 38984                           tblptrl	equ	0x3FF6
 38985                           tablat	equ	0x3FF5
 38986                           prodh	equ	0x3FF4
 38987                           prodl	equ	0x3FF3
 38988                           indf0	equ	0x3FEF
 38989                           postinc0	equ	0x3FEE
 38990                           postdec0	equ	0x3FED
 38991                           preinc0	equ	0x3FEC
 38992                           plusw0	equ	0x3FEB
 38993                           fsr0h	equ	0x3FEA
 38994                           fsr0l	equ	0x3FE9
 38995                           wreg	equ	0x3FE8
 38996                           indf1	equ	0x3FE7
 38997                           postinc1	equ	0x3FE6
 38998                           postdec1	equ	0x3FE5
 38999                           preinc1	equ	0x3FE4
 39000                           plusw1	equ	0x3FE3
 39001                           fsr1h	equ	0x3FE2
 39002                           fsr1l	equ	0x3FE1
 39003                           bsr	equ	0x3FE0
 39004                           indf2	equ	0x3FDF
 39005                           postinc2	equ	0x3FDE
 39006                           postdec2	equ	0x3FDD
 39007                           preinc2	equ	0x3FDC
 39008                           plusw2	equ	0x3FDB
 39009                           fsr2h	equ	0x3FDA
 39010                           fsr2l	equ	0x3FD9
 39011                           status	equ	0x3FD8


Data Sizes:
    Strings     1328
    Constant    492
    Data        1077
    BSS         1363
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      39
    BANK0           160     25     158
    BANK1           256      0     250
    BANK2           256      0     239
    BANK3           256      0     256
    BANK4           256      0     255
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_118(CODE[1]), STR_80(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_101(CODE[3]), 
		 -> STR_96(CODE[3]), STR_92(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_101(CODE[3]), 
		 -> STR_96(CODE[3]), STR_92(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), 
		 -> STR_69(CODE[15]), STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), 
		 -> STR_65(CODE[19]), STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), 
		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), 
		 -> STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), 
		 -> STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), 
		 -> STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    l	PTR const unsigned char  size(2) Largest target is 127
		 -> ct(STACK[3]), STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), 
		 -> STR_77(CODE[19]), STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), 
		 -> STR_73(CODE[19]), STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), 
		 -> STR_69(CODE[15]), STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), 
		 -> STR_65(CODE[19]), STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), 
		 -> STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), 
		 -> STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), 
		 -> STR_51(CODE[21]), STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), 
		 -> STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), 
		 -> STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), 
		 -> STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), 
		 -> STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), 
		 -> STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), 
		 -> STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), 
		 -> STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_63(CODE[9]), STR_62(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> spin(CODE[120]), STR_63(CODE[9]), STR_62(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_87(CODE[4]), STR_86(CODE[4]), STR_83(CODE[4]), STR_82(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_87(CODE[4]), STR_86(CODE[4]), STR_83(CODE[4]), STR_82(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_61(CODE[3]), STR_60(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_59(CODE[21]), STR_58(CODE[21]), STR_57(CODE[21]), 
		 -> STR_56(CODE[21]), STR_55(CODE[21]), STR_54(CODE[21]), STR_53(CODE[21]), 
		 -> STR_52(CODE[21]), STR_51(CODE[21]), STR_50(CODE[20]), STR_49(CODE[20]), 
		 -> STR_48(CODE[21]), STR_47(CODE[21]), STR_46(CODE[21]), STR_45(CODE[22]), 
		 -> STR_44(CODE[22]), STR_43(CODE[22]), STR_42(CODE[23]), STR_41(CODE[23]), 
		 -> STR_40(CODE[23]), STR_39(CODE[29]), STR_38(CODE[23]), STR_37(CODE[23]), 
		 -> STR_36(CODE[22]), STR_35(CODE[22]), STR_34(CODE[22]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[22]), STR_30(CODE[22]), STR_29(CODE[22]), 
		 -> STR_28(CODE[22]), STR_27(CODE[22]), STR_26(CODE[22]), STR_25(CODE[22]), 
		 -> STR_24(CODE[17]), STR_23(CODE[16]), STR_22(CODE[16]), STR_21(CODE[26]), 
		 -> STR_20(CODE[26]), STR_19(CODE[22]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[22]), STR_13(CODE[22]), 
		 -> STR_12(CODE[22]), STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6627_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    f1p	PTR  size(2) Largest target is 299
		 -> C(BIGRAM[299]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 127
		 -> STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    cfmt	PTR unsigned char  size(2) Largest target is 127
		 -> STR_81(CODE[127]), STR_79(CODE[3]), STR_78(CODE[3]), STR_77(CODE[19]), 
		 -> STR_76(CODE[19]), STR_75(CODE[19]), STR_74(CODE[19]), STR_73(CODE[19]), 
		 -> STR_72(CODE[19]), STR_71(CODE[24]), STR_70(CODE[15]), STR_69(CODE[15]), 
		 -> STR_68(CODE[15]), STR_67(CODE[10]), STR_66(CODE[10]), STR_65(CODE[19]), 
		 -> STR_64(CODE[19]), STR_61(CODE[3]), STR_60(CODE[3]), STR_59(CODE[21]), 
		 -> STR_58(CODE[21]), STR_57(CODE[21]), STR_56(CODE[21]), STR_55(CODE[21]), 
		 -> STR_54(CODE[21]), STR_53(CODE[21]), STR_52(CODE[21]), STR_51(CODE[21]), 
		 -> STR_50(CODE[20]), STR_49(CODE[20]), STR_48(CODE[21]), STR_47(CODE[21]), 
		 -> STR_46(CODE[21]), STR_45(CODE[22]), STR_44(CODE[22]), STR_43(CODE[22]), 
		 -> STR_42(CODE[23]), STR_41(CODE[23]), STR_40(CODE[23]), STR_39(CODE[29]), 
		 -> STR_38(CODE[23]), STR_37(CODE[23]), STR_36(CODE[22]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[22]), STR_32(CODE[22]), STR_31(CODE[22]), 
		 -> STR_30(CODE[22]), STR_29(CODE[22]), STR_28(CODE[22]), STR_27(CODE[22]), 
		 -> STR_26(CODE[22]), STR_25(CODE[22]), STR_24(CODE[17]), STR_23(CODE[16]), 
		 -> STR_22(CODE[16]), STR_21(CODE[26]), STR_20(CODE[26]), STR_19(CODE[22]), 
		 -> STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[22]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[21]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_6(CODE[21]), STR_5(CODE[21]), STR_4(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_63(CODE[9]), STR_62(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_63(CODE[9]), STR_62(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[5]), 
		 -> V(BANK1[192]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_63(CODE[9]), 
		 -> STR_62(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[5]), V(BANK1[192]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__hid_input	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    h	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    S5031tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    r_cal_ptr	PTR unsigned char  size(1) Largest target is 58
		 -> R(BANK0[58]), 

    r_cal_ptr	PTR unsigned char  size(2) Largest target is 58
		 -> r_cal(BANK3[58]), 

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_63(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_62(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK1[192]), 

    sp__hid_display	PTR struct H_data size(2) Largest target is 9
		 -> H(BANK1[9]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  597424
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                 _current_sensor_cal
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                      _read_cal_data
                            _set_dac
                          _set_dac_a
                          _set_dac_b
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                    _update_cal_data
                         _update_lcd
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _update_cal_data                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _set_dac_b                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (1) _set_dac_a                                            4     0      4    1600
                    _convert_dac_raw
 ---------------------------------------------------------------------------------
 (2) _convert_dac_raw                                      4     0      4    1578
                            ___fldiv
                             ___flge
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _set_dac                                              0     0      0      44
                  _SPI1_Exchange8bit
                    _dac_spi_control
 ---------------------------------------------------------------------------------
 (2) _dac_spi_control                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _read_cal_data                                        6     6      0     158
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2      45
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1356
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                      _send_lcd_data
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8435
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         7     3      4     136
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          2     0      2     771
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            2     0      2     237
                         _get_switch
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31221
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _current_sensor_cal                                   9     9      0  125533
                             _WaitMs
                   _cal_current_zero
                     _clear_adc_scan
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                           _spinners
                            _sprintf
                     _start_adc_scan
                         _update_lcd
                     _write_cal_data
 ---------------------------------------------------------------------------------
 (2) _write_cal_data                                       5     5      0     203
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3      90
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cal_current_zero                                     5     0      5     242
                        _check_range
 ---------------------------------------------------------------------------------
 (3) _check_range                                          6     0      6     132
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  248792
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0  124143
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   94094
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              5     1      4   93830
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
                  _send_lcd_data_dma
                      _wait_lcd_done
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31190
                  _send_lcd_data_dma
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data_dma                                    1     0      1   31115
                             _printf
                     _ringBufS_flush
                          _start_lcd
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   2     0      2      93
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INT1_ISR                                            4     4      0     205
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT1_CallBack                                       0     0      0     205
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (17) _switch_handler                                      2     2      0     205
 ---------------------------------------------------------------------------------
 (17) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR5_ISR                                           15    15      0    5521
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR5_CallBack                                       0     0      0    5431
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultInterruptHandler                        0     0      0    5431
                     _check_day_time
 ---------------------------------------------------------------------------------
 (18) _check_day_time                                      4     4      0    5431
                             ___flge
                    _conv_raw_result
               _get_ac_charger_relay
               _set_ac_charger_relay
 ---------------------------------------------------------------------------------
 (19) _set_ac_charger_relay                                1     0      1      22
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (20) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (20) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (20) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           25    25      0   35586
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0   35496
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (17) _calc_bsoc                                           6     6      0   35496
                         _StartTimer
                          ___asfladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
               _get_ac_charger_relay
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _sprintf                                           104    10     94   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (19) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (20) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (21) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (22) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (23) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (22) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (22) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (21) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (21) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (21) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (21) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (22) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (22) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (22) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (22) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (22) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (22) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (22) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (22) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (22) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (22) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (22) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (22) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (21) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (22) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (22) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (22) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (21) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (22) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (18) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (23) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (24) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (25) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (26) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (21) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (22) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (21) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (18) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (18) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _get_ac_charger_relay                                0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) ___asfladd                                           6     0      6    2028
                            ___fladd
 ---------------------------------------------------------------------------------
 (23) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (18) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (28) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (28) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (29) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (29) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (28) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (28) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (28) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (29) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (29) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (27) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 27
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _current_sensor_cal
     _WaitMs
       _StartTimer
       _TimerDone
     _cal_current_zero
       _check_range
     _clear_adc_scan
     _get_raw_result
     _get_switch
     _get_vterm_ptr
     _spinners
       _strlen
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _start_adc_scan
       _ADCC_DischargeSampleCapacitor
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
       _ADCC_StartConversion
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _send_lcd_data_dma
             _printf
               _vfprintf
                 _vfpfcnvrt
                   _atoi
                     _isdigit
                     _isspace
                   _ctoa
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _dtoa
                     ___aodiv
                     ___aomod
                     _abs
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _efgtoa
                     ___awdiv
                     ___awmod
                     ___fladd
                     ___fldiv
                     ___fleq
                     ___flge
                     ___flmul
                     ___flneg
                     ___flsub
                       ___fladd
                     ___fltol
                     ___fpclassifyf
                     _floorf
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _strcpy
                     _tolower
                       _isupper
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _isdigit
                   _isupper
                   _stoa
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _strlen
                   _strncmp
                   _tolower
                     _isupper
                   _utoa
                     ___lodiv
                     ___lomod
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                   _xtoa
                     _isalpha
                     _isupper
                     _pad
                       _fputc
                         _putch
                           _ringBufS_put_dma
                       _fputs
                         _fputc
                           _putch
                             _ringBufS_put_dma
                       _strlen
                     _toupper
                       _islower
             _ringBufS_flush
               _memset
             _start_lcd
             _wait_lcd_set
           _wait_lcd_done
             _wdtdelay
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
         _wdtdelay
       _wait_lcd_done
         _wdtdelay
     _write_cal_data
       _DATAEE_WriteByte
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_data
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _read_cal_data
     _DATAEE_ReadByte
   _set_dac
     _SPI1_Exchange8bit
     _dac_spi_control
   _set_dac_a
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_dac_b
     _convert_dac_raw
       ___fldiv
       ___flge
       ___fltol
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_cal_data
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _send_lcd_data_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_set
         _wait_lcd_done
           _wdtdelay
       _send_lcd_data_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
       _wdtdelay
     _wait_lcd_done
       _wdtdelay
   _wait_lcd_done
     _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
         _get_ac_charger_relay
         _set_ac_charger_relay
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___asfladd
         ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _get_ac_charger_relay
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     50D      69       15.8%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      FF      13       99.6%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0     100      11      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      EF       9       93.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      27       1       61.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4AD      58        0.0%
DATA                 0      0     9BA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb  7 22:16:41 2020

                     _SPI1_Exchange8bit CD2E                __end_of_set_display_info CDA6  
                                     _C 06FF                                       _D 082A  
                                     _H 01C7                                       _P 01F6  
                                     _R 00AB                                       _S 0254  
                                     _T F9B3                                       _V 0107  
      __end_of_TMR5_SetInterruptHandler CA6E            __end_of_start_switch_handler CD0E  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                       _update_cal_data CE2A                                      _bp FABB  
                __end_of_FVR_Initialize CF92                          _check_day_time 9018  
                           __CFG_LVP$ON 000000                                     l169 CE7C  
                                   l807 CD3C                                     l673 C926  
                                   l940 BCEA                                     _GIE 01FE97  
                                   _abs C30E                                     _pad A414  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize CE12  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack CC40  
                     _update_adc_result C5D8                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 00BA                           _INT1_CallBack CBD4  
                          __CFG_ZCD$OFF 000000                                    l1002 C51A  
                                  l2023 A756                                    l2040 91A6  
                                  l2106 9F8C                                    l2115 8A40  
                                  l2036 91AE                                    l1190 C55A  
                                  l2310 5E8E                                    l1406 5DA6  
                                  l1342 005E                                    l2231 79CE  
                                  l1361 07A6                                    l1371 084A  
                                  l1363 07AA                         _timer3ReloadVal 009A  
                                  l1620 B32C                                    l1348 0288  
                                  l3205 8E52                                    l1381 0A4E  
                                  l1382 0C76                                    l1624 B646  
                                  l2185 3B8A                                    l3129 5432  
                                  l2290 A470                                    l2346 24B8  
                                  l2514 3464                                    l1715 A634  
                                  l1707 8AF8                                    l1387 123E  
                                  l3084 4EB8                                    l3236 C34E  
                                  l3228 9344                                    l2428 7ABC  
                                  l1492 BFBE                                    l1708 8C54  
                                  l2189 3EC8                                    l3165 46FC  
                                  l1901 B11E                                    l2390 1D98  
                                  l2375 18E8                                    l1639 C69A  
                                  l3096 4D48                                    l3336 A1DA  
                                  l2464 66C0                                    l2449 6DE6  
                                  l2810 984A                                    l1755 CDA2  
                                  l3267 817A                                    l3603 8820  
                                  l1845 58F2                                    l2806 AE40  
                                  l1926 B764                    _ADCC_StartConversion CE96  
                                  l3631 B870                                    l2817 991E  
                                  l1698 C62E                                    l3618 B8F4  
                                  l2844 97BC                                    l1885 BA72  
                                  l1976 900E                                    l8202 475C  
                                  l9010 9AE4                                    l8220 481A  
                                  l8212 47B2                                    l9100 9898  
                                  l9004 9AC4                                    l8214 47E2  
                                  l8232 488C                                    l8208 479C  
                                  l9112 991C                                    l9104 98E6  
                                  l9032 9BBE                                    l9024 9B8A  
                                  l9120 C20C                                    l8410 4E98  
                                  l8402 4E58                                    l8322 4BC8  
                                  l8226 484C                                    l9130 96A6  
                                  l9202 9E00                                    l8404 4E68  
                                  l8340 4CF8                                    l8316 4BAC  
                                  l8244 48F4                                    l8236 48A2  
                                  l9052 A346                                    l9044 A31C  
                                  l8500 92E2                                    l8318 4BBE  
                                  l8326 4BFA                                    l8238 48D2  
                                  l8174 B4A8                                    l9070 A3FA  
                                  l9062 A3C6                                    l8510 933C  
                                  l8176 B4CA                                    l8600 7CF2  
                                  l9048 A32E                                    l8504 92E6  
                                  l8362 4D88                                    l8338 4CD2  
                                  l8290 4AD6                                    l8274 4A32  
                                  l9218 C0AA                                    l9082 AE0A  
                                  l9154 9754                                    l9146 9728  
                                  l9170 9522                                    l8372 4DB0  
                                  l8356 4D6A                                    l8348 4D2C  
                                  l8284 4AA4                                    l8700 4FF6  
                                  l8612 7D8C                                    l9156 976A  
                                  l9148 9744                                    l8358 4D7C  
                                  l8294 4AE0                                    l9094 9808  
                                  l8710 504C                                    l8606 7D46  
                                  l9086 AE3E                                    l9078 ADC8  
                                  l8542 6B54                                    l9182 95F4  
                                  l8376 4DB6                                    l8288 4AC4  
                                  l8800 5372                                    l8712 507C  
                                  l8624 7E5E                                    l8528 B8E4  
                                  l8298 4B10                                    l8706 5036  
                                  l8562 6D0A                                    l9194 9D54  
                                  l8388 4E14                                    l8820 5416  
                                  l8812 53DE                                    l8732 510E  
                                  l8724 50F4                                    l8660 855C  
                                  l8652 84B0                                    l8644 8428  
                                  l8556 6C72                                    l8398 4E40  
                                  l8806 53AE                                    l8750 51D4  
                                  l8742 519E                                    l8718 50BA  
                                  l8486 C33E                                    l8566 6D78  
                                  l8558 6CC2                                    l8752 51E6  
                                  l8760 523E                                    l8680 4F18  
                                  l9800 7F4C                                    l8584 B860  
                                  l8930 450C                                    l8842 3F72  
                                  l8818 5406                                    l8690 4F6E  
                                  l8924 44F0                                    l8860 4040  
                                  l8844 3F78                                    l8836 3F32  
                                  l8772 5288                                    l8692 4F9E  
                                  l9820 8066                                    l8934 4532  
                                  l8862 4046                                    l8854 4000  
                                  l8846 3FA8                                    l8790 52FE  
                                  l8766 526C                                    l8758 523A  
                                  l8686 4F58                                    l9814 7FEC  
                                  l8944 457C                                    l8872 4098  
                                  l8864 4076                                    l8776 52AE  
                                  l9824 80CE                                    l9816 8004  
                                  l9808 7FC0                                    l8962 463C  
                                  l8786 52F8                                    l9834 816A  
                                  l9818 8028                                    l9850 8692  
                                  l8948 4582                                    l9852 86FE  
                                  l8958 45F6                                    STR_1 FEA1  
                                  l8976 46AA                                    l8968 4666  
                                  STR_2 FE62                                    STR_3 FFD2  
                                  l8978 46C4                                    STR_4 FE0E  
                                  STR_5 FC45                                    STR_6 FC45  
                                  STR_7 FC45                                    l9798 7F2A  
                                  l8998 9AAE                                    STR_8 FEF5  
                                  STR_9 FF34                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6010 4BF0                                    u6110 4DA8  
                                  u6015 4BE0                                    u6050 4D1A  
                                  _T6PR 003F93                                    u7020 52F0  
                                  u6220 C80E                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u6150 4E04  
                                  u6230 C810                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u6400 9336  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u6090 4D8E                                    u6330 C322  
                                  _PMD6 0039C6                                    u6155 4DF4  
                                  _PMD7 0039C7                                    u7300 4650  
                                  u6180 4E24                                    u7060 534C  
                                  u6340 9266                                    u7205 44AA  
                                  u7070 5386                                    u6510 6C18  
                                  u6430 B8A2                                    u7240 4574  
                                  u7080 53C2                                    u6440 B8A4  
                                  u9000 CC8E                                    u7065 533C  
                                  u6345 925C                                    u7170 4086  
                                  u6610 C86E                                    u6530 6CF0  
                                  u6515 6C0E                                    u5900 4A78  
                                  u6620 C870                                    u7420 A372  
                                  u6460 6AEC                                    u5901 4A72  
                                  u5750 B4F8                                    u6710 7E96  
                                  u7350 9B10                                    u6390 9334  
                                  u6470 6B38                                    u6535 6CE6  
                                  u7280 45D0                                    u6640 7CEC  
                                  u6800 84DC                                    u7440 A3E6  
                                  u6560 C3D2                                    u7185 421A  
                                  u6385 9316                                    u6465 6AE2  
                                  u7290 460A                                    u6730 7EE8  
                                  u7370 9BAA                                    u6570 C3D4  
                                  u7195 42E2                                    u5940 4B08  
                                  u6660 7D42                                    u6820 8594  
                                  u7540 C208                                    u7620 9772  
                                  u5780 C83E                                    u6580 B81E  
                                  u7285 45C0                                    u5757 B4EA  
                                  u5950 4B28                                    u5918 4A7A  
                                  u7550 9686                                    u5790 C840  
                                  u7710 9D4E                                    u6590 B820  
                                  u6671 7D4C                                    u6495 6B72  
                                  u6680 7D86                                    u6840 85E6  
                                  u6760 8422                                    u7480 AE3A  
                                  u7640 979C                                    u7560 969A  
                                  u6496 6B78                                    u7720 9D80  
                                  u5945 4AF8                                    u6497 6B86  
                                  u5890 4A58                                    u6690 7DB8  
                                  u7570 96D4                                    u7555 967C  
                                  u7651 94E2                                    u6780 8478  
                                  u7660 951C                                    u7740 9E38  
                                  u6790 84AA                                    u7670 954E  
                                  u7575 96CA                                    u7760 C086  
                                  u9600 BCAA                                    u9514 575E  
                                  u9434 5458                                    u7770 C0A6  
                                  u7690 962C                                    u9515 5758  
                                  u9435 5452                                    u6980 5266  
                                  u9540 5788                                    u8900 8116  
                                  u9390 8DC6                                    u9534 5780  
                                  u9454 5488                                    u9535 577A  
                                  u9455 5482                                    u9608 BCAC  
                                  u9625 BCFA                                    u9474 54AA  
                                  u9626 BCFC                                    _PLLR 01CEE0  
                                  u9475 54A4                                    u9820 BD7A  
                                  u8940 872C                                    u9494 5690  
                                  u8870 7FBC                                    u9495 568A  
                                  u9745 C40E                                    u9905 CEB2  
                                  u8890 8114                                    u9906 CEB4  
                                  u8947 871E                                    u8980 87C6  
                                  u9845 BDAE                                    u9846 BDB0  
                                  u9838 BD7C                                    u8990 87F4  
                                  u9790 B932                                    u8985 87C0  
                                  u9970 8E72                                    u8987 87B2  
                                  u8997 87E6                                    u9895 CEC2  
                                  u9896 CEC4                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR C900  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0297  
                                  _cp_h FACB                                    _cp_l FAC7  
                                  _atoi 7F10                                    _ctoa B76E  
                                  _main 0000                                    _dtoa 5DB0  
                                  _nanf BE98                                    _seed 02E7  
                                  _prec 003C                                    _nout 0096  
                                  _spin FA43                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 79D2                                    btemp 0001  
                                  _utoa 6DA2                                    _xtoa 667C  
                __end_of_check_adc_scan CF72                           ___fpclassifyf 91B8  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 009E  
             __end_of_SPI1_Exchange8bit CD4C               __size_of_clear_hid_pflags 0066  
                       _TMR3_Initialize C2C6             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                        _SPI1STATUSbits 003D17                       _UART1_rx_vect_isr CB38  
                          ___param_bank 000000                  __end_of_check_day_time 91B8  
                    ?_UART1_rx_vect_isr 0021               __size_of_DATAEE_WriteByte 0068  
                      __end_of_INT0_ISR CF22                        __end_of_INT1_ISR C59E  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma B334  
         __end_of_OSCILLATOR_Initialize CE82                                   l10120 8D32  
                                 l10200 5824                                   l10130 8D9C  
                                 l10122 8D50                                   l11002 B742  
                                 l10140 8DD0                                   l10132 8DB2  
                                 l10116 8D0E                                   l10108 8CA2  
                                 l10150 8E32                                   l10118 8D1C  
                                 l10206 58C0                                   l10214 58D2  
                                 l10128 8D7E                                   l10160 543E  
                                 l10232 C99E                                   l11016 AE88  
                                 l11130 BA48                                   l10180 5676  
                                 l11052 C644                                   l10342 90E2  
                                 l10166 546E                                   l11310 AF96  
                                 l11118 BA30                                   l11142 A2A8  
                                 l10192 5744                                   l10176 5594  
                                 l10354 9154                                   l11170 9C00  
                                 l13010 1F38                                   l10426 C8BA  
                                 l11306 AF1A                                   l11138 A246  
                                 l11172 9C06                                   l10188 56A8  
                                 l10372 C6A4                                   l11190 9C86  
                                 l11174 9C14                                   l11182 9C1C  
                                 l11094 C5F8                                   l10464 C0E6  
                                 l11408 C502                                   l11184 9C4E  
                                 l11168 9BF0                                   l11370 CCE8  
                                 l11426 C542                                   l13018 1FA2  
                                 l13026 200E                                   l13034 2120  
                                 l13210 66B0                                   l11602 7716  
                                 l14010 0066                                   l13060 2254  
                                 l10484 B936                                   l11612 775C  
                                 l11604 7726                                   l14012 0078  
                                 l14004 0040                                   l11382 C922  
                                 l11198 9D00                                   l13062 226E  
                                 l13046 21B8                                   l13142 7B5E  
                                 l13134 7AF2                                   l13118 7A3E  
                                 l13230 6786                                   l13222 6726  
                                 l13310 25DE                                   l11622 7792  
                                 l11606 772C                                   l14006 0048  
                                 l13072 2310                                   l13152 7C14  
                                 l13216 66EA                                   l13312 25F4  
                                 l11640 7814                                   l11632 77C6  
                                 l11616 7768                                   l13082 2360  
                                 l13138 7B2E                                   l13170 6DD6  
                                 l13330 2726                                   l11570 A91E  
                                 l14202 095A                                   l14122 0532  
                                 l13156 7C50                                   l13148 7BE8  
                                 l13332 2760                                   l13308 25A4  
                                 l11628 77BA                                   PRLOCK 0039EF  
                                 l10870 C112                                   l11582 94AE  
                                 l12702 A4B6                                   l13270 69EC  
                                 l13246 687C                                   l13254 6902  
                                 l13350 28DA                                   l13334 2776  
                                 l10942 A776                                   l11670 7994  
                                 l11558 A878                                   l14214 0EB2  
                                 l14230 10C0                                   l14134 060C  
                                 l11808 666E                                   l12640 B534  
                                 l12712 AC2A                                   l13416 2E58  
                                 l13360 2972                                   l11760 AFC8  
                                 l11648 783A                                   l11672 79BE  
                                 l14160 07DC                                   l14152 079C  
                                 l10874 C144                                   l11930 B9B2  
                                 l12706 A500                                   l12730 B78C  
                                 l12802 61E6                                   l13098 2418  
                                 l13178 6E32                                   l13426 2F06  
                                 l13530 B24C                                   l14218 0F12  
                                 l14074 02A2                                   l13700 3BBC  
                                 l12628 A0F0                                   l12644 B572  
                                 l12732 B7B8                                   l13188 7028  
                                 l13460 325A                                   l13436 3028  
                                 l13372 2AB2                                   l12660 74A6  
                                 l13508 B434                                   l11764 B006  
                                 l10948 A828                                   l14244 1116  
                                 l14228 1094                                   l14180 0836  
                                 l14172 0810                                   l14068 0260  
                                 l10974 8EC0                                   l10966 8E94  
                                 l12902 17D2                                   l13446 30DE  
                                 l10990 B70C                                   l14190 085A  
                                 l14158 07AE                                   l11936 B9C2  
                                 l13712 3EC0                                   l12816 132A  
                                 l13480 33EC                                   l13392 2CC4  
                                 l13384 2C0C                                   l13368 2A5E  
                                 l13528 B20A                                   l12680 767C  
                                 l12672 75CE                                   l13552 B338  
                                 l14280 11EE                                   l14272 11B8  
                                 l14256 1168                                   l10978 8ED4  
                                 l12922 1874                                   l12914 1812  
                                 l12906 17FA                                   l12850 14AA  
                                 l13474 3392                                   l13490 3410  
                                 l12666 7564                                   l13554 B340  
                                 l13634 9F26                                   l14274 11D0  
                                 l14266 11A6                                   l13660 3618  
                                 l13652 3558                                   l12692 A440  
                                 l12764 5EC8                                   l12756 5E7E  
                                 l12940 1936                                   l12924 1880  
                                 l12908 180C                                   l12828 136E  
                                 l12836 13C4                                   l13484 33F0  
                                 l13396 2CF8                                   l13556 B34A  
                                 l13564 B360                                   l13628 9EC0  
                                 l14284 1214                                   l12950 19F8  
                                 l12846 1468                                   l12854 14D6  
                                 l13558 B358                                   l13566 B38C  
                                 l13814 59F4                                   l14294 126A  
                                 l13672 3786                                   l13664 3684  
                                 l13656 35AC                                   l12696 A468  
                                 l12768 5EE6                                   l12960 1BA4  
                                 l12944 196E                                   l12880 1614  
                                 l12864 157A                                   l12872 15A8  
                                 l12848 1494                                   l13682 39B2  
                                 l12698 A47A                                   l12778 60F8  
                                 l12890 1750                                   l13826 5A6A  
                                 l13818 5A08                                   l13692 3AF2  
                                 l13676 37DA                                   l13916 BB56  
                                 l12884 1684                                   l13588 A54C  
                                 l13686 3A2C                                   l12798 61AA  
                                 l12982 1D90                                   l12974 1CC6  
                                 l12886 16EE                                   l13942 8AC8  
                                 l13696 3B9A                                   l12984 1DB2  
                                 l13864 5CF2                                   l13872 883E  
                                 l13956 8BF0                                   l12998 1EB0  
                                 l13888 8932                                   l13898 8A0A  
                       __end_of___aodiv 7F10                            _Volts_to_SOC AF08  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 4EC2                                   _ADCLK 003EFF  
                       __end_of___aomod 860A                                   _ADPCH 003EF1  
                       __end_of___fldiv 543C                                   _ADREF 003EFD  
                       __end_of___awdiv 9BD8                         __end_of___flneg C236  
                                 STR_10 FDF9                                   STR_11 FB9F  
                                 STR_12 FC70                                   STR_20 FB6B  
                                 STR_13 FD4C                                   STR_21 FB85  
                                 STR_22 FF94                                   STR_30 FCC8  
                                 STR_14 FC44                                   STR_15 FE23  
                                 STR_31 FD8E                                   STR_24 FF83  
                                 STR_16 FE38                                   STR_32 FD62  
                                 STR_40 FBD1                                   STR_17 FF0A  
                                 STR_33 FD78                                   STR_25 FD36  
                                 STR_41 FBFF                           __CFG_WDTE$OFF 000000  
                                 STR_50 FF49                                   STR_18 FECB  
                                 STR_26 FD20                                   STR_34 FC86  
                                 STR_42 FC16                                   STR_51 FEE0  
                                 STR_43 FDA4                                   STR_27 FD0A  
                                 STR_35 FC9C                                   STR_19 FC5A  
                                 STR_44 FDA4                                   STR_60 FFFC  
                                 STR_52 FDBA                                   STR_28 FCF4  
                                 STR_36 FCB2                         __end_of___awmod A414  
                                 STR_45 FDA4                                   STR_61 FFF9  
                                 STR_53 FF1F                                   STR_29 FCDE  
                                 STR_37 FBE8                                   STR_54 FEB6  
                                 STR_70 FFA4                                   STR_62 FFB3  
                                 STR_46 FEB6                                   STR_38 FC2D  
                                 STR_63 FFC9                                   STR_55 FDE4  
                                 STR_47 FDCF                                   STR_71 FBB9  
                                 STR_39 FB4E                                   STR_80 FB4D  
                                 STR_64 FF5D                                   STR_56 FE8C  
                                 STR_48 FE4D                                   _ADRPT 003EEC  
                                 STR_65 FF5D                                   STR_57 FEB6  
                                 STR_73 FF70                                   STR_49 FF49  
                                 STR_81 FACF                                   STR_58 FDE4  
                                 STR_90 FFEA                                   STR_82 FFD7  
                                 STR_66 FFBF                                   STR_67 FFBF  
                                 STR_83 FFDF                                   STR_59 FE77  
                                 STR_92 FFEA                                   STR_68 FFA4  
                                 STR_69 FFA4                                   STR_94 FFF0  
                                 STR_86 FFDB                                   STR_87 FFE3  
                                 STR_96 FFF0                         __end_of___flmul 4706  
                                 STR_99 FFED                         __end_of___flsub C39A  
                       __end_of___fltol 97C6                                   u10000 B708  
                                 u10020 B73C                                   u10150 CCB6  
                                 u10156 CCB8                                   u11410 A0E4  
                       __end_of___lodiv 9654                                   u12220 2336  
                                 u12060 1C96                                   u13020 9F02  
                                 u11430 A160                                   u11600 5DE2  
                                 u12240 23EC                                   u12160 2162  
                                 u12320 7B54                                   u13008 9E9E  
                                 u12250 23EE                                   u12330 7B9A  
                                 u13050 9F68                                   _U1P1H 003DED  
                                 u12411 706A                                   u11700 6166  
                                 u11620 5E52                                   u11540 ACA4  
                                 u12420 7080                                   u12500 67D2  
                                 _U1P2H 003DEF                                   u12421 707E  
                                 u11710 616A                                   u12430 7094  
                                 u12510 67D4                                   u13038 9F04  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u11640 5E64  
                                 u11800 1412                                   u12360 7C76  
                                 u12440 7098                                   u12600 6978  
                                 u13400 8C42                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u12337 7B8C  
                                 u11730 6180                                   u11810 1414  
                                 u12610 697C                                   u12530 6832  
                                 u11490 76F0                                   _U1P3L 003DF0  
                                 u11547 AC96                                   u10691 CE34  
                                 u11660 5EB4                                   u12380 6DBC  
                                 u12540 6834                                   u12460 6696  
                                 u13260 5BB0                                   u13068 9F6A  
                                 u13500 0766                                   u11670 610C  
                                 u11590 5DE0                                   u12710 27BE  
                                 u13270 5BDA                                   _U2P1L 003DD4  
                                 u11920 17E0                                   u11840 1524  
                                 u12560 68FE                                   u12800 2B3A  
                                 u12720 27C0                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   u11681 613C  
                                 u13265 5BA2                                   u11690 6152  
                                 u11850 1526                                   u11770 1358  
                                 u12570 691E                                   u12490 677E  
                                 u12730 27E6                                   _U2P3L 003DD8  
                                 u11691 6150                                   u13275 5BCC  
                                 u12900 3132                                   u12660 263C  
                                 u13620 1106                                   u13460 03BC  
                                 u12581 694E                                   u12565 68E0  
                                 u11950 1844                                   u12590 6964  
                                 u12830 2DB2                                   u12670 263E  
                                 u13390 8C40                                   u13630 111E  
                                 u12591 6962                                   _T5CLK 003F9D  
                                 u12920 32E2                                   u12840 2DB4  
                                 u12680 2664                                   u13640 1130  
                                 u13480 063A                         __end_of___lomod 9E5A  
                                 u11890 178C                                   u13626 1108  
                                 u13490 0764                                   u12780 29C6  
                                 u12940 B414                                   u13636 1120  
                                 _T2HLT 003FAD                                   u11990 18C6  
                                 u13646 1132                                   _T5CON 003F9A  
                                 u12990 9E9C                                   _T6CON 003F94  
                        __CFG_DEBUG$OFF 000000                                   _T6HLT 003F95  
            _ADCC_ADTI_InterruptHandler 0081                                   _T2TMR 003FAA  
                                 _U1UIR 003DF8                                   _T2RST 003FAF  
                                 _U1RXB 003DE8                                   _U2UIR 003DE0  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0026                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98               __end_of_update_adc_result C612  
                                 _TRISA 003FC2                                   _TRISB 003FC3  
                                 _TRISC 003FC4                                   _TRISD 003FC5  
                                 _TRISE 003FC6                                   _TRISF 003FC7  
                           _Default_ISR CFAC                 __size_of_clear_adc_scan 0006  
                    _current_sensor_cal 58F8       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 9A8A                           __CFG_WRTC$OFF 000000  
                      _cal_current_zero B6E0                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR ABE2                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR CDFA                            _DMA1CON1bits 003BFD  
            __size_of_send_lcd_data_dma 004A                         _DATAEE_ReadByte C788  
                                 _fabsf B130                                   _flags 003E  
                  __size_of_check_range 0080                                   _r_cal 03C6  
              __size_of_calc_model_data 044C                            _DMA2CON0bits 003BDC  
                          _DMA2CON1bits 003BDD            __end_of_get_ac_charger_relay CF12  
                                 _fputc A0C0              __size_of_send_lcd_cmd_long 0040  
                       __end_of_isalpha C3DE                                   _fputs B524  
                       __end_of_isdigit C87A                         __end_of_ivln2_h FAC7  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand C6B8  
                                 _width 003A                                   _putch CDC4  
          __end_of_set_ac_charger_relay CEE8                         __end_of_islower C81A  
                       __end_of_isspace C0BA                _INT1_SetInterruptHandler CA96  
                       __end_of_set_dac B130                         __end_of_isupper C84A  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0001                                   ltemp1 0005  
                                 ltemp2 0009                __size_of_DMA1_Initialize 006A  
                                 plusw0 003FEB                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler CA1E  
           _UART1_SetRxInterruptHandler C9F6                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf A742                         __end_of_tolower B8FE  
                       __end_of_strncmp 882A                         __end_of_toupper B87A  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr CB60  
              __size_of_SPI1_Initialize 0016                 __end_of_update_cal_data CE40  
                       _TMR5_Initialize C27E                   __end_of_ringBufS_init C97E  
                       __initialization AA16                       _UART2_rx_vect_isr CB88  
                          __end_of_cp_h FACF                            __end_of_cp_l FACB  
                          __end_of_atoi 8184                            __end_of_ctoa B7F6  
                          __end_of_main 127E                            __end_of_dtoa 6230  
                          __end_of_nanf BEFA                            __end_of_spin FABB  
                          __end_of_stoa 7C90                            __end_of_utoa 70E2  
                          __end_of_xtoa 6A36                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0021                 __end_of_TMR2_Initialize CE2A  
                 __end_of_send_lcd_data CBD4                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button BB60                _TMR5_SetInterruptHandler CA46  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 0078                       _port_data_dma_ptr CF3C  
                    esr_check@esr_state 00A0                     ??_UART2_rx_vect_isr 0026  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize C92C  
                       _PWM8_Initialize CE56                        _UART1_Initialize C236  
                     _UART2_tx_vect_isr CB60                      _UART2_Transmit_ISR C900  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan BDD2  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                STR_101 FFED                                  STR_111 FFF6  
                                STR_104 FFF3                                  STR_113 FFE7  
                                STR_106 FFF3                                  STR_115 FFE7  
                                STR_109 FFF6                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue C3DE                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0021  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1019 AB92  
                                _RB6PPS 003A0E                                  i1l1207 99F2  
                  _start_switch_handler CCEE                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize C30E  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright CEF6                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  _NVMDAT 0039E3  
                  __size_of_hid_display 021C                                  u981_20 CF0E  
                                u965_20 906E                                  u957_25 CEE2  
                                u957_26 CEE4                                  u988_20 C652  
                                u988_26 C654                        __end_of___xxtofl 8E5C  
 __end_of_ADCC_DischargeSampleCapacitor CF7A  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor CF72                __end_of_send_lcd_cmd_dma CD6A  
                       _TMR3_WriteTimer C520                     ??_UART2_tx_vect_isr 0026  
             __end_of_UART2_rx_vect_isr CBB0              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize CF32                        _UART2_Initialize BEFA  
                                _WaitMs C682                         _conv_raw_result 543C  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 97C6                                  ___fleq AD86  
                     _ADCC_ThresholdISR BC34                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush B5BC                                  _efgtoa 127E  
                                _floorf 6A36                       dac_spi_control@S0 0042  
                     dac_spi_control@S1 00A4                       dac_spi_control@S2 00A3  
                     dac_spi_control@SB 00A1                       dac_spi_control@SC 00A2  
                    ?_ADCC_ThresholdISR 0021                                  _memset 740E  
                  __size_of_help_button 0038                                  clear_0 AA88  
                                clear_1 AA9C                                  clear_2 AAB0  
                                clear_3 AAC2                                  clear_4 AACE  
                                clear_5 AADA                                  clear_6 AAE6  
             __end_of_port_data_dma_ptr CF46                  __size_of_read_cal_data 00F4  
                                _printf BE36                      _eaDogM_WriteString B3DC  
               __end_of_DATAEE_ReadByte C7BA                                  _strcpy ABE2  
                             ?_ADCC_ISR 0021                                  _strlen B482  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 04FF  
                       _ADCC_Initialize BBCA                          _PMD_Initialize CE82  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr CB88  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0021                  __end_of_start_adc_scan BE36  
                          __mediumconst F8E2                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay C00E                        __end_of_spinners A838  
                      __end_of_vfprintf B28A                              _StartTimer C4A0  
                    __size_of___asfladd 0078           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize C2C6                       _SYSTEM_Initialize C1A4  
                            __accesstop 0060                 __end_of__initialization AAF8  
                             ?_INT0_ISR 0021                               ?_INT1_ISR 0021  
                  __end_of_display_help CF8A                    __end_of_display_info CF82  
             __end_of_CLKREF_Initialize CF3C                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer C4E0  
                 _set_temp_display_help CEC8                        _clear_hid_pflags BD06  
                 __end_of_TMR3_CallBack CC40               __end_of_ADCC_ThresholdISR BC9E  
                    __size_of_calc_bsoc 0A6E                  __end_of_ringBufS_flush B64E  
                        __pcstackCOMRAM 0021                              ___inthi_sp 115E  
                            ___intlo_sp 18AF                            __pidataBANK0 C59E  
                          __pidataBANK1 ACB6             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf B1DE                               ?_TMR3_ISR 0021  
                             ?_TMR5_ISR 0021                               ?_TMR6_ISR 0021  
                      _DATAEE_WriteByte BC9E                          ivt0x8_undefint 00AC  
                         __end_of_fputc A1E4                           __end_of_fputs B5BC  
                  _get_ac_charger_relay CF04                           __end_of_srand C6EC  
                 __end_of_TMR5_CallBack CC1C                           __end_of_putch CDDE  
                  _set_ac_charger_relay CED8                 __end_of_PWM8_Initialize CE6C  
               __end_of_TMR6_Initialize C956                       _adc_int_t_handler B97E  
                __end_of_PMD_Initialize CE96                              __end_of_bp FAC3  
                            ??_ADCC_ISR 0021                   __end_of_TMR6_CallBack CC88  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 0040  
                __size_of_calc_ror_data 0186                           _DMA1_DMAA_ISR CF54  
                 TMR3_ISR@CountCallBack 0098                          _clear_adc_scan CF92  
                    __size_of_hid_input 0138                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 008D               __end_of_SYSTEM_Initialize C1EE  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer C560                              __pbssBANK0 0060  
                            __pbssBANK1 01D0                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            _check_help 8A46                           _read_cal_data A838  
               __end_of_conv_raw_result 58F8                      __size_of_esr_check 02D8  
                 _INT0_InterruptHandler 0093                              ??_INT0_ISR 0021  
                            ??_INT1_ISR 0027                       __end_of_TimerDone C9A6  
                      _DMA1_DMADCNT_ISR CF48                         _convert_dac_raw A1E4  
                    __size_of_init_bsoc 0246              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma C7BA                   __end_of_wait_lcd_done CCAA  
              __end_of_cal_current_zero B76E        __end_of_TMR3_SetInterruptHandler CA96  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler CA46  
                            ??_TMR3_ISR 00E5                 __end_of_ADCC_Initialize BC34  
                            ??_TMR5_ISR 002B               __end_of_adc_int_t_handler B9FC  
                            ??_TMR6_ISR 0026                       __end_of___asfladd BAEE  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
                    __size_of_set_dac_a 0034                      __size_of_set_dac_b 0034  
  __end_of_ADCC_SetADTIInterruptHandler CB0E   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler CAE6                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR CCCC                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan CF98  
                               u1022_24 9CF6                                 u1022_25 9CF2  
                               u1016_28 9BF6                                 u1018_20 9C10  
                               u1018_21 9C0A                                 u1050_48 CC50  
                               u1052_28 CBE4                                 u1061_28 CC08  
                        ?_DMA1_DMAA_ISR 0021                        _DMA1_DMASCNT_ISR CF24  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               u1315_20 3AE2                                 u1322_28 CC2C  
                               u1058_48 CC74                                 _U1ERRIR 003DF9  
                               u1317_20 3BAC                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 u1098_44 B9E2  
                               u1098_45 B9DC                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0021              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                       _dac_spi_control B9FC                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _NVMADRH 0039E1  
                               _NVMADRL 0039E0                       __end_of_calc_bsoc 3EDC  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _NVMCON2 0039E6                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch C8A8                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer C520                 __size_of_switch_handler 0142  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one CEC8  
            __end_of_set_load_relay_two CEB8       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 934E  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim CDFA  
                               __Lparam 0000                __end_of_UART1_Initialize C27E  
                     __end_of_hid_input 9F92                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 7C90                                 ___fladd 4706  
                               ___aomod 83CA                                 ___fldiv 4EC2  
                               ___awdiv 9A8A                                 ___flneg C1EE  
                               ___awmod A2FC                                 ___flmul 3EDC  
                               ___flsub C354                                 ___fltol 9654  
                               ___lodiv 94D4                                 ___lomod 9D1A  
             __end_of_UART1_Receive_ISR CCEE                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display AA16  
                               __pcinit AA16                __end_of_mode_lamp_bright CF04  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand CEE8                                 __ramtop 2000  
                               __ptext0 0000                                 __ptext1 CE2A  
                               __ptext2 BF5A                                 __ptext3 CCEE  
                               __ptext4 C6B8                                 __ptext5 C6EC  
                               __ptext6 C720                                 __ptext7 A1E4  
                               __ptext8 B07A                                 __ptext9 B9FC  
                     __end_of_esr_check 79D2                       _UART2_Receive_ISR CD0E  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize CE6C                            __size_of_abs 0046  
                          __size_of_pad 0114                       __end_of_init_bsoc 83CA  
                               _isalpha C39A                                 _isdigit C84A  
                               _ivln2_h FAC3                                 us674999 7EFA  
                               us770999 963E                                 us685999 85F8  
                             _T3CONbits 003FA6                                 us775999 9E4A  
                               _mode_sw 00A5                       __end_of_lp_filter 9018  
                               _islower C7EA                                 _isspace C068  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
                               _set_dac B07A                __end_of_UART2_Initialize BF5A  
                               _isupper C81A              __size_of_SYSTEM_Initialize 004A  
                               _sprintf A638                                 _tolower B87A  
                 __size_of_display_help 0008                                 _utctime 01F2  
               __end_of_convert_dac_raw A2FC                   __size_of_display_info 0008  
                               _strncmp 860A                                 _toupper B7F6  
                  end_of_initialization AAF8               __size_of_convert_adc_data 00B8  
                    _check_enter_button BAEE                       __end_of_set_dac_a C754  
                     __end_of_set_dac_b C720                               i1u1341_20 99E8  
   __end_of_UART2_SetRxInterruptHandler C9F6             _UART2_SetRxInterruptHandler C9CE  
                             i2u1101_48 C8EC                               i2u1103_48 BC6A  
                             i2u1103_49 BC7E                               i2u1105_48 CB4C  
                             i2u1107_48 CB74                               i2u1109_48 CB9C  
               check_day_time@day_delay 0041                       __end_of_set_vterm CD88  
                     __end_of_vfpfcnvrt 346E                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd CFA4               __end_of_UART2_Receive_ISR CD2E  
                        wdtdelay@dcount 0074                 __end_of_dac_spi_control BA76  
           __size_of_current_sensor_cal 04B8                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0027                   _INT1_InterruptHandler 0090  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc CFAA  
                             _PORTDbits 003FCD                _TMR3_SetInterruptHandler CA6E  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler CA1E  
                          _display_help CF82                   _TMR5_InterruptHandler 007B  
                          _display_info CF7A    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags BD6C                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler CB36             _ADCC_SetADIInterruptHandler CB0E  
                            _update_lcd A528                         _calc_model_data 6230  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc BF5A                __end_of_DATAEE_WriteByte BD06  
                       _DMA1_Initialize BB60                     __end_of_check_range B97E  
                            _start_bsoc CCAA                  __size_of_send_lcd_data 0024  
                       _SPI1_Initialize CE40                   __end_of_get_vterm_ptr C8A8  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs C6B8            __end_of_INTERRUPT_Initialize BDD2  
                            _vterm_dump 9F92                          __end_of___flge 9928  
                        __end_of___fleq AE4A    __end_of_INT0_DefaultInterruptHandler CFB8  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler CFB6  
            __size_of_UART1_Receive_ISR 0022                         _DMA2_Initialize C00E  
                         __pidataBIGRAM 70E2                          __end_of_efgtoa 24C2  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 00E2  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 6DA2             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 01EA                          __end_of_memset 76FA  
                        __end_of_printf BE98                __end_of_DMA1_DMADCNT_ISR CF52  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack CC64  
                        __end_of_strcpy ACB6                          __end_of_strlen B524  
                   start_initialization AA16                 __size_of_write_cal_data 00BE  
  __end_of_TMR5_DefaultInterruptHandler C682   __size_of_TMR5_DefaultInterruptHandler 0038  
          _TMR5_DefaultInterruptHandler C64A         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs C354                   __end_of_INT1_CallBack CBF8  
             __size_of_set_display_info 001E                             __end_of_pad A528  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd C4A0  
                        _switch_handler 9BD8           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 01DC  
                 __end_of___fpclassifyf 934E                           _uart2RxBuffer 0400  
              __end_of_DMA1_DMASCNT_ISR CF32                           _uart2TxBuffer 0300  
                        _DMA1_DMAOR_ISR CF60                     __end_of_hid_display 8A46  
            __end_of_send_port_data_dma C10C                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone C97E                           _ringBufS_init C956  
                           __pdataBANK0 00AB                             __pdataBANK1 0100  
            __size_of_UART2_Receive_ISR 0020                     __size_of_get_switch 002C  
            __end_of_EXT_INT_Initialize C788                __size_of_update_cal_data 0016  
               __end_of_calc_model_data 667C                           _send_lcd_data CBB0  
                   __end_of_help_button C64A         __end_of_eaDogM_WriteStringAtPos B3DC  
                   __end_of_BVSOC_TABLE F9B3                               ___asfladd BA76  
                  calc_model_data@bcror 006C                             __pbssBIGRAM 082A  
               __end_of_DMA1_Initialize BBCA                    calc_model_data@bvror 0070  
                           __pbssCOMRAM 003A                             _check_range B8FE  
      __end_of_INT0_SetInterruptHandler CAE6                           __pcstackBANK0 00E5  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 9D1A                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize CE56                _UART1_RxInterruptHandler 0087  
              _UART2_TxInterruptHandler 008A                               __end_of_T FA43  
                      _convert_adc_data AFC2                               _calc_bsoc 346E  
             __size_of_ringBufS_put_dma 00AA                            _init_display A92C  
                __end_of_DMA1_DMAOR_ISR CF6A                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 007E                      calc_ror_data@bcror 0064  
                __size_of_TMR6_CallBack 0024                 __end_of_DMA2_Initialize C068  
                    calc_ror_data@bvror 0068                  _PIN_MANAGER_Initialize B64E  
              __size_of_TMR3_Initialize 0048                    __end_of_wait_lcd_set CF9E  
                         __pmediumconst F8E2                               __ptext100 C3DE  
                             __ptext101 C612                               __ptext110 BE98  
                             __ptext102 C97E                               __ptext111 CDA6  
                             __ptext103 C4A0                               __ptext120 4706  
                             __ptext112 8C58                               __ptext104 CF7A  
                             __ptext121 3EDC                               __ptext113 4EC2  
                             __ptext105 CF82                               __ptext130 C27E  
                             __ptext122 C1A4                               __ptext114 97C6  
                             __ptext106 BAEE                               __ptext131 CA46  
                             __ptext123 BEFA                               __ptext115 6230  
                             __ptext107 934E                               __ptext140 BD6C  
                             __ptext132 C2C6                               __ptext124 C9A6  
                             __ptext116 CFA4                               __ptext108 B130  
                             __ptext141 CF8A                               __ptext133 CA6E  
                             __ptext125 C9CE                               __ptext117 CCAA  
                             __ptext109 543C                               __ptext150 CB0E  
                             __ptext142 C754                               __ptext134 CE12  
                             __ptext126 C236                               __ptext118 8E5C  
                             __ptext151 C560                               __ptext143 CA96  
                             __ptext135 CE40                               __ptext127 C9F6  
                             __ptext119 C354                               __ptext160 CED8  
                             __ptext152 CBD4                               __ptext144 CABE  
                             __ptext136 CE56                               __ptext128 C92C  
                             __ptext161 CF04                               __ptext153 CFB2  
                             __ptext145 C00E                               __ptext137 CE82  
                             __ptext129 CA1E                               __ptext170 CF14  
                             __ptext162 9928                               __ptext154 9BD8  
                             __ptext146 BB60                               __ptext138 B64E  
                             __ptext171 CC40                               __ptext163 C520  
                             __ptext155 AB00                               __ptext147 CF32  
                             __ptext139 CE6C                               __ptext180 CCCC  
                             __ptext172 CFB6                               __ptext164 CC1C  
                             __ptext156 C4E0                               __ptext148 BBCA  
                             __ptext181 CB60                               __ptext173 CFAC  
                             __ptext165 CFB4                               __ptext157 CBF8  
                             __ptext149 CAE6                               __ptext190 CF54  
                             __ptext182 C900                               __ptext174 C8D4  
                             __ptext166 346E                               __ptext158 C64A  
                             __ptext191 CF60                               __ptext183 CB88  
                             __ptext175 B97E                               __ptext167 C0BA  
                             __ptext159 9018                               __ptext192 0000  
                             __ptext184 CD0E                               __ptext176 CFB8  
                             __ptext168 CF3C                               __ptext185 CDE0  
                             __ptext177 CFBA                               __ptext169 BA76  
                             __ptext186 CC64                               __ptext178 BC34  
                             __ptext187 C10C                               __ptext179 CB38  
                             __ptext188 CF24                               __ptext189 CF48  
                             _hid_input 9E5A                      __end_of_StartTimer C4E0  
                    _set_load_relay_one CEB8                      _set_load_relay_two CEA8  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00F6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR C8D4  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 01EE  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 76FA                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 8184  
                __size_of_wait_lcd_done 0022                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
              __size_of_DATAEE_ReadByte 0032                               _lp_filter 8E5C  
                           _hid_display 882A                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize BD6C  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0021                                _INT0_ISR CF14  
                              _INT1_ISR C560                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 027D  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                          _SPI1CON0bits 003D14                            _SPI1CON1bits 003D15  
                             _set_dac_a C720                               _set_dac_b C6EC  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack CC1C  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0048                               _set_vterm CD6A  
                   __size_of_update_lcd 0110                             _help_button C612  
                              _TMR3_ISR 9928                             _BVSOC_TABLE F8E3  
                              _TMR5_ISR AB00                                _TMR6_ISR CDE0  
                             _port_data 04FF                     __size_of_static_soc 005A  
                             _vfpfcnvrt 24C2                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack CBF8  
                            _ADCON0bits 003EF8                      __end_of_check_help 8C58  
                             _start_lcd CF9E                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 001E                           _TMR6_CallBack CC64  
                        _write_cal_data AE4A                   __size_of_send_lcd_cmd 0040  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc CFA4  
                      _set_display_info CD88                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 AA2A                               copy_data1 AA50  
                             copy_data2 AA72                _INT0_SetInterruptHandler CABE  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler C9CE  
           _UART2_SetTxInterruptHandler C9A6                            _uart1RxCount 00A9  
                          _uart2RxCount 00A6                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 00A8                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
            __end_of_current_sensor_cal 5DB0                __size_of_conv_raw_result 04BC  
                         _wait_lcd_done CC88                            _send_lcd_cmd C460  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
         __size_of_get_ac_charger_relay 000E                        __size_of___aomod 0240  
                       _adc_int_handler CFBA                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
         __size_of_set_ac_charger_relay 0010                      __end_of_get_switch C8D4  
               __size_of_check_day_time 01A0                  __end_of_write_cal_data AF08  
                 __end_of_DMA1_DMAA_ISR CF5E                      ___fpclassifyf@F463 0060  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0200  
                              ___xxtofl 8C58                       ?_DMA1_DMADCNT_ISR 0021  
           __size_of_check_enter_button 0072                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand CEF6                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0027                        __size_of_set_dac 00B6  
                              __ptext10 A838                                __ptext11 C788  
                              __ptext20 AF08                                __ptext12 C7BA  
                              __ptext21 882A                                __ptext13 A92C  
                              __ptext30 AE4A                                __ptext22 9E5A  
                              __ptext14 CBB0                                __ptext31 BC9E  
                              __ptext23 76FA                                __ptext15 C420  
                              __ptext40 AFC2                                __ptext32 BDD2  
                              __ptext24 C5D8                                __ptext16 C460  
                              __ptext41 BD06                                __ptext33 CE96  
                              __ptext25 CF6A                                __ptext17 CD2E  
                              __ptext50 CC88                                __ptext42 8A46  
                              __ptext34 CF72                                __ptext26 CEA8  
                              __ptext18 C956                                __ptext51 BFB4  
                              __ptext43 9F92                                __ptext35 A742  
                              __ptext27 CEB8                                __ptext19 8184  
                              __ptext60 24C2                                __ptext52 C15A  
                              __ptext44 A638                                __ptext36 C8A8  
                              __ptext28 CEE8                                __ptext61 667C  
                              __ptext53 B3DC                                __ptext45 C87A  
                              __ptext37 CF92                                __ptext29 58F8  
                              __ptext70 127E                                __ptext62 B7F6  
                              __ptext54 CF98                                __ptext46 C682  
                              __ptext38 B6E0                                __ptext71 B87A  
                              __ptext63 C7EA                                __ptext55 CF9E  
                              __ptext47 A528                                __ptext39 B8FE  
                              __ptext80 9A8A                                __ptext72 C81A  
                              __ptext64 C39A                                __ptext56 B5BC  
                              __ptext48 B334                                __ptext81 5DB0  
                              __ptext73 ABE2                                __ptext65 6DA2  
                              __ptext57 740E                                __ptext49 CD4C  
                              __ptext90 CDC4                                __ptext82 C30E  
                              __ptext74 6A36                                __ptext66 9D1A  
                              __ptext58 BE36                                __ptext91 B28A  
                              __ptext83 83CA                                __ptext75 91B8  
                              __ptext67 94D4                                __ptext59 B1DE  
                              __ptext92 7F10                                __ptext84 7C90  
                              __ptext76 9654                                __ptext68 860A  
                              __ptext93 C068                                __ptext85 B76E  
                              __ptext77 C1EE                                __ptext69 79D2  
                              __ptext94 C84A                                __ptext86 A414  
                              __ptext78 AD86                                __ptext95 CD6A  
                              __ptext87 B482                                __ptext79 A2FC  
                              __ptext96 CEC8                                __ptext88 B524  
                              __ptext97 CD88                                __ptext89 A0C0  
                              __ptext98 CDFA                                __ptext99 CEF6  
                      __size_of_isupper 0030                   __end_of_read_cal_data A92C  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1227999 79E4                                us1158999 5DCA  
                              us1239999 6E08                                us1248999 66FC  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma B28A                    __end_of_Volts_to_SOC AFC2  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 127E                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                     dac_spi_control@init 0043  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0021  
                 __end_of_init_port_dma C7EA                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 0084  
                             stoa@F1166 0100                      ??_DMA1_DMASCNT_ISR 0027  
          __end_of_ADCC_StartConversion CEA8                                _spi_link 01D0  
                              _wdtdelay BFB4              __end_of_UART2_Transmit_ISR C92C  
                              _spinners A742                                _vfprintf B1DE  
              __end_of_convert_adc_data B07A              __end_of_PWM8_LoadDutyValue C420  
  __end_of_TMR3_DefaultInterruptHandler CFB6   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler CFB4    __end_of_INT1_DefaultInterruptHandler CFB4  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler CFB2  
                    _send_port_data_dma C0BA                           ??_Default_ISR 0021  
                           _uart1RxHead 0047                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0044                             _uart1RxTail 00AA  
                        _get_raw_result CDA6                             _NVMCON1bits 0039E5  
                           _uart2TxHead 00A8                             _uart2RxTail 00A7  
                             spinners@s 01E4                             _uart2TxTail 0046  
             __size_of_cal_current_zero 008E                            _wait_lcd_set CF98  
                    _EXT_INT_Initialize C754    __end_of_TMR6_DefaultInterruptHandler C15A  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler C10C  
                     _send_lcd_data_dma C15A    __end_of_ADCC_DefaultInterruptHandler CFBA  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler CFB8  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long C420          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help CED8                   __end_of_calc_ror_data 94D4  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString B482  
                 __end_of_mode_lamp_dim CE12                 __end_of_adc_int_handler CFBC  
              __size_of_convert_dac_raw 0118                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd A638  
                _uart2TxBufferRemaining 0045                      __end_of_static_soc BFB4  
                    __end_of_start_bsoc CCCC                          _FVR_Initialize CF8A  
                __end_of_get_raw_result CDC4                        _send_lcd_cmd_dma CD4C  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 009C  
      __end_of_INT1_SetInterruptHandler CABE               __size_of_UART1_Initialize 0048  
              __size_of_dac_spi_control 007A               __end_of_send_lcd_data_dma C1A4  
                      ??_DMA1_DMAOR_ISR 0027               __end_of_send_lcd_cmd_long C460  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR CFB2  
        __end_of_PIN_MANAGER_Initialize B6E0               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump A0C0                 _eaDogM_WriteStringAtPos B334  
                         _get_vterm_ptr C87A                          _check_adc_scan CF6A  
             __size_of_UART2_Initialize 0060  
